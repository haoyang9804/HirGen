import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
def vmobj_to_list(o, dtype="float32"):
    if isinstance(o, tvm.nd.NDArray):
        return [o]
    elif isinstance(o, tvm.runtime.container.ADT):
        result = []
        for f in o:
            result.extend(vmobj_to_list(f, dtype))
        return result
    else:
        return o


mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_0 = relay.var("var_0", dtype = "float32", shape = ())#candidate|0|()|var|float32
uop_1 = relay.log10(var_0.astype('float32')) # shape=()
uop_3 = relay.sqrt(uop_1.astype('float64')) # shape=()
uop_5 = relay.sqrt(uop_3.astype('float32')) # shape=()
uop_7 = relay.rsqrt(uop_3.astype('float32')) # shape=()
bop_9 = relay.floor_divide(uop_5.astype('float32'), uop_1.astype('float32')) # shape=()
uop_12 = relay.atanh(uop_7.astype('float64')) # shape=()
bop_14 = relay.logical_or(uop_12.astype('bool'), var_0.astype('bool')) # shape=()
uop_17 = relay.atanh(uop_12.astype('float32')) # shape=()
uop_19 = relay.rsqrt(uop_17.astype('float32')) # shape=()
uop_21 = relay.atanh(uop_7.astype('float32')) # shape=()
bop_23 = relay.power(bop_9.astype('float32'), uop_3.astype('float32')) # shape=()
bop_26 = relay.bitwise_or(uop_17.astype('uint64'), uop_7.astype('uint64')) # shape=()
output = relay.Tuple([bop_14,uop_19,uop_21,bop_23,bop_26,])
output2 = relay.Tuple([bop_14,uop_19,uop_21,bop_23,bop_26,])
func_29 = relay.Function([var_0,], output)
mod['func_29'] = func_29
mod = relay.transform.InferType()(mod)
var_30 = relay.var("var_30", dtype = "float32", shape = ())#candidate|30|()|var|float32
output = func_29(var_30)
func_31 = relay.Function([var_30], output)
mutated_mod['func_31'] = func_31
mutated_mod = relay.transform.InferType()(mutated_mod)
var_33 = relay.var("var_33", dtype = "uint32", shape = (9, 16, 6))#candidate|33|(9, 16, 6)|var|uint32
const_34 = relay.const([[[2,9,6,6,-8,-10],[9,-8,2,9,1,-4],[9,-1,6,4,-3,-4],[7,-1,-2,-10,6,2],[-1,5,6,-9,5,6],[1,7,-7,3,10,-10],[4,5,-9,-7,7,-10],[-3,-10,8,-10,-7,3],[10,9,7,-4,1,-2],[-6,9,-10,8,10,2],[3,-7,10,6,5,10],[3,4,3,2,-4,3],[-2,7,-7,9,2,-2],[-5,2,2,-1,-6,-10],[-10,6,-5,-10,-10,-8],[10,8,-3,-2,-1,-6]],[[8,9,-2,-3,-5,-10],[8,9,9,-4,5,10],[-4,-6,-9,-7,2,9],[7,10,-10,2,10,-5],[-1,7,3,-5,10,-2],[-6,5,5,3,7,3],[2,7,-9,3,5,5],[9,-5,-9,-9,-5,2],[10,3,-9,-7,2,-4],[-8,10,-1,3,2,1],[6,8,-6,-3,-6,-6],[-1,-5,-6,-3,-8,-10],[-7,-10,-1,-2,-3,-8],[1,-7,-6,-1,3,1],[6,4,8,-4,-8,-3],[7,6,6,-9,7,-3]],[[7,1,1,-1,-7,-3],[-10,-1,-3,-7,-10,10],[-9,2,-5,1,10,-5],[-4,-7,1,8,-1,10],[-3,-4,-2,-8,5,6],[-6,3,-9,-4,5,3],[-3,7,-10,-8,4,8],[10,6,8,5,-9,8],[9,10,-5,-1,-8,4],[5,-2,8,6,6,3],[-6,-5,-1,4,7,5],[10,4,-2,5,4,10],[-7,-10,-10,4,3,2],[4,-3,1,5,-4,9],[-9,5,4,-5,-4,4],[10,-10,7,7,10,-2]],[[-8,4,8,-9,-10,10],[2,6,10,9,-8,-3],[1,-8,-9,-3,9,-8],[1,-4,4,8,9,1],[4,1,9,10,-3,-2],[-3,9,2,-1,-5,-5],[-10,4,-7,-1,4,-6],[6,-4,6,-9,-3,-1],[6,-8,-8,9,-8,-7],[9,-5,-10,6,8,-4],[8,-3,2,5,-5,-8],[-10,9,3,10,-4,4],[7,-9,-2,9,-6,2],[-6,5,-2,4,-3,7],[-1,-7,5,10,-3,-8],[3,6,10,9,-5,-7]],[[9,-8,-6,-8,5,3],[-7,1,-3,-7,-6,6],[-1,2,-9,-2,10,-3],[-8,-5,-6,-10,-1,-5],[9,3,-2,-1,-5,-8],[4,5,3,-2,6,-1],[-6,-7,3,-5,3,10],[-6,10,-6,6,-10,3],[6,4,3,-6,10,9],[-7,-8,10,-8,8,8],[8,-5,-4,2,4,-3],[3,7,7,7,-10,-6],[10,9,-4,6,-2,10],[9,-7,10,-1,1,6],[-6,4,7,-8,-6,9],[-3,-3,7,-10,-7,-1]],[[-7,10,2,6,1,6],[1,-9,9,10,4,-7],[-7,7,-2,-1,-1,-6],[8,-5,-3,-1,2,-3],[7,-5,7,1,-8,9],[7,8,-10,-4,-6,9],[9,6,-7,4,-4,-6],[2,-6,8,-10,-3,4],[3,-4,-7,10,3,9],[9,-6,4,-4,9,-9],[-5,-1,-9,2,7,3],[-8,-1,-1,1,-4,10],[8,4,-6,-6,4,-7],[-4,-5,6,-4,10,-5],[4,10,-4,-5,6,2],[4,3,5,3,1,-2]],[[-5,-3,-2,6,6,-5],[6,-5,-1,6,-4,5],[9,1,-5,8,9,-5],[-4,6,-6,-2,-1,7],[-3,9,-10,-7,2,10],[10,7,3,-10,-2,-7],[-9,5,6,-4,-4,6],[-7,6,4,-7,6,-4],[4,4,-10,8,-1,-1],[-6,-8,8,-8,-1,-4],[-10,9,-3,-3,-7,-6],[-1,8,9,9,-4,6],[10,-5,-8,-6,-10,-2],[-6,-9,-5,1,9,-8],[-9,-4,5,-5,5,8],[10,2,6,2,-3,6]],[[8,-6,9,7,-2,-10],[-2,3,-4,-1,-2,-2],[-6,-4,-5,-7,-10,-2],[-4,6,8,4,-1,-7],[6,9,8,-10,-6,-1],[7,-6,8,5,-4,1],[-8,-4,-10,4,-7,-5],[4,9,-10,-3,-10,-3],[6,4,2,4,8,9],[-10,-3,-5,4,-6,1],[7,4,-4,8,6,2],[5,9,5,-1,-2,2],[5,-7,10,8,4,5],[-8,8,4,3,5,3],[10,6,10,-9,5,7],[-6,5,8,7,-4,1]],[[2,-5,8,8,-4,1],[-2,1,10,5,5,-7],[-1,-1,7,10,8,6],[-5,-7,9,-3,10,-10],[-3,8,4,-3,8,-9],[5,-6,-7,10,-9,3],[7,-10,-1,9,7,4],[-5,-8,2,-9,7,2],[8,-9,1,6,9,6],[8,6,7,9,-10,4],[-4,-6,8,6,2,-2],[9,-2,6,2,5,1],[1,-1,-7,-10,-8,2],[6,2,5,-10,6,7],[-10,-7,-7,7,10,-7],[-5,-6,5,10,7,-9]]], dtype = "uint32")#candidate|34|(9, 16, 6)|const|uint32
bop_35 = relay.multiply(var_33.astype('uint32'), relay.reshape(const_34.astype('uint32'), relay.shape_of(var_33))) # shape=(9, 16, 6)
uop_38 = relay.tan(const_34.astype('float64')) # shape=(9, 16, 6)
uop_40 = relay.asinh(uop_38.astype('float32')) # shape=(9, 16, 6)
uop_42 = relay.log(uop_40.astype('float32')) # shape=(9, 16, 6)
bop_44 = relay.subtract(const_34.astype('uint32'), relay.reshape(var_33.astype('uint32'), relay.shape_of(const_34))) # shape=(9, 16, 6)
uop_47 = relay.acos(uop_42.astype('float32')) # shape=(9, 16, 6)
const_49 = relay.const([[[-8.609832,-7.671493,-4.939273,-3.813901,-8.880823,3.880526],[8.808428,6.621248,-4.370261,2.839513,-1.030217,6.699851],[0.597022,9.394527,9.848796,1.493684,-7.602876,-7.245300],[-3.934928,9.112462,8.495847,-9.639805,3.843541,6.722717],[-3.414653,7.002167,9.395906,3.289224,-9.081052,0.483387],[7.891911,6.410330,-1.206072,-8.230129,-6.908810,-8.660597],[6.454221,-9.954862,-6.744879,-1.229171,-3.123909,6.826075],[4.150842,-4.208281,-2.045746,7.390121,-2.741252,2.486680],[-5.448035,-4.358012,0.950121,-3.409885,0.620719,0.597730],[-1.069723,9.335395,8.731980,3.173690,1.616994,-8.750193],[1.932244,0.505321,-3.456738,-6.126019,8.939399,0.434122],[6.505057,1.170441,0.496519,-7.080074,-0.389307,-0.863709],[9.042382,-8.335659,-7.502599,-5.563542,-6.099415,1.973125],[-8.226390,-2.143246,-9.584776,-2.922468,2.701391,6.329516],[2.469799,8.674240,9.713784,6.115036,5.508826,2.792599],[8.100833,8.017753,8.165225,-9.841147,-9.620011,3.382158]],[[2.227660,7.254715,0.417924,6.650037,-1.244688,8.230951],[-6.550689,-9.625168,-8.850180,5.279237,1.802758,-5.629889],[-7.276708,-0.199698,8.064128,0.171632,-9.458964,8.541635],[9.163265,-6.328156,9.690053,1.845771,-7.707230,9.833238],[3.510247,-4.659902,7.503423,-0.343320,-2.038881,5.316796],[-2.027187,-4.173005,5.669162,9.930606,-5.363104,-4.265141],[6.539839,1.188726,-7.363636,-2.985500,-5.960950,-5.268332],[0.286267,6.895874,-2.959824,6.523064,8.871626,4.534574],[-1.705997,-9.746674,-4.086934,-8.972081,-8.514704,0.231610],[5.022093,2.574327,1.553231,3.514442,-4.934132,-7.914162],[0.693622,7.546089,9.459140,8.175699,7.830863,-6.889481],[7.386027,6.437591,-6.985699,-8.090426,1.475314,4.087193],[0.469560,4.680057,6.660749,-3.300637,-6.129883,-3.251347],[-0.945506,6.789761,5.572440,2.275670,-0.097360,-6.787371],[-6.232553,-2.367481,-9.847437,-5.715902,3.389795,5.081903],[2.580843,0.751507,-1.249928,2.887149,-9.070337,-1.831076]],[[-9.518625,-3.138575,9.671581,3.917749,1.443173,3.916422],[-8.401509,0.264721,4.159090,-4.592545,9.971664,-8.872024],[6.540821,-6.319198,-9.401361,0.438327,2.513017,-4.825770],[8.742204,-2.947856,9.251416,-0.421283,3.810475,0.928700],[2.900383,3.550504,-9.007163,-1.484082,4.229232,5.772794],[9.585618,-9.132703,-8.547200,7.957056,-1.659078,-5.861618],[8.655100,6.042606,-6.024373,-0.931933,8.729125,-9.457510],[3.142140,6.084905,-1.278694,6.464041,-2.990074,-0.669430],[-3.059925,-9.398859,7.949782,-6.107403,2.124878,1.214335],[0.974795,6.547903,4.590526,-7.137335,-5.576723,7.747145],[-4.831349,3.285502,-9.822777,7.316257,6.096255,1.096852],[-6.369199,-8.672966,-4.860345,0.075134,4.699622,-2.299724],[6.061430,9.962365,-2.542139,-2.051936,0.828514,4.457529],[0.115951,-7.877890,-4.877953,8.408152,-9.371906,2.002500],[7.416181,-8.547965,8.578888,0.296132,8.270623,3.743273],[2.093713,-8.197301,4.293471,-6.830900,-9.881196,3.128474]],[[-3.767828,7.929204,-7.679518,6.770361,6.029200,-7.962172],[-2.230481,9.154321,4.544966,-9.344000,-7.103289,1.617661],[-2.746640,-0.531750,7.495490,-8.099799,-7.032544,-3.969265],[-5.739223,-6.054477,1.285417,-0.224217,-9.623671,2.008434],[-9.452533,-7.847868,-4.807472,-8.396775,9.632158,8.617395],[2.361455,1.259388,6.710843,-8.002533,4.046013,6.329883],[-9.769373,4.301430,-9.023264,-0.362076,-1.708581,0.760421],[-3.827873,6.738263,3.470500,-9.712897,-4.205671,-2.829926],[5.943369,5.246441,-9.136174,0.575837,4.579822,0.774269],[0.577090,-9.111075,6.373902,-7.053058,-6.195850,4.785167],[-7.455910,-4.976532,2.001727,-6.336626,3.747634,-2.892535],[1.945308,-9.110811,-6.573150,-4.016891,0.756193,9.972488],[-7.791149,4.550809,8.740270,-0.740490,-2.180646,2.402028],[-2.991012,8.946796,8.885108,2.935022,4.486365,7.230335],[0.065675,-3.563423,2.496369,1.649368,8.620988,-8.484569],[-2.913585,1.394469,0.062961,-2.727204,-2.613975,7.578400]],[[9.238935,-7.188659,6.526156,-6.776808,0.191126,8.542114],[-5.536067,4.507061,5.891010,0.790446,-4.157680,9.052034],[6.410791,7.057363,5.174447,3.281147,3.215928,3.980980],[-4.572458,-4.089779,-4.000839,-6.610052,-6.020856,1.061285],[6.518151,8.301968,8.244070,7.070501,9.607942,-5.264102],[4.688138,9.296163,-8.229602,1.990348,4.747921,-9.493042],[-8.399267,-0.577596,-2.291716,-2.837618,-4.197080,-6.807131],[-0.018603,-2.161819,-9.425300,-9.851291,6.968157,6.684967],[7.828930,-7.531976,-5.018777,-3.777160,4.293509,6.478058],[-9.339306,6.629700,-6.799547,-5.750553,3.467847,-0.900616],[-8.820248,0.937784,-6.149103,1.127784,-7.096933,-2.961787],[-4.006668,4.063412,-0.738641,-0.778967,-8.217807,3.740257],[0.235619,-9.612449,0.072565,-4.484797,0.721511,3.201744],[-2.243048,6.224691,-2.819928,7.845065,4.264819,-3.634511],[-0.919460,-0.498699,-2.144264,4.440362,-6.568224,-4.491903],[-4.748293,4.025173,-7.702248,3.698789,2.713315,9.995227]],[[2.174491,-5.502904,0.003738,-3.617524,0.555780,4.942168],[-6.951771,6.845801,-8.621741,-6.853270,2.219143,-1.270685],[-0.559853,-6.919233,3.725567,5.474449,4.368720,2.776817],[-6.838104,-1.590171,-4.449309,5.876493,-3.184260,4.908438],[-6.435101,3.663995,0.605578,-6.178118,5.110227,6.464021],[-9.626808,7.978487,2.640729,1.296173,-6.538206,4.599522],[5.593069,-8.946554,-2.010703,-6.721307,3.338098,-9.514884],[2.481293,0.556145,6.548626,3.362483,3.431030,9.628796],[7.930798,2.700832,-6.145059,4.102378,4.006179,8.503890],[3.642283,7.328377,0.374255,-8.181899,-9.067614,-4.112592],[-2.458182,6.331459,-1.361754,-0.063562,4.325617,-7.677516],[7.332739,2.422711,3.004518,-2.772204,-3.107324,2.498997],[0.457145,6.810400,6.063904,0.049619,2.261722,-0.048722],[-4.664253,-1.278054,-7.041871,4.525420,-9.213916,-2.844450],[-7.047799,-7.763868,-9.061344,-8.245556,4.128409,3.846263],[5.160074,2.209448,-4.287921,5.264484,-0.321776,-2.810569]],[[-2.892262,-8.208214,2.139080,-4.744654,5.232579,-5.108518],[-1.980089,5.513006,-8.784056,0.861700,-6.920875,4.142128],[-2.519533,3.912974,-4.656444,4.284700,8.668283,4.560112],[-0.211376,-5.006316,-5.787730,-4.876431,-4.520838,2.393432],[-7.364413,-5.633954,3.592955,1.608916,-0.262774,-8.279528],[4.834106,7.770912,-5.531206,5.524570,-8.111375,-5.769768],[-0.822134,-5.884167,1.147168,-5.295843,-8.002031,-0.487157],[-9.202668,8.662826,-7.849090,4.252240,8.536667,-8.920210],[9.178096,-5.788217,-9.492844,-2.090309,9.917153,7.043759],[-7.787223,0.930977,-1.864466,-2.515212,0.273628,-7.027421],[-0.390065,4.963588,-1.747122,4.316267,0.468346,-1.308135],[-6.361638,7.226816,3.652185,-1.050703,-6.679741,-2.169151],[1.924726,6.692129,-8.013118,-0.645692,9.944384,-0.098137],[-4.795511,2.667855,1.531685,6.983290,-6.922739,-7.890748],[0.173177,-8.865471,-4.263195,-7.969534,2.955835,-4.633650],[9.498337,-1.486241,3.205324,3.810588,-5.650483,5.826299]],[[-7.142523,-7.179536,0.813428,-4.782542,4.098885,-0.065688],[7.341566,-8.734853,-9.817628,-5.560222,3.070745,-6.353772],[3.406919,-2.612448,-1.161275,0.348426,-4.892842,-9.749728],[-9.856221,-2.509643,8.677147,2.891113,-6.717917,3.282761],[5.405411,-0.431557,0.375259,6.633474,-3.833795,-4.033001],[6.375897,0.634548,4.108159,-6.065752,-5.328634,-6.225275],[9.134053,-3.273017,7.868769,3.946551,1.867006,6.876265],[-0.388854,8.289964,4.752887,-4.173514,-3.362551,-1.184646],[9.398201,5.724418,-7.020498,5.065754,-6.393897,8.529547],[0.822812,-9.768937,-4.544626,9.335321,-1.472463,-8.821674],[1.552076,-2.919951,-0.544059,8.807416,1.658405,-1.652392],[-6.517774,-5.136686,5.041504,-3.147890,-2.593054,-9.229287],[9.971440,2.963873,-1.166090,5.635723,-5.474920,4.264430],[-4.146935,-5.489929,-4.185930,3.691096,-8.478203,3.590098],[7.851696,5.796403,-2.762783,9.868894,2.529474,6.038234],[-0.669100,9.327685,-0.402543,4.212349,-7.459308,1.635636]],[[-8.701543,6.285986,-6.718218,8.467658,0.503834,6.822278],[-5.840780,1.014160,6.808864,9.677267,2.051943,1.152028],[-5.581738,-3.343476,-5.222369,7.338894,4.567151,-9.187639],[1.351413,4.887810,-8.123367,-4.634595,7.988712,-0.461429],[-5.743412,-6.902256,5.088249,8.953319,3.794457,-3.621473],[7.810576,-5.163325,-1.400243,-0.139221,-0.789637,-6.519115],[-5.649700,9.343292,-7.049013,4.100054,-4.007995,-4.798497],[1.719350,0.858956,-9.915708,-5.701625,0.383960,-1.961773],[0.672528,1.867037,-4.721394,-6.641390,-3.055468,2.863526],[-9.098600,9.868445,-2.478054,-0.876685,1.293950,-5.363553],[5.116696,-5.598912,-6.953582,-9.298859,5.729709,4.489113],[-8.925518,9.729558,-0.448718,8.113505,5.732176,7.359664],[1.579348,2.918717,3.759640,-1.856624,-9.748254,1.085458],[9.263607,4.598321,9.768842,-7.589831,-1.768059,-1.068017],[-5.747821,6.168506,-3.322142,-8.862851,-7.500277,-2.968011],[5.404511,-2.968204,6.187562,-6.809316,-8.350571,-8.534168]]], dtype = "float32")#candidate|49|(9, 16, 6)|const|float32
bop_50 = relay.logical_or(uop_42.astype('bool'), relay.reshape(const_49.astype('bool'), relay.shape_of(uop_42))) # shape=(9, 16, 6)
uop_53 = relay.sin(uop_47.astype('float32')) # shape=(9, 16, 6)
uop_55 = relay.log2(uop_53.astype('float64')) # shape=(9, 16, 6)
var_57 = relay.var("var_57", dtype = "float64", shape = (9, 16, 6))#candidate|57|(9, 16, 6)|var|float64
bop_58 = relay.mod(uop_55.astype('float32'), relay.reshape(var_57.astype('float32'), relay.shape_of(uop_55))) # shape=(9, 16, 6)
bop_61 = relay.less(bop_50.astype('bool'), relay.reshape(var_33.astype('bool'), relay.shape_of(bop_50))) # shape=(9, 16, 6)
bop_64 = relay.bitwise_xor(uop_53.astype('uint8'), relay.reshape(bop_58.astype('uint8'), relay.shape_of(uop_53))) # shape=(9, 16, 6)
var_67 = relay.var("var_67", dtype = "float32", shape = (9, 16, 6))#candidate|67|(9, 16, 6)|var|float32
bop_68 = relay.subtract(uop_47.astype('int8'), relay.reshape(var_67.astype('int8'), relay.shape_of(uop_47))) # shape=(9, 16, 6)
bop_71 = relay.less(uop_40.astype('bool'), relay.reshape(var_33.astype('bool'), relay.shape_of(uop_40))) # shape=(9, 16, 6)
uop_74 = relay.exp(uop_53.astype('float64')) # shape=(9, 16, 6)
const_76 = relay.const([[[-1.237835,-9.882015,0.655489,-1.445702,0.292943,-2.898757],[0.628124,-4.872753,7.824575,1.475194,8.318273,-2.092281],[-2.144399,-7.055298,0.366291,2.585192,8.142516,-9.697763],[8.470380,-7.340442,5.840627,6.363389,-1.907830,1.389948],[-9.429872,-2.494538,1.074190,-6.910835,-0.583785,-8.561858],[-5.987159,2.349879,7.770337,9.279573,-3.551683,-1.150926],[-5.036840,-8.279962,6.524907,-2.879530,-3.378282,1.534617],[0.904746,1.791071,-8.683005,-4.027044,1.326702,8.976554],[4.363874,-9.969444,-9.404921,4.238109,-2.282117,3.368960],[-7.531681,4.620991,-1.370971,-2.739144,5.587530,1.182147],[2.338849,-0.053815,4.759885,-6.279674,-9.965118,-3.019859],[3.370631,2.812836,8.789381,6.536475,-6.867588,-8.524470],[4.273753,8.529832,-0.712624,7.351066,-4.320835,1.643698],[3.667575,-1.713012,-5.216822,-8.267271,-0.318129,2.786488],[-9.577813,4.385547,-7.625987,-4.049599,-8.142080,-1.502610],[-0.867071,7.637719,5.957155,3.650062,-4.689257,5.674124]],[[-9.145232,-4.014046,1.564643,8.692508,-4.189368,1.052563],[-2.905269,-1.282156,0.624760,-3.829409,-3.696687,-4.433373],[-3.889520,-8.102664,9.131484,5.399995,9.425172,-7.032729],[3.556166,8.221850,6.191453,-8.398662,-5.846871,-2.602473],[8.632967,1.767379,-7.465991,-9.707833,7.024180,1.558824],[-9.650256,9.751472,-5.717063,-0.765169,1.327576,7.535796],[-9.587670,-2.979109,8.869025,-4.651404,5.858144,-3.661739],[0.095094,-1.621114,-1.568788,2.298043,-2.604550,-3.541181],[0.226645,9.302815,-5.877285,7.884717,-0.524091,9.686304],[-6.151911,7.061464,-9.413801,-7.054661,-7.047036,-6.075703],[-4.096296,6.970452,-4.841042,-9.857304,-4.610371,-4.703594],[-9.101625,-0.822175,-7.628642,-9.010048,2.020066,-3.138855],[-2.205809,-4.038548,-5.176567,0.063938,-0.611915,2.217079],[-8.464821,-7.435823,7.076547,-8.919859,-1.852924,0.547955],[-9.011461,-8.152734,5.492194,5.715549,5.080847,-5.992127],[0.553698,-3.134613,-7.353562,-9.240603,2.995650,8.305610]],[[-4.036113,7.820860,-8.980892,8.260958,-9.212097,6.484634],[-1.242571,4.327429,-1.591204,6.535488,4.118989,0.656239],[-7.513056,7.905364,7.305143,-7.273142,-7.451861,-7.340624],[-0.030063,9.694991,6.821658,-8.356656,-1.757468,1.468472],[6.845016,-4.595841,2.953409,-4.733041,1.829705,1.576457],[0.005166,-4.371566,2.955874,-8.361396,-3.741033,4.544388],[-1.505124,-0.372220,5.852585,8.009789,-6.045357,-1.675011],[-0.168112,6.809850,-5.936033,-8.186537,8.023402,2.232709],[5.512662,-4.142322,2.653110,-2.536172,-9.705495,-3.592337],[-4.654171,-9.601757,0.846807,-6.587050,-0.698266,-9.628342],[7.645661,-3.417363,9.409740,2.420596,2.730839,4.533709],[8.863727,2.080745,-1.343563,-0.421559,3.562179,5.053815],[9.910536,-0.808029,-4.870874,-0.517152,1.980522,-4.051153],[-8.509585,-5.481776,5.440914,-3.158143,8.524163,-4.129578],[-9.032842,-1.682889,-6.569527,-3.796626,-1.416996,3.104584],[0.213644,-5.313119,-5.089810,-4.303387,-0.089114,-3.232749]],[[-1.133656,9.543496,-8.148475,8.586041,-2.703124,7.107272],[1.963237,-2.633241,-4.556088,-4.603818,5.821946,8.036274],[6.773177,-7.656701,-6.196780,-4.866339,6.289891,-2.083500],[1.853755,-1.488404,4.074708,-2.342494,-6.698744,-6.890320],[-3.791256,-7.988303,1.803426,6.838423,5.831271,9.138028],[7.739812,-1.002911,8.411121,-6.368928,-8.838883,-1.482428],[-2.690317,2.375603,4.402902,-7.286549,-3.594319,8.108812],[-7.400696,9.342967,-3.204979,9.141277,-3.492962,-4.099392],[-4.045068,-1.462055,-8.058038,-7.702838,-6.569915,2.712870],[-1.171455,1.651152,-7.409967,-7.149209,-6.521613,8.359592],[-0.989116,-6.006106,-4.237741,-5.539849,3.157297,-7.218832],[9.703163,9.741322,-7.348523,2.175405,-4.393261,5.194178],[2.089103,0.932355,1.827767,-1.833704,3.425621,-5.941140],[-7.159510,-4.707194,-2.341277,8.859314,2.052553,5.849165],[8.402878,-9.716640,2.553400,-2.748339,-4.630111,-1.338769],[-0.993374,6.362735,5.561443,-5.127761,2.938920,-5.589539]],[[5.810057,9.695046,-7.642599,-7.885890,-2.131845,7.772269],[-1.642381,-0.982748,4.293505,0.252044,-0.808244,7.738363],[-4.053877,1.514425,-6.435606,3.195226,6.269343,-8.272161],[9.077030,6.543860,-1.048209,-4.049566,-5.972820,6.067638],[0.609057,-4.196813,6.190014,-1.440801,2.291870,4.019490],[3.675744,7.093008,-5.177893,-9.247696,-2.041443,5.557769],[-8.883233,7.269444,-4.737762,-3.061568,9.032002,2.493098],[-7.605705,0.258437,7.803697,1.754824,1.075748,4.723515],[-7.668315,-3.710584,9.799832,6.900770,7.057494,5.938041],[1.124409,2.756264,-6.044940,-5.060867,-7.916750,-4.320721],[-5.521236,-6.288890,-0.591711,3.198794,8.678109,7.948768],[0.383756,-1.192115,3.547315,8.956255,3.981677,-3.514528],[2.863961,-4.493485,-2.076798,-2.096050,-8.044804,-6.214028],[-0.871635,-7.000346,0.465321,1.431715,-5.956766,4.787838],[7.403491,3.968124,-6.882097,-3.691282,-1.008013,6.196422],[8.478320,1.901085,0.414319,-6.964276,-0.427933,2.658061]],[[-9.705944,-9.656168,7.470664,-5.607249,-7.082014,1.729818],[4.825043,5.130899,1.699228,-3.109000,-1.005787,-0.424959],[-2.406340,9.515199,2.688886,-0.368700,3.700343,7.793308],[6.646593,1.202939,7.220036,-0.636999,-2.592965,-1.858942],[-2.339266,-2.387367,-6.664342,-3.568641,9.691705,4.091349],[7.504969,-4.779948,0.939299,9.893248,-7.061028,-4.483811],[7.027949,-6.599081,-9.204840,1.374062,-1.669267,3.056870],[6.294080,8.068949,-4.011893,2.763954,-1.857615,-4.587704],[6.195509,-5.902617,7.861735,9.523751,3.416267,-9.467731],[-1.430252,3.926022,-0.250478,-1.099717,-3.056944,-5.676413],[-5.175374,-7.522813,-1.478490,-9.610289,-0.093771,9.488968],[-2.376588,5.377851,-5.348754,4.038573,0.752113,4.646512],[-6.973239,5.240321,0.960327,7.577283,-8.907709,5.149841],[-8.640657,-9.829074,-9.342335,-6.429143,0.754372,6.745796],[-6.889908,-1.769480,0.517345,8.799173,4.338094,-9.482154],[-8.884971,8.729393,-1.846969,4.035861,-9.623327,7.673951]],[[3.975973,9.280182,0.844787,6.205790,-2.285867,-3.410206],[5.321252,8.554512,-4.824011,-5.121266,4.948857,1.073109],[-2.276526,-2.973447,9.450569,7.017924,-3.459302,4.136785],[4.844478,4.909269,-8.197242,0.705449,0.300048,6.812279],[9.348078,-6.370558,8.952356,-5.811020,4.239666,-8.784203],[-6.332752,9.847905,5.788905,3.349096,8.928929,-4.686655],[-1.607564,-1.518137,-4.090038,4.356698,5.377076,-9.904352],[-0.093501,-8.362396,1.779942,-0.979137,-0.382110,-5.245892],[-8.993292,8.294829,-1.130516,8.942570,0.364897,-4.052325],[5.302431,5.242549,-1.251364,5.734336,-9.784033,-1.213206],[1.658961,-2.543905,-7.150170,6.129492,-5.026266,0.700338],[-9.984929,5.922093,-0.233802,6.935625,3.354343,-5.535298],[-2.830769,-0.677607,2.677352,-2.632193,6.981219,-9.692178],[-0.985326,-8.851928,-9.255448,9.398865,6.818148,8.548278],[9.776263,6.353790,7.508240,-6.692523,-5.028491,5.811941],[7.398436,-4.552687,-5.504847,-4.008887,-0.697877,0.417111]],[[-0.939771,1.418645,2.628281,2.265474,6.043207,2.354290],[-4.338620,-3.515408,1.594531,-2.326633,9.941987,4.442511],[-4.929320,-0.786280,2.348040,6.261332,1.322938,9.503770],[4.755345,8.692858,9.416822,-5.905241,-9.678186,-0.977078],[-6.872054,-0.599127,5.935726,6.908343,0.200133,-0.491393],[0.113893,1.976311,-9.674430,6.213768,3.693349,-7.581780],[8.427825,2.520033,4.522554,9.744567,-7.844204,-2.314657],[-3.902576,3.112817,9.756080,-4.161323,-1.804030,3.071752],[-1.169983,-8.482311,1.444371,-8.309817,3.335003,-9.731660],[-5.021305,-7.147740,1.577674,-9.967000,-5.860567,-2.772311],[-1.091419,-7.052096,-2.431912,7.591151,-0.912336,-0.106422],[1.938844,1.343429,-1.233805,8.086161,8.572122,-4.669652],[-6.968729,-4.664888,-2.458186,6.530148,9.819478,3.003552],[2.616203,-8.746617,2.626636,-9.776285,-5.223580,5.238212],[9.307407,6.140043,4.839203,-5.103768,-1.091774,-6.595202],[9.397384,1.875818,-2.925886,-6.739457,-3.021528,5.346204]],[[6.488352,-0.874041,1.334266,6.495052,-7.121051,-3.951585],[-2.176666,-3.914316,5.034318,6.852681,-2.609687,-8.021442],[-5.915965,-0.618646,1.362088,-1.435520,4.492129,-0.266219],[-2.195271,-0.470547,-1.656930,-1.096171,5.572349,-3.488983],[-0.658878,4.074755,-7.868661,4.652917,-8.126407,6.629591],[4.704347,-0.673065,-7.823436,-6.650303,-3.155225,-9.844233],[8.797248,8.524733,4.473706,2.608545,-4.958166,-9.110955],[-4.606696,6.144675,7.890966,8.967075,-0.101785,-5.577952],[-9.118625,2.448597,8.161929,-2.207351,0.024484,2.144802],[6.398969,-7.350129,2.721418,-3.592410,-6.917920,-7.083665],[4.443538,-3.635617,3.817903,-1.877566,1.879577,9.617347],[7.558094,3.548029,0.890199,8.384270,-5.657057,-9.654936],[-2.797271,7.995312,-0.258051,1.840272,0.436386,5.413017],[-4.662809,9.405320,-8.121397,-1.312332,-4.129058,-8.604311],[-4.478343,-7.494420,5.823956,-9.386891,8.738183,-2.953354],[5.680585,8.367283,2.571180,0.450434,4.789771,-1.545194]]], dtype = "float32")#candidate|76|(9, 16, 6)|const|float32
bop_77 = relay.minimum(uop_53.astype('int32'), relay.reshape(const_76.astype('int32'), relay.shape_of(uop_53))) # shape=(9, 16, 6)
uop_80 = relay.asinh(uop_74.astype('float32')) # shape=(9, 16, 6)
uop_82 = relay.asin(bop_77.astype('float64')) # shape=(9, 16, 6)
bop_84 = relay.equal(uop_80.astype('bool'), relay.reshape(uop_82.astype('bool'), relay.shape_of(uop_80))) # shape=(9, 16, 6)
uop_87 = relay.cos(uop_55.astype('float32')) # shape=(9, 16, 6)
bop_89 = relay.divide(uop_80.astype('float64'), relay.reshape(uop_42.astype('float64'), relay.shape_of(uop_80))) # shape=(9, 16, 6)
uop_92 = relay.sin(bop_89.astype('float32')) # shape=(9, 16, 6)
const_94 = relay.const([[[-0.557690,-7.982758,-7.053198,-9.596341,0.795807,-3.038676],[-1.250693,-7.768482,-1.009949,-5.454902,8.155857,-6.183720],[0.414590,-7.553759,-4.429984,-1.232442,-7.616407,-7.198501],[-5.529978,0.537009,3.822393,0.958326,6.067740,-0.595551],[-6.543725,1.036479,-0.271576,7.289822,-9.409404,-2.848284],[3.314076,1.310737,8.920670,-0.097916,9.591818,-0.746427],[0.179657,-8.169031,6.161491,6.338789,8.201500,8.348205],[-3.685584,2.044083,-6.082591,1.495776,9.095014,-8.825423],[-1.386534,-7.717612,-7.068879,-5.007445,5.551154,-6.906226],[8.960385,-4.729296,2.675854,-0.759153,-4.388735,-1.220077],[-2.730970,-9.461900,8.665508,-2.271925,0.001138,1.656343],[1.157707,-9.674050,-8.528253,1.924594,-7.980959,-9.195399],[-6.118022,8.465889,6.044684,9.026967,4.631183,7.979430],[-5.530518,-3.277073,-4.649347,-9.544934,-2.759964,-1.018988],[4.444052,-1.381613,5.636758,1.850792,-4.613693,-5.801284],[2.234368,6.001283,6.069328,5.805116,-3.917903,-6.432748]],[[1.402101,2.369521,5.500258,-0.369471,9.977770,-4.697918],[4.721606,-7.664037,-3.257851,2.422768,9.557083,-9.940140],[9.288224,-2.265061,8.868665,5.549259,4.966559,-4.834515],[-5.376111,-5.948983,-5.667695,6.859009,-9.041340,6.188257],[-5.848208,-4.942984,8.098853,0.968490,-5.815070,-3.395412],[-4.198144,-0.657403,-6.280512,-6.209115,5.380376,9.072350],[5.562354,-9.367234,-1.672967,-4.058064,-8.564488,-0.262995],[7.970892,3.078341,-2.623911,5.745990,1.406382,-4.674628],[4.626776,-3.637135,3.294487,-6.267704,-3.164919,6.043902],[-6.612395,-6.401309,-2.600568,-4.275663,-8.489855,-5.501830],[5.557898,8.054182,6.662332,8.073553,-8.109717,-2.041361],[4.348725,-8.662128,8.543832,-1.899352,6.058518,-3.873126],[-3.392773,7.263125,-4.041296,8.651023,3.408176,-5.818760],[-8.695899,8.433842,-3.173558,7.015637,-6.063898,9.536518],[2.974926,5.100829,-3.870279,-7.278740,-0.583421,6.337204],[3.044554,6.786461,5.264655,-5.759603,0.625328,-6.719867]],[[1.208478,0.071556,4.495386,0.985320,-8.897354,1.972618],[-2.718271,6.990904,7.425626,-4.038866,0.680960,-9.516316],[6.563653,5.364175,-9.453942,-0.581990,7.643259,-3.910033],[0.354479,4.969166,-1.752288,-3.129214,-3.580048,-3.692997],[8.884904,3.863053,-9.702349,2.388154,-3.416461,-4.972791],[6.674933,-7.359164,-4.157998,1.924249,-3.252953,5.175144],[-3.627049,6.130083,-2.183669,-9.337558,-0.818691,-5.794749],[3.778522,3.982003,-7.541683,7.201680,-1.129687,-2.139058],[-4.832478,-7.697002,-5.568810,6.370068,-8.778492,-9.300496],[-6.253495,-0.196692,-8.687915,3.812442,-5.136884,0.605875],[-8.241723,-7.250297,-4.490345,5.672821,4.105062,2.589346],[-7.627602,-2.506723,5.136174,7.788961,7.720488,8.648144],[-5.704067,-8.819333,9.755206,-1.358861,-7.674131,-7.165633],[8.216622,6.680288,-0.940963,7.291678,6.469990,1.509519],[-7.149307,0.581247,-7.884206,6.870058,2.123475,5.156579],[8.863546,5.951527,1.643815,-5.967821,0.425923,7.714560]],[[-7.466418,-9.183098,-5.799413,-8.477916,-2.715543,-7.317247],[-5.444004,-1.525718,9.236436,-8.779849,6.422212,-4.445039],[-5.958474,6.760155,-0.969970,2.224680,4.879428,6.797597],[0.544257,-8.297520,4.377131,-1.638818,-3.239169,7.685479],[-6.275884,-9.840795,4.988080,-8.328714,3.767869,-3.684778],[-9.612219,-1.758740,5.186189,5.349270,-5.969254,9.195096],[0.535054,8.474119,-3.635674,7.103182,0.015411,-2.677848],[8.175467,-1.696327,-6.724324,-6.314075,-2.736806,9.714330],[-3.873305,-3.490265,-2.103558,-5.113620,0.617542,-1.604232],[1.963063,-4.189583,7.793318,5.256166,-4.627638,-3.255167],[-9.932637,0.937250,9.646045,0.775663,-8.760325,-9.431039],[7.824984,-4.206590,7.011207,-4.957533,-5.892176,1.572352],[4.121778,-1.927228,-2.959359,-8.256866,-5.147022,2.415268],[-7.436824,9.091589,-7.384399,-1.409145,9.386115,-9.301930],[5.666962,5.384668,8.816063,4.343018,9.449161,-3.071412],[-9.744812,9.205200,2.493202,9.473700,7.627831,-2.883585]],[[-3.459290,8.127906,8.707123,-7.389660,-9.817216,-3.578607],[-9.212601,-2.258777,-4.008583,9.628212,3.954450,4.350976],[8.765096,2.453719,4.193218,-5.313231,-9.669353,8.560857],[8.982206,-8.983028,9.376092,-7.454178,-2.277989,-5.843125],[2.715321,-1.391806,-2.643232,8.949726,-6.572196,-0.864306],[-7.463831,8.780230,-7.892082,-7.273018,9.815654,9.527558],[-3.613927,-8.947256,-8.461823,7.781392,9.891601,-9.774899],[2.758266,3.495200,-8.209999,0.387740,2.487614,7.255766],[-6.920347,2.110723,-3.667249,-2.580715,-9.383568,-5.834662],[9.084562,5.230497,6.091362,-9.488248,0.389084,-3.747810],[4.989135,2.692724,-3.434070,-7.449419,-8.592447,-1.298815],[-0.442727,3.486008,-0.751183,7.336614,9.440215,-7.722655],[8.534028,5.802818,-0.040429,-5.721770,-5.236467,-1.856619],[2.740402,6.630799,9.755430,-0.167231,-7.790396,-6.149203],[4.604114,7.335362,-7.235205,8.726851,-8.537653,1.534873],[-4.270476,5.277223,0.376611,-1.889878,-3.492980,-3.336904]],[[3.741199,-9.406907,6.371580,-8.391203,-9.382468,4.939883],[8.203703,-2.790564,-8.644916,4.803099,-2.578257,2.742786],[-5.608974,-0.248545,1.780912,-7.688509,3.251749,-2.793356],[-7.539041,-8.356792,-4.539786,3.953432,-7.805853,-2.736547],[7.395517,-7.644411,-3.671812,2.702099,5.290129,7.934238],[7.958241,4.601374,-1.264978,1.183396,6.600743,-2.172727],[9.489821,5.349563,9.892447,-4.219443,7.428224,-2.819624],[-5.791111,9.844713,3.340941,-0.119352,-5.802278,-8.186409],[-8.241790,3.518272,6.028797,6.819947,-4.962469,-1.824783],[-9.822679,-1.771511,5.247880,3.926811,8.817637,7.354765],[-8.334946,0.678226,-8.363324,9.964913,0.258617,-4.898624],[-5.654643,2.307666,-3.230027,9.311523,1.862332,5.582588],[-0.242653,-2.949519,9.860213,6.458912,-8.217416,-8.351062],[-6.375105,2.988258,7.748195,-9.616483,7.411845,-0.378479],[4.751735,8.447078,8.023893,-0.681185,7.875387,2.418922],[-4.985785,-9.752292,3.239707,4.416078,9.254669,6.664045]],[[-5.718790,-8.894439,-8.201604,-1.483002,-9.820424,-7.494983],[-7.847530,-3.381625,8.399873,-6.562993,-5.427188,-2.222719],[4.771676,6.917846,-2.565872,8.884427,-3.780353,1.728612],[-7.105184,-9.029749,8.998682,1.270443,7.345261,0.674534],[4.093383,9.044898,6.106962,-7.296522,7.718373,3.190137],[-7.183481,4.818685,-6.197783,5.328752,-9.954356,-9.337613],[-1.509600,5.622497,4.931449,4.704647,-5.947376,-0.820869],[-7.444915,-5.374727,-6.373571,-4.502396,9.720495,1.337853],[-2.615898,-9.551211,-6.009647,-2.976463,-9.053203,7.620199],[-7.545193,1.404675,6.015254,-1.822065,-1.522551,3.626309],[-1.754426,4.363625,4.570461,-0.118286,-0.248261,-0.721792],[5.457022,7.853046,-0.522641,3.619937,1.655130,2.623640],[-7.041025,4.462505,2.299335,3.715403,-4.345795,1.947597],[7.851765,5.129997,-5.175073,-6.213773,-4.772773,-8.281283],[-3.863650,5.316749,-2.762074,-5.239789,8.539750,5.443872],[7.171317,-1.764448,1.180339,3.516468,5.882969,-2.425063]],[[5.265739,4.626176,2.475507,-9.179987,3.281010,5.622110],[4.959739,-5.435898,6.532519,7.455908,-3.073131,-7.694985],[1.064460,-7.724256,-1.652277,-7.957712,-9.204651,5.649606],[9.147693,0.705065,-5.372115,-4.000286,3.426564,-4.887988],[-9.647374,5.335240,3.886053,7.912530,4.157556,-9.848086],[-7.905757,0.460895,-0.626987,-9.647886,5.081692,8.502368],[6.998261,4.644649,-4.987309,5.258716,3.862178,-1.185252],[0.246914,2.051838,5.527857,-6.014103,-0.145704,-5.063985],[6.606410,8.681293,3.093861,-8.029818,-6.324242,7.351608],[2.979446,-0.675932,8.363300,7.682808,-3.145967,9.952054],[-0.111779,9.338500,-4.619746,-9.599649,5.757757,-0.416708],[-5.903299,9.616164,-0.931803,2.766905,3.702402,-3.132615],[-3.813836,2.033837,-8.442656,3.334494,2.235230,2.661223],[-9.551594,5.771111,8.161146,-3.200326,-7.501152,2.139612],[-9.911518,-7.491586,-7.810843,-0.129212,-5.347065,1.814537],[9.683781,-0.471193,7.127791,-7.631065,8.941349,3.844387]],[[3.832282,-5.894976,7.832859,-1.188317,-6.241560,-0.198510],[8.762849,-6.152469,-6.188639,-3.376344,-7.716815,-9.993474],[-5.362804,8.884456,-7.238411,8.274324,5.082310,8.572846],[4.452002,-5.385173,-1.588479,-7.014664,-2.176430,-4.581898],[-0.209586,-5.008935,3.071071,-6.854085,5.365181,4.878462],[2.015539,4.564487,-4.748993,2.921494,-9.424479,7.160458],[-9.794897,-2.327858,-9.455813,-5.079563,0.939719,4.922348],[3.887874,-4.147395,-5.953555,9.420551,-0.153577,-0.598273],[3.023172,-8.362924,0.731606,5.205750,0.092275,-2.677569],[-4.760147,-0.617590,0.737779,-7.076574,-6.699076,0.353280],[-8.042204,-9.521540,0.759962,3.769690,-0.749754,-9.554568],[7.413025,-9.874251,5.207217,9.411029,4.066169,6.823986],[2.149328,9.795526,1.614712,-8.186106,4.175692,-4.180518],[0.696906,-2.239241,-6.592871,-0.118109,-2.776925,-6.227788],[0.840849,7.167732,-6.729771,-9.696418,-1.564534,8.066920],[-7.319511,3.159266,-6.619126,1.039922,8.695773,0.279069]]], dtype = "float64")#candidate|94|(9, 16, 6)|const|float64
bop_95 = relay.floor_divide(uop_55.astype('float64'), relay.reshape(const_94.astype('float64'), relay.shape_of(uop_55))) # shape=(9, 16, 6)
uop_98 = relay.acos(uop_92.astype('float32')) # shape=(9, 16, 6)
bop_100 = relay.bitwise_or(uop_92.astype('uint16'), relay.reshape(uop_80.astype('uint16'), relay.shape_of(uop_92))) # shape=(9, 16, 6)
uop_103 = relay.asinh(uop_92.astype('float32')) # shape=(9, 16, 6)
output = relay.Tuple([bop_35,bop_44,bop_61,bop_64,bop_68,bop_71,bop_84,uop_87,bop_95,uop_98,bop_100,uop_103,])
output2 = relay.Tuple([bop_35,bop_44,bop_61,bop_64,bop_68,bop_71,bop_84,uop_87,bop_95,uop_98,bop_100,uop_103,])
func_105 = relay.Function([var_33,var_57,var_67,], output)
mod['func_105'] = func_105
mod = relay.transform.InferType()(mod)
mutated_mod['func_105'] = func_105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_105_call = mutated_mod.get_global_var('func_105')
var_107 = relay.var("var_107", dtype = "uint32", shape = (9, 16, 6))#candidate|107|(9, 16, 6)|var|uint32
var_108 = relay.var("var_108", dtype = "float64", shape = (9, 16, 6))#candidate|108|(9, 16, 6)|var|float64
var_109 = relay.var("var_109", dtype = "float32", shape = (9, 16, 6))#candidate|109|(9, 16, 6)|var|float32
call_106 = func_105_call(var_107,var_108,var_109,)
output = call_106
func_110 = relay.Function([var_107,var_108,var_109,], output)
mutated_mod['func_110'] = func_110
mutated_mod = relay.transform.InferType()(mutated_mod)
const_112 = relay.constdtype = "float32")#candidate|112|(14, 16, 12)|const|float32
var_113 = relay.var("var_113", dtype = "float32", shape = (14, 16, 12))#candidate|113|(14, 16, 12)|var|float32
bop_114 = relay.mod(const_112.astype('float32'), relay.reshape(var_113.astype('float32'), relay.shape_of(const_112))) # shape=(14, 16, 12)
func_29_call = mod.get_global_var('func_29')
func_31_call = mutated_mod.get_global_var('func_31')
const_118 = relay.const(-5.009548, dtype = "float32")#candidate|118|()|const|float32
call_117 = relay.TupleGetItem(func_29_call(relay.reshape(const_118.astype('float32'), [])), 3)
call_119 = relay.TupleGetItem(func_31_call(relay.reshape(const_118.astype('float32'), [])), 3)
uop_120 = relay.asinh(var_113.astype('float64')) # shape=(14, 16, 12)
bop_122 = relay.maximum(var_113.astype('int8'), const_118.astype('int8')) # shape=(14, 16, 12)
bop_125 = relay.greater_equal(uop_120.astype('bool'), relay.reshape(bop_114.astype('bool'), relay.shape_of(uop_120))) # shape=(14, 16, 12)
uop_128 = relay.asinh(uop_120.astype('float64')) # shape=(14, 16, 12)
var_130 = relay.var("var_130", dtype = "float64", shape = (14, 16, 12))#candidate|130|(14, 16, 12)|var|float64
bop_131 = relay.mod(uop_128.astype('float32'), relay.reshape(var_130.astype('float32'), relay.shape_of(uop_128))) # shape=(14, 16, 12)
uop_134 = relay.rsqrt(uop_128.astype('float64')) # shape=(14, 16, 12)
uop_136 = relay.cosh(uop_134.astype('float64')) # shape=(14, 16, 12)
bop_138 = relay.floor_mod(uop_136.astype('float64'), relay.reshape(bop_122.astype('float64'), relay.shape_of(uop_136))) # shape=(14, 16, 12)
bop_141 = relay.greater(uop_136.astype('bool'), relay.reshape(uop_134.astype('bool'), relay.shape_of(uop_136))) # shape=(14, 16, 12)
bop_144 = relay.equal(bop_138.astype('bool'), relay.reshape(bop_141.astype('bool'), relay.shape_of(bop_138))) # shape=(14, 16, 12)
var_147 = relay.var("var_147", dtype = "float64", shape = (14, 16, 12))#candidate|147|(14, 16, 12)|var|float64
bop_148 = relay.mod(uop_134.astype('float32'), relay.reshape(var_147.astype('float32'), relay.shape_of(uop_134))) # shape=(14, 16, 12)
bop_151 = relay.divide(bop_125.astype('float32'), relay.reshape(bop_148.astype('float32'), relay.shape_of(bop_125))) # shape=(14, 16, 12)
uop_154 = relay.tan(bop_148.astype('float64')) # shape=(14, 16, 12)
var_156 = relay.var("var_156", dtype = "float32", shape = (14, 16, 12))#candidate|156|(14, 16, 12)|var|float32
bop_157 = relay.greater(bop_151.astype('bool'), relay.reshape(var_156.astype('bool'), relay.shape_of(bop_151))) # shape=(14, 16, 12)
uop_160 = relay.sigmoid(bop_157.astype('float64')) # shape=(14, 16, 12)
uop_162 = relay.log10(bop_138.astype('float64')) # shape=(14, 16, 12)
bop_164 = relay.greater_equal(bop_141.astype('bool'), relay.reshape(uop_154.astype('bool'), relay.shape_of(bop_141))) # shape=(14, 16, 12)
uop_167 = relay.exp(uop_160.astype('float32')) # shape=(14, 16, 12)
output = relay.Tuple([call_117,bop_131,bop_144,uop_162,bop_164,uop_167,])
output2 = relay.Tuple([call_119,bop_131,bop_144,uop_162,bop_164,uop_167,])
func_169 = relay.Function([var_113,var_130,var_147,var_156,], output)
mod['func_169'] = func_169
mod = relay.transform.InferType()(mod)
var_170 = relay.var("var_170", dtype = "float32", shape = (14, 16, 12))#candidate|170|(14, 16, 12)|var|float32
var_171 = relay.var("var_171", dtype = "float64", shape = (14, 16, 12))#candidate|171|(14, 16, 12)|var|float64
var_172 = relay.var("var_172", dtype = "float64", shape = (14, 16, 12))#candidate|172|(14, 16, 12)|var|float64
var_173 = relay.var("var_173", dtype = "float32", shape = (14, 16, 12))#candidate|173|(14, 16, 12)|var|float32
output = func_169(var_170,var_171,var_172,var_173,)
func_174 = relay.Function([var_170,var_171,var_172,var_173,], output)
mutated_mod['func_174'] = func_174
mutated_mod = relay.transform.InferType()(mutated_mod)
var_176 = relay.var("var_176", dtype = "float64", shape = (16,))#candidate|176|(16,)|var|float64
uop_177 = relay.acosh(var_176.astype('float64')) # shape=(16,)
uop_179 = relay.tan(uop_177.astype('float32')) # shape=(16,)
bop_181 = relay.floor_divide(uop_177.astype('float64'), relay.reshape(var_176.astype('float64'), relay.shape_of(uop_177))) # shape=(16,)
bop_184 = relay.less_equal(var_176.astype('bool'), relay.reshape(uop_179.astype('bool'), relay.shape_of(var_176))) # shape=(16,)
bop_187 = relay.floor_mod(uop_179.astype('float32'), relay.reshape(uop_177.astype('float32'), relay.shape_of(uop_179))) # shape=(16,)
uop_190 = relay.sqrt(bop_181.astype('float32')) # shape=(16,)
bop_192 = relay.equal(uop_190.astype('bool'), relay.reshape(bop_187.astype('bool'), relay.shape_of(uop_190))) # shape=(16,)
bop_195 = relay.add(uop_179.astype('int64'), relay.reshape(uop_177.astype('int64'), relay.shape_of(uop_179))) # shape=(16,)
var_198 = relay.var("var_198", dtype = "float64", shape = (16,))#candidate|198|(16,)|var|float64
bop_199 = relay.maximum(var_176.astype('float32'), relay.reshape(var_198.astype('float32'), relay.shape_of(var_176))) # shape=(16,)
uop_202 = relay.log2(uop_177.astype('float32')) # shape=(16,)
uop_204 = relay.asin(bop_195.astype('float64')) # shape=(16,)
const_206 = relay.const([7.029768,-0.891392,1.144026,5.296817,-0.862808,4.811937,-6.733649,4.905068,3.363172,3.909374,-0.867776,-4.782981,4.335197,0.589866,-9.209657,1.790224], dtype = "float64")#candidate|206|(16,)|const|float64
bop_207 = relay.logical_and(uop_204.astype('bool'), relay.reshape(const_206.astype('bool'), relay.shape_of(uop_204))) # shape=(16,)
bop_210 = relay.less_equal(uop_179.astype('bool'), relay.reshape(uop_202.astype('bool'), relay.shape_of(uop_179))) # shape=(16,)
uop_213 = relay.acos(uop_204.astype('float32')) # shape=(16,)
var_215 = relay.var("var_215", dtype = "bool", shape = (16,))#candidate|215|(16,)|var|bool
bop_216 = relay.power(bop_207.astype('float64'), relay.reshape(var_215.astype('float64'), relay.shape_of(bop_207))) # shape=(16,)
uop_219 = relay.acos(uop_177.astype('float64')) # shape=(16,)
uop_221 = relay.asinh(uop_213.astype('float32')) # shape=(16,)
uop_223 = relay.atan(uop_221.astype('float64')) # shape=(16,)
var_225 = relay.var("var_225", dtype = "float64", shape = (16,))#candidate|225|(16,)|var|float64
bop_226 = relay.floor_divide(uop_223.astype('float32'), relay.reshape(var_225.astype('float32'), relay.shape_of(uop_223))) # shape=(16,)
uop_229 = relay.tan(uop_223.astype('float32')) # shape=(16,)
uop_231 = relay.cosh(bop_226.astype('float32')) # shape=(16,)
uop_233 = relay.sin(uop_221.astype('float64')) # shape=(16,)
uop_235 = relay.atanh(uop_223.astype('float64')) # shape=(16,)
uop_237 = relay.cosh(uop_231.astype('float32')) # shape=(16,)
bop_239 = relay.subtract(uop_233.astype('uint8'), relay.reshape(uop_179.astype('uint8'), relay.shape_of(uop_233))) # shape=(16,)
uop_242 = relay.sinh(uop_237.astype('float32')) # shape=(16,)
bop_244 = relay.maximum(bop_184.astype('uint64'), relay.reshape(uop_204.astype('uint64'), relay.shape_of(bop_184))) # shape=(16,)
bop_247 = relay.left_shift(uop_242.astype('uint32'), relay.reshape(bop_199.astype('uint32'), relay.shape_of(uop_242))) # shape=(16,)
bop_250 = relay.maximum(uop_242.astype('float64'), relay.reshape(bop_226.astype('float64'), relay.shape_of(uop_242))) # shape=(16,)
uop_253 = relay.tan(bop_250.astype('float64')) # shape=(16,)
func_169_call = mod.get_global_var('func_169')
func_174_call = mutated_mod.get_global_var('func_174')
const_256 = relay.const([4.633694,-6.721656,5.875252,9.826496,-2.721755,-6.025683,3.463893,-6.713907,3.829079,5.728538,3.860557,6.330702,6.634538,4.204849,-9.261269,4.844587,-9.641950,-0.955236,-8.424742,-7.161540,1.465618,-6.194945,7.407767,4.182669,2.241919,4.159983,9.344838,3.949537,3.573306,-1.189406,3.991804,6.779224,0.025043,7.678413,1.802013,0.252758,6.830129,5.229164,-6.579495,8.209669,8.274700,-6.778137,-5.358287,1.378395,-6.219847,5.076358,3.470180,-3.614051,-2.801092,-1.410853,2.553426,-5.851657,-8.193297,6.810639,-4.076278,-8.826029,-2.806630,-7.259389,-2.504335,-4.866001,1.218919,5.232970,-2.148038,-1.824354,6.102422,-4.148609,-3.655091,4.314526,4.792533,3.338466,-5.032860,8.279700,-3.050228,4.811562,-6.647262,-4.472286,3.717635,-6.810004,4.507774,-5.904143,-0.109363,1.504549,4.231821,5.026708,3.637376,-3.611128,-6.581707,-1.254161,5.644009,8.448330,8.147120,-1.245003,9.942232,-5.006895,7.127748,-9.768160,-2.959640,-1.644537,-7.168789,-9.615451,-7.510980,7.094368,-7.287276,7.579513,9.135452,4.609414,-7.998818,8.930514,0.655648,-5.410440,-3.686659,-2.378122,-3.540950,-2.263831,-7.588919,5.910926,7.681946,3.484583,-7.538516,-5.967699,7.146655,9.853580,8.423098,-1.879056,-3.737169,8.275038,5.791891,3.814663,-6.216725,-9.112141,-4.442635,3.671025,3.341998,-9.320499,1.615934,4.994388,-5.553479,9.630042,-3.173083,-2.302078,-9.152056,2.594006,7.193435,-7.679283,5.797369,-0.461194,-8.231234,2.260575,-6.742932,3.872411,-7.544596,7.891271,4.170328,-4.870730,-0.221044,9.985072,-3.010511,-1.314887,8.437840,5.500344,5.339022,4.563999,5.592782,4.375397,-8.424867,-2.752808,-3.073925,8.834125,-2.383641,5.097110,1.268652,4.504850,8.128338,0.199039,-2.024224,1.012848,5.405080,0.216947,-8.682565,-7.315821,-7.770873,2.715616,-6.485916,-6.350499,8.522201,6.090692,-0.263340,-0.582421,-8.599761,5.081004,3.569033,7.817266,5.140760,7.573832,2.228695,-6.713739,-9.938583,-6.350616,-0.058197,4.449426,-2.984827,-5.632677,-1.641301,5.311489,1.050668,1.199923,5.050052,0.446910,-2.248630,-5.661053,-7.043892,3.749083,4.963547,-7.271701,-5.861516,4.594885,-9.017205,-6.870162,-3.727942,-3.985466,-0.513344,-8.061903,-4.899293,-5.712756,4.327708,-3.838432,6.947743,-0.306326,-2.971401,-6.248400,7.231133,3.724395,-9.301757,-2.470444,3.027517,-3.517685,-1.314232,-2.578399,-7.139696,3.687827,1.727026,1.303702,0.497506,1.490370,-6.085239,8.995723,1.504760,-3.432211,-7.109442,2.506640,6.985660,6.819020,-7.164366,-1.497334,-6.109288,-9.710999,0.056692,-3.952938,-5.916492,-2.206881,1.642042,-4.826982,7.414459,-0.710477,7.252901,1.568606,6.037719,-5.638431,-1.963153,-9.205109,8.759431,8.080006,6.196744,4.821132,7.414685,-4.024704,0.919018,-3.747790,7.791055,-0.328787,-0.504287,3.621306,-5.759179,2.055546,-6.358151,2.438027,7.645370,9.247637,-3.065381,-1.476682,-2.550042,8.164934,7.006734,-7.095071,-7.804469,7.216881,5.982444,2.983724,-6.392689,-3.737608,-7.307235,-6.427488,-7.070777,-7.873849,5.188839,7.796211,-8.118714,9.565653,-8.224283,-0.702830,1.546574,7.156611,0.072587,-8.827483,1.493327,-9.790232,1.895776,5.106398,-8.861157,-5.531290,-6.198052,-9.857305,-6.014265,-0.236526,7.749929,-4.348215,-7.912400,8.613078,-5.692948,-0.481397,2.560679,8.650459,0.396321,-1.397514,2.035751,7.476516,-4.180894,-9.510788,-4.999379,3.171965,2.206621,-6.692718,2.094865,6.993924,6.102240,-0.087586,3.109277,2.535174,-0.387007,-4.248150,3.831514,-9.600350,2.643877,-2.516711,7.828149,-2.194754,8.832737,6.493523,-1.587726,-6.030251,-9.414833,-0.741347,6.281585,-2.431189,-5.413322,9.655018,9.727955,5.979444,-7.055275,-7.855192,-8.336954,-7.096633,1.942141,-4.867721,9.335858,4.677486,0.015745,6.308335,-7.774105,9.646210,-3.058636,-9.201875,-8.311526,5.306367,9.811619,-6.994794,-7.929956,-2.769353,-4.579348,2.760510,5.593934,6.809085,2.684778,1.804571,1.030414,-6.284297,2.337430,3.481453,-5.820245,-5.698013,-3.612098,8.824296,-1.699637,-5.126929,2.721090,-1.427352,-9.377896,8.835008,-3.032005,8.877700,5.846730,5.044700,-3.587596,-4.672706,9.033987,4.965700,-4.009416,-5.753749,-9.854197,7.113916,5.223551,-1.746887,-8.872467,1.591127,5.234227,-7.584753,-9.687704,0.400153,-9.761605,6.729631,6.324901,9.077567,-8.229217,-6.868124,-0.073656,-6.326734,3.547633,7.809679,-2.308142,-0.269131,-1.212787,3.975313,-0.191160,6.738551,-3.621436,8.360710,2.278698,4.231596,-7.375518,-9.107414,-7.313753,-5.059853,-5.480011,0.950791,-8.258253,-4.704991,-9.456564,6.650442,-8.752290,5.151294,-7.227182,-1.544241,9.883938,0.713201,0.065722,-3.515366,-3.192235,9.357888,-8.121219,2.399641,-4.637708,5.919929,1.609994,-4.599842,-1.417384,2.331195,-5.276772,-9.122376,3.840053,1.293377,-8.070957,-7.734191,9.827684,2.569997,-5.800141,-8.213150,-5.973036,7.271220,2.107501,9.635405,1.840425,-8.613231,5.831093,0.835983,-3.015536,5.158269,-7.335627,2.332611,-0.318791,-6.344570,8.461018,6.246019,-5.227151,-2.476049,-5.656200,4.646292,-9.605152,1.234748,9.439173,-5.313480,-4.666733,-3.756755,-9.832591,-5.110423,-7.005910,8.664213,6.510151,2.182001,-0.418971,4.226790,9.637395,-6.835358,-6.788842,1.598879,0.332519,4.815164,-1.854402,-2.867478,3.474129,2.043036,5.265560,-6.262793,1.412560,0.197321,0.981225,8.015854,6.932502,-4.245883,0.221407,5.439382,7.719160,-8.499370,-0.859139,-5.189401,1.732342,0.386668,6.365538,-7.876194,4.807919,-9.004147,-9.309847,-7.858648,6.652618,-3.703572,-9.270823,1.555367,-1.915788,5.012458,7.878601,0.671818,5.353522,5.347070,-4.744066,-6.837216,8.360168,-6.836581,-5.680833,-6.966064,4.320713,-5.406655,-8.593711,7.401687,-0.828424,-4.393323,7.084681,-2.656023,-3.701033,6.109415,1.252345,5.623958,-2.567841,2.804340,-2.421565,-5.655802,-5.191518,6.844873,4.637504,2.908734,-7.464951,5.034590,5.031496,-9.830187,0.141268,-5.049942,6.110872,-7.528521,3.406061,-5.325409,4.663542,8.395579,-9.217402,-0.002672,-6.857516,5.235905,7.631862,-3.240114,-7.456525,6.725193,-6.178954,0.614162,4.022029,0.013315,0.270723,-5.382952,-1.613145,-0.701939,-2.233156,-2.982406,-4.791937,5.883816,-8.410662,2.592675,3.404518,5.550356,-1.874686,2.948008,-6.416687,5.590054,6.296030,-0.203305,6.532714,-5.839153,7.049924,-5.464432,-8.076389,-6.873319,8.237348,7.054226,-7.171924,-5.264664,9.035913,-3.686409,-6.819853,4.228135,8.063722,-7.541373,-2.163728,-7.414835,3.778433,-8.615064,3.709979,8.466276,-8.685152,2.086176,1.558900,1.869344,8.919454,-2.154988,3.500602,1.927177,1.208334,-3.432445,-8.913121,0.229385,2.005164,0.762312,-2.733637,-4.370776,-7.558309,1.487075,4.861487,-7.043214,-0.444283,7.077745,3.892595,-6.702816,-7.042269,-9.364254,-3.424000,-3.254432,4.588429,-1.248182,-4.065606,-6.831131,-5.106230,-2.332797,5.634951,-9.325954,3.376886,8.348143,5.052217,3.350890,-6.988249,-9.235835,-6.178551,7.675666,9.394394,2.176872,-3.191903,-3.738404,-0.057466,-6.510784,0.390355,0.286055,-7.587192,1.385239,5.175421,7.098544,5.037244,-2.888829,7.117195,2.626643,9.241081,-6.150636,6.603300,-9.883971,-2.526000,9.617244,3.712406,-4.276644,9.116545,6.727701,1.217478,2.581151,6.061643,-0.946378,3.382949,9.789823,-3.505563,-5.937093,-0.072501,0.325533,1.701613,-4.458813,-3.905206,5.629440,0.619573,-2.015189,2.161796,9.577057,4.501345,8.160377,7.526522,8.772488,1.762220,4.502758,-1.607298,-5.417874,0.300114,-0.956142,1.893478,-9.955569,5.691731,3.812892,-8.024495,0.640583,-5.241101,-6.065045,0.156895,-4.230115,5.974879,-6.988711,-8.508955,0.425233,4.254690,5.599869,1.330812,4.640715,-5.626191,-0.981566,6.521973,-4.445008,-9.477992,-9.528125,-5.907167,-4.747434,-1.838198,3.177033,3.649356,8.520913,0.830422,-9.876445,-8.618478,3.713047,-9.707736,8.196413,4.961068,-7.070770,-4.556610,9.652492,2.575692,-4.242897,-5.994507,-4.713034,-6.213863,-2.777909,0.333851,3.730157,1.568555,-9.123915,-8.446206,7.261043,-7.894184,6.358723,-1.825562,4.860180,5.244067,-7.373082,-5.502683,6.113074,-9.832076,-3.421172,-5.106657,5.605666,-2.481111,-0.388421,4.615837,-3.569113,4.003570,-8.330152,-8.975514,6.092000,3.674484,8.085686,-8.877676,-5.606903,-3.643963,-3.620927,-9.296387,-9.324231,-6.988777,2.518562,1.853394,4.912482,-8.367628,-2.516052,0.703027,-8.159618,1.995248,-6.382185,-7.406773,-9.901219,5.760916,-5.760831,-4.257296,-0.077541,2.658851,-6.356383,7.269271,5.926460,8.956410,-8.251848,6.687888,2.453644,-1.146554,-9.089482,8.647647,-7.009298,-0.092891,-0.356853,8.225730,8.811077,3.228982,2.457877,0.874080,-3.191210,3.473560,9.283053,4.950007,2.195019,1.488232,-2.100886,9.790042,4.983138,5.956893,-5.154522,6.747844,2.316784,-0.275376,8.649078,3.573985,-6.975982,5.520479,0.920403,2.716117,-9.726090,3.881799,9.637570,3.308545,-4.077510,-6.695933,-6.632247,-1.272941,-5.130169,-4.917002,-8.261956,5.834109,-4.722285,-3.581081,6.366812,8.114855,-6.937346,3.438331,0.350223,3.987009,3.372588,-6.092883,7.808435,-4.990632,1.545703,5.026899,-7.899397,9.830854,4.165191,4.694068,9.551755,1.382208,9.627808,7.259779,4.936593,-3.496535,-7.044427,-7.817591,0.973010,-3.521287,-7.284334,-6.284497,-9.795525,4.243705,1.702993,5.528747,5.512059,6.684099,2.560840,2.500290,5.875668,6.296579,8.614494,5.438347,-7.030915,2.717238,9.135151,-0.621171,6.702991,-9.019558,-0.324770,4.588543,-7.406916,-4.168053,3.886011,-7.710279,5.951203,1.038582,-6.008560,0.431906,-5.178298,0.417131,-5.489286,5.449575,3.533839,-1.925353,3.719054,-0.305404,-5.061208,7.523265,-4.140799,-0.473047,-3.579256,-1.859597,-2.251759,9.563134,4.738494,5.781583,-0.671759,6.948151,-7.663989,9.905812,-3.009735,7.759445,-0.357794,-6.965827,-2.839717,-3.987815,-5.024835,8.692374,-6.877875,1.388059,6.770762,4.949822,-5.483502,-5.631072,6.295071,-7.509451,1.452646,-2.490905,3.262006,-1.482832,-4.463984,-4.680653,-9.123764,9.450007,-2.291084,-3.572929,7.670844,-4.388853,-2.402729,-6.566608,-4.361307,0.038311,-9.372750,-3.474504,0.374591,-3.443044,2.440795,-6.762466,-4.511796,8.773202,4.745260,2.893070,1.134491,-8.834627,-0.694775,0.027632,2.615918,-9.420671,2.117044,3.826819,6.855017,-1.523637,-9.198731,-6.863087,-7.364267,-0.865161,0.319698,8.617459,2.724240,6.487158,-7.899528,-4.617701,7.689133,-8.530392,1.100909,6.932614,8.553725,-8.142454,1.143115,-8.812554,-9.072819,1.914171,-5.648143,-8.299123,-3.074659,9.829628,9.145125,-4.995066,-2.841712,4.022616,9.961970,0.947700,-9.135855,-3.663687,-7.394475,7.375037,0.962517,4.293680,7.781257,5.609119,1.478099,8.210620,2.537985,3.194840,-3.645875,4.846530,-7.237534,-1.405406,-6.331608,-5.408603,4.681459,9.912233,-6.153030,1.916952,3.782986,2.823968,8.607782,4.223497,-7.379956,7.948635,8.470590,-6.498631,6.294505,-2.601415,-7.913260,-0.732691,-4.207023,-0.352120,-0.634720,9.447564,6.512709,-2.901852,0.747031,8.800158,5.960052,-5.168758,2.245839,-6.046132,8.097506,8.354481,6.842636,8.022665,5.449982,-3.144850,3.608818,6.066546,-6.626191,-1.350659,1.499649,4.257139,-7.496630,4.598047,3.131470,-7.923879,-3.862843,-6.398080,3.434122,-2.297561,1.203603,2.766491,-9.756641,9.565833,-5.028627,-5.770978,8.411604,-2.867392,1.417703,-1.943863,1.131822,4.047596,-6.471171,6.549338,1.240271,-5.334015,-2.738705,-8.775042,3.445609,4.168285,0.933683,4.656951,-1.432503,-1.150188,-6.059412,-2.177207,4.949132,8.941583,3.470543,0.858121,-9.493070,2.770152,6.075401,7.518833,-6.475251,8.816678,-9.990887,-8.360526,-9.538028,-7.605852,1.438542,6.916349,-4.623199,-5.992297,6.744918,9.122585,-8.419552,5.891563,-6.430716,-5.662766,9.936409,-6.079933,-3.793421,-6.459154,4.192699,7.923564,0.475642,0.613005,-4.385665,6.245114,7.111016,7.299650,-3.669815,-7.473007,-5.898087,4.981803,-2.173104,4.987828,-5.385748,6.096801,3.864921,4.438132,2.182941,-5.710839,-1.703629,-8.135092,-5.506055,8.296632,-6.813334,7.360523,-4.828543,-3.306900,-9.834840,-6.006641,-6.817211,-4.938411,-1.442643,-9.620531,-2.912507,4.236623,8.670232,1.255177,-1.234050,-2.702668,-2.500396,9.687770,-2.308705,8.866247,4.907155,8.321021,2.149298,2.386977,8.620653,-8.215317,7.391162,7.691364,7.585423,-0.177513,2.779098,-7.346523,1.380391,3.128738,5.099600,-9.879881,-6.563010,-5.248688,-7.194578,8.778224,-7.974065,9.612589,-0.812184,-0.655002,5.100705,3.249246,9.162239,-3.265116,6.628399,-5.150639,-0.462465,0.797717,-1.448545,2.075815,-7.589029,3.679595,-9.740659,-9.558654,4.276503,-7.641517,7.381423,8.494084,4.335490,8.471116,5.122162,8.901441,2.219391,-1.048078,3.435532,-5.460021,4.001002,-0.271066,-1.532213,-2.955922,3.230555,0.651315,-7.870723,0.035658,-0.396688,-1.689141,-0.626873,-7.727651,-0.650437,3.322494,-6.639786,1.281309,1.877816,9.444466,-8.871890,3.192248,-7.157847,3.385837,-4.636047,-8.733106,8.745043,-9.463339,-7.147248,9.595363,-7.620347,-3.328359,-9.225631,-5.660129,0.093801,-3.871782,8.318033,9.916765,-0.789224,-3.706484,2.299982,1.772148,0.412409,-8.513779,-6.690266,-4.153950,0.524311,8.449584,6.848525,4.721329,6.890445,-7.600861,-7.469636,-2.204905,-4.319863,5.290157,7.799840,2.235509,-9.555940,9.239194,7.521387,8.053830,-2.381918,5.383267,-0.891575,4.618306,-7.022843,-5.856353,9.738680,3.968129,8.418791,-6.648598,6.866725,2.142251,2.929024,6.378125,0.059335,6.757177,7.547492,9.119304,-4.769360,-2.287773,-7.557865,3.860528,5.208145,-5.569904,7.021474,-8.131443,-7.784182,-2.838167,-9.295448,-5.675677,2.171402,4.631399,-6.367603,-9.852353,4.602446,2.503059,-5.576130,-8.347882,8.390302,-6.221852,3.265484,-0.701277,0.092738,5.848474,-5.700250,5.675865,-6.738444,-3.060314,8.631279,5.324124,4.690475,-8.027569,8.900145,-0.795488,3.562303,3.990600,2.916808,-7.236421,-2.389411,-1.760090,-4.817292,-9.337403,-9.884189,7.986797,-7.130256,3.077261,-9.624879,9.875927,-8.158043,-0.823670,-2.866936,-2.290009,5.963522,-5.711534,-9.377070,-2.290455,-0.869776,0.235842,-5.439067,-7.480651,9.085196,-0.939930,-1.733239,0.901147,9.594012,-2.741608,0.941973,5.959160,-9.484498,0.749523,-9.826823,9.355288,-5.598275,-5.293123,6.294075,2.076174,-7.659260,-2.206907,3.692626,9.234503,-8.766506,8.644141,-4.126932,-3.435356,-4.212133,8.265981,-5.786320,-3.833202,-8.119348,0.365148,6.257028,-8.782609,-3.015785,-2.288467,4.575123,2.676096,-0.774155,1.125130,1.686310,4.468620,6.879940,1.220368,8.125791,9.290801,-7.067362,6.367860,8.911242,1.009441,6.100621,-9.064875,1.926955,-0.482666,-8.564805,-3.581072,8.786458,6.376731,-8.617965,-5.005367,-2.236059,7.993296,-0.175143,8.597909,5.359940,-3.096927,-2.469737,5.806394,-5.751682,7.786000,2.830593,-3.581312,1.420445,-1.096026,-9.370833,6.757734,-6.537361,6.071700,-7.275206,-9.131189,7.191663,-4.685714,6.654736,9.874404,4.140517,-2.615643,-8.444819,2.033363,5.193839,-4.970343,3.583934,-3.537610,-9.546023,-0.792058,-7.534670,-1.563626,4.829774,-5.488519,-4.938572,-1.259492,-1.985785,1.462135,-1.081591,6.155760,-5.849402,0.648433,6.720726,7.823079,-7.556262,-1.353725,-0.725932,-3.743231,9.795022,3.890166,0.006454,9.510328,-6.404922,-3.214057,-3.102813,-7.741687,2.872675,-6.986575,-2.318645,2.599745,0.967806,2.977463,-5.819910,-4.524452,-6.925179,-8.782848,1.096418,-4.117724,-4.916537,-5.150491,-1.244766,4.329155,2.322478,-2.414140,7.467560,-0.455065,-2.901991,-4.064234,4.121049,-5.272343,-8.319403,5.602399,0.325762,-0.811051,8.775865,-2.539554,6.574304,5.120814,4.052352,-0.928617,6.291601,5.064668,0.096520,3.954904,-5.532364,-2.891921,-0.749090,4.974799,7.498167,5.938282,-9.245660,-5.811189,1.887095,-1.693026,-8.692970,6.495394,0.148241,4.459635,-8.838882,-3.927752,-9.806413,-5.668900,-9.391022,-6.246118,9.760689,-1.887411,5.032645,5.625917,7.165573,8.336147,3.421142,4.073367,-9.156258,9.260299,6.558500,4.853524,-6.121521,-2.408055,7.041875,0.644786,-6.731068,6.799529,-3.802909,-0.041409,-7.230623,3.299441,-1.719306,3.155408,2.084632,-4.010254,-3.691080,8.380830,0.829021,1.366100,-5.799259,4.180231,4.655098,5.173314,5.732734,0.768004,7.125071,8.845898,5.874180,-1.879908,5.300745,-4.410149,8.863596,8.172668,5.761982,3.736092,9.867869,7.166190,1.401557,-1.262392,-6.705158,0.443357,8.390762,-1.048596,7.961686,1.885208,6.062599,-1.081550,1.045883,5.686258,-1.750869,9.810135,3.331819,-7.943333,4.328533,1.088740,-7.768995,9.074212,-5.087308,1.244140,9.384197,-3.934946,-2.368704,6.702617,-6.694256,-7.647264,6.161169,-4.390812,-4.481422,-4.288184,-0.753816,-6.399758,-7.291434,-7.366463,9.722474,-5.036901,-0.269796,9.531577,3.734226,5.346778,2.345252,-9.028115,5.375767,2.802944,-4.480149,2.755409,9.068078,1.380877,6.324126,-8.911351,0.959241,1.483018,-9.238846,-1.422477,1.248563,9.469399,-7.502474,-3.790377,9.667716,6.588626,0.883314,-3.674081,-0.273493,-1.213000,7.960028,-8.307057,8.729745,-5.389596,-0.705731,4.531655,-6.308975,-3.105964,-2.084041,-1.262762,-7.176552,3.174161,-5.824912,6.910897,-2.601759,0.527730,-6.695913,-4.642864,0.817785,5.477675,-3.126926,-3.333638,-9.798159,2.581470,3.838688,-0.266287,5.545867,5.206534,5.194424,7.134539,-9.190469,3.604175,-9.044008,-0.549829,-8.573861,-4.929333,-4.474002,-3.000564,4.818780,9.969071,6.419183,2.781659,-5.646278,3.584125,4.116599,7.269869,5.246397,-3.902261,-9.864969,8.364943,3.033192,5.768734,-4.695389,-0.598659,8.870174,-0.477446,3.777077,-6.805574,-5.656338,0.130862,-6.158901,6.839279,6.281377,3.056880,-7.472037,-7.038512,-3.739321,8.015633,7.120292,0.142297,-9.247842,-6.792290,2.200882,4.891907,-6.137715,5.137866,0.095232,-3.046224,-4.775671,-5.546061,-8.303621,-9.852063,9.862668,-1.168550,4.716793,4.680646,3.661281,5.077539,-6.740416,3.605480,4.737686,2.634300,4.455396,9.240131,-2.963886,8.004099,8.971788,3.171356,0.519491,4.979854,5.316306,-3.917734,-3.033248,8.812462,-5.611032,9.910086,8.576125,-7.769263,-7.316245,6.923330,-9.152040,-7.502890,-0.141804,-8.119764,2.319057,4.983823,-6.775953,6.195166,5.496952,-4.133282,3.552825,-1.480052,-3.236700,-3.064958,-5.261987,8.367477,-9.149342,-2.460753,-2.716802,-1.735170,1.532787,-1.600960,-9.924200,-1.678897,5.083036,2.092708,5.695917,0.301196,3.569070,-3.780124,1.774586,-2.235001,5.205942,5.038428,5.357462,8.523202,9.471889,-4.742935,-4.658112,1.173410,9.263682,-9.762742,-1.452124,7.991088,5.913749,-0.451802,5.935563,-0.027196,2.429620,-5.258778,-9.751407,0.343947,-0.418331,8.114076,5.707413,-5.656463,3.972233,0.540623,-5.651872,3.414807,-4.158493,8.527720,-1.726852,5.353296,8.809133,-4.758965,9.997752,0.464450,-1.726788,-7.608913,3.846572,-5.922182,-7.983330,4.218920,-2.830831,-2.183830,-0.014216,7.115825,-3.708869,-4.962924,-7.784313,3.918503,5.048451,1.860657,1.342907,4.837325,-6.665534,2.971062,3.108335,-4.398644,-7.418427,-7.773928,-2.504915,5.267079,-1.951682,-1.733781,8.239605,8.963740,-6.174293,-1.519761,-7.164513,-1.250185,1.158798,1.573765,-1.652074,4.280937,5.610012,1.667431,1.694945,-4.716387,4.872600,-1.913702,-8.212094,3.287794,0.607649,-8.831592,0.318890,-5.919692,-5.104449,4.479147,2.633783,8.850926,-2.025205,-5.844438,-5.085959,-1.639602,7.579800,-7.846481,-6.537945,-5.361707,2.527837,7.813971,-0.993154,5.693730,-5.968256,8.297835,3.286401,-1.681615,-0.152808,4.190798,9.665026,-6.621003,3.812148,-5.809331,-3.611688,1.507500,5.962808,-2.762063,-8.697661,-7.533076,-4.611890,3.169074,8.253540,7.312999,-6.110881,-6.829337,-1.544771,2.798390,6.473156,4.631920,-2.284715,6.658566,-8.230483,3.444422,2.112664,5.856246,-5.487504,-9.973162,-1.774591,3.920253,-2.864561,-2.238510,-9.851018,-1.777685,5.938455,3.696071,-0.414767,7.659781,-6.432932,-6.322007,-6.782551,1.126487,-5.531265,-5.221108,6.141609,1.351220,8.637976,3.150798,8.390465,3.973289,5.736672,9.264743,5.490908,-9.157945,3.378572,-0.037086,-2.114655,-8.559658,2.825566,6.926046,-5.638358,-9.385858,-4.241156,9.827287,-3.546427,-0.009950,5.302484,6.051634,-4.956737,-9.851991,-9.411838,-4.283276,-1.452461,1.487998,6.027308,3.741418,-9.592858,-2.634888,3.737826,-0.017278,-7.238625,1.740641,-6.955506,3.332393,6.162493,0.614454,-7.721632,-2.998108,-8.162652,-6.758377,0.137035,-0.966675,6.197051,-3.965128,-4.203793,-4.164002,-3.378780,0.708725,3.263456,8.126103,-7.471495,-2.602277,-3.875676,-4.661268,4.216940,9.864905,-5.214261,-5.121036,-4.072066,-0.425550,1.432661,3.914793,-9.385731,1.213385,1.855805,-1.820313,0.072935,-2.935157,-7.992097,-2.434321,1.230609,-1.756836,3.119697,-7.069548,3.635789,3.393783,1.129220,-4.522936,2.241520,3.138433,1.619431,-7.005568,3.748617,-1.025442,6.270337,8.961898,-2.871453,-6.699258,-3.121157,3.293422,0.794714,-0.641719,-4.065947,5.905486,-9.995662,-4.610108,-1.828237,-3.087628,-5.088909,5.884548,-8.365474,-3.279552,-6.594704,-5.555474,8.173333,7.746800,-8.648238,-5.785689,-7.474463,-9.951742,-0.575349,-4.366988,-7.701659,-1.825079,-1.636385,-6.023316,-5.526757,5.186695,-3.621829,3.121335,-8.848028,-4.658843,0.415518,5.432681,-3.424786,-9.715174,-2.415431,-8.935488,-9.152795,4.962269,-3.157537,5.202234,1.305048,-5.466218,-1.627076,4.437571,-7.993746,-9.653195,-8.009621,9.892305,9.297748,-5.642216,5.841430,-3.665957,1.200019,-9.623327,-1.017513,0.929323,-3.085540,2.235231,5.102161,4.961869,-5.404647,7.429462,4.540607,-1.151322,8.173612,6.446620,1.936215,-7.829921,3.757654,-1.635594,-5.987411,8.425356,4.959495,6.025016,-8.519064,-5.501286,-2.197373,5.705284,8.109042,7.126255,-0.415871,4.583310,-7.937585,9.896015,-6.624120,4.406394,8.220814,6.569473,4.473226,3.091408,-0.082369,8.970597,-0.462168,-1.431303,-4.611164,-6.297987,-9.377291,-0.109272,4.684186,3.684362,3.374126,-1.000956,9.781515,-2.938948,-0.563437,-4.317705,0.568072,-1.899090,8.264437,7.865346,-7.247145,-6.138830,9.828467,1.158433,-2.606181,-5.104993,-2.494629,-4.691410,0.595741,-8.639834,4.724853,-3.520823,-2.081813,-1.533148,4.269673,2.286277,9.150493,4.030946,-3.738372,3.278609,1.881674,6.738143,-4.747098,1.330499,-9.874122,3.929497,8.753598,-3.337744,-0.671453,1.095005,2.131460,6.760423,-0.191538,4.589646,-5.900271,-0.112783,3.949623,8.667761,7.492354,6.905846,-7.996524,3.010627,-2.813768,-4.031401,-0.386552,-4.574191,-1.429795,-2.236183,-7.965502,-1.939902,-2.541237,-2.669339,-0.047514,0.340046,7.357602,4.323190,-9.227873,5.723696,-1.482473,8.694807,4.880337,-1.384702,-9.038849,-3.370237,7.335746,0.140943,4.139003,2.320019,3.427721,-0.098399,9.620620,-9.575528,-3.835399,-0.576735,6.626063,-2.088075,2.301484,7.162318,2.357641,6.394272,-4.524484,2.562720,-9.295429,2.662835,5.758530,-0.425672,3.398401,-5.001418,-4.361177,-9.095830,3.600229,-8.820954,-3.534200,-5.701607,-3.013445,-5.231764,-8.503101,-0.830967,-6.966339,-9.180919,4.642352,-3.686637,4.180080,8.453982,3.768973,-9.711553,-3.764718,9.948500,-0.583961,-4.939454,3.185817,4.884928,-8.162915,2.448288,6.835073,5.966409,-7.287789,1.732551,-3.333706,-6.170466,-9.971019,-7.744326,9.087346,0.347572,7.338338,-8.898229,-6.690560,-1.099236,-3.051650,1.882206,0.381579,-7.698757,-6.719231,-3.243670,-4.481021,-3.670706,2.899618,6.107711,2.038740,-0.728729,0.803881,1.805426,-9.205202,-6.408453,4.580517,-0.066585,-4.187991,9.717123,-8.702425,-3.554851,-0.362956,8.338876,6.870273,-4.486855,-6.263762,-0.145888,-6.182757,9.092917,5.403475,7.756361,-4.536288,-4.231175,-0.358883,3.738565,4.525265,-3.266228,3.968766,9.429815,-4.644307,4.084978,-0.632577,-2.480070,5.258528,6.424841,-7.455941,-9.744677,-6.652957,9.983840,-6.432302,8.307698,-1.256092,3.958274,7.525538,4.256940,-2.630871,-9.874070,-0.761782,2.438620,8.347308,-2.690443,0.589446,-4.857893,0.815645,7.077953,-8.500828,7.100888,-4.710856,-7.856230,8.934852,1.876579,-2.223440,-6.934022,7.268513,6.829161,-0.362554,-3.039956,-3.904203,5.158263,-6.109560,4.397407,7.239565,-4.186040,3.642572,-4.787194,-8.053438,-9.883423,5.461267,3.709474,0.962964,2.333595,-5.572285,1.699764,-5.055445,2.742642,5.039099,-1.685807,1.761335,-6.815585,2.961765,-1.044288,5.085548,8.258306,6.071489,2.816827,3.531633,6.481148,-1.878430,-6.641616,2.312805,4.915753,-4.602554,-8.780189,-5.104964,-5.742260,0.080019,5.427732,6.543724,1.944302,7.261595,0.882441,-7.926697,9.962717,-7.232910,3.383389,2.639376,-4.227317,-8.277907,6.483308,-0.025508,9.622668,-8.078428,-6.430712,5.333485,6.838165,-3.041495,6.474789,4.167029,2.770398,-1.485950,6.731802,2.123914,0.969865,-5.854037,2.763339,-1.477910,-3.508533,6.976665,-9.630655,3.428791,-6.875446,1.845565,-7.049610,-3.595743,-7.864114,-4.780179,-2.940252,1.315417,-5.775178,-2.590817,-8.304584,-0.999018,-8.224711,9.669859,-2.834476,-7.323342,-9.943270,-2.545864,-8.517430,-5.325814,9.064243,-1.917510,9.789035,4.543362,-1.932819,1.418514,-2.384894,9.678234,9.821052,4.453577,1.872589,-5.303876,6.654902,-0.324478,9.993318,-0.126333,-9.371808,-3.270257,1.943732,0.019576,-5.218840,-9.003661,-8.355941,7.945202,5.601593,1.209237,-4.590540,-1.521905,-2.691582,8.233729,-3.154612,-4.281011,-1.587884,-0.899321,-6.069185,8.531203,-7.294107,2.018077,-0.693725,-1.002598,3.732816,-4.548382,-8.068504,-0.541189,-1.629517,-2.611518,9.294044,0.547068,-8.953477,1.786677,0.818945,5.251916,7.976849,-7.825131,4.265207,3.790733,-0.853955,-5.476531,-0.676115,2.480029,-6.913681,9.414869,-3.975828,7.957346,-0.182635,7.004243,-4.907342,7.969226,1.151512,4.265199,3.766541,7.090284,-7.827824,-4.236235,-3.957689,4.874424,8.689651,9.176415,4.683755,-3.201054,7.165651,7.151065,-7.754916,7.497386,-9.280780,-5.087715,4.859371,7.019892,8.918508,6.113220,4.291645,-2.906342,9.786011,-2.347513,6.818299,1.938250,-5.645167,-4.286309,8.380270,-0.351179,-2.015046,3.666060,0.656620,9.981091,-0.394200,-3.793892,-6.337205,5.342410,-4.584140,-4.135325,-1.316413,2.836755,5.728827,-4.952695,0.993318,-4.841881,3.239184,-1.266016,3.071986,-8.002983,-0.005420,6.202428,2.667575,-0.241848,8.966841,9.645542,-2.370974,-7.090018,-9.321470,0.459841,-9.683844,4.316149,9.589196,-9.147615,-3.577908,6.364440,2.071410,0.405152,7.683678,2.769361,-2.984180,-9.138306,5.871385,-1.015384,6.677586,8.870048,-4.438488,-9.077743,-1.450397,-7.512529,6.203286,6.752378,-5.315515,3.763435,9.109616,-9.075028,-6.870382,-1.928870,-2.638397,5.632473,-1.963936,7.519086,-6.567018,8.224284,-4.097238,1.109961,7.587589,-7.372595,9.895505,3.274365,-2.292358,-5.291829,-7.912820,-8.073615,-5.679543,7.498396,9.478929,9.872889,-4.343103,-4.265208,-8.971528,-5.271583,1.357503,7.533349], dtype = "float32")#candidate|256|(2688,)|const|float32
call_255 = relay.TupleGetItem(func_169_call(relay.reshape(const_256.astype('float32'), [14, 16, 12]), relay.reshape(const_256.astype('float64'), [14, 16, 12]), relay.reshape(const_256.astype('float64'), [14, 16, 12]), relay.reshape(const_256.astype('float32'), [14, 16, 12]), ), 5)
call_257 = relay.TupleGetItem(func_174_call(relay.reshape(const_256.astype('float32'), [14, 16, 12]), relay.reshape(const_256.astype('float64'), [14, 16, 12]), relay.reshape(const_256.astype('float64'), [14, 16, 12]), relay.reshape(const_256.astype('float32'), [14, 16, 12]), ), 5)
bop_258 = relay.minimum(uop_242.astype('float32'), relay.reshape(uop_202.astype('float32'), relay.shape_of(uop_242))) # shape=(16,)
var_261 = relay.var("var_261", dtype = "float32", shape = (16,))#candidate|261|(16,)|var|float32
bop_262 = relay.bitwise_or(uop_213.astype('uint64'), relay.reshape(var_261.astype('uint64'), relay.shape_of(uop_213))) # shape=(16,)
uop_265 = relay.asinh(uop_253.astype('float32')) # shape=(16,)
bop_267 = relay.add(uop_265.astype('int64'), relay.reshape(bop_226.astype('int64'), relay.shape_of(uop_265))) # shape=(16,)
output = relay.Tuple([bop_192,bop_210,bop_216,uop_219,uop_229,uop_235,bop_239,bop_244,bop_247,call_255,const_256,bop_258,bop_262,bop_267,])
output2 = relay.Tuple([bop_192,bop_210,bop_216,uop_219,uop_229,uop_235,bop_239,bop_244,bop_247,call_257,const_256,bop_258,bop_262,bop_267,])
func_270 = relay.Function([var_176,var_198,var_215,var_225,var_261,], output)
mod['func_270'] = func_270
mod = relay.transform.InferType()(mod)
var_271 = relay.var("var_271", dtype = "float64", shape = (16,))#candidate|271|(16,)|var|float64
var_272 = relay.var("var_272", dtype = "float64", shape = (16,))#candidate|272|(16,)|var|float64
var_273 = relay.var("var_273", dtype = "bool", shape = (16,))#candidate|273|(16,)|var|bool
var_274 = relay.var("var_274", dtype = "float64", shape = (16,))#candidate|274|(16,)|var|float64
var_275 = relay.var("var_275", dtype = "float32", shape = (16,))#candidate|275|(16,)|var|float32
output = func_270(var_271,var_272,var_273,var_274,var_275,)
func_276 = relay.Function([var_271,var_272,var_273,var_274,var_275,], output)
mutated_mod['func_276'] = func_276
mutated_mod = relay.transform.InferType()(mutated_mod)
var_278 = relay.var("var_278", dtype = "float64", shape = ())#candidate|278|()|var|float64
const_279 = relay.const(7.782050, dtype = "float64")#candidate|279|()|const|float64
bop_280 = relay.power(var_278.astype('float64'), const_279.astype('float64')) # shape=()
uop_283 = relay.rsqrt(var_278.astype('float32')) # shape=()
bop_285 = relay.add(const_279.astype('uint64'), var_278.astype('uint64')) # shape=()
uop_288 = relay.atanh(uop_283.astype('float32')) # shape=()
const_290 = relay.const([-4,-7,10,-10,-2,3,8,-1,-5,8,-2,5,-10], dtype = "uint64")#candidate|290|(13,)|const|uint64
bop_291 = relay.equal(bop_285.astype('bool'), const_290.astype('bool')) # shape=(13,)
uop_294 = relay.acos(uop_288.astype('float32')) # shape=()
var_296 = relay.var("var_296", dtype = "float32", shape = ())#candidate|296|()|var|float32
bop_297 = relay.floor_divide(uop_294.astype('float32'), var_296.astype('float32')) # shape=()
uop_300 = relay.rsqrt(uop_288.astype('float64')) # shape=()
uop_302 = relay.tan(bop_297.astype('float32')) # shape=()
output = relay.Tuple([bop_280,bop_291,uop_300,uop_302,])
output2 = relay.Tuple([bop_280,bop_291,uop_300,uop_302,])
F = relay.Function([var_278,var_296,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_278,var_296,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')
input_278= np.array(-8.795223, dtype='float64')
module1.set_input('var_278', input_278)
input_296= np.array(7.534779, dtype='float32')
module1.set_input('var_296', input_296)
module1.set_input(**params)
module1.run()
res2 = intrp2.evaluate()(input_278, input_296, )
res3 = intrp3.evaluate()(input_278, input_296, )
res4 = intrp4.evaluate()(input_278, input_296, )
res2 = vmobj_to_list(res2)
res3 = vmobj_to_list(res3)
res4 = vmobj_to_list(res4)
res1_0 = module1.get_output(0).asnumpy()
res2_0 = res2[0].asnumpy()
res3_0 = res3[0].asnumpy()
res4_0 = res4[0].asnumpy()
np.testing.assert_allclose(res1_0 ,res2_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_0 ,res3_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_0 ,res4_0, atol=1e-3, rtol=1e-3)
(res1_0 == res2_0).all()
(res1_0 == res3_0).all()
(res1_0 == res4_0).all()
res1_1 = module1.get_output(1).asnumpy()
res2_1 = res2[1].asnumpy()
res3_1 = res3[1].asnumpy()
res4_1 = res4[1].asnumpy()
np.testing.assert_allclose(res1_1 ,res2_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_1 ,res3_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_1 ,res4_1, atol=1e-3, rtol=1e-3)
(res1_1 == res2_1).all()
(res1_1 == res3_1).all()
(res1_1 == res4_1).all()
res1_2 = module1.get_output(2).asnumpy()
res2_2 = res2[2].asnumpy()
res3_2 = res3[2].asnumpy()
res4_2 = res4[2].asnumpy()
np.testing.assert_allclose(res1_2 ,res2_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_2 ,res3_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_2 ,res4_2, atol=1e-3, rtol=1e-3)
(res1_2 == res2_2).all()
(res1_2 == res3_2).all()
(res1_2 == res4_2).all()
res1_3 = module1.get_output(3).asnumpy()
res2_3 = res2[3].asnumpy()
res3_3 = res3[3].asnumpy()
res4_3 = res4[3].asnumpy()
np.testing.assert_allclose(res1_3 ,res2_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_3 ,res3_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_3 ,res4_3, atol=1e-3, rtol=1e-3)
(res1_3 == res2_3).all()
(res1_3 == res3_3).all()
(res1_3 == res4_3).all()
module5.set_input('var_278', input_278)
module5.set_input('var_296', input_296)
module5.set_input(**params)
module5.run()
res6 = intrp6.evaluate()(input_278, input_296, )
res7 = intrp7.evaluate()(input_278, input_296, )
res8 = intrp8.evaluate()(input_278, input_296, )
res6 = vmobj_to_list(res6)
res7 = vmobj_to_list(res7)
res8 = vmobj_to_list(res8)
res5_0 = module5.get_output(0).asnumpy()
res6_0 = res6[0].asnumpy()
res7_0 = res7[0].asnumpy()
res8_0 = res8[0].asnumpy()
np.testing.assert_allclose(res5_0 ,res6_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_0 ,res7_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_0 ,res8_0, atol=1e-3, rtol=1e-3)
(res5_0 == res6_0).all()
(res5_0 == res7_0).all()
(res5_0 == res8_0).all()
res5_1 = module5.get_output(1).asnumpy()
res6_1 = res6[1].asnumpy()
res7_1 = res7[1].asnumpy()
res8_1 = res8[1].asnumpy()
np.testing.assert_allclose(res5_1 ,res6_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_1 ,res7_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_1 ,res8_1, atol=1e-3, rtol=1e-3)
(res5_1 == res6_1).all()
(res5_1 == res7_1).all()
(res5_1 == res8_1).all()
res5_2 = module5.get_output(2).asnumpy()
res6_2 = res6[2].asnumpy()
res7_2 = res7[2].asnumpy()
res8_2 = res8[2].asnumpy()
np.testing.assert_allclose(res5_2 ,res6_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_2 ,res7_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_2 ,res8_2, atol=1e-3, rtol=1e-3)
(res5_2 == res6_2).all()
(res5_2 == res7_2).all()
(res5_2 == res8_2).all()
res5_3 = module5.get_output(3).asnumpy()
res6_3 = res6[3].asnumpy()
res7_3 = res7[3].asnumpy()
res8_3 = res8[3].asnumpy()
np.testing.assert_allclose(res5_3 ,res6_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_3 ,res7_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_3 ,res8_3, atol=1e-3, rtol=1e-3)
(res5_3 == res6_3).all()
(res5_3 == res7_3).all()
(res5_3 == res8_3).all()
module9.set_input('var_278', input_278)
module9.set_input('var_296', input_296)
module9.set_input(**params)
module9.run()
res10 = intrp10.evaluate()(input_278, input_296, )
res11 = intrp11.evaluate()(input_278, input_296, )
res12 = intrp12.evaluate()(input_278, input_296, )
res10 = vmobj_to_list(res10)
res11 = vmobj_to_list(res11)
res12 = vmobj_to_list(res12)
res9_0 = module9.get_output(0).asnumpy()
res10_0 = res10[0].asnumpy()
res11_0 = res11[0].asnumpy()
res12_0 = res12[0].asnumpy()
np.testing.assert_allclose(res9_0 ,res10_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_0 ,res11_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_0 ,res12_0, atol=1e-3, rtol=1e-3)
(res9_0 == res10_0).all()
(res9_0 == res11_0).all()
(res9_0 == res12_0).all()
res9_1 = module9.get_output(1).asnumpy()
res10_1 = res10[1].asnumpy()
res11_1 = res11[1].asnumpy()
res12_1 = res12[1].asnumpy()
np.testing.assert_allclose(res9_1 ,res10_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_1 ,res11_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_1 ,res12_1, atol=1e-3, rtol=1e-3)
(res9_1 == res10_1).all()
(res9_1 == res11_1).all()
(res9_1 == res12_1).all()
res9_2 = module9.get_output(2).asnumpy()
res10_2 = res10[2].asnumpy()
res11_2 = res11[2].asnumpy()
res12_2 = res12[2].asnumpy()
np.testing.assert_allclose(res9_2 ,res10_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_2 ,res11_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_2 ,res12_2, atol=1e-3, rtol=1e-3)
(res9_2 == res10_2).all()
(res9_2 == res11_2).all()
(res9_2 == res12_2).all()
res9_3 = module9.get_output(3).asnumpy()
res10_3 = res10[3].asnumpy()
res11_3 = res11[3].asnumpy()
res12_3 = res12[3].asnumpy()
np.testing.assert_allclose(res9_3 ,res10_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_3 ,res11_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_3 ,res12_3, atol=1e-3, rtol=1e-3)
(res9_3 == res10_3).all()
(res9_3 == res11_3).all()
(res9_3 == res12_3).all()
module13.set_input('var_278', input_278)
module13.set_input('var_296', input_296)
module13.set_input(**params)
module13.run()
res14 = intrp14.evaluate()(input_278, input_296, )
res15 = intrp15.evaluate()(input_278, input_296, )
res16 = intrp16.evaluate()(input_278, input_296, )
res14 = vmobj_to_list(res14)
res15 = vmobj_to_list(res15)
res16 = vmobj_to_list(res16)
res13_0 = module13.get_output(0).asnumpy()
res14_0 = res14[0].asnumpy()
res15_0 = res15[0].asnumpy()
res16_0 = res16[0].asnumpy()
np.testing.assert_allclose(res13_0 ,res14_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_0 ,res15_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_0 ,res16_0, atol=1e-3, rtol=1e-3)
(res13_0 == res14_0).all()
(res13_0 == res15_0).all()
(res13_0 == res16_0).all()
res13_1 = module13.get_output(1).asnumpy()
res14_1 = res14[1].asnumpy()
res15_1 = res15[1].asnumpy()
res16_1 = res16[1].asnumpy()
np.testing.assert_allclose(res13_1 ,res14_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_1 ,res15_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_1 ,res16_1, atol=1e-3, rtol=1e-3)
(res13_1 == res14_1).all()
(res13_1 == res15_1).all()
(res13_1 == res16_1).all()
res13_2 = module13.get_output(2).asnumpy()
res14_2 = res14[2].asnumpy()
res15_2 = res15[2].asnumpy()
res16_2 = res16[2].asnumpy()
np.testing.assert_allclose(res13_2 ,res14_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_2 ,res15_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_2 ,res16_2, atol=1e-3, rtol=1e-3)
(res13_2 == res14_2).all()
(res13_2 == res15_2).all()
(res13_2 == res16_2).all()
res13_3 = module13.get_output(3).asnumpy()
res14_3 = res14[3].asnumpy()
res15_3 = res15[3].asnumpy()
res16_3 = res16[3].asnumpy()
np.testing.assert_allclose(res13_3 ,res14_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_3 ,res15_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_3 ,res16_3, atol=1e-3, rtol=1e-3)
(res13_3 == res14_3).all()
(res13_3 == res15_3).all()
(res13_3 == res16_3).all()
module17.set_input('var_278', input_278)
module17.set_input('var_296', input_296)
module17.set_input(**params)
module17.run()
res18 = intrp18.evaluate()(input_278, input_296, )
res19 = intrp19.evaluate()(input_278, input_296, )
res20 = intrp20.evaluate()(input_278, input_296, )
res18 = vmobj_to_list(res18)
res19 = vmobj_to_list(res19)
res20 = vmobj_to_list(res20)
res17_0 = module17.get_output(0).asnumpy()
res18_0 = res18[0].asnumpy()
res19_0 = res19[0].asnumpy()
res20_0 = res20[0].asnumpy()
np.testing.assert_allclose(res17_0 ,res18_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_0 ,res19_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_0 ,res20_0, atol=1e-3, rtol=1e-3)
(res17_0 == res18_0).all()
(res17_0 == res19_0).all()
(res17_0 == res20_0).all()
res17_1 = module17.get_output(1).asnumpy()
res18_1 = res18[1].asnumpy()
res19_1 = res19[1].asnumpy()
res20_1 = res20[1].asnumpy()
np.testing.assert_allclose(res17_1 ,res18_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_1 ,res19_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_1 ,res20_1, atol=1e-3, rtol=1e-3)
(res17_1 == res18_1).all()
(res17_1 == res19_1).all()
(res17_1 == res20_1).all()
res17_2 = module17.get_output(2).asnumpy()
res18_2 = res18[2].asnumpy()
res19_2 = res19[2].asnumpy()
res20_2 = res20[2].asnumpy()
np.testing.assert_allclose(res17_2 ,res18_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_2 ,res19_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_2 ,res20_2, atol=1e-3, rtol=1e-3)
(res17_2 == res18_2).all()
(res17_2 == res19_2).all()
(res17_2 == res20_2).all()
res17_3 = module17.get_output(3).asnumpy()
res18_3 = res18[3].asnumpy()
res19_3 = res19[3].asnumpy()
res20_3 = res20[3].asnumpy()
np.testing.assert_allclose(res17_3 ,res18_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_3 ,res19_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_3 ,res20_3, atol=1e-3, rtol=1e-3)
(res17_3 == res18_3).all()
(res17_3 == res19_3).all()
(res17_3 == res20_3).all()
module21.set_input('var_278', input_278)
module21.set_input('var_296', input_296)
module21.set_input(**params)
module21.run()
res22 = intrp22.evaluate()(input_278, input_296, )
res23 = intrp23.evaluate()(input_278, input_296, )
res24 = intrp24.evaluate()(input_278, input_296, )
res22 = vmobj_to_list(res22)
res23 = vmobj_to_list(res23)
res24 = vmobj_to_list(res24)
res21_0 = module21.get_output(0).asnumpy()
res22_0 = res22[0].asnumpy()
res23_0 = res23[0].asnumpy()
res24_0 = res24[0].asnumpy()
np.testing.assert_allclose(res21_0 ,res22_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_0 ,res23_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_0 ,res24_0, atol=1e-3, rtol=1e-3)
(res21_0 == res22_0).all()
(res21_0 == res23_0).all()
(res21_0 == res24_0).all()
res21_1 = module21.get_output(1).asnumpy()
res22_1 = res22[1].asnumpy()
res23_1 = res23[1].asnumpy()
res24_1 = res24[1].asnumpy()
np.testing.assert_allclose(res21_1 ,res22_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_1 ,res23_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_1 ,res24_1, atol=1e-3, rtol=1e-3)
(res21_1 == res22_1).all()
(res21_1 == res23_1).all()
(res21_1 == res24_1).all()
res21_2 = module21.get_output(2).asnumpy()
res22_2 = res22[2].asnumpy()
res23_2 = res23[2].asnumpy()
res24_2 = res24[2].asnumpy()
np.testing.assert_allclose(res21_2 ,res22_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_2 ,res23_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_2 ,res24_2, atol=1e-3, rtol=1e-3)
(res21_2 == res22_2).all()
(res21_2 == res23_2).all()
(res21_2 == res24_2).all()
res21_3 = module21.get_output(3).asnumpy()
res22_3 = res22[3].asnumpy()
res23_3 = res23[3].asnumpy()
res24_3 = res24[3].asnumpy()
np.testing.assert_allclose(res21_3 ,res22_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_3 ,res23_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_3 ,res24_3, atol=1e-3, rtol=1e-3)
(res21_3 == res22_3).all()
(res21_3 == res23_3).all()
(res21_3 == res24_3).all()

'''59: 0xffffffffffffffff
58: 0x0000563d8e1a2a63
57: __libc_start_main
56: Py_BytesMain
55: Py_RunMain
54: pymain_run_python
53: pymain_run_file
52: PyRun_SimpleFileExFlags
51: pyrun_simple_file
50: pyrun_file
49: run_mod
48: run_eval_code_obj
47: PyEval_EvalCode
46: PyEval_EvalCodeEx
45: _PyEval_EvalCodeWithName
44: _PyEval_EvalCode
43: _PyEval_EvalFrame
42: _PyEval_EvalFrameDefault
41: do_call_core
40: PyObject_Call
39: _PyObject_Call
38: PyVectorcall_Call
37: method_vectorcall
36: _PyObject_VectorcallTstate
35: _PyFunction_Vectorcall
34: _PyEval_EvalCode
33: _PyEval_EvalFrame
32: _PyEval_EvalFrameDefault
31: call_function
30: PyObject_Vectorcall
29: _PyObject_VectorcallTstate
28: _PyFunction_Vectorcall
27: function_code_fastcall
26: _PyEval_EvalFrame
25: _PyEval_EvalFrameDefault
24: call_function
23: PyObject_Vectorcall
22: _PyObject_VectorcallTstate
21: _PyFunction_Vectorcall
20: function_code_fastcall
19: _PyEval_EvalFrame
18: _PyEval_EvalFrameDefault
17: call_function
16: PyObject_Vectorcall
15: _PyObject_VectorcallTstate
14: _PyFunction_Vectorcall
13: function_code_fastcall
12: _PyEval_EvalFrame
11: _PyEval_EvalFrameDefault
10: call_function
9: PyObject_Vectorcall
8: _PyObject_VectorcallTstate
7: _PyObject_MakeTpCall
6: PyCFuncPtr_call
5: _ctypes_callproc
4: _call_function_pointer
3: ffi_call_int
2: ffi_call_unix64
1: TVMArrayCopyFromTo
0: tvm::runtime::NDArray::CopyFromTo(DLTensor const*, DLTensor*, void*)

'''