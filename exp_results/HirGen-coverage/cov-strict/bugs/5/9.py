import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
def vmobj_to_list(o, dtype="float32"):
    if isinstance(o, tvm.nd.NDArray):
        return [o]
    elif isinstance(o, tvm.runtime.container.ADT):
        result = []
        for f in o:
            result.extend(vmobj_to_list(f, dtype))
        return result
    else:
        return o


mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_69 = relay.var("var_69", dtype = "bool", shape = ())#candidate|69|()|var|bool
var_70 = relay.var("var_70", dtype = "bool", shape = (11, 1, 2))#candidate|70|(11, 1, 2)|var|bool
bop_71 = relay.logical_and(var_69.astype('bool'), var_70.astype('bool')) # shape=(11, 1, 2)
uop_87 = relay.sin(bop_71.astype('float64')) # shape=(11, 1, 2)
output = uop_87
output2 = uop_87
func_106 = relay.Function([var_69,var_70,], output)
mod['func_106'] = func_106
mod = relay.transform.InferType()(mod)
mutated_mod['func_106'] = func_106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_106_call = mutated_mod.get_global_var('func_106')
var_108 = relay.var("var_108", dtype = "bool", shape = ())#candidate|108|()|var|bool
var_109 = relay.var("var_109", dtype = "bool", shape = (11, 1, 2))#candidate|109|(11, 1, 2)|var|bool
call_107 = func_106_call(var_108,var_109,)
output = call_107
func_110 = relay.Function([var_108,var_109,], output)
mutated_mod['func_110'] = func_110
mutated_mod = relay.transform.InferType()(mutated_mod)
var_139 = relay.var("var_139", dtype = "bool", shape = (16, 8, 2))#candidate|139|(16, 8, 2)|var|bool
var_140 = relay.var("var_140", dtype = "bool", shape = (16, 8, 2))#candidate|140|(16, 8, 2)|var|bool
bop_141 = relay.logical_and(var_139.astype('bool'), relay.reshape(var_140.astype('bool'), relay.shape_of(var_139))) # shape=(16, 8, 2)
bop_146 = relay.less(var_139.astype('bool'), relay.reshape(bop_141.astype('bool'), relay.shape_of(var_139))) # shape=(16, 8, 2)
bop_152 = relay.floor_divide(bop_146.astype('float32'), relay.reshape(bop_141.astype('float32'), relay.shape_of(bop_146))) # shape=(16, 8, 2)
output = bop_152
output2 = bop_152
func_155 = relay.Function([var_139,var_140,], output)
mod['func_155'] = func_155
mod = relay.transform.InferType()(mod)
mutated_mod['func_155'] = func_155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_155_call = mutated_mod.get_global_var('func_155')
var_157 = relay.var("var_157", dtype = "bool", shape = (16, 8, 2))#candidate|157|(16, 8, 2)|var|bool
var_158 = relay.var("var_158", dtype = "bool", shape = (16, 8, 2))#candidate|158|(16, 8, 2)|var|bool
call_156 = func_155_call(var_157,var_158,)
output = call_156
func_159 = relay.Function([var_157,var_158,], output)
mutated_mod['func_159'] = func_159
mutated_mod = relay.transform.InferType()(mutated_mod)
const_525 = relay.const([[[-3.874233,-2.011351,0.400893,4.116728,3.456300,7.054127,7.730942,-8.611711],[8.259175,1.146339,-2.205532,5.307698,-8.918021,-5.193505,-3.785300,-9.338018],[2.981466,0.643590,6.210907,-0.204022,8.009059,-5.812266,4.885877,8.627517],[-3.033701,-8.402292,6.044302,-2.272795,-3.531714,-9.199572,-2.036645,7.722780],[3.387589,-3.325815,-0.411565,9.972841,9.586427,-2.392648,0.964056,2.652030],[-6.313832,-8.070086,8.065801,0.762753,-5.777009,0.287432,-8.390397,-6.269459],[3.963153,-1.388547,2.126219,3.645857,-9.743530,5.873285,8.617264,5.829216]],[[-7.174249,1.872812,-4.766175,6.243034,-6.224763,4.889812,-4.622992,-4.029293],[2.783686,2.846996,6.453429,8.066686,-9.040347,7.479253,7.090661,9.698922],[-1.319768,-7.252284,0.636000,7.583750,-1.751147,-3.038143,-3.818528,-3.507035],[3.712211,-1.656661,-5.270312,-0.471290,2.543242,-9.937729,1.967673,-9.092116],[5.540791,-9.899483,6.472712,-6.084942,3.330558,-0.903050,-6.361908,1.186853],[-3.873536,-9.943885,9.837353,1.789679,-8.925366,9.463822,3.305365,9.625566],[-6.253957,1.833459,-9.598348,0.055545,-7.648561,7.847283,-0.578710,-1.502046]],[[2.667361,2.608358,-3.175141,6.391657,2.604082,-7.045750,-6.527228,7.517870],[8.553996,-9.944253,-2.510209,5.307615,4.063503,8.606125,8.588075,-2.373966],[-8.198089,3.334678,-7.948666,1.309108,-0.035928,-3.785747,-7.979650,5.537099],[-2.111943,7.652610,-2.347847,2.687470,5.197485,1.416574,9.835185,6.019711],[-8.594245,-0.297784,4.564666,-1.614130,4.981387,2.833000,-4.557051,7.234185],[-3.842634,7.737650,-0.320149,3.636173,-8.782007,-1.144985,-7.499330,5.635965],[2.443743,-8.243024,-9.110293,-8.100641,9.863094,0.546128,-6.778940,1.598960]],[[2.419404,2.636675,4.542093,9.728388,-9.029134,5.702406,-3.380352,8.290976],[-0.147899,-7.323358,-6.533324,-4.491539,-0.953948,3.925198,0.171925,-2.717216],[3.174924,-8.997871,-1.942227,-9.482929,3.686437,1.076194,6.198020,6.687509],[-8.182129,-7.521680,-8.237565,3.076160,-2.075201,-1.717698,6.993294,-0.727410],[-9.709706,2.846273,-6.446827,9.061575,-7.684961,6.811103,5.212760,3.135943],[7.015091,-4.811734,8.631929,-6.323602,-7.352547,3.039982,5.719816,0.664831],[-1.137258,-9.312187,-2.578747,-8.458341,2.976751,-1.385870,8.332486,-2.625050]],[[6.379564,-2.655310,-5.804821,-0.630289,2.396576,-6.109917,7.244143,4.955823],[9.345139,9.470873,1.517962,-9.837727,2.539169,-2.982243,-5.691391,3.877773],[4.526009,-6.309678,4.692469,6.520310,-2.502660,2.923687,4.500600,9.587053],[3.236592,-2.918052,5.755779,1.468863,-4.063210,2.130062,-4.487256,-8.450695],[-4.481208,-4.116229,-8.610469,0.939507,5.780300,-6.652446,9.891693,2.985649],[-2.557438,2.161772,-3.256693,0.967419,-5.921561,-4.230088,4.119463,2.966154],[7.808947,3.200006,9.420941,2.538835,-3.956329,1.481014,0.021658,-3.393674]],[[-8.158994,7.287321,-0.394734,8.511083,0.586820,4.657702,2.286715,7.134064],[-7.397580,-4.648496,1.190670,7.058752,2.046188,5.084871,1.043960,6.854233],[2.468287,6.012889,8.154007,4.732767,-1.436171,1.444528,6.009333,-0.288960],[-5.079673,9.462184,-1.937664,7.723591,4.081739,1.350294,-2.652803,-7.673825],[2.857460,1.898363,6.596082,-0.367028,0.110079,6.401438,-3.704055,2.428707],[-4.253961,-2.471430,7.038311,-3.092219,-9.233395,0.198214,-8.901534,-0.118257],[6.754037,-0.476316,-3.198953,-8.509947,0.779676,-5.395219,-1.421208,-8.222711]],[[-3.421999,4.217681,-9.399855,-5.161642,6.189936,4.393570,-9.407423,-5.060955],[6.254110,-2.823729,0.530054,4.439341,-5.816405,-8.114643,0.788862,2.329812],[4.549864,1.164457,-3.426119,-7.709265,-6.841763,-4.136150,9.126184,-8.040170],[5.656180,7.111220,-1.049049,9.494861,-3.077348,3.179853,-0.431340,-2.199536],[3.581201,6.741916,6.545859,-8.136326,2.943153,-3.245026,7.394648,2.793423],[8.535103,4.907206,-3.960836,-9.040846,-1.642803,-1.422167,-2.144619,-3.776995],[1.011792,-7.131482,2.767792,-0.667215,5.688499,4.150276,8.386677,7.385143]],[[8.429334,-6.256058,-9.491504,7.016558,-8.206821,1.209243,-0.959205,3.947862],[-2.103348,-6.744927,-6.243394,-6.448529,-2.396950,-5.555806,8.004608,-3.881419],[-7.362610,-1.759378,-7.507060,5.982424,9.955687,7.550352,-8.199670,6.344370],[-8.121487,-2.031241,-3.391880,-3.738691,-6.745609,9.495098,8.712435,4.096045],[-2.536196,-9.386792,7.292970,-0.273988,-6.729398,-6.582412,-1.208052,1.353575],[0.191850,0.165504,5.523516,-7.444711,-8.788766,2.166298,-3.739866,0.592366],[-7.420931,8.460365,4.649818,-8.066610,8.588259,-1.457758,7.625815,1.858810]],[[1.587382,-5.983361,-2.694759,-3.821890,-5.411090,-4.459458,-6.809992,-2.965143],[7.148828,-7.771307,8.757714,9.528901,5.538859,-1.616806,6.037336,-3.112940],[-8.929758,2.364106,6.153780,0.118621,7.065776,-6.238163,9.901953,-3.890119],[-6.690180,1.580743,-7.239259,4.698699,-7.597013,-3.281063,0.854631,-7.625667],[0.437200,-5.475801,6.985722,1.751519,-0.713018,0.631268,-7.843707,-7.445885],[-8.300137,-9.044920,-8.164607,2.087672,4.530497,6.689694,-3.862867,-2.125391],[8.445624,-0.305747,-0.662575,-4.142423,-2.216912,-9.964223,9.419591,1.873352]],[[-5.945711,-5.838214,1.959403,6.874908,1.243586,6.576727,-6.558808,-1.813879],[1.542508,-8.466476,-5.120870,-6.052219,-9.252151,3.222283,6.200417,-4.410341],[-5.774692,7.413719,-8.467966,-5.130284,5.803273,4.024005,4.258538,2.436461],[-2.725585,-6.400631,-2.231986,4.400560,7.345979,3.452136,-9.622502,-3.796603],[-4.560211,-1.529520,-1.737990,7.818583,3.810188,5.131818,-7.789662,3.333142],[-8.656991,4.579272,-6.136468,-5.767418,8.233885,-8.883492,7.872184,-8.053204],[-1.433168,-4.643325,5.785493,-6.756505,-2.071318,1.512026,0.553927,7.248861]],[[-3.729205,-2.347357,-4.593661,-6.007236,-3.389862,7.815203,1.639839,-6.104207],[-0.671269,-0.972148,-8.185051,-0.004647,-0.099123,9.721438,-5.779753,9.289532],[3.254431,0.029751,-2.196262,0.834515,4.791995,-6.759770,-6.566730,-8.172740],[3.315326,-0.234084,-5.309726,-9.551978,-3.250116,-0.861613,0.505716,5.482715],[8.411568,-6.696909,-0.857608,0.033830,-4.854004,-7.800271,-5.317108,9.390217],[6.741337,3.386133,6.357392,-9.003404,4.117699,-3.235519,-5.330348,0.922430],[2.805995,-4.458975,3.180582,9.867050,9.221118,-5.264588,-3.376211,-6.595907]],[[2.945910,2.609995,1.191218,-0.437531,-3.429141,8.237538,-8.184445,5.867882],[-0.975409,8.221987,8.650788,6.610536,-0.365262,-4.062608,-5.695612,-2.712128],[-5.350936,-7.235053,2.420621,-0.186805,4.175627,-5.893338,-8.563617,5.363023],[2.199649,-7.575586,7.606336,-7.561340,4.596910,3.531330,5.610326,0.112078],[5.414832,2.649560,-0.119270,9.364283,-5.722730,1.126742,5.084177,2.735465],[1.747719,6.950905,-3.968922,-7.143679,-9.168343,0.582000,9.780965,0.703203],[-7.966371,6.966529,-3.968076,-6.124942,-1.669994,7.772615,4.839518,1.828973]],[[-5.613632,7.096631,-7.452435,-1.196536,3.686822,-1.265704,-5.353130,-5.098608],[-6.199912,1.104842,-5.785151,0.655999,6.035570,-2.795600,-4.996672,4.813175],[-5.531324,0.886937,-8.322650,7.370046,4.617200,-0.482833,2.168320,-5.280013],[-3.109536,-8.019249,0.634896,6.625732,-0.950638,9.848237,6.989645,9.977510],[-0.004532,-5.459433,-0.212043,-4.854385,4.460202,8.861782,2.207195,7.027358],[2.428705,-5.804643,5.226356,0.719505,1.097726,-9.276033,0.638138,-2.047118],[-8.889015,-0.009582,-7.045749,-2.626165,3.242304,-3.442820,6.465350,-4.491875]],[[3.896923,-7.792219,-8.996095,-3.714147,-9.108090,9.897880,-2.208105,2.143238],[-0.073631,2.903622,7.944325,2.081477,7.270704,4.678106,0.927738,1.514060],[8.881876,5.471196,6.717768,5.674868,8.129233,0.300126,5.771817,-4.022939],[-3.003609,-2.343320,-7.921518,-8.137965,-7.959339,-9.032993,9.264510,-1.187072],[0.021976,3.590767,-8.152381,5.400300,6.294576,2.750161,7.371282,-1.052380],[-8.399314,3.677333,-3.924878,-8.734606,-6.792714,-6.434230,3.841616,-4.604593],[5.533504,5.736536,-7.166382,6.977408,-2.170840,-1.408534,-1.340205,0.754641]]], dtype = "float64")#candidate|525|(14, 7, 8)|const|float64
var_526 = relay.var("var_526", dtype = "float64", shape = (14, 7, 8))#candidate|526|(14, 7, 8)|var|float64
bop_527 = relay.mod(const_525.astype('float64'), relay.reshape(var_526.astype('float64'), relay.shape_of(const_525))) # shape=(14, 7, 8)
output = bop_527
output2 = bop_527
func_535 = relay.Function([var_526,], output)
mod['func_535'] = func_535
mod = relay.transform.InferType()(mod)
mutated_mod['func_535'] = func_535
mutated_mod = relay.transform.InferType()(mutated_mod)
var_536 = relay.var("var_536", dtype = "float64", shape = (14, 7, 8))#candidate|536|(14, 7, 8)|var|float64
func_535_call = mutated_mod.get_global_var('func_535')
call_537 = func_535_call(var_536)
output = call_537
func_538 = relay.Function([var_536], output)
mutated_mod['func_538'] = func_538
mutated_mod = relay.transform.InferType()(mutated_mod)
var_621 = relay.var("var_621", dtype = "float64", shape = (12, 5, 5))#candidate|621|(12, 5, 5)|var|float64
var_622 = relay.var("var_622", dtype = "float64", shape = (12, 5, 5))#candidate|622|(12, 5, 5)|var|float64
bop_623 = relay.floor_mod(var_621.astype('float64'), relay.reshape(var_622.astype('float64'), relay.shape_of(var_621))) # shape=(12, 5, 5)
func_155_call = mod.get_global_var('func_155')
func_159_call = mutated_mod.get_global_var('func_159')
const_638 = relay.const([True,False,False,False,False,True,False,False,True,False,True,False,True,False,True,True,True,True,True,True,True,True,True,True,False,False,True,True,True,False,False,True,False,False,True,True,True,True,True,True,False,False,True,True,False,False,False,False,False,False,True,True,True,False,False,True,True,False,True,False,False,True,True,False,False,True,True,True,False,False,False,False,False,False,False,True,False,False,True,False,False,False,True,True,False,False,True,True,False,False,False,False,True,True,False,True,False,False,True,True,False,True,True,True,True,True,False,False,False,True,False,False,True,False,False,True,False,True,True,False,True,True,False,False,False,False,False,True,False,True,False,True,False,True,False,False,True,False,False,True,True,False,True,False,False,True,True,False,False,False,False,True,True,False,False,False,True,False,True,True,True,True,False,True,False,False,True,True,False,True,False,True,False,False,True,False,True,True,True,False,True,True,True,True,False,True,True,True,True,False,False,False,True,True,False,True,True,True,True,False,True,True,True,True,True,True,True,True,False,False,True,True,False,False,False,False,False,True,True,True,True,True,False,False,False,False,False,False,True,True,False,False,False,True,True,False,False,True,True,False,True,False,False,True,False,False,True,False,False,False,False,True,False,False,False,False], dtype = "bool")#candidate|638|(256,)|const|bool
call_637 = func_155_call(relay.reshape(const_638.astype('bool'), [16, 8, 2]), relay.reshape(const_638.astype('bool'), [16, 8, 2]), )
call_639 = func_155_call(relay.reshape(const_638.astype('bool'), [16, 8, 2]), relay.reshape(const_638.astype('bool'), [16, 8, 2]), )
output = relay.Tuple([bop_623,call_637,const_638,])
output2 = relay.Tuple([bop_623,call_639,const_638,])
func_649 = relay.Function([var_621,var_622,], output)
mod['func_649'] = func_649
mod = relay.transform.InferType()(mod)
mutated_mod['func_649'] = func_649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_649_call = mutated_mod.get_global_var('func_649')
var_651 = relay.var("var_651", dtype = "float64", shape = (12, 5, 5))#candidate|651|(12, 5, 5)|var|float64
var_652 = relay.var("var_652", dtype = "float64", shape = (12, 5, 5))#candidate|652|(12, 5, 5)|var|float64
call_650 = func_649_call(var_651,var_652,)
output = call_650
func_653 = relay.Function([var_651,var_652,], output)
mutated_mod['func_653'] = func_653
mutated_mod = relay.transform.InferType()(mutated_mod)
var_659 = relay.var("var_659", dtype = "int16", shape = (6, 8, 9))#candidate|659|(6, 8, 9)|var|int16
var_660 = relay.var("var_660", dtype = "int16", shape = (6, 8, 9))#candidate|660|(6, 8, 9)|var|int16
bop_661 = relay.less_equal(var_659.astype('bool'), relay.reshape(var_660.astype('bool'), relay.shape_of(var_659))) # shape=(6, 8, 9)
func_106_call = mod.get_global_var('func_106')
func_110_call = mutated_mod.get_global_var('func_110')
var_665 = relay.var("var_665", dtype = "bool", shape = ())#candidate|665|()|var|bool
var_666 = relay.var("var_666", dtype = "bool", shape = (22,))#candidate|666|(22,)|var|bool
call_664 = func_106_call(relay.reshape(var_665.astype('bool'), []), relay.reshape(var_666.astype('bool'), [11, 1, 2]), )
call_667 = func_106_call(relay.reshape(var_665.astype('bool'), []), relay.reshape(var_666.astype('bool'), [11, 1, 2]), )
output = relay.Tuple([bop_661,call_664,var_665,var_666,])
output2 = relay.Tuple([bop_661,call_667,var_665,var_666,])
func_685 = relay.Function([var_659,var_660,var_665,var_666,], output)
mod['func_685'] = func_685
mod = relay.transform.InferType()(mod)
mutated_mod['func_685'] = func_685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_685_call = mutated_mod.get_global_var('func_685')
var_687 = relay.var("var_687", dtype = "int16", shape = (6, 8, 9))#candidate|687|(6, 8, 9)|var|int16
var_688 = relay.var("var_688", dtype = "int16", shape = (6, 8, 9))#candidate|688|(6, 8, 9)|var|int16
var_689 = relay.var("var_689", dtype = "bool", shape = ())#candidate|689|()|var|bool
var_690 = relay.var("var_690", dtype = "bool", shape = (22,))#candidate|690|(22,)|var|bool
call_686 = func_685_call(var_687,var_688,var_689,var_690,)
output = call_686
func_691 = relay.Function([var_687,var_688,var_689,var_690,], output)
mutated_mod['func_691'] = func_691
mutated_mod = relay.transform.InferType()(mutated_mod)
const_986 = relay.const([[[-10,5,5,10,-6,-10,-6,-4,-5,-10,-10,-2,8,7,-10,-8],[-4,-2,6,8,10,4,-3,8,-3,5,-9,-2,-4,-5,-1,-7],[-9,-5,1,-8,-1,9,-3,4,-7,-1,-5,-3,3,-5,4,-3],[-1,7,2,-4,-10,-1,-2,-8,3,7,-6,10,8,-8,-7,5],[-9,-1,8,6,-10,8,1,3,9,5,-10,-7,-10,3,5,-7],[-10,5,-6,5,-7,8,-1,3,10,-7,5,-1,10,4,3,8],[-2,1,-4,-1,-9,1,9,2,-4,-10,-5,-5,6,-8,1,-2],[9,-10,-8,-5,2,-7,-2,2,7,6,-4,5,-10,-9,-1,5],[-4,4,-10,9,7,-4,-4,-4,8,-3,2,-4,-10,-5,-4,2],[9,-10,-5,10,-4,10,1,-8,-7,-3,6,-1,-2,1,9,6],[9,5,-4,5,-1,5,-10,-3,2,6,-5,8,3,3,-1,10],[-4,6,-1,-5,8,6,-3,-7,-7,2,-9,-9,-10,-4,1,2],[8,1,-9,-6,6,-6,-3,3,3,-3,-8,5,-7,10,3,-1],[-8,-2,1,-5,-10,-8,-2,-4,-8,7,1,5,-9,6,-7,-2]],[[-1,3,10,9,-6,2,7,3,7,3,-10,-6,3,10,10,4],[-6,-1,6,-8,-8,10,-10,-3,5,-5,-2,5,-4,5,8,-3],[-8,-3,-8,-7,-3,4,-2,-8,-10,-3,3,-10,-4,1,4,-8],[-2,-7,4,-7,-2,10,-7,-2,-3,-1,-2,7,6,8,4,4],[-7,-6,-6,-9,3,4,-10,-7,1,3,-9,-7,-8,6,-1,8],[1,10,-7,8,8,2,-6,3,10,-1,6,-5,3,4,2,-3],[-6,-2,1,6,10,7,10,-5,6,9,-4,-4,-4,2,-2,8],[-9,4,-10,9,-10,-6,-6,9,5,-6,2,7,-10,-3,5,4],[-2,1,-7,-2,7,-7,8,-7,-6,1,2,-4,-6,-7,-8,2],[9,4,6,-3,3,-5,8,4,-4,-1,-5,-1,2,2,10,4],[9,-5,3,9,-2,8,8,-3,9,1,9,-4,3,-2,10,-2],[3,6,-9,-3,1,10,-3,4,-7,3,10,-4,3,-5,2,-4],[9,1,6,9,-5,-9,-4,-8,9,-4,1,1,5,-7,-5,2],[-10,4,-8,3,3,-2,6,-5,-5,3,6,10,-2,-8,9,-3]],[[-4,-6,7,8,3,7,1,-4,1,-2,3,-10,-10,-2,-10,-7],[9,9,-5,7,6,-7,6,-5,9,3,9,7,-2,8,3,8],[-1,1,3,-3,-4,10,-10,-6,-10,10,-2,9,-7,8,4,-3],[3,10,6,9,-2,9,-1,2,5,1,1,3,-8,-8,-7,9],[7,-7,3,-2,-2,10,7,5,3,1,-7,-2,7,1,-2,-3],[-10,-3,-6,-1,-7,2,-2,-10,-4,-9,-5,-9,-10,6,1,-3],[2,7,1,6,6,4,6,2,-4,4,3,-4,6,-7,1,-1],[3,9,-3,-4,5,-8,9,-5,-3,4,4,3,6,-8,-9,10],[-4,-8,5,9,-9,5,7,2,-8,-7,2,4,-9,7,-1,4],[5,6,5,2,-10,-1,-6,6,9,10,-5,-9,9,4,2,-7],[9,1,-7,-7,1,-6,1,2,-7,-1,-9,7,-6,-7,-7,9],[8,-2,-2,-3,-7,1,1,7,-8,-10,-9,-4,-8,-7,-7,-2],[6,-1,-3,3,-3,7,8,4,4,-2,3,-2,-8,5,-5,2],[1,10,-8,-3,7,-7,-7,8,6,-6,9,9,9,5,-3,5]],[[-10,1,10,-9,5,10,8,5,2,-7,1,8,-2,-4,-10,2],[-6,8,-6,-2,6,4,4,1,1,6,-4,2,9,-4,4,9],[-8,5,7,-6,1,-8,-9,10,-5,-4,1,6,3,-9,3,-7],[6,-6,9,-5,-3,-5,1,6,10,-4,7,10,-9,9,8,4],[9,-6,-5,-1,5,-3,-9,-2,-1,3,6,10,-4,-7,6,-6],[-3,-3,7,-7,10,-9,-8,-10,-7,9,-6,-9,7,-3,-1,-5],[-3,-3,4,1,1,-3,-10,10,-7,3,7,4,-1,-6,-7,-7],[1,9,1,7,1,-2,4,2,-2,-5,-8,10,7,2,-7,4],[-10,-3,-4,-4,2,-10,2,8,-7,-1,-1,8,9,3,10,5],[-2,-4,9,-3,-8,7,-5,3,7,10,-7,7,-10,-1,10,2],[-4,-10,4,8,-6,-1,-10,-6,-8,-7,7,-10,-6,7,9,-8],[8,8,1,4,-10,2,-9,9,7,2,-9,2,3,9,-1,-5],[-7,2,10,7,3,2,-8,-9,4,-2,4,-8,3,9,6,-4],[-8,3,4,-5,-9,-9,7,-3,-9,-6,9,8,-1,8,10,2]],[[-10,-5,5,9,9,1,6,-7,-9,6,6,9,-2,7,-1,-1],[4,-5,-5,2,-4,8,-7,5,-9,-3,6,4,-9,9,2,8],[5,6,10,4,1,2,-8,-3,7,-3,7,10,-10,3,8,-9],[-7,-4,5,8,9,-5,8,-7,-5,7,-10,6,-5,-4,-2,-7],[10,-5,7,-10,-5,7,-4,-8,5,-8,10,4,5,-10,3,-6],[-9,7,-4,4,3,-1,-6,-5,-4,-5,-9,2,9,2,9,4],[-1,-4,9,4,-1,-8,-4,7,7,4,3,1,6,-3,-5,3],[-7,1,-4,7,-2,2,1,5,1,6,-3,-5,2,6,-6,-3],[5,-10,-1,-6,-3,8,-10,-2,2,5,4,-6,8,6,-10,-7],[-5,8,4,-6,4,3,-8,-5,2,6,9,-6,6,3,3,3],[-8,3,-6,-1,4,2,-10,2,6,1,4,4,-9,7,6,-9],[2,-6,-10,7,-2,8,8,5,-10,1,2,-3,10,-5,2,1],[-6,10,-6,10,10,10,-9,-3,-1,-4,-10,6,-9,-8,-4,2],[-8,6,3,-1,-5,10,6,-5,-10,10,8,-9,6,7,-8,8]],[[5,-9,-1,1,9,-9,7,-2,5,-4,-7,-1,2,-2,10,6],[5,4,-4,-9,-6,-10,4,-7,-5,1,6,6,9,10,-8,-5],[-2,9,3,10,8,-4,3,1,-4,1,-4,10,5,-5,6,7],[8,-1,6,4,-3,-8,10,6,4,6,4,-5,7,3,-9,-9],[-6,10,4,-8,2,5,7,-8,9,-3,1,4,-8,-1,-7,6],[3,-7,-3,3,-1,9,-10,-3,2,-3,-3,-3,4,-10,2,-6],[5,1,-10,-1,-3,-1,7,1,9,4,-1,-3,-9,-9,8,-8],[-1,-10,5,2,-4,-2,-8,-2,-9,6,-3,6,-1,-7,-2,-3],[5,-2,7,-10,-10,1,7,2,2,-5,-9,1,8,9,4,-3],[-7,1,10,2,4,-7,-9,-7,8,-5,7,-7,5,-6,-9,-10],[-3,-8,-2,4,-4,-9,9,3,1,4,-6,-4,-6,10,7,-10],[8,-3,8,8,-8,4,-4,7,-7,-3,10,1,-8,-1,-10,-5],[-9,-1,-8,1,-6,5,4,-7,-3,-1,10,10,5,-4,2,-3],[2,10,-3,-7,-7,-10,6,-1,10,1,8,-9,-1,-7,-2,8]],[[4,-5,-10,-7,7,-10,-5,-2,-3,-6,-4,-3,7,10,10,-5],[-5,-3,-3,3,-6,-2,4,-7,-7,-9,9,6,1,5,-5,10],[-3,6,-1,-7,-2,1,5,2,-2,-2,2,-7,5,6,4,-9],[-9,2,-6,9,10,-1,-10,6,3,-5,8,-9,3,3,3,6],[-1,-2,-7,-4,-2,1,-9,8,-5,-8,-2,-7,2,4,-6,-7],[-9,1,-1,5,1,9,-3,1,-7,-10,-3,6,9,-1,10,-9],[7,5,6,-3,-5,4,-7,-5,-3,5,-4,-3,1,-5,4,-8],[-5,-10,2,-5,-6,-5,5,1,-7,-3,-7,3,2,7,-1,6],[-9,-6,-10,9,1,2,6,-3,8,-7,4,-3,7,2,-6,-5],[-5,-7,3,4,2,1,7,-2,-1,2,-8,-4,6,4,-6,-6],[-1,9,-8,7,7,7,-3,3,-9,-1,-1,-3,-3,-10,7,2],[-6,3,2,-4,-7,4,-2,-4,-3,8,-10,-4,8,-1,-7,-5],[4,9,-8,-4,3,-7,-9,6,7,-8,2,1,-6,-7,7,-8],[-1,-6,9,8,-10,-9,-7,2,6,3,4,10,-6,10,2,-4]],[[-4,-2,2,9,4,-2,-10,6,-4,5,-3,-5,5,-4,-5,8],[1,-6,-1,-5,-10,7,-9,7,-2,-9,-9,-3,2,-9,-6,-8],[-10,-9,7,7,1,7,-9,-3,-7,5,9,-10,5,-1,8,-1],[-4,-9,-4,-10,2,-5,4,-5,2,-8,-10,-5,-8,8,-6,4],[9,2,-10,10,-2,7,5,-8,2,2,-6,6,3,-2,5,10],[-9,-9,5,-3,4,-4,1,-8,7,2,-6,9,-4,-8,-5,5],[1,3,3,4,7,8,9,1,-5,1,-3,1,-9,8,-9,10],[-7,9,-10,-9,10,-4,-3,-5,8,-10,-6,10,-3,-3,-9,4],[7,-6,-6,-5,2,7,4,4,8,5,-8,-1,-1,-5,7,-10],[5,-3,-3,-9,-6,10,8,4,-1,-2,-1,-10,-7,-7,-4,-1],[5,2,-10,2,-7,8,8,3,-10,-8,10,-5,5,-3,1,10],[8,3,-2,6,7,5,7,-5,-3,-7,-3,9,-6,-6,8,4],[-7,4,2,-9,5,4,-3,6,-4,-8,5,6,4,2,-8,-8],[1,-4,-1,2,8,7,-5,-7,5,-7,-5,-4,4,10,2,9]]], dtype = "uint32")#candidate|986|(8, 14, 16)|const|uint32
const_987 = relay.const([[[-4,-3,9,-5,5,-10,2,-1,-7,-4,7,5,-4,5,8,5],[-6,10,6,8,1,-8,-9,1,-3,6,-10,-4,-1,-8,-6,3],[-1,7,-8,7,-4,-2,6,-8,10,-9,-7,5,-1,-1,7,-10],[8,-6,-2,-8,9,-9,5,4,-5,8,-7,4,-7,4,10,4],[1,6,2,2,-6,-8,2,8,6,-1,-8,-8,7,-9,-8,-5],[-1,-6,7,-6,-1,-3,6,-10,5,3,4,8,-7,-10,-10,-6],[8,-5,10,-5,8,3,9,-6,5,-10,5,2,-5,-7,-9,-5],[4,1,3,-6,6,-7,-3,1,-4,-6,-9,9,3,10,-10,1],[6,10,10,2,-5,10,2,3,4,-5,8,-8,1,-2,-2,-6],[5,-8,2,-10,9,-5,1,6,-7,-8,-6,-7,4,-9,2,-5],[-1,-1,-2,-2,-1,3,4,7,2,-8,4,7,-5,-4,-2,-6],[-9,8,10,-6,6,4,9,-1,9,-1,-3,10,-3,-6,3,-7],[-1,-6,4,3,-3,10,-8,-5,2,-1,4,-4,-8,-1,-2,-3],[-5,5,3,1,-5,-10,-6,10,-10,-3,-4,1,-7,3,3,6]],[[7,9,-9,7,-5,-7,-9,7,9,4,-8,7,9,9,-6,-2],[-6,2,-3,-1,4,-9,6,4,7,3,3,3,10,4,4,-6],[6,10,-4,10,-9,-3,-7,4,-5,9,7,-7,-3,2,4,-10],[5,-4,10,-9,4,-6,8,-7,9,8,8,-4,6,-8,3,5],[-7,6,-4,8,8,-1,6,-9,3,-4,5,-4,3,5,2,-3],[-8,8,-4,2,-10,8,10,-2,7,8,3,4,3,-3,1,4],[5,-3,-8,-2,-9,-4,-8,-4,2,8,3,3,-5,-1,-2,-6],[-8,-5,6,-7,-8,4,9,2,1,9,5,-1,8,-5,-8,-5],[-1,-5,10,2,2,5,-7,3,8,-3,3,3,6,2,-10,10],[-1,-8,4,-8,-7,8,-7,-3,2,-8,-10,8,1,-1,1,2],[-6,-1,-2,9,-10,-5,-7,-6,4,5,6,-9,-5,6,2,6],[-10,-2,-7,-6,-7,8,1,4,7,-9,-3,10,1,-4,5,2],[-10,-2,5,-6,10,6,-7,7,10,-8,6,-2,3,-9,9,-6],[8,-8,5,-5,9,6,-2,1,-9,-6,9,2,-6,-2,4,4]],[[5,5,7,7,-3,-3,6,-8,4,-9,-2,5,-2,4,7,10],[-1,4,-6,3,3,-4,-9,3,-6,6,-3,-9,8,-3,-1,-6],[9,-10,2,6,-9,-6,5,-2,4,-3,9,-2,-3,-3,-9,9],[-1,-4,-4,10,-3,4,8,10,-3,10,5,2,-6,-6,-4,-2],[-6,9,9,3,-6,1,-2,9,-6,-1,1,-10,-8,4,3,-8],[4,-7,7,-6,-9,-10,-10,8,7,6,3,-5,-6,3,-6,-6],[-8,-7,7,9,-10,6,-7,-5,-4,-10,-1,-7,5,4,-1,-6],[-5,4,-6,-5,2,-6,8,1,4,-8,-10,10,3,9,-6,2],[9,3,-1,-4,2,1,-3,1,-6,2,3,1,8,1,8,7],[-1,5,-1,-2,2,2,-8,5,-3,9,-1,-6,-4,-4,10,10],[-2,-3,7,-5,-1,-4,-1,4,-8,-3,-5,9,-4,2,6,7],[-10,-2,-8,-5,5,9,-8,1,-7,-6,-3,-2,10,3,9,-6],[4,5,5,2,-9,8,-5,-5,5,-5,-6,7,2,-4,2,1],[7,8,5,-4,3,4,-10,8,-10,-4,-1,-2,1,-5,5,-10]],[[3,-6,10,-3,-9,8,-5,7,-9,-2,1,3,-2,-8,-6,1],[8,8,-7,-8,-9,8,-3,1,-5,4,1,-2,8,9,-10,-1],[-10,-4,-1,3,-9,4,-5,5,10,-10,5,-1,3,6,4,10],[8,9,6,-9,-3,6,8,2,9,6,-3,8,10,-7,-3,6],[-3,-3,7,4,3,-9,-1,8,2,-5,-2,1,7,6,-7,5],[9,8,8,-7,-2,-3,-9,3,6,6,-9,1,5,9,-10,-1],[-2,7,1,-2,-2,3,7,-3,-2,-10,8,-10,-9,-6,-3,9],[5,5,2,6,4,7,5,-4,-1,-9,-6,-1,-8,-7,3,6],[4,6,1,-1,-1,-6,-10,-5,-7,-1,3,-9,8,-4,3,-1],[-5,4,8,3,-6,10,-9,9,9,-8,-2,5,-4,3,1,4],[-10,2,-4,1,-3,-7,6,-10,-6,9,-7,7,5,9,-5,-4],[1,-5,10,-6,7,-9,1,-9,-8,-4,5,8,-3,-8,10,-3],[7,-8,4,-1,-9,-5,10,7,2,-4,-5,9,-9,-4,8,-2],[5,-3,5,-3,4,3,2,1,1,1,8,-4,6,8,5,-8]],[[-9,3,-4,-8,-4,2,3,10,-1,-10,2,7,-1,-1,-4,-1],[1,-7,-8,-3,6,-8,1,4,2,2,-9,-1,2,9,2,-9],[1,8,-10,4,6,-6,-4,10,6,8,-9,-6,-3,-8,-2,-10],[4,-6,8,-2,-6,3,1,-3,-3,10,4,-4,-10,3,-9,9],[-10,-8,5,-5,2,-10,-1,-10,8,8,-6,8,-5,10,-6,9],[-1,6,-9,-10,9,4,5,-6,-3,-4,7,5,-4,7,-3,6],[3,2,3,5,-2,-3,2,-1,-2,-4,-8,10,-3,2,1,-1],[-9,10,-7,-5,-3,-7,8,10,2,8,2,-9,-2,2,-10,2],[6,-3,-5,1,9,-5,-5,-6,8,4,-9,-4,6,8,8,7],[-10,-6,-1,4,-6,-6,1,-7,-5,8,6,8,-9,9,-4,3],[7,10,-10,-9,-3,-7,-8,-5,5,-6,7,-4,10,-6,-10,-10],[-10,-6,-7,5,3,-6,6,1,-7,4,-2,-2,2,9,-7,-8],[1,5,2,-10,4,3,9,3,2,2,6,8,-2,-7,-6,-3],[-2,9,-10,8,-6,4,-6,3,-6,3,1,-7,8,1,10,5]],[[4,-5,-10,8,3,-3,-1,-8,3,7,3,-6,-10,7,1,-4],[-5,-7,2,-2,9,6,4,-7,5,1,-9,-1,4,-1,-1,9],[-3,-10,4,-2,7,-1,1,-8,-1,6,-5,-1,8,-5,-8,-4],[1,-8,8,-7,7,8,5,4,-4,-8,-9,2,-2,8,-9,10],[8,6,5,3,-1,-10,6,4,6,10,10,3,-9,9,3,10],[5,-9,1,-2,10,9,-8,7,3,-9,1,5,5,10,3,-1],[-7,-1,-2,-1,7,-10,2,-6,5,10,-7,8,10,10,-7,2],[-1,4,-7,8,4,-6,-5,3,-8,-8,9,9,-1,3,-1,-5],[9,8,4,-8,1,-7,8,6,3,3,9,1,2,-9,-10,-7],[-4,5,-10,6,-8,-10,3,4,-2,-9,-10,1,6,-3,6,5],[5,-8,4,-8,7,9,-4,5,2,6,-4,-2,-1,-9,6,-9],[-6,8,10,-2,-4,4,-6,3,-3,-9,-8,-9,7,7,2,6],[2,-7,10,9,2,3,2,-5,-6,2,-7,-6,9,-10,9,10],[-2,4,-8,-7,8,-8,7,-7,-10,-1,-2,-3,-8,5,-1,-9]],[[-3,6,-7,2,4,-6,-3,-5,4,10,-3,-8,-6,-10,-7,9],[-1,-1,-9,-4,3,5,4,1,-8,-5,-3,-1,5,7,10,2],[-4,-2,6,-5,7,-6,-10,1,7,-8,-1,1,-2,-6,8,-8],[10,3,-7,6,-10,8,-1,-7,-7,9,6,3,-2,-4,8,-3],[1,6,-6,-3,9,6,10,-6,-10,4,9,-6,6,-1,10,-5],[-10,1,7,10,-5,4,10,4,-7,6,8,6,9,-10,-9,-2],[-8,-5,-6,9,-1,-9,-4,-3,-1,-8,-10,-3,-2,-8,8,2],[-2,10,-1,-9,3,5,1,8,-8,1,3,-7,-8,5,-6,3],[3,-3,-2,7,2,-3,-2,5,9,8,-1,-6,1,-7,8,2],[-3,4,-1,3,6,4,-8,10,4,-9,4,-4,-7,-1,-10,6],[1,-3,4,-6,1,-8,9,-6,7,-8,1,5,2,4,-10,9],[4,-4,7,9,-9,7,-5,1,-8,-3,2,8,-6,7,-3,-7],[-8,5,8,3,1,5,3,-9,6,2,2,1,-2,-3,-5,-2],[-1,8,1,9,1,7,2,7,-10,4,-8,-9,5,5,-2,5]],[[-6,-3,6,10,-5,-3,2,3,-8,-3,3,-7,4,10,-1,-7],[2,5,-1,-7,-1,-1,2,-5,2,7,10,8,7,9,-5,-4],[-8,6,3,6,-4,9,3,-6,-3,-2,8,8,10,-3,6,1],[-8,3,-10,7,8,-10,1,-5,1,-1,9,-4,9,-3,5,-10],[3,-4,4,7,-9,-2,4,-9,9,6,1,9,7,8,-8,-7],[-4,5,4,2,10,-8,-3,3,-8,10,-1,1,2,2,-8,2],[1,1,-1,3,-7,10,-7,-2,2,-6,2,10,7,-6,2,6],[-7,-1,10,-2,4,-6,2,7,1,-6,-1,9,-10,-2,6,6],[-4,2,10,2,-5,-4,-6,1,-4,-4,-5,10,9,10,9,9],[-2,1,4,-5,-2,5,1,7,7,8,-4,9,-2,9,4,9],[10,1,3,-2,-6,3,7,3,-1,7,-1,1,5,9,1,-7],[-7,-4,4,-3,6,-8,-6,-6,1,-4,-10,-10,-8,-6,6,-7],[-4,3,-8,-10,2,7,10,7,-7,-6,8,3,4,7,5,-2],[5,-8,-2,7,-8,-4,-8,-2,3,-3,5,-9,7,8,9,2]]], dtype = "uint32")#candidate|987|(8, 14, 16)|const|uint32
bop_988 = relay.right_shift(const_986.astype('uint32'), relay.reshape(const_987.astype('uint32'), relay.shape_of(const_986))) # shape=(8, 14, 16)
output = relay.Tuple([bop_988,])
output2 = relay.Tuple([bop_988,])
func_992 = relay.Function([], output)
mod['func_992'] = func_992
mod = relay.transform.InferType()(mod)
mutated_mod['func_992'] = func_992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_992_call = mutated_mod.get_global_var('func_992')
call_993 = func_992_call()
output = call_993
func_994 = relay.Function([], output)
mutated_mod['func_994'] = func_994
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1002 = relay.var("var_1002", dtype = "uint8", shape = (14, 4, 14))#candidate|1002|(14, 4, 14)|var|uint8
var_1003 = relay.var("var_1003", dtype = "uint8", shape = (14, 4, 14))#candidate|1003|(14, 4, 14)|var|uint8
bop_1004 = relay.multiply(var_1002.astype('uint8'), relay.reshape(var_1003.astype('uint8'), relay.shape_of(var_1002))) # shape=(14, 4, 14)
func_535_call = mod.get_global_var('func_535')
func_538_call = mutated_mod.get_global_var('func_538')
call_1020 = func_535_call(relay.reshape(bop_1004.astype('float64'), [14, 7, 8]))
call_1021 = func_535_call(relay.reshape(bop_1004.astype('float64'), [14, 7, 8]))
output = relay.Tuple([bop_1004,call_1020,])
output2 = relay.Tuple([bop_1004,call_1021,])
func_1034 = relay.Function([var_1002,var_1003,], output)
mod['func_1034'] = func_1034
mod = relay.transform.InferType()(mod)
mutated_mod['func_1034'] = func_1034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1034_call = mutated_mod.get_global_var('func_1034')
var_1036 = relay.var("var_1036", dtype = "uint8", shape = (14, 4, 14))#candidate|1036|(14, 4, 14)|var|uint8
var_1037 = relay.var("var_1037", dtype = "uint8", shape = (14, 4, 14))#candidate|1037|(14, 4, 14)|var|uint8
call_1035 = func_1034_call(var_1036,var_1037,)
output = call_1035
func_1038 = relay.Function([var_1036,var_1037,], output)
mutated_mod['func_1038'] = func_1038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_992_call = mod.get_global_var('func_992')
func_994_call = mutated_mod.get_global_var('func_994')
call_1060 = relay.TupleGetItem(func_992_call(), 0)
call_1061 = relay.TupleGetItem(func_994_call(), 0)
func_992_call = mod.get_global_var('func_992')
func_994_call = mutated_mod.get_global_var('func_994')
call_1063 = relay.TupleGetItem(func_992_call(), 0)
call_1064 = relay.TupleGetItem(func_994_call(), 0)
uop_1067 = relay.sin(call_1060.astype('float64')) # shape=(8, 14, 16)
uop_1069 = relay.sin(call_1061.astype('float64')) # shape=(8, 14, 16)
bop_1070 = relay.maximum(uop_1067.astype('int16'), relay.reshape(call_1060.astype('int16'), relay.shape_of(uop_1067))) # shape=(8, 14, 16)
bop_1073 = relay.maximum(uop_1069.astype('int16'), relay.reshape(call_1061.astype('int16'), relay.shape_of(uop_1069))) # shape=(8, 14, 16)
output = relay.Tuple([call_1063,bop_1070,])
output2 = relay.Tuple([call_1064,bop_1073,])
func_1077 = relay.Function([], output)
mod['func_1077'] = func_1077
mod = relay.transform.InferType()(mod)
output = func_1077()
func_1078 = relay.Function([], output)
mutated_mod['func_1078'] = func_1078
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1081 = relay.var("var_1081", dtype = "float32", shape = (4, 5, 5))#candidate|1081|(4, 5, 5)|var|float32
uop_1082 = relay.acos(var_1081.astype('float32')) # shape=(4, 5, 5)
func_649_call = mod.get_global_var('func_649')
func_653_call = mutated_mod.get_global_var('func_653')
const_1088 = relay.const([[-4.211507,-6.476387,9.686992,0.824712,3.438577,-3.860239],[-0.127770,5.026247,7.429423,-2.973289,1.498625,-6.138115],[-0.554451,2.626327,8.690764,-0.947383,0.689492,-7.561320],[9.120470,1.974443,1.778845,7.728158,-9.383851,2.258235],[-4.953569,8.455194,-6.858648,-3.484289,6.321368,4.750002],[3.278743,5.864503,6.907016,-2.241941,3.203526,8.229541],[1.042117,-1.075331,3.922676,9.155387,3.484761,7.145515],[-2.515606,-8.519862,-4.859004,-6.988317,0.464130,-5.564109],[-2.131376,1.185707,-5.262426,-8.760976,-7.418393,2.731093],[-0.321183,0.067624,-4.684199,6.181353,-3.379432,-5.543363],[-8.219916,1.985354,-1.292746,-7.838734,-6.908377,-2.820697],[-8.188568,-4.331185,2.252506,6.058162,-4.789001,7.271465],[0.712809,2.171819,-5.508018,-8.301986,-3.067975,-1.303710],[-8.355658,6.027981,3.380839,6.217335,-9.574128,-8.159518],[-5.303319,5.246301,-7.181852,0.728942,-3.973083,4.962900],[-4.686437,7.735115,5.635365,-2.260173,-1.712791,-8.810449],[0.940622,4.066692,7.647427,-0.567653,5.596751,-1.429740],[-2.327546,-5.420676,-1.480496,-5.428480,8.060094,-2.707253],[1.706571,-3.674713,-3.103820,0.806260,0.208978,-9.936478],[-2.422724,-6.133374,-1.500860,1.757083,-4.644920,5.506252],[-2.229159,3.880797,3.766779,-6.827824,-2.421160,-9.682671],[-9.000644,6.169049,0.213705,-4.929233,-9.211862,5.047390],[-3.003987,6.611697,-9.606393,0.050846,-4.993065,8.718639],[-1.297166,4.892244,-3.408381,-1.859525,2.552648,-3.159921],[3.632403,7.715876,1.836077,-4.118340,9.361267,-9.286518],[4.902246,-2.845328,5.176968,5.643208,-5.032959,-1.473435],[4.079490,5.723253,-7.112686,9.392826,-4.217125,1.715822],[0.755582,7.451503,-1.166483,4.292735,-9.971389,2.440974],[6.321767,9.629884,0.820294,-9.256514,-7.621527,-9.898929],[-4.324154,-5.314456,-4.097781,-6.174682,-5.112498,-5.509668],[-3.576899,-5.605247,-2.118100,-9.757580,-8.078133,0.800337],[5.394543,-9.966273,4.348203,9.066476,-9.490773,-1.699790],[0.525253,8.004844,3.271847,-4.003693,1.138955,-9.074668],[2.748963,1.224316,-7.375372,5.299819,-8.298349,-9.369647],[-5.652659,1.977353,3.000663,8.798921,6.239781,-5.275601],[6.406799,-2.432600,2.527088,-2.044357,5.002208,8.687789],[-7.334087,1.301175,-3.186857,-5.330208,1.123847,-1.772083],[8.217183,-1.195045,-4.588621,3.937515,5.205034,-9.751279],[-8.044676,8.157649,-2.219518,-2.334651,-0.634185,5.381606],[4.401394,2.149754,-8.338335,1.030655,-8.879553,-6.071534],[5.470045,-6.233757,6.076574,2.658119,7.480234,3.745891],[4.678117,-9.783997,7.698546,4.464113,7.866398,-4.352763],[-7.693599,6.558012,5.785764,6.729440,-7.806445,0.440829],[-3.163734,3.728792,-2.993547,9.198103,-9.478475,1.094548],[4.689071,-4.637688,8.746572,-1.779912,1.515590,-2.870430],[1.151728,0.247273,2.836595,6.419737,2.779328,7.759535],[2.549945,-4.954460,-6.313658,-2.622691,-0.118126,-0.491825],[3.326262,3.949611,3.683490,6.485476,5.046596,-9.179792],[6.236655,-8.709439,-5.478915,-8.307008,-2.121081,-4.421134],[-9.421788,-1.405197,4.166774,8.219650,-4.868210,5.590198]], dtype = "float64")#candidate|1088|(50, 6)|const|float64
call_1087 = relay.TupleGetItem(func_649_call(relay.reshape(const_1088.astype('float64'), [12, 5, 5]), relay.reshape(const_1088.astype('float64'), [12, 5, 5]), ), 0)
call_1089 = relay.TupleGetItem(func_653_call(relay.reshape(const_1088.astype('float64'), [12, 5, 5]), relay.reshape(const_1088.astype('float64'), [12, 5, 5]), ), 0)
func_106_call = mod.get_global_var('func_106')
func_110_call = mutated_mod.get_global_var('func_110')
var_1110 = relay.var("var_1110", dtype = "bool", shape = ())#candidate|1110|()|var|bool
const_1111 = relay.const([True,False,True,False,False,False,False,True,False,False,True,True,True,False,False,False,False,False,False,False,False,False], dtype = "bool")#candidate|1111|(22,)|const|bool
call_1109 = func_106_call(relay.reshape(var_1110.astype('bool'), []), relay.reshape(const_1111.astype('bool'), [11, 1, 2]), )
call_1112 = func_106_call(relay.reshape(var_1110.astype('bool'), []), relay.reshape(const_1111.astype('bool'), [11, 1, 2]), )
output = relay.Tuple([uop_1082,call_1087,const_1088,call_1109,var_1110,const_1111,])
output2 = relay.Tuple([uop_1082,call_1089,const_1088,call_1112,var_1110,const_1111,])
func_1118 = relay.Function([var_1081,var_1110,], output)
mod['func_1118'] = func_1118
mod = relay.transform.InferType()(mod)
mutated_mod['func_1118'] = func_1118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1118_call = mutated_mod.get_global_var('func_1118')
var_1120 = relay.var("var_1120", dtype = "float32", shape = (4, 5, 5))#candidate|1120|(4, 5, 5)|var|float32
var_1121 = relay.var("var_1121", dtype = "bool", shape = ())#candidate|1121|()|var|bool
call_1119 = func_1118_call(var_1120,var_1121,)
output = call_1119
func_1122 = relay.Function([var_1120,var_1121,], output)
mutated_mod['func_1122'] = func_1122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1077_call = mod.get_global_var('func_1077')
func_1078_call = mutated_mod.get_global_var('func_1078')
call_1153 = relay.TupleGetItem(func_1077_call(), 0)
call_1154 = relay.TupleGetItem(func_1078_call(), 0)
func_155_call = mod.get_global_var('func_155')
func_159_call = mutated_mod.get_global_var('func_159')
const_1176 = relay.const([[False,False,False,True,True,True,True,True,True,False,False,True,False,True,False,False,True,False,False,True,False,True,True,True,False,True,True,True,True,False,False,True,False,False,False,True,False,True,False,True,False,False,False,False,False,False,False,True,False,False,False,True,True,False,False,False,True,True,True,False,True,False,True,True],[False,False,False,False,True,False,True,True,False,False,True,False,False,True,True,True,False,False,False,True,False,False,True,True,True,True,True,False,True,False,True,True,False,True,False,False,True,True,True,True,True,True,False,False,False,True,True,False,True,True,False,True,True,True,False,False,False,True,False,True,False,True,True,False],[False,True,False,True,False,False,False,False,True,False,False,True,False,True,False,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,True,False,True,False,True,False,False,True,False,True,False,False,False,False,True,False,True,True,False,False,False,False,False,True,False,True,False,True,False,False,False,True,False,True],[True,True,True,True,False,True,False,False,True,True,False,False,True,False,True,False,False,True,False,False,False,False,True,False,True,True,False,True,True,False,True,False,True,False,False,False,False,False,False,True,True,True,False,True,True,True,True,True,True,True,False,True,True,True,False,False,True,False,False,False,True,True,False,False]], dtype = "bool")#candidate|1176|(4, 64)|const|bool
call_1175 = func_155_call(relay.reshape(const_1176.astype('bool'), [16, 8, 2]), relay.reshape(const_1176.astype('bool'), [16, 8, 2]), )
call_1177 = func_155_call(relay.reshape(const_1176.astype('bool'), [16, 8, 2]), relay.reshape(const_1176.astype('bool'), [16, 8, 2]), )
output = relay.Tuple([call_1153,call_1175,const_1176,])
output2 = relay.Tuple([call_1154,call_1177,const_1176,])
func_1182 = relay.Function([], output)
mod['func_1182'] = func_1182
mod = relay.transform.InferType()(mod)
output = func_1182()
func_1183 = relay.Function([], output)
mutated_mod['func_1183'] = func_1183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1077_call = mod.get_global_var('func_1077')
func_1078_call = mutated_mod.get_global_var('func_1078')
call_1222 = relay.TupleGetItem(func_1077_call(), 0)
call_1223 = relay.TupleGetItem(func_1078_call(), 0)
uop_1228 = relay.sigmoid(call_1222.astype('float64')) # shape=(8, 14, 16)
uop_1230 = relay.sigmoid(call_1223.astype('float64')) # shape=(8, 14, 16)
func_1034_call = mod.get_global_var('func_1034')
func_1038_call = mutated_mod.get_global_var('func_1038')
const_1232 = relay.const([[-5,-3,6,-6,5,-6,-5,1,3,4,-10,2,7,-5,-9,-1,7,3,-9,-4,-3,1,7,9,-5,-4,7,-4,-10,-1,6,-3,-8,-8,-7,3,3,10,-5,-9,-4,-7,9,-9,-2,9,-4,1,-1,9,3,10,4,-5,-2,1,-5,9,2,2,8,-2,-4,-4,-3,-4,5,-10,5,9,-10,-3,9,-9,-10,4,4,2,-6,4,-1,4,2,6,1,-7,8,-6,-6,7,-9,5,5,-3,4,-2,4,1,-2,-5,4,6,6,8,-8,-7,6,-10,9,-3,1,-8,-1,-2,7,10,1,-3,5,-8,-6,1,7,2,7,1,-9,2,7,7,-1,-7,-10,-9,2,1,2,-10,3,5,7,7,-4,-10,-1,6,3,-4,6,1,1,-7,-1,-2,-1,6,4,6,10,-10,2,-3,-9,-9,10,-4,9,6,10,-8,-6,9,-8,7,-2,1,2,8,-10,-8,-4,-3,-4,6,-6,5,9,-3,2,4,-6,-7,-8,-2,1,-9,2,9,-1,-2,-9,3,2,4,-6,7,5,10,8,-2,-2,3,4,-2,8,4,-10,5,2,7,10,-10,7,-8,4,3,2,-9,-7,-1,-2,2,1,3,9,-1,-3,5,3,-6,-5,2,-4,-4,-10,8,2,-6,-9,8,1,8,2,-8,7,3,-1,-1,-4,8,2,9,-5,-10,-4,-4,-10,2,6,-1,2,-6,9,-9,-2,8,-2,9,2,4,10,2,10,3,4,8,-8,-10,-10,9,-6,8,-3,-5,-8,2,7,-9,-10,1,-8,9,-3,-2,-7,-9,-9,-3,5,1,7,3,-7,-10,-5,-8,-2,-1,-5,-10,-6,-5,5,1,-6,-5,-4,-10,1,8,1,-8,-5,9,-4,2,7,6,7,-2,-10,7,-3,6,7,9,4,-2,-8,8,-10,-1,10,-7,-7,-10,-3,-2,6,-2,6,10,3,-10,4,5,10,9,5,5,-4,-8,3,-7,10,1,-5,5,-4,-10,-2,-2,-3,2,-8,10,3,-1,10,5,-1,5,7,3,6,2,10,-2,-5,-3,-1,-5,2,1,7,-1,2,4,9,-3,-3,-5,-8,-8,-9,-8,-3,-7,10,-7,5,7,6,-1,7,10,-10,2,1,-3,-10,-5,3,-10,-1,1,-8,5,10,-1,-9,-8,7,7,2,2,-8,-7,-8,-5,7,-5,6,9,8,-2,2,-8,-10,8,-4,5,5,4,-10,-2,-4,-2,-1,-6,-10,7,-6,10,7,-9,-6,4,6,-7,-4,-5,-8,-1,-5,-7,5,8,7,9,-6,7,-3,-5,7,-7,-3,-3,7,-9,1,1,1,9,-7,-4,-9,7,1,2,8,-1,2,-1,10,-5,-9,8,6,-8,6,-8,-2,-8,8,3,9,-6,-7,-10,-8,-7,1,-5,-3,-10,4,5,-2,8,-10,6,4,10,1,-8,7,4,-3,3,-1,-6,-10,10,3,-3,-9,-4,-3,4,-6,-2,2,-9,6,-2,6,1,-10,-9,9,9,3,10,-8,9,-9,-5,7,-5,-9,-10,-6,2,-4,-10,-2,-10,2,10,-4,-4,-10,-3,4,-7,-4,7,-10,5,-9,-6,2,6,7,4,3,-6,6,9,7,4,-5,-1,-7,6,1,-6,7,9,-6,-7,2,3,3,9,-7,1,-3,6,1,7,-3,9,5,-6,-2,3,6,-1,9,9,4,-8,6,-8,-8,-1,7,3,-7,-6,-1,2,-6,-8,-4,1,-9,-4,4,2,-4,-5,2,-7,-6,-9,-2,6,-3,-5,1,2,6,3,-7,-4,-9,-3,4,1,3,-8,-10,-4,-9,9,-4,8,-8,-10,9,3,10,8,-6,-3,-8,3,-5,8,-8,4,9,-10,4,-9,3,-10,9,-6,-6,3,9,-1,-7,-10,7,4,5,-10,-3,3,-2,-8,10,6,-2,1,9,10,2,-8,2,-4,8,-6,-2,7,-2,5,-1,-10,-1,6,5,-5,-4,8,7,-2,6,7,9,-2,-1,4,9,4,-7,2,-6,8,4,-7,8,7,1,1,-10,-10,-1,10,8,-2,6,-6,-2,4,10,10,-3,1]], dtype = "uint8")#candidate|1232|(1, 784)|const|uint8
call_1231 = relay.TupleGetItem(func_1034_call(relay.reshape(const_1232.astype('uint8'), [14, 4, 14]), relay.reshape(const_1232.astype('uint8'), [14, 4, 14]), ), 1)
call_1233 = relay.TupleGetItem(func_1038_call(relay.reshape(const_1232.astype('uint8'), [14, 4, 14]), relay.reshape(const_1232.astype('uint8'), [14, 4, 14]), ), 1)
uop_1247 = relay.acos(const_1232.astype('float32')) # shape=(1, 784)
output = relay.Tuple([uop_1228,call_1231,uop_1247,])
output2 = relay.Tuple([uop_1230,call_1233,uop_1247,])
func_1250 = relay.Function([], output)
mod['func_1250'] = func_1250
mod = relay.transform.InferType()(mod)
mutated_mod['func_1250'] = func_1250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1250_call = mutated_mod.get_global_var('func_1250')
call_1251 = func_1250_call()
output = call_1251
func_1252 = relay.Function([], output)
mutated_mod['func_1252'] = func_1252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1250_call = mod.get_global_var('func_1250')
func_1252_call = mutated_mod.get_global_var('func_1252')
call_1280 = relay.TupleGetItem(func_1250_call(), 0)
call_1281 = relay.TupleGetItem(func_1252_call(), 0)
func_1250_call = mod.get_global_var('func_1250')
func_1252_call = mutated_mod.get_global_var('func_1252')
call_1285 = relay.TupleGetItem(func_1250_call(), 0)
call_1286 = relay.TupleGetItem(func_1252_call(), 0)
output = relay.Tuple([call_1280,call_1285,])
output2 = relay.Tuple([call_1281,call_1286,])
func_1287 = relay.Function([], output)
mod['func_1287'] = func_1287
mod = relay.transform.InferType()(mod)
output = func_1287()
func_1288 = relay.Function([], output)
mutated_mod['func_1288'] = func_1288
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1299 = relay.var("var_1299", dtype = "int16", shape = ())#candidate|1299|()|var|int16
var_1300 = relay.var("var_1300", dtype = "int16", shape = (5, 12, 1))#candidate|1300|(5, 12, 1)|var|int16
bop_1301 = relay.subtract(var_1299.astype('int16'), var_1300.astype('int16')) # shape=(5, 12, 1)
output = relay.Tuple([bop_1301,])
output2 = relay.Tuple([bop_1301,])
func_1305 = relay.Function([var_1299,var_1300,], output)
mod['func_1305'] = func_1305
mod = relay.transform.InferType()(mod)
var_1306 = relay.var("var_1306", dtype = "int16", shape = ())#candidate|1306|()|var|int16
var_1307 = relay.var("var_1307", dtype = "int16", shape = (5, 12, 1))#candidate|1307|(5, 12, 1)|var|int16
output = func_1305(var_1306,var_1307,)
func_1308 = relay.Function([var_1306,var_1307,], output)
mutated_mod['func_1308'] = func_1308
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1342 = relay.const([[[4.621590,3.589534,6.864493,6.362984,7.408102]],[[-6.127943,3.151836,-7.231237,0.082209,4.834375]],[[1.942487,1.450200,2.049429,4.881529,9.734189]],[[-2.660316,0.542681,-0.105768,1.270452,9.988155]],[[-3.937511,-7.165678,2.752764,9.018814,8.516419]],[[-2.166992,4.853109,1.257464,-5.833043,6.888210]],[[7.242743,-9.956602,6.046593,5.346248,-0.468275]],[[-5.248367,-8.743546,4.816764,9.446973,2.206495]],[[7.366654,3.101436,2.207168,7.919070,8.410911]],[[-9.279353,-8.305647,-2.597861,4.064724,5.116021]],[[-1.630721,-7.007662,-4.518534,0.900046,6.431879]]], dtype = "float64")#candidate|1342|(11, 1, 5)|const|float64
uop_1343 = relay.tan(const_1342.astype('float64')) # shape=(11, 1, 5)
output = relay.Tuple([uop_1343,])
output2 = relay.Tuple([uop_1343,])
func_1346 = relay.Function([], output)
mod['func_1346'] = func_1346
mod = relay.transform.InferType()(mod)
mutated_mod['func_1346'] = func_1346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1346_call = mutated_mod.get_global_var('func_1346')
call_1347 = func_1346_call()
output = call_1347
func_1348 = relay.Function([], output)
mutated_mod['func_1348'] = func_1348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1182_call = mod.get_global_var('func_1182')
func_1183_call = mutated_mod.get_global_var('func_1183')
call_1361 = relay.TupleGetItem(func_1182_call(), 0)
call_1362 = relay.TupleGetItem(func_1183_call(), 0)
func_992_call = mod.get_global_var('func_992')
func_994_call = mutated_mod.get_global_var('func_994')
call_1381 = relay.TupleGetItem(func_992_call(), 0)
call_1382 = relay.TupleGetItem(func_994_call(), 0)
uop_1387 = relay.atan(call_1381.astype('float64')) # shape=(8, 14, 16)
uop_1389 = relay.atan(call_1382.astype('float64')) # shape=(8, 14, 16)
output = relay.Tuple([call_1361,uop_1387,])
output2 = relay.Tuple([call_1362,uop_1389,])
func_1396 = relay.Function([], output)
mod['func_1396'] = func_1396
mod = relay.transform.InferType()(mod)
output = func_1396()
func_1397 = relay.Function([], output)
mutated_mod['func_1397'] = func_1397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1287_call = mod.get_global_var('func_1287')
func_1288_call = mutated_mod.get_global_var('func_1288')
call_1401 = relay.TupleGetItem(func_1287_call(), 0)
call_1402 = relay.TupleGetItem(func_1288_call(), 0)
output = relay.Tuple([call_1401,])
output2 = relay.Tuple([call_1402,])
func_1408 = relay.Function([], output)
mod['func_1408'] = func_1408
mod = relay.transform.InferType()(mod)
output = func_1408()
func_1409 = relay.Function([], output)
mutated_mod['func_1409'] = func_1409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1346_call = mod.get_global_var('func_1346')
func_1348_call = mutated_mod.get_global_var('func_1348')
call_1429 = relay.TupleGetItem(func_1346_call(), 0)
call_1430 = relay.TupleGetItem(func_1348_call(), 0)
func_1118_call = mod.get_global_var('func_1118')
func_1122_call = mutated_mod.get_global_var('func_1122')
const_1446 = relay.const([-4.179138,-5.488480,3.711554,2.072357,-0.990296,0.680821,7.466640,6.252974,0.871877,1.801791,-1.299336,8.070310,-5.384984,-6.259146,4.074968,-2.128011,-3.326655,0.037889,7.837560,-1.140516,4.448140,-4.054878,4.846608,-7.037232,-6.806342,4.750236,4.451357,-7.091612,-7.853769,8.194616,-7.145950,8.538207,-9.606199,-6.439964,-1.155545,-2.894396,5.525168,-9.954137,-4.320548,8.724637,-2.331182,-5.461047,7.206542,9.107988,8.130230,4.707410,-6.472359,-5.019571,9.369796,1.204948,7.133847,2.498236,-9.882355,6.417023,-5.885393,3.875079,8.695661,-7.102432,-8.989612,-9.726448,-7.114361,-3.831077,2.285378,-6.538287,3.678241,-6.721469,5.312265,0.703898,1.612961,-6.953281,8.462992,-7.200387,8.935962,3.707731,0.166652,5.684044,6.756358,-6.361718,4.480610,4.713205,-8.306505,8.301208,-0.622760,-9.906291,-5.816463,2.163225,-3.835203,-7.830569,7.050296,-5.278878,-4.961405,-7.232858,5.341359,-9.933902,2.429308,7.841064,6.675527,7.590104,-9.755338,1.843370], dtype = "float32")#candidate|1446|(100,)|const|float32
const_1447 = relay.const(True, dtype = "bool")#candidate|1447|()|const|bool
call_1445 = relay.TupleGetItem(func_1118_call(relay.reshape(const_1446.astype('float32'), [4, 5, 5]), relay.reshape(const_1447.astype('bool'), []), ), 5)
call_1448 = relay.TupleGetItem(func_1122_call(relay.reshape(const_1446.astype('float32'), [4, 5, 5]), relay.reshape(const_1447.astype('bool'), []), ), 5)
func_1396_call = mod.get_global_var('func_1396')
func_1397_call = mutated_mod.get_global_var('func_1397')
call_1456 = relay.TupleGetItem(func_1396_call(), 1)
call_1457 = relay.TupleGetItem(func_1397_call(), 1)
func_685_call = mod.get_global_var('func_685')
func_691_call = mutated_mod.get_global_var('func_691')
var_1464 = relay.var("var_1464", dtype = "int16", shape = (432,))#candidate|1464|(432,)|var|int16
call_1463 = relay.TupleGetItem(func_685_call(relay.reshape(var_1464.astype('int16'), [6, 8, 9]), relay.reshape(var_1464.astype('int16'), [6, 8, 9]), relay.reshape(const_1447.astype('bool'), []), relay.reshape(call_1445.astype('bool'), [22,]), ), 1)
call_1465 = relay.TupleGetItem(func_691_call(relay.reshape(var_1464.astype('int16'), [6, 8, 9]), relay.reshape(var_1464.astype('int16'), [6, 8, 9]), relay.reshape(const_1447.astype('bool'), []), relay.reshape(call_1445.astype('bool'), [22,]), ), 1)
bop_1467 = relay.add(call_1445.astype('uint16'), relay.reshape(call_1463.astype('uint16'), relay.shape_of(call_1445))) # shape=(22,)
bop_1470 = relay.add(call_1448.astype('uint16'), relay.reshape(call_1465.astype('uint16'), relay.shape_of(call_1448))) # shape=(22,)
bop_1471 = relay.subtract(call_1456.astype('uint16'), const_1447.astype('uint16')) # shape=(8, 14, 16)
bop_1474 = relay.subtract(call_1457.astype('uint16'), const_1447.astype('uint16')) # shape=(8, 14, 16)
uop_1485 = relay.asinh(bop_1467.astype('float64')) # shape=(22,)
uop_1487 = relay.asinh(bop_1470.astype('float64')) # shape=(22,)
uop_1494 = relay.rsqrt(uop_1485.astype('float32')) # shape=(22,)
uop_1496 = relay.rsqrt(uop_1487.astype('float32')) # shape=(22,)
uop_1500 = relay.log10(call_1429.astype('float64')) # shape=(11, 1, 5)
uop_1502 = relay.log10(call_1430.astype('float64')) # shape=(11, 1, 5)
func_1346_call = mod.get_global_var('func_1346')
func_1348_call = mutated_mod.get_global_var('func_1348')
call_1514 = relay.TupleGetItem(func_1346_call(), 0)
call_1515 = relay.TupleGetItem(func_1348_call(), 0)
func_992_call = mod.get_global_var('func_992')
func_994_call = mutated_mod.get_global_var('func_994')
call_1527 = relay.TupleGetItem(func_992_call(), 0)
call_1528 = relay.TupleGetItem(func_994_call(), 0)
output = relay.Tuple([const_1446,var_1464,bop_1471,uop_1494,uop_1500,call_1514,call_1527,])
output2 = relay.Tuple([const_1446,var_1464,bop_1474,uop_1496,uop_1502,call_1515,call_1528,])
func_1540 = relay.Function([var_1464,], output)
mod['func_1540'] = func_1540
mod = relay.transform.InferType()(mod)
var_1541 = relay.var("var_1541", dtype = "int16", shape = (432,))#candidate|1541|(432,)|var|int16
output = func_1540(var_1541)
func_1542 = relay.Function([var_1541], output)
mutated_mod['func_1542'] = func_1542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1250_call = mod.get_global_var('func_1250')
func_1252_call = mutated_mod.get_global_var('func_1252')
call_1566 = relay.TupleGetItem(func_1250_call(), 1)
call_1567 = relay.TupleGetItem(func_1252_call(), 1)
func_1250_call = mod.get_global_var('func_1250')
func_1252_call = mutated_mod.get_global_var('func_1252')
call_1568 = relay.TupleGetItem(func_1250_call(), 2)
call_1569 = relay.TupleGetItem(func_1252_call(), 2)
func_1540_call = mod.get_global_var('func_1540')
func_1542_call = mutated_mod.get_global_var('func_1542')
const_1574 = relay.const([-8,-7,-7,5,-10,4,-3,4,4,7,-8,-9,5,-5,5,8,-6,-6,10,10,2,-1,-5,-4,-3,-6,7,-2,-1,9,-8,3,2,8,1,-3,2,-9,-8,-7,3,4,7,2,-2,7,-8,3,-10,-5,8,5,1,-6,6,-2,9,10,-9,-7,5,-2,-4,4,-7,-4,-8,-3,-4,10,6,-10,-5,10,-3,8,9,-3,-6,-7,-8,5,4,5,-9,-8,6,-8,8,-6,5,1,5,-10,-10,1,10,6,-4,-9,-5,-7,-7,-3,-7,6,-4,-7,-10,7,4,2,5,-7,6,-3,-7,3,9,6,4,7,10,4,-1,-4,10,-10,-1,-4,-6,-1,9,-4,-9,-2,4,-2,3,8,8,2,9,2,10,-8,-3,7,4,-8,-2,7,-10,-4,-4,9,-6,9,3,-5,7,7,-2,-10,8,9,-10,7,5,3,4,1,-2,-5,-2,-8,-4,9,-3,-4,8,-10,2,-8,-1,-6,2,-6,10,1,-10,2,-6,-1,1,10,9,-8,9,7,5,-6,-5,-5,-2,10,5,-7,5,2,1,5,-3,-10,7,4,-5,10,3,-6,2,-8,-7,2,10,8,-9,3,4,-6,-5,4,3,9,-1,-2,10,-4,6,9,-1,9,-7,-1,10,-3,-8,-4,-3,8,7,-9,-3,-3,6,-4,8,6,-10,8,2,4,8,-4,10,-5,3,5,6,4,-2,8,4,5,10,-1,-5,-4,-2,6,-2,10,-6,1,4,3,-6,6,-6,3,4,-8,-8,6,3,-3,-4,10,9,-1,9,-1,-6,4,-7,5,10,2,8,-7,9,-5,4,-4,-7,9,8,10,4,3,-8,3,-6,5,3,4,-3,-9,-4,-1,8,6,10,10,-7,-7,5,-2,-7,4,6,-5,7,-7,5,-2,10,8,4,-7,-3,6,6,-9,-3,-4,1,10,-1,10,9,-8,-2,10,-6,-6,9,7,10,-8,-8,-3,-10,-8,-2,-9,-2,9,-3,1,3,-8,-9,-10,2,-1,-10,9,9,-3,6,1,8,4,-8,3,-2,8,8,10,7,10,8,-9,7,-10,-3,4,1,-5,3,-4,10,6,-1,-10,10,6,-1,6,7,4,-7,3,6,-8,-5,4,6,7,-6,6], dtype = "int16")#candidate|1574|(432,)|const|int16
call_1573 = relay.TupleGetItem(func_1540_call(relay.reshape(const_1574.astype('int16'), [432,])), 6)
call_1575 = relay.TupleGetItem(func_1542_call(relay.reshape(const_1574.astype('int16'), [432,])), 6)
output = relay.Tuple([call_1566,call_1568,call_1573,const_1574,])
output2 = relay.Tuple([call_1567,call_1569,call_1575,const_1574,])
func_1578 = relay.Function([], output)
mod['func_1578'] = func_1578
mod = relay.transform.InferType()(mod)
output = func_1578()
func_1579 = relay.Function([], output)
mutated_mod['func_1579'] = func_1579
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1580 = relay.var("var_1580", dtype = "int8", shape = ())#candidate|1580|()|var|int8
var_1581 = relay.var("var_1581", dtype = "int8", shape = (5, 1, 4))#candidate|1581|(5, 1, 4)|var|int8
bop_1582 = relay.bitwise_and(var_1580.astype('int8'), var_1581.astype('int8')) # shape=(5, 1, 4)
output = bop_1582
output2 = bop_1582
func_1589 = relay.Function([var_1580,var_1581,], output)
mod['func_1589'] = func_1589
mod = relay.transform.InferType()(mod)
var_1590 = relay.var("var_1590", dtype = "int8", shape = ())#candidate|1590|()|var|int8
var_1591 = relay.var("var_1591", dtype = "int8", shape = (5, 1, 4))#candidate|1591|(5, 1, 4)|var|int8
output = func_1589(var_1590,var_1591,)
func_1592 = relay.Function([var_1590,var_1591,], output)
mutated_mod['func_1592'] = func_1592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1346_call = mod.get_global_var('func_1346')
func_1348_call = mutated_mod.get_global_var('func_1348')
call_1594 = relay.TupleGetItem(func_1346_call(), 0)
call_1595 = relay.TupleGetItem(func_1348_call(), 0)
var_1602 = relay.var("var_1602", dtype = "float64", shape = (11, 12, 5))#candidate|1602|(11, 12, 5)|var|float64
bop_1603 = relay.greater(call_1594.astype('bool'), var_1602.astype('bool')) # shape=(11, 12, 5)
bop_1606 = relay.greater(call_1595.astype('bool'), var_1602.astype('bool')) # shape=(11, 12, 5)
var_1608 = relay.var("var_1608", dtype = "float64", shape = (11, 12, 5))#candidate|1608|(11, 12, 5)|var|float64
bop_1609 = relay.less(var_1602.astype('bool'), relay.reshape(var_1608.astype('bool'), relay.shape_of(var_1602))) # shape=(11, 12, 5)
output = relay.Tuple([bop_1603,bop_1609,])
output2 = relay.Tuple([bop_1606,bop_1609,])
func_1625 = relay.Function([var_1602,var_1608,], output)
mod['func_1625'] = func_1625
mod = relay.transform.InferType()(mod)
mutated_mod['func_1625'] = func_1625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1625_call = mutated_mod.get_global_var('func_1625')
var_1627 = relay.var("var_1627", dtype = "float64", shape = (11, 12, 5))#candidate|1627|(11, 12, 5)|var|float64
var_1628 = relay.var("var_1628", dtype = "float64", shape = (11, 12, 5))#candidate|1628|(11, 12, 5)|var|float64
call_1626 = func_1625_call(var_1627,var_1628,)
output = call_1626
func_1629 = relay.Function([var_1627,var_1628,], output)
mutated_mod['func_1629'] = func_1629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1346_call = mod.get_global_var('func_1346')
func_1348_call = mutated_mod.get_global_var('func_1348')
call_1636 = relay.TupleGetItem(func_1346_call(), 0)
call_1637 = relay.TupleGetItem(func_1348_call(), 0)
uop_1644 = relay.sin(call_1636.astype('float64')) # shape=(11, 1, 5)
uop_1646 = relay.sin(call_1637.astype('float64')) # shape=(11, 1, 5)
output = relay.Tuple([uop_1644,])
output2 = relay.Tuple([uop_1646,])
func_1648 = relay.Function([], output)
mod['func_1648'] = func_1648
mod = relay.transform.InferType()(mod)
mutated_mod['func_1648'] = func_1648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1648_call = mutated_mod.get_global_var('func_1648')
call_1649 = func_1648_call()
output = call_1649
func_1650 = relay.Function([], output)
mutated_mod['func_1650'] = func_1650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1396_call = mod.get_global_var('func_1396')
func_1397_call = mutated_mod.get_global_var('func_1397')
call_1653 = relay.TupleGetItem(func_1396_call(), 1)
call_1654 = relay.TupleGetItem(func_1397_call(), 1)
uop_1659 = relay.exp(call_1653.astype('float32')) # shape=(8, 14, 16)
uop_1661 = relay.exp(call_1654.astype('float32')) # shape=(8, 14, 16)
var_1662 = relay.var("var_1662", dtype = "float32", shape = (8, 14, 16))#candidate|1662|(8, 14, 16)|var|float32
bop_1663 = relay.less_equal(uop_1659.astype('bool'), relay.reshape(var_1662.astype('bool'), relay.shape_of(uop_1659))) # shape=(8, 14, 16)
bop_1666 = relay.less_equal(uop_1661.astype('bool'), relay.reshape(var_1662.astype('bool'), relay.shape_of(uop_1661))) # shape=(8, 14, 16)
bop_1671 = relay.bitwise_and(bop_1663.astype('uint8'), relay.reshape(uop_1659.astype('uint8'), relay.shape_of(bop_1663))) # shape=(8, 14, 16)
bop_1674 = relay.bitwise_and(bop_1666.astype('uint8'), relay.reshape(uop_1661.astype('uint8'), relay.shape_of(bop_1666))) # shape=(8, 14, 16)
output = relay.Tuple([bop_1671,])
output2 = relay.Tuple([bop_1674,])
func_1676 = relay.Function([var_1662,], output)
mod['func_1676'] = func_1676
mod = relay.transform.InferType()(mod)
mutated_mod['func_1676'] = func_1676
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1677 = relay.var("var_1677", dtype = "float32", shape = (8, 14, 16))#candidate|1677|(8, 14, 16)|var|float32
func_1676_call = mutated_mod.get_global_var('func_1676')
call_1678 = func_1676_call(var_1677)
output = call_1678
func_1679 = relay.Function([var_1677], output)
mutated_mod['func_1679'] = func_1679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1287_call = mod.get_global_var('func_1287')
func_1288_call = mutated_mod.get_global_var('func_1288')
call_1689 = relay.TupleGetItem(func_1287_call(), 0)
call_1690 = relay.TupleGetItem(func_1288_call(), 0)
func_535_call = mod.get_global_var('func_535')
func_538_call = mutated_mod.get_global_var('func_538')
var_1701 = relay.var("var_1701", dtype = "float64", shape = (784,))#candidate|1701|(784,)|var|float64
call_1700 = func_535_call(relay.reshape(var_1701.astype('float64'), [14, 7, 8]))
call_1702 = func_535_call(relay.reshape(var_1701.astype('float64'), [14, 7, 8]))
func_1118_call = mod.get_global_var('func_1118')
func_1122_call = mutated_mod.get_global_var('func_1122')
const_1707 = relay.const([-3.933459,5.452975,-6.245634,3.485800,-1.873200,-6.975592,-7.628266,-0.469511,4.896691,-7.668599,5.640960,9.411683,-4.672776,-8.883772,4.682228,5.159278,-4.073305,7.928411,6.291322,7.255745,6.681942,-3.783404,9.184208,-0.435153,-6.210748,2.099321,-1.811690,-9.941139,1.194166,-2.307807,-0.877294,-2.947247,-9.180073,-1.054194,-1.969861,2.649760,6.531687,8.654793,7.367631,2.507073,-3.728888,7.396667,-8.942873,8.989262,-6.701097,-6.641856,8.559094,-5.860271,9.872150,4.722894,-3.008772,4.756966,1.536708,-6.313004,-8.411016,-3.263443,-3.486061,0.078364,9.793798,-6.262738,-7.227515,0.042636,2.578918,-1.126145,-4.297925,-8.711648,-6.590657,-7.865253,-9.369988,-9.590720,-0.052530,1.792753,-3.996617,1.720154,3.738058,-9.353339,1.646569,-6.962205,8.174196,6.080118,-5.942585,-6.776507,9.645578,-1.962693,0.804979,-4.634455,8.169901,3.435613,6.793131,-1.681277,-2.441441,-7.575467,-2.400302,4.681613,2.555793,4.248438,-3.003504,1.892509,-0.024594,-2.879038], dtype = "float32")#candidate|1707|(100,)|const|float32
var_1708 = relay.var("var_1708", dtype = "bool", shape = ())#candidate|1708|()|var|bool
call_1706 = relay.TupleGetItem(func_1118_call(relay.reshape(const_1707.astype('float32'), [4, 5, 5]), relay.reshape(var_1708.astype('bool'), []), ), 0)
call_1709 = relay.TupleGetItem(func_1122_call(relay.reshape(const_1707.astype('float32'), [4, 5, 5]), relay.reshape(var_1708.astype('bool'), []), ), 0)
bop_1710 = relay.less_equal(var_1701.astype('bool'), relay.reshape(call_1700.astype('bool'), relay.shape_of(var_1701))) # shape=(784,)
bop_1713 = relay.less_equal(var_1701.astype('bool'), relay.reshape(call_1702.astype('bool'), relay.shape_of(var_1701))) # shape=(784,)
func_1408_call = mod.get_global_var('func_1408')
func_1409_call = mutated_mod.get_global_var('func_1409')
call_1716 = relay.TupleGetItem(func_1408_call(), 0)
call_1717 = relay.TupleGetItem(func_1409_call(), 0)
func_155_call = mod.get_global_var('func_155')
func_159_call = mutated_mod.get_global_var('func_159')
var_1726 = relay.var("var_1726", dtype = "bool", shape = (2, 128))#candidate|1726|(2, 128)|var|bool
call_1725 = func_155_call(relay.reshape(var_1726.astype('bool'), [16, 8, 2]), relay.reshape(var_1726.astype('bool'), [16, 8, 2]), )
call_1727 = func_155_call(relay.reshape(var_1726.astype('bool'), [16, 8, 2]), relay.reshape(var_1726.astype('bool'), [16, 8, 2]), )
bop_1728 = relay.not_equal(var_1708.astype('bool'), call_1700.astype('bool')) # shape=(14, 7, 8)
bop_1731 = relay.not_equal(var_1708.astype('bool'), call_1702.astype('bool')) # shape=(14, 7, 8)
func_535_call = mod.get_global_var('func_535')
func_538_call = mutated_mod.get_global_var('func_538')
call_1732 = func_535_call(relay.reshape(call_1700.astype('float64'), [14, 7, 8]))
call_1733 = func_535_call(relay.reshape(call_1700.astype('float64'), [14, 7, 8]))
func_992_call = mod.get_global_var('func_992')
func_994_call = mutated_mod.get_global_var('func_994')
call_1734 = relay.TupleGetItem(func_992_call(), 0)
call_1735 = relay.TupleGetItem(func_994_call(), 0)
output = relay.Tuple([call_1689,call_1706,const_1707,bop_1710,call_1716,call_1725,var_1726,bop_1728,call_1732,call_1734,])
output2 = relay.Tuple([call_1690,call_1709,const_1707,bop_1713,call_1717,call_1727,var_1726,bop_1731,call_1733,call_1735,])
func_1737 = relay.Function([var_1701,var_1708,var_1726,], output)
mod['func_1737'] = func_1737
mod = relay.transform.InferType()(mod)
var_1738 = relay.var("var_1738", dtype = "float64", shape = (784,))#candidate|1738|(784,)|var|float64
var_1739 = relay.var("var_1739", dtype = "bool", shape = ())#candidate|1739|()|var|bool
var_1740 = relay.var("var_1740", dtype = "bool", shape = (2, 128))#candidate|1740|(2, 128)|var|bool
output = func_1737(var_1738,var_1739,var_1740,)
func_1741 = relay.Function([var_1738,var_1739,var_1740,], output)
mutated_mod['func_1741'] = func_1741
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1773 = relay.const([[[-5.390595,-3.867473,2.310074,5.201094,-1.722289,-1.177372],[9.642206,2.207904,3.131147,-5.446686,-1.100966,3.051958],[-5.349447,-5.038184,3.755711,0.265685,5.632426,-3.119271],[-4.813455,1.080572,-4.192225,-1.210012,-9.446731,-6.804189]],[[5.465821,4.644860,6.925715,-9.164696,-0.301752,1.166761],[-6.361549,4.392713,-2.587882,1.664146,8.691285,4.549449],[-5.500928,2.994399,1.898886,-4.700678,-1.550479,-5.173135],[3.089084,3.162342,-5.901710,1.078983,9.144750,-0.882961]],[[-7.840807,-4.205933,4.623965,-6.254977,-8.668809,-2.473156],[0.871269,-6.494066,-3.783237,6.847157,4.657796,7.956102],[4.937832,-6.184925,7.416825,-5.680852,-8.713603,6.717521],[-1.102249,0.186551,-0.258406,6.977874,1.111536,6.183436]],[[-7.455212,3.716350,-1.460317,2.230244,8.733876,-3.577592],[9.177436,7.795357,-9.193013,6.329863,-0.647988,7.686192],[-8.964039,-1.032977,-4.680898,3.868851,-0.537612,-5.519127],[2.981149,4.466018,8.510190,4.391208,-9.198409,2.926859]]], dtype = "float32")#candidate|1773|(4, 4, 6)|const|float32
uop_1774 = relay.acos(const_1773.astype('float32')) # shape=(4, 4, 6)
output = uop_1774
output2 = uop_1774
func_1785 = relay.Function([], output)
mod['func_1785'] = func_1785
mod = relay.transform.InferType()(mod)
mutated_mod['func_1785'] = func_1785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1785_call = mutated_mod.get_global_var('func_1785')
call_1786 = func_1785_call()
output = call_1786
func_1787 = relay.Function([], output)
mutated_mod['func_1787'] = func_1787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1785_call = mod.get_global_var('func_1785')
func_1787_call = mutated_mod.get_global_var('func_1787')
call_1793 = func_1785_call()
call_1794 = func_1785_call()
func_1250_call = mod.get_global_var('func_1250')
func_1252_call = mutated_mod.get_global_var('func_1252')
call_1807 = relay.TupleGetItem(func_1250_call(), 1)
call_1808 = relay.TupleGetItem(func_1252_call(), 1)
uop_1813 = relay.sinh(call_1807.astype('float64')) # shape=(14, 7, 8)
uop_1815 = relay.sinh(call_1808.astype('float64')) # shape=(14, 7, 8)
bop_1822 = relay.less_equal(uop_1813.astype('bool'), relay.reshape(call_1807.astype('bool'), relay.shape_of(uop_1813))) # shape=(14, 7, 8)
bop_1825 = relay.less_equal(uop_1815.astype('bool'), relay.reshape(call_1808.astype('bool'), relay.shape_of(uop_1815))) # shape=(14, 7, 8)
uop_1835 = relay.sqrt(call_1793.astype('float32')) # shape=(4, 4, 6)
uop_1837 = relay.sqrt(call_1794.astype('float32')) # shape=(4, 4, 6)
uop_1861 = relay.log(call_1807.astype('float32')) # shape=(14, 7, 8)
uop_1863 = relay.log(call_1808.astype('float32')) # shape=(14, 7, 8)
func_649_call = mod.get_global_var('func_649')
func_653_call = mutated_mod.get_global_var('func_653')
const_1867 = relay.const([-1.758396,8.209015,-1.205516,-8.354694,6.791100,1.247411,-5.020848,-9.857848,4.956959,1.012658,8.904876,-5.024603,7.736585,5.415744,-1.364445,-2.985092,7.175824,5.316477,8.262293,4.999744,4.129966,7.773386,8.319025,-9.812475,2.466193,-5.970357,2.561382,-5.724718,8.108946,9.615278,-9.005398,9.197539,3.329352,-1.584976,-2.842620,7.312764,-4.791240,8.958487,-3.632940,-3.753306,4.397912,-0.264931,7.856272,4.636708,4.678135,-2.425088,4.603684,2.552669,3.748958,5.686484,0.883568,5.674925,0.163022,5.516861,-7.144899,4.914733,8.607334,-8.886966,-0.371324,4.658332,-2.518669,8.778956,6.615550,-0.016180,-8.051332,3.627712,-3.647324,4.667270,9.525184,2.931717,3.628712,-7.933959,-5.983862,9.314086,-9.482913,-8.357032,0.332504,-1.548187,7.948144,0.294097,-9.053132,9.341567,8.326271,-1.753434,-4.564019,-8.850005,-0.706127,-6.398898,1.701377,5.641083,-4.817069,-1.292234,-4.314364,9.159612,1.448974,6.617021,6.989734,-8.859207,-2.958282,9.476533,-3.917645,-7.395929,-8.499620,9.229358,-3.959100,-4.072697,6.586210,-4.209599,7.581972,4.816381,-0.802370,1.756471,3.533992,-1.221567,-1.583037,-6.002224,6.862453,-2.121015,0.503382,8.161787,-6.320199,4.964524,-6.552171,7.901884,6.087509,-3.136199,-6.589351,8.736247,4.361410,4.921851,1.634315,-9.781936,-8.821964,2.267873,2.687050,9.232159,-8.350944,4.318163,7.580538,-7.811683,2.927573,-1.468422,-6.674399,8.281587,-3.056149,-9.763080,0.860521,-5.773344,5.820011,6.625341,3.719597,-7.783311,2.805384,-6.547208,2.584714,9.540098,-3.199316,-9.723796,3.819585,-2.760104,-3.756590,-2.286399,-2.733587,6.952564,-6.267803,-2.510754,3.528069,6.624851,-5.369973,7.662972,-4.861384,-4.715840,5.978206,-5.586626,-1.625202,-5.404807,9.607201,-9.747679,3.894593,9.649338,9.132746,2.394916,-9.888310,7.903341,0.039588,-2.182927,-5.072300,-8.492577,4.977585,-7.520183,9.926878,-7.683507,5.671102,-8.844911,-0.385791,-4.774547,8.665396,7.153516,-1.537286,-1.299130,0.767570,-1.295360,0.326865,2.032313,9.310026,9.510624,-5.542825,5.049493,-0.232073,7.500627,9.793030,-1.537903,4.011570,-4.046066,9.168020,3.119640,-1.695864,-3.702533,-2.410732,-9.980382,4.398738,0.544061,-3.772755,-4.082163,-0.427417,9.772674,5.024932,3.897328,8.510084,8.017386,-9.399137,-0.130378,-1.894394,4.315866,-2.976295,-1.143979,7.571601,-3.181729,-3.044906,-2.020776,-7.013351,-7.219818,-2.206266,-7.984479,1.063758,-0.664777,3.604210,-9.033111,9.050118,-5.503550,-0.849674,6.329582,-9.849953,4.745324,-4.406276,-8.496290,9.470999,9.478803,-1.852290,-6.583237,1.770780,7.038788,4.216147,-7.645677,6.296281,-8.924372,3.893376,4.748271,6.510870,-4.993807,6.925888,-9.188108,2.263912,-9.156024,-4.451016,8.312216,0.830056,-6.961650,1.971992,2.712739,1.508775,-8.095889,6.686034,2.561207,-7.660187,0.512573,-6.758045,-1.192553,8.771698,6.794937,2.276679,5.046066,1.043517,3.760710,-7.878412,-9.311372,4.890928,-0.702388,-1.121358,1.328836], dtype = "float64")#candidate|1867|(300,)|const|float64
call_1866 = relay.TupleGetItem(func_649_call(relay.reshape(const_1867.astype('float64'), [12, 5, 5]), relay.reshape(const_1867.astype('float64'), [12, 5, 5]), ), 0)
call_1868 = relay.TupleGetItem(func_653_call(relay.reshape(const_1867.astype('float64'), [12, 5, 5]), relay.reshape(const_1867.astype('float64'), [12, 5, 5]), ), 0)
func_1625_call = mod.get_global_var('func_1625')
func_1629_call = mutated_mod.get_global_var('func_1629')
const_1873 = relay.const([-9.630288,7.380959,-7.683301,3.985832,-7.839003,9.282653,-1.503670,-2.443315,-6.019691,1.228925,-1.163402,-1.283892,9.187890,-4.187935,-5.975154,8.908847,7.107537,-2.940651,-1.704726,3.938546,5.306511,-5.274954,-6.920931,-0.176243,0.213226,-2.039622,8.103232,-0.317097,-1.390883,8.644734,6.128392,4.691926,9.539325,-9.411060,0.904413,-9.013812,-7.981053,-4.318863,2.919450,9.975463,2.142995,9.349171,-4.673104,9.351230,-0.276327,0.097657,9.991982,8.321354,4.059246,-7.080093,5.604388,3.329888,-8.121162,-8.366873,-7.615719,-2.850567,-9.620842,-1.788372,-2.543424,8.030595,-2.444861,-4.075854,9.704910,3.783263,-7.460651,-5.975740,-2.702343,8.545371,2.931800,1.064875,-8.338942,4.887477,6.622442,6.298791,4.107149,-4.638454,-6.524020,-3.085287,-2.840671,-3.178099,5.848822,7.056448,-9.076839,-9.593837,-6.869068,6.246017,-1.340683,6.825775,7.203766,5.901169,0.976917,-5.990941,-2.762025,-4.619439,-6.138812,1.147376,7.071763,-5.277336,-7.327371,3.990653,-8.683165,3.624091,-8.125619,-4.410521,0.629835,-6.868726,1.106909,-5.124861,3.125470,4.910775,6.931790,-9.311107,7.395469,-3.151350,2.756234,-3.369664,2.372260,-9.908469,7.838527,9.720368,-9.497933,7.242705,-3.466138,-2.997621,-0.993454,-3.913475,-9.756649,-2.639567,5.850893,2.646578,4.255498,-6.564281,7.144931,-7.311223,2.815089,-0.684122,5.072848,6.185813,2.333194,-1.377239,7.695312,-0.472807,7.305454,2.885474,5.105213,1.514600,1.117472,6.310601,9.103647,4.158320,0.958891,-6.496310,2.467860,8.336387,1.140020,4.542015,-9.382624,1.767421,-4.718148,-8.766036,2.256598,-0.342956,0.251091,-9.082807,7.436674,3.460195,4.149452,-6.919741,3.792402,9.844233,5.947273,-0.809471,-1.011091,0.327152,-0.708257,1.695643,7.828094,-2.604846,6.035047,0.010548,-1.348102,-4.483577,7.373784,6.785317,-9.048697,4.320800,1.859593,6.144740,8.412929,-6.405927,-0.360915,-5.731997,-1.902651,-3.302966,8.402307,-4.417518,-1.529692,4.742341,1.099333,-9.128189,0.938538,1.825566,9.537855,6.788623,6.715238,9.543270,2.503764,-6.452585,-5.597332,7.709598,-3.993006,-6.747632,-6.563514,-2.338823,-6.145141,1.643795,6.188806,-6.227750,1.137333,4.004058,0.657857,-7.963127,-7.123084,-4.393043,1.797625,-8.169229,-3.425147,-7.593440,-1.251044,-6.387170,-4.024094,6.353810,1.069085,-7.926904,6.151560,6.162137,-6.761612,1.926489,-6.827190,-4.268318,5.867525,-2.926577,8.357500,7.654704,4.661607,-5.547714,6.916469,0.995874,7.577877,-5.571061,-6.485951,3.974359,6.669371,5.904348,5.829685,-5.925930,2.700077,-0.745699,2.578618,-3.696256,5.880007,-2.584707,-6.582030,9.917146,-6.237562,-3.135589,-3.996615,9.729880,-3.480388,5.164177,-1.151284,0.986418,-0.802541,-9.113790,6.569397,4.062765,3.095931,5.456931,0.662554,1.231297,-0.886427,-1.169790,-3.105854,2.762902,1.871403,-8.284357,-5.136407,2.048265,7.170556,-0.658476,-8.196094,7.407394,-5.161924,-9.991168,-1.120363,6.899980,6.705829,7.782983,1.352570,0.082025,6.423762,6.706537,5.105273,9.046136,-3.837426,4.236671,4.588177,7.927405,2.522144,2.405262,5.426837,2.239457,6.265029,-2.960165,4.049496,2.816342,4.529887,-3.008404,4.446002,4.874328,0.296469,-5.987430,-2.007736,-0.363945,5.386435,5.360155,-0.239457,-9.096697,1.256799,6.305896,-6.089919,5.344829,5.199415,-8.550308,4.714861,-3.847198,-8.804951,5.762270,-3.512952,-2.182747,-2.843085,8.234421,-9.601889,-0.196263,-7.106608,-7.924302,-5.656777,1.257981,3.500102,-9.829277,6.679744,-8.511212,4.934877,-6.567163,9.154588,-3.287224,-0.837174,5.924966,5.765765,-3.964030,9.710164,-2.214029,7.668251,3.947807,3.119590,4.986992,-4.060466,-9.765499,-1.020233,-6.712945,6.010919,3.223134,-5.158869,9.459891,-0.958627,2.431449,-5.452112,8.613632,5.850851,2.920660,-3.071203,-5.111215,-8.806223,-4.564397,3.158878,-4.055899,8.817196,6.675107,-5.639331,5.318440,-6.820063,-0.886625,-6.403376,-1.421978,-6.733685,-3.560124,3.142866,-6.191676,8.080026,-4.139569,1.465880,-4.298181,-0.274409,-1.303356,-8.816151,3.498465,-0.453759,3.959112,3.838800,1.477389,6.554883,-5.011647,-8.100531,-2.012720,4.978282,-4.363337,-7.038400,-0.879713,-7.910342,9.784339,-7.183019,-3.746090,4.065070,-9.293325,1.396726,-8.793224,4.874626,5.803448,3.148188,-3.338461,-6.602443,5.864676,6.596765,7.407248,-9.410874,-3.818652,7.782697,-5.126477,-8.443657,6.614167,-0.904775,7.072400,-6.041112,6.502605,-6.137467,9.868803,-6.460026,2.142604,-3.009338,-6.643649,-6.235111,8.165034,0.163452,-9.437286,-9.039958,9.594226,2.425274,7.423116,-3.357541,-0.935285,-2.268430,4.888778,-0.128108,-7.753876,-7.443752,-7.434356,0.174366,-0.543568,0.645195,-4.288087,4.860573,-8.962812,-4.487977,-6.743453,-5.517832,-1.416635,-9.570868,1.681315,-2.112389,0.565848,-9.456724,2.161159,-7.478448,-0.570012,-8.734388,5.604524,0.250102,6.715110,8.795691,-5.836668,-0.754038,-0.499008,-2.770251,9.113747,6.938084,0.022320,-1.657850,1.425369,0.740794,-1.553921,8.857894,2.851103,1.326418,-1.792599,-8.481397,-4.280474,4.374833,-0.976730,2.395111,7.519085,-1.419987,-2.841552,0.698977,5.851952,-4.600390,2.748428,-8.854164,-4.137293,0.504265,-6.126281,1.086376,-9.683236,-9.102225,-6.352156,-1.962794,-4.314268,4.225526,-9.934275,2.070679,7.313245,2.026389,2.172450,8.670627,-4.286068,-9.319083,-8.611599,4.430171,8.073163,6.187867,8.834836,5.821540,7.509488,3.646622,4.292728,7.165229,-2.228755,9.298948,-3.608713,1.094862,9.312975,-6.309030,5.722916,-0.761586,0.499330,-5.790947,-9.671026,-0.776026,-2.864280,9.955293,-2.834543,-7.652574,2.016211,-1.838007,-1.500077,-3.808573,-4.324267,-1.995493,7.346016,-4.938340,-7.355459,2.034272,-2.597779,-4.911137,5.920604,-5.537834,3.852726,-0.978144,8.339646,-2.494109,-9.430000,8.631112,3.705065,-8.172675,5.472118,2.578144,-0.657194,-9.155271,8.275178,5.992099,-6.974010,-9.597919,7.666948,-9.508492,-5.045587,-5.241590,-5.562349,4.219027,4.902395,-8.203543,-3.897211,2.501008,-7.360556,8.807449,-3.891648,3.016889,-7.370822,-3.612236,-1.445867,-7.393469,-1.491742,-1.461563,4.336017,-7.968721,4.212059,3.239213,0.573518,-8.238401,-2.621791,3.891257,5.648784,7.451822,-9.778824,9.202684,-2.771311,6.480559,-0.065007,9.794400,4.930303,4.134894,-8.334862,-4.013775,9.954852,-8.599505,-2.289940,-8.511193,-5.352536,-3.482528,-3.535682,1.862185,2.887065,3.224770,-8.888005,5.692652,-9.498221,5.386065,7.032709,-2.805752,-1.521050,-1.494066,-8.887139,-0.834333,-6.660531,-4.348063,-0.114565,-3.828653,-5.478444,-7.287425,-9.096537,9.573122,-3.560863], dtype = "float64")#candidate|1873|(660,)|const|float64
call_1872 = relay.TupleGetItem(func_1625_call(relay.reshape(const_1873.astype('float64'), [11, 12, 5]), relay.reshape(const_1873.astype('float64'), [11, 12, 5]), ), 1)
call_1874 = relay.TupleGetItem(func_1629_call(relay.reshape(const_1873.astype('float64'), [11, 12, 5]), relay.reshape(const_1873.astype('float64'), [11, 12, 5]), ), 1)
var_1885 = relay.var("var_1885", dtype = "bool", shape = (14, 7, 8))#candidate|1885|(14, 7, 8)|var|bool
bop_1886 = relay.equal(bop_1822.astype('bool'), relay.reshape(var_1885.astype('bool'), relay.shape_of(bop_1822))) # shape=(14, 7, 8)
bop_1889 = relay.equal(bop_1825.astype('bool'), relay.reshape(var_1885.astype('bool'), relay.shape_of(bop_1825))) # shape=(14, 7, 8)
func_106_call = mod.get_global_var('func_106')
func_110_call = mutated_mod.get_global_var('func_110')
var_1892 = relay.var("var_1892", dtype = "bool", shape = ())#candidate|1892|()|var|bool
var_1893 = relay.var("var_1893", dtype = "bool", shape = (22,))#candidate|1893|(22,)|var|bool
call_1891 = func_106_call(relay.reshape(var_1892.astype('bool'), []), relay.reshape(var_1893.astype('bool'), [11, 1, 2]), )
call_1894 = func_106_call(relay.reshape(var_1892.astype('bool'), []), relay.reshape(var_1893.astype('bool'), [11, 1, 2]), )
func_992_call = mod.get_global_var('func_992')
func_994_call = mutated_mod.get_global_var('func_994')
call_1901 = relay.TupleGetItem(func_992_call(), 0)
call_1902 = relay.TupleGetItem(func_994_call(), 0)
output = relay.Tuple([uop_1835,uop_1861,call_1866,const_1867,call_1872,const_1873,bop_1886,call_1891,var_1892,var_1893,call_1901,])
output2 = relay.Tuple([uop_1837,uop_1863,call_1868,const_1867,call_1874,const_1873,bop_1889,call_1894,var_1892,var_1893,call_1902,])
func_1909 = relay.Function([var_1885,var_1892,var_1893,], output)
mod['func_1909'] = func_1909
mod = relay.transform.InferType()(mod)
var_1910 = relay.var("var_1910", dtype = "bool", shape = (14, 7, 8))#candidate|1910|(14, 7, 8)|var|bool
var_1911 = relay.var("var_1911", dtype = "bool", shape = ())#candidate|1911|()|var|bool
var_1912 = relay.var("var_1912", dtype = "bool", shape = (22,))#candidate|1912|(22,)|var|bool
output = func_1909(var_1910,var_1911,var_1912,)
func_1913 = relay.Function([var_1910,var_1911,var_1912,], output)
mutated_mod['func_1913'] = func_1913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1250_call = mod.get_global_var('func_1250')
func_1252_call = mutated_mod.get_global_var('func_1252')
call_1920 = relay.TupleGetItem(func_1250_call(), 0)
call_1921 = relay.TupleGetItem(func_1252_call(), 0)
output = relay.Tuple([call_1920,])
output2 = relay.Tuple([call_1921,])
func_1951 = relay.Function([], output)
mod['func_1951'] = func_1951
mod = relay.transform.InferType()(mod)
output = func_1951()
func_1952 = relay.Function([], output)
mutated_mod['func_1952'] = func_1952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1287_call = mod.get_global_var('func_1287')
func_1288_call = mutated_mod.get_global_var('func_1288')
call_1996 = relay.TupleGetItem(func_1287_call(), 1)
call_1997 = relay.TupleGetItem(func_1288_call(), 1)
func_1396_call = mod.get_global_var('func_1396')
func_1397_call = mutated_mod.get_global_var('func_1397')
call_2002 = relay.TupleGetItem(func_1396_call(), 0)
call_2003 = relay.TupleGetItem(func_1397_call(), 0)
output = relay.Tuple([call_1996,call_2002,])
output2 = relay.Tuple([call_1997,call_2003,])
func_2018 = relay.Function([], output)
mod['func_2018'] = func_2018
mod = relay.transform.InferType()(mod)
output = func_2018()
func_2019 = relay.Function([], output)
mutated_mod['func_2019'] = func_2019
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2037 = relay.const([[[3.727456,1.153191,8.739473,6.634464,5.168624,-7.605112,-1.190770,-4.569786,2.121536,-4.021127,-6.055972,0.998364,-0.017197,7.240201],[-6.876893,3.161005,-6.847890,-0.346409,2.650051,2.932132,-9.917400,5.023192,9.208939,9.371854,-8.182319,-6.697451,-6.921639,5.516659],[4.783240,9.068288,2.003639,9.872329,-5.909735,-6.736321,-0.689781,-2.851289,2.645904,9.686760,1.396748,-4.757858,-6.731142,-8.738765],[-5.166833,9.821021,-2.544659,8.518957,4.668055,9.798350,-9.115765,-5.058200,4.585260,-9.214879,-8.956763,7.158234,-2.611778,4.475353],[3.582175,-1.513588,8.938111,0.189030,-8.387251,-7.866079,1.171959,8.733673,2.398107,-1.922425,-8.019984,8.510095,6.421508,-4.365656]],[[-4.503545,-8.002165,4.987359,7.252335,3.139107,5.501565,6.764784,2.872478,8.213533,4.285062,-0.315244,-5.761306,-5.569067,-4.716660],[-1.216737,7.683123,-2.289412,-3.251387,-7.048279,2.302584,-5.574430,-0.505966,-4.524541,7.645219,-5.186161,-6.913177,-2.911964,-0.120632],[-6.859781,-8.997678,1.171369,-5.663353,-8.103680,-0.197552,-0.128437,-1.674237,-4.677168,2.691821,-2.612739,-9.794696,3.857210,-0.252790],[1.467445,-4.181819,9.764895,5.999290,-4.954616,-4.963703,-4.487894,-8.199731,-7.286669,-8.325720,6.089238,5.193951,-9.557394,-6.268770],[-7.711770,7.719347,7.828069,-4.699142,1.216330,-4.001367,8.417077,-9.254311,0.882113,-0.710853,6.982200,-3.301151,-3.057400,-1.241140]],[[5.167026,-8.571241,8.177069,-2.175711,9.007509,2.495681,-8.801642,2.938609,8.206451,0.148324,-1.015988,-3.699933,-0.499459,-7.003514],[3.267647,1.873939,9.018584,-5.566161,-7.361851,-5.177501,7.173206,-6.858195,1.492288,9.805878,7.668954,9.318280,6.015965,7.421829],[-1.339552,-0.452571,-7.982242,-0.788610,-0.727909,9.051589,8.783991,-3.640652,3.760913,-6.822641,-2.315398,1.158612,0.713971,6.021386],[6.514585,-0.483438,-8.934400,5.223476,0.057331,9.667833,-0.846365,-0.085590,-3.340066,9.255823,2.166628,-0.558712,4.373689,7.219713],[-3.400046,3.857484,4.407987,2.516295,8.261993,-4.804096,-3.638768,-1.192339,-8.810281,9.799599,8.570713,4.219392,-6.390488,8.349181]],[[4.998569,-3.633494,8.422041,4.192415,-3.420242,3.237508,0.363831,-8.474237,6.220821,3.379255,2.660478,-9.236938,7.168465,0.412034],[9.819715,3.633180,0.972485,-5.865098,-8.134048,8.451243,-6.271774,-9.062851,-6.314591,6.391260,1.215822,-3.616829,2.909382,5.090257],[-8.825693,2.161825,4.147703,-6.587003,-5.581716,-2.070659,2.631837,3.071139,-6.094049,7.569432,-3.328212,-5.240913,8.369746,-5.642320],[5.154708,9.531656,-4.871220,4.075221,-5.745128,-8.642365,-1.043510,9.634092,-6.499598,9.149831,-8.013072,-4.067962,4.244738,-9.688101],[2.746756,-5.656003,-4.247413,-3.896627,-3.174272,1.875695,1.255693,8.418339,-1.878112,7.439856,-3.241934,0.679628,-4.321751,8.398926]],[[-6.691185,-6.754100,7.165987,-6.260992,7.794036,-3.887448,-3.061692,-3.500082,-1.799421,3.250088,-7.471771,1.009046,2.380781,3.847600],[-5.360560,7.947559,-4.428749,-4.225345,-0.063995,1.100093,2.501895,5.246985,7.800463,-3.182970,-6.274487,-6.997680,-9.290514,0.941693],[-6.159493,6.495960,4.770863,6.760793,3.457794,5.837807,-6.982603,1.294333,4.617322,7.907652,-0.476406,-4.116317,9.424990,4.017973],[-9.822965,4.317421,5.584542,-7.458690,-4.144677,-7.800658,7.161523,8.497760,-5.175816,-1.391066,-9.418049,3.360769,2.197494,5.818275],[-9.012556,-1.065801,0.126857,-0.869841,6.594047,5.642387,-9.548875,4.895017,-4.565189,-3.750622,7.801724,-9.768245,-5.291492,-8.634755]],[[7.293011,2.062842,-8.720039,-7.023436,2.877287,-1.189869,6.789516,-2.046305,7.331848,-9.330299,7.238912,-7.112819,8.177166,-9.594230],[-2.952629,1.132096,-4.646306,-5.820508,-7.895194,-7.671840,7.605528,-5.186068,-1.374556,-8.406301,-0.606246,3.266195,2.149811,-7.143950],[-2.457919,3.062025,2.259953,-9.131181,9.308960,-0.052948,-6.595978,2.436714,2.761379,-2.246925,6.557448,1.370367,2.062817,2.961404],[2.296272,7.512267,-1.382377,-8.627861,9.426487,3.698424,7.200428,8.615274,-9.648080,1.240497,-2.963586,0.440763,9.301333,-5.113394],[-3.637764,6.451774,5.714903,3.529548,9.339615,-6.190910,9.469719,9.872527,3.949369,-2.529709,-1.560369,-3.667143,6.574712,-8.091752]],[[-8.333316,-3.703007,-4.465068,-3.659744,-9.396231,0.023911,-4.082897,7.726586,8.555212,-1.622548,9.714191,-2.612968,5.829935,-8.744537],[-4.555355,2.629034,6.686746,9.465121,9.710940,-5.568711,-0.199125,-7.228759,1.834782,-5.936755,-3.129854,1.571115,2.365223,9.667714],[-8.137394,4.544297,-8.516374,-5.456493,-0.919751,1.169740,4.325035,-7.654604,2.647696,-1.177210,-9.499933,0.244492,-5.000300,-5.616046],[-6.875908,-0.636404,6.726725,-3.452329,-5.386006,-2.605087,-4.418618,-3.586755,2.306196,1.592610,4.226334,2.858951,-7.248115,4.582562],[8.585782,-3.146520,0.625720,2.361158,4.360679,8.550776,-8.278311,-8.505556,2.191270,-0.170949,1.026886,-5.835603,-0.066158,-4.536316]],[[-2.555876,0.164992,5.654132,-6.913682,-4.463292,-3.017952,6.223192,6.211152,5.802114,-7.771067,-5.651027,7.185375,0.002890,4.155920],[1.725878,-6.793963,2.951975,5.256144,-4.589524,9.320835,1.820698,-4.498985,8.929990,-4.172436,2.726867,-7.214845,-2.688575,-5.724042],[1.695563,5.147716,2.791923,-8.950117,0.807930,-7.506417,6.229240,-0.754160,6.524008,3.974214,-4.423804,6.755630,3.437564,9.914722],[3.776776,6.743940,6.120267,1.102028,-7.061130,2.135081,7.514169,0.089061,-3.573109,-9.112327,-4.077876,-5.125736,3.906783,3.386592],[3.619759,-3.604557,-5.193704,2.290738,-0.141609,-6.334103,1.706132,-0.803157,4.278722,1.356757,1.277838,0.142270,-2.178318,-0.153472]],[[4.279332,-5.537929,8.693971,5.444715,-8.336457,5.144471,0.235419,8.550383,-9.556294,-0.561158,-5.429776,3.943965,0.806265,7.193701],[-3.140126,7.610091,8.924957,6.151086,8.437315,-9.901716,3.847456,-7.365103,-0.883994,8.046805,-8.544530,-2.311389,-3.261672,-9.615094],[8.785585,3.436007,-1.406532,1.712465,-4.458076,-6.457021,-4.807626,1.159356,-5.734704,-4.885880,0.088240,8.094004,5.355975,-8.857615],[3.525371,0.679293,6.041132,5.388334,-7.911004,9.706842,0.686903,-3.631742,2.559762,8.754751,4.860791,-4.203130,-8.952505,-4.691459],[0.534154,5.157826,-6.232604,1.288222,7.868106,2.094956,-2.827683,-5.306534,-6.075559,9.543604,-8.338851,8.250792,-0.950744,-3.095370]],[[-7.206348,7.555554,-9.547485,-7.162174,1.621150,-3.237047,-3.764058,-7.929129,-4.559587,-8.565585,5.448197,-0.613265,4.558210,-0.227717],[1.312320,-0.265411,5.072613,-5.029682,-2.988383,-3.344417,-8.174573,-4.228477,-5.852211,9.657714,4.818932,2.623871,3.287674,-7.576143],[-7.986379,3.467481,7.894147,5.434107,1.644037,-3.327133,-2.340923,8.492654,1.182426,-8.526574,3.960933,3.762209,0.593401,8.576092],[-4.430475,7.308897,-4.159642,3.532385,-1.935189,3.064568,-0.063444,8.152900,-9.928622,4.833286,-9.196142,-9.068358,-3.360397,-2.547039],[-4.969673,-2.473012,4.940867,5.216465,-4.988985,-4.570769,7.796855,-3.195699,1.567690,9.571778,9.860894,-4.414553,-3.046946,4.456015]],[[-0.755488,-4.589140,3.147691,4.718777,9.279594,5.713507,5.339301,-6.051278,7.645901,-7.287215,6.392961,-2.517454,4.845990,-3.194336],[2.982822,-4.235112,-8.540025,2.271933,9.061230,-9.799590,5.965757,2.282016,8.548532,-0.524025,-9.406111,-3.340029,-1.406632,-5.051107],[1.476839,2.578764,-5.380751,-9.190696,-4.463240,2.934174,-8.556846,-7.050619,9.279847,3.987006,-4.628563,5.458871,-1.933860,-5.007194],[-9.316251,-2.033115,0.922295,3.505013,2.174586,-2.015523,0.332767,-7.590903,-5.233478,5.275638,-5.519301,-3.240535,-4.094413,6.077473],[1.154567,3.724359,9.895119,5.355897,6.387395,-7.287668,-4.532259,3.006173,-7.137891,-3.568664,-7.406522,-6.807273,-9.277152,9.949576]],[[-7.489126,3.553071,-9.171102,-3.458261,2.618720,0.297549,-6.152219,3.047517,-3.257153,-7.744484,-6.967563,6.192294,-1.639973,5.589047],[2.364270,-3.746078,-8.817780,9.069654,-0.644174,-5.918336,-0.251339,0.316725,5.822025,0.680416,8.655109,6.768890,-8.304662,-0.155088],[-3.081269,2.200873,5.610907,-5.568754,-5.764264,-6.672502,3.409606,-3.427442,-3.962711,-6.940996,-7.347686,-5.902834,6.027157,-0.069851],[-8.798752,-4.288947,-8.141826,-3.850066,9.146128,6.981809,9.251105,8.238360,-1.400296,-5.701499,5.223380,2.433909,-7.580845,0.085974],[8.653834,-3.253966,-5.101535,-3.785468,-2.603444,-3.689721,0.731184,9.817483,-8.870931,2.313023,-2.625006,7.106313,-6.771555,-6.928491]],[[-9.406273,-1.781168,6.194142,-1.687021,-2.518247,-1.570933,4.252649,-0.580490,7.027785,0.481260,-6.168320,-0.946557,-9.567685,-4.925044],[-1.738820,-7.097777,-9.937742,-4.330394,1.745642,-0.052243,-5.692600,-2.036753,2.747990,-0.498461,0.946112,-9.446164,5.919285,-6.390713],[2.338112,-2.849282,6.919912,-9.545322,-7.860470,6.416098,9.735776,8.939800,3.931752,-8.157732,-7.660199,0.840483,-8.492977,-1.362231],[-1.798862,-7.571099,8.063899,-8.588945,1.470564,9.307586,7.770630,3.836917,-0.368533,-3.438248,-6.893762,-6.284722,-5.507371,-9.638701],[-5.797232,-8.040358,-4.391977,-2.036514,6.509293,-7.469210,6.763064,-1.303401,0.682931,-8.149413,-2.362060,2.111515,1.474337,-2.380605]],[[0.264714,-2.569831,4.670034,-3.971321,6.678695,4.667142,4.447187,5.083967,4.778116,-0.404603,9.542532,-2.782206,3.965601,4.418919],[-5.953773,-3.774758,-9.816803,8.397326,8.991106,5.049726,-1.443310,-2.205845,1.724492,-7.890653,8.797939,6.037941,7.048435,1.269379],[9.982137,1.282415,-7.889943,2.508676,9.694103,-1.686412,-8.387362,2.284516,-7.996677,5.417159,-6.322249,1.479483,-9.818256,-7.899346],[-2.161206,-0.454945,-5.571325,8.719206,-7.437412,-7.206001,0.125580,-7.630948,-7.347229,-6.202626,7.221866,-4.420124,-2.698877,-2.199813],[-5.304204,-7.180141,-7.647363,-7.576822,1.064081,7.506483,-6.799673,7.662685,-6.282139,-9.316715,4.007707,4.706987,-7.553042,-9.355870]]], dtype = "float32")#candidate|2037|(14, 5, 14)|const|float32
uop_2038 = relay.acos(const_2037.astype('float32')) # shape=(14, 5, 14)
func_1785_call = mod.get_global_var('func_1785')
func_1787_call = mutated_mod.get_global_var('func_1787')
call_2049 = func_1785_call()
call_2050 = func_1785_call()
func_1676_call = mod.get_global_var('func_1676')
func_1679_call = mutated_mod.get_global_var('func_1679')
const_2064 = relay.const([[7.073424,-3.956556,6.873256,1.837435],[-9.035797,2.605211,-9.995153,-3.875946],[3.053704,8.124026,4.229221,-1.063818],[3.654577,-0.218017,-1.882759,-7.062552],[2.270279,-8.191984,2.064719,-5.188311],[-5.317090,-2.928876,6.814509,-5.425765],[2.416195,3.768549,-0.936492,-3.335737],[8.779700,-8.630633,2.675250,-3.230885],[2.250379,-2.325205,-8.286286,-4.041038],[-2.242547,6.718437,4.244023,-2.921250],[2.039651,-4.890322,8.266018,-6.212843],[0.070013,-4.995369,2.960427,-5.537729],[3.722786,8.643438,9.071618,-5.594705],[-5.516758,-5.424608,-5.654393,-3.165432],[-9.644246,0.789761,4.724715,6.399094],[-7.913847,-5.308538,-2.843184,-6.616334],[5.120413,0.419484,-5.768819,-6.786230],[2.935542,-9.225804,1.214439,8.648895],[5.803031,3.539474,-1.035911,-2.849155],[1.879558,2.339324,2.346975,1.928833],[6.938510,4.731830,8.838288,7.297321],[-8.556348,-7.981364,-4.030346,-3.817328],[-7.580510,2.759825,-6.038569,-9.297883],[-4.263920,4.028994,9.999662,-8.512402],[8.209217,-6.163763,1.827247,7.602990],[-7.156179,5.216724,7.515294,-4.741104],[6.575905,4.699185,9.835739,5.562514],[4.689967,4.738425,-4.033163,4.832068],[-0.122668,-8.278275,5.101838,0.206483],[5.323713,2.928370,-3.890225,-8.351673],[6.800885,1.487593,7.441542,-9.278647],[9.829557,-9.908724,1.983527,6.896992],[9.367023,4.654992,2.886077,-6.149254],[0.588607,-5.423208,-6.157803,6.336737],[-1.125191,-7.365211,-5.289396,-3.166478],[5.107571,7.485823,-7.355638,-3.778238],[-1.335400,5.110250,-6.572816,-3.692258],[6.750539,-8.189392,6.691909,1.541001],[-6.848284,-7.495154,-5.172244,1.825969],[8.538498,-8.524066,9.255396,1.308074],[-5.046809,-0.208572,3.528021,-6.705347],[5.814755,-3.169229,-3.625931,-3.298096],[4.291385,5.093399,8.495589,0.967172],[0.050856,-9.526730,-5.572583,-9.622889],[-2.770610,-1.940636,5.645114,-9.384056],[5.221054,-3.397882,-4.751684,-2.804454],[6.803944,1.237648,-9.726345,6.567138],[-7.191248,6.637062,1.832222,7.374949],[-5.083277,9.967970,-5.595098,-3.770366],[-7.981142,-9.260391,4.956509,6.879826],[-4.486997,8.001352,6.332808,1.330429],[-9.032887,1.829820,-4.525418,-6.630292],[-1.474145,8.334484,8.045169,-8.937289],[-0.344151,4.688228,2.391262,-3.883641],[8.413150,9.863761,-7.155668,4.003189],[7.958863,-1.689148,6.134728,-7.659380],[1.828459,3.606943,9.787165,-4.860529],[-1.841071,3.068345,-4.021762,0.211901],[8.600434,3.848168,5.276043,-4.271511],[2.512950,9.314121,4.709691,-8.678354],[8.707952,-1.453670,5.794575,-8.670449],[-1.251894,4.470729,8.001819,-6.621228],[4.272185,-2.350800,-2.437196,0.386982],[3.783690,7.115128,-5.189262,8.455338],[9.843068,-6.107780,3.171373,-0.279611],[-1.186166,-7.235543,-5.295536,-5.707167],[-4.998829,8.917362,-8.856523,-5.998890],[6.027892,-9.979169,1.137892,3.464753],[6.406461,0.436530,-5.561945,-4.844940],[-6.803380,-6.962998,-2.164894,-0.743892],[5.857478,0.504772,0.677109,1.658612],[8.154128,-7.669161,-6.628824,7.962512],[-1.233335,-1.578550,-7.813970,0.687106],[7.032090,-7.387186,9.026357,5.818785],[-7.311926,-7.460934,-9.627668,-8.822136],[8.914896,2.718027,-8.806458,-1.647591],[1.399310,9.745001,5.393193,-0.887323],[-9.137938,-6.288926,-6.284372,-6.544499],[8.525307,-3.093942,-6.670343,4.280460],[5.143368,1.105968,-4.921047,-7.710959],[-8.872515,5.769935,1.800123,8.861346],[-8.973829,7.771600,6.621286,3.812833],[-3.677760,-7.060863,-0.816395,-2.612726],[-6.426786,5.477802,1.271083,7.145978],[2.954074,-7.868403,-3.844114,-2.505670],[0.824723,4.312565,3.082787,8.018057],[-5.947413,6.396348,-4.926117,3.930440],[0.077615,9.007420,-9.268310,4.027671],[5.414352,-6.526556,9.239666,5.239816],[-2.345667,3.330702,8.516929,9.998678],[-8.723040,6.501108,0.125420,-8.405796],[9.248994,1.417401,-0.625531,-1.123120],[-6.409909,5.465912,7.242456,4.545101],[-9.855095,-1.528618,5.866629,8.934625],[-0.415601,-9.066635,4.308786,-1.145395],[-9.697054,5.528980,-0.242719,9.658513],[-5.821478,-6.026670,5.151345,-5.794972],[-8.884885,1.206299,-9.399747,-8.790885],[9.436989,-4.294967,6.709129,-7.011029],[1.241458,-2.527019,7.909791,-3.744106],[-4.513033,4.632681,-6.268051,5.429189],[-7.161269,6.946787,-5.954070,4.547865],[-5.867063,-4.217563,7.175965,-3.805302],[-3.107047,-4.125137,-9.528993,-9.524659],[-2.465452,-2.407573,8.971775,8.346988],[-5.356963,-7.601248,-5.293801,6.585639],[-8.233657,-6.307578,-7.990412,-4.456953],[6.741599,-3.095004,0.164559,7.015237],[-4.731871,4.180714,4.091126,-9.877715],[8.706486,-8.524945,-1.927365,-2.940056],[-7.903202,-5.494683,9.908025,9.724444],[-2.221116,-2.383949,-7.280986,2.589360],[9.548680,-7.170260,4.593448,4.498755],[-4.976069,2.324782,0.040361,0.422256],[-9.693144,-6.167602,-9.059943,5.259317],[3.996748,-0.368566,3.443937,-8.024759],[-4.662607,2.816287,2.416061,-8.665010],[0.897521,3.506208,-2.687920,-0.242096],[-0.813543,-0.063371,-7.195460,6.872768],[-6.499737,-5.067519,4.729336,-1.311724],[8.494419,-0.307703,-5.667152,-7.414134],[-0.462343,-2.211888,-2.074074,8.613935],[0.018477,8.069795,2.083321,2.929595],[9.739358,4.266398,0.056731,-5.219509],[-7.794023,3.149612,-4.383962,-6.368079],[0.534465,2.022175,9.269338,1.812518],[-6.715439,-7.973584,6.886157,4.354017],[6.102271,-9.323620,6.409720,-0.798883],[3.131772,-8.975514,2.729546,-8.575855],[-2.244274,9.725529,-8.820136,-2.473506],[7.290881,9.212039,0.737170,7.287476],[0.860701,4.290577,3.149264,-8.413297],[7.520463,-3.622306,0.658027,-1.213740],[-6.083573,5.569074,-9.345377,3.833354],[1.308415,-9.231651,-6.362849,2.626499],[8.322673,-7.047645,-2.902398,5.740300],[2.987875,9.569375,-2.949937,-8.764128],[1.045391,-1.550457,-8.016355,3.357811],[-0.473860,-0.927657,-4.525645,-6.838986],[-4.346278,-1.363438,-3.249440,-8.950259],[5.119758,-9.261677,9.629430,-9.714361],[1.237017,-5.773588,-3.788556,8.518829],[-7.993529,8.365708,4.153240,-1.314537],[-7.545676,6.306738,1.636485,7.122339],[4.040487,-0.161365,-3.788556,0.202597],[6.604922,6.490421,6.577739,-0.557113],[-7.938280,-6.362176,-7.716987,9.868736],[1.031702,6.337734,0.019788,3.962583],[-8.755895,7.077118,-6.209858,-8.955576],[4.099971,-9.593531,-5.353558,-1.443568],[-0.942310,3.511248,7.550156,-1.261186],[4.156796,8.185256,-5.221259,8.827576],[1.867302,2.665116,5.828143,1.254219],[-0.480962,1.068675,8.614300,3.317998],[8.455682,-9.343010,-8.546288,5.068675],[-0.967103,-7.920879,-2.156562,4.019360],[-1.150333,9.961464,8.199571,-6.543122],[-1.371218,-9.893751,2.168823,-3.453451],[-0.049185,-9.313708,5.124978,-2.661283],[-1.175867,-2.549904,-1.372950,-4.607182],[-4.780737,-9.556908,5.510548,8.339487],[6.084823,3.318748,-0.624887,9.852137],[-9.776384,6.248786,1.710964,3.233159],[-8.154500,-3.465150,5.407568,6.193238],[6.309894,1.121624,9.882834,-0.451848],[9.962629,8.822763,1.057454,-6.225036],[-3.293778,7.181681,-4.361253,-8.279411],[-6.392373,8.576209,6.791948,-0.515213],[9.499239,6.298810,-8.370303,7.646029],[2.044237,1.848710,5.603492,-6.921185],[3.051952,7.151412,-1.534761,-1.630972],[8.099425,1.494736,6.679975,9.420090],[2.089752,4.975128,-6.949927,0.756735],[1.912770,3.083652,4.782670,2.067032],[7.432389,-6.201928,-4.235049,1.158915],[-9.107077,-8.427516,-1.087033,-6.010599],[3.698559,9.865118,-4.432180,5.021773],[-7.380998,-8.563157,8.952332,-5.693611],[5.831353,-5.483867,-6.882789,0.490003],[-8.659817,-8.659715,4.914700,4.979495],[-4.685988,-3.217586,5.395370,-4.473794],[-5.583480,3.991027,-2.777150,5.860108],[-7.810181,1.073625,6.331935,-1.064874],[8.408249,-2.260736,2.192410,8.562922],[-0.291934,2.349447,2.033648,5.487904],[-4.205246,9.449979,8.606613,-3.044507],[6.469130,-9.708806,-3.334537,-6.816165],[4.091279,-8.261977,-1.757533,-7.043523],[-6.369906,3.989399,7.863764,2.245840],[7.998930,7.902436,0.040879,5.564942],[0.978576,2.135160,-8.011543,1.088002],[-4.898028,-4.765010,6.492467,-6.029760],[-4.083361,-8.645788,-8.249454,-2.436919],[-9.036288,-6.315524,2.381877,-7.961893],[6.517975,0.865045,-1.112244,2.133901],[-4.319691,2.715669,-9.264310,2.726454],[9.336468,6.058040,-1.687212,-8.253856],[8.552733,-3.193285,-2.692261,9.037097],[9.320858,5.824023,-9.453538,-7.687287],[-0.942719,-3.753166,4.778844,-3.398126],[2.159717,2.334795,8.072090,8.542311],[-0.641803,2.956470,-6.012162,4.813342],[9.161202,0.310496,6.478537,5.442822],[-4.166405,6.670666,2.286011,-0.582340],[5.186605,-3.460070,3.969347,7.388005],[-6.462310,-2.921076,1.960045,-0.303819],[-6.677597,-0.679783,4.535453,-1.328510],[-6.805217,-9.114155,9.318483,-6.953968],[-5.002998,4.823435,-0.845046,7.223269],[7.338696,-2.996273,7.837760,-9.312022],[-2.164047,-3.557885,-8.037582,9.305713],[-7.760839,-6.533213,6.282161,-6.811781],[-9.302595,8.909229,-5.957764,9.194136],[0.715316,-5.094660,-3.790702,-1.383148],[-3.434446,-4.578875,3.165667,7.872266],[1.065566,4.851841,-6.828933,-1.895696],[1.168861,-1.521706,3.546442,-5.457981],[9.875931,5.890063,9.795140,-1.979616],[-5.063663,-8.781826,5.103443,2.291940],[6.056892,3.854431,-0.199832,-2.555260],[5.020237,0.562340,-9.835243,7.532421],[5.750564,0.194183,9.574685,-4.721656],[3.828251,3.842377,-3.627636,1.645087],[-5.930554,3.666683,8.220047,-3.731290],[-0.363270,3.737609,8.685886,-8.359676],[8.419717,7.575951,-5.173860,8.955870],[-9.084838,-0.846862,8.460611,0.681362],[-1.835247,1.351979,-6.569352,-8.672862],[2.465234,-6.829267,2.402295,0.780365],[-7.444058,3.152409,-2.861207,-7.425313],[8.733588,1.203941,3.842135,-9.981876],[-8.240794,3.427638,-9.773410,5.040035],[3.953304,-8.930541,6.577710,1.054729],[2.542144,-0.762537,1.933642,-0.657143],[4.065927,-9.348640,-4.564604,-0.254027],[-7.670477,-1.654559,8.382294,-3.331372],[9.631456,2.248255,0.027542,-9.405790],[1.943731,-0.538490,-5.563704,-2.835625],[6.827120,-9.447676,7.894510,-4.108863],[-7.400257,-5.425500,-0.864118,-0.967935],[-4.501943,-7.048898,-1.459639,-3.384855],[8.278525,2.103764,9.327198,9.232804],[-5.128514,3.248367,-8.288988,6.658141],[-9.973398,3.195667,-8.820053,-6.439465],[2.481736,-7.988367,3.159977,-6.133970],[-4.039036,-5.854575,6.060302,-1.744240],[2.570988,8.804841,8.188168,-6.578915],[8.374067,-0.164533,6.852912,-6.538792],[-3.199011,7.098197,3.265892,-5.374945],[9.976378,5.676362,3.505010,-8.010948],[2.641749,-1.785468,-2.498049,-9.738390],[-2.957313,0.462105,3.383034,0.007605],[8.789066,-4.645522,-8.499486,-0.352432],[9.550377,-5.457942,0.190255,-7.224212],[-0.137449,4.434823,9.811911,-0.130107],[-5.471583,-1.106519,8.259351,6.190889],[-3.169478,0.253616,8.792557,-6.219871],[-8.893480,5.310440,4.273612,-0.053908],[-3.677704,-8.687919,-5.221023,-2.237320],[-2.132413,-5.944741,-7.051232,-6.423217],[4.462294,4.273360,1.293848,-4.362681],[-1.865822,2.172717,3.826227,3.227250],[1.242131,2.137763,8.990157,5.314082],[-6.203411,8.307307,3.129102,6.789573],[-8.354317,6.064577,-8.782542,9.104501],[6.394359,-9.432299,-8.700586,1.037959],[4.986993,8.134192,-9.892219,1.191260],[8.047042,8.770170,-9.800339,0.949897],[7.894427,8.564079,-5.792132,-0.836903],[7.222246,-5.165003,-6.825992,-4.052387],[0.844016,-0.088282,-2.095243,-9.234483],[8.204471,-7.772478,2.601441,-0.238310],[6.074230,-2.016648,-6.532573,6.343060],[-7.624146,2.319645,3.638335,-5.166239],[-7.321898,-4.705672,-2.063586,-6.842620],[-2.803962,-2.455010,-8.278869,-2.901153],[-2.435487,-4.560762,2.113667,-1.981671],[7.178351,9.971422,6.541409,7.832617],[-2.227915,-4.037270,3.377574,-5.382892],[-9.992642,7.052965,5.995692,-2.344736],[-3.266802,-4.695932,-5.362208,5.147219],[3.335584,2.165558,8.392754,-7.983969],[-8.696269,-2.772668,9.543732,-4.243630],[4.695692,-5.167904,5.646354,-3.463975],[0.085358,-0.376030,-5.961368,-8.850912],[-0.382213,-9.700955,-1.276484,3.448751],[-8.991191,-8.716482,2.657057,1.880461],[-5.861491,7.902037,-9.921805,-1.572321],[5.653507,4.700909,-0.176954,1.810847],[1.275921,-8.019830,-7.367109,7.165354],[-4.960490,-3.286609,-8.277405,-3.309410],[4.092373,-3.932463,-9.933185,-6.422130],[7.358577,2.657988,4.240275,-2.456004],[-3.970863,-4.719082,9.637319,1.172845],[-9.565151,3.207834,9.563019,8.386738],[9.990200,-4.584703,-4.719788,3.548783],[7.621953,-9.335726,7.233924,6.536150],[2.756458,-6.769265,4.799757,-8.769035],[7.188684,-7.569005,-9.017469,-7.269423],[-6.070555,6.342956,6.391958,-9.099516],[3.152301,0.657221,-5.952059,-8.385345],[-4.068093,-6.544426,2.472843,9.454567],[-6.465338,2.825357,-0.417406,-0.084438],[9.076314,4.341119,3.315136,8.943477],[-7.503732,7.861396,5.653507,5.410251],[3.986739,-8.396373,-9.957793,7.817598],[7.572008,9.664167,-0.915945,-2.590059],[2.729727,-5.176022,-0.921023,0.693836],[-9.723147,2.201319,4.148061,-2.275373],[-5.422122,9.359339,-4.355348,0.641814],[8.028590,4.269814,-5.334357,7.193685],[-5.595076,-5.537920,4.004400,8.809888],[6.605260,-2.787025,2.102741,0.120237],[5.253543,1.071115,0.102035,7.538905],[0.243124,1.968189,5.467035,-9.034236],[-3.772604,-3.136693,-1.894262,-2.446538],[-9.386474,-8.361504,4.630133,1.960473],[-9.469450,-3.327709,7.408076,5.392215],[6.482398,-1.396513,0.457993,-5.900871],[-1.875977,-7.705914,-7.861352,-9.764549],[0.184705,5.522227,-9.648467,4.023068],[9.318472,-4.075586,7.479480,8.415771],[-7.237808,8.834301,-2.347518,-2.754354],[-8.766852,-5.861075,4.531589,8.776975],[7.964254,8.345531,4.154857,4.236337],[-5.889966,1.260066,5.163600,-2.546561],[0.792563,6.642795,5.807099,-5.643586],[-3.382935,9.626309,4.068906,-3.090818],[8.275253,-2.953016,-9.356637,1.174163],[8.538395,2.064556,4.066274,9.911074],[0.195627,0.206687,-2.058629,9.214040],[-9.935611,-0.613936,6.696000,-3.896966],[-7.126239,-9.626953,-6.507845,4.919935],[-7.479243,-7.624205,0.902028,-8.027001],[1.301449,6.543933,4.611836,-8.731335],[7.956182,7.872531,-4.253110,0.058924],[-2.400452,4.819443,1.315879,5.884206],[5.487276,-3.709287,1.729214,-2.272351],[-0.914579,-7.294328,-3.751763,9.211214],[9.999911,-2.741777,-9.018027,-9.395805],[6.058368,-6.153645,-3.367696,5.643701],[2.562499,-7.303441,-7.881423,6.393427],[2.718829,2.280184,6.248816,2.552244],[7.165246,-5.545794,-4.229754,4.403499],[-8.041917,-0.832982,0.680919,7.202933],[8.486606,4.689146,-9.281804,-1.241718],[-1.366519,3.536552,-0.223908,-2.196971],[-0.547255,-9.347263,9.860742,1.374738],[1.934567,-0.517851,6.815259,8.156992],[-9.396352,-0.420715,-5.789397,-8.358064],[-5.462938,-8.201716,-0.119051,6.515291],[6.062119,6.233598,9.172540,-4.429862],[5.986767,8.537775,-7.525721,9.856904],[9.651113,1.314594,8.674617,-3.717951],[4.264463,-5.084627,7.024472,5.406364],[9.395900,0.368941,9.576636,3.210235],[-2.126891,8.450583,-8.875589,1.472217],[-5.322190,9.478268,-0.874997,-2.130635],[-8.063112,-7.659133,-7.362567,-1.465442],[-5.198678,-5.776724,0.680601,-2.465576],[-5.227287,6.797286,5.687511,-5.471061],[6.815064,8.826286,8.863124,-8.029845],[-4.653754,1.206228,-5.626018,4.421139],[2.805458,-0.474104,3.086402,-2.341171],[-4.984689,-5.946547,2.393413,0.653726],[-3.724376,-8.182535,-2.706259,3.778577],[3.538860,2.604193,-4.538958,2.672135],[-8.447432,9.567451,-7.209648,7.722550],[5.976808,-4.311572,-2.098678,0.265185],[-5.509640,-2.403078,-0.967106,-5.543401],[-8.370934,6.190639,-0.053862,-8.623920],[-7.311472,-0.219678,-0.480183,0.392769],[-6.152340,-2.495765,-3.070460,3.656925],[0.395318,6.165602,-8.682554,-2.748467],[-4.507829,5.123589,-6.476125,8.688341],[6.559780,8.861534,-8.405755,2.127981],[6.049077,1.796868,-8.947972,-5.013530],[1.652304,4.781981,1.055155,-6.158050],[-7.848050,-1.299747,-9.141184,3.414235],[-8.221521,7.139592,-2.359299,6.145506],[-0.991674,0.433024,6.075486,-7.446374],[9.745635,-8.217678,6.673595,-6.543662],[7.160465,-7.491557,3.822168,1.040129],[1.509261,-9.156892,-7.939460,3.523837],[-8.607295,6.100425,-7.767004,-4.913078],[8.748720,6.140768,-0.111202,-9.243967],[-6.153639,6.182206,3.523635,0.645082],[1.106653,-6.249414,7.652969,-7.652764],[-9.421970,-0.191590,0.107341,-5.254460],[8.560073,-7.848532,-0.835604,9.217318],[7.089898,-0.629146,-5.026242,7.352936],[1.432364,3.350835,5.021601,-1.625897],[3.325663,7.463687,-3.861616,2.541432],[1.135929,7.039709,8.410556,-3.337854],[4.377573,5.099922,6.146657,7.760853],[-7.992369,5.606137,-3.075465,4.935784],[-6.502462,-7.125852,-9.950094,3.042291],[1.777257,7.628293,3.583053,-3.805123],[-5.761244,-5.279121,-1.097794,-1.274066],[-8.695165,8.085383,-2.560584,-7.995349],[1.906512,5.780124,6.122595,7.831306],[8.595584,6.720022,-4.569987,1.893426],[8.111472,-1.270798,4.248084,-3.683292],[0.145455,-3.567056,-5.459458,-7.475310],[2.088609,9.924318,-1.112613,-0.561921],[-2.247998,3.415147,3.820710,6.059087],[-4.532220,-8.016789,6.445571,-0.845069],[-0.577160,-1.245288,3.659803,-5.043819],[-3.861064,9.972668,-2.496180,-0.015004],[1.994280,-8.795688,-7.261925,9.624115],[8.904894,-5.709263,-3.930308,8.976379],[7.732132,6.664589,2.312914,0.031786],[-1.345230,-8.941120,-9.139297,6.077816],[-5.020343,-8.725407,9.682803,-6.696965],[-1.596514,0.064105,9.738430,4.259697],[-4.355175,6.741138,7.352469,5.935999],[-7.944979,-3.166472,-8.540613,-5.365659],[1.147427,9.132598,5.167833,-8.694952],[-8.322883,-6.757279,-3.007504,-8.561785],[1.422206,-5.388206,8.734754,-7.021318],[-0.174166,-7.360475,-5.728414,2.587064],[-2.133763,-8.547308,-4.119367,2.367003],[7.675955,-5.446442,1.118503,-6.105135],[2.415708,6.569218,1.516670,-4.007972],[6.461128,-2.320914,7.799487,1.066865],[8.973148,2.060120,-2.112087,-9.922809],[6.066431,-0.460783,-5.269060,0.023796],[1.013610,-5.529301,-1.951341,-5.140646],[7.765927,6.676766,3.607295,-8.587315],[-4.573879,-1.586042,-8.502608,-8.739117],[-3.444079,4.125103,-8.320083,-7.044356],[9.387697,-0.192709,7.195228,5.777376],[4.315720,2.788526,-4.089902,4.621050],[-2.840822,0.438159,2.183166,-4.434987],[-6.935885,-6.757480,-7.038481,2.849459],[1.425362,7.025706,-3.872445,9.078203],[5.374282,-2.243295,5.975131,-8.530213],[-9.438137,-1.900359,-5.410017,6.019774],[-3.148584,8.085589,-1.652974,2.048494],[-9.763629,-6.370564,9.267056,-5.125537],[-3.383174,-1.247913,3.114079,1.977153],[6.856889,6.274519,-0.046085,-9.465285],[-1.445719,6.784695,-5.378574,-7.276492],[7.014208,-6.797414,-9.145757,7.906929],[2.936975,-6.082793,6.085255,-6.315964],[-0.557121,-3.439664,-2.415369,7.868955],[-5.830494,6.343346,1.855936,0.570389],[-7.770897,-0.893701,-1.141665,-8.033833]], dtype = "float32")#candidate|2064|(448, 4)|const|float32
call_2063 = relay.TupleGetItem(func_1676_call(relay.reshape(const_2064.astype('float32'), [8, 14, 16])), 0)
call_2065 = relay.TupleGetItem(func_1679_call(relay.reshape(const_2064.astype('float32'), [8, 14, 16])), 0)
output = relay.Tuple([uop_2038,call_2049,call_2063,const_2064,])
output2 = relay.Tuple([uop_2038,call_2050,call_2065,const_2064,])
func_2067 = relay.Function([], output)
mod['func_2067'] = func_2067
mod = relay.transform.InferType()(mod)
mutated_mod['func_2067'] = func_2067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2067_call = mutated_mod.get_global_var('func_2067')
call_2068 = func_2067_call()
output = call_2068
func_2069 = relay.Function([], output)
mutated_mod['func_2069'] = func_2069
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2070 = relay.var("var_2070", dtype = "float32", shape = (12, 5, 15))#candidate|2070|(12, 5, 15)|var|float32
uop_2071 = relay.log(var_2070.astype('float32')) # shape=(12, 5, 15)
func_2067_call = mod.get_global_var('func_2067')
func_2069_call = mutated_mod.get_global_var('func_2069')
call_2078 = relay.TupleGetItem(func_2067_call(), 0)
call_2079 = relay.TupleGetItem(func_2069_call(), 0)
uop_2094 = relay.sinh(uop_2071.astype('float64')) # shape=(12, 5, 15)
bop_2098 = relay.not_equal(uop_2071.astype('bool'), relay.reshape(uop_2094.astype('bool'), relay.shape_of(uop_2071))) # shape=(12, 5, 15)
var_2114 = relay.var("var_2114", dtype = "float64", shape = (12, 5, 15))#candidate|2114|(12, 5, 15)|var|float64
bop_2115 = relay.logical_xor(uop_2094.astype('uint8'), relay.reshape(var_2114.astype('uint8'), relay.shape_of(uop_2094))) # shape=(12, 5, 15)
output = relay.Tuple([call_2078,bop_2098,bop_2115,])
output2 = relay.Tuple([call_2079,bop_2098,bop_2115,])
func_2125 = relay.Function([var_2070,var_2114,], output)
mod['func_2125'] = func_2125
mod = relay.transform.InferType()(mod)
var_2126 = relay.var("var_2126", dtype = "float32", shape = (12, 5, 15))#candidate|2126|(12, 5, 15)|var|float32
var_2127 = relay.var("var_2127", dtype = "float64", shape = (12, 5, 15))#candidate|2127|(12, 5, 15)|var|float64
output = func_2125(var_2126,var_2127,)
func_2128 = relay.Function([var_2126,var_2127,], output)
mutated_mod['func_2128'] = func_2128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1785_call = mod.get_global_var('func_1785')
func_1787_call = mutated_mod.get_global_var('func_1787')
call_2147 = func_1785_call()
call_2148 = func_1785_call()
output = relay.Tuple([call_2147,])
output2 = relay.Tuple([call_2148,])
func_2149 = relay.Function([], output)
mod['func_2149'] = func_2149
mod = relay.transform.InferType()(mod)
output = func_2149()
func_2150 = relay.Function([], output)
mutated_mod['func_2150'] = func_2150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1951_call = mod.get_global_var('func_1951')
func_1952_call = mutated_mod.get_global_var('func_1952')
call_2188 = relay.TupleGetItem(func_1951_call(), 0)
call_2189 = relay.TupleGetItem(func_1952_call(), 0)
var_2195 = relay.var("var_2195", dtype = "float64", shape = (8, 14, 16))#candidate|2195|(8, 14, 16)|var|float64
bop_2196 = relay.equal(call_2188.astype('bool'), relay.reshape(var_2195.astype('bool'), relay.shape_of(call_2188))) # shape=(8, 14, 16)
bop_2199 = relay.equal(call_2189.astype('bool'), relay.reshape(var_2195.astype('bool'), relay.shape_of(call_2189))) # shape=(8, 14, 16)
func_1287_call = mod.get_global_var('func_1287')
func_1288_call = mutated_mod.get_global_var('func_1288')
call_2200 = relay.TupleGetItem(func_1287_call(), 1)
call_2201 = relay.TupleGetItem(func_1288_call(), 1)
output = relay.Tuple([bop_2196,call_2200,])
output2 = relay.Tuple([bop_2199,call_2201,])
func_2209 = relay.Function([var_2195,], output)
mod['func_2209'] = func_2209
mod = relay.transform.InferType()(mod)
var_2210 = relay.var("var_2210", dtype = "float64", shape = (8, 14, 16))#candidate|2210|(8, 14, 16)|var|float64
output = func_2209(var_2210)
func_2211 = relay.Function([var_2210], output)
mutated_mod['func_2211'] = func_2211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1578_call = mod.get_global_var('func_1578')
func_1579_call = mutated_mod.get_global_var('func_1579')
call_2213 = relay.TupleGetItem(func_1578_call(), 1)
call_2214 = relay.TupleGetItem(func_1579_call(), 1)
uop_2233 = relay.rsqrt(call_2213.astype('float64')) # shape=(1, 784)
uop_2235 = relay.rsqrt(call_2214.astype('float64')) # shape=(1, 784)
bop_2238 = relay.not_equal(call_2213.astype('bool'), relay.reshape(uop_2233.astype('bool'), relay.shape_of(call_2213))) # shape=(1, 784)
bop_2241 = relay.not_equal(call_2214.astype('bool'), relay.reshape(uop_2235.astype('bool'), relay.shape_of(call_2214))) # shape=(1, 784)
uop_2243 = relay.sigmoid(bop_2238.astype('float32')) # shape=(1, 784)
uop_2245 = relay.sigmoid(bop_2241.astype('float32')) # shape=(1, 784)
output = relay.Tuple([uop_2243,])
output2 = relay.Tuple([uop_2245,])
func_2256 = relay.Function([], output)
mod['func_2256'] = func_2256
mod = relay.transform.InferType()(mod)
output = func_2256()
func_2257 = relay.Function([], output)
mutated_mod['func_2257'] = func_2257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_992_call = mod.get_global_var('func_992')
func_994_call = mutated_mod.get_global_var('func_994')
call_2267 = relay.TupleGetItem(func_992_call(), 0)
call_2268 = relay.TupleGetItem(func_994_call(), 0)
func_1182_call = mod.get_global_var('func_1182')
func_1183_call = mutated_mod.get_global_var('func_1183')
call_2274 = relay.TupleGetItem(func_1182_call(), 2)
call_2275 = relay.TupleGetItem(func_1183_call(), 2)
output = relay.Tuple([call_2267,call_2274,])
output2 = relay.Tuple([call_2268,call_2275,])
func_2276 = relay.Function([], output)
mod['func_2276'] = func_2276
mod = relay.transform.InferType()(mod)
output = func_2276()
func_2277 = relay.Function([], output)
mutated_mod['func_2277'] = func_2277
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2294 = relay.var("var_2294", dtype = "float32", shape = (12, 10, 3))#candidate|2294|(12, 10, 3)|var|float32
uop_2295 = relay.acos(var_2294.astype('float32')) # shape=(12, 10, 3)
func_1909_call = mod.get_global_var('func_1909')
func_1913_call = mutated_mod.get_global_var('func_1913')
var_2301 = relay.var("var_2301", dtype = "bool", shape = (784,))#candidate|2301|(784,)|var|bool
var_2302 = relay.var("var_2302", dtype = "bool", shape = ())#candidate|2302|()|var|bool
const_2303 = relay.const([True,True,True,True,False,False,True,False,True,True,False,True,True,True,True,False,True,False,False,False,True,True], dtype = "bool")#candidate|2303|(22,)|const|bool
call_2300 = relay.TupleGetItem(func_1909_call(relay.reshape(var_2301.astype('bool'), [14, 7, 8]), relay.reshape(var_2302.astype('bool'), []), relay.reshape(const_2303.astype('bool'), [22,]), ), 4)
call_2304 = relay.TupleGetItem(func_1913_call(relay.reshape(var_2301.astype('bool'), [14, 7, 8]), relay.reshape(var_2302.astype('bool'), []), relay.reshape(const_2303.astype('bool'), [22,]), ), 4)
func_1785_call = mod.get_global_var('func_1785')
func_1787_call = mutated_mod.get_global_var('func_1787')
call_2306 = func_1785_call()
call_2307 = func_1785_call()
output = relay.Tuple([uop_2295,call_2300,var_2301,var_2302,const_2303,call_2306,])
output2 = relay.Tuple([uop_2295,call_2304,var_2301,var_2302,const_2303,call_2307,])
func_2313 = relay.Function([var_2294,var_2301,var_2302,], output)
mod['func_2313'] = func_2313
mod = relay.transform.InferType()(mod)
var_2314 = relay.var("var_2314", dtype = "float32", shape = (12, 10, 3))#candidate|2314|(12, 10, 3)|var|float32
var_2315 = relay.var("var_2315", dtype = "bool", shape = (784,))#candidate|2315|(784,)|var|bool
var_2316 = relay.var("var_2316", dtype = "bool", shape = ())#candidate|2316|()|var|bool
output = func_2313(var_2314,var_2315,var_2316,)
func_2317 = relay.Function([var_2314,var_2315,var_2316,], output)
mutated_mod['func_2317'] = func_2317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1648_call = mod.get_global_var('func_1648')
func_1650_call = mutated_mod.get_global_var('func_1650')
call_2344 = relay.TupleGetItem(func_1648_call(), 0)
call_2345 = relay.TupleGetItem(func_1650_call(), 0)
func_2125_call = mod.get_global_var('func_2125')
func_2128_call = mutated_mod.get_global_var('func_2128')
const_2347 = relay.const([-4.177863,-1.976223,4.531563,-9.866540,-1.470580,-7.545165,-4.597010,-7.875018,9.811397,0.734002,-3.883481,3.105462,-4.181436,1.575506,-0.131101,-8.327961,4.109796,1.912541,4.869414,8.550171,8.355473,-2.346549,-2.989160,-6.072000,0.835349,5.317713,-8.485889,-0.046564,-5.432073,-6.481994,9.441183,7.183784,-3.580169,7.470917,-7.739052,0.594378,9.599220,0.925464,-3.881675,6.344459,-5.979358,8.635503,7.916994,9.579787,-1.350178,6.516348,-9.078154,-2.153647,6.395551,5.472093,9.173797,4.252503,-8.898589,-9.502387,-7.437891,-3.948991,-6.180557,-1.701398,3.108474,6.638322,2.388047,2.970840,7.483292,-4.928793,-9.998966,4.482715,-2.676998,-5.094287,5.191405,-5.931107,-8.264886,-0.009993,-3.230521,-0.915396,5.130816,5.609125,-2.199124,-0.363825,0.950813,-2.527996,-3.270454,5.778537,-7.884886,6.124603,-9.204532,-8.613901,1.610272,-8.966861,4.247167,5.641811,-4.023360,0.856757,-3.253153,8.034236,3.218993,3.802991,6.122383,-4.103020,-8.585391,5.290402,7.584371,5.405308,4.740714,0.537093,-5.725288,1.413456,7.921507,-4.259152,-1.496746,1.828216,3.456425,-2.403854,4.731608,4.649558,-6.072103,8.891660,-6.725050,-5.980000,-1.347100,-7.637482,1.526341,9.750216,-2.329361,-2.023641,5.873618,-2.065957,-6.391098,9.098563,-3.710228,2.402221,-9.578862,-8.754952,1.086682,-2.799656,-5.788949,-4.453945,-1.470930,5.763360,4.448635,2.158584,0.557486,-7.003041,-9.437411,-7.230460,-8.881992,-3.615319,-2.690042,9.786728,1.190561,1.233145,-4.938682,5.494966,3.525796,1.027433,-4.938144,-7.761259,0.454481,3.913694,-1.868895,-5.052330,0.499671,4.033323,7.899208,0.057366,-9.658457,8.613445,8.320645,6.757721,0.115708,9.377669,-5.996731,0.307180,-1.058280,2.626480,-2.866949,1.331493,-5.415257,4.335569,0.207571,4.668793,6.469812,-7.352669,5.442770,-1.843597,9.651009,5.983491,5.362827,3.140451,1.388546,-9.847705,-2.053840,-9.761383,0.963676,-6.809367,-3.731954,-9.029000,-8.228463,-1.808073,7.231144,-3.729464,9.682893,-7.743005,6.281644,-3.492793,-3.032206,-9.580393,4.577819,-8.256873,6.353566,9.869748,-3.414207,4.807456,0.532921,-4.888835,-8.838898,0.098192,-1.958979,-0.569850,4.802377,9.132138,-3.664364,-6.099506,-7.436405,-8.863054,8.960009,2.547290,4.601250,5.887666,9.186053,7.034253,-5.411621,5.610576,-6.896935,-0.733579,-4.652071,-4.868104,-6.720261,-9.518105,6.733195,-7.722408,1.901753,-4.828993,-0.581886,2.425830,5.448842,-1.931705,1.893267,2.642692,1.184719,3.727291,9.521585,-1.087762,-3.739748,-6.554270,3.251176,-8.946284,-1.106072,-2.050845,-9.911561,-1.079542,-3.355497,-7.659506,-6.598914,-0.145186,4.109733,-2.520540,5.892068,-9.639298,2.361333,1.497208,1.545317,3.103336,-9.103703,7.443984,7.231501,-2.326334,-2.157969,1.572157,-2.066922,-3.351940,7.162292,-6.964336,-9.838986,-6.994680,4.149003,-7.570543,-0.527586,1.906206,4.876398,7.797141,-2.983005,1.295352,-3.344473,-7.077284,-0.185751,4.026626,3.422224,-0.854534,-9.274427,7.391645,-2.989543,4.829094,-7.059460,1.532898,4.962067,-3.718051,-6.472675,-6.487714,1.328759,-3.064057,5.258624,0.117091,2.729229,-6.559903,8.112228,-8.061952,-2.787611,-5.533323,-1.757998,-0.626712,-1.198621,9.673637,-4.988172,-8.712283,-4.180556,3.036267,-2.737057,-4.013322,-5.626949,2.189161,5.378932,1.219474,2.813781,-2.324254,0.318934,6.055219,2.398914,4.242858,-4.472788,4.931282,-1.655748,7.385710,-0.422543,-0.426800,-6.050300,-0.773566,6.177419,5.188131,4.464040,-9.258226,9.646293,-0.925522,6.251935,-1.954684,4.463724,-6.464958,0.393980,-7.518912,-7.418298,-8.874826,7.388757,-8.901370,4.304705,8.373865,7.004611,2.230584,-8.990750,4.214255,3.010753,1.975485,-7.194173,-2.471801,5.876324,5.899414,-5.474110,1.584880,-0.149280,-2.465333,3.176562,-0.687744,-5.176062,3.473199,1.251411,-6.642894,4.163922,-2.970798,8.952411,4.251909,1.569865,-0.541689,-7.746774,5.576822,7.969389,-5.887405,-0.951252,7.018589,4.008700,2.166955,-0.548257,1.853599,6.599136,4.833567,8.138215,-3.789613,4.684883,-5.022590,-8.927478,-1.125617,1.462194,-3.978212,1.935328,-0.968494,0.194875,2.402012,8.581037,6.165605,-3.722824,-0.348128,2.172880,3.842449,4.276090,-0.644167,7.132283,-5.065655,-1.657082,-4.962527,-0.282675,-8.870359,-2.638995,7.060517,-5.026988,5.044115,3.784537,-8.276836,-2.857070,4.303326,3.075377,6.781120,-8.835185,-3.977258,-3.679935,-4.202258,8.650457,-9.445166,9.657478,-7.731544,-3.481065,-3.317989,5.976191,-7.858086,-2.675427,2.059352,-6.802007,7.281040,-2.862706,9.144799,-9.587988,-5.487964,-4.546074,-8.524313,-0.921989,2.871158,-0.557652,3.940644,1.691900,9.107778,8.016240,0.960383,5.855765,6.324359,-4.280751,-4.595880,-1.343523,3.974292,-8.433893,-4.870791,-7.716647,8.461612,-8.510080,-2.377631,0.756482,4.754252,-8.099800,-0.029866,6.872490,-4.859968,-8.261518,0.124542,8.361573,8.279354,-6.042806,-0.188026,3.603263,6.710328,-4.897283,0.750259,5.001617,0.852603,-5.756559,9.745107,1.289718,0.819654,-3.975303,-6.440077,0.606744,8.870000,-9.384380,-8.042062,-4.731017,4.004397,2.575745,-8.785420,8.407176,9.199991,9.422707,-4.557768,-9.980069,-0.215165,-3.284730,-7.997194,-1.549052,7.108717,7.726972,-0.548569,3.315844,2.511334,6.322828,8.049993,3.844728,-2.210869,0.602818,8.002136,-6.430600,-8.334534,-1.294426,1.380741,7.893487,4.677757,-5.137509,-9.607935,7.607945,6.796006,1.001609,-4.675581,1.968536,0.278593,2.755742,-7.370401,-8.706679,-9.795169,8.066694,1.971423,-2.936231,1.858686,-0.641296,-4.958689,6.461723,-8.711684,-4.634632,1.004217,0.951758,-2.276123,3.608012,4.491642,1.510487,6.737034,8.726346,2.067485,6.658686,-6.782910,-5.445928,-6.109772,-1.020521,-8.568064,2.119289,-8.591570,-9.530583,6.974493,7.559033,4.008109,-1.299420,6.996002,7.298159,1.544934,-2.067881,3.903159,-9.110154,-1.956635,-1.097488,9.151303,0.962504,6.886641,-4.989560,2.593363,0.548550,-2.305848,4.872434,8.595079,3.414712,-4.475415,-8.512332,-8.404311,6.543682,-4.847412,-1.018523,1.087665,6.335858,9.616783,9.380715,-4.356758,-4.176890,-9.385053,-8.481351,-8.459749,-9.919193,2.331125,-1.399185,4.608738,2.102802,-5.771393,6.994844,5.796816,-9.111688,-6.641642,5.397974,-9.667782,0.442321,-1.029443,-9.762092,2.408394,1.807268,7.930318,1.409932,6.755519,-5.054299,-5.115423,7.356766,9.415504,-3.415283,1.706925,-1.215476,8.117340,-7.848010,8.920546,1.876724,5.085532,-0.419155,-7.612304,9.195565,-9.996041,2.110309,7.546179,-6.763612,-8.194895,-4.126641,-5.677995,1.505148,-2.872213,0.116754,-3.526157,2.105695,7.451111,9.110859,4.877502,8.252572,-4.161074,-6.204591,8.310084,-5.508479,4.510373,5.270676,9.231856,-5.036131,-5.050076,-6.862105,-3.628386,-7.673688,1.025739,6.124278,-0.559638,-9.341018,-1.757250,-4.643653,8.646001,7.536420,9.452993,-3.499359,-9.651170,3.096743,8.855953,4.237001,8.287461,3.789195,5.513148,6.795050,-0.793680,7.948282,-9.478461,-9.861668,-0.165884,-8.512552,4.188715,4.195627,5.868274,-9.075895,-0.612906,-7.839833,-2.267138,-9.162909,5.404350,7.047762,3.023391,-7.669083,3.982561,8.613865,-7.110721,7.266744,-7.574489,1.248927,7.337999,-3.269853,-5.626993,3.820145,3.826691,-7.894752,5.120486,-4.720323,-7.009875,-0.994711,0.602172,-7.295584,-4.624655,3.093586,-2.429960,-0.604394,7.914545,0.104822,-7.452600,-7.616811,-9.651618,-9.417664,-5.132022,-2.415556,7.099203,-3.669416,-6.770745,-8.551348,8.010596,0.637139,6.491552,8.297165,5.743145,-5.490935,-3.055052,8.101260,3.316895,-3.356735,-7.683518,5.728088,-8.340547,-4.448881,-4.572593,2.640506,1.557419,0.987074,-0.952401,9.991182,7.762574,5.785546,-9.061153,-1.161209,-0.442802,0.167680,0.537716,-7.271787,9.623214,-8.460417,-1.583177,5.484343,-7.832005,-4.957224,4.116365,-3.386618,0.424646,-5.723160,-9.082809,2.133590,-1.545579,9.829557,9.832027,3.011684,9.753691,-7.630586,9.261547,9.538674,-1.622458,-8.383082,5.591235,-7.933224,6.769095,-1.873954,2.742879,-6.904689,-4.161640,6.823815,-5.909459,-1.380668,-2.904673,1.073714,-0.554351,-2.185021,-4.563649,5.096486,7.591413,-2.069487,-2.395867,5.929214,-5.945726,6.268955,3.436765,8.921644,2.565189,6.753811,-4.089384,1.601309,0.987742,-0.806150,6.371409,3.600674,1.753376,4.980418,-7.902501,-5.583693,-1.321164,-0.031723,-5.398990,0.824674,0.103190,-7.935229,1.334932,4.517524,4.132456,-9.408961,1.197605,6.893854,7.532152,-9.362378,0.080507,1.617777,6.087123,-5.647582,3.788135,6.631700,-2.501249,-7.611570,-9.848837,9.856657,1.812340,-2.450427,9.181529,-8.006245,-8.861579,0.085109,2.892145,5.119835,-2.346474,-5.136347,-5.719409,-9.075910,0.945610,-4.836601,-8.443321,1.309569,-0.524003,-5.004094,-6.921071,-9.826794,-3.514153,-8.036756,-7.236309,-8.682921,7.841383,-3.308137,-1.123761,3.778156,-8.223576,2.399582,6.893296,-0.830980,-5.822692,5.697420,0.717547,4.059083,9.173362,2.293390,-1.400139,-5.009283,8.332160,1.884464,-9.913533], dtype = "float32")#candidate|2347|(900,)|const|float32
call_2346 = relay.TupleGetItem(func_2125_call(relay.reshape(const_2347.astype('float32'), [12, 5, 15]), relay.reshape(const_2347.astype('float64'), [12, 5, 15]), ), 1)
call_2348 = relay.TupleGetItem(func_2128_call(relay.reshape(const_2347.astype('float32'), [12, 5, 15]), relay.reshape(const_2347.astype('float64'), [12, 5, 15]), ), 1)
func_1737_call = mod.get_global_var('func_1737')
func_1741_call = mutated_mod.get_global_var('func_1741')
const_2350 = relay.const([3.462169,7.089277,-2.430267,-7.213811,-0.636335,4.452046,8.913117,-1.690544,-7.165292,7.644930,4.046607,6.799460,0.384068,-7.035730,-2.939178,7.283471,8.662362,5.217108,-3.068145,6.764365,-0.457273,2.358083,1.345138,-4.366235,-7.451214,-7.529589,7.674553,9.634876,8.137889,-5.188012,5.468288,9.649648,-7.436942,-1.655317,-3.387124,7.868347,-6.957744,-8.936706,-4.136898,2.004209,-9.719433,-9.662167,1.100130,-6.303794,-8.647876,5.829016,0.263710,-1.126236,8.343314,-7.820298,-1.907781,-7.621658,-6.526009,8.278360,6.342049,-4.437760,-1.759191,9.982219,-0.197041,-2.227704,-5.121401,-0.714494,-7.097806,7.180593,7.121896,0.567288,-8.902020,-7.508998,5.993836,9.193792,-4.762195,-5.918377,6.803380,7.675346,-8.041293,-7.825651,0.442789,-1.115754,2.294217,5.922792,0.070532,-9.005052,-4.098264,-1.775159,-3.671720,-3.073380,1.312387,8.159981,-9.876977,-4.722301,-1.559096,-2.550489,7.203549,6.039523,-4.197084,5.556816,-2.295737,4.100454,-6.837235,-7.994441,-5.112581,-4.894887,5.773535,-3.321213,-3.490338,-4.446466,6.944132,-4.664126,0.248125,2.796118,-7.668099,4.805345,-5.543734,2.418982,5.793155,-0.033421,-6.886288,7.982812,-9.998344,0.351841,3.172310,-4.845955,-0.094360,5.006120,-8.196031,-8.406617,-9.948103,1.330584,-4.481883,4.003018,-5.905894,9.370080,-3.328599,6.335596,-3.742122,6.160530,-3.345516,-2.762214,-7.121936,6.542130,-3.916196,9.710299,6.778991,-7.936170,0.245718,2.449814,5.171857,-4.778332,-1.148922,-6.403937,1.639906,-9.315877,4.820450,-7.136016,-2.993770,7.136464,1.447408,7.353417,6.939458,7.834338,-9.986060,1.364190,5.232548,9.034683,9.696714,2.360731,-7.178850,-6.302841,-0.335578,4.009967,-2.351026,-0.828961,-1.915646,5.985049,2.703422,-2.487011,9.861314,7.050951,-1.658991,-3.840487,-6.734558,-6.098111,2.059049,5.939274,1.790773,3.068049,6.165058,-1.596911,5.436179,1.537808,-8.132374,-4.207900,3.432912,-7.611320,5.791626,3.143045,-6.580743,-3.794972,1.984991,-9.910700,-7.005849,-0.643586,5.812385,1.300059,-9.735047,3.165477,4.389991,0.655213,9.385110,-4.047211,-4.782705,-9.504991,2.285763,6.999228,-5.559552,8.354079,2.330690,-2.275407,-7.435413,9.288124,9.282663,8.115895,5.186707,3.356751,4.377217,0.502732,-3.455374,-8.799094,-3.072330,-9.643914,1.928581,8.545703,9.346973,2.527282,-4.881431,9.129825,5.934133,-2.879428,9.334612,6.573153,6.645811,-3.547007,5.757892,8.707634,-9.030735,-8.894892,2.907666,-4.113438,-6.326122,1.052735,9.569712,-7.742380,6.891070,1.568772,-5.876573,6.563279,7.360112,1.193728,1.802050,-7.110901,-7.091754,1.004912,-4.318621,1.450465,-0.307191,7.681445,3.187527,-3.564722,-7.561914,7.142278,9.404571,-9.687390,-5.680200,6.879939,-5.306149,-9.990553,-5.955812,1.166229,7.638974,2.362824,1.997860,9.501922,-9.458113,4.141167,0.162168,-2.870849,-7.729966,8.898195,-8.473748,-9.485029,-1.166794,-0.852138,-6.047787,-5.711632,-1.917365,4.291089,-1.929779,-9.677653,3.562963,-7.342637,-7.078305,5.124218,0.586537,3.272391,0.993889,7.777896,-7.565084,-1.946053,7.940641,4.759604,7.726378,3.522151,8.856589,-8.110886,9.102925,-7.271817,5.348239,-2.789467,-2.692146,4.522633,5.705844,-8.611276,-4.333526,5.500197,7.198033,2.817065,9.425482,-3.999063,-9.602208,3.034298,3.940157,9.540457,5.020154,-8.040829,0.457613,6.882139,-5.522831,2.092404,5.148299,-1.466469,0.626236,6.353578,-6.414026,0.650059,-5.150033,-3.005502,-3.865360,3.648151,-5.791849,-9.819192,7.378742,-6.372531,8.219868,-8.064486,-4.382216,6.057393,-1.751750,7.183559,-6.842773,8.682932,3.863288,5.814732,8.888657,-4.712927,-0.679385,0.131395,-8.665498,1.468643,1.214373,-2.476520,-9.087362,6.344897,-5.753650,1.014407,-1.061304,-7.897679,-2.628409,3.314755,-1.877538,4.895648,-3.164195,-1.617501,9.084216,-7.573175,7.251388,-4.469582,-0.743501,-2.714480,-7.290437,-9.382215,-6.904126,9.622527,-7.434961,-5.190990,-4.502166,9.891954,-2.271680,9.164998,2.081263,6.506600,1.476510,-6.474778,2.915333,-8.265794,-9.781928,-9.600855,6.429356,2.847906,5.041736,-9.507700,-5.975492,-9.835542,2.226561,-9.170559,-2.444325,3.127263,9.979885,8.070233,-4.071805,0.930807,-2.290751,7.918283,9.198330,3.931238,-7.930038,-9.175638,2.033626,-0.070054,-5.077417,0.966416,-4.941502,-1.131107,-2.830103,-1.637384,-1.667025,2.421020,-4.082025,-1.530344,-0.475224,-9.883278,-2.397515,4.989726,0.672219,-2.161623,-5.687672,-4.192732,7.340061,-1.667270,8.780374,-6.064597,-9.670228,-8.472998,7.855216,-6.228894,3.672219,-8.371935,6.257609,4.914491,1.788063,0.827312,-7.737049,-8.023642,-6.684351,5.657538,-6.590876,7.612116,-5.499035,2.395119,1.019263,8.993781,-6.167220,-2.157821,9.560944,-8.078978,7.793391,-3.383651,-7.925248,4.250519,2.445885,-3.601269,2.426233,6.778776,7.224172,5.417384,-0.089918,5.402401,-0.407188,7.040351,-2.649829,0.246678,4.178820,0.322036,-9.003119,-9.825202,2.129756,5.798835,3.155906,-6.122953,8.788831,6.619356,-1.581159,-6.406582,-9.035266,-9.885622,-1.452354,-4.217416,1.773244,2.121502,0.647907,-9.649791,-2.487958,0.458495,-5.147501,-5.748202,0.097826,8.347060,6.838537,-1.372205,3.192442,-3.035118,-6.858479,1.664823,-0.387385,-4.093490,4.586049,-2.448962,-8.833450,3.161411,-9.480932,0.171189,4.340918,3.627226,-0.193714,-4.269432,5.799260,0.458187,2.738685,7.673039,7.157881,7.288493,-2.641922,-7.985629,5.489581,3.074982,-1.460802,1.275269,-9.468039,-2.551069,3.146552,-7.869481,0.831370,-9.087673,0.309069,-5.550845,7.577755,9.416969,5.482729,7.045272,6.964806,-8.460817,6.178024,6.379803,1.531298,-4.906311,-0.411083,8.269221,9.624170,-2.616880,6.530001,4.688645,3.516284,0.402524,8.737927,1.907824,1.288555,-9.731064,-3.029377,-4.791807,7.769680,-0.974054,-1.594538,8.056269,9.447559,-8.808860,-6.152210,-8.866420,-1.028412,-9.833735,-4.379995,-1.050574,-8.395175,-5.749277,-3.694147,-0.713715,5.544763,5.565130,-9.332100,8.236695,-8.724201,-2.486912,-2.224518,-6.544563,-3.947383,-9.972455,7.431788,5.680000,5.767516,-1.355724,-7.841219,8.230773,3.511394,0.354681,5.630821,8.887502,-5.244557,-9.330077,-8.511316,6.869631,6.253173,4.308640,-8.821518,-8.867108,-4.957410,2.183114,4.221133,2.587935,1.229954,-7.453426,8.476345,3.102228,-2.555005,-8.371252,-6.042287,8.757526,8.064821,-6.574184,4.610130,8.748447,4.953878,1.335951,8.000360,0.708378,5.571509,8.994981,-5.712387,7.108973,-0.265731,9.643426,8.103630,3.347873,-9.354639,1.278519,-9.580541,8.357182,3.545375,6.728250,0.281847,-5.400221,-9.045219,-8.441937,-1.122504,2.316751,5.470140,7.742035,-5.131787,-4.297902,0.308579,-4.875664,-9.132084,8.948247,-5.669529,1.836652,-7.232525,7.234116,6.452675,1.907319,8.005900,1.175871,8.488527,9.713652,9.716336,-6.513063,0.630098,-5.406276,7.417404,-5.995225,-5.085543,6.740882,7.477792,-0.224065,-8.926119,-1.057604,-4.138796,4.479493,-6.230910,8.211235,-4.766413,-3.679190,1.146085,9.111025,2.888708,-2.775965,0.395811,-5.722500,-3.679715,-9.481352,-6.740407,-4.258707,-5.352711,-1.493045,7.548706,-9.026023,-7.489727,3.982291,4.615124,-7.722498,-7.007930,2.449719,-0.413897,-3.315715,-0.980014,-1.688526,8.693112,9.568452,-2.625001,0.699647,-8.835583,9.657168,-0.504298,-8.277302,8.741003,-2.187168,1.429728,-7.894360,1.477362,1.567624,2.595777,-9.911953,-9.707758,-7.786475,-5.318766,-7.103716,3.278692,3.098968,2.834248,3.788069,-8.322559,-6.327776,5.636099,8.018682,-4.066948,-9.963104,-4.737322,-2.013854,6.019201,9.886912,-5.126798,-0.150625,0.432377,-5.001218,2.820015,-2.159220,7.227703,4.182345,8.738479,-6.636863,3.640527,7.814432,5.134715,2.039428,-7.913345,-2.050594,-4.905331,-8.304089,-3.517150,-5.901657,-2.271555,1.806257,-4.667398,7.056747,-1.552054,1.542217,-9.536796,5.871710], dtype = "float64")#candidate|2350|(784,)|const|float64
var_2351 = relay.var("var_2351", dtype = "bool", shape = ())#candidate|2351|()|var|bool
var_2352 = relay.var("var_2352", dtype = "bool", shape = (4, 64))#candidate|2352|(4, 64)|var|bool
call_2349 = relay.TupleGetItem(func_1737_call(relay.reshape(const_2350.astype('float64'), [784,]), relay.reshape(var_2351.astype('bool'), []), relay.reshape(var_2352.astype('bool'), [2, 128]), ), 7)
call_2353 = relay.TupleGetItem(func_1741_call(relay.reshape(const_2350.astype('float64'), [784,]), relay.reshape(var_2351.astype('bool'), []), relay.reshape(var_2352.astype('bool'), [2, 128]), ), 7)
uop_2359 = relay.sqrt(call_2349.astype('float64')) # shape=(14, 7, 8)
uop_2361 = relay.sqrt(call_2353.astype('float64')) # shape=(14, 7, 8)
output = relay.Tuple([call_2344,call_2346,const_2347,const_2350,var_2351,var_2352,uop_2359,])
output2 = relay.Tuple([call_2345,call_2348,const_2347,const_2350,var_2351,var_2352,uop_2361,])
func_2390 = relay.Function([var_2351,var_2352,], output)
mod['func_2390'] = func_2390
mod = relay.transform.InferType()(mod)
var_2391 = relay.var("var_2391", dtype = "bool", shape = ())#candidate|2391|()|var|bool
var_2392 = relay.var("var_2392", dtype = "bool", shape = (4, 64))#candidate|2392|(4, 64)|var|bool
output = func_2390(var_2391,var_2392,)
func_2393 = relay.Function([var_2391,var_2392,], output)
mutated_mod['func_2393'] = func_2393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2276_call = mod.get_global_var('func_2276')
func_2277_call = mutated_mod.get_global_var('func_2277')
call_2395 = relay.TupleGetItem(func_2276_call(), 0)
call_2396 = relay.TupleGetItem(func_2277_call(), 0)
func_1676_call = mod.get_global_var('func_1676')
func_1679_call = mutated_mod.get_global_var('func_1679')
call_2409 = relay.TupleGetItem(func_1676_call(relay.reshape(call_2395.astype('float32'), [8, 14, 16])), 0)
call_2410 = relay.TupleGetItem(func_1679_call(relay.reshape(call_2395.astype('float32'), [8, 14, 16])), 0)
output = relay.Tuple([call_2395,call_2409,])
output2 = relay.Tuple([call_2396,call_2410,])
func_2414 = relay.Function([], output)
mod['func_2414'] = func_2414
mod = relay.transform.InferType()(mod)
mutated_mod['func_2414'] = func_2414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2414_call = mutated_mod.get_global_var('func_2414')
call_2415 = func_2414_call()
output = call_2415
func_2416 = relay.Function([], output)
mutated_mod['func_2416'] = func_2416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1578_call = mod.get_global_var('func_1578')
func_1579_call = mutated_mod.get_global_var('func_1579')
call_2488 = relay.TupleGetItem(func_1578_call(), 3)
call_2489 = relay.TupleGetItem(func_1579_call(), 3)
func_685_call = mod.get_global_var('func_685')
func_691_call = mutated_mod.get_global_var('func_691')
const_2491 = relay.const(True, dtype = "bool")#candidate|2491|()|const|bool
const_2492 = relay.const([False,True,False,False,True,False,True,True,True,False,True,True,True,False,True,True,False,True,False,True,True,True], dtype = "bool")#candidate|2492|(22,)|const|bool
call_2490 = relay.TupleGetItem(func_685_call(relay.reshape(call_2488.astype('int16'), [6, 8, 9]), relay.reshape(call_2488.astype('int16'), [6, 8, 9]), relay.reshape(const_2491.astype('bool'), []), relay.reshape(const_2492.astype('bool'), [22,]), ), 0)
call_2493 = relay.TupleGetItem(func_691_call(relay.reshape(call_2488.astype('int16'), [6, 8, 9]), relay.reshape(call_2488.astype('int16'), [6, 8, 9]), relay.reshape(const_2491.astype('bool'), []), relay.reshape(const_2492.astype('bool'), [22,]), ), 0)
func_1346_call = mod.get_global_var('func_1346')
func_1348_call = mutated_mod.get_global_var('func_1348')
call_2494 = relay.TupleGetItem(func_1346_call(), 0)
call_2495 = relay.TupleGetItem(func_1348_call(), 0)
output = relay.Tuple([call_2488,call_2490,const_2491,const_2492,call_2494,])
output2 = relay.Tuple([call_2489,call_2493,const_2491,const_2492,call_2495,])
func_2496 = relay.Function([], output)
mod['func_2496'] = func_2496
mod = relay.transform.InferType()(mod)
output = func_2496()
func_2497 = relay.Function([], output)
mutated_mod['func_2497'] = func_2497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2256_call = mod.get_global_var('func_2256')
func_2257_call = mutated_mod.get_global_var('func_2257')
call_2520 = relay.TupleGetItem(func_2256_call(), 0)
call_2521 = relay.TupleGetItem(func_2257_call(), 0)
func_2256_call = mod.get_global_var('func_2256')
func_2257_call = mutated_mod.get_global_var('func_2257')
call_2522 = relay.TupleGetItem(func_2256_call(), 0)
call_2523 = relay.TupleGetItem(func_2257_call(), 0)
var_2539 = relay.var("var_2539", dtype = "float32", shape = (6, 784))#candidate|2539|(6, 784)|var|float32
bop_2540 = relay.floor_mod(call_2522.astype('float64'), var_2539.astype('float64')) # shape=(6, 784)
bop_2543 = relay.floor_mod(call_2523.astype('float64'), var_2539.astype('float64')) # shape=(6, 784)
func_1287_call = mod.get_global_var('func_1287')
func_1288_call = mutated_mod.get_global_var('func_1288')
call_2546 = relay.TupleGetItem(func_1287_call(), 0)
call_2547 = relay.TupleGetItem(func_1288_call(), 0)
output = relay.Tuple([call_2520,bop_2540,call_2546,])
output2 = relay.Tuple([call_2521,bop_2543,call_2547,])
func_2553 = relay.Function([var_2539,], output)
mod['func_2553'] = func_2553
mod = relay.transform.InferType()(mod)
mutated_mod['func_2553'] = func_2553
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2554 = relay.var("var_2554", dtype = "float32", shape = (6, 784))#candidate|2554|(6, 784)|var|float32
func_2553_call = mutated_mod.get_global_var('func_2553')
call_2555 = func_2553_call(var_2554)
output = call_2555
func_2556 = relay.Function([var_2554], output)
mutated_mod['func_2556'] = func_2556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_992_call = mod.get_global_var('func_992')
func_994_call = mutated_mod.get_global_var('func_994')
call_2558 = relay.TupleGetItem(func_992_call(), 0)
call_2559 = relay.TupleGetItem(func_994_call(), 0)
var_2564 = relay.var("var_2564", dtype = "uint32", shape = (8, 14, 16))#candidate|2564|(8, 14, 16)|var|uint32
bop_2565 = relay.bitwise_or(call_2558.astype('int32'), relay.reshape(var_2564.astype('int32'), relay.shape_of(call_2558))) # shape=(8, 14, 16)
bop_2568 = relay.bitwise_or(call_2559.astype('int32'), relay.reshape(var_2564.astype('int32'), relay.shape_of(call_2559))) # shape=(8, 14, 16)
bop_2575 = relay.logical_and(call_2558.astype('bool'), relay.reshape(var_2564.astype('bool'), relay.shape_of(call_2558))) # shape=(8, 14, 16)
bop_2578 = relay.logical_and(call_2559.astype('bool'), relay.reshape(var_2564.astype('bool'), relay.shape_of(call_2559))) # shape=(8, 14, 16)
func_1578_call = mod.get_global_var('func_1578')
func_1579_call = mutated_mod.get_global_var('func_1579')
call_2595 = relay.TupleGetItem(func_1578_call(), 1)
call_2596 = relay.TupleGetItem(func_1579_call(), 1)
output = relay.Tuple([bop_2565,bop_2575,call_2595,])
output2 = relay.Tuple([bop_2568,bop_2578,call_2596,])
func_2597 = relay.Function([var_2564,], output)
mod['func_2597'] = func_2597
mod = relay.transform.InferType()(mod)
var_2598 = relay.var("var_2598", dtype = "uint32", shape = (8, 14, 16))#candidate|2598|(8, 14, 16)|var|uint32
output = func_2597(var_2598)
func_2599 = relay.Function([var_2598], output)
mutated_mod['func_2599'] = func_2599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1287_call = mod.get_global_var('func_1287')
func_1288_call = mutated_mod.get_global_var('func_1288')
call_2673 = relay.TupleGetItem(func_1287_call(), 1)
call_2674 = relay.TupleGetItem(func_1288_call(), 1)
uop_2677 = relay.rsqrt(call_2673.astype('float32')) # shape=(8, 14, 16)
uop_2679 = relay.rsqrt(call_2674.astype('float32')) # shape=(8, 14, 16)
output = relay.Tuple([uop_2677,])
output2 = relay.Tuple([uop_2679,])
func_2680 = relay.Function([], output)
mod['func_2680'] = func_2680
mod = relay.transform.InferType()(mod)
output = func_2680()
func_2681 = relay.Function([], output)
mutated_mod['func_2681'] = func_2681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1951_call = mod.get_global_var('func_1951')
func_1952_call = mutated_mod.get_global_var('func_1952')
call_2682 = relay.TupleGetItem(func_1951_call(), 0)
call_2683 = relay.TupleGetItem(func_1952_call(), 0)
var_2721 = relay.var("var_2721", dtype = "float64", shape = (8, 14, 16))#candidate|2721|(8, 14, 16)|var|float64
bop_2722 = relay.greater(call_2682.astype('bool'), relay.reshape(var_2721.astype('bool'), relay.shape_of(call_2682))) # shape=(8, 14, 16)
bop_2725 = relay.greater(call_2683.astype('bool'), relay.reshape(var_2721.astype('bool'), relay.shape_of(call_2683))) # shape=(8, 14, 16)
output = bop_2722
output2 = bop_2725
func_2728 = relay.Function([var_2721,], output)
mod['func_2728'] = func_2728
mod = relay.transform.InferType()(mod)
mutated_mod['func_2728'] = func_2728
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2729 = relay.var("var_2729", dtype = "float64", shape = (8, 14, 16))#candidate|2729|(8, 14, 16)|var|float64
func_2728_call = mutated_mod.get_global_var('func_2728')
call_2730 = func_2728_call(var_2729)
output = call_2730
func_2731 = relay.Function([var_2729], output)
mutated_mod['func_2731'] = func_2731
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2761 = relay.const([[[False],[True]],[[False],[False]],[[True],[False]],[[False],[False]],[[False],[False]],[[True],[False]],[[True],[False]],[[True],[True]],[[True],[True]],[[True],[False]],[[False],[True]],[[True],[True]],[[True],[True]],[[False],[False]],[[True],[True]],[[True],[True]]], dtype = "bool")#candidate|2761|(16, 2, 1)|const|bool
var_2762 = relay.var("var_2762", dtype = "bool", shape = (16, 2, 15))#candidate|2762|(16, 2, 15)|var|bool
bop_2763 = relay.logical_and(const_2761.astype('bool'), var_2762.astype('bool')) # shape=(16, 2, 15)
func_1785_call = mod.get_global_var('func_1785')
func_1787_call = mutated_mod.get_global_var('func_1787')
call_2767 = func_1785_call()
call_2768 = func_1785_call()
uop_2777 = relay.cosh(var_2762.astype('float64')) # shape=(16, 2, 15)
uop_2782 = relay.cosh(call_2767.astype('float32')) # shape=(4, 4, 6)
uop_2784 = relay.cosh(call_2768.astype('float32')) # shape=(4, 4, 6)
uop_2791 = relay.asin(uop_2782.astype('float64')) # shape=(4, 4, 6)
uop_2793 = relay.asin(uop_2784.astype('float64')) # shape=(4, 4, 6)
output = relay.Tuple([bop_2763,uop_2777,uop_2791,])
output2 = relay.Tuple([bop_2763,uop_2777,uop_2793,])
func_2806 = relay.Function([var_2762,], output)
mod['func_2806'] = func_2806
mod = relay.transform.InferType()(mod)
var_2807 = relay.var("var_2807", dtype = "bool", shape = (16, 2, 15))#candidate|2807|(16, 2, 15)|var|bool
output = func_2806(var_2807)
func_2808 = relay.Function([var_2807], output)
mutated_mod['func_2808'] = func_2808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1346_call = mod.get_global_var('func_1346')
func_1348_call = mutated_mod.get_global_var('func_1348')
call_2813 = relay.TupleGetItem(func_1346_call(), 0)
call_2814 = relay.TupleGetItem(func_1348_call(), 0)
const_2815 = relay.const([[[1.269216,-2.328550,8.244061,3.304175,4.381011],[6.620232,5.609138,3.263595,-5.169129,6.997680],[2.092235,2.242931,7.853501,2.514899,-8.868962],[6.368813,1.452994,-2.767163,6.230256,-3.541458],[3.644559,-5.942140,1.245464,5.065337,-8.038266],[4.445016,3.959405,7.134948,0.364866,4.868122],[6.191006,7.090505,0.502948,-3.250687,4.378775],[4.325553,-1.515324,9.302238,3.050310,-7.461362],[1.887938,7.396432,-5.640746,9.882845,5.162495],[-5.872508,4.851485,0.891109,3.103174,7.140270],[-7.877390,7.404979,-1.880776,-5.198636,5.850900]],[[8.972937,9.108703,7.002091,-1.884618,1.649065],[-4.116570,-3.595074,9.303740,-3.434259,2.176895],[2.801215,-9.823349,3.457227,-7.315431,-2.014190],[-0.869501,-3.112329,-8.025773,5.527689,4.836561],[-8.049186,-3.886913,0.230354,-7.295128,-1.112585],[-2.805223,-5.735979,0.885676,4.940526,2.340512],[2.562744,-4.734819,2.853675,-3.783991,7.140817],[8.842346,8.916632,-7.413520,2.575265,-0.341828],[3.205750,-8.235952,1.860835,9.698248,5.696955],[-3.500536,-3.046460,-7.926251,9.790280,-3.226125],[-5.149089,-3.452471,-3.072898,3.297775,8.509804]],[[3.573838,-2.449517,-4.036426,7.499143,-7.193673],[2.087990,-8.804703,6.781793,7.585777,0.624408],[0.725456,-8.134115,9.116861,3.729133,-1.423544],[-1.403102,3.063880,0.552232,-0.826422,6.619656],[4.701882,2.864973,-4.375421,2.940972,5.287954],[8.107346,-9.958394,-2.184356,-9.462724,-4.164926],[-1.410559,9.685719,9.167323,-3.698864,7.783493],[7.353233,-5.847102,-9.525501,4.508740,-4.250570],[-7.170667,-9.590714,3.223769,-2.524965,-0.189456],[9.983437,1.804803,-6.791728,8.716927,-1.676739],[-7.028057,-0.739474,-5.750399,3.767433,-4.572480]],[[-9.673150,4.534961,2.142057,3.490637,8.507303],[5.460748,8.022332,1.560159,1.732514,-8.105694],[5.876813,6.593870,9.691460,3.619163,-4.940021],[-5.208297,-8.129617,8.234099,5.484095,-8.944945],[-9.587803,1.061407,-4.120077,2.182067,0.081369],[-7.055021,-1.871628,-5.594245,2.377678,-0.252535],[3.859907,1.601989,-3.193971,-9.118700,0.160111],[-5.514233,-0.798022,1.677196,-2.987360,-2.612324],[-7.380417,0.070579,4.526851,-4.218305,6.266834],[-9.045940,-2.070954,-5.025316,-1.058307,-3.422431],[9.233753,7.317963,-1.465429,3.097164,4.925179]],[[-7.019057,-2.969682,-9.209220,-2.133092,-6.168660],[1.491076,-6.613434,-7.223702,-0.078628,9.257565],[8.310712,-1.357955,-6.894116,0.258094,3.519657],[-0.451911,7.671713,9.157313,-8.473442,-2.366585],[6.010612,8.905277,9.829922,1.465873,-3.311014],[-8.607273,7.672188,-6.536585,6.332005,6.869537],[-9.135226,5.942956,-5.366098,7.413367,-4.524609],[-5.759535,2.917007,3.242469,4.400507,-8.042297],[-2.321053,0.975579,6.557506,1.585324,-1.928545],[-5.684269,-8.471129,-3.480833,-0.760170,1.426799],[1.218814,6.045812,3.132524,-7.248995,5.658870]],[[-5.165318,6.026742,0.523763,4.594455,-1.785404],[-0.531505,-6.518134,-2.001430,4.940301,-0.803041],[0.075038,-5.222662,-1.344296,6.314779,6.215525],[-9.124024,-4.498340,3.763839,-1.335715,1.170890],[-1.377844,4.043869,-8.557951,0.821195,5.874076],[3.464177,-7.981547,7.716605,1.826329,5.304903],[1.865465,1.815105,9.629349,6.328267,9.895654],[-1.140264,-8.028818,2.591314,1.248346,3.763605],[-2.162660,2.093460,-2.045955,-0.190430,-7.495257],[-3.355583,8.755692,3.678874,8.024397,-6.998287],[2.258418,-3.474910,6.685912,0.218253,1.936323]],[[9.260794,2.027235,-8.547769,8.943930,5.335617],[-3.313566,4.135987,2.644917,-0.378709,0.749071],[-5.942362,-7.826715,4.628193,-1.674770,-0.654282],[0.808744,8.664017,5.265439,-5.190448,-9.005165],[-1.485057,-2.851997,-2.655730,-2.560555,-6.601946],[-2.227467,2.472382,1.740027,-0.789481,4.072737],[0.677528,-1.004715,8.990188,-8.974261,-7.607733],[0.708766,5.937051,-5.446202,-2.226302,0.691639],[-9.205977,5.659446,-3.048406,-1.282543,-8.085143],[7.381100,-2.431805,-3.494770,1.808391,-4.772719],[-8.537492,-8.164294,5.964665,7.453021,-1.799306]],[[-7.948928,-7.853438,-1.513698,-0.673696,2.273048],[-5.222096,5.690238,-0.139213,-7.323602,-7.311271],[8.112704,-4.976525,8.524170,-4.469247,4.252573],[9.190516,-4.541889,1.894003,-2.003813,1.350678],[-3.288090,-9.047424,3.025440,-0.263092,4.703625],[-3.832169,4.124252,-6.203347,-6.932821,7.349874],[6.167639,9.883046,0.204620,-7.726755,-3.677536],[5.207430,2.005699,-1.683470,1.219443,-7.367873],[-2.970691,7.067566,-7.701844,-9.155336,2.019640],[-1.847966,-6.874040,-9.460859,3.396807,8.727561],[-4.511134,-1.388969,-6.853906,-4.287298,6.124116]],[[-0.181519,9.007076,1.938230,-4.909541,-9.795426],[-3.564523,-6.313583,-0.457510,-9.820806,-5.933241],[-8.116160,-8.756331,-2.287817,5.263425,-8.601736],[-5.519208,-3.645073,8.044137,1.927192,0.180598],[8.719937,-0.992519,-7.316352,-4.607647,-8.814447],[-6.846026,2.470675,-4.759281,-9.484009,5.475444],[-8.641968,9.178829,0.571598,5.112537,-8.103095],[6.073149,-9.191309,-8.935739,-7.518657,4.677058],[5.647638,0.957569,-7.873377,-4.798621,-6.927052],[-4.502357,3.148018,0.764956,-4.035191,4.000777],[-4.770030,-4.819918,1.435122,7.731074,8.284264]],[[-2.971897,4.816580,8.618034,7.578904,-7.317031],[8.737963,0.807794,-1.329494,-0.154808,7.649701],[-5.475894,-4.517964,-8.615438,4.780613,0.173575],[-4.433196,6.370452,-9.624094,2.347596,-1.606456],[8.845491,-1.151729,2.448195,8.219150,7.711616],[0.502804,-2.242556,-3.684993,8.720499,4.720142],[-1.532429,4.698650,4.878226,0.648427,9.363554],[-2.785816,4.886125,8.646906,7.075585,-4.747651],[4.270424,-6.926130,7.517215,-8.919121,-5.127050],[-4.502559,7.961361,-2.010027,1.613814,-0.315371],[-2.966470,7.361021,7.220951,-0.475423,3.228102]],[[-0.118782,-2.965655,3.319940,7.727210,6.689272],[8.846254,0.387290,3.597312,4.748448,3.149600],[0.071073,-3.599634,2.688048,-7.114917,-3.314487],[9.112797,-8.172931,-7.654098,0.510759,-6.000049],[2.675524,-1.361419,-3.119818,2.080206,-2.903787],[8.008876,-6.364181,-4.475525,-7.705919,9.001522],[5.022540,5.914198,-0.874518,6.163075,1.360952],[-9.762859,8.266092,4.820211,-0.268598,9.845277],[2.569263,0.511359,-1.217879,-9.525369,-6.674076],[6.766013,-7.859486,8.501401,-6.843546,-0.235598],[-0.921107,2.461533,-2.428532,-2.251947,9.537234]]], dtype = "float64")#candidate|2815|(11, 11, 5)|const|float64
bop_2816 = relay.less_equal(call_2813.astype('bool'), const_2815.astype('bool')) # shape=(11, 11, 5)
bop_2819 = relay.less_equal(call_2814.astype('bool'), const_2815.astype('bool')) # shape=(11, 11, 5)
output = bop_2816
output2 = bop_2819
func_2821 = relay.Function([], output)
mod['func_2821'] = func_2821
mod = relay.transform.InferType()(mod)
mutated_mod['func_2821'] = func_2821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2821_call = mutated_mod.get_global_var('func_2821')
call_2822 = func_2821_call()
output = call_2822
func_2823 = relay.Function([], output)
mutated_mod['func_2823'] = func_2823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2680_call = mod.get_global_var('func_2680')
func_2681_call = mutated_mod.get_global_var('func_2681')
call_2881 = relay.TupleGetItem(func_2680_call(), 0)
call_2882 = relay.TupleGetItem(func_2681_call(), 0)
var_2890 = relay.var("var_2890", dtype = "float32", shape = (8, 14, 16))#candidate|2890|(8, 14, 16)|var|float32
bop_2891 = relay.less(call_2881.astype('bool'), relay.reshape(var_2890.astype('bool'), relay.shape_of(call_2881))) # shape=(8, 14, 16)
bop_2894 = relay.less(call_2882.astype('bool'), relay.reshape(var_2890.astype('bool'), relay.shape_of(call_2882))) # shape=(8, 14, 16)
func_2597_call = mod.get_global_var('func_2597')
func_2599_call = mutated_mod.get_global_var('func_2599')
call_2900 = relay.TupleGetItem(func_2597_call(relay.reshape(bop_2891.astype('uint32'), [8, 14, 16])), 2)
call_2901 = relay.TupleGetItem(func_2599_call(relay.reshape(bop_2891.astype('uint32'), [8, 14, 16])), 2)
func_1648_call = mod.get_global_var('func_1648')
func_1650_call = mutated_mod.get_global_var('func_1650')
call_2917 = relay.TupleGetItem(func_1648_call(), 0)
call_2918 = relay.TupleGetItem(func_1650_call(), 0)
var_2921 = relay.var("var_2921", dtype = "float32", shape = (8, 14, 16))#candidate|2921|(8, 14, 16)|var|float32
bop_2922 = relay.bitwise_xor(call_2881.astype('int16'), relay.reshape(var_2921.astype('int16'), relay.shape_of(call_2881))) # shape=(8, 14, 16)
bop_2925 = relay.bitwise_xor(call_2882.astype('int16'), relay.reshape(var_2921.astype('int16'), relay.shape_of(call_2882))) # shape=(8, 14, 16)
func_649_call = mod.get_global_var('func_649')
func_653_call = mutated_mod.get_global_var('func_653')
const_2936 = relay.const([-5.203616,8.656031,-2.083509,3.063938,3.622157,-7.402754,-6.847282,5.998065,6.272162,6.347517,-5.144091,0.535127,-0.368707,-6.969557,9.657063,0.308110,4.320688,5.757650,-4.504945,0.349798,-8.490685,-9.633787,0.902971,4.831098,5.720363,-1.508463,6.112396,9.520758,-4.099406,-8.268871,7.837721,2.173079,-8.914882,-7.977861,4.730163,7.371159,9.844761,-7.143557,9.312380,7.097965,-1.753350,-1.164141,-2.382741,7.715919,-8.853855,-2.466969,8.281010,-9.965114,-7.115870,2.239748,-2.379388,6.090469,-5.760475,-0.736462,3.815013,-1.303571,-7.311743,-4.408472,-3.815960,6.025047,3.413028,-5.944627,5.522642,-9.789828,3.610077,5.611440,-5.684961,-2.126969,-0.580972,9.959565,-6.341360,9.473596,-4.016724,0.814110,-3.453309,7.150259,-1.304308,-7.256388,7.045142,3.083502,-5.701713,-1.585503,-8.946180,-2.763442,-2.329761,-5.049556,2.300276,0.955987,7.005886,0.268992,5.439517,9.091663,-8.130380,1.464450,1.314003,9.274700,7.924218,-7.776416,-6.435814,-5.157463,-5.230414,1.378273,-8.566553,-3.244810,-4.969019,0.754439,-6.030219,6.271007,9.044168,-1.927016,-3.213161,-3.207527,-1.417059,9.615342,7.416466,5.761590,-5.367377,-9.608251,0.818708,3.912713,-2.355920,4.899404,3.003493,4.338206,2.214234,5.578670,5.647369,6.154135,5.197083,-1.318226,-4.590309,-8.485683,2.471465,7.133215,1.796502,-7.891433,-9.074910,4.841635,-0.194019,-2.034862,-0.301535,7.745394,8.384961,6.826767,0.695882,-9.445954,9.790640,7.224887,0.394218,9.254332,9.887194,-2.831921,0.612652,9.415006,-4.511317,0.100462,-7.087869,6.187576,4.357540,-5.555746,-1.071193,-4.310145,2.519636,-6.646593,7.292959,-6.698299,8.190896,-9.162167,-0.346944,3.723184,7.313199,8.851049,0.959518,0.653218,-4.499177,-9.621313,-4.486962,-1.935176,-3.139874,-7.674652,0.680180,-4.811813,0.203551,1.279326,-3.358553,9.119235,-0.860647,3.678637,3.427724,-4.687840,-9.569284,-8.465723,-7.185911,5.474177,-0.057366,-8.508229,-3.710638,-6.868318,1.983757,3.453200,-5.557471,6.887291,8.641570,9.994783,1.660743,-5.457831,-4.277014,8.892123,-7.265648,5.487304,-9.882951,-5.210027,-7.596737,6.006920,-1.840375,2.838717,5.569233,0.516750,-0.156899,4.030319,4.927795,7.097048,-0.504438,-0.023081,9.382599,2.531028,4.165146,-3.390402,3.250764,1.877225,-3.539090,-0.706808,9.083862,4.136591,-3.366360,5.741895,-7.457059,0.091405,1.624756,0.025892,6.010488,5.477656,-1.958857,-2.759969,5.118174,-4.593659,7.345381,5.516465,-9.277905,-2.034885,2.304528,-6.159563,-7.058251,-1.603180,2.154112,7.221055,5.824178,0.779615,-7.698813,5.466655,9.080633,-7.004928,-9.994446,6.696349,-8.112747,-9.275431,-7.116392,3.014279,-7.211800,-8.832776,-8.045392,5.275003,-2.752706,0.327798,-7.724479,-4.534410,-1.890253,-7.216147,-6.348465,-8.107449,6.789382,-2.439003,3.898003,3.849114,-3.702464,-7.501557,0.244201,-9.346370,-3.273449,-9.115642,-7.686689,5.179328,0.417909,4.662741,7.380387,-1.260269,-2.638088,-9.360859,1.506768,-2.603140], dtype = "float64")#candidate|2936|(300,)|const|float64
call_2935 = relay.TupleGetItem(func_649_call(relay.reshape(const_2936.astype('float64'), [12, 5, 5]), relay.reshape(const_2936.astype('float64'), [12, 5, 5]), ), 0)
call_2937 = relay.TupleGetItem(func_653_call(relay.reshape(const_2936.astype('float64'), [12, 5, 5]), relay.reshape(const_2936.astype('float64'), [12, 5, 5]), ), 0)
bop_2939 = relay.bitwise_or(call_2935.astype('int64'), relay.reshape(const_2936.astype('int64'), relay.shape_of(call_2935))) # shape=(12, 5, 5)
bop_2942 = relay.bitwise_or(call_2937.astype('int64'), relay.reshape(const_2936.astype('int64'), relay.shape_of(call_2937))) # shape=(12, 5, 5)
func_685_call = mod.get_global_var('func_685')
func_691_call = mutated_mod.get_global_var('func_691')
const_2946 = relay.const([[6,2,5,5,8,-3,-4,-1,-2,9,9,-1],[7,8,7,-1,-3,4,7,-8,-7,-2,-7,-10],[-3,-8,-8,-3,-8,3,6,-8,-9,7,-2,-8],[5,10,2,2,10,8,-6,10,-4,3,9,1],[4,1,-2,-6,1,-10,7,-8,1,-2,-9,-4],[7,4,-9,-3,10,2,5,8,6,-8,-9,10],[2,-8,-6,3,10,-9,-2,-3,-8,-4,-2,8],[-8,3,-3,-7,2,-8,-8,2,-10,-6,-7,5],[-3,-8,-9,5,5,7,8,6,1,-10,7,-8],[7,1,4,-9,5,4,-6,-3,6,2,6,-5],[2,-8,9,7,-4,10,-4,-7,-8,3,1,-6],[6,10,-6,10,10,10,-6,7,-5,9,8,8],[-8,-2,7,-5,-6,4,10,3,-4,1,-9,-1],[7,-6,10,3,-3,9,2,4,9,-1,3,-8],[8,6,-8,-4,1,-2,-3,8,-7,-7,-1,7],[8,8,6,8,-3,-3,-3,8,8,2,-2,-7],[-9,7,5,9,-4,5,-1,3,-7,-7,-5,4],[-2,5,9,2,-8,8,-5,-7,4,-8,-4,10],[-9,-10,1,-10,-10,-6,8,-9,-9,2,-3,-2],[10,3,2,5,-8,8,9,-2,-2,2,-8,-8],[7,2,10,9,3,6,-3,7,-6,-3,-2,7],[-7,7,9,4,-7,8,-10,9,-10,9,6,7],[2,10,-8,1,6,-1,-5,-3,-1,10,-9,-5],[4,2,-1,-1,-2,-8,-7,-6,-8,10,-1,-6],[5,4,-6,10,-4,-9,3,9,-2,6,9,-4],[6,-8,6,-1,-1,4,-5,-9,-9,7,10,-9],[-4,-2,4,10,10,9,4,-9,-9,4,9,5],[2,2,-8,4,6,7,-4,2,-4,1,2,-5],[-5,5,6,4,3,-2,8,3,4,4,6,3],[8,10,-6,-3,7,4,1,1,-3,3,9,-5],[-7,-2,-6,4,6,6,-10,2,-8,-9,2,2],[-3,5,2,-6,9,-5,10,9,-3,8,5,-1],[4,-3,-1,2,-2,5,-8,-5,8,2,-9,-4],[7,8,-1,8,-10,-6,7,-5,6,1,1,-1],[-7,-7,-5,1,-4,-5,-9,-2,5,9,5,-9],[4,-5,9,5,8,-2,-4,6,-3,3,-5,2]], dtype = "int16")#candidate|2946|(36, 12)|const|int16
const_2947 = relay.const(False, dtype = "bool")#candidate|2947|()|const|bool
const_2948 = relay.const([False,False,True,False,False,False,False,False,True,True,True,True,False,False,True,False,True,True,False,False,True,True], dtype = "bool")#candidate|2948|(22,)|const|bool
call_2945 = relay.TupleGetItem(func_685_call(relay.reshape(const_2946.astype('int16'), [6, 8, 9]), relay.reshape(const_2946.astype('int16'), [6, 8, 9]), relay.reshape(const_2947.astype('bool'), []), relay.reshape(const_2948.astype('bool'), [22,]), ), 2)
call_2949 = relay.TupleGetItem(func_691_call(relay.reshape(const_2946.astype('int16'), [6, 8, 9]), relay.reshape(const_2946.astype('int16'), [6, 8, 9]), relay.reshape(const_2947.astype('bool'), []), relay.reshape(const_2948.astype('bool'), [22,]), ), 2)
func_2728_call = mod.get_global_var('func_2728')
func_2731_call = mutated_mod.get_global_var('func_2731')
call_2950 = func_2728_call(relay.reshape(call_2881.astype('float64'), [8, 14, 16]))
call_2951 = func_2728_call(relay.reshape(call_2881.astype('float64'), [8, 14, 16]))
output = relay.Tuple([bop_2891,call_2900,call_2917,bop_2922,bop_2939,call_2945,const_2946,const_2947,const_2948,call_2950,])
output2 = relay.Tuple([bop_2894,call_2901,call_2918,bop_2925,bop_2942,call_2949,const_2946,const_2947,const_2948,call_2951,])
func_2965 = relay.Function([var_2890,var_2921,], output)
mod['func_2965'] = func_2965
mod = relay.transform.InferType()(mod)
var_2966 = relay.var("var_2966", dtype = "float32", shape = (8, 14, 16))#candidate|2966|(8, 14, 16)|var|float32
var_2967 = relay.var("var_2967", dtype = "float32", shape = (8, 14, 16))#candidate|2967|(8, 14, 16)|var|float32
output = func_2965(var_2966,var_2967,)
func_2968 = relay.Function([var_2966,var_2967,], output)
mutated_mod['func_2968'] = func_2968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2018_call = mod.get_global_var('func_2018')
func_2019_call = mutated_mod.get_global_var('func_2019')
call_3012 = relay.TupleGetItem(func_2018_call(), 0)
call_3013 = relay.TupleGetItem(func_2019_call(), 0)
uop_3016 = relay.asinh(call_3012.astype('float64')) # shape=(8, 14, 16)
uop_3018 = relay.asinh(call_3013.astype('float64')) # shape=(8, 14, 16)
func_1287_call = mod.get_global_var('func_1287')
func_1288_call = mutated_mod.get_global_var('func_1288')
call_3026 = relay.TupleGetItem(func_1287_call(), 0)
call_3027 = relay.TupleGetItem(func_1288_call(), 0)
output = relay.Tuple([uop_3016,call_3026,])
output2 = relay.Tuple([uop_3018,call_3027,])
func_3047 = relay.Function([], output)
mod['func_3047'] = func_3047
mod = relay.transform.InferType()(mod)
mutated_mod['func_3047'] = func_3047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3047_call = mutated_mod.get_global_var('func_3047')
call_3048 = func_3047_call()
output = call_3048
func_3049 = relay.Function([], output)
mutated_mod['func_3049'] = func_3049
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3050 = relay.var("var_3050", dtype = "float64", shape = (10, 6, 8))#candidate|3050|(10, 6, 8)|var|float64
uop_3051 = relay.rsqrt(var_3050.astype('float64')) # shape=(10, 6, 8)
output = relay.Tuple([uop_3051,])
output2 = relay.Tuple([uop_3051,])
func_3055 = relay.Function([var_3050,], output)
mod['func_3055'] = func_3055
mod = relay.transform.InferType()(mod)
var_3056 = relay.var("var_3056", dtype = "float64", shape = (10, 6, 8))#candidate|3056|(10, 6, 8)|var|float64
output = func_3055(var_3056)
func_3057 = relay.Function([var_3056], output)
mutated_mod['func_3057'] = func_3057
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3088 = relay.var("var_3088", dtype = "float32", shape = ())#candidate|3088|()|var|float32
var_3089 = relay.var("var_3089", dtype = "float32", shape = (13, 7, 11))#candidate|3089|(13, 7, 11)|var|float32
bop_3090 = relay.multiply(var_3088.astype('float32'), var_3089.astype('float32')) # shape=(13, 7, 11)
bop_3104 = relay.add(var_3089.astype('int16'), relay.reshape(bop_3090.astype('int16'), relay.shape_of(var_3089))) # shape=(13, 7, 11)
uop_3110 = relay.cosh(var_3089.astype('float32')) # shape=(13, 7, 11)
uop_3112 = relay.tan(uop_3110.astype('float32')) # shape=(13, 7, 11)
uop_3127 = relay.exp(uop_3112.astype('float32')) # shape=(13, 7, 11)
output = relay.Tuple([bop_3104,uop_3127,])
output2 = relay.Tuple([bop_3104,uop_3127,])
func_3129 = relay.Function([var_3088,var_3089,], output)
mod['func_3129'] = func_3129
mod = relay.transform.InferType()(mod)
mutated_mod['func_3129'] = func_3129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3129_call = mutated_mod.get_global_var('func_3129')
var_3131 = relay.var("var_3131", dtype = "float32", shape = ())#candidate|3131|()|var|float32
var_3132 = relay.var("var_3132", dtype = "float32", shape = (13, 7, 11))#candidate|3132|(13, 7, 11)|var|float32
call_3130 = func_3129_call(var_3131,var_3132,)
output = call_3130
func_3133 = relay.Function([var_3131,var_3132,], output)
mutated_mod['func_3133'] = func_3133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2256_call = mod.get_global_var('func_2256')
func_2257_call = mutated_mod.get_global_var('func_2257')
call_3204 = relay.TupleGetItem(func_2256_call(), 0)
call_3205 = relay.TupleGetItem(func_2257_call(), 0)
uop_3206 = relay.asin(call_3204.astype('float64')) # shape=(1, 784)
uop_3208 = relay.asin(call_3205.astype('float64')) # shape=(1, 784)
bop_3229 = relay.logical_xor(call_3204.astype('uint64'), relay.reshape(uop_3206.astype('uint64'), relay.shape_of(call_3204))) # shape=(1, 784)
bop_3232 = relay.logical_xor(call_3205.astype('uint64'), relay.reshape(uop_3208.astype('uint64'), relay.shape_of(call_3205))) # shape=(1, 784)
func_992_call = mod.get_global_var('func_992')
func_994_call = mutated_mod.get_global_var('func_994')
call_3250 = relay.TupleGetItem(func_992_call(), 0)
call_3251 = relay.TupleGetItem(func_994_call(), 0)
func_1408_call = mod.get_global_var('func_1408')
func_1409_call = mutated_mod.get_global_var('func_1409')
call_3255 = relay.TupleGetItem(func_1408_call(), 0)
call_3256 = relay.TupleGetItem(func_1409_call(), 0)
uop_3259 = relay.log(uop_3206.astype('float32')) # shape=(1, 784)
uop_3261 = relay.log(uop_3208.astype('float32')) # shape=(1, 784)
output = relay.Tuple([bop_3229,call_3250,call_3255,uop_3259,])
output2 = relay.Tuple([bop_3232,call_3251,call_3256,uop_3261,])
func_3262 = relay.Function([], output)
mod['func_3262'] = func_3262
mod = relay.transform.InferType()(mod)
mutated_mod['func_3262'] = func_3262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3262_call = mutated_mod.get_global_var('func_3262')
call_3263 = func_3262_call()
output = call_3263
func_3264 = relay.Function([], output)
mutated_mod['func_3264'] = func_3264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2276_call = mod.get_global_var('func_2276')
func_2277_call = mutated_mod.get_global_var('func_2277')
call_3293 = relay.TupleGetItem(func_2276_call(), 0)
call_3294 = relay.TupleGetItem(func_2277_call(), 0)
func_1118_call = mod.get_global_var('func_1118')
func_1122_call = mutated_mod.get_global_var('func_1122')
const_3316 = relay.const([-1.634874,2.604414,1.782536,-9.205106,-0.364588,-5.615808,-1.207002,-1.964118,-9.408117,-2.848309,5.207308,-1.255378,9.325761,0.889703,-5.825814,0.655916,2.352913,7.546836,-9.157858,6.900309,1.144911,-6.323393,1.597796,-8.629447,9.950101,-5.582156,9.799959,0.976304,3.887093,3.454818,-2.060772,-8.799455,0.356092,-5.492330,-5.472453,-1.366090,-0.522569,5.451132,8.782679,6.173127,1.301086,8.996535,-4.745221,0.915288,-6.009606,-2.538020,5.843812,-8.624261,-4.827293,-0.304863,-6.859351,-0.520592,0.404308,-5.386737,-5.145175,2.194061,2.135020,-3.651448,-5.031318,1.714453,-3.456976,5.888267,8.818918,1.905393,-1.918427,-7.975781,-3.673864,2.396500,-0.238927,4.555412,-6.045109,-7.907402,0.278761,7.884512,7.959210,-9.918535,-8.723721,5.345578,4.041203,2.541921,3.041731,-6.173048,8.318712,0.527150,6.014970,-4.727907,-7.666196,2.729172,4.064134,3.677150,-7.463560,-0.483513,8.777850,-2.813515,-1.354467,-9.323623,6.454093,-9.634235,3.885624,-0.891113], dtype = "float32")#candidate|3316|(100,)|const|float32
var_3317 = relay.var("var_3317", dtype = "bool", shape = ())#candidate|3317|()|var|bool
call_3315 = relay.TupleGetItem(func_1118_call(relay.reshape(const_3316.astype('float32'), [4, 5, 5]), relay.reshape(var_3317.astype('bool'), []), ), 5)
call_3318 = relay.TupleGetItem(func_1122_call(relay.reshape(const_3316.astype('float32'), [4, 5, 5]), relay.reshape(var_3317.astype('bool'), []), ), 5)
output = relay.Tuple([call_3293,call_3315,const_3316,var_3317,])
output2 = relay.Tuple([call_3294,call_3318,const_3316,var_3317,])
func_3319 = relay.Function([var_3317,], output)
mod['func_3319'] = func_3319
mod = relay.transform.InferType()(mod)
var_3320 = relay.var("var_3320", dtype = "bool", shape = ())#candidate|3320|()|var|bool
output = func_3319(var_3320)
func_3321 = relay.Function([var_3320], output)
mutated_mod['func_3321'] = func_3321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1250_call = mod.get_global_var('func_1250')
func_1252_call = mutated_mod.get_global_var('func_1252')
call_3323 = relay.TupleGetItem(func_1250_call(), 0)
call_3324 = relay.TupleGetItem(func_1252_call(), 0)
output = call_3323
output2 = call_3324
func_3354 = relay.Function([], output)
mod['func_3354'] = func_3354
mod = relay.transform.InferType()(mod)
output = func_3354()
func_3355 = relay.Function([], output)
mutated_mod['func_3355'] = func_3355
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3374 = relay.var("var_3374", dtype = "float64", shape = (8, 7, 2))#candidate|3374|(8, 7, 2)|var|float64
uop_3375 = relay.sigmoid(var_3374.astype('float64')) # shape=(8, 7, 2)
bop_3379 = relay.greater_equal(var_3374.astype('bool'), relay.reshape(uop_3375.astype('bool'), relay.shape_of(var_3374))) # shape=(8, 7, 2)
var_3382 = relay.var("var_3382", dtype = "float64", shape = (8, 7, 2))#candidate|3382|(8, 7, 2)|var|float64
bop_3383 = relay.not_equal(var_3374.astype('bool'), relay.reshape(var_3382.astype('bool'), relay.shape_of(var_3374))) # shape=(8, 7, 2)
func_1396_call = mod.get_global_var('func_1396')
func_1397_call = mutated_mod.get_global_var('func_1397')
call_3403 = relay.TupleGetItem(func_1396_call(), 1)
call_3404 = relay.TupleGetItem(func_1397_call(), 1)
func_1182_call = mod.get_global_var('func_1182')
func_1183_call = mutated_mod.get_global_var('func_1183')
call_3405 = relay.TupleGetItem(func_1182_call(), 1)
call_3406 = relay.TupleGetItem(func_1183_call(), 1)
output = relay.Tuple([bop_3379,bop_3383,call_3403,call_3405,])
output2 = relay.Tuple([bop_3379,bop_3383,call_3404,call_3406,])
func_3408 = relay.Function([var_3374,var_3382,], output)
mod['func_3408'] = func_3408
mod = relay.transform.InferType()(mod)
mutated_mod['func_3408'] = func_3408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3408_call = mutated_mod.get_global_var('func_3408')
var_3410 = relay.var("var_3410", dtype = "float64", shape = (8, 7, 2))#candidate|3410|(8, 7, 2)|var|float64
var_3411 = relay.var("var_3411", dtype = "float64", shape = (8, 7, 2))#candidate|3411|(8, 7, 2)|var|float64
call_3409 = func_3408_call(var_3410,var_3411,)
output = call_3409
func_3412 = relay.Function([var_3410,var_3411,], output)
mutated_mod['func_3412'] = func_3412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2821_call = mod.get_global_var('func_2821')
func_2823_call = mutated_mod.get_global_var('func_2823')
call_3418 = func_2821_call()
call_3419 = func_2821_call()
output = call_3418
output2 = call_3419
func_3428 = relay.Function([], output)
mod['func_3428'] = func_3428
mod = relay.transform.InferType()(mod)
output = func_3428()
func_3429 = relay.Function([], output)
mutated_mod['func_3429'] = func_3429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3262_call = mod.get_global_var('func_3262')
func_3264_call = mutated_mod.get_global_var('func_3264')
call_3447 = relay.TupleGetItem(func_3262_call(), 2)
call_3448 = relay.TupleGetItem(func_3264_call(), 2)
output = relay.Tuple([call_3447,])
output2 = relay.Tuple([call_3448,])
func_3458 = relay.Function([], output)
mod['func_3458'] = func_3458
mod = relay.transform.InferType()(mod)
output = func_3458()
func_3459 = relay.Function([], output)
mutated_mod['func_3459'] = func_3459
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3483 = relay.var("var_3483", dtype = "float32", shape = (11, 13, 8))#candidate|3483|(11, 13, 8)|var|float32
var_3484 = relay.var("var_3484", dtype = "float32", shape = (11, 13, 8))#candidate|3484|(11, 13, 8)|var|float32
bop_3485 = relay.greater(var_3483.astype('bool'), relay.reshape(var_3484.astype('bool'), relay.shape_of(var_3483))) # shape=(11, 13, 8)
bop_3488 = relay.not_equal(bop_3485.astype('bool'), relay.reshape(var_3484.astype('bool'), relay.shape_of(bop_3485))) # shape=(11, 13, 8)
uop_3498 = relay.asinh(bop_3488.astype('float32')) # shape=(11, 13, 8)
output = relay.Tuple([uop_3498,])
output2 = relay.Tuple([uop_3498,])
func_3500 = relay.Function([var_3483,var_3484,], output)
mod['func_3500'] = func_3500
mod = relay.transform.InferType()(mod)
var_3501 = relay.var("var_3501", dtype = "float32", shape = (11, 13, 8))#candidate|3501|(11, 13, 8)|var|float32
var_3502 = relay.var("var_3502", dtype = "float32", shape = (11, 13, 8))#candidate|3502|(11, 13, 8)|var|float32
output = func_3500(var_3501,var_3502,)
func_3503 = relay.Function([var_3501,var_3502,], output)
mutated_mod['func_3503'] = func_3503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2149_call = mod.get_global_var('func_2149')
func_2150_call = mutated_mod.get_global_var('func_2150')
call_3554 = relay.TupleGetItem(func_2149_call(), 0)
call_3555 = relay.TupleGetItem(func_2150_call(), 0)
func_1034_call = mod.get_global_var('func_1034')
func_1038_call = mutated_mod.get_global_var('func_1038')
const_3579 = relay.const([-9,-6,6,-4,-3,9,-2,-2,5,4,7,5,-10,-8,5,7,-6,9,-10,-9,10,5,-4,-4,5,8,-7,-8,8,-8,-5,1,7,-5,4,2,-3,9,3,6,-3,-2,9,-9,-7,-2,-1,8,-2,5,-9,2,-5,1,8,8,4,-4,-1,2,10,-2,4,9,5,3,-10,-7,-8,4,8,7,-1,6,4,2,1,-6,-6,-2,8,4,-2,4,-1,-8,-10,2,-8,3,-6,7,-1,-2,-8,7,-10,6,1,-2,8,-1,4,10,-10,3,10,-3,5,-9,10,10,6,-1,-6,9,-4,-4,4,10,1,-1,-7,3,2,4,-7,-3,10,9,-9,-4,1,-3,4,-8,-9,5,5,-8,1,10,-8,-8,-7,8,7,10,10,2,7,10,-1,3,-4,-5,-5,-10,6,-3,6,10,3,-1,3,8,3,9,-4,2,-5,4,9,-5,3,9,-9,-5,9,7,9,-4,-7,6,5,-1,4,10,-9,-8,3,6,-6,-6,8,7,-3,10,1,-9,-6,5,-6,-1,10,-1,-9,-4,-9,8,-6,-5,-5,8,2,2,-10,6,-4,2,10,-6,2,4,2,7,6,-6,-8,6,-4,8,7,-9,-2,-4,4,-3,-2,8,-6,2,8,4,-4,3,-9,9,6,-9,-1,-3,5,-3,-1,-10,5,-1,-2,8,5,4,-4,-4,-3,9,7,8,7,10,-10,7,2,10,-4,10,10,5,-6,-2,-1,-2,-4,2,-2,9,3,-1,5,9,-10,9,2,3,1,9,-8,-10,-1,-4,-7,7,1,4,-7,-5,1,-6,8,-3,7,-2,-10,9,-7,4,-6,-3,-7,2,2,-3,-1,-8,-10,-9,10,4,-8,-1,4,8,-8,-6,9,-1,5,-4,2,-7,-10,9,-10,9,-6,2,8,1,-4,-3,6,4,7,-8,-9,-3,-3,-8,-5,-2,9,-10,-5,-5,9,2,1,7,-3,10,1,-10,6,-7,4,4,5,-4,-7,9,-8,-1,6,-8,-2,10,4,8,-7,2,6,7,-2,-2,-2,4,4,9,-3,1,-7,-1,-1,10,-5,9,8,3,-9,-10,-5,-10,-2,-9,6,-2,-10,-2,3,-9,4,-2,-6,-4,-9,7,-9,-5,4,5,5,-2,2,6,-6,4,4,2,-10,-8,-1,4,-2,8,-4,-7,-10,-4,3,-6,6,8,-7,-4,9,7,-7,-7,-10,6,-5,3,-9,8,8,2,-5,5,-1,10,-1,7,7,-6,8,-3,4,-8,4,7,-9,5,9,7,-9,1,1,-7,-1,-7,6,2,5,-4,-6,-10,-2,-9,7,3,3,5,2,-4,8,4,1,-5,-5,-5,4,6,-2,-8,-2,-6,-5,-1,-4,9,-6,5,8,4,-1,-4,6,-2,4,-9,1,1,6,-2,-7,-4,6,10,1,9,5,-8,3,1,-10,-4,-8,8,5,8,-4,4,-2,-6,-8,-7,-8,4,-7,-7,-7,-9,-5,3,-8,3,3,-2,2,8,-4,-1,-1,2,-1,-4,-1,7,9,-8,-1,9,-8,9,-10,10,-3,6,7,2,10,-8,9,9,-5,5,7,10,-4,5,-9,9,9,7,-3,6,5,4,-9,-9,9,-2,7,-2,-2,-8,4,-4,1,1,-10,-7,2,6,6,10,1,-2,4,3,2,9,-7,1,4,-1,-10,9,2,7,-3,3,-7,-6,8,-8,-9,6,-10,3,8,10,4,2,-5,4,-4,-5,2,1,-9,10,-8,5,1,3,3,9,-3,5,-8,7,6,4,-1,9,5,-9,6,-2,3,-8,9,6,-8,1,8,9,-9,-5,7,-4,3,-7,9,-6,5,1,-3,7,5,-9,-5,10,-3,-6,-9,5,6,-1,-1,7,10,9,4,5,5,4,-4,6,9,8,-4,10,-6,3,7,-3,-8,2,-2,1,3,-5,-10,-6,5,-7,-8,-7,7,4,-1,-2,-1,3,3,1,1,-5,-9,2,-5,-2,-7,9,-10,7,-10,-4,-5,-8,-3,4,-5,7,-2,-9,-7,1,-10,7,5,-5,6,10,8,-10,5,5,5,-5,2,-3], dtype = "uint8")#candidate|3579|(784,)|const|uint8
call_3578 = relay.TupleGetItem(func_1034_call(relay.reshape(const_3579.astype('uint8'), [14, 4, 14]), relay.reshape(const_3579.astype('uint8'), [14, 4, 14]), ), 1)
call_3580 = relay.TupleGetItem(func_1038_call(relay.reshape(const_3579.astype('uint8'), [14, 4, 14]), relay.reshape(const_3579.astype('uint8'), [14, 4, 14]), ), 1)
func_1118_call = mod.get_global_var('func_1118')
func_1122_call = mutated_mod.get_global_var('func_1122')
const_3595 = relay.const([[-9.776123,3.859526,-2.796837,-3.915344,-7.204141,-4.004335,-8.930099,8.312473,-3.916152,5.049901,-6.348142,-6.414087,2.316689,-4.455561,-4.080274,1.777141,4.401294,-7.596521,-2.484499,5.508071],[-1.007044,-9.069688,-3.862395,5.343279,3.437247,-1.034321,4.279110,-8.424122,-2.585727,2.453793,3.806992,-3.170093,8.160172,9.131948,1.155354,5.250868,-6.158007,-5.443320,5.504531,3.525456],[-6.600719,-0.928889,-4.009729,-5.677987,7.974069,-7.683868,3.701907,3.519382,8.735936,-4.889997,7.404411,0.034886,9.813420,-3.694179,4.771990,4.495752,8.770022,-8.066049,4.707972,-7.414678],[-7.859797,2.530227,0.453685,-6.089574,0.650561,-2.424125,-9.445525,-9.652637,5.382429,-1.273409,-9.246404,6.859596,7.934095,-2.996096,-2.308237,0.246446,0.039528,-8.617796,2.844165,2.300231],[-8.258591,4.904470,0.044343,-7.033843,-6.131531,-5.313499,1.026983,-1.997274,3.811085,0.604460,-8.893918,-5.308715,0.667522,-6.262301,0.508133,-4.393155,8.466446,9.960242,0.228088,-3.135673]], dtype = "float32")#candidate|3595|(5, 20)|const|float32
var_3596 = relay.var("var_3596", dtype = "bool", shape = ())#candidate|3596|()|var|bool
call_3594 = relay.TupleGetItem(func_1118_call(relay.reshape(const_3595.astype('float32'), [4, 5, 5]), relay.reshape(var_3596.astype('bool'), []), ), 5)
call_3597 = relay.TupleGetItem(func_1122_call(relay.reshape(const_3595.astype('float32'), [4, 5, 5]), relay.reshape(var_3596.astype('bool'), []), ), 5)
bop_3600 = relay.bitwise_xor(call_3594.astype('int16'), var_3596.astype('int16')) # shape=(22,)
bop_3603 = relay.bitwise_xor(call_3597.astype('int16'), var_3596.astype('int16')) # shape=(22,)
output = relay.Tuple([call_3554,call_3578,const_3579,const_3595,bop_3600,])
output2 = relay.Tuple([call_3555,call_3580,const_3579,const_3595,bop_3603,])
func_3614 = relay.Function([var_3596,], output)
mod['func_3614'] = func_3614
mod = relay.transform.InferType()(mod)
var_3615 = relay.var("var_3615", dtype = "bool", shape = ())#candidate|3615|()|var|bool
output = func_3614(var_3615)
func_3616 = relay.Function([var_3615], output)
mutated_mod['func_3616'] = func_3616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2067_call = mod.get_global_var('func_2067')
func_2069_call = mutated_mod.get_global_var('func_2069')
call_3659 = relay.TupleGetItem(func_2067_call(), 1)
call_3660 = relay.TupleGetItem(func_2069_call(), 1)
output = relay.Tuple([call_3659,])
output2 = relay.Tuple([call_3660,])
func_3681 = relay.Function([], output)
mod['func_3681'] = func_3681
mod = relay.transform.InferType()(mod)
output = func_3681()
func_3682 = relay.Function([], output)
mutated_mod['func_3682'] = func_3682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1396_call = mod.get_global_var('func_1396')
func_1397_call = mutated_mod.get_global_var('func_1397')
call_3757 = relay.TupleGetItem(func_1396_call(), 0)
call_3758 = relay.TupleGetItem(func_1397_call(), 0)
func_2067_call = mod.get_global_var('func_2067')
func_2069_call = mutated_mod.get_global_var('func_2069')
call_3779 = relay.TupleGetItem(func_2067_call(), 0)
call_3780 = relay.TupleGetItem(func_2069_call(), 0)
func_1305_call = mod.get_global_var('func_1305')
func_1308_call = mutated_mod.get_global_var('func_1308')
var_3807 = relay.var("var_3807", dtype = "int16", shape = ())#candidate|3807|()|var|int16
var_3808 = relay.var("var_3808", dtype = "int16", shape = (60,))#candidate|3808|(60,)|var|int16
call_3806 = relay.TupleGetItem(func_1305_call(relay.reshape(var_3807.astype('int16'), []), relay.reshape(var_3808.astype('int16'), [5, 12, 1]), ), 0)
call_3809 = relay.TupleGetItem(func_1308_call(relay.reshape(var_3807.astype('int16'), []), relay.reshape(var_3808.astype('int16'), [5, 12, 1]), ), 0)
func_1540_call = mod.get_global_var('func_1540')
func_1542_call = mutated_mod.get_global_var('func_1542')
const_3812 = relay.const([-10,-1,-7,6,10,2,-7,-3,1,-8,7,4,7,-7,9,-2,8,9,-10,5,-7,4,-9,4,7,4,5,-3,7,5,-6,5,8,1,1,10,2,-3,-2,-8,-1,4,-10,8,-1,-3,10,8,4,-8,5,4,-3,-8,-3,8,9,-2,1,6,3,-6,7,-10,5,-7,-7,10,5,-7,-4,-4,6,-2,6,-6,7,-1,-8,-7,-1,5,-5,-8,-3,-1,-9,-10,1,-2,9,-5,2,1,10,-4,2,9,-6,-10,-3,4,7,8,5,4,-8,10,-8,-1,-9,-9,6,-10,8,-9,-10,4,-6,-5,2,5,-10,-9,4,-7,5,-3,6,3,-3,5,-7,1,1,4,-7,3,-4,10,-4,-2,-4,2,-10,6,-7,-7,9,-10,7,-4,-3,-4,1,6,10,6,4,-6,3,8,-2,-6,4,-1,-10,-7,-4,-3,-4,10,-6,10,4,-4,5,-9,-6,7,-3,-3,5,-9,1,-4,8,1,-10,-5,6,-1,9,9,7,9,6,6,-2,-2,4,9,8,9,10,2,1,-6,-5,8,-3,-5,-9,-2,-3,-5,8,2,-2,6,3,8,1,-6,9,10,3,10,-6,4,-9,-8,-10,5,-1,4,8,2,5,10,4,-7,7,10,2,-3,-2,7,3,-4,4,-2,1,4,2,2,-3,-2,6,4,-5,-8,9,-6,7,1,-1,4,5,-8,1,2,8,-4,5,2,-4,4,6,-8,-4,-4,1,7,-7,2,8,2,7,10,-4,1,-3,-1,-9,-1,9,-9,5,-4,-4,2,2,8,10,3,-10,-1,-3,1,-3,-6,8,-1,-3,7,5,9,-3,-9,7,-8,10,10,-2,-7,3,-9,3,6,-9,5,-4,1,3,2,-6,7,-10,3,-7,-8,6,-3,-9,6,6,2,-8,-7,7,-1,2,10,4,-3,-6,3,-10,2,7,-9,-9,-3,6,-8,-1,-7,-6,4,-2,2,8,9,-4,-9,-1,4,-1,-9,-8,9,7,-2,-5,-4,1,-7,5,-9,9,2,8,9,2,6,6,-9,3,5,-8,-9,7,2,-1,1,-10,-1,-8,10,10,-1,-1,-9,-2,6,-3,10,10,4,-2,-3,-9,-5,-7,-8,-10,3,-9,-8,7,10], dtype = "int16")#candidate|3812|(432,)|const|int16
call_3811 = relay.TupleGetItem(func_1540_call(relay.reshape(const_3812.astype('int16'), [432,])), 1)
call_3813 = relay.TupleGetItem(func_1542_call(relay.reshape(const_3812.astype('int16'), [432,])), 1)
uop_3827 = relay.exp(call_3779.astype('float32')) # shape=(14, 5, 14)
uop_3829 = relay.exp(call_3780.astype('float32')) # shape=(14, 5, 14)
output = relay.Tuple([call_3757,call_3806,var_3807,var_3808,call_3811,const_3812,uop_3827,])
output2 = relay.Tuple([call_3758,call_3809,var_3807,var_3808,call_3813,const_3812,uop_3829,])
func_3830 = relay.Function([var_3807,var_3808,], output)
mod['func_3830'] = func_3830
mod = relay.transform.InferType()(mod)
mutated_mod['func_3830'] = func_3830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3830_call = mutated_mod.get_global_var('func_3830')
var_3832 = relay.var("var_3832", dtype = "int16", shape = ())#candidate|3832|()|var|int16
var_3833 = relay.var("var_3833", dtype = "int16", shape = (60,))#candidate|3833|(60,)|var|int16
call_3831 = func_3830_call(var_3832,var_3833,)
output = call_3831
func_3834 = relay.Function([var_3832,var_3833,], output)
mutated_mod['func_3834'] = func_3834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1785_call = mod.get_global_var('func_1785')
func_1787_call = mutated_mod.get_global_var('func_1787')
call_3847 = func_1785_call()
call_3848 = func_1785_call()
output = call_3847
output2 = call_3848
func_3859 = relay.Function([], output)
mod['func_3859'] = func_3859
mod = relay.transform.InferType()(mod)
output = func_3859()
func_3860 = relay.Function([], output)
mutated_mod['func_3860'] = func_3860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3262_call = mod.get_global_var('func_3262')
func_3264_call = mutated_mod.get_global_var('func_3264')
call_3875 = relay.TupleGetItem(func_3262_call(), 2)
call_3876 = relay.TupleGetItem(func_3264_call(), 2)
output = relay.Tuple([call_3875,])
output2 = relay.Tuple([call_3876,])
func_3912 = relay.Function([], output)
mod['func_3912'] = func_3912
mod = relay.transform.InferType()(mod)
mutated_mod['func_3912'] = func_3912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3912_call = mutated_mod.get_global_var('func_3912')
call_3913 = func_3912_call()
output = call_3913
func_3914 = relay.Function([], output)
mutated_mod['func_3914'] = func_3914
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3942 = relay.var("var_3942", dtype = "float32", shape = (9, 9, 9))#candidate|3942|(9, 9, 9)|var|float32
var_3943 = relay.var("var_3943", dtype = "float32", shape = (9, 9, 9))#candidate|3943|(9, 9, 9)|var|float32
bop_3944 = relay.floor_mod(var_3942.astype('float32'), relay.reshape(var_3943.astype('float32'), relay.shape_of(var_3942))) # shape=(9, 9, 9)
func_1077_call = mod.get_global_var('func_1077')
func_1078_call = mutated_mod.get_global_var('func_1078')
call_3951 = relay.TupleGetItem(func_1077_call(), 0)
call_3952 = relay.TupleGetItem(func_1078_call(), 0)
func_155_call = mod.get_global_var('func_155')
func_159_call = mutated_mod.get_global_var('func_159')
var_3962 = relay.var("var_3962", dtype = "bool", shape = (256,))#candidate|3962|(256,)|var|bool
call_3961 = func_155_call(relay.reshape(var_3962.astype('bool'), [16, 8, 2]), relay.reshape(var_3962.astype('bool'), [16, 8, 2]), )
call_3963 = func_155_call(relay.reshape(var_3962.astype('bool'), [16, 8, 2]), relay.reshape(var_3962.astype('bool'), [16, 8, 2]), )
output = relay.Tuple([bop_3944,call_3951,call_3961,var_3962,])
output2 = relay.Tuple([bop_3944,call_3952,call_3963,var_3962,])
func_3969 = relay.Function([var_3942,var_3943,var_3962,], output)
mod['func_3969'] = func_3969
mod = relay.transform.InferType()(mod)
mutated_mod['func_3969'] = func_3969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3969_call = mutated_mod.get_global_var('func_3969')
var_3971 = relay.var("var_3971", dtype = "float32", shape = (9, 9, 9))#candidate|3971|(9, 9, 9)|var|float32
var_3972 = relay.var("var_3972", dtype = "float32", shape = (9, 9, 9))#candidate|3972|(9, 9, 9)|var|float32
var_3973 = relay.var("var_3973", dtype = "bool", shape = (256,))#candidate|3973|(256,)|var|bool
call_3970 = func_3969_call(var_3971,var_3972,var_3973,)
output = call_3970
func_3974 = relay.Function([var_3971,var_3972,var_3973,], output)
mutated_mod['func_3974'] = func_3974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3681_call = mod.get_global_var('func_3681')
func_3682_call = mutated_mod.get_global_var('func_3682')
call_4013 = relay.TupleGetItem(func_3681_call(), 0)
call_4014 = relay.TupleGetItem(func_3682_call(), 0)
output = relay.Tuple([call_4013,])
output2 = relay.Tuple([call_4014,])
func_4026 = relay.Function([], output)
mod['func_4026'] = func_4026
mod = relay.transform.InferType()(mod)
output = func_4026()
func_4027 = relay.Function([], output)
mutated_mod['func_4027'] = func_4027
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4046 = relay.var("var_4046", dtype = "int32", shape = (1, 12, 2))#candidate|4046|(1, 12, 2)|var|int32
var_4047 = relay.var("var_4047", dtype = "int32", shape = (13, 12, 2))#candidate|4047|(13, 12, 2)|var|int32
bop_4048 = relay.add(var_4046.astype('int32'), var_4047.astype('int32')) # shape=(13, 12, 2)
func_3262_call = mod.get_global_var('func_3262')
func_3264_call = mutated_mod.get_global_var('func_3264')
call_4052 = relay.TupleGetItem(func_3262_call(), 0)
call_4053 = relay.TupleGetItem(func_3264_call(), 0)
output = relay.Tuple([bop_4048,call_4052,])
output2 = relay.Tuple([bop_4048,call_4053,])
func_4056 = relay.Function([var_4046,var_4047,], output)
mod['func_4056'] = func_4056
mod = relay.transform.InferType()(mod)
var_4057 = relay.var("var_4057", dtype = "int32", shape = (1, 12, 2))#candidate|4057|(1, 12, 2)|var|int32
var_4058 = relay.var("var_4058", dtype = "int32", shape = (13, 12, 2))#candidate|4058|(13, 12, 2)|var|int32
output = func_4056(var_4057,var_4058,)
func_4059 = relay.Function([var_4057,var_4058,], output)
mutated_mod['func_4059'] = func_4059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3428_call = mod.get_global_var('func_3428')
func_3429_call = mutated_mod.get_global_var('func_3429')
call_4063 = func_3428_call()
call_4064 = func_3428_call()
func_2149_call = mod.get_global_var('func_2149')
func_2150_call = mutated_mod.get_global_var('func_2150')
call_4073 = relay.TupleGetItem(func_2149_call(), 0)
call_4074 = relay.TupleGetItem(func_2150_call(), 0)
output = relay.Tuple([call_4063,call_4073,])
output2 = relay.Tuple([call_4064,call_4074,])
func_4094 = relay.Function([], output)
mod['func_4094'] = func_4094
mod = relay.transform.InferType()(mod)
output = func_4094()
func_4095 = relay.Function([], output)
mutated_mod['func_4095'] = func_4095
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4101 = relay.const([[[-5.868744,6.621090,-1.989745,-5.122742,9.347381,1.645598,3.413452,3.449850,9.084013,-3.890502,3.800503],[-5.239992,5.353771,-1.429840,0.829174,-6.324769,1.150361,-4.831762,3.114520,2.507722,-3.412754,-7.778086],[-0.720262,8.726848,-2.031485,-9.026053,3.284928,-0.998759,7.227120,8.372309,-3.747421,-5.761976,1.532076],[1.711539,-8.695190,0.388651,6.798035,-1.548363,5.560953,8.844625,2.521194,-7.217082,7.408964,3.270912]],[[8.321743,5.658334,-2.607628,0.726845,7.916197,-5.699830,5.326059,-0.591222,0.664174,2.641247,6.582862],[0.969970,-8.491912,1.350961,-8.559634,-3.251455,8.400544,3.002996,9.884903,-3.664740,-6.646639,-4.153196],[-5.047474,-2.567928,1.766544,7.485146,2.104423,0.769921,-6.979881,4.151633,-2.377134,-7.472308,6.462541],[5.103089,4.535511,7.700351,4.862586,1.637084,4.932337,8.841095,7.406248,5.506128,8.870688,-9.926741]],[[8.640619,-4.106984,2.537993,1.044178,5.422850,-9.107950,-0.624586,-9.317499,7.763320,-5.503739,6.187028],[-5.095617,-4.592753,3.417535,-8.007563,6.930484,0.903347,2.556263,-1.712980,-0.580828,-2.261934,-0.125115],[-0.697702,-2.992577,4.386069,-1.883391,-0.756598,9.710697,-7.002070,3.938672,7.009340,-6.517161,-4.784260],[1.397845,3.341894,-1.261533,-6.404677,-0.892924,7.036807,3.572543,0.356381,-2.048482,-2.772443,-4.081023]],[[-2.463241,5.011228,-8.055711,8.712374,-0.344430,-4.312745,-9.471147,9.558364,8.666504,8.128774,-9.061623],[8.650908,6.907620,1.654933,-1.775470,-0.544061,7.325923,-8.338094,-6.010802,3.878553,-0.140976,-0.284448],[-4.065440,-2.852646,6.918402,3.712540,-7.488522,-3.508460,-5.169911,0.549456,3.403725,7.053122,0.080030],[1.431380,3.478547,-7.619245,-1.090838,-7.463759,-5.834234,-5.421053,9.526575,2.062857,5.993796,4.874253]],[[-1.564109,-5.219420,-2.536145,-5.979817,6.279017,0.040519,-7.438669,-6.966604,-5.868702,-0.269346,9.502072],[5.365817,-8.804266,-9.968127,-5.751112,4.988241,-5.210163,-7.103096,1.561491,8.553162,-9.108475,-9.874946],[-2.529223,6.659086,0.132405,-7.785551,4.729303,8.234312,-1.278958,3.759815,0.893011,7.348957,-0.098853],[8.932098,3.406681,-9.296254,3.491244,-6.838927,9.187847,0.839940,5.763541,-2.354261,0.487959,-3.188845]],[[3.163908,-6.296907,-6.029452,0.297862,2.606145,1.752081,6.658104,5.049531,-5.906934,-6.872809,9.522695],[-0.874832,9.943307,3.746116,3.146714,8.559524,5.156398,4.306219,9.430379,-6.201447,2.087454,6.107991],[6.113297,-9.812740,2.996438,-6.923898,-8.944365,5.778043,0.743879,-8.235788,3.506840,6.229929,5.171662],[-7.866836,8.406623,7.137028,-9.639485,4.471664,8.827945,4.669133,1.618067,-2.105467,0.349289,2.060613]],[[-4.948865,5.299981,0.494784,5.409405,9.345343,-3.002319,-2.898084,-4.543428,-5.631443,9.674534,5.541455],[-3.736684,-7.895722,-3.458585,0.362806,-6.839008,1.595142,5.231938,-5.039107,7.017321,-8.618554,5.953202],[6.949241,-3.488093,3.245128,-9.100910,-7.606100,9.005156,5.545247,-6.156182,-0.580311,-1.506392,-4.756567],[-4.169671,-0.240454,0.122468,7.344031,-9.704547,-4.761701,7.059507,-2.839396,-0.251603,-2.690255,8.298095]],[[1.370399,-0.394932,-3.449943,4.862840,-0.436402,0.108025,2.895711,-4.317407,1.354109,1.395302,9.775912],[-7.186388,-8.822731,-8.644293,-4.286087,-5.345193,-0.719373,2.042991,-5.601157,3.062541,8.743110,0.546608],[0.030637,1.624149,-4.598172,-7.312578,4.359026,0.157094,7.178948,6.626406,8.634818,5.165393,-5.396604],[-1.736209,6.780586,-2.371512,5.421645,1.344172,2.018428,3.748451,-4.923305,1.651704,-0.980085,4.471217]],[[-1.108832,-3.365904,5.741580,0.760582,-7.728218,-0.042782,-4.383656,-1.590066,-9.296299,-6.319822,9.642605],[-6.326162,-5.437737,0.958747,-1.778468,-8.701592,1.009814,1.269885,9.996732,9.328824,-2.945237,5.932124],[-4.165660,-1.754745,-7.167138,-1.756203,2.114934,1.244621,-1.841511,-2.892179,6.064048,8.089724,1.047764],[5.356195,-5.673540,7.655985,-5.657949,6.648673,-1.772569,-4.346358,-2.103793,-3.509343,0.945942,5.861356]],[[3.943805,-1.590528,7.122024,0.305210,-2.741680,3.585398,5.605512,-1.340893,3.977389,-5.357821,0.806037],[-1.574850,1.272959,9.224300,-1.419699,-8.385712,3.583466,3.400412,1.988184,1.400613,9.267507,-4.044880],[8.820251,8.967283,-7.623051,2.803097,-4.328698,2.346681,-8.784168,-0.568535,-1.861874,-7.453068,2.666579],[-2.441504,9.224975,8.968783,-6.083180,3.829239,-5.869165,-9.956750,1.602382,-9.640941,-5.909807,8.306070]],[[0.264804,6.242540,1.731451,1.999925,2.650957,7.183730,8.477184,-9.504257,-9.818593,-4.180658,-9.754446],[2.344566,-3.064726,1.930005,0.995687,2.355431,-4.072240,-1.984721,0.016337,-6.727384,7.530459,8.283315],[-2.536321,-7.218742,2.195254,1.655241,-8.641718,7.992279,8.338053,4.422399,-2.935846,8.026216,1.609585],[-4.608015,9.035357,-6.435509,-7.125265,1.880034,7.720238,1.308740,-0.707682,-1.220396,2.192733,6.832427]],[[-0.881549,0.104564,-2.261609,6.226224,5.923704,-2.254833,-2.837890,3.613145,-0.811424,-1.804675,4.213468],[-7.830722,-6.809171,-3.708273,9.942701,-9.757955,-9.595453,-1.023370,-9.188089,-3.263344,4.887355,-5.521807],[8.891953,-4.744195,2.492970,4.102054,-6.235802,-5.190133,-8.162262,-4.724779,8.142171,0.597330,-2.639867],[-8.175469,4.246867,-7.923612,6.979073,2.346834,8.525481,-4.187193,-7.866685,0.785502,6.144949,3.552244]],[[-1.936643,9.658659,3.214252,4.348552,-7.982643,-0.835402,-7.145638,-1.637343,-7.876868,5.828640,9.725469],[-4.353955,8.662039,-5.448667,3.535238,0.735419,1.149656,2.012606,7.131342,0.968533,-2.255063,-0.695589],[-6.594910,-0.333481,-5.566745,-2.106370,3.560931,0.376534,-3.268437,-0.039295,8.424385,1.498985,-3.920633],[4.686572,6.800345,-1.162982,9.895838,6.421565,8.078597,-5.451141,1.486834,-4.497142,8.006187,0.549109]],[[4.557120,1.259689,9.327514,-4.831312,-6.037026,-0.936720,-3.475160,7.434559,9.526556,0.800156,3.887355],[-5.470150,5.508573,4.996903,-3.824356,-6.932112,-8.253631,-1.112778,0.537466,-9.377138,3.683808,2.975983],[5.597775,0.421503,9.815252,7.965150,-4.338473,6.827780,-3.175128,-5.866325,-8.551292,2.989946,-1.517870],[-2.679647,-2.521070,2.452236,8.950255,0.210209,-3.850880,4.788145,0.907078,-2.463884,-0.573246,5.842075]]], dtype = "float32")#candidate|4101|(14, 4, 11)|const|float32
uop_4102 = relay.sigmoid(const_4101.astype('float32')) # shape=(14, 4, 11)
func_155_call = mod.get_global_var('func_155')
func_159_call = mutated_mod.get_global_var('func_159')
var_4107 = relay.var("var_4107", dtype = "bool", shape = (1, 256))#candidate|4107|(1, 256)|var|bool
call_4106 = func_155_call(relay.reshape(var_4107.astype('bool'), [16, 8, 2]), relay.reshape(var_4107.astype('bool'), [16, 8, 2]), )
call_4108 = func_155_call(relay.reshape(var_4107.astype('bool'), [16, 8, 2]), relay.reshape(var_4107.astype('bool'), [16, 8, 2]), )
output = relay.Tuple([uop_4102,call_4106,var_4107,])
output2 = relay.Tuple([uop_4102,call_4108,var_4107,])
func_4110 = relay.Function([var_4107,], output)
mod['func_4110'] = func_4110
mod = relay.transform.InferType()(mod)
mutated_mod['func_4110'] = func_4110
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4111 = relay.var("var_4111", dtype = "bool", shape = (1, 256))#candidate|4111|(1, 256)|var|bool
func_4110_call = mutated_mod.get_global_var('func_4110')
call_4112 = func_4110_call(var_4111)
output = call_4112
func_4113 = relay.Function([var_4111], output)
mutated_mod['func_4113'] = func_4113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2496_call = mod.get_global_var('func_2496')
func_2497_call = mutated_mod.get_global_var('func_2497')
call_4117 = relay.TupleGetItem(func_2496_call(), 2)
call_4118 = relay.TupleGetItem(func_2497_call(), 2)
output = call_4117
output2 = call_4118
func_4119 = relay.Function([], output)
mod['func_4119'] = func_4119
mod = relay.transform.InferType()(mod)
mutated_mod['func_4119'] = func_4119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4119_call = mutated_mod.get_global_var('func_4119')
call_4120 = func_4119_call()
output = call_4120
func_4121 = relay.Function([], output)
mutated_mod['func_4121'] = func_4121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3681_call = mod.get_global_var('func_3681')
func_3682_call = mutated_mod.get_global_var('func_3682')
call_4181 = relay.TupleGetItem(func_3681_call(), 0)
call_4182 = relay.TupleGetItem(func_3682_call(), 0)
uop_4184 = relay.asinh(call_4181.astype('float64')) # shape=(4, 4, 6)
uop_4186 = relay.asinh(call_4182.astype('float64')) # shape=(4, 4, 6)
bop_4192 = relay.bitwise_xor(uop_4184.astype('int32'), relay.reshape(call_4181.astype('int32'), relay.shape_of(uop_4184))) # shape=(4, 4, 6)
bop_4195 = relay.bitwise_xor(uop_4186.astype('int32'), relay.reshape(call_4182.astype('int32'), relay.shape_of(uop_4186))) # shape=(4, 4, 6)
var_4197 = relay.var("var_4197", dtype = "int32", shape = (4, 4, 6))#candidate|4197|(4, 4, 6)|var|int32
bop_4198 = relay.not_equal(bop_4192.astype('bool'), relay.reshape(var_4197.astype('bool'), relay.shape_of(bop_4192))) # shape=(4, 4, 6)
bop_4201 = relay.not_equal(bop_4195.astype('bool'), relay.reshape(var_4197.astype('bool'), relay.shape_of(bop_4195))) # shape=(4, 4, 6)
output = relay.Tuple([bop_4198,])
output2 = relay.Tuple([bop_4201,])
func_4202 = relay.Function([var_4197,], output)
mod['func_4202'] = func_4202
mod = relay.transform.InferType()(mod)
var_4203 = relay.var("var_4203", dtype = "int32", shape = (4, 4, 6))#candidate|4203|(4, 4, 6)|var|int32
output = func_4202(var_4203)
func_4204 = relay.Function([var_4203], output)
mutated_mod['func_4204'] = func_4204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3354_call = mod.get_global_var('func_3354')
func_3355_call = mutated_mod.get_global_var('func_3355')
call_4224 = func_3354_call()
call_4225 = func_3354_call()
output = relay.Tuple([call_4224,])
output2 = relay.Tuple([call_4225,])
func_4230 = relay.Function([], output)
mod['func_4230'] = func_4230
mod = relay.transform.InferType()(mod)
mutated_mod['func_4230'] = func_4230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4230_call = mutated_mod.get_global_var('func_4230')
call_4231 = func_4230_call()
output = call_4231
func_4232 = relay.Function([], output)
mutated_mod['func_4232'] = func_4232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1250_call = mod.get_global_var('func_1250')
func_1252_call = mutated_mod.get_global_var('func_1252')
call_4233 = relay.TupleGetItem(func_1250_call(), 2)
call_4234 = relay.TupleGetItem(func_1252_call(), 2)
var_4235 = relay.var("var_4235", dtype = "float32", shape = (11, 784))#candidate|4235|(11, 784)|var|float32
bop_4236 = relay.divide(call_4233.astype('float64'), var_4235.astype('float64')) # shape=(11, 784)
bop_4239 = relay.divide(call_4234.astype('float64'), var_4235.astype('float64')) # shape=(11, 784)
func_1118_call = mod.get_global_var('func_1118')
func_1122_call = mutated_mod.get_global_var('func_1122')
const_4243 = relay.const([[-4.605006],[0.301979],[-3.755642],[3.834752],[-5.987243],[2.540639],[3.880029],[4.412759],[-1.907986],[-1.783510],[-3.346432],[-3.021399],[-6.899174],[4.387379],[-4.406369],[1.363245],[0.375787],[4.699740],[-7.535876],[-1.908229],[1.523735],[-4.645721],[2.188546],[4.644698],[9.810097],[4.109911],[-2.950177],[0.215733],[-1.455365],[-4.603322],[0.335333],[4.709794],[-8.354892],[-7.498623],[1.395108],[7.054109],[-9.292932],[-7.817717],[-7.307067],[8.256057],[2.267013],[4.877496],[2.851246],[1.302514],[4.045519],[-8.920263],[3.661094],[-6.013869],[1.673897],[5.434405],[9.844952],[2.780392],[-3.189414],[5.663634],[-1.302514],[8.519573],[-5.610954],[3.056317],[5.819245],[7.680718],[-4.780411],[7.642846],[4.164765],[0.508272],[-9.722607],[-1.876170],[-1.832360],[-2.191915],[0.892146],[2.707838],[-0.957897],[9.188340],[6.474807],[-8.479890],[4.108805],[4.362999],[-6.163602],[-3.581137],[-4.585493],[-5.329362],[-8.261498],[8.216401],[-5.489245],[8.600625],[2.359654],[7.032528],[9.708215],[-8.067490],[-9.982906],[0.652400],[-7.561304],[9.324116],[4.067025],[0.628598],[-5.291108],[7.214043],[-0.427408],[7.121990],[-8.748916],[-1.397955]], dtype = "float32")#candidate|4243|(100, 1)|const|float32
const_4244 = relay.const(False, dtype = "bool")#candidate|4244|()|const|bool
call_4242 = relay.TupleGetItem(func_1118_call(relay.reshape(const_4243.astype('float32'), [4, 5, 5]), relay.reshape(const_4244.astype('bool'), []), ), 3)
call_4245 = relay.TupleGetItem(func_1122_call(relay.reshape(const_4243.astype('float32'), [4, 5, 5]), relay.reshape(const_4244.astype('bool'), []), ), 3)
func_1540_call = mod.get_global_var('func_1540')
func_1542_call = mutated_mod.get_global_var('func_1542')
const_4248 = relay.const([-7,7,-9,-3,-2,10,10,5,-3,8,-10,-3,-8,3,6,-9,1,8,-2,-4,2,8,-8,-6,1,-5,10,8,-8,5,9,8,-2,9,-9,-6,6,3,-6,-7,2,-10,9,8,2,-1,9,-2,-8,-5,-5,8,-7,-7,1,-2,5,-5,3,-2,-9,8,2,3,3,7,-10,-9,-9,10,2,4,5,2,5,4,8,-5,4,-2,-5,2,5,10,8,5,3,7,-1,5,6,-3,3,-5,-6,-3,6,-8,-9,-9,8,8,3,9,-8,-1,8,-7,2,10,-8,10,-10,-9,7,-9,9,-6,5,-8,4,7,3,-2,7,2,-7,-3,9,8,-9,-10,-6,-3,-6,6,-2,1,-9,10,-5,3,-5,8,8,1,-7,-6,-1,-4,1,6,-2,-9,-10,-7,3,6,6,-3,4,-10,7,3,-6,-7,-8,-10,-2,1,10,-6,10,3,9,-10,10,-3,-7,-8,-3,2,8,2,-3,-1,-5,-7,10,-10,-6,2,-2,6,1,-6,7,-6,10,-6,-2,-9,5,-9,8,3,-2,1,-10,-7,10,-5,-1,-5,-8,-5,7,7,-10,6,8,1,4,5,-10,5,8,-1,3,-10,-7,3,-9,-6,7,-6,-1,6,-2,1,7,-3,8,-2,10,-1,-6,-10,5,3,-8,-8,7,-6,8,10,3,-10,9,-3,-5,3,1,8,9,-9,-2,6,2,6,-1,-5,2,-7,-7,-8,-7,6,6,3,5,2,8,5,-2,-9,-9,-7,-8,-2,5,9,-2,-9,7,4,1,-1,6,8,-9,8,9,-1,-2,-4,-6,10,-8,-8,10,-8,8,1,-7,1,-5,-6,-6,5,-3,-6,2,6,-4,6,6,6,-5,-7,7,-8,9,-9,2,-5,-3,-3,9,-6,4,9,-5,-4,-4,-3,-1,3,7,-6,-6,-6,-2,-3,-8,3,10,-2,7,-7,6,-1,-3,6,-8,8,3,-2,-5,-7,-5,-5,-2,-2,-4,9,-9,7,-7,-1,-7,-9,-7,9,-6,-4,-5,-6,7,-8,-4,-1,9,6,-4,1,10,-4,-8,6,9,5,-1,3,-6,9,7,-7,-9,-4,-4,6,4,-10,5,8,-7,8,-5,-8,-1,3,8,-6,-4,1,5,1,-9,2,8,6], dtype = "int16")#candidate|4248|(432,)|const|int16
call_4247 = relay.TupleGetItem(func_1540_call(relay.reshape(const_4248.astype('int16'), [432,])), 3)
call_4249 = relay.TupleGetItem(func_1542_call(relay.reshape(const_4248.astype('int16'), [432,])), 3)
func_4110_call = mod.get_global_var('func_4110')
func_4113_call = mutated_mod.get_global_var('func_4113')
const_4251 = relay.const([True,False,True,False,False,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False,True,False,True,False,True,True,False,True,False,False,False,True,False,True,False,False,False,True,False,True,False,False,True,True,False,False,False,False,False,True,False,False,True,False,False,False,True,False,True,True,False,True,True,True,False,True,True,True,False,False,False,False,False,False,True,False,False,True,False,False,True,True,False,False,True,False,True,False,False,False,False,True,False,True,False,False,False,True,True,False,True,False,True,True,False,False,True,False,False,False,False,True,True,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,False,True,False,False,True,True,True,True,True,True,True,True,True,True,False,False,False,False,False,False,False,False,False,True,True,True,False,False,False,False,False,False,True,False,False,False,True,False,True,False,True,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,True,True,False,True,True,False,True,False,False,False,False,True,False,True,True,True,True,True,True,False,False,True,False,False,True,False,True,True,False,False,True,True,True,True,False,False,True,False,False,True,False,False,False,False,True,True,True,False,True,False,False,True,True,True,True,False,True,True,True,False,True,False,True,False,True,False,False,False,False,False,True,False], dtype = "bool")#candidate|4251|(256,)|const|bool
call_4250 = relay.TupleGetItem(func_4110_call(relay.reshape(const_4251.astype('bool'), [1, 256])), 2)
call_4252 = relay.TupleGetItem(func_4113_call(relay.reshape(const_4251.astype('bool'), [1, 256])), 2)
output = relay.Tuple([bop_4236,call_4242,const_4243,const_4244,call_4247,const_4248,call_4250,const_4251,])
output2 = relay.Tuple([bop_4239,call_4245,const_4243,const_4244,call_4249,const_4248,call_4252,const_4251,])
func_4255 = relay.Function([var_4235,], output)
mod['func_4255'] = func_4255
mod = relay.transform.InferType()(mod)
mutated_mod['func_4255'] = func_4255
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4256 = relay.var("var_4256", dtype = "float32", shape = (11, 784))#candidate|4256|(11, 784)|var|float32
func_4255_call = mutated_mod.get_global_var('func_4255')
call_4257 = func_4255_call(var_4256)
output = call_4257
func_4258 = relay.Function([var_4256], output)
mutated_mod['func_4258'] = func_4258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1250_call = mod.get_global_var('func_1250')
func_1252_call = mutated_mod.get_global_var('func_1252')
call_4307 = relay.TupleGetItem(func_1250_call(), 0)
call_4308 = relay.TupleGetItem(func_1252_call(), 0)
func_1250_call = mod.get_global_var('func_1250')
func_1252_call = mutated_mod.get_global_var('func_1252')
call_4335 = relay.TupleGetItem(func_1250_call(), 0)
call_4336 = relay.TupleGetItem(func_1252_call(), 0)
bop_4337 = relay.left_shift(call_4335.astype('int8'), relay.reshape(call_4307.astype('int8'), relay.shape_of(call_4335))) # shape=(8, 14, 16)
bop_4340 = relay.left_shift(call_4336.astype('int8'), relay.reshape(call_4308.astype('int8'), relay.shape_of(call_4336))) # shape=(8, 14, 16)
func_2728_call = mod.get_global_var('func_2728')
func_2731_call = mutated_mod.get_global_var('func_2731')
call_4345 = func_2728_call(relay.reshape(call_4335.astype('float64'), [8, 14, 16]))
call_4346 = func_2728_call(relay.reshape(call_4335.astype('float64'), [8, 14, 16]))
output = relay.Tuple([bop_4337,call_4345,])
output2 = relay.Tuple([bop_4340,call_4346,])
func_4357 = relay.Function([], output)
mod['func_4357'] = func_4357
mod = relay.transform.InferType()(mod)
mutated_mod['func_4357'] = func_4357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4357_call = mutated_mod.get_global_var('func_4357')
call_4358 = func_4357_call()
output = call_4358
func_4359 = relay.Function([], output)
mutated_mod['func_4359'] = func_4359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1396_call = mod.get_global_var('func_1396')
func_1397_call = mutated_mod.get_global_var('func_1397')
call_4363 = relay.TupleGetItem(func_1396_call(), 1)
call_4364 = relay.TupleGetItem(func_1397_call(), 1)
func_3047_call = mod.get_global_var('func_3047')
func_3049_call = mutated_mod.get_global_var('func_3049')
call_4370 = relay.TupleGetItem(func_3047_call(), 0)
call_4371 = relay.TupleGetItem(func_3049_call(), 0)
output = relay.Tuple([call_4363,call_4370,])
output2 = relay.Tuple([call_4364,call_4371,])
func_4408 = relay.Function([], output)
mod['func_4408'] = func_4408
mod = relay.transform.InferType()(mod)
output = func_4408()
func_4409 = relay.Function([], output)
mutated_mod['func_4409'] = func_4409
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4412 = relay.const([[[-1.596096,-0.673129,-3.735368,1.832468,1.461354,1.349590,0.138600,-2.827570,1.432876,-9.154929],[-5.757145,8.659988,1.163917,8.674179,6.927161,-3.173021,-8.549686,-5.730622,-1.798223,2.626643],[-6.035602,-8.002534,-4.720895,0.200052,-7.338512,3.990051,-7.486064,-1.285666,3.360806,5.409773],[3.922292,4.786318,-0.772305,-1.293529,6.103231,3.789325,-2.334698,1.364397,-3.386551,8.545890],[-1.787530,4.266161,9.267493,-8.838374,-6.628757,1.711655,-3.832984,6.108752,3.204798,1.273623],[4.769666,-6.394777,-6.886761,3.354433,-1.138610,-3.538445,4.229611,-3.285415,1.842649,-3.264045],[-6.175880,2.415302,-9.219743,-7.743780,-7.550876,-0.147331,-2.263418,-0.450124,-9.570514,2.561523],[-6.312342,0.285096,0.698080,-2.224342,7.662402,-9.137198,3.880381,-6.524628,2.380893,0.720361],[-1.437011,9.251815,-8.184604,6.836611,2.597275,5.417634,-3.772489,-9.372949,-0.438437,2.950927],[7.845335,-5.781530,8.174015,-4.510404,1.604268,5.546635,4.124800,-0.578894,-2.295537,-7.417085],[-3.388034,7.499191,-0.650413,-8.274253,-6.141811,-4.451360,-7.417715,-7.031860,5.715250,-4.287122],[-3.409694,-3.111304,-9.621189,1.603187,9.135471,2.631211,-8.045540,-8.593417,-4.027932,1.701953],[-7.372012,-0.175908,-9.469145,6.695827,3.275979,-6.468243,0.314869,3.107085,9.487368,-3.476741],[-1.152879,-4.776736,-5.598891,2.613384,-4.088932,3.486106,2.808009,4.233287,5.978867,2.546004],[-6.086593,-3.734128,3.757162,6.538636,3.239298,8.163115,9.009986,-6.666863,-5.690846,-1.585176]],[[-0.727790,-1.851230,2.283777,-8.432218,-4.737132,7.319966,2.386283,-9.640977,2.583812,-0.745453],[4.119978,-8.448607,5.013235,-6.504698,0.778391,-9.997488,-8.983767,8.731706,-3.635400,-8.551781],[0.504347,0.791980,-3.005799,4.934387,-9.538038,-6.172678,8.193062,-8.166022,0.444612,1.548439],[-4.241554,-4.159835,-7.257210,-0.380888,9.834387,0.931273,3.089322,-8.589265,-4.290529,8.778689],[2.422075,-9.302637,3.051781,0.244127,1.036848,6.093051,6.513318,-8.535908,7.463027,-2.596389],[-1.047762,1.632867,3.942390,2.307794,-5.026350,-9.988914,-6.041920,-9.410763,9.974543,-7.318798],[-6.561877,-9.111779,6.817276,2.362348,-8.481438,-2.883912,5.771673,-3.352896,9.000751,-6.842026],[-9.202058,7.619428,7.459071,-9.587941,5.251197,4.013848,-9.051690,3.511827,9.652515,-9.008169],[3.638458,-6.297245,3.074440,0.956354,-6.657201,-3.861834,-8.045339,3.369507,9.626776,-6.559024],[-9.511631,1.941625,-9.933415,-0.686606,9.884851,1.929969,4.739682,-0.426375,-3.501113,7.884295],[4.063483,7.745083,4.526120,-1.191152,0.821032,-5.167995,-0.793407,-6.620675,-6.776733,-0.683260],[-8.966616,-0.767096,1.176603,-0.898347,-5.730259,-9.279613,7.351182,0.236016,-3.718401,6.062733],[4.557283,5.879207,9.011814,-8.796874,8.491788,-7.661878,-6.082638,5.216450,6.841719,1.500056],[-2.047724,2.227364,8.457227,-0.571152,-9.504446,8.649957,7.430318,-6.871823,4.385086,3.561953],[7.948282,-1.559883,-5.076906,-8.445702,0.432460,-3.027984,9.989338,7.077699,-7.855316,1.361002]],[[0.328868,-2.550307,9.281858,-5.134167,5.408453,5.559580,4.786404,-9.956603,-2.309432,1.279439],[-9.600260,6.368334,8.880993,3.752547,-1.738471,2.158600,7.678812,1.718770,-1.489481,6.994703],[9.205439,-5.658165,-4.809599,-9.966535,9.236873,-1.039496,5.378337,-6.338584,-9.319154,9.782542],[-0.091083,6.763993,-9.976179,-0.696360,-0.947577,2.632862,6.259720,-5.719677,-7.952652,-0.864216],[-6.711744,-3.602085,-9.510890,-1.377580,-2.137017,8.495000,-4.681445,-2.283125,9.599202,5.771606],[3.949608,8.559528,7.146042,-5.811283,7.927902,3.602044,-0.070779,7.732553,-4.340852,2.320187],[6.317350,2.586761,0.062008,7.421216,5.718364,-7.594038,0.950156,0.344399,5.582557,-6.028902],[-3.080247,-6.013908,6.499510,4.302770,-6.505952,-9.663462,5.360796,3.120166,-4.795828,-1.100642],[-7.058003,-5.147923,-7.285673,-3.411849,1.532767,-8.714189,-1.430481,-8.133477,9.178086,-0.353737],[8.954663,7.478640,-1.225658,4.731375,0.633012,-7.566286,1.782185,3.714070,-0.967494,1.926950],[7.805444,6.812953,8.707721,6.153484,7.502419,-3.798532,9.346487,-4.714786,-9.146851,-4.306279],[6.101896,7.231574,6.528862,-9.793814,-9.905992,6.733297,-1.320631,-9.690936,5.422855,-4.426851],[8.580189,8.630757,-3.567845,-4.857525,6.860218,0.441770,-7.619585,8.306583,3.550980,2.020653],[-4.588992,2.548699,-5.424889,-1.783176,-3.144553,-3.483968,4.823743,-5.095633,9.705994,-7.413946],[8.284828,7.000289,1.315453,4.567965,3.709834,-4.946586,5.005039,-2.052127,5.771228,9.064297]],[[5.006421,0.165554,4.683063,-6.505194,7.540913,-5.110447,-3.306969,-4.606765,-2.811462,4.668771],[-3.547379,3.684355,6.601243,3.658594,-0.304665,-7.820077,7.358273,-1.142336,2.455520,3.100095],[-3.872460,0.102188,-9.445509,-7.452883,2.345168,-9.280686,6.357564,-9.280781,2.627319,-5.814085],[-3.260451,7.602184,-9.454450,2.857373,-3.666731,-3.826921,-5.847881,-3.688787,2.918321,2.507597],[-5.070713,3.654067,-2.130825,-7.569310,2.883969,9.877253,-6.384673,2.482500,6.125828,-6.002103],[-3.033786,-6.665028,2.230680,1.098640,5.430094,7.960075,-5.532392,1.676793,-7.588470,-8.727368],[-3.076344,-5.393978,-5.367012,-5.974361,-6.660959,7.923226,1.469819,9.261593,-1.710496,-5.284535],[8.963393,4.405584,-5.753312,-4.975640,6.899300,-2.007153,2.824552,-6.016667,3.811251,5.759937],[3.346719,-8.190143,-7.465610,3.596213,-8.654948,-7.905276,-7.039906,1.669242,-4.351688,9.826913],[-6.928966,-3.168667,-9.619419,2.373799,6.147063,1.788593,0.238083,1.069468,8.008469,5.374369],[-2.965816,-9.836485,9.534578,9.927804,9.911222,5.909307,7.488559,3.932922,-0.992072,3.577526],[7.183920,6.879024,-1.339150,-7.252210,2.069196,3.115121,2.381473,-0.410138,7.976005,4.350681],[9.758328,-5.163916,-5.746850,-1.438964,-9.774603,-8.318370,4.468658,-0.218733,-9.947984,9.184819],[-5.576053,-7.608222,-0.935751,6.977063,-9.941717,2.551532,2.673848,-6.097199,8.432542,1.263541],[-9.805496,-0.392784,2.014042,3.213601,1.037027,5.370758,7.545623,-7.399598,4.072579,4.268616]],[[-7.472603,2.723347,-3.289846,7.582654,-9.708518,4.512818,-0.842212,-7.313803,8.715898,1.488046],[8.217403,-7.670730,-0.158944,-7.643759,-6.400291,-9.652664,-9.279159,2.307905,1.762420,3.792061],[4.849479,9.765639,-5.075265,3.154649,2.629667,-6.507054,6.865083,-1.479555,0.810591,0.692517],[-6.176827,-8.628175,4.946119,-1.394644,-6.780943,1.587064,-8.649027,7.747080,-2.653681,-3.086145],[-4.807687,-4.981106,-4.158774,2.721129,-8.899153,3.566130,-3.235386,7.564256,7.255219,3.386904],[9.436779,6.991466,8.730163,-5.895982,4.960310,3.179594,-5.926461,-3.991862,-6.672996,-0.466472],[-8.168007,-8.278290,-0.783969,8.689640,7.261508,6.458205,6.633931,-3.833199,-8.349038,-7.231143],[-1.974239,2.532169,-3.979414,8.973302,8.378644,8.948753,8.775373,1.780481,1.868592,-1.142637],[1.663366,-1.906718,-2.832901,8.191646,1.416786,5.552384,4.965377,-9.804783,-5.571518,0.842266],[-1.921570,7.942769,-1.846856,1.642235,3.179458,-2.651439,1.783603,2.366886,7.638638,-8.687993],[8.091312,-1.213000,-5.382184,-5.386265,-1.506182,2.434360,-5.935263,4.213491,8.476733,-3.578521],[-2.214281,6.452575,4.993495,3.846468,4.240782,-1.225946,9.710453,5.727239,0.278595,-4.766239],[1.496713,-1.759888,5.911149,-0.391521,-3.894316,1.733519,1.872564,9.258642,-1.859505,-2.246898],[-6.945797,-1.778030,1.021771,-3.619009,5.699890,7.193545,-0.197578,-4.474874,1.302778,-0.171198],[2.231043,-0.775507,-5.651275,-1.011043,-8.274473,-3.963015,3.923655,1.712121,-8.504668,2.641562]],[[-7.884339,7.872652,9.458571,-5.596644,-3.778316,-2.971098,9.408498,6.267105,-9.977007,-8.939922],[-6.390574,-6.777088,1.628536,-6.786573,0.088926,5.688822,-2.856336,-6.945013,-8.149656,-7.921601],[0.919565,-1.897969,9.765622,-1.121299,5.530134,5.160041,3.919166,6.912120,4.115844,-6.081851],[-0.820667,-4.263059,-4.800104,-6.102478,-5.475562,-5.780440,7.581235,-9.940232,-2.001246,2.004349],[4.187990,6.158411,-4.523504,0.411951,-0.144022,-4.341873,0.773422,-1.206400,4.929691,-6.267745],[4.256805,9.581649,4.732932,-0.055448,-9.605877,-8.176044,-6.790397,-5.291734,-9.994768,-6.291197],[4.369704,7.268248,1.179406,3.774510,-7.027205,-6.052227,-3.935356,2.820609,4.154130,9.094174],[3.057061,8.880915,4.453676,-9.659587,4.006007,-0.257523,6.942875,3.188383,1.782352,6.036796],[-3.560422,-8.952944,7.355791,7.299118,7.947794,-5.029608,-2.309780,-2.643143,4.967984,3.621623],[1.835872,2.879600,-1.095004,0.994186,1.550013,0.375579,5.827238,-7.091735,0.885863,8.453544],[-2.911779,7.040066,-7.499084,-3.247497,-4.317794,-4.525940,-2.262900,-4.937204,6.303532,-4.079273],[-0.551660,-4.346728,4.216105,-7.732033,-3.015601,5.610283,0.794861,2.702575,-3.342806,5.688631],[-7.531676,-8.010767,-0.943361,3.040785,1.024144,-6.237402,0.586790,2.538284,-3.916275,-3.303692],[8.178139,4.365411,-4.659848,-3.771236,7.676133,-0.652891,-9.922718,-7.043456,2.579069,-6.612314],[6.233135,3.896672,3.249039,-9.098272,-5.764513,5.094998,-1.749583,5.210548,9.746221,-3.732178]],[[7.894570,-4.418508,2.331938,-7.941929,-5.713248,0.349873,-9.526123,3.561802,5.329341,2.124366],[-8.075201,-6.243430,2.709875,4.761332,8.883861,3.858783,-3.874694,-3.770734,-9.584738,8.887887],[7.457328,0.234022,0.298656,-9.616463,-5.004615,-9.772350,-7.910888,7.178868,-1.247149,-9.884284],[-5.753088,4.294725,-7.916290,4.689473,-2.887660,3.065858,3.150982,8.381822,2.397402,-7.470442],[4.089886,-0.451224,5.893313,-6.146044,3.786349,0.526491,-1.756991,-7.026686,1.634900,-7.572890],[-2.989013,9.504537,-4.780431,-5.761749,-5.105812,9.472766,-9.342770,4.463588,3.562635,8.447564],[2.591187,1.849258,0.604872,-1.216086,3.701433,5.823812,-8.833858,2.804024,3.727705,4.767185],[-4.672264,-6.802872,-9.914727,-6.756828,5.534857,-0.668974,1.388031,-1.827090,-6.673648,7.581090],[4.883842,1.158404,4.399521,-5.865473,0.317379,2.452516,-1.228443,-4.760012,1.628907,1.188217],[-1.707542,9.553592,8.471075,1.859543,-5.863886,3.313938,0.716070,-1.806932,3.042375,0.617918],[-8.925279,0.193259,-3.297758,7.255832,-3.542470,-9.804045,6.250871,-5.954395,-4.433999,-5.870149],[-1.331534,-2.474001,-9.780518,8.674325,-2.939811,-8.604478,5.095684,6.256417,4.933401,2.568080],[3.941112,4.103274,-5.207232,8.113022,9.960440,4.419542,7.320752,8.157267,-1.538631,-8.365566],[4.272886,2.071612,-5.445266,5.471459,-6.479223,6.381111,-0.732087,-1.921132,5.614203,9.871375],[8.946348,-2.390126,1.742932,-1.661736,-0.814937,-9.089566,-1.075626,-0.021725,-7.816854,-5.585111]],[[9.772741,1.132862,-1.893031,-0.729377,4.099701,-0.048815,-8.114184,-2.008065,-5.968203,-9.063842],[6.380108,0.570882,-0.357925,-7.267564,8.002138,4.468467,-1.933266,-9.868425,-4.025377,-3.363086],[0.959659,-5.266323,-7.461184,5.103884,-9.890366,4.739072,-4.172747,2.585374,7.479513,7.373120],[-9.150911,0.048537,9.805685,-8.897021,-4.930099,-0.211546,5.824784,4.917848,0.499947,3.710331],[-1.883157,0.112670,6.054826,-4.038544,-6.277165,0.768085,-7.266863,9.807398,-1.610351,-5.329335],[0.374332,-8.586422,7.791656,-5.361258,-9.452485,-9.308863,-7.719546,7.501701,-9.949887,-6.341415],[-3.896055,-2.246365,-9.480949,-6.169990,9.188453,4.986691,4.402375,7.756210,-0.686744,9.090539],[5.896726,4.387036,5.101484,2.975774,-5.962043,-7.922467,4.451890,-3.129742,2.412927,6.018912],[6.209083,4.285737,-0.313052,1.323481,-8.731061,-4.470290,3.085824,6.016877,-5.242226,-9.409439],[9.607592,3.619913,3.652924,-4.966572,1.998295,9.073312,5.318637,5.145377,-6.706447,-6.072384],[-5.771922,-5.793129,-0.582026,-2.774551,2.007520,-4.845047,-7.076259,9.091537,8.950161,-3.715028],[0.940814,2.528946,-3.714034,7.702374,6.696438,6.680619,-6.486422,8.494142,4.371512,6.701930],[7.394778,4.135479,-1.124944,0.733493,7.499120,-5.197423,-6.081561,9.414122,-9.430631,9.459023],[-4.180578,6.440129,-3.267096,4.431677,9.178195,-7.380161,-6.583773,-9.061936,6.693910,-5.001569],[3.336311,2.128721,-1.711170,-9.219147,8.864908,2.521397,-0.731679,-6.737439,0.418573,-4.542370]],[[1.484828,0.846839,7.375935,-3.538991,-6.636926,5.255364,4.333353,1.221231,6.846461,-0.204065],[1.124975,-1.156338,9.086019,-3.208026,-9.146496,2.940101,-6.117353,-2.179680,-6.500295,-8.568856],[2.537803,-2.667986,-9.491174,7.271451,2.598904,6.195384,7.119031,-1.986990,-2.841618,4.864607],[4.476256,-1.103215,-3.075924,1.113611,6.851985,5.397850,3.519191,3.575382,4.550799,6.255313],[3.686356,8.368202,-6.518004,9.428674,-3.365853,-7.894451,7.079580,8.401823,3.512249,-5.711695],[-2.058888,2.383251,9.803327,-0.489310,2.246879,8.059667,-0.960159,3.483693,-5.996163,4.584848],[-4.925269,-1.311870,4.499223,5.113691,5.179370,5.024559,2.423871,2.883653,-6.885262,2.076068],[-4.052400,-2.886452,3.041612,5.928360,-4.180178,-5.659994,-8.572124,-2.949543,9.813559,-9.798143],[2.037386,-5.652762,0.694796,0.094923,5.139684,7.750135,3.803109,-0.190438,-1.340605,-9.193782],[5.047968,5.493218,9.631472,5.839585,4.188363,7.805557,4.230568,2.785245,-9.745615,-4.580741],[3.878370,1.422996,0.312985,9.494730,9.552155,-4.959187,-0.660025,4.410536,5.256905,-2.338842],[-9.953591,5.861617,-9.505286,-2.578862,2.723059,-7.093354,3.354154,1.962683,-2.659330,-9.680086],[-2.895218,-0.281888,-5.879357,8.131531,-4.776154,-4.054276,8.443053,-6.122890,-6.055194,-5.705816],[-3.482778,-5.978584,-4.029111,-6.840133,-5.463515,3.608063,-1.922865,1.435869,4.983336,-0.598182],[6.550654,-3.852382,5.541581,-1.177296,-4.783460,7.558397,6.770284,-3.765207,-4.283221,-9.899132]]], dtype = "float32")#candidate|4412|(9, 15, 10)|const|float32
var_4413 = relay.var("var_4413", dtype = "float32", shape = (9, 15, 10))#candidate|4413|(9, 15, 10)|var|float32
bop_4414 = relay.floor_divide(const_4412.astype('float32'), relay.reshape(var_4413.astype('float32'), relay.shape_of(const_4412))) # shape=(9, 15, 10)
uop_4417 = relay.log(var_4413.astype('float32')) # shape=(9, 15, 10)
output = relay.Tuple([bop_4414,uop_4417,])
output2 = relay.Tuple([bop_4414,uop_4417,])
func_4422 = relay.Function([var_4413,], output)
mod['func_4422'] = func_4422
mod = relay.transform.InferType()(mod)
var_4423 = relay.var("var_4423", dtype = "float32", shape = (9, 15, 10))#candidate|4423|(9, 15, 10)|var|float32
output = func_4422(var_4423)
func_4424 = relay.Function([var_4423], output)
mutated_mod['func_4424'] = func_4424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2414_call = mod.get_global_var('func_2414')
func_2416_call = mutated_mod.get_global_var('func_2416')
call_4436 = relay.TupleGetItem(func_2414_call(), 1)
call_4437 = relay.TupleGetItem(func_2416_call(), 1)
func_3129_call = mod.get_global_var('func_3129')
func_3133_call = mutated_mod.get_global_var('func_3133')
var_4441 = relay.var("var_4441", dtype = "float32", shape = ())#candidate|4441|()|var|float32
const_4442 = relay.const([-7.204509,6.277527,-3.974353,-5.952200,8.302549,-9.388496,0.224674,-5.290350,-6.523252,-0.095211,-7.089585,8.400508,-1.719403,3.541692,-8.654603,9.575747,1.621313,-6.036003,-1.095084,-1.130602,5.748304,2.191150,2.939692,7.469186,3.272016,1.248192,-3.955176,9.969078,0.461385,-3.928968,6.836466,-0.918253,9.205697,-3.805682,5.784332,1.265888,8.473919,4.712775,-4.253528,1.228752,1.774431,5.015016,5.923511,-9.411515,-8.792959,-8.294370,-5.129584,-8.515585,3.351528,-8.640353,4.104230,-1.640875,-8.838273,5.941884,-2.934481,8.304783,7.006328,5.995837,4.665519,1.557571,-7.226807,4.478518,-7.786546,-0.235153,-7.263767,-2.495437,-8.177469,-8.365969,4.615078,-1.192905,-4.638768,3.153375,-8.846558,0.172577,-2.128043,9.839122,-6.516802,3.238022,-5.663180,4.393142,-8.490831,-8.037912,-5.022396,-6.837728,-8.361188,5.848080,-6.658944,8.304841,1.883301,-5.708601,8.056166,-5.975444,-4.893895,8.892904,-4.828401,3.732010,-0.037337,7.099453,-7.798030,-3.782685,-1.172662,-2.396831,-9.260836,-0.152138,-3.099157,6.528624,-4.479198,0.425751,-7.636317,-4.431169,3.163152,5.062604,5.296054,-6.305447,-6.498290,1.585250,-9.496432,4.832950,3.768292,-2.473122,-8.305978,0.146480,-1.004359,9.703196,8.098652,9.263365,5.779052,6.212272,5.668238,3.651217,-7.350946,3.060714,-9.972479,-8.328084,-8.935802,0.437782,-8.452524,5.434019,2.560502,9.646282,-3.329801,-9.587490,-5.360969,6.921711,5.602087,8.310076,6.664206,8.986121,-3.029628,8.221400,-7.995328,8.946980,7.184224,3.198272,-2.107941,-9.720213,2.890197,-1.316826,-3.479793,-3.807919,-1.444289,1.648647,-7.722429,7.006522,-8.184146,5.506583,3.146886,-3.232220,6.433230,-4.654880,-3.771497,7.075759,1.471309,6.569524,4.464590,3.447597,-4.487552,1.530092,4.923616,2.876610,9.321760,2.977458,9.518491,1.685797,6.108864,-8.443693,-1.977179,-9.456314,-7.272819,9.043734,7.224467,9.622350,-4.210467,-0.487410,-9.017427,3.372000,-8.757629,-3.839207,-9.890435,-3.298510,1.139650,-7.947205,-9.366696,4.308610,-9.169830,-8.443301,-3.658805,3.957418,-8.435494,-9.744163,5.291975,-9.572093,-1.407557,-6.016713,9.032722,7.148423,1.537286,-2.609135,-4.788017,-3.301506,6.807509,-3.773785,7.389932,-9.027718,7.781230,-0.294123,-8.892179,-9.650271,7.762358,-4.558293,9.367699,-4.000837,4.321060,9.879073,-1.137454,-9.441596,-6.505702,1.810708,6.844410,-7.846315,4.475366,0.367119,5.809302,-0.482246,-3.233744,3.953938,-2.483973,3.480917,8.018165,0.983274,-2.900518,1.877865,-3.373422,-7.258729,-5.510119,-5.519520,5.361502,5.526656,4.462263,-1.573149,-1.369553,-8.812102,9.416241,-0.487587,-1.550892,-1.288569,-1.008512,9.340788,3.062801,-6.057211,-8.666937,8.867771,-8.571354,9.427279,-1.765663,-4.904284,3.741035,-4.383465,-6.637598,4.584466,-1.412337,3.892431,2.739033,-6.959606,3.854361,-4.625582,3.369127,0.648939,0.415590,-3.938309,-8.216907,-9.681979,0.741768,-4.905227,-0.628966,-2.617252,-0.980053,7.010533,-2.338445,-9.702495,-0.877101,-9.252316,-3.382879,7.673615,-1.192198,6.610897,-8.324876,-6.113785,-4.928022,7.830442,6.968717,-5.066070,-2.389643,8.779870,1.548871,-4.374774,5.960032,6.521284,-7.968667,1.421793,-6.682182,-7.686006,-3.855073,-4.004154,3.139730,9.506473,0.469813,-7.976497,2.452232,5.413514,4.885600,-3.538924,-3.400670,-4.281696,7.163209,9.199479,7.765877,-7.616675,-6.845829,-4.965384,9.006949,-2.975870,3.586435,-3.884541,5.811480,8.025502,2.426040,5.849155,-7.491300,-1.908458,9.044296,7.481463,4.092091,-2.626818,8.739666,-7.027099,0.093110,5.407709,7.136270,0.692362,5.633225,-6.444144,4.762249,-6.012713,1.303910,7.313926,-3.895725,2.822006,-2.006979,-5.795052,7.807210,-9.451204,1.343433,0.115741,2.801354,6.855392,-3.877561,9.555588,2.905080,4.899077,5.705487,0.903038,1.974196,9.965023,5.194922,7.743567,-6.820014,4.135815,-9.527422,6.545939,1.505703,-3.292428,-8.997934,1.621738,-7.643505,-0.463349,5.647162,4.769517,7.528901,2.781773,-8.138778,6.423610,-4.352087,0.331951,1.828180,9.942572,7.493426,-6.904975,4.273307,-1.740583,-1.504599,9.543163,-6.293113,0.504804,-7.797814,-7.548187,1.571771,8.163050,-3.161398,-1.784706,2.938418,3.100718,-8.702649,-4.077704,6.414466,1.683085,-9.223429,-1.881257,3.446442,-1.014378,-7.483676,4.022394,-8.440614,3.237064,0.133020,-2.280009,3.428521,5.756615,-4.267544,-5.468492,-1.893146,5.897748,-6.380580,-3.474607,1.755279,8.920868,4.532832,-4.309567,-3.651960,9.371550,1.360146,-7.941822,2.439653,-8.289517,-2.961714,5.965604,-4.559009,0.633672,-9.706021,9.727812,-5.331994,2.236969,7.892447,6.000580,-9.797663,3.250786,-6.187099,-2.990789,7.646071,9.464732,7.002822,6.359116,-5.686303,7.091364,-5.946867,-4.267816,8.601896,-9.532808,1.404223,-8.780954,-7.225090,-1.814805,-8.045921,-6.192951,4.333453,8.348380,1.969373,6.951177,8.972259,-0.439395,7.787298,-6.587772,4.423773,2.928068,-2.749892,-9.866919,1.791893,7.392342,6.423973,0.168951,-8.584941,-1.092336,5.810841,3.301843,-2.148920,-7.870917,-3.546453,-6.760030,-2.237124,1.058320,-5.544301,5.409476,-1.255685,0.142433,3.963785,-3.513966,3.344859,0.019693,-6.152225,1.917113,-7.781518,-6.467136,-1.335278,-1.075878,-8.749452,7.782561,4.040564,-1.076623,8.503345,-9.928579,6.225389,-0.573941,6.736811,9.677741,-6.624240,-9.189553,7.051497,-1.787380,6.004585,-0.750691,-0.582196,-8.232944,-5.148034,1.192759,-9.724191,-2.805341,-1.952408,-7.641811,-8.812765,-9.690770,-0.098139,-0.998007,5.572855,4.330080,4.151383,5.171412,0.057740,-7.757314,-5.452738,-3.237709,7.271255,-3.146992,8.062952,9.592826,9.348839,4.507603,-0.110881,9.450409,-1.026333,-5.307882,-9.384713,8.138254,-2.003306,6.570472,4.121238,5.172576,5.674584,-9.598565,0.920365,-0.942610,1.886454,-5.835250,2.721004,-0.886958,8.056291,-7.147903,-7.831837,2.409166,0.050942,0.248203,-2.400822,3.895733,3.600683,6.969069,2.955118,7.292742,6.112982,-8.472262,0.612477,-2.558377,8.920902,-5.665303,-6.921570,-6.394770,-2.127915,-4.542894,0.753559,-2.648688,1.135346,4.238986,-9.865496,-2.419744,-3.006342,-2.447859,9.715876,-6.469862,0.275671,-2.171034,7.492749,1.359658,-9.082537,-2.821925,3.003475,-0.043361,-4.087648,9.099383,-0.016399,-6.154806,-8.936049,-1.822825,1.905466,5.016515,4.543733,-3.922273,-4.711496,4.992925,6.758266,-0.120226,-9.597807,-7.442105,-6.429309,8.202389,1.626188,-7.461688,5.831007,0.098061,3.243482,5.840698,-3.192604,0.297855,-9.606407,5.952388,4.660360,-1.801487,2.424606,-5.709008,0.637693,-3.422699,-4.865448,-4.375689,-6.628547,-8.762359,-0.003490,-6.909050,-5.174610,-1.660744,-9.818300,-7.398188,5.506938,-3.820480,1.231985,8.389327,-7.122201,1.058607,-6.035778,-2.021330,6.575486,-5.250702,3.625951,-9.884643,1.717713,-5.809464,9.502530,5.902329,1.667243,1.342315,-8.339052,9.092294,-9.480145,7.861022,2.473563,9.716905,6.447460,-7.941640,1.177676,-5.058496,0.330580,-5.341237,3.474626,-9.632431,1.766062,-2.806718,-7.253945,8.730993,-2.361818,5.164058,-7.935902,2.375929,-6.159453,-2.716424,-5.008152,-5.850989,4.821426,-2.031076,-0.701949,-7.559202,-2.428543,-5.129535,-2.231627,-6.804647,-1.354533,-8.710694,-9.746683,-9.620224,-0.577602,-7.345644,4.783719,-7.166553,-2.070215,-3.143364,0.288766,-6.653423,8.405889,-3.741476,-4.496938,-7.722601,-7.548731,-7.616000,-0.357453,-6.816523,4.735562,-7.318372,7.610430,-5.827058,4.550792,6.781600,4.184112,6.247974,-9.099550,-1.659416,-5.298829,6.088313,-0.191373,3.643608,0.443284,6.006852,8.040907,0.734314,-7.442380,-6.663076,-3.197180,3.931906,1.101888,-9.088314,-9.463855,3.068409,-8.295036,-0.367140,-6.100260,6.756113,9.412846,-2.633555,-7.127220,2.220213,7.601177,3.408546,0.615094,8.096838,7.238305,-7.618030,8.352018,-5.989810,7.603823,-8.185210,-1.457745,1.792305,-8.404616,-3.217214,8.708313,0.285669,3.740740,2.458879,4.620436,-2.479345,-5.841773,4.620238,-0.744301,0.825706,-1.344003,4.274540,-9.411565,-8.470805,-9.284892,2.428889,-1.296341,6.804697,0.930153,7.686312,7.780381,4.343608,-9.598860,2.666703,-0.642246,-4.280428,-4.771852,-5.154887,-1.224115,5.574527,5.893062,0.147641,-1.702021,-1.584483,3.160012,-7.568788,8.141884,-7.153277,-0.712938,-2.266784,3.865565,0.744617,-2.333728,-9.955419,-4.015317,6.230664,-2.854312,-6.123446,4.871146,7.594869,-5.299424,-6.543828,5.635354,2.920578,-9.702337,7.534926,4.518115,-4.428279,-0.904318,-9.527659,-9.142700,-2.516947,-5.466318,5.110743,4.857576,-6.722528,0.637475,5.846029,-8.082214,-9.073685,-5.438153,-1.018199,5.215500,0.820556,1.424007,-8.692807,-6.856832,-8.252981,3.897311,-8.225281,-0.180430,-6.124823,3.177133,1.186853,9.338938,4.559506,0.842176,5.179874,-1.825107,-6.036308,-1.924170,2.779366,9.055369,-8.324843,-8.121620,-2.850379,6.570659,-3.780703,-3.389843,-1.820094,7.273181,-5.605569,3.101077,0.351075,-4.852922,4.020983,5.665365,1.140206,2.625734,7.271215,4.341817,-3.739817,0.798373,9.106408,-5.790093,3.583338,1.818161,-4.678644,7.646872,-6.982541,9.444414,-3.901146,8.911858,-4.664305,2.893888,-1.471008,3.746497,-4.713760,4.510266,-9.254859,7.790472,4.335580,4.098257,-7.457220,-6.353070,7.491685,-6.085071,-0.235695,4.474107,-3.611451,-4.302719,3.180057,-3.338885,-7.109946,-5.149910,2.322909,-1.252394,-0.887699,6.168325,-4.561969,-7.922546,0.479644,-8.459411,-7.797241,-8.465773,-3.316040,6.603696,-4.802264,9.575728,1.170860,-1.979034,-4.321809,9.012156,-7.694528,6.787234,-8.711840,-7.661659,-5.942472,4.705966,0.172831,-2.498960,2.788467,8.642171,5.666490,-6.193721,-3.229378,0.901108,-9.971779,-9.872924,5.616122,6.957036,8.497380,-7.410133,-5.474094,-0.321882,8.361427,-2.771552,-6.357075,0.898294,-9.324887,-2.031149,-9.797523,6.731769,-6.847773,8.057276,7.874422,-5.005955,1.041399,6.236731,-4.820899,8.542864,-1.220264,-5.964486,6.473474,-7.817183,-9.437920,6.833578,-1.340469,9.307635,-6.818657,5.319382,6.682554,-0.647067], dtype = "float32")#candidate|4442|(1001,)|const|float32
call_4440 = relay.TupleGetItem(func_3129_call(relay.reshape(var_4441.astype('float32'), []), relay.reshape(const_4442.astype('float32'), [13, 7, 11]), ), 1)
call_4443 = relay.TupleGetItem(func_3133_call(relay.reshape(var_4441.astype('float32'), []), relay.reshape(const_4442.astype('float32'), [13, 7, 11]), ), 1)
func_2209_call = mod.get_global_var('func_2209')
func_2211_call = mutated_mod.get_global_var('func_2211')
call_4452 = relay.TupleGetItem(func_2209_call(relay.reshape(call_4436.astype('float64'), [8, 14, 16])), 1)
call_4453 = relay.TupleGetItem(func_2211_call(relay.reshape(call_4436.astype('float64'), [8, 14, 16])), 1)
output = relay.Tuple([call_4436,call_4440,var_4441,const_4442,call_4452,])
output2 = relay.Tuple([call_4437,call_4443,var_4441,const_4442,call_4453,])
func_4466 = relay.Function([var_4441,], output)
mod['func_4466'] = func_4466
mod = relay.transform.InferType()(mod)
var_4467 = relay.var("var_4467", dtype = "float32", shape = ())#candidate|4467|()|var|float32
output = func_4466(var_4467)
func_4468 = relay.Function([var_4467], output)
mutated_mod['func_4468'] = func_4468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4026_call = mod.get_global_var('func_4026')
func_4027_call = mutated_mod.get_global_var('func_4027')
call_4477 = relay.TupleGetItem(func_4026_call(), 0)
call_4478 = relay.TupleGetItem(func_4027_call(), 0)
uop_4502 = relay.log10(call_4477.astype('float64')) # shape=(4, 4, 6)
uop_4504 = relay.log10(call_4478.astype('float64')) # shape=(4, 4, 6)
output = relay.Tuple([uop_4502,])
output2 = relay.Tuple([uop_4504,])
func_4509 = relay.Function([], output)
mod['func_4509'] = func_4509
mod = relay.transform.InferType()(mod)
mutated_mod['func_4509'] = func_4509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4509_call = mutated_mod.get_global_var('func_4509')
call_4510 = func_4509_call()
output = call_4510
func_4511 = relay.Function([], output)
mutated_mod['func_4511'] = func_4511
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4522 = relay.var("var_4522", dtype = "float64", shape = (4, 14))#candidate|4522|(4, 14)|var|float64
uop_4523 = relay.atanh(var_4522.astype('float64')) # shape=(4, 14)
func_1077_call = mod.get_global_var('func_1077')
func_1078_call = mutated_mod.get_global_var('func_1078')
call_4532 = relay.TupleGetItem(func_1077_call(), 0)
call_4533 = relay.TupleGetItem(func_1078_call(), 0)
func_4509_call = mod.get_global_var('func_4509')
func_4511_call = mutated_mod.get_global_var('func_4511')
call_4539 = relay.TupleGetItem(func_4509_call(), 0)
call_4540 = relay.TupleGetItem(func_4511_call(), 0)
output = relay.Tuple([uop_4523,call_4532,call_4539,])
output2 = relay.Tuple([uop_4523,call_4533,call_4540,])
func_4544 = relay.Function([var_4522,], output)
mod['func_4544'] = func_4544
mod = relay.transform.InferType()(mod)
mutated_mod['func_4544'] = func_4544
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4545 = relay.var("var_4545", dtype = "float64", shape = (4, 14))#candidate|4545|(4, 14)|var|float64
func_4544_call = mutated_mod.get_global_var('func_4544')
call_4546 = func_4544_call(var_4545)
output = call_4546
func_4547 = relay.Function([var_4545], output)
mutated_mod['func_4547'] = func_4547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4408_call = mod.get_global_var('func_4408')
func_4409_call = mutated_mod.get_global_var('func_4409')
call_4558 = relay.TupleGetItem(func_4408_call(), 1)
call_4559 = relay.TupleGetItem(func_4409_call(), 1)
func_4357_call = mod.get_global_var('func_4357')
func_4359_call = mutated_mod.get_global_var('func_4359')
call_4583 = relay.TupleGetItem(func_4357_call(), 0)
call_4584 = relay.TupleGetItem(func_4359_call(), 0)
bop_4590 = relay.logical_xor(call_4558.astype('uint64'), relay.reshape(call_4583.astype('uint64'), relay.shape_of(call_4558))) # shape=(8, 14, 16)
bop_4593 = relay.logical_xor(call_4559.astype('uint64'), relay.reshape(call_4584.astype('uint64'), relay.shape_of(call_4559))) # shape=(8, 14, 16)
output = relay.Tuple([bop_4590,])
output2 = relay.Tuple([bop_4593,])
func_4603 = relay.Function([], output)
mod['func_4603'] = func_4603
mod = relay.transform.InferType()(mod)
mutated_mod['func_4603'] = func_4603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4603_call = mutated_mod.get_global_var('func_4603')
call_4604 = func_4603_call()
output = call_4604
func_4605 = relay.Function([], output)
mutated_mod['func_4605'] = func_4605
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4630 = relay.const([[[4.035611,-7.328589,-1.543030,1.561975,-3.277255,-3.367644,7.135303,-1.886444,-9.540812,3.174219,-9.958230,-2.547407,-1.390947,-7.283748,8.622468,-3.635451],[8.395501,8.204854,5.234228,-9.330900,8.098361,-2.176717,-3.734352,7.893676,0.750329,1.400878,-8.387310,3.979436,-5.458307,6.691254,3.256374,1.984899]],[[-8.913592,9.401856,7.353283,5.996793,-0.584739,8.315875,8.696260,0.783355,-1.523170,-7.832445,4.497412,1.256392,8.035585,4.959339,-7.541194,-4.661779],[9.285763,-1.500804,5.930505,-5.503523,-2.634674,-1.270214,-7.621467,-4.261903,-7.463816,4.107385,-4.133424,-5.506928,4.709089,7.201062,-3.532136,8.528972]],[[1.354062,-0.541383,4.082841,-5.896580,0.268781,8.426198,-6.322205,-4.942738,4.178505,-7.145079,-3.129739,8.277332,-0.350545,-6.421619,-8.130295,1.981370],[8.577395,-1.594610,-7.422133,-7.932397,-2.932283,6.499000,-5.267902,5.981789,6.607857,2.006658,-4.670031,0.885892,5.888447,4.039603,3.992728,9.844543]],[[3.633704,-9.995122,-5.290523,0.683129,-0.611149,-7.841743,-4.144534,-9.309287,9.064160,1.223556,9.694262,6.724448,-5.575308,-2.690972,0.820694,1.348316],[-7.268104,-6.074106,-3.253217,4.156359,-2.311241,4.205140,9.601850,-7.988256,-5.723013,9.911482,-0.732149,-1.513066,3.552565,4.640089,7.677820,2.301873]],[[-4.284097,-6.042087,3.920179,2.798054,4.771216,-4.998948,3.075402,-5.941910,7.506125,4.489641,-4.799675,-4.266001,-6.972435,-4.733149,-9.961584,4.019157],[0.790425,-2.101601,2.141002,-2.372989,-8.419329,-0.657660,2.062750,0.022072,-8.293183,-7.922749,4.810675,-4.612804,-5.943049,5.756004,4.930074,4.316869]],[[-8.820176,4.736317,-5.946123,1.552475,8.239268,-2.830457,-3.939845,5.590389,-1.376316,5.228391,-7.606850,5.243884,-2.332886,-4.946438,-7.597240,-7.501757],[5.593399,-3.275053,2.824361,-7.185818,9.673890,8.836447,1.962712,-0.626838,-0.966241,5.813426,-6.735733,-4.957954,1.596543,-5.816405,-6.243379,-8.235150]],[[-2.078845,3.352285,-2.383275,-5.049397,-8.850160,3.035362,-9.543381,5.229498,8.071123,-3.377361,-2.259750,-9.725581,7.638954,7.771010,2.561974,8.943033],[-4.193969,3.998972,-9.288413,2.173722,1.848140,-7.697096,-6.296114,2.473248,-7.243396,3.876772,-1.091132,-4.496657,-8.913114,7.766616,-9.516970,-0.234042]],[[-8.578258,7.598587,7.918134,9.428412,-1.323068,4.560191,-5.028921,-3.407597,-3.644249,4.686870,-4.466756,-3.922340,7.536572,-6.824483,-1.741779,-2.508122],[7.972921,9.690901,-4.698719,7.348477,5.076234,-4.926904,7.472704,-0.578727,-6.390454,-2.963773,-4.094481,-4.989636,5.901562,4.804327,4.168368,-3.164591]]], dtype = "float64")#candidate|4630|(8, 2, 16)|const|float64
uop_4631 = relay.asin(const_4630.astype('float64')) # shape=(8, 2, 16)
uop_4635 = relay.sin(uop_4631.astype('float64')) # shape=(8, 2, 16)
uop_4640 = relay.cos(uop_4635.astype('float32')) # shape=(8, 2, 16)
func_3047_call = mod.get_global_var('func_3047')
func_3049_call = mutated_mod.get_global_var('func_3049')
call_4655 = relay.TupleGetItem(func_3047_call(), 0)
call_4656 = relay.TupleGetItem(func_3049_call(), 0)
func_1737_call = mod.get_global_var('func_1737')
func_1741_call = mutated_mod.get_global_var('func_1741')
const_4658 = relay.const([6.966387,-2.195085,-9.188276,8.745476,6.282050,-0.913700,-7.081448,-3.492351,7.088406,-3.577633,-7.212461,1.384693,6.920317,4.291211,-1.199141,9.379238,-7.994235,8.055338,5.545929,-5.367434,-2.774150,0.800455,-7.851800,2.589299,0.541771,-9.596110,-3.942714,9.866670,-5.710411,8.443615,-3.086841,-3.090934,-3.273234,4.138042,-0.433939,-5.361762,-3.496227,7.116783,7.762917,-1.863237,8.275427,-8.861501,5.702839,2.562711,-5.964276,-9.129798,8.177955,-0.497261,-6.136564,5.564738,3.277709,1.882757,6.285411,-8.002408,6.758053,-5.866994,-1.145539,-1.519384,-5.952705,0.505420,-6.211854,4.908626,0.419826,3.556973,7.328058,-2.944491,3.639542,-1.755387,1.818347,9.178732,-6.213760,7.630301,2.289943,-2.811862,6.358751,-2.127927,7.293691,-3.209380,6.839072,-7.089053,-1.976061,-4.944584,-1.656013,9.151849,1.886806,-8.966055,-9.849815,-3.814815,4.115714,5.404487,8.555342,6.294819,7.836286,1.817357,1.059429,5.275266,-8.674780,9.697937,-1.982157,-4.287157,-2.545633,8.405125,-4.793898,-9.912846,-7.161470,4.317215,6.517787,-5.338659,-1.519218,-2.568157,9.990932,6.984396,0.314383,-2.714120,1.470063,3.809070,3.757915,-3.023401,8.952620,-5.385017,-8.251323,3.252368,-7.881265,-9.995699,0.022063,-1.508669,-3.892048,-5.586434,6.372626,-2.137526,-9.350555,-6.557222,-0.167548,2.866394,0.991771,-1.234932,2.510675,0.160651,8.673441,-5.396127,-4.129616,-7.064388,7.326475,-2.844231,4.043850,3.981644,9.686681,-5.075979,8.306901,7.187932,5.925306,-3.992365,6.651509,-0.102424,-6.479537,7.424996,4.068013,6.886982,-6.774502,5.040092,-7.201051,0.054264,-5.290859,-0.321358,-5.920469,-9.318711,8.846529,-4.112443,0.191194,8.071106,-8.588741,-9.621031,-7.373509,-8.589619,-7.788997,4.801648,-1.419342,-9.017775,-1.127819,-2.372357,-3.654560,-0.127352,-6.129123,-1.740190,2.614233,9.754928,-5.149057,3.454456,3.967182,2.990136,-6.977341,9.452370,-4.862085,5.472612,-1.703718,4.654320,7.085742,-6.584058,-0.363748,0.519994,-0.822286,7.062739,-4.400179,-9.258757,-1.736196,1.226753,-4.802303,-4.770451,-8.341784,2.415284,7.805492,4.417488,-3.536677,-8.966035,-0.638143,-2.751546,-7.249229,3.774892,-1.629388,8.283453,-8.960915,6.161318,8.778567,0.053435,-8.193542,-4.180646,3.838487,-3.020262,1.204857,-2.805380,-1.645760,-8.364809,5.313895,8.334567,8.127790,-4.248431,-5.291116,-9.451414,8.206215,8.252309,-8.485924,-5.703416,-0.817517,2.864247,2.973612,9.707832,-3.480222,2.372766,-1.176382,-5.317542,1.765502,7.196441,-2.817965,5.504958,1.818475,1.336429,-0.733586,4.457356,-7.493442,-7.767406,-6.076772,4.323446,2.396825,-8.165922,-9.734691,-7.303906,-4.599892,3.905529,3.393763,-9.542947,4.930242,3.696708,1.294121,-4.307413,9.668304,-3.871406,9.813458,1.574403,-1.810715,-3.678329,-4.550561,-3.851300,-3.380427,7.934609,-6.514185,-6.660341,-9.639914,1.761993,-0.737086,0.981563,-3.564596,4.669336,-1.961293,-3.058207,7.146173,3.752697,5.312848,-1.452851,3.279800,-2.193279,5.081752,0.123699,-4.416210,-2.073745,2.659269,-7.312308,0.050802,5.221413,-0.065284,-6.891485,-4.251539,8.730860,0.441444,2.702128,-4.491325,-4.695197,-8.491605,4.265249,-7.306554,2.911431,6.244908,9.630049,2.074007,-7.546928,-0.027865,1.290747,-0.457606,6.658029,-7.867893,-2.934842,-0.214230,8.664664,4.403257,6.309113,-8.204276,2.558652,-9.747755,-9.665271,4.509378,-4.633535,2.301995,-5.444830,-5.116346,6.510465,-8.456501,2.120818,-4.294197,3.725912,0.365367,3.470224,5.364232,-1.678185,0.936431,5.781407,2.241768,-9.005476,-6.782674,3.903326,-5.300154,6.414892,-8.382437,6.438291,3.755808,-0.234462,6.541964,-2.483898,-7.729597,2.562062,5.415093,-7.056043,-3.510783,8.199262,8.721734,4.858127,9.924004,-7.413951,-7.797272,-4.539030,-7.217404,-5.064404,-0.506662,-7.164410,7.773997,-2.241621,3.781742,-4.363908,-7.689112,-4.333850,-2.086328,1.995918,-8.041948,5.797938,-2.530745,1.895573,1.863744,-0.611337,-0.323890,-4.582870,-1.598105,5.096475,-9.997882,0.740616,3.454698,-0.716241,-7.673062,-5.082302,-6.515743,7.055876,2.358603,9.380195,-6.753245,6.848370,4.281033,8.398507,-1.708990,8.387009,-2.818753,4.359804,-9.954523,5.370121,-4.752908,0.731001,6.949761,9.851591,2.232068,6.062325,-3.082114,7.600441,4.274744,-5.768584,1.651212,-1.607640,-0.189705,7.645389,2.634283,5.784607,-1.365250,-1.065628,0.623302,1.765712,2.153595,2.511454,4.875485,7.689048,6.419408,-3.388456,5.301159,-8.283750,2.139669,-0.130680,-8.246663,-8.972326,-0.939034,-9.271909,-7.921752,3.878623,0.381195,9.618596,3.331359,7.332777,-8.309391,3.794710,-5.091311,-3.510437,9.262872,-0.422849,-5.290024,7.289386,-1.572111,5.029245,9.011519,-4.673292,2.245493,6.750733,-9.245303,4.078818,-5.557735,-6.371465,-9.441030,-4.007691,8.393582,6.619213,5.720061,-8.309636,-6.688898,-3.543531,-7.555210,-3.918124,8.972432,-6.775359,-2.172915,-0.810644,-6.806583,5.701030,6.377820,8.501735,7.046320,3.441517,8.189518,-4.048101,7.483378,0.668324,4.257157,7.420415,1.898943,-3.034924,5.660443,-3.689976,2.231711,-1.058542,-4.985104,5.261669,-7.168205,-4.050157,-0.733563,2.826440,-1.340965,-4.991287,5.574908,-4.725671,6.621937,-5.338339,8.397013,1.809856,0.077273,-2.673134,7.891544,4.938339,-9.654966,9.923149,-5.487470,-5.147637,8.494044,-8.161406,-1.738674,9.398593,1.493685,-9.669683,-3.784194,9.443418,4.532171,1.579904,1.896065,-5.786864,7.403608,-3.287754,-4.563821,-7.335508,7.104800,-3.983270,9.875755,-0.200962,-7.294420,1.524145,-5.945861,-3.117839,-3.497511,-1.851536,-6.457033,9.533154,-2.404860,1.073354,-6.351654,-2.988801,-7.184741,5.079651,-1.530243,-4.043397,-1.884761,0.776926,-5.646675,-5.489648,-4.437110,-9.894109,2.096674,-3.370181,2.230711,0.808283,6.976692,-0.066715,-8.483321,4.605513,8.056417,0.253846,1.464502,-4.784048,-5.682897,6.839545,9.164467,9.977557,2.103252,-6.297277,0.072315,1.811843,9.264302,-8.465863,0.273470,-8.345951,5.672063,7.343152,-2.699537,-3.502360,-1.027953,8.474784,4.399470,1.825052,-8.352123,-5.534748,8.958830,-4.909381,8.063283,-3.169524,-0.516897,3.739609,9.991265,6.435855,-9.303019,-8.348562,9.185652,-1.211241,5.286787,4.727816,2.720440,2.717256,4.455950,7.954602,7.570047,-5.693557,-8.939361,6.188305,-9.386571,5.101957,1.297277,1.343032,-2.454917,0.974314,9.935585,4.425791,-0.332996,2.141747,1.292123,-1.855878,5.636847,-4.043838,-8.686011,2.119334,-6.441733,6.285122,-0.764328,-1.325514,-8.949290,-7.940938,5.269438,-5.483346,5.371291,8.988567,-7.477691,1.049226,-6.832843,9.542369,1.158814,6.408841,-2.234998,9.127252,-1.026027,4.209456,-6.857834,-0.766415,9.327016,8.911715,5.187134,0.062815,8.514828,9.074191,3.541934,-8.145245,9.266885,-1.888506,8.187058,-3.675196,-4.650930,-7.750156,-0.821188,-5.492583,-0.900608,-7.157237,-7.816170,2.663983,-1.802892,-4.906174,-3.451605,-7.778942,-1.412121,3.439941,5.201604,4.067044,0.700961,-7.455430,4.194321,6.858101,-4.857635,8.100761,-7.983541,-0.089629,8.956629,-2.311461,-4.843288,9.755475,5.693289,-1.410576,-4.263333,-5.663558,2.989286,6.429139,8.805140,-8.806991,-5.431477,4.164482,3.176855,4.451364,-7.738797,-5.715968,8.654268,0.879417,-9.474409,9.389723,-0.602888,-3.695844,-6.105536,-3.978427,-4.365169,6.921181,-6.157558,5.762789,2.892748,-3.674517,-6.286064,-6.614788,-9.094197,6.583493,9.914542,6.639177,-8.499065,2.722171,-3.400602,8.548726,8.013474,9.740219,9.320406,0.975521,-8.778406,-0.235338,-9.972487,-0.458568,-4.308763,7.221254,-6.383966,9.510440,-2.004529,7.606037,-6.649731,8.579245,7.654249,9.943579,-0.900768,0.632566,-7.955245,8.653425,-0.023120,2.176653,4.336547,-5.668950,-2.193504,8.166889,3.882098,5.103436,5.128212,2.456839,7.146287,4.391352,2.901306,-9.991870,-2.418441,-6.508114], dtype = "float64")#candidate|4658|(784,)|const|float64
const_4659 = relay.const(False, dtype = "bool")#candidate|4659|()|const|bool
call_4657 = relay.TupleGetItem(func_1737_call(relay.reshape(const_4658.astype('float64'), [784,]), relay.reshape(const_4659.astype('bool'), []), relay.reshape(uop_4640.astype('bool'), [2, 128]), ), 8)
call_4660 = relay.TupleGetItem(func_1741_call(relay.reshape(const_4658.astype('float64'), [784,]), relay.reshape(const_4659.astype('bool'), []), relay.reshape(uop_4640.astype('bool'), [2, 128]), ), 8)
bop_4661 = relay.logical_and(uop_4640.astype('bool'), relay.reshape(const_4630.astype('bool'), relay.shape_of(uop_4640))) # shape=(8, 2, 16)
output = relay.Tuple([call_4655,call_4657,const_4658,const_4659,bop_4661,])
output2 = relay.Tuple([call_4656,call_4660,const_4658,const_4659,bop_4661,])
func_4672 = relay.Function([], output)
mod['func_4672'] = func_4672
mod = relay.transform.InferType()(mod)
output = func_4672()
func_4673 = relay.Function([], output)
mutated_mod['func_4673'] = func_4673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2680_call = mod.get_global_var('func_2680')
func_2681_call = mutated_mod.get_global_var('func_2681')
call_4696 = relay.TupleGetItem(func_2680_call(), 0)
call_4697 = relay.TupleGetItem(func_2681_call(), 0)
func_4544_call = mod.get_global_var('func_4544')
func_4547_call = mutated_mod.get_global_var('func_4547')
var_4738 = relay.var("var_4738", dtype = "float64", shape = (56,))#candidate|4738|(56,)|var|float64
call_4737 = relay.TupleGetItem(func_4544_call(relay.reshape(var_4738.astype('float64'), [4, 14])), 0)
call_4739 = relay.TupleGetItem(func_4547_call(relay.reshape(var_4738.astype('float64'), [4, 14])), 0)
output = relay.Tuple([call_4696,call_4737,var_4738,])
output2 = relay.Tuple([call_4697,call_4739,var_4738,])
func_4760 = relay.Function([var_4738,], output)
mod['func_4760'] = func_4760
mod = relay.transform.InferType()(mod)
mutated_mod['func_4760'] = func_4760
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4761 = relay.var("var_4761", dtype = "float64", shape = (56,))#candidate|4761|(56,)|var|float64
func_4760_call = mutated_mod.get_global_var('func_4760')
call_4762 = func_4760_call(var_4761)
output = call_4762
func_4763 = relay.Function([var_4761], output)
mutated_mod['func_4763'] = func_4763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1951_call = mod.get_global_var('func_1951')
func_1952_call = mutated_mod.get_global_var('func_1952')
call_4845 = relay.TupleGetItem(func_1951_call(), 0)
call_4846 = relay.TupleGetItem(func_1952_call(), 0)
func_1951_call = mod.get_global_var('func_1951')
func_1952_call = mutated_mod.get_global_var('func_1952')
call_4847 = relay.TupleGetItem(func_1951_call(), 0)
call_4848 = relay.TupleGetItem(func_1952_call(), 0)
output = relay.Tuple([call_4845,call_4847,])
output2 = relay.Tuple([call_4846,call_4848,])
func_4849 = relay.Function([], output)
mod['func_4849'] = func_4849
mod = relay.transform.InferType()(mod)
mutated_mod['func_4849'] = func_4849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4849_call = mutated_mod.get_global_var('func_4849')
call_4850 = func_4849_call()
output = call_4850
func_4851 = relay.Function([], output)
mutated_mod['func_4851'] = func_4851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1578_call = mod.get_global_var('func_1578')
func_1579_call = mutated_mod.get_global_var('func_1579')
call_4881 = relay.TupleGetItem(func_1578_call(), 0)
call_4882 = relay.TupleGetItem(func_1579_call(), 0)
func_1589_call = mod.get_global_var('func_1589')
func_1592_call = mutated_mod.get_global_var('func_1592')
const_4886 = relay.const(5, dtype = "int8")#candidate|4886|()|const|int8
var_4887 = relay.var("var_4887", dtype = "int8", shape = (20, 1))#candidate|4887|(20, 1)|var|int8
call_4885 = func_1589_call(relay.reshape(const_4886.astype('int8'), []), relay.reshape(var_4887.astype('int8'), [5, 1, 4]), )
call_4888 = func_1589_call(relay.reshape(const_4886.astype('int8'), []), relay.reshape(var_4887.astype('int8'), [5, 1, 4]), )
func_2125_call = mod.get_global_var('func_2125')
func_2128_call = mutated_mod.get_global_var('func_2128')
const_4892 = relay.const([3.222608,-5.952868,0.810814,9.571126,-1.697452,-1.872100,-3.463370,9.386364,-7.071137,-0.172204,9.036896,4.419111,6.025224,-5.363807,-9.540233,7.230526,-7.207376,-8.773546,9.546202,-8.694714,3.141647,3.452612,-9.568357,-5.299697,5.164121,9.124977,-1.717487,2.776488,5.168564,-7.216469,0.596625,5.565471,7.622331,3.309599,-5.991099,-5.033181,-2.493749,9.319205,-9.041303,-9.437249,8.413345,-9.184253,-9.515825,8.807892,-1.618127,4.681985,6.785877,0.367890,-4.665943,-9.556593,-6.445495,-3.616945,-5.907191,8.751929,-4.195807,6.911996,-3.531092,2.160438,6.095463,-8.416676,-1.030548,6.997402,7.511249,-0.336396,-5.362763,-8.520360,-3.960075,2.094999,-1.290037,0.640548,-4.189876,-7.647547,5.622208,0.063822,2.018113,-0.132068,-2.053908,5.426651,-6.468751,6.665923,-1.423387,-5.014357,5.115697,-5.585122,-0.021589,-9.990341,-5.792018,7.274727,-8.986336,-6.555849,9.833856,7.807323,5.768367,5.508298,-3.197630,-4.130887,-0.806651,8.052347,-9.343550,3.285338,-7.351878,-0.073299,7.314153,-2.114848,-5.060138,6.217454,4.246705,5.967791,9.416848,-0.802299,-2.134313,2.484575,0.042295,-0.132301,-5.748884,6.955055,5.358202,7.284082,9.386357,-6.922345,-8.310524,7.660807,-3.284354,-0.244757,9.652235,1.046785,3.222891,-9.801783,-3.062591,1.244079,3.067562,4.535756,-1.105482,4.291049,-1.298473,3.160796,2.675605,-5.150742,-6.347965,3.841392,8.660430,5.839836,7.443332,-5.145883,-1.848824,-2.393435,-4.679570,-7.351289,-4.502924,-3.774075,9.567533,-8.789683,8.068485,-5.623094,7.839993,9.177329,-3.149731,-7.327300,2.596328,8.059762,-2.922246,7.354263,8.392568,0.072739,2.757053,-7.446783,0.386845,8.907507,1.170700,-1.392517,1.019234,-3.364149,-9.754128,-0.486905,4.159732,9.770248,8.471072,-7.309548,-5.481658,4.471835,2.111049,-9.495487,-0.243947,1.927694,0.102202,-2.064357,-7.694166,6.426126,9.217871,-7.508488,4.778627,-0.781039,-5.708614,-1.407601,-2.812046,-2.893974,8.609678,7.594224,-1.894463,-6.672994,-1.618001,-7.580467,0.776329,-5.221000,7.523587,2.098187,-4.088735,-6.615154,-2.389363,-0.513123,-0.523574,-6.739830,1.875381,2.993218,0.224033,-9.352091,-6.860777,-8.268904,-5.837768,5.385300,5.525176,-0.532934,-8.686708,-3.445822,5.861032,-6.325777,9.195429,-6.817173,-5.967824,-0.606040,8.958839,8.730238,9.222239,4.549514,-5.049295,-5.732499,6.631235,-4.393544,1.485917,-1.968586,5.288932,-8.240666,0.160125,3.248302,-8.894300,5.417146,-7.808279,4.301446,-5.910184,8.571411,2.821456,-2.700560,9.261844,4.435444,9.484115,0.295706,-0.781932,4.576084,-4.071365,6.836839,-4.321881,-6.464401,4.743324,5.205727,-3.076291,1.140815,-3.720918,-3.558613,-5.574918,-1.872310,9.456138,-4.627361,0.596960,-5.536121,-9.733346,-0.330377,-6.744597,-6.184471,-8.691050,-4.301828,-1.261528,9.438705,6.024975,-7.279154,7.889631,-7.427300,7.207270,-3.927283,-6.460218,-0.415831,-5.787840,-5.152030,-3.104679,-5.610533,-4.059048,9.489418,-3.014185,8.601101,0.695282,1.208133,-4.086478,4.568196,-6.699247,-7.360089,-9.552630,-1.436680,7.487298,-5.809318,1.213624,-9.572644,3.183762,-9.703644,-1.568003,5.415953,-4.817188,-0.121760,-9.520987,-4.237969,4.841787,-3.796518,7.520631,-8.846558,6.165110,-6.390918,-9.537246,-2.561338,3.039218,0.514204,-7.018916,1.265223,-9.053035,2.854668,9.856386,8.394690,-2.072009,7.609775,-0.639491,-1.667399,-9.579403,-1.939735,8.322075,-1.195181,-2.407953,4.338940,-0.392412,7.778763,-1.697950,-0.733559,-6.339385,2.297376,9.070633,-1.951327,-9.626958,9.142596,-9.403975,8.356334,-8.713143,-4.224713,-7.561601,7.493723,-9.721818,9.380694,8.918697,-7.199483,9.192345,-5.251084,-8.989556,3.287606,2.857759,2.885254,-4.549384,0.223138,-2.562058,8.251923,0.998869,-2.239196,1.913604,7.765773,2.581097,-1.544636,7.630057,9.124008,-0.169992,-0.638504,7.214742,6.298307,5.859559,-7.676612,-7.380003,-8.343408,-5.787911,8.648993,-2.510101,-0.516742,-0.689309,-0.465380,9.792359,-0.684238,-4.181515,2.929221,-2.390655,-9.263638,8.009749,-4.214111,-3.028480,-9.997171,0.426369,8.550879,-2.204282,6.184241,-8.951667,-5.969817,4.140700,9.933407,1.096655,5.780186,2.091691,6.976399,-8.047037,-7.155159,-3.965340,6.964950,-6.610651,0.378313,-6.959693,-8.700991,6.610498,-6.679575,5.942767,-8.756946,-9.543134,-8.959650,4.927652,-3.124127,2.006430,4.173974,9.998865,2.374780,6.459264,-8.646007,0.430234,-7.427892,6.883582,9.240237,8.677779,-9.388700,0.209630,8.509945,-3.889929,-0.086323,3.618007,-1.037413,-3.159704,-8.778103,-5.552605,4.169442,9.966887,-3.518965,-3.215875,5.249423,-1.693342,8.977575,3.805301,-6.935560,1.368762,5.782354,-5.664952,5.047921,-2.307807,-5.051101,4.535392,-4.002796,-3.064703,7.980606,0.694361,-2.824590,-3.424543,3.839637,-2.129582,-3.341695,7.994073,-7.769088,3.559508,-4.722345,-5.082100,-0.148031,0.760673,-7.604145,-8.023340,-7.151475,6.915658,4.681940,7.089470,0.976299,-1.877997,0.431019,4.327970,-7.939557,7.598726,-4.086449,8.187505,9.265565,-4.681641,-7.235211,-7.064785,-4.844014,3.942089,4.555508,-3.607412,1.344707,-7.218483,-5.513238,-8.429638,-4.626096,-0.904469,8.077343,-4.558810,-7.306836,5.938977,3.934898,9.060370,0.441545,1.434302,2.929317,5.041196,-5.078713,9.600992,6.824138,9.149645,-9.786312,8.233726,-1.268706,-0.384818,-2.808964,6.428193,2.607198,0.975694,-1.245702,-7.804839,-4.413723,-6.308615,6.081315,-4.358956,4.077164,9.619721,7.178227,-3.276565,-3.838474,-3.170110,-3.618950,-5.770091,-4.548598,-9.338019,-6.017976,1.193562,-7.523226,9.151696,0.077387,-1.864864,-4.214899,-6.528710,-1.658267,0.474015,-4.644265,1.242270,6.215894,-1.965935,2.144968,-3.747239,6.809387,9.060914,1.181554,-5.697734,-2.401236,-2.275721,-7.901884,-2.160004,2.085775,6.936611,9.643581,-0.669638,-4.575858,-4.150781,2.575486,6.484527,-3.784563,-9.307881,5.511739,9.275354,6.974101,-4.714695,-0.229621,0.485821,-6.543929,3.010695,8.037698,0.180612,7.791927,-8.239249,-1.700643,0.318690,-4.560574,8.822924,-5.140823,2.946812,-5.908008,6.916048,-4.735878,-6.625184,5.085097,-6.257841,8.141684,-7.703114,0.469597,1.457019,-7.028927,7.149726,-3.844399,8.929762,3.291678,-6.356889,-1.372526,-8.818588,-4.205581,-9.679679,0.107142,3.719170,-8.656465,6.166228,-8.104787,0.507070,6.038059,7.901641,3.733690,7.436325,4.007402,-7.208407,2.094750,-6.970397,8.603304,-1.774966,5.084107,5.474952,4.484063,7.602192,7.818137,2.265429,4.906018,-6.687018,6.488039,3.498901,-5.961824,-0.960107,1.618273,7.391135,4.449910,9.264464,1.594927,-5.236025,1.820186,-9.446329,3.790728,4.931210,-5.743065,3.054943,8.748655,-5.386558,1.305739,-0.962825,7.310898,9.966569,8.179121,7.013328,-4.854551,4.840877,-9.746469,-3.713666,5.769605,-8.934719,-9.304509,6.127612,2.933208,1.027820,3.886971,4.984924,3.006780,5.800373,1.279240,-2.828956,1.697683,6.059398,5.910572,8.370084,8.236794,4.959297,4.894976,-2.015060,-3.934990,9.189921,9.180482,9.712050,-5.572738,9.068117,7.855474,4.908971,2.228127,-4.146666,-8.176364,-6.018422,-9.173146,5.531346,-0.928511,-9.439179,2.686197,-7.314750,-6.589081,-7.431406,5.219777,-4.047439,2.452007,0.221078,-0.995824,7.798977,4.800933,-7.878911,0.308232,8.779629,0.134726,0.304961,-7.977671,7.163196,1.682028,0.521673,0.292427,6.508357,2.455312,-3.774545,5.934433,-3.616385,3.788642,-2.914576,8.314346,-8.286505,6.865665,5.517256,-3.122232,-7.568449,-4.916025,-0.381925,9.676054,-7.474707,-1.945463,-1.858663,1.156596,-4.320846,1.821229,2.160292,-4.544320,-7.976561,1.026762,4.316115,-4.714440,2.213029,6.789705,3.947089,-2.031029,3.026071,-8.080398,-5.427618,4.319309,-1.986887,4.387408,5.046167,0.168295,2.121338,4.039767,-9.380451,-6.605987,4.708631,4.667893,-6.521734,-1.225994,-0.241027,0.507910,-6.163327,6.739641,8.384164,9.787268,6.147594,-2.035590,7.280056,8.457544,-1.923491,-8.474301,-6.594440,-5.205391,0.099600,-8.380786,3.009494,-3.064615,-0.699970,-0.386123,-7.003846,-1.470880,-5.448779,-7.434761,2.940695,-6.491113,1.260297,4.961919,-4.297522,-5.182539,-7.004870,-5.213312,-3.150321,-7.755274,-3.154634,-1.058808,-2.622278,-6.347760,-7.427724,-6.631178,8.127369,5.952132,2.636757,-4.002993,-4.753714,7.968336,3.236900,-1.621491,-1.560004,0.058450,8.194142,5.940337,-4.459524,-4.755609,-8.608277,-1.237389,9.357761,-2.765635,-7.180386,5.154006,5.015303,-8.071290,-8.823527,-1.417617,1.828910,6.933985,-8.724464,-0.740803,0.566834,5.161166,6.370049,9.537320,0.172707,-4.184989,-6.209261,-2.061209,-0.917041,-4.389767,1.584378,-0.925210,-0.370489,6.183740,-0.873915,-3.302106,-8.575227,-6.033753,3.610185,2.379899,1.542097,3.567959,1.149090,-6.614787,-4.816833,-1.638329,8.442856,-4.334179,-4.550463,-6.933160,2.189816,-9.803144,-2.252638,0.205376,-2.091239,-4.058671,-0.919458,7.759541,5.727786,-0.684491,8.818411,4.881496,2.432640,-1.812583,0.981677,-5.355785,8.768128,6.714842,0.972287,-0.296141], dtype = "float32")#candidate|4892|(900,)|const|float32
call_4891 = relay.TupleGetItem(func_2125_call(relay.reshape(const_4892.astype('float32'), [12, 5, 15]), relay.reshape(const_4892.astype('float64'), [12, 5, 15]), ), 0)
call_4893 = relay.TupleGetItem(func_2128_call(relay.reshape(const_4892.astype('float32'), [12, 5, 15]), relay.reshape(const_4892.astype('float64'), [12, 5, 15]), ), 0)
bop_4898 = relay.minimum(call_4881.astype('int8'), const_4886.astype('int8')) # shape=(14, 7, 8)
bop_4901 = relay.minimum(call_4882.astype('int8'), const_4886.astype('int8')) # shape=(14, 7, 8)
func_3912_call = mod.get_global_var('func_3912')
func_3914_call = mutated_mod.get_global_var('func_3914')
call_4904 = relay.TupleGetItem(func_3912_call(), 0)
call_4905 = relay.TupleGetItem(func_3914_call(), 0)
output = relay.Tuple([call_4885,var_4887,call_4891,const_4892,bop_4898,call_4904,])
output2 = relay.Tuple([call_4888,var_4887,call_4893,const_4892,bop_4901,call_4905,])
func_4915 = relay.Function([var_4887,], output)
mod['func_4915'] = func_4915
mod = relay.transform.InferType()(mod)
var_4916 = relay.var("var_4916", dtype = "int8", shape = (20, 1))#candidate|4916|(20, 1)|var|int8
output = func_4915(var_4916)
func_4917 = relay.Function([var_4916], output)
mutated_mod['func_4917'] = func_4917
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4919 = relay.var("var_4919", dtype = "uint16", shape = ())#candidate|4919|()|var|uint16
const_4920 = relay.const([[[2,-2,-3,-10,7,-1],[-6,10,-10,-10,2,6],[-9,10,4,9,-4,-9],[-5,-1,3,-7,4,6],[6,5,-4,-9,-7,-5],[7,-9,5,9,6,-2]],[[1,-6,7,-10,-8,1],[7,-4,-1,7,3,10],[-3,7,6,-10,9,3],[-10,8,-10,-9,-3,5],[-2,-3,-8,4,-9,-5],[-10,-5,3,-4,-2,2]],[[-3,1,5,-9,8,-3],[-2,-2,-6,9,1,5],[-1,6,1,-7,8,8],[6,2,7,2,10,2],[10,2,-5,-3,5,-2],[-9,1,-9,-3,-4,8]],[[-8,-3,-6,-4,8,6],[-4,2,2,8,-2,-9],[7,7,6,-5,8,3],[-4,-10,7,-8,7,-2],[3,-10,-8,10,-2,-9],[2,3,3,-4,6,-9]],[[-10,-6,6,-7,10,8],[8,-5,2,-1,7,4],[3,-7,10,2,5,-6],[-5,-2,10,-5,7,-3],[4,-5,7,9,5,-8],[3,2,7,-9,-1,-9]],[[4,-3,4,1,-7,8],[-6,-5,4,6,3,-5],[8,-7,8,3,-2,2],[10,5,-2,1,-4,10],[10,-7,-6,5,8,-6],[-10,8,-3,1,6,1]],[[10,5,-10,6,-1,-3],[7,2,4,4,6,7],[2,3,3,-3,7,9],[-3,7,7,-10,10,2],[9,-9,5,4,-3,5],[-2,10,-6,-7,5,-4]],[[4,9,-5,9,6,-1],[-5,10,2,5,-4,3],[4,-1,-4,1,9,3],[10,2,-3,7,-5,-5],[10,3,2,6,-6,7],[3,9,8,10,5,4]],[[-2,-5,7,8,-9,-3],[-4,9,7,-1,5,-4],[1,1,-5,-5,7,6],[9,1,-4,1,5,-10],[-5,5,-1,3,3,8],[-10,-5,-3,10,6,10]],[[-8,-7,-10,-5,8,-4],[-9,8,4,9,9,10],[-6,3,-2,1,-1,-2],[7,-7,7,3,10,-7],[-9,8,-10,-9,-1,-2],[5,-4,2,-9,-3,-4]],[[-8,6,10,4,-10,9],[-1,10,-3,4,6,6],[5,-6,4,9,-9,-1],[10,8,8,-2,6,-10],[4,6,-3,7,8,6],[-5,3,2,3,-9,-4]],[[6,5,-9,10,-10,-1],[-9,-1,-2,-8,-4,1],[6,9,-4,-4,10,4],[-4,-3,1,7,4,8],[7,-5,6,8,-9,-9],[2,3,3,-3,4,-3]],[[-10,4,10,-10,-7,-9],[-2,-6,4,3,-1,9],[-6,2,6,4,6,2],[1,5,8,2,1,-10],[-5,2,-3,-9,1,10],[7,-5,-5,2,-8,3]]], dtype = "uint16")#candidate|4920|(13, 6, 6)|const|uint16
bop_4921 = relay.add(var_4919.astype('uint16'), const_4920.astype('uint16')) # shape=(13, 6, 6)
uop_4927 = relay.sinh(bop_4921.astype('float64')) # shape=(13, 6, 6)
output = uop_4927
output2 = uop_4927
F = relay.Function([var_4919,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_4919,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')
input_4919= np.array(5, dtype='uint16')
module1.set_input('var_4919', input_4919)
module1.set_input(**params)
module1.run()
res2 = intrp2.evaluate()(input_4919, )
res3 = intrp3.evaluate()(input_4919, )
res4 = intrp4.evaluate()(input_4919, )
res2 = vmobj_to_list(res2)
res3 = vmobj_to_list(res3)
res4 = vmobj_to_list(res4)
res1_0 = module1.get_output(0).asnumpy()
res2_0 = res2[0].asnumpy()
res3_0 = res3[0].asnumpy()
res4_0 = res4[0].asnumpy()
np.testing.assert_allclose(res1_0 ,res2_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_0 ,res3_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_0 ,res4_0, atol=1e-3, rtol=1e-3)
(res1_0 == res2_0).all()
(res1_0 == res3_0).all()
(res1_0 == res4_0).all()
module5.set_input('var_4919', input_4919)
module5.set_input(**params)
module5.run()
res6 = intrp6.evaluate()(input_4919, )
res7 = intrp7.evaluate()(input_4919, )
res8 = intrp8.evaluate()(input_4919, )
res6 = vmobj_to_list(res6)
res7 = vmobj_to_list(res7)
res8 = vmobj_to_list(res8)
res5_0 = module5.get_output(0).asnumpy()
res6_0 = res6[0].asnumpy()
res7_0 = res7[0].asnumpy()
res8_0 = res8[0].asnumpy()
np.testing.assert_allclose(res5_0 ,res6_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_0 ,res7_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_0 ,res8_0, atol=1e-3, rtol=1e-3)
(res5_0 == res6_0).all()
(res5_0 == res7_0).all()
(res5_0 == res8_0).all()
module9.set_input('var_4919', input_4919)
module9.set_input(**params)
module9.run()
res10 = intrp10.evaluate()(input_4919, )
res11 = intrp11.evaluate()(input_4919, )
res12 = intrp12.evaluate()(input_4919, )
res10 = vmobj_to_list(res10)
res11 = vmobj_to_list(res11)
res12 = vmobj_to_list(res12)
res9_0 = module9.get_output(0).asnumpy()
res10_0 = res10[0].asnumpy()
res11_0 = res11[0].asnumpy()
res12_0 = res12[0].asnumpy()
np.testing.assert_allclose(res9_0 ,res10_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_0 ,res11_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_0 ,res12_0, atol=1e-3, rtol=1e-3)
(res9_0 == res10_0).all()
(res9_0 == res11_0).all()
(res9_0 == res12_0).all()
module13.set_input('var_4919', input_4919)
module13.set_input(**params)
module13.run()
res14 = intrp14.evaluate()(input_4919, )
res15 = intrp15.evaluate()(input_4919, )
res16 = intrp16.evaluate()(input_4919, )
res14 = vmobj_to_list(res14)
res15 = vmobj_to_list(res15)
res16 = vmobj_to_list(res16)
res13_0 = module13.get_output(0).asnumpy()
res14_0 = res14[0].asnumpy()
res15_0 = res15[0].asnumpy()
res16_0 = res16[0].asnumpy()
np.testing.assert_allclose(res13_0 ,res14_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_0 ,res15_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_0 ,res16_0, atol=1e-3, rtol=1e-3)
(res13_0 == res14_0).all()
(res13_0 == res15_0).all()
(res13_0 == res16_0).all()
module17.set_input('var_4919', input_4919)
module17.set_input(**params)
module17.run()
res18 = intrp18.evaluate()(input_4919, )
res19 = intrp19.evaluate()(input_4919, )
res20 = intrp20.evaluate()(input_4919, )
res18 = vmobj_to_list(res18)
res19 = vmobj_to_list(res19)
res20 = vmobj_to_list(res20)
res17_0 = module17.get_output(0).asnumpy()
res18_0 = res18[0].asnumpy()
res19_0 = res19[0].asnumpy()
res20_0 = res20[0].asnumpy()
np.testing.assert_allclose(res17_0 ,res18_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_0 ,res19_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_0 ,res20_0, atol=1e-3, rtol=1e-3)
(res17_0 == res18_0).all()
(res17_0 == res19_0).all()
(res17_0 == res20_0).all()
module21.set_input('var_4919', input_4919)
module21.set_input(**params)
module21.run()
res22 = intrp22.evaluate()(input_4919, )
res23 = intrp23.evaluate()(input_4919, )
res24 = intrp24.evaluate()(input_4919, )
res22 = vmobj_to_list(res22)
res23 = vmobj_to_list(res23)
res24 = vmobj_to_list(res24)
res21_0 = module21.get_output(0).asnumpy()
res22_0 = res22[0].asnumpy()
res23_0 = res23[0].asnumpy()
res24_0 = res24[0].asnumpy()
np.testing.assert_allclose(res21_0 ,res22_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_0 ,res23_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_0 ,res24_0, atol=1e-3, rtol=1e-3)
(res21_0 == res22_0).all()
(res21_0 == res23_0).all()
(res21_0 == res24_0).all()

'''8.137740e+04,          inf],
8.137740e+04, 2.728992e+01],

'''