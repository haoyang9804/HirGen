import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
def vmobj_to_list(o, dtype="float32"):
    if isinstance(o, tvm.nd.NDArray):
        return [o]
    elif isinstance(o, tvm.runtime.container.ADT):
        result = []
        for f in o:
            result.extend(vmobj_to_list(f, dtype))
        return result
    else:
        return o


mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_57 = relay.var("var_57", dtype = "float64", shape = (7, 8, 14))#candidate|57|(7, 8, 14)|var|float64
var_58 = relay.var("var_58", dtype = "float64", shape = (7, 8, 14))#candidate|58|(7, 8, 14)|var|float64
bop_59 = relay.maximum(var_57.astype('float64'), relay.reshape(var_58.astype('float64'), relay.shape_of(var_57))) # shape=(7, 8, 14)
output = relay.Tuple([bop_59,])
output2 = relay.Tuple([bop_59,])
func_68 = relay.Function([var_57,var_58,], output)
mod['func_68'] = func_68
mod = relay.transform.InferType()(mod)
mutated_mod['func_68'] = func_68
mutated_mod = relay.transform.InferType()(mutated_mod)
func_68_call = mutated_mod.get_global_var('func_68')
var_70 = relay.var("var_70", dtype = "float64", shape = (7, 8, 14))#candidate|70|(7, 8, 14)|var|float64
var_71 = relay.var("var_71", dtype = "float64", shape = (7, 8, 14))#candidate|71|(7, 8, 14)|var|float64
call_69 = func_68_call(var_70,var_71,)
output = call_69
func_72 = relay.Function([var_70,var_71,], output)
mutated_mod['func_72'] = func_72
mutated_mod = relay.transform.InferType()(mutated_mod)
const_398 = relay.const([[[6.737915,-9.224284,-1.743368,-9.202207,1.671344],[-6.001886,-9.716918,1.210740,8.344029,-8.475347],[9.576846,3.712278,2.078659,-5.994948,-1.646821],[1.046437,-7.941728,-1.909933,-8.823765,-9.477277],[-8.406699,-2.065409,5.986399,9.731996,6.483982],[-4.886036,3.654653,3.930462,-5.209908,5.953807],[5.302217,-2.218853,-2.370019,-3.053104,-1.733218],[5.096882,-6.643883,8.377343,4.114858,-9.486892],[5.031938,-3.151808,-3.561260,5.134634,9.985622]],[[4.773821,-3.459698,-9.792921,6.727268,0.504522],[2.046621,-7.928849,-0.563743,-2.242503,3.449922],[9.350321,3.097669,2.789473,1.562662,-5.696146],[8.442108,4.525386,-2.084478,-9.935985,-5.739113],[8.990308,-7.414791,6.332223,6.072827,6.335359],[-0.711090,8.923922,-4.732309,-1.690017,-9.932075],[-4.941028,-7.841495,7.519036,7.325587,-9.209157],[9.050293,-7.751164,-7.866387,0.924969,0.015830],[-8.995393,7.021368,8.707955,-0.551502,2.127065]],[[-7.570951,-3.846220,0.782305,0.973849,7.948486],[-8.819502,0.127166,1.388834,9.968960,-7.288398],[3.187693,-3.706787,-9.190745,-1.982124,3.804901],[5.710025,0.125540,9.795089,1.387008,5.830397],[-6.069282,-0.377923,-8.076699,1.523723,-4.390913],[-7.224109,-1.332944,-8.964701,-3.618246,5.586916],[-9.320912,-3.577253,-3.402432,-9.046710,-3.668781],[8.090143,3.189787,2.019160,2.408021,3.587416],[-0.263375,0.263590,2.061693,4.523599,-3.129144]],[[0.402108,-2.902288,-8.032326,3.354556,-3.739245],[-0.975540,9.587078,4.779147,-9.674714,4.320475],[-2.270801,7.963690,3.806767,0.772862,1.945067],[8.302086,-2.250016,-0.579554,2.875087,1.778361],[5.611383,8.482970,-8.532611,0.526360,5.836564],[-7.645837,-8.914906,9.228002,-5.891051,5.898788],[-6.256724,6.993174,-0.607104,5.277410,2.405839],[3.606479,-8.644311,2.011159,-0.293122,8.941676],[-4.172817,7.242882,-9.593584,-1.845936,-1.205067]],[[-1.796601,-0.944311,6.633651,0.572062,-1.762083],[-1.165168,0.173569,-0.387057,4.218725,-7.704170],[-2.093309,-1.624498,6.458374,-8.672501,-4.924800],[8.008390,0.251074,-4.670509,-5.712016,0.653002],[-7.075503,3.469730,6.565290,9.835063,-5.507637],[7.064809,-3.514854,-2.589059,-3.222440,1.874275],[5.692701,1.739461,-9.903147,-3.861040,6.740069],[-2.814685,0.064272,-5.060242,6.107953,5.857138],[1.558249,2.712960,-5.084160,9.223117,-7.396964]],[[8.534554,-6.624903,3.859730,-7.284675,2.585473],[8.007553,-0.394406,9.557773,8.616643,-5.716614],[-5.398349,-6.161961,0.489901,-5.377457,8.530989],[3.618713,-5.627454,-7.581103,-4.437199,6.086189],[-0.327916,0.051698,6.843733,3.647600,-1.289670],[3.056667,9.761872,-5.028537,7.103409,-1.204933],[8.654554,0.132400,0.017448,0.209870,1.810605],[0.745272,-6.312508,-7.527136,-3.910708,-6.343302],[5.906928,2.617572,9.287986,3.356745,-6.395386]],[[-3.261288,2.154014,-6.264958,1.368030,-0.056692],[-9.199926,-4.868168,1.253868,8.032667,9.680094],[-5.608644,2.369011,3.504232,1.446009,8.534993],[-1.421179,2.471326,-1.706217,-9.597548,-5.549338],[-5.120695,6.706449,0.049562,5.005670,-0.115274],[-0.546356,8.226870,-0.956640,5.835810,5.850002],[-7.525442,-9.192681,0.841314,6.542998,-5.851784],[-3.419937,-5.295013,3.495933,-2.674446,-7.826259],[9.329220,9.448658,1.217236,-6.224426,6.357854]],[[8.092132,2.844728,-7.342208,-7.154721,0.507201],[7.611271,6.802684,9.937634,4.862853,1.454710],[-9.753931,-5.758925,3.119295,7.391400,-6.223884],[5.998929,-8.518152,8.547221,8.550739,-8.860812],[-1.751066,3.402036,-3.742866,5.988037,-7.449120],[2.423687,0.205664,0.184452,5.274601,-6.246501],[6.181692,-6.670136,4.796652,-5.633849,7.394492],[7.273093,-5.742346,-3.506757,0.676828,-3.797718],[-6.604429,-3.861949,-4.077696,5.437278,-9.212175]],[[0.130451,1.479259,-5.570145,-1.836219,-9.472959],[9.382746,5.389050,-6.556841,-2.818976,1.361082],[4.205018,5.547092,-2.639798,1.385357,7.210477],[6.119947,-7.588771,-3.219290,9.318035,8.331436],[2.688093,0.196600,9.176171,-6.322679,8.630077],[-8.309222,1.602541,-8.772915,2.289797,2.587900],[-2.652639,-6.667003,-1.013053,6.978263,6.190324],[6.019230,6.137553,5.808862,-3.311747,3.549970],[-0.225231,-2.892938,8.462681,6.915950,6.492618]],[[9.962824,5.957922,-7.934490,9.686185,-7.526418],[-0.121653,8.810000,-9.706651,-7.076196,-6.711907],[3.028344,-7.327808,-7.180764,-9.416398,-2.495848],[7.693118,1.979614,7.998383,-5.585178,8.362217],[5.903062,-8.322562,-7.830870,-6.777350,9.980769],[-4.127535,6.135062,-2.794622,-8.305692,2.989925],[-6.543861,-6.949522,2.790497,4.411226,-7.534154],[-1.118879,3.712160,-8.573134,-3.210992,-0.630642],[0.525954,-7.427806,2.120467,5.486026,5.925881]]], dtype = "float64")#candidate|398|(10, 9, 5)|const|float64
uop_399 = relay.cosh(const_398.astype('float64')) # shape=(10, 9, 5)
func_68_call = mod.get_global_var('func_68')
func_72_call = mutated_mod.get_global_var('func_72')
const_409 = relay.const([[3.458642,-8.274798,-4.914887,-9.006410,-9.973036,-7.522376,2.639542,-3.477280,-7.621450,6.647230,6.562945,3.092667,-3.420160,-2.620480,2.135878,2.593578,-4.592101,-9.614668,9.798388,8.207231,5.413736,9.283354,-4.877251,-9.996230,-6.416348,-2.645753,-8.931454,5.354805,1.911588,4.478805,-5.884559,3.210612,-0.628443,0.274343,-0.250648,-5.003841,-2.971820,-4.603729,1.541875,-5.800330,-9.808948,8.826002,-8.496404,9.443943,-6.453218,1.752077,-2.506326,7.815671,-1.628630,-4.792131,-7.526516,-5.891625,-0.689987,6.314961,-4.922984,7.365232,-8.462222,2.761145,9.100887,-4.508542,7.019318,-5.506526,-5.475696,-2.858418,-3.120065,3.081868,8.690516,2.179341,6.600119,3.393332,-4.142802,-7.643414,2.056685,-0.610460,5.580964,1.953408,-4.788271,-8.256399,0.784179,4.654034,2.613940,-0.603730,-7.496702,-0.591472,-9.606797,3.119233,-3.916949,-7.743008,4.990411,-8.988635,9.500727,2.757808,2.839004,0.057360,7.801173,-3.270272,1.638749,5.126844,-6.944870,2.595292,-9.972405,-0.907085,1.537958,-8.163028,5.069949,5.068389,-6.431448,-4.246786,-9.296824,8.362928,-8.802961,-7.885899,-9.867220,5.618211,4.666427,-9.281383,-5.908944,-0.617501,8.305344,-4.998587,9.454445,1.172154,2.392205,3.051907,8.900082,4.853376,-7.283600,-8.617453,2.892438,4.640367,-2.031314,-0.825142,-7.934878,-3.603748,-9.762714,-7.902695,-8.102168,3.888809,4.533093,4.184796,4.661022,-4.542247,-6.795389,6.499275,9.769905,-1.675212,-5.055402,-7.840616,7.470451,-0.089914,5.534491,2.067483,-2.110338,3.501444,7.076441,8.928705,3.397937,-1.800287,-5.836772,-5.695651,6.733958,3.977552,6.845139,-8.520327,6.122755,-5.113962,-3.203084,-0.101815,8.113978,-6.780638,4.876345,7.027831,-7.528679,-9.261548,4.636422,-4.902649,-7.602497,-0.883186,4.650775,-0.835045,9.117404,4.460246,0.656502,6.741596,-8.493859,7.724318,5.993896,-9.171663,6.837210,-6.547118,5.454613,8.011691,-0.775549,-7.552588,-6.206059,-0.410706],[7.441908,8.819302,-4.197820,9.872781,3.296081,-7.257027,-6.175661,-8.833323,5.806495,-3.568215,5.390831,-6.159140,-3.220006,3.347593,-1.616802,-0.683936,4.884175,-0.479133,-0.607497,-9.904721,-5.913779,-6.057816,-1.532244,-5.903314,0.194222,-2.878038,-1.183442,3.486303,7.322185,-0.180079,-6.288658,-5.424858,-0.468535,0.070469,-2.239489,-2.320720,-0.362210,6.851994,5.881362,1.734843,9.683593,3.331748,-9.636869,-6.658948,4.422537,1.760844,6.238722,-4.828946,-8.249325,7.543958,5.750033,-0.470897,-5.601086,-4.233561,7.940252,2.392533,-5.671445,2.664031,7.431044,-7.456590,-6.047406,-0.163420,1.555097,3.040071,2.555916,0.006458,2.622004,-5.855331,9.107578,9.215608,-7.849177,7.268322,-2.222318,-9.440855,-1.268789,-5.026346,-1.730422,5.624677,3.847205,-6.853061,1.919001,-8.574584,2.978937,-8.170419,4.823440,3.667960,-2.438090,-4.068965,8.429246,-6.371115,-9.582530,-0.272067,-7.021476,-4.006586,8.090453,-2.688656,-5.497998,9.087055,6.051924,2.097689,7.380488,0.321245,2.070775,-0.678090,-6.743420,4.269762,-9.401030,7.073261,7.167626,-4.656984,-4.931153,5.692426,8.408264,-3.529387,-6.697345,-7.514755,4.111923,-0.314870,7.672939,8.915214,6.200123,-7.198373,5.153501,-7.744755,-5.604559,9.335627,7.147250,5.111703,7.792366,-6.356396,7.267063,0.518185,-6.469660,-0.524075,6.094033,7.482120,-8.448032,-3.393525,3.847709,-7.702007,5.939807,8.065167,-9.239768,-1.473722,-2.247142,9.130885,8.718288,-1.862110,-7.322882,9.522381,4.225726,4.244933,7.921700,8.613420,-0.546930,-1.601516,1.814941,3.110148,-4.922207,5.297893,-8.374071,6.439131,3.147689,2.259055,-3.920390,6.991215,6.411252,0.428731,-4.447156,7.308229,-3.413971,3.029403,7.800934,9.099311,-1.560646,4.117148,2.284825,-2.077526,-6.398259,6.696794,-0.096303,-8.457804,8.963946,-5.087372,-4.649740,-1.100006,3.639860,-3.371589,-6.212968,6.322534,-4.438918,8.694652,9.259534,2.472173,5.152946,-0.415767],[2.136362,7.994986,-3.339801,8.794175,-8.953332,3.304296,6.040294,-1.866617,9.697021,-0.533458,-6.496718,2.158042,6.760242,-5.609868,2.963851,-3.796067,0.436323,8.771885,-7.796516,6.482699,2.993566,-3.109403,-3.312163,-3.745610,-0.129744,-1.065131,7.333283,-8.817266,-5.985455,0.291326,1.891619,-7.758068,-3.650215,-5.142155,-9.393842,9.821565,-0.693885,-4.772841,-9.953080,-4.003863,6.375599,-9.625547,9.943632,4.723312,8.318235,3.409717,2.089128,4.488012,-8.740168,-5.114693,1.875897,-2.550739,3.072591,7.074252,4.562435,2.097062,-7.538690,8.082611,-5.268445,2.836234,-8.165413,0.723414,-0.612056,9.733623,-8.172731,-3.555209,5.281791,-4.550672,1.192027,-3.910271,1.346134,-7.140976,3.845492,9.530245,-7.875521,3.285293,-5.404168,-7.749837,-3.641854,7.786938,3.130900,-7.594517,-3.213018,-5.493440,-4.162558,-5.518699,-0.631439,6.657870,7.893656,2.399864,0.277825,-1.493813,3.173182,4.136737,-0.081864,8.015312,-0.425959,-0.245243,-5.146859,-6.822468,3.559373,-0.938853,9.399156,-9.529175,8.145852,1.603914,-7.771402,-0.617073,-1.103516,2.976959,-7.365201,6.703974,5.765803,6.696507,-6.914784,-6.733916,-7.281332,1.875904,3.842976,-6.506544,0.630362,8.754934,6.504268,-9.696888,4.329201,-2.882700,-0.109198,-9.943749,2.990183,0.311334,-1.707976,-1.839636,-3.724528,-4.011569,7.116023,-0.499535,-1.207994,-5.728347,3.358710,-6.679568,6.501255,-9.918292,-9.487844,5.177512,-0.386414,4.732194,-0.112279,-3.733922,7.914751,-6.558820,1.042031,6.483329,4.878032,-3.875576,-1.427675,3.214640,4.730566,4.663792,3.410806,-7.211152,6.680723,-0.636119,5.358055,6.289905,7.619514,5.982698,-5.356691,6.121884,-7.238503,0.263344,-7.334190,-7.939068,-6.527537,8.934606,-2.998638,-9.788930,6.644543,-8.494662,5.578963,4.742507,5.790023,4.979279,7.250252,2.083633,-9.497781,2.053519,-6.833628,7.838321,5.067160,-0.308853,-4.777253,-3.343683,7.064857,-8.327871,-0.596810,8.327137],[-1.338744,0.270016,2.168747,7.493866,4.652034,-5.227779,6.754527,5.008608,-3.592053,-7.548598,-1.253144,-1.602317,4.603990,-5.285128,-2.551190,-1.206995,-9.522587,9.148426,-7.947730,-4.132318,8.879724,6.717949,-0.647417,0.550528,-7.006144,2.820122,-1.079787,-7.293922,-6.113001,2.664231,6.297839,6.362844,-6.386822,8.547592,4.107701,-3.916750,2.628025,3.783162,-0.182146,-4.739913,6.015466,4.422554,-6.529312,5.554633,-9.834515,8.290731,-1.616716,-9.418746,0.418730,-2.754545,9.232350,6.193630,-8.139853,-2.367197,-7.661403,-3.081616,-1.672702,5.738044,2.393515,8.895757,-9.092365,4.348045,0.742577,7.253771,-2.364718,2.243278,-2.082094,-1.612025,-4.385122,-7.224446,8.148052,-9.550194,-6.198181,-3.409144,-6.325172,-1.730793,9.073349,-8.628842,1.810687,3.000407,7.417994,5.687140,-5.783667,-0.813375,-9.611894,0.707241,4.437803,5.837148,5.291316,-3.728911,9.058816,-5.902022,-4.275176,9.318135,-4.359440,7.135280,7.090297,-8.042866,-6.240727,-3.413673,3.183438,7.783252,9.466730,-0.552585,-9.193737,5.302253,1.467685,-8.007356,-4.415956,4.526544,9.758423,-2.360423,1.787563,-4.489898,5.956881,-7.581989,-8.939715,-0.754565,-5.723424,-7.268801,8.100501,-8.142939,-1.452147,-2.083495,-9.672842,3.122763,6.379449,6.143397,-1.966474,-3.411695,-6.719588,-4.982033,-1.370752,5.380650,-5.125774,-0.243769,9.587652,-8.246878,1.264830,-2.882193,6.111773,9.624275,9.826865,9.518970,-3.823225,7.200766,5.797604,9.859903,-9.115177,-8.801863,0.054226,-1.186226,-5.394548,-7.681147,-4.544081,6.074757,-9.199973,-8.549618,9.917508,-7.976236,2.648535,2.518986,7.675021,8.953524,9.992827,-7.003592,-0.541079,5.587204,-1.044256,-4.500852,-0.030439,-0.651136,1.594239,-8.213850,-8.722324,-1.890771,-4.045658,-4.236937,3.953598,-2.924656,-0.827540,0.907614,6.646101,6.968519,-5.325735,-4.492255,1.932397,0.896955,8.819937,-8.874732,-0.590153,-9.244557,-5.435802,9.903050,-2.830789,-0.682623]], dtype = "float64")#candidate|409|(4, 196)|const|float64
call_408 = relay.TupleGetItem(func_68_call(relay.reshape(const_409.astype('float64'), [7, 8, 14]), relay.reshape(const_409.astype('float64'), [7, 8, 14]), ), 0)
call_410 = relay.TupleGetItem(func_72_call(relay.reshape(const_409.astype('float64'), [7, 8, 14]), relay.reshape(const_409.astype('float64'), [7, 8, 14]), ), 0)
output = relay.Tuple([uop_399,call_408,const_409,])
output2 = relay.Tuple([uop_399,call_410,const_409,])
func_421 = relay.Function([], output)
mod['func_421'] = func_421
mod = relay.transform.InferType()(mod)
mutated_mod['func_421'] = func_421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_421_call = mutated_mod.get_global_var('func_421')
call_422 = func_421_call()
output = call_422
func_423 = relay.Function([], output)
mutated_mod['func_423'] = func_423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_421_call = mod.get_global_var('func_421')
func_423_call = mutated_mod.get_global_var('func_423')
call_435 = relay.TupleGetItem(func_421_call(), 1)
call_436 = relay.TupleGetItem(func_423_call(), 1)
const_453 = relay.const([[[-3.038118,-3.731914,-1.807713,-8.165363,5.101851,6.679050,-6.541928,-9.010061,0.986710,-2.061993,-2.447730,3.679707,6.591001,4.155234],[-4.541607,-3.219503,9.286130,3.694706,8.284268,0.212115,-6.226645,2.615127,5.031626,-6.910491,6.746678,2.698542,-5.580531,-0.110285],[-4.071718,-5.492497,-3.404857,-2.555860,-8.154732,-4.102129,5.089273,-4.887202,-6.669705,5.935280,5.471533,-0.944491,-8.621425,6.348166],[2.868994,-7.635972,9.221215,-9.236399,2.850858,0.590392,-8.411413,2.411799,-6.165470,4.643596,5.254912,-9.152923,-5.244337,2.182574],[-9.487715,-9.754015,-0.030648,-4.974772,7.702912,-1.609022,6.510346,-7.371610,4.879726,6.283633,3.001279,-9.991093,8.162890,-7.937651],[1.595554,-8.327428,-8.795376,7.425769,3.871810,-6.174239,-2.211849,2.161431,-0.789275,-6.133055,4.639249,5.681189,-0.263207,6.587864],[0.308520,-1.835571,-4.407004,-1.517522,7.724779,9.714927,4.778490,3.726773,-9.017505,9.582167,4.461482,-2.896780,-3.991289,7.037175],[4.864441,-0.681714,-0.598920,-3.006599,-3.483083,6.805444,-9.366177,-9.516508,-5.492757,-3.681258,8.000133,-5.327109,1.444032,8.966405]],[[-2.834279,-9.527891,-1.882196,-9.384540,9.168130,8.301683,-4.366209,0.641673,3.866899,-6.902529,-1.600920,4.834894,3.475105,-3.284384],[-7.569312,-5.847045,-4.953115,8.416106,9.510582,-9.336709,-8.804565,-9.746582,-4.718138,8.345860,-4.284125,-2.244935,-1.325297,-8.632855],[0.180718,-5.786697,-6.143654,-3.738696,-4.703694,0.540764,-0.651492,-4.832536,1.649088,2.705940,7.101075,-4.080489,-5.723165,-7.803819],[-7.256154,-8.048280,0.807370,5.426250,4.150075,-9.889614,8.071821,-8.496296,8.051270,-4.330593,0.692410,5.253727,6.670675,-1.411275],[-3.078283,-2.206214,7.743229,-7.851736,-3.182016,8.856203,4.339484,3.877350,9.211729,-8.551380,-8.391916,-9.522558,-8.945695,-5.387750],[4.165218,-7.062032,6.557092,-5.363769,5.807485,0.513716,-9.125399,-7.725713,2.812009,3.042087,3.101193,0.649336,-2.301213,6.247797],[8.432352,-7.199598,3.413923,-9.941524,-1.421573,3.953652,9.025000,4.449515,5.362735,-2.471108,7.803079,-4.486321,3.163642,-0.279552],[0.063888,2.044884,-6.470302,6.893879,-2.763879,-3.337544,-8.339839,-7.274958,6.411435,6.779769,2.405823,9.145497,5.790320,6.825105]],[[5.831726,9.893807,-0.023161,-9.916229,-5.407480,-1.280427,8.471723,8.789102,-8.088373,-8.376722,2.218580,7.044677,8.719659,8.714796],[-3.232504,9.965247,7.278953,-5.745215,3.123131,-1.336851,-3.620911,-1.677070,2.408987,4.555946,-9.287369,2.549420,3.797402,-2.658949],[2.589302,-9.338767,8.306220,-3.098305,-1.768271,-9.201097,6.423517,5.637161,8.664831,1.576961,-1.924760,-3.059015,-9.068959,-8.236803],[-9.707351,-9.926316,0.485317,5.143025,6.523547,2.280454,-5.420820,0.625328,-2.128536,5.944332,5.248645,-4.376356,8.991325,-5.372747],[7.429165,-7.446982,3.616964,5.440126,8.290895,7.789813,-8.914233,-9.213665,-5.433519,-3.923474,-6.228523,-6.082530,2.382613,6.185109],[-2.045928,-0.531719,3.521042,3.966268,-7.115675,6.132227,-3.095561,-3.077955,4.686225,5.266034,-0.564797,-8.019139,-7.888621,-0.433425],[9.510888,-3.585394,2.464928,3.108329,7.092659,-7.346330,-6.837473,0.563105,-3.870346,2.333867,-6.274843,-9.079261,5.196694,-9.237477],[9.016085,8.549852,-1.552953,-2.579001,-0.467872,-3.368691,0.329725,4.447366,-5.240503,-5.770901,-5.434799,-0.322944,-6.231106,-1.876166]],[[3.313400,2.741920,5.814172,-0.359699,3.093082,-3.023923,-3.716381,7.745776,0.918371,9.734782,-7.924883,-7.382468,-0.920432,1.639472],[2.327723,-0.391222,-5.679325,-3.697945,-6.566176,-6.331245,0.301090,7.033128,7.796842,2.472699,-1.283060,1.840316,-6.020468,9.800211],[-9.138213,-0.838862,-2.927844,4.623898,-6.529963,2.398074,-0.882427,-9.617860,-7.077938,7.320260,1.350036,-4.719248,-5.259169,-1.803072],[7.649666,5.464036,-2.480074,-7.708422,-5.038040,-0.311774,6.762640,2.626630,7.811670,7.570795,4.213303,6.709099,-1.632400,-1.042371],[7.315867,5.052817,0.753396,2.314258,-3.177784,-2.479520,8.016447,-7.082026,-5.510964,-8.185059,0.291986,8.823023,-8.249480,0.655595],[-7.683135,2.268128,-4.815528,8.185919,8.667170,-6.994357,-3.196678,-2.708053,8.220176,-5.611823,-9.354867,1.319321,-1.500972,6.244762],[0.500546,5.296951,-8.205977,-5.556522,-3.904508,-5.446578,-1.575162,6.196460,-2.168155,-4.490110,-2.641960,9.919121,3.654881,0.116059],[-1.004662,-5.024926,7.642180,9.445222,3.356366,4.146309,0.130581,9.809028,-8.094161,-7.172655,3.566208,-3.460275,4.276058,-9.279595]],[[-0.588335,0.001729,-4.640565,-1.711584,2.073115,-1.604076,9.587394,-2.754272,5.151743,-0.650653,8.525463,-1.642975,8.321431,-1.700285],[3.976383,5.439855,-3.102412,-7.080745,7.737902,8.463837,-9.302396,9.959381,4.375715,8.336816,8.114682,-9.546020,-0.018667,3.574637],[1.337739,5.219700,1.287637,-6.576032,8.127038,-9.973316,5.328461,8.917571,0.961523,-8.878266,6.074475,-9.967980,3.518114,1.739539],[1.673016,-8.546194,-6.026666,1.209406,-3.739403,-4.094387,-6.633592,-2.031227,-4.353007,-7.663265,-0.683958,-1.035402,-2.930193,1.845247],[9.101074,2.711992,4.564886,8.807631,5.534270,1.792274,-1.923475,3.362623,9.628259,-7.711059,-9.475835,5.248609,8.672143,-5.589098],[-6.094905,-7.249539,-7.423250,1.277732,5.074359,7.948427,5.289731,-1.392236,-1.693316,6.765474,-5.436238,1.468778,-1.051201,6.312665],[-4.228390,8.887905,2.791306,-7.187871,7.345806,-7.976645,-2.787276,-6.995463,-0.522925,8.224284,-8.380612,-6.004701,7.464081,1.926512],[2.021004,7.084590,-6.981686,-6.774587,-6.242320,1.567969,-8.483778,-5.503349,-9.974384,0.647924,-9.348815,2.739886,8.865792,3.314037]],[[-4.045052,-8.488783,3.936658,9.215048,-5.628948,-1.987897,3.982282,-4.325220,9.624222,-0.412660,6.864370,-5.579515,5.665833,3.026666],[-9.362305,8.460473,2.393207,-1.220180,8.107154,4.918035,7.332109,8.826483,0.475213,7.054943,-7.419696,-4.255549,3.849609,7.211627],[3.668212,3.995229,2.287390,-0.933983,-4.541252,-8.328166,-6.150040,3.501474,6.329389,-3.825576,-1.020200,8.336668,-0.047545,5.411119],[-7.559506,-2.157030,1.207987,8.524565,-4.239086,2.134982,-2.356373,-7.787711,6.704614,3.673213,-3.768859,-8.949925,2.909924,-2.171290],[4.864138,5.732707,-6.369460,8.564808,4.176637,7.571457,-4.201227,-0.082463,-1.213756,-0.976120,-1.211451,-8.338001,4.929159,0.331648],[-8.435801,-9.799600,8.052236,9.264448,7.155304,7.177697,-9.685404,-0.732401,-6.479971,5.993044,-0.817094,-4.265354,5.987136,0.811326],[6.165747,8.303085,-8.566747,-2.438499,7.473831,-6.179352,-0.326439,8.199423,-5.239984,-7.415133,-1.184110,9.113631,7.249840,0.833985],[-6.563667,7.989266,-6.071932,4.868249,5.306582,-8.496057,4.116694,7.198827,7.679392,-5.338537,7.873242,-6.991699,8.555312,-8.336465]],[[6.042316,3.777047,-0.896900,-6.994426,-3.420195,-6.550019,0.560542,-2.314615,4.879530,-3.724839,0.431904,-3.280453,5.963935,-8.214733],[-2.999323,7.268995,4.730638,7.137181,-1.093734,-6.128449,9.930594,-5.777094,5.838819,4.296494,-7.735942,5.505950,3.406921,-8.846364],[-8.123430,6.229976,6.956487,6.588664,8.248172,8.511542,-3.209496,-5.853106,-4.160003,-1.925371,-3.452408,-4.612047,1.663753,-6.354751],[6.044102,-8.808395,4.235152,-3.768366,-8.056096,3.897769,-0.004990,5.852996,-0.692426,-9.688034,-9.914139,1.289777,-7.296987,-2.274920],[1.515609,-0.226654,1.423475,6.739952,-6.165714,-5.019361,1.757068,5.700923,-2.997057,-2.473626,-9.831633,2.674799,5.672331,1.105636],[-8.961765,6.657988,-3.612275,-7.324411,-7.971170,0.260226,4.205868,-7.076892,8.505811,-9.863455,-2.334945,6.662579,3.259296,-3.909526],[8.231482,-7.765426,4.651755,6.431792,-6.386571,2.860610,4.439960,1.643073,-0.161926,8.709893,8.306450,3.785424,-9.339448,6.190565],[3.770051,-0.068369,4.326323,-0.448585,0.227770,1.829822,5.741001,-7.475998,8.608266,2.496471,4.464948,3.701170,-0.905940,5.735981]]], dtype = "float64")#candidate|453|(7, 8, 14)|const|float64
bop_454 = relay.bitwise_xor(call_435.astype('int32'), relay.reshape(const_453.astype('int32'), relay.shape_of(call_435))) # shape=(7, 8, 14)
bop_457 = relay.bitwise_xor(call_436.astype('int32'), relay.reshape(const_453.astype('int32'), relay.shape_of(call_436))) # shape=(7, 8, 14)
uop_460 = relay.log10(call_435.astype('float32')) # shape=(7, 8, 14)
uop_462 = relay.log10(call_436.astype('float32')) # shape=(7, 8, 14)
uop_466 = relay.tan(uop_460.astype('float64')) # shape=(7, 8, 14)
uop_468 = relay.tan(uop_462.astype('float64')) # shape=(7, 8, 14)
output = relay.Tuple([bop_454,uop_466,])
output2 = relay.Tuple([bop_457,uop_468,])
func_471 = relay.Function([], output)
mod['func_471'] = func_471
mod = relay.transform.InferType()(mod)
output = func_471()
func_472 = relay.Function([], output)
mutated_mod['func_472'] = func_472
mutated_mod = relay.transform.InferType()(mutated_mod)
var_476 = relay.var("var_476", dtype = "float32", shape = (5, 16, 10))#candidate|476|(5, 16, 10)|var|float32
uop_477 = relay.sigmoid(var_476.astype('float32')) # shape=(5, 16, 10)
output = relay.Tuple([uop_477,])
output2 = relay.Tuple([uop_477,])
func_490 = relay.Function([var_476,], output)
mod['func_490'] = func_490
mod = relay.transform.InferType()(mod)
var_491 = relay.var("var_491", dtype = "float32", shape = (5, 16, 10))#candidate|491|(5, 16, 10)|var|float32
output = func_490(var_491)
func_492 = relay.Function([var_491], output)
mutated_mod['func_492'] = func_492
mutated_mod = relay.transform.InferType()(mutated_mod)
var_573 = relay.var("var_573", dtype = "float64", shape = (6, 14, 5))#candidate|573|(6, 14, 5)|var|float64
uop_574 = relay.tan(var_573.astype('float64')) # shape=(6, 14, 5)
uop_582 = relay.acosh(uop_574.astype('float64')) # shape=(6, 14, 5)
func_421_call = mod.get_global_var('func_421')
func_423_call = mutated_mod.get_global_var('func_423')
call_584 = relay.TupleGetItem(func_421_call(), 1)
call_585 = relay.TupleGetItem(func_423_call(), 1)
func_471_call = mod.get_global_var('func_471')
func_472_call = mutated_mod.get_global_var('func_472')
call_587 = relay.TupleGetItem(func_471_call(), 1)
call_588 = relay.TupleGetItem(func_472_call(), 1)
uop_589 = relay.sin(uop_582.astype('float32')) # shape=(6, 14, 5)
func_68_call = mod.get_global_var('func_68')
func_72_call = mutated_mod.get_global_var('func_72')
call_599 = relay.TupleGetItem(func_68_call(relay.reshape(call_587.astype('float64'), [7, 8, 14]), relay.reshape(call_584.astype('float64'), [7, 8, 14]), ), 0)
call_600 = relay.TupleGetItem(func_72_call(relay.reshape(call_587.astype('float64'), [7, 8, 14]), relay.reshape(call_584.astype('float64'), [7, 8, 14]), ), 0)
output = relay.Tuple([call_584,call_587,uop_589,call_599,])
output2 = relay.Tuple([call_585,call_588,uop_589,call_600,])
func_604 = relay.Function([var_573,], output)
mod['func_604'] = func_604
mod = relay.transform.InferType()(mod)
var_605 = relay.var("var_605", dtype = "float64", shape = (6, 14, 5))#candidate|605|(6, 14, 5)|var|float64
output = func_604(var_605)
func_606 = relay.Function([var_605], output)
mutated_mod['func_606'] = func_606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_421_call = mod.get_global_var('func_421')
func_423_call = mutated_mod.get_global_var('func_423')
call_651 = relay.TupleGetItem(func_421_call(), 0)
call_652 = relay.TupleGetItem(func_423_call(), 0)
uop_653 = relay.asinh(call_651.astype('float32')) # shape=(10, 9, 5)
uop_655 = relay.asinh(call_652.astype('float32')) # shape=(10, 9, 5)
output = uop_653
output2 = uop_655
func_673 = relay.Function([], output)
mod['func_673'] = func_673
mod = relay.transform.InferType()(mod)
mutated_mod['func_673'] = func_673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_673_call = mutated_mod.get_global_var('func_673')
call_674 = func_673_call()
output = call_674
func_675 = relay.Function([], output)
mutated_mod['func_675'] = func_675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_471_call = mod.get_global_var('func_471')
func_472_call = mutated_mod.get_global_var('func_472')
call_753 = relay.TupleGetItem(func_471_call(), 1)
call_754 = relay.TupleGetItem(func_472_call(), 1)
func_490_call = mod.get_global_var('func_490')
func_492_call = mutated_mod.get_global_var('func_492')
const_768 = relay.const([2.458662,0.643207,-4.349619,4.887155,-3.476857,5.261328,0.756020,3.276984,-5.790397,4.458460,-7.848456,-4.388684,-0.287585,7.385171,-2.210637,-1.940275,1.560584,0.225191,-9.676754,8.518865,9.084310,6.117841,0.967149,-3.847395,3.237345,-8.223641,-0.354757,-7.221427,-1.687000,-2.550629,2.024392,-2.434347,-8.930836,-7.434029,-0.448910,8.884990,5.257463,2.566417,9.080932,-4.549174,3.533140,8.126990,2.598506,-5.142117,1.761107,-1.989702,-9.942963,8.088864,-1.744170,2.939178,7.704911,-7.439385,9.055497,-4.534543,5.517459,2.599988,4.459908,-1.112791,-3.671837,-0.848696,1.985693,-0.058060,-7.300118,-2.485480,-7.265782,2.095449,-4.117208,-6.540463,2.223951,4.171201,7.757928,-4.073609,7.313952,0.366674,7.431157,0.326006,3.626719,-7.977616,2.673896,-8.982188,-5.601137,-8.957255,-5.786138,9.777990,4.783643,-5.179244,5.623217,3.766219,-9.022590,9.954180,-5.949082,-6.038907,-5.627231,2.295269,-7.871276,0.226085,-7.005913,6.743185,-1.864728,-1.916258,6.770231,-1.572447,5.595989,3.170172,5.171575,-9.969668,4.139803,2.935640,1.441539,-9.297208,-0.626362,8.435822,7.194726,1.528761,3.647495,6.610769,1.308213,9.468713,1.050771,-6.316420,5.265139,-8.576632,4.715497,9.744881,7.206546,-6.833751,8.919957,-5.063082,1.232223,4.063209,4.933963,8.732369,-9.651243,-2.773469,-1.704438,-8.240445,4.323072,-7.684723,-2.458900,7.240867,0.235279,-1.786174,9.907300,4.847364,-9.099969,4.976424,0.813288,-2.075769,-6.989442,8.850998,3.767114,-2.535726,3.542047,-4.688328,-2.333955,1.399878,0.610898,4.616188,-1.974516,0.834384,5.108127,-4.610188,-1.215632,-5.571532,2.667786,5.864219,-0.974136,1.442021,-1.929368,6.983806,-2.408797,5.651141,-4.028582,-1.937201,4.854421,-9.132786,2.036469,-3.596113,7.685785,-3.974778,-1.821144,-4.192865,1.220432,-2.736485,5.605803,3.084768,-6.770030,0.940648,1.976006,7.115952,-8.196121,7.418264,9.514950,3.057755,-2.621978,5.848524,8.759844,8.480230,-6.336181,-7.402863,-9.905500,5.569332,-1.478764,9.533554,-6.871833,6.875743,-2.054411,-3.014050,-7.648756,5.765988,5.261251,6.989113,-0.969871,-1.375735,3.079964,-8.737548,-5.063879,-1.317414,-4.773132,-1.454191,2.746628,2.272230,-0.982784,1.498858,4.587339,1.682381,2.010962,9.761568,-4.106412,-6.202294,4.505016,1.144709,-5.176160,-1.660660,2.120435,-1.990187,-4.135081,5.528634,9.399592,3.707459,4.409867,-8.484137,-8.726347,-3.542793,5.958965,-6.948490,2.987881,-2.644632,7.424964,-0.737991,2.935888,5.408124,7.955226,-4.608392,9.818818,0.582114,-7.825681,-0.320629,-5.368614,2.487818,8.054984,-0.244909,2.633196,3.660971,6.329201,-6.982710,-6.364467,5.244785,-9.929078,-0.590223,8.513123,-2.889236,9.797296,-2.511968,9.896054,5.431386,6.003252,4.279130,-2.637971,-3.525085,-8.358868,-2.841272,-8.900439,-7.114553,8.821784,4.718860,7.149766,2.171561,-2.504984,-5.632017,3.150306,-8.045140,3.531532,-1.674347,-5.765446,0.009219,5.978366,9.357439,4.003588,-0.192089,9.276103,-0.301687,0.905510,9.129640,5.519800,7.134926,-1.836963,-0.393472,1.678527,8.962484,0.325663,-3.730280,0.354907,-7.667376,-0.495127,5.564813,-6.413478,-2.632770,1.289539,9.858393,8.363316,-6.829359,0.718890,8.193704,5.543199,-1.655803,6.203856,9.046479,8.302431,-7.860681,-9.930925,8.201269,9.401690,-3.303880,6.428304,9.803170,-4.700106,-7.915006,-1.928262,-9.975796,1.569913,-6.588711,5.127614,7.458960,-1.670371,-4.066998,4.755261,0.014929,8.799027,-4.716578,-9.800899,4.117556,5.169316,-7.004013,7.359385,8.212089,3.026895,-0.835690,8.039791,3.423391,0.763023,-8.734199,1.665527,0.949310,0.685340,-5.828748,8.494813,-5.708067,3.674695,4.364771,1.106614,4.014838,-2.708539,5.443010,6.916327,3.111501,5.211276,-7.726661,-7.357972,6.554277,0.233847,9.560850,-8.240932,2.279399,-6.187679,-2.073955,9.283193,-8.022244,5.175033,9.999228,1.497100,2.586973,-4.742593,7.120220,9.548047,-9.331733,-3.754271,-4.905029,9.639315,1.120546,-6.933117,0.825222,6.822463,6.056304,3.891919,-8.085113,-5.889733,2.908327,1.430079,2.732954,-7.217008,8.196139,4.518154,0.700080,8.431524,-8.333224,-1.709646,8.364480,8.631342,3.492718,0.956608,4.176948,3.165695,-1.856198,-4.537381,-6.479431,3.261765,2.852751,3.916361,5.576201,7.818395,-1.675336,0.296420,-7.531190,-2.584691,1.376749,2.906394,4.305648,-7.214071,8.097534,2.083009,2.547874,2.779318,6.927143,9.232774,5.046500,-5.976531,-6.713090,9.366201,5.589573,-7.361236,5.547548,4.565649,1.331903,-3.650397,-6.275961,-8.380532,-9.884560,2.903605,-0.347524,-5.877602,3.805928,7.671601,-3.260556,-8.566337,-9.646978,-5.563830,-1.227419,7.987306,4.089429,-9.226858,3.948695,1.982412,-3.634426,-5.455544,5.313597,-7.223406,6.781352,0.036489,-2.340878,8.819211,-3.328633,-5.088277,-4.200243,-0.234528,6.218588,0.955198,3.076422,-7.359542,0.555020,-5.417108,4.384200,-8.799210,-0.475763,-1.363509,9.024815,-3.490038,-6.624727,3.327095,-9.182288,-6.338632,-4.426286,-3.225608,1.762063,-0.735632,8.714865,7.746466,0.224351,-5.987777,3.402874,4.195631,-1.294281,7.451099,-0.074608,5.354322,-8.769452,1.454411,-3.405994,0.978793,-6.058185,-7.773060,-5.547132,8.305453,7.514858,-0.460749,-8.471699,-1.940095,7.478078,3.915225,-3.787418,-9.544988,6.152321,5.255719,5.755056,0.076383,-3.750325,-8.423886,5.330511,7.676294,0.905136,-5.141572,1.202065,-4.135183,-9.986220,-8.584765,4.087331,6.893849,-5.919572,-2.163160,1.908470,-4.281668,6.881117,0.382600,-0.532100,-6.955605,-4.085515,4.019717,6.640383,-1.894846,-5.664796,-1.389109,2.282858,-7.071561,-0.454976,0.259869,-4.032255,-0.821509,-1.307443,-7.022556,-1.141620,-2.706788,5.661039,-5.520812,-5.228194,-7.224605,9.420895,-7.893299,7.235825,2.230889,4.898403,6.435178,-4.462311,3.353995,5.486556,8.931855,-0.111730,-8.372703,5.601477,-2.163871,9.862882,-8.735108,3.250609,6.391833,2.640475,0.817370,-2.509325,-0.101499,-2.549918,5.616967,-8.065198,3.859081,9.823373,-2.067449,-0.621944,-6.870765,-6.253947,-4.165885,6.432996,-5.314406,-0.709362,3.219681,-2.634412,9.423220,2.164252,2.450888,1.528795,4.573707,-0.032689,-4.825422,-5.551907,1.319035,3.719399,5.136863,4.483050,-0.943217,3.351400,-6.758003,8.885097,-1.553720,1.734312,-5.591204,-8.075380,6.765972,-4.674300,7.024882,-7.772088,6.989246,-7.324349,-2.830664,-2.085974,-3.369979,-3.049143,2.221424,-9.921941,-9.100248,7.797462,3.540013,-7.487535,3.613433,-5.249005,-8.631362,7.479409,-8.131799,-4.500131,2.409862,3.322105,-8.565775,2.677285,-3.118333,0.835970,7.356001,5.820249,-0.571692,6.950811,-5.166042,-2.422016,-1.460238,-1.429923,0.692797,8.894857,7.054004,-3.985452,-2.806166,-1.014082,-2.367158,8.722485,-3.887759,-7.812502,6.441910,-7.787859,1.552195,-4.485528,-8.669763,-7.440314,7.682735,5.051786,2.612545,-5.281809,2.576991,-3.536482,-1.731576,4.859225,-6.264986,4.930436,6.691129,-1.508296,-8.571816,-7.242376,1.488853,-8.619839,-1.829487,-4.565336,-7.346696,9.219250,1.839307,7.173142,8.834262,-3.615385,-2.504325,9.623722,-2.305587,-1.159098,-7.391376,7.157204,2.652371,-2.075878,0.358807,0.107278,5.526179,5.685572,-8.630337,-0.621544,4.425716,-6.692378,-0.517621,4.439795,7.652551,0.179961,-4.025598,7.555249,4.759905,4.545319,-5.179285,-6.510561,7.737070,-7.016956,-0.622883,-7.428395,-8.557428,5.418844,-1.914228,9.481987,-6.847628,-5.709305,9.848259,-8.768480,2.174742,-9.567284,3.719861,-0.731826,-8.572454,-8.962442,5.972439,2.900606,1.369485,3.536286,7.804443,1.846242,0.191281,9.646515,-5.522915,9.350819,2.599956,0.397993,-0.759858,-5.185797,6.161489,2.038492,7.991624,-3.755343,6.137368,-1.028922,-1.216039,-3.526386,8.502585,-1.378475,-7.485870,-4.599397,5.702914,-0.439138,2.788492,4.608185,9.946338,0.868101,0.176133,-9.016234,8.607193,3.168960,-9.860883,-3.826086,5.090105,5.044494,-0.997336,-0.969489,-4.202317,-4.551492,1.841481,-9.739804,-2.220375,9.506362], dtype = "float32")#candidate|768|(800,)|const|float32
call_767 = relay.TupleGetItem(func_490_call(relay.reshape(const_768.astype('float32'), [5, 16, 10])), 0)
call_769 = relay.TupleGetItem(func_492_call(relay.reshape(const_768.astype('float32'), [5, 16, 10])), 0)
func_673_call = mod.get_global_var('func_673')
func_675_call = mutated_mod.get_global_var('func_675')
call_783 = func_673_call()
call_784 = func_673_call()
var_796 = relay.var("var_796", dtype = "float32", shape = (10, 9, 5))#candidate|796|(10, 9, 5)|var|float32
bop_797 = relay.left_shift(call_783.astype('int16'), relay.reshape(var_796.astype('int16'), relay.shape_of(call_783))) # shape=(10, 9, 5)
bop_800 = relay.left_shift(call_784.astype('int16'), relay.reshape(var_796.astype('int16'), relay.shape_of(call_784))) # shape=(10, 9, 5)
func_471_call = mod.get_global_var('func_471')
func_472_call = mutated_mod.get_global_var('func_472')
call_806 = relay.TupleGetItem(func_471_call(), 0)
call_807 = relay.TupleGetItem(func_472_call(), 0)
output = relay.Tuple([call_753,call_767,const_768,bop_797,call_806,])
output2 = relay.Tuple([call_754,call_769,const_768,bop_800,call_807,])
func_810 = relay.Function([var_796,], output)
mod['func_810'] = func_810
mod = relay.transform.InferType()(mod)
mutated_mod['func_810'] = func_810
mutated_mod = relay.transform.InferType()(mutated_mod)
var_811 = relay.var("var_811", dtype = "float32", shape = (10, 9, 5))#candidate|811|(10, 9, 5)|var|float32
func_810_call = mutated_mod.get_global_var('func_810')
call_812 = func_810_call(var_811)
output = call_812
func_813 = relay.Function([var_811], output)
mutated_mod['func_813'] = func_813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_673_call = mod.get_global_var('func_673')
func_675_call = mutated_mod.get_global_var('func_675')
call_815 = func_673_call()
call_816 = func_673_call()
func_421_call = mod.get_global_var('func_421')
func_423_call = mutated_mod.get_global_var('func_423')
call_820 = relay.TupleGetItem(func_421_call(), 0)
call_821 = relay.TupleGetItem(func_423_call(), 0)
func_604_call = mod.get_global_var('func_604')
func_606_call = mutated_mod.get_global_var('func_606')
const_823 = relay.const([7.266589,-3.154054,-6.869141,9.634870,1.228803,-7.104214,9.167783,8.169894,3.507879,4.769517,-8.130783,-6.710841,-2.620156,-7.178769,8.889249,2.618206,-8.899581,-6.248542,8.037568,-0.735784,-2.570135,5.075054,-6.792453,0.500113,-7.519256,-7.138542,6.448116,3.737105,7.027351,9.405856,-0.774295,4.337923,-2.626332,3.424310,3.841541,4.884257,-6.875924,-3.870120,4.265851,-6.861383,-3.186490,-3.902988,-1.733415,0.276641,7.653994,-9.862234,0.438147,6.789036,3.930007,9.632728,-7.586159,-9.951255,-1.269018,6.437055,1.164255,5.830910,-1.773368,0.684252,4.934493,-4.016935,7.448452,-0.877823,8.688808,0.350356,-5.016312,0.091308,4.738903,-0.971779,-2.363680,4.336724,4.119041,3.373048,-2.911827,-0.533562,-5.865070,0.869351,1.347244,-6.267790,8.947662,-1.450725,0.990113,-1.036241,4.142964,-2.390563,-8.121963,4.084211,-5.603329,-5.498183,6.076299,-9.328557,5.076784,-4.208649,-0.988103,3.500439,-9.372823,7.561358,-0.335120,-6.656491,-2.565730,9.311054,-5.818858,0.664176,-3.863535,6.723975,-3.031482,6.259379,9.406304,4.080063,-1.806195,3.184875,-0.966979,-4.966194,-3.704935,-8.954667,7.389168,-8.541388,3.919030,-0.347323,1.519477,2.096824,-6.172547,4.527997,-1.543851,1.863406,-0.382997,6.319968,1.359674,6.092085,-5.938136,8.922043,2.061768,0.046317,8.783363,-3.434842,-8.971761,-7.426265,-0.130934,-1.076084,-4.382235,-7.144271,1.059535,9.602606,6.233534,-9.522969,6.274975,-7.601710,1.350422,6.755214,7.641948,2.818690,6.707692,-0.172691,-8.036732,9.079406,-4.165394,1.252205,6.360000,1.520443,9.057732,2.732693,0.483364,1.757064,7.081456,4.929936,1.192626,-4.737484,-8.338472,-5.596597,-4.123064,-5.563786,3.155422,-2.102218,-3.142822,-1.126327,0.502654,-1.274533,5.476968,-8.943149,-6.917937,0.214083,-1.095329,9.462974,9.198189,3.936926,6.720054,-1.696780,9.719109,3.508785,-6.280339,9.695470,1.899295,-8.687725,-8.275329,-7.026979,-2.252976,-9.679017,8.274085,-7.976450,5.679275,-5.291970,0.440357,-5.901185,3.957281,-7.904078,0.925012,-5.252243,-6.031898,8.243844,6.941508,2.178794,6.117068,-7.113198,1.869164,8.453511,7.500484,5.592282,0.118804,2.249662,-8.123674,-1.055057,-6.341070,-0.341976,-3.041632,3.984051,2.706317,2.389418,-1.306177,-7.606364,-1.332051,-3.021242,5.487197,-3.037370,6.940659,-0.392467,-5.869706,7.066069,5.570928,3.681547,0.338291,1.986408,2.965286,-3.511711,-6.934369,-6.286459,-0.635006,-0.301568,-9.687892,-4.650535,0.019524,2.212935,-3.301362,-0.871959,7.992364,7.152219,-7.725506,0.976006,3.573327,2.998676,-4.465605,4.186832,-8.139190,6.495188,-3.888913,5.673378,-8.136749,9.943621,7.671794,-2.968130,8.605689,-9.182932,-7.551207,-8.521388,0.306904,3.335912,8.342308,-9.907980,7.626301,-5.422478,-7.824260,3.665985,3.488234,7.244519,-8.892907,9.482242,5.196207,0.942112,1.344822,4.397507,5.343300,6.178565,7.003524,-8.911692,4.162477,1.452357,-1.437206,-0.363713,3.359551,5.220418,1.561935,-3.545643,-4.487738,-4.683318,8.238985,-1.243591,-2.185285,6.996883,8.967076,-6.776228,-5.522569,-6.143052,-6.329088,-0.533192,-7.205275,2.200772,-5.553901,-0.270228,6.923120,6.476360,1.562068,5.743909,3.191815,8.972830,5.610083,3.408675,5.923288,-1.232481,-6.179955,-8.109551,-0.545719,-5.956561,3.280948,9.534735,8.709056,4.035880,-3.092585,-3.185377,5.055122,4.636542,-6.919037,-0.736787,-1.788794,5.947435,-0.121176,-2.076792,-1.986558,8.860599,0.701948,-9.600341,8.766325,7.460892,9.032642,6.696177,-9.289632,9.229653,2.400474,-6.540339,-7.979990,-6.731733,5.939445,-1.027271,8.307182,3.336785,-3.389203,0.085765,7.109179,-3.774599,9.615646,6.816419,-6.250162,-8.220672,4.211409,8.588983,-7.635477,-0.388272,-8.452856,4.233845,-6.960059,1.607589,0.633292,3.080308,7.431149,2.689648,3.708933,-0.674353,6.215184,-7.571990,-9.806432,-2.699545,2.971714,-7.848428,7.735971,-9.964640,6.622528,4.208447,-4.653437,9.464603,-6.845988,-1.924149,-2.273716,9.021482,3.038689,-5.118485,3.107144,9.192852,8.117756,0.008319,4.998030,-1.175197,4.727240,4.197182,-3.346069,1.090439,4.522212,6.297059,6.552486,2.102166,-1.787098,-5.843360,0.839269,-8.354210], dtype = "float64")#candidate|823|(420,)|const|float64
call_822 = relay.TupleGetItem(func_604_call(relay.reshape(const_823.astype('float64'), [6, 14, 5])), 3)
call_824 = relay.TupleGetItem(func_606_call(relay.reshape(const_823.astype('float64'), [6, 14, 5])), 3)
output = relay.Tuple([call_815,call_820,call_822,const_823,])
output2 = relay.Tuple([call_816,call_821,call_824,const_823,])
func_825 = relay.Function([], output)
mod['func_825'] = func_825
mod = relay.transform.InferType()(mod)
mutated_mod['func_825'] = func_825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_825_call = mutated_mod.get_global_var('func_825')
call_826 = func_825_call()
output = call_826
func_827 = relay.Function([], output)
mutated_mod['func_827'] = func_827
mutated_mod = relay.transform.InferType()(mutated_mod)
const_870 = relay.const([[[3.430774,-1.864184,-7.667558,-4.257972,-4.361756,-5.719723],[7.302656,8.080746,-4.392249,0.755325,0.838980,-0.745506],[-7.542491,8.031533,4.750219,0.149039,6.216616,-3.602573]],[[-0.011542,-3.143220,-0.228861,-3.932456,1.262858,8.807600],[4.910556,6.866230,-6.655736,-5.113900,9.419938,1.923301],[7.582298,3.433839,-4.644633,-3.006924,4.704264,8.228621]],[[9.696168,2.479257,2.033433,-4.565022,5.942857,7.959860],[5.318737,6.991871,1.209783,3.500777,8.404478,-8.217940],[4.841237,-6.659545,7.265232,-9.996689,2.951712,-0.375311]],[[-5.315187,-7.376539,-6.563630,1.079507,3.441592,0.838726],[6.209758,4.598286,2.772045,8.063917,-8.396441,9.818624],[7.517008,-7.931145,-8.161860,-6.021222,-3.006628,-8.521954]],[[-5.315888,-2.234951,-6.795250,9.586643,2.594530,8.293952],[-1.502960,7.590499,-7.658732,-9.340226,-6.889607,6.601350],[1.407330,-5.656313,-3.966636,3.051534,-7.419777,-9.903068]],[[8.362070,5.574746,1.538253,7.985819,8.730599,-8.768586],[-7.857649,5.147875,-7.625981,8.387322,-3.908712,4.935965],[-1.938609,-1.953145,-3.585697,-1.961199,-0.740807,-1.131549]],[[-0.894552,5.279249,-9.482472,0.033934,-6.625231,-7.440749],[3.391276,2.904354,7.744545,-6.081392,2.587376,-7.750682],[-1.493400,8.432372,-8.443044,-9.840104,1.465487,-2.559675]],[[5.815231,-6.095129,7.387838,-6.527627,-5.006217,-6.219837],[-8.227984,-1.371853,5.315658,-3.358703,3.379466,-8.256298],[6.039399,-6.735796,-8.502055,8.014294,-4.815793,-7.545887]],[[-3.087511,6.320239,-6.003085,-6.346970,-4.286765,-8.597069],[4.933827,3.043430,-3.886315,9.708552,-2.692790,-8.402939],[-7.844355,6.716478,-5.295567,-4.228624,-1.746939,8.650658]],[[-4.568894,-8.188130,-4.741846,-6.642085,8.392360,-1.831559],[-4.314737,5.054467,5.718738,1.929537,9.266183,0.723456],[-9.600509,-6.239733,6.728574,7.720255,2.329415,-3.004889]],[[-1.767367,-6.773586,2.035646,2.293191,-4.438626,-5.457909],[9.580765,0.403513,-3.741628,-5.008664,1.301612,-7.388515],[-2.445872,-3.512946,4.249387,-2.716812,8.440316,6.450476]],[[1.099025,-8.453936,0.136490,-1.110625,8.449320,-8.468490],[-8.103530,-0.543496,9.128799,-8.795569,6.905175,-5.005405],[9.640140,-3.285876,8.235238,5.537008,4.699663,-4.795993]],[[2.017432,1.124983,-7.814512,-3.434664,-7.495438,-8.857618],[7.795371,2.295336,2.632960,8.000050,-9.823592,-8.513386],[8.239748,1.156648,9.158432,-0.471736,-0.702270,3.136484]],[[5.327776,7.677544,8.451771,1.483177,-8.180410,9.133165],[-6.108705,-1.264977,-7.697724,-0.148625,1.648779,-3.586807],[7.201181,9.077287,-7.279891,4.580685,-2.839458,4.768310]]], dtype = "float64")#candidate|870|(14, 3, 6)|const|float64
uop_871 = relay.sin(const_870.astype('float64')) # shape=(14, 3, 6)
output = relay.Tuple([uop_871,])
output2 = relay.Tuple([uop_871,])
func_873 = relay.Function([], output)
mod['func_873'] = func_873
mod = relay.transform.InferType()(mod)
mutated_mod['func_873'] = func_873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_873_call = mutated_mod.get_global_var('func_873')
call_874 = func_873_call()
output = call_874
func_875 = relay.Function([], output)
mutated_mod['func_875'] = func_875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_471_call = mod.get_global_var('func_471')
func_472_call = mutated_mod.get_global_var('func_472')
call_884 = relay.TupleGetItem(func_471_call(), 0)
call_885 = relay.TupleGetItem(func_472_call(), 0)
func_873_call = mod.get_global_var('func_873')
func_875_call = mutated_mod.get_global_var('func_875')
call_902 = relay.TupleGetItem(func_873_call(), 0)
call_903 = relay.TupleGetItem(func_875_call(), 0)
output = relay.Tuple([call_884,call_902,])
output2 = relay.Tuple([call_885,call_903,])
func_904 = relay.Function([], output)
mod['func_904'] = func_904
mod = relay.transform.InferType()(mod)
output = func_904()
func_905 = relay.Function([], output)
mutated_mod['func_905'] = func_905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_873_call = mod.get_global_var('func_873')
func_875_call = mutated_mod.get_global_var('func_875')
call_938 = relay.TupleGetItem(func_873_call(), 0)
call_939 = relay.TupleGetItem(func_875_call(), 0)
func_421_call = mod.get_global_var('func_421')
func_423_call = mutated_mod.get_global_var('func_423')
call_943 = relay.TupleGetItem(func_421_call(), 2)
call_944 = relay.TupleGetItem(func_423_call(), 2)
var_945 = relay.var("var_945", dtype = "float64", shape = (14, 3, 6))#candidate|945|(14, 3, 6)|var|float64
bop_946 = relay.floor_mod(call_938.astype('float64'), relay.reshape(var_945.astype('float64'), relay.shape_of(call_938))) # shape=(14, 3, 6)
bop_949 = relay.floor_mod(call_939.astype('float64'), relay.reshape(var_945.astype('float64'), relay.shape_of(call_939))) # shape=(14, 3, 6)
func_471_call = mod.get_global_var('func_471')
func_472_call = mutated_mod.get_global_var('func_472')
call_966 = relay.TupleGetItem(func_471_call(), 0)
call_967 = relay.TupleGetItem(func_472_call(), 0)
bop_971 = relay.left_shift(call_943.astype('uint32'), relay.reshape(call_966.astype('uint32'), relay.shape_of(call_943))) # shape=(4, 196)
bop_974 = relay.left_shift(call_944.astype('uint32'), relay.reshape(call_967.astype('uint32'), relay.shape_of(call_944))) # shape=(4, 196)
const_979 = relay.const([[5.120196,-5.325802,-9.245523,-9.765206,1.970288,-4.521299,-2.191545,2.111438,-2.337523,7.423288,9.530093,1.967370,-9.584534,-3.248258,-8.778766,7.127728,-6.863097,2.125247,3.863896,-7.860105,-3.262700,0.703606,7.660375,-9.074015,9.795997,4.837898,8.502359,7.670438,-3.352876,-4.211654,-0.654803,-0.392635,-5.000030,0.711033,-7.609989,-8.990704,4.132144,7.838767,-0.628751,-5.727023,2.984575,-3.512731,-9.976057,-9.101969,-4.290834,2.218285,1.077741,9.370388,-9.698162,8.101045,-1.170330,4.343368,9.118094,-3.692667,-4.081221,7.101112,-8.581826,-4.704542,-8.712587,1.964869,-1.445671,9.710125,1.925130,2.318086,4.865233,-3.429194,-5.540398,9.296731,-3.974357,-2.351081,8.452367,-5.915987,8.135055,-5.812813,0.251318,-8.720546,8.543678,0.551432,-9.879327,-1.880464,-3.079806,6.658315,-5.652269,-5.331885,7.506268,8.525014,5.926555,-8.873832,9.309291,-8.493730,6.970835,-3.258241,-4.247165,1.805299,-3.222145,-8.815413,-8.609961,3.309694,1.687074,5.049381,-8.911501,1.878970,-5.666180,9.162197,-2.139393,-5.436782,-5.741454,-5.755366,7.703269,-8.024556,5.809312,-3.754904,-6.545264,-9.581446,6.053924,-5.090432,9.126448,5.911744,-8.130009,1.047536,-0.213184,-0.763124,-7.164205,5.706886,-1.327824,4.236680,1.165835,6.968203,4.041849,5.180162,2.042341,8.498221,6.138064,-2.469749,2.000709,-5.766646,6.674727,-1.201343,-1.706730,1.611998,9.212608,-3.727033,-7.222048,4.143838,-5.771312,8.013981,-6.684898,-9.971458,0.306413,1.692452,-1.284514,4.251706,-9.287748,3.485258,9.134310,0.759004,8.105774,6.948118,0.608937,8.018445,2.339402,2.042063,7.465328,7.138217,-3.662200,1.413871,3.800376,0.216879,1.121758,-0.441920,6.596333,4.642442,2.297877,2.612691,7.762434,-0.953399,3.548047,8.162786,8.011427,8.785728,2.214839,-7.277775,8.001952,0.273173,-6.518894,-2.890232,6.528055,-9.975653,-9.320636,-5.131302,0.128375,6.273804,-4.525866,7.147735,2.074449,-9.368844],[-5.179942,8.633931,-1.603347,-0.777146,-1.920775,-8.280590,-3.666354,8.155645,-0.630363,0.711896,-7.123346,-9.247198,9.658236,2.902044,7.651491,1.702433,-2.439325,6.112238,7.932284,-1.041492,-2.231675,-2.535180,1.876392,-1.445035,8.170036,7.095694,-3.969726,-5.321010,-2.409223,-4.179273,1.041169,6.198950,4.458685,-4.220938,-1.318935,-2.112017,-9.905656,2.615417,-0.779935,1.411294,4.362665,-4.660693,5.535531,0.726956,-5.305369,2.086243,-8.494486,7.449780,7.577178,-3.135281,-9.425775,0.725521,6.491313,9.612893,-0.959867,5.489945,6.847385,0.988477,0.436329,-4.251893,-2.780226,6.237230,-6.649264,-4.285121,9.001036,0.400458,-0.576628,-3.493310,-7.468656,7.531646,-7.144915,-5.422326,-7.727090,-4.345866,3.513883,8.611258,-8.640459,-2.602197,-9.052760,9.813698,3.351007,8.551499,9.526363,-4.901650,7.989282,-0.255945,-1.231613,-3.685874,-4.390953,-7.647385,7.538497,3.584369,4.375096,1.916685,6.081483,5.715332,2.796348,-8.935446,-8.180785,-9.150976,-5.171967,9.832206,-4.336821,-8.223579,1.340158,-2.295930,-1.265719,-3.245177,5.940703,0.869637,-6.880559,9.222676,-2.749841,-4.963384,-7.682486,-1.907406,7.935051,-4.468093,8.606829,-8.572028,3.875274,-7.681742,9.442583,1.586243,-1.080477,2.132634,9.423165,-8.558987,-2.303958,-3.683035,-3.605487,5.270574,7.105823,0.743449,-1.749749,7.663516,-3.174013,-2.599444,-7.747945,-0.378992,-6.197737,-2.742113,-3.436090,0.305944,5.726185,-8.821259,0.686138,-3.351666,7.924079,9.148806,3.247124,4.181903,-1.180449,4.199387,-1.248264,0.506097,5.020954,-1.739288,7.412407,-5.922887,-3.482570,-5.425089,2.209249,-8.448360,-1.824618,-7.067508,-5.223098,2.576233,5.964535,2.675476,-5.517482,4.994706,-5.964439,2.525165,0.423474,0.905905,-8.313347,7.409367,-5.032398,-5.189991,-0.754695,-4.032583,8.121059,0.286880,1.133928,-9.440293,-2.624915,0.785883,6.032859,-8.896807,1.414026,-4.511952,4.714717,7.115659,0.328634,-8.764466],[-1.146038,-1.164584,-3.221171,0.869961,4.199774,3.681051,3.498476,-7.021172,6.302670,5.112954,-8.569090,3.369738,-3.022507,9.026324,-1.608712,4.936105,2.888272,-8.898712,1.738855,4.345979,9.547111,-2.005570,2.694425,-7.402478,7.302221,5.231714,7.637478,7.100081,0.557703,-4.063866,-7.787485,2.061446,3.502515,8.092490,2.067961,3.820563,6.786715,3.120604,9.793964,-6.581016,5.720076,-5.176375,-8.696778,-2.364074,2.617120,3.463848,-6.764616,3.907617,7.498627,4.283024,3.214938,1.927324,-0.560590,4.431340,-5.100846,7.615023,-7.551575,7.120837,6.435313,-2.328814,-4.627957,4.539292,-5.024297,-7.519982,4.756611,-5.221456,7.586100,-8.342406,-3.367372,4.442570,8.780693,3.096049,-7.001453,-8.819750,-7.874858,-1.076846,-9.798090,-2.140080,-8.903860,-2.291440,-4.057804,-1.428701,5.502663,4.478813,3.139288,-3.567012,8.996196,-9.698936,-9.978728,-7.151635,9.453957,5.680501,-1.904367,5.279502,2.572375,-2.458984,-3.780775,4.632325,9.899872,-4.156858,6.754421,8.027372,-1.527232,-2.864939,-7.765258,1.599159,-0.045865,-2.615100,-6.000669,0.718668,3.871028,5.292538,5.078969,8.430198,-7.976947,7.739499,5.678386,-3.540220,-8.117963,-9.938422,3.860401,-4.461111,9.229757,-1.912097,-3.993384,1.386916,-8.906562,-7.510484,2.209384,-1.124844,9.849180,8.358783,0.784411,-8.090458,-8.844746,-2.846792,-3.103439,1.335718,6.270543,-3.967346,-3.716045,-9.022349,-5.725465,-9.294221,-3.375185,5.815048,-1.291783,-7.074062,5.184651,0.491546,-6.730934,5.614780,-7.306747,-2.354093,2.587777,-1.280207,-3.549503,-8.017041,7.792255,-9.363789,3.019888,4.924442,-3.400795,2.409150,-8.603693,7.032327,4.192014,1.507418,-0.814765,4.916177,-3.960573,4.683551,-6.912762,-9.374835,-4.295246,-9.999915,-5.971246,3.786822,9.078885,-0.760405,0.944719,-7.617244,1.879023,-9.357025,4.493695,6.510670,4.578767,-5.074874,-0.395423,3.076290,0.304176,-2.848373,7.969219,-7.812544,3.277941,-2.789427],[2.978533,0.498852,9.076205,-6.018176,1.279097,-2.431037,-8.661672,1.877694,3.835293,4.272181,-1.128952,6.607297,8.896919,-8.216156,-1.560756,0.753340,-9.399550,-8.170474,-3.275922,-5.695927,-3.059578,7.271610,-2.674713,0.150481,8.798167,-8.439236,6.206187,-2.970792,-4.638644,3.740692,4.197101,-8.172596,8.138079,2.627765,5.925578,7.654104,9.961617,-3.410746,6.718146,2.354315,-5.055653,-9.958367,3.083413,-2.776900,-6.749166,2.352238,-4.621258,3.310870,-5.425156,8.022080,-9.751426,-4.938407,5.663897,0.536457,-1.739620,-0.228014,4.914316,-3.153100,7.939288,-0.515130,-2.090170,9.933921,2.357545,-3.047189,-2.758898,3.455104,1.614793,-2.291602,-0.064875,7.781199,-1.396560,0.097814,3.713214,5.105048,-3.758120,-4.547479,8.715950,1.111468,-4.909329,-2.319343,7.274822,8.544100,6.537400,-5.813802,-1.063974,0.923643,6.598918,-5.769836,-8.933975,1.065060,2.857314,-3.803399,2.804480,5.712245,5.333653,-1.920050,8.258766,3.445965,7.457809,-4.337799,-3.292694,7.521866,-4.099848,-3.889587,9.492571,7.493946,9.820421,2.658192,2.060626,-1.277773,-1.205471,9.676187,-6.028211,6.321277,-6.436664,9.100068,1.277617,-3.493567,-1.591782,-2.723263,-7.862090,-7.182565,5.530112,9.373609,-5.933629,-8.929566,-0.420031,-0.167913,-5.419619,2.522715,0.617749,5.545635,8.450309,-1.312483,-5.610680,0.762769,-1.648227,-2.645151,9.258465,-1.147953,0.900337,-6.234168,6.267118,1.291731,-8.256937,-1.821159,6.265853,-1.246574,-1.093762,2.904341,-7.208073,9.291758,-6.360980,-8.702046,1.347031,-6.604710,3.608218,7.495689,8.962277,7.632992,2.305469,-7.686983,0.771123,0.595132,5.332888,8.851119,8.829723,6.965185,-7.045879,0.052933,-1.860467,2.651575,-0.609240,-7.417936,6.780537,-7.642260,-6.111063,8.216046,2.232597,8.785185,6.103154,-3.236279,0.649616,0.454998,-3.898252,-9.594681,-6.119409,-3.932873,-9.539398,-2.914235,-1.557208,-8.733627,8.585917,7.008611,-3.165507,-2.424051]], dtype = "float64")#candidate|979|(4, 196)|const|float64
bop_980 = relay.power(call_943.astype('float64'), relay.reshape(const_979.astype('float64'), relay.shape_of(call_943))) # shape=(4, 196)
bop_983 = relay.power(call_944.astype('float64'), relay.reshape(const_979.astype('float64'), relay.shape_of(call_944))) # shape=(4, 196)
const_988 = relay.const([[-9.797526,-5.343626,-2.404245,2.683466,-3.208807,0.495176,-0.267014,-3.367677,-7.095339,2.825359,5.254525,6.506846,4.218260,1.373942,-4.176002,-1.504837,6.757803,-3.623512,4.104585,1.478778,-1.274823,-4.610977,-4.607333,-4.302337,1.203903,4.711746,-6.783802,-1.898711,-2.284640,-4.885119,0.885849,-0.573831,8.852759,-5.874205,-5.064813,2.845605,1.541605,-5.670070,-8.567920,-1.897775,-9.804273,-7.347071,-6.192142,-5.387559,-7.444567,-7.638812,6.472482,-4.613742,5.072615,4.712222,5.744300,-7.629565,-5.640129,-4.936884,-0.871891,-4.166872,-2.496800,1.223341,-0.981046,-5.180249,-7.642098,-6.721310,6.999763,1.300060,0.467163,-0.208569,7.230528,5.364510,6.647383,-1.137857,4.742567,-0.970025,3.285232,-7.698917,4.764294,0.811420,4.999815,6.360225,-5.460848,-6.412013,9.710816,-3.999812,1.273857,9.836586,5.880298,-2.828848,-0.396873,5.955409,2.150500,0.406554,-8.340103,-6.841893,-7.297813,-4.989799,-6.423931,8.956763,5.303950,-1.168185,4.566263,-7.386273,1.974123,1.819827,1.398670,-4.700352,9.210907,-9.090436,-0.498420,0.537916,-4.757034,1.357798,-7.698063,1.094467,8.191588,8.321433,0.188372,0.574869,-4.631082,-6.583131,6.723613,-6.179452,9.113453,-6.855549,-9.487652,-2.246513,2.297816,4.912193,-2.013208,-1.844951,0.171244,7.374964,7.424343,8.421343,1.254371,6.569804,-0.497449,2.287625,-3.323548,2.840202,-5.546708,-9.570583,-2.418812,1.438240,-2.052601,-1.628417,8.067361,-4.001482,-5.686225,9.896867,3.338383,7.340283,-7.000394,6.908347,-1.873373,9.413849,3.039349,3.686458,-0.106115,-3.454543,-3.215551,-2.214269,-4.221358,-6.948147,-3.141281,3.255206,-5.116308,-0.686621,0.869717,-1.924228,-8.423161,-3.172291,6.910926,0.703866,0.206568,-9.670545,-2.098742,0.102206,7.136433,-3.533764,6.639124,0.561223,-4.104564,0.440293,-1.634384,0.922662,2.617561,-5.449083,5.102605,-2.390255,4.270456,-9.677770,7.821208,1.576058,3.323069,9.441876,0.829269,5.234308],[-0.699017,2.947503,-3.879731,9.129177,2.784483,-5.208494,-1.221982,1.344922,1.997281,9.274363,9.075670,2.135480,-9.540534,-8.232280,0.979171,0.343867,-1.606898,-7.084130,-3.013278,-6.042963,1.404893,-7.430328,-6.906549,-1.890530,-0.670107,-0.887773,-0.712676,-2.923919,-1.817303,-6.530009,-0.406323,0.156401,-7.243673,0.312967,-1.302290,-0.157775,-6.692269,6.752046,-8.560694,-8.803082,5.557456,8.890982,-6.843025,9.333759,-7.165561,1.366189,2.904807,4.692665,-9.627177,-8.977416,-1.002342,1.597849,-8.450620,9.300115,-1.217207,0.466632,2.373742,6.513018,-9.235444,-9.639939,-0.903975,-6.363228,8.129085,6.116352,-0.038892,-8.112984,4.028823,-5.203090,-9.967684,-9.578526,4.862073,-7.936967,-8.728179,7.287264,-5.285091,9.322148,2.116631,5.746942,7.110104,-4.626107,-3.730463,4.868123,-4.206607,3.154025,0.876800,2.576399,1.541295,3.433182,7.321979,9.765666,6.148428,-0.553446,-8.310860,2.998944,0.545890,1.185894,-3.923392,4.649959,-2.962842,2.247821,-9.573928,8.419443,-5.768468,-9.364351,0.664705,-7.211358,-3.420286,9.420131,-0.814443,7.708445,-4.603502,7.913849,8.115036,-2.307537,-5.858078,8.463336,-4.228216,-0.646993,-3.756784,9.356189,-1.802695,-3.630555,-5.835689,3.030866,-0.208118,-2.852924,-6.392223,9.389536,-1.516866,2.592534,6.398104,-1.326762,9.437886,-1.643676,6.986886,7.291891,8.970637,-4.766066,6.693107,-9.301272,-4.440387,4.562704,0.345751,-5.860305,-3.297378,-0.788380,3.812122,7.695351,6.251167,-7.697934,8.289347,7.898654,1.353040,5.855966,8.802235,-0.474730,-7.595857,-8.008447,-7.838885,-7.512200,7.807618,-9.514761,4.015090,3.989152,5.586265,4.353109,-9.760456,-9.779872,-3.427618,-8.403402,6.695893,-5.314779,-8.088546,1.119929,2.377075,6.950408,-3.949400,4.690957,-7.291793,9.367891,-2.996063,-4.989597,6.915718,-2.500930,-0.657261,9.961744,8.538501,-9.180702,1.771373,-0.842876,5.178409,9.897231,8.053501,3.448646,2.864934,-9.961879],[6.985504,-0.984665,2.045838,-5.914035,-0.887221,0.655100,6.671134,9.549634,-0.702022,-0.425978,-7.052413,2.849144,-8.275765,1.341625,8.747977,-4.164529,-4.059190,1.854875,1.089348,-3.474813,-4.902386,-7.071957,4.521732,-6.810580,4.269486,1.095704,-8.578308,-2.199054,3.311275,-4.309248,2.565040,9.381436,-4.471905,5.950931,-5.967391,9.045795,2.504923,1.062682,8.245654,-3.106159,-9.088799,-5.341008,0.977298,7.446090,-1.983366,1.985607,-3.128144,-3.014238,-7.328873,8.893285,1.419767,8.456294,-4.195519,0.466959,-6.532003,-3.672717,6.643957,7.511392,7.378573,2.496130,-0.330824,9.508893,6.149224,7.325190,3.201079,-2.199123,8.570471,-5.906675,-2.126261,-7.301816,0.231111,1.199792,2.255828,2.669061,-3.724269,4.426820,-1.223348,7.465366,-0.712061,4.003908,2.231160,-9.356001,8.591695,-8.923653,-7.275805,-9.907674,-4.289120,-5.642695,-8.819606,-3.331382,-9.063358,6.912850,3.660782,-7.883407,-0.889899,3.818302,5.629694,-9.055631,-8.508539,8.147875,7.873624,4.039637,2.202077,-5.172525,9.285850,-3.403193,-6.194487,-3.818731,8.884113,8.838699,-9.855081,6.360079,-8.877889,-0.771327,0.946054,7.333499,5.352486,-3.435959,-0.408306,-7.209673,2.510827,8.769872,1.499122,1.516265,-0.114037,-4.821709,-0.630065,-2.918484,2.342495,8.893777,-9.273604,-7.831841,7.608398,9.700513,5.418300,-9.491266,-0.348075,-9.373392,3.735679,-9.646782,-6.651127,8.378278,0.140674,1.017241,-3.533943,5.476383,8.522418,0.070188,-8.549592,-1.489242,-1.897495,-8.749415,-2.628103,-8.502867,3.019979,3.363919,8.324471,-3.785273,-5.814046,-1.874534,-7.540550,-0.526475,2.178993,4.232426,-8.809334,1.675417,-1.075080,2.634254,-6.180663,-1.153638,9.975674,3.185632,-6.733584,7.095910,8.637777,-3.821938,8.838636,8.125505,-8.751798,-7.384868,-4.770591,5.730361,8.985513,6.284913,2.896162,3.937186,4.439393,0.075913,-5.711706,-0.029276,-4.255446,-6.371797,1.691267,-7.046319,-7.496193,-6.754826],[-1.126953,4.927879,5.767798,6.253876,-4.252878,7.363615,3.253932,-5.125063,5.262470,0.625679,6.153981,7.510538,2.097102,-6.475598,-3.075543,-3.224564,-2.158246,-4.237756,-3.959057,-4.343204,3.402448,-9.507512,4.749592,-0.754017,-6.672845,-9.415371,5.799751,-5.306075,-9.077375,-8.125004,-3.052597,4.156464,-2.444722,-2.427221,-5.334606,-6.701983,-6.765742,-5.799465,2.543704,-9.531236,9.027433,9.810055,-0.847979,0.441343,-0.997355,2.713715,6.777071,2.971321,-3.819157,-6.120857,6.789650,-7.114174,-5.133650,6.388443,-7.913151,6.382917,-1.791330,-7.401835,-4.923362,7.962539,-6.905349,8.019647,-6.411440,6.681460,-8.482301,6.481724,-8.640383,5.201025,-4.895292,-9.162503,-9.899611,-1.976455,-9.327306,8.875237,2.647155,7.057263,6.259353,7.691915,-2.278828,1.245431,-6.170222,-7.339154,-5.599574,6.495224,-4.414644,3.027242,9.108624,9.549685,8.561339,9.635727,-5.098387,-7.844625,2.505832,2.783993,-6.133702,7.186498,6.181818,-4.399764,8.468476,-4.872650,1.601352,9.252789,-0.239159,0.992060,0.376774,-1.176363,2.892777,-7.969759,-0.489835,-5.420183,-3.232114,5.795367,6.868711,5.780846,-5.487018,-4.895192,-5.720625,-5.495477,2.266701,-9.250165,-6.603941,-5.360745,5.377344,8.322514,-5.412044,-6.772340,3.399704,-9.259498,5.578628,6.024446,7.895079,-2.889109,0.602087,-0.623523,-7.905204,-2.195142,0.595787,-0.054965,5.277006,-9.159049,-9.014659,-7.941294,7.770426,-3.713889,-6.452680,-5.224930,-0.986451,3.415687,4.256703,-7.762207,-1.894470,9.750779,5.935069,-3.500128,4.921277,-4.050201,-0.177865,5.289735,7.958314,-6.211145,9.473410,8.415113,6.638576,-7.151886,8.146672,-1.468401,0.501178,8.950502,-0.734054,6.265036,4.501117,2.180838,-9.578624,2.094681,-6.338985,6.852441,-0.678657,1.293068,-2.618081,-6.788407,-3.786327,1.390953,-2.151841,-5.081130,6.755165,-2.600568,5.317555,-9.606223,-1.232961,2.110599,9.813591,3.825957,-0.529987,-6.274205,-0.966331,-9.010111]], dtype = "float64")#candidate|988|(4, 196)|const|float64
bop_989 = relay.right_shift(bop_980.astype('int32'), relay.reshape(const_988.astype('int32'), relay.shape_of(bop_980))) # shape=(4, 196)
bop_992 = relay.right_shift(bop_983.astype('int32'), relay.reshape(const_988.astype('int32'), relay.shape_of(bop_983))) # shape=(4, 196)
output = relay.Tuple([bop_946,bop_971,bop_989,])
output2 = relay.Tuple([bop_949,bop_974,bop_992,])
func_1004 = relay.Function([var_945,], output)
mod['func_1004'] = func_1004
mod = relay.transform.InferType()(mod)
mutated_mod['func_1004'] = func_1004
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1005 = relay.var("var_1005", dtype = "float64", shape = (14, 3, 6))#candidate|1005|(14, 3, 6)|var|float64
func_1004_call = mutated_mod.get_global_var('func_1004')
call_1006 = func_1004_call(var_1005)
output = call_1006
func_1007 = relay.Function([var_1005], output)
mutated_mod['func_1007'] = func_1007
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1041 = relay.var("var_1041", dtype = "float32", shape = (15, 8, 15))#candidate|1041|(15, 8, 15)|var|float32
var_1042 = relay.var("var_1042", dtype = "float32", shape = (15, 8, 15))#candidate|1042|(15, 8, 15)|var|float32
bop_1043 = relay.floor_mod(var_1041.astype('float32'), relay.reshape(var_1042.astype('float32'), relay.shape_of(var_1041))) # shape=(15, 8, 15)
uop_1050 = relay.cosh(var_1042.astype('float32')) # shape=(15, 8, 15)
output = relay.Tuple([bop_1043,uop_1050,])
output2 = relay.Tuple([bop_1043,uop_1050,])
func_1053 = relay.Function([var_1041,var_1042,], output)
mod['func_1053'] = func_1053
mod = relay.transform.InferType()(mod)
mutated_mod['func_1053'] = func_1053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1053_call = mutated_mod.get_global_var('func_1053')
var_1055 = relay.var("var_1055", dtype = "float32", shape = (15, 8, 15))#candidate|1055|(15, 8, 15)|var|float32
var_1056 = relay.var("var_1056", dtype = "float32", shape = (15, 8, 15))#candidate|1056|(15, 8, 15)|var|float32
call_1054 = func_1053_call(var_1055,var_1056,)
output = call_1054
func_1057 = relay.Function([var_1055,var_1056,], output)
mutated_mod['func_1057'] = func_1057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_825_call = mod.get_global_var('func_825')
func_827_call = mutated_mod.get_global_var('func_827')
call_1256 = relay.TupleGetItem(func_825_call(), 1)
call_1257 = relay.TupleGetItem(func_827_call(), 1)
output = call_1256
output2 = call_1257
func_1259 = relay.Function([], output)
mod['func_1259'] = func_1259
mod = relay.transform.InferType()(mod)
output = func_1259()
func_1260 = relay.Function([], output)
mutated_mod['func_1260'] = func_1260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_825_call = mod.get_global_var('func_825')
func_827_call = mutated_mod.get_global_var('func_827')
call_1289 = relay.TupleGetItem(func_825_call(), 3)
call_1290 = relay.TupleGetItem(func_827_call(), 3)
func_873_call = mod.get_global_var('func_873')
func_875_call = mutated_mod.get_global_var('func_875')
call_1313 = relay.TupleGetItem(func_873_call(), 0)
call_1314 = relay.TupleGetItem(func_875_call(), 0)
uop_1323 = relay.erf(call_1289.astype('float64')) # shape=(420,)
uop_1325 = relay.erf(call_1290.astype('float64')) # shape=(420,)
output = relay.Tuple([call_1313,uop_1323,])
output2 = relay.Tuple([call_1314,uop_1325,])
func_1343 = relay.Function([], output)
mod['func_1343'] = func_1343
mod = relay.transform.InferType()(mod)
output = func_1343()
func_1344 = relay.Function([], output)
mutated_mod['func_1344'] = func_1344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_904_call = mod.get_global_var('func_904')
func_905_call = mutated_mod.get_global_var('func_905')
call_1356 = relay.TupleGetItem(func_904_call(), 0)
call_1357 = relay.TupleGetItem(func_905_call(), 0)
uop_1358 = relay.log2(call_1356.astype('float64')) # shape=(7, 8, 14)
uop_1360 = relay.log2(call_1357.astype('float64')) # shape=(7, 8, 14)
func_1004_call = mod.get_global_var('func_1004')
func_1007_call = mutated_mod.get_global_var('func_1007')
const_1362 = relay.const([[-9.177951,1.903273,-0.643656,-2.808698,-4.020219,5.252630,-0.239698,-2.769412,8.986723,-4.860796,6.409771,-8.122418,7.556480,6.130793,-1.494002,0.287602,-1.154817,8.122008,1.881701,2.114942,3.562126,8.364651,0.256346,7.651494,2.761793,-4.515480,5.203185,5.237769,-0.697240,8.766930,-4.166499,5.262647,4.827385,7.136337,-6.099322,-3.210249,0.729375,-8.605062,9.550809,7.450071,5.216657,-1.910413],[-1.597265,6.855652,-6.951011,-5.223323,-2.960475,-3.467067,-7.278225,-9.973386,-4.119038,-5.648768,-2.379969,-5.732271,-4.866332,-9.743940,2.936812,2.223042,-9.300914,-9.788364,8.376406,6.731233,-0.364064,7.271576,7.997683,-6.471367,-7.728458,-0.307858,4.671085,-6.854343,-7.994966,4.473906,7.230113,-9.821386,1.726716,7.679503,9.317574,-1.343187,-6.148288,-5.636397,3.002205,3.446768,3.457443,-3.132804],[-0.509460,4.752234,9.711486,6.725415,3.456507,2.152062,-1.094717,9.982938,0.254841,-4.395144,7.192706,-7.906212,7.296319,-5.006526,1.785314,4.811655,8.222510,-6.343719,6.489167,-3.624096,1.820707,0.204184,-1.690303,0.357617,5.613602,0.279898,-1.430189,9.768416,5.580576,2.687975,4.107405,-9.226852,5.662210,6.812279,-7.546409,8.271997,7.696281,-1.074324,3.047508,-9.177420,9.505814,7.440137],[4.949399,0.750857,-0.135591,0.778488,1.191750,-1.663996,-5.939273,8.720922,9.252954,9.977406,3.600261,-5.427835,8.335896,7.339561,-0.168479,3.069802,-8.290641,-3.780371,0.812139,-4.517845,-2.462306,1.523091,-0.328480,0.903189,9.340894,9.296464,-1.906267,5.523724,-0.294977,-5.435009,2.103774,-0.646962,-4.245266,-4.425964,-6.842728,-8.765542,7.360715,3.831693,-1.171493,-3.259706,9.911368,6.120323],[2.472153,-2.134586,0.937534,5.932338,-6.852596,-2.368315,-3.401462,-3.110978,4.070067,5.749879,-7.192119,2.494667,-0.643621,-3.027977,3.871340,4.856853,-4.180564,-8.201865,7.521099,-7.093295,6.384487,-9.784079,4.644786,-3.507907,-5.002391,5.658175,-9.994553,1.900556,-5.447111,0.357888,7.879347,8.848964,-2.814691,-5.295181,1.443081,5.157531,7.597322,-5.662809,-0.496684,-4.864253,8.676776,8.203678],[-7.009727,-0.820826,-3.496136,-7.700594,-4.745903,4.881940,3.259861,-5.480434,-0.565184,2.823985,-2.669070,-4.409070,-9.101009,9.185885,-4.782294,9.164937,7.098355,-0.232496,4.167157,-1.431738,-3.072034,-8.031023,5.821416,-1.812384,-7.582111,9.557825,8.299076,6.219346,-9.533745,1.113374,2.312223,4.895713,-6.400746,-5.448979,-9.273779,-3.553778,-7.279641,-0.261371,1.289347,1.830477,-1.963703,-5.424195]], dtype = "float64")#candidate|1362|(6, 42)|const|float64
call_1361 = relay.TupleGetItem(func_1004_call(relay.reshape(const_1362.astype('float64'), [14, 3, 6])), 2)
call_1363 = relay.TupleGetItem(func_1007_call(relay.reshape(const_1362.astype('float64'), [14, 3, 6])), 2)
bop_1365 = relay.right_shift(uop_1358.astype('int8'), relay.reshape(call_1361.astype('int8'), relay.shape_of(uop_1358))) # shape=(7, 8, 14)
bop_1368 = relay.right_shift(uop_1360.astype('int8'), relay.reshape(call_1363.astype('int8'), relay.shape_of(uop_1360))) # shape=(7, 8, 14)
func_471_call = mod.get_global_var('func_471')
func_472_call = mutated_mod.get_global_var('func_472')
call_1375 = relay.TupleGetItem(func_471_call(), 0)
call_1376 = relay.TupleGetItem(func_472_call(), 0)
uop_1380 = relay.atan(call_1375.astype('float32')) # shape=(7, 8, 14)
uop_1382 = relay.atan(call_1376.astype('float32')) # shape=(7, 8, 14)
output = relay.Tuple([const_1362,bop_1365,uop_1380,])
output2 = relay.Tuple([const_1362,bop_1368,uop_1382,])
func_1386 = relay.Function([], output)
mod['func_1386'] = func_1386
mod = relay.transform.InferType()(mod)
mutated_mod['func_1386'] = func_1386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1386_call = mutated_mod.get_global_var('func_1386')
call_1387 = func_1386_call()
output = call_1387
func_1388 = relay.Function([], output)
mutated_mod['func_1388'] = func_1388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_873_call = mod.get_global_var('func_873')
func_875_call = mutated_mod.get_global_var('func_875')
call_1410 = relay.TupleGetItem(func_873_call(), 0)
call_1411 = relay.TupleGetItem(func_875_call(), 0)
output = call_1410
output2 = call_1411
func_1433 = relay.Function([], output)
mod['func_1433'] = func_1433
mod = relay.transform.InferType()(mod)
mutated_mod['func_1433'] = func_1433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1433_call = mutated_mod.get_global_var('func_1433')
call_1434 = func_1433_call()
output = call_1434
func_1435 = relay.Function([], output)
mutated_mod['func_1435'] = func_1435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_471_call = mod.get_global_var('func_471')
func_472_call = mutated_mod.get_global_var('func_472')
call_1450 = relay.TupleGetItem(func_471_call(), 1)
call_1451 = relay.TupleGetItem(func_472_call(), 1)
uop_1458 = relay.acos(call_1450.astype('float32')) # shape=(7, 8, 14)
uop_1460 = relay.acos(call_1451.astype('float32')) # shape=(7, 8, 14)
uop_1472 = relay.asin(uop_1458.astype('float64')) # shape=(7, 8, 14)
uop_1474 = relay.asin(uop_1460.astype('float64')) # shape=(7, 8, 14)
output = relay.Tuple([uop_1472,])
output2 = relay.Tuple([uop_1474,])
func_1475 = relay.Function([], output)
mod['func_1475'] = func_1475
mod = relay.transform.InferType()(mod)
mutated_mod['func_1475'] = func_1475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1475_call = mutated_mod.get_global_var('func_1475')
call_1476 = func_1475_call()
output = call_1476
func_1477 = relay.Function([], output)
mutated_mod['func_1477'] = func_1477
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1481 = relay.var("var_1481", dtype = "float32", shape = (12, 3, 9))#candidate|1481|(12, 3, 9)|var|float32
uop_1482 = relay.acos(var_1481.astype('float32')) # shape=(12, 3, 9)
var_1484 = relay.var("var_1484", dtype = "float32", shape = (12, 3, 9))#candidate|1484|(12, 3, 9)|var|float32
bop_1485 = relay.floor_mod(uop_1482.astype('float64'), relay.reshape(var_1484.astype('float64'), relay.shape_of(uop_1482))) # shape=(12, 3, 9)
output = relay.Tuple([bop_1485,])
output2 = relay.Tuple([bop_1485,])
func_1489 = relay.Function([var_1481,var_1484,], output)
mod['func_1489'] = func_1489
mod = relay.transform.InferType()(mod)
var_1490 = relay.var("var_1490", dtype = "float32", shape = (12, 3, 9))#candidate|1490|(12, 3, 9)|var|float32
var_1491 = relay.var("var_1491", dtype = "float32", shape = (12, 3, 9))#candidate|1491|(12, 3, 9)|var|float32
output = func_1489(var_1490,var_1491,)
func_1492 = relay.Function([var_1490,var_1491,], output)
mutated_mod['func_1492'] = func_1492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_825_call = mod.get_global_var('func_825')
func_827_call = mutated_mod.get_global_var('func_827')
call_1563 = relay.TupleGetItem(func_825_call(), 3)
call_1564 = relay.TupleGetItem(func_827_call(), 3)
func_490_call = mod.get_global_var('func_490')
func_492_call = mutated_mod.get_global_var('func_492')
const_1572 = relay.const([-1.034646,-6.062717,8.285098,-4.342726,3.424076,2.884678,0.153368,-2.039607,5.807993,1.029871,3.953346,-9.074766,1.397369,-2.602597,7.283813,7.982162,-1.856969,-7.952844,5.426231,3.136821,-5.457269,-3.726901,-7.188739,9.436212,3.429712,-0.109464,9.362516,5.147148,2.416250,-2.937347,-2.143406,-7.975657,6.372863,-8.510490,3.080756,7.577148,-5.048858,4.765588,-2.705148,9.428026,6.484881,-7.213209,-9.605207,3.146245,-6.304762,-8.883694,-1.346703,8.619617,7.779001,-4.246030,7.518803,-6.704083,8.256862,6.282376,-7.293706,3.437245,-3.018119,3.378127,8.639545,-5.799910,-0.606180,-7.308797,-9.630928,-5.771861,6.776616,-3.759255,-7.199620,6.923909,3.097623,2.028197,9.997622,4.718726,-7.624315,-5.527775,-2.384863,2.191670,-4.439452,2.600526,7.785968,-0.754166,-4.985560,-7.561842,-4.341780,-0.754776,-2.188359,3.497864,-3.331058,2.929388,1.263993,5.989417,-2.319325,-3.693273,-9.181511,9.263816,5.491799,7.364893,2.824331,-0.335800,9.293227,7.269274,-6.068328,9.739878,3.227910,-4.893506,-9.692865,-8.942708,-0.399514,5.171654,-6.182963,5.605160,8.843665,9.971270,-7.099286,-6.916472,-4.992469,5.019667,-5.295673,-5.650526,4.874903,8.009497,-5.244648,-3.339921,-7.052714,1.392442,7.796152,0.405973,0.966959,8.716515,-2.417152,6.013996,4.798120,-0.543716,5.391456,5.761101,6.247668,8.881326,8.026521,-4.106255,3.558711,-7.759038,-2.967363,9.956052,1.132949,1.270012,-1.185738,-1.861717,5.180848,-8.978285,5.725920,5.085670,-2.160614,-2.381904,9.668396,2.775758,3.692348,6.495077,7.763533,4.697328,6.091209,9.201224,-9.747088,8.661011,-6.755079,-5.904324,9.153712,-7.166673,-3.824842,5.159857,7.817170,7.474595,7.069164,5.435400,7.283987,1.958079,3.751200,6.694944,-3.061253,-2.161847,-7.423845,0.083285,-1.234648,9.032329,-3.991104,-6.136101,4.269520,-3.452836,-2.365586,-4.321013,8.592926,-4.510241,-8.183575,-4.029358,-1.677459,9.443477,0.779290,2.167662,-3.982462,4.954782,3.502275,-8.923841,4.066235,1.962420,-2.902256,2.121275,5.971377,0.749775,1.153474,6.025494,-3.966681,-2.131342,9.628958,6.777465,-7.469536,-9.916920,7.848975,0.432761,-1.202166,-0.574339,-4.767360,-4.040019,-2.893696,9.108496,8.536568,1.135041,6.305826,5.626553,3.259673,-0.124769,4.657236,-2.199873,6.396205,9.701600,-6.609703,1.936938,-4.451331,1.467905,1.763799,-4.356340,6.293839,-1.747982,-0.301634,8.540335,-9.306829,8.570626,-3.953418,-6.078101,4.673423,1.260367,-7.479804,-1.522392,-7.825300,8.757163,-8.565885,-6.191837,0.821884,-4.733607,7.688169,-5.272979,5.489518,2.086616,5.876994,-9.224112,-9.061854,-8.300891,-7.210011,9.216773,-5.947869,-6.797187,-8.908204,-5.704897,7.994774,4.031350,-5.786878,-9.254751,-6.099710,-9.109651,-4.399441,-9.286377,-1.208492,0.410807,-3.747931,-8.302676,4.140288,3.904928,7.680738,5.728973,5.469949,4.608896,-9.660241,6.501475,-4.407016,-9.233955,-0.095735,5.004265,-8.059605,5.312062,3.122962,7.897417,-1.675292,-1.727157,4.323114,-3.018177,6.449682,-5.688020,-0.232859,-0.206899,7.711280,0.981997,4.114078,0.567960,8.869181,-5.292664,-1.722906,1.012951,3.867343,-3.537532,0.477824,9.662517,3.455194,2.868971,4.798584,-9.576927,-4.975040,2.482727,-0.529322,6.590836,8.855241,-6.314120,-9.665007,1.355541,4.713341,-7.805686,-1.262979,6.785427,1.295317,5.953391,-7.811067,-5.432863,0.203733,8.730221,-7.934989,3.649982,-4.217702,4.233112,5.363167,-0.826760,-4.608787,-4.206878,-1.399632,-4.543358,-8.503974,5.473859,1.307315,6.093297,6.135697,-6.727064,-8.887461,0.567104,3.556703,4.611756,2.273220,-6.324073,-9.047598,2.362742,-0.737513,-6.387217,3.089861,-1.532189,5.791046,-0.044307,-3.045581,-8.970091,-3.963319,8.874279,-1.200111,4.891778,3.654891,-1.899084,-8.175120,-1.320314,9.734812,5.295693,-8.307091,-5.361836,7.048349,-7.259900,3.446271,-9.530084,8.696370,-1.105442,-0.896993,6.219992,0.010081,1.478563,6.220961,-6.229286,3.004589,-2.824500,8.714916,9.575602,1.491368,-5.865168,4.092141,-5.477363,5.821608,-4.949912,-1.115983,5.354636,3.430168,3.540583,-4.271235,-0.192007,3.934762,-5.289282,3.967600,-1.631261,0.716664,0.846361,4.288936,4.508594,-5.142586,9.697849,-1.414706,-2.386463,8.200173,-1.171243,-9.399389,6.342761,2.407708,-1.507008,-0.285752,2.604708,-1.682749,-2.801603,5.675588,-8.077682,3.373493,-5.693438,-5.122085,-4.665658,0.888168,9.538525,4.119990,1.835653,-3.200675,6.272325,-5.455000,3.949989,5.262011,7.259036,3.214095,2.352909,1.172347,-7.631561,-4.201276,8.775840,-0.326592,5.282622,-8.418179,-8.841160,7.038542,9.841241,1.749927,-5.598550,-1.403920,9.446245,7.516589,-9.326187,-1.678832,-4.022142,2.582102,-6.575753,-2.644447,1.686989,9.833621,-1.356581,8.876979,-6.981013,-3.570219,-9.494162,-5.566865,-1.157945,-8.471044,-4.790390,-5.129629,2.061456,4.623237,2.612759,-9.560041,-6.701307,-2.423734,-9.587081,-5.632285,-8.097006,0.244760,1.757406,-5.027905,1.481103,-6.267955,-9.601274,-4.261980,5.688217,4.765011,7.272546,8.041038,6.848120,-2.926261,-3.455608,4.840068,9.129925,1.235252,-1.767796,7.725305,-4.809849,-2.323460,-2.759971,-2.845896,-6.701530,-8.220137,0.862176,2.207711,3.667078,-7.108351,-8.064149,4.755620,-6.164757,-0.262435,-4.097752,-8.247006,8.505721,0.611791,5.165224,0.807995,-2.726774,-2.787213,-6.178274,-5.307749,1.314867,6.667814,-1.728420,-7.419363,1.626702,-0.149330,-3.784182,-7.335371,7.496287,7.029151,9.163864,-7.674573,-2.020176,-4.775673,-6.671660,-6.162937,1.504958,8.290392,-7.323609,3.867624,-5.940254,-0.786020,-9.422060,-9.473610,-1.671506,1.074367,6.313726,9.971180,-4.507995,-5.248083,2.899214,-8.384259,-6.096855,-6.441309,1.909210,-1.872656,6.260266,-3.096666,0.409783,3.467803,-8.102176,7.391538,-4.042530,3.342685,-9.942030,1.863167,1.059670,9.118666,4.076593,-0.761943,0.957832,-8.061689,6.042060,-1.750739,-5.359934,7.130877,-5.619739,-4.252206,3.887755,4.618844,6.403075,8.640923,0.674187,-8.562497,5.981174,6.864811,7.721721,0.743781,9.009299,6.965178,-4.591874,-7.415731,7.939636,8.182163,9.284557,4.292700,-6.264797,7.583474,4.034161,-9.963753,-5.759785,2.757548,-5.139240,7.405547,-0.744831,9.089458,8.264423,-8.224051,-3.727239,0.583889,-1.309763,-3.459917,-0.555741,-8.528322,4.811544,-2.377405,9.891432,8.965385,-1.827668,8.916139,7.643505,0.036586,-3.605478,8.088353,-8.008784,-1.238504,5.526697,1.677038,-1.603432,5.001650,-0.725220,-8.535465,2.362702,0.993228,-8.849300,8.809934,7.201874,-0.271989,-4.940823,-3.417082,-7.407799,3.385393,6.603987,1.646199,5.531457,6.920431,-4.465317,9.842646,0.403475,-7.299993,0.270256,7.376401,-5.184603,-2.653696,-7.875477,9.877618,-5.010107,-5.233936,0.490284,2.700750,3.775820,5.975357,-5.993692,9.833193,9.421594,7.502263,1.771474,-7.611180,-8.185582,-3.786263,2.464131,-7.068195,3.930139,-6.549311,-0.848274,2.225347,-2.689223,-0.150736,8.102859,5.597641,7.901995,0.590691,6.484872,-3.232182,-5.243540,-8.804181,1.704120,0.494428,-7.217119,9.690603,-7.155839,-2.690632,2.994181,8.015671,-2.905750,-3.236838,-6.864686,0.544441,6.163613,3.051668,-5.034647,6.742283,-3.358303,-7.189405,-9.228136,-6.227031,-3.373476,-0.006829,6.948456,-1.000154,-6.276548,4.377231,-6.375670,-8.124528,-7.203262,-9.255998,-0.636820,-8.874412,-2.155030,2.846448,8.405012,2.751335,-0.122131,8.103484,-3.496049,1.591635,-9.849291,1.278841,0.035956,-2.610727,1.870323,1.614133,4.257232,8.631389,-5.498330,-0.853569,-8.641343,-7.438398,9.099776,-0.809568,9.115682,-0.143662,-5.206125,6.818513,-4.716170,0.694204,-9.669166,6.269197,6.037123,6.081895,8.046033,0.499964,-0.191651,-7.476630,3.645752,3.693365,-1.771646,1.848739,1.212573,5.671917,-2.291435,4.984080,8.624781,-8.282864,5.489870,-9.483900,-0.086513,-3.287101,1.020775,-8.307143,2.340161,-5.590023,-1.125414,-4.753715,-4.748708,8.104407,0.052295,5.648252,1.094867,7.412969,0.654434,8.798481,7.633325], dtype = "float32")#candidate|1572|(800,)|const|float32
call_1571 = relay.TupleGetItem(func_490_call(relay.reshape(const_1572.astype('float32'), [5, 16, 10])), 0)
call_1573 = relay.TupleGetItem(func_492_call(relay.reshape(const_1572.astype('float32'), [5, 16, 10])), 0)
output = relay.Tuple([call_1563,call_1571,const_1572,])
output2 = relay.Tuple([call_1564,call_1573,const_1572,])
func_1580 = relay.Function([], output)
mod['func_1580'] = func_1580
mod = relay.transform.InferType()(mod)
mutated_mod['func_1580'] = func_1580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1580_call = mutated_mod.get_global_var('func_1580')
call_1581 = func_1580_call()
output = call_1581
func_1582 = relay.Function([], output)
mutated_mod['func_1582'] = func_1582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1475_call = mod.get_global_var('func_1475')
func_1477_call = mutated_mod.get_global_var('func_1477')
call_1596 = relay.TupleGetItem(func_1475_call(), 0)
call_1597 = relay.TupleGetItem(func_1477_call(), 0)
output = call_1596
output2 = call_1597
func_1600 = relay.Function([], output)
mod['func_1600'] = func_1600
mod = relay.transform.InferType()(mod)
mutated_mod['func_1600'] = func_1600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1600_call = mutated_mod.get_global_var('func_1600')
call_1601 = func_1600_call()
output = call_1601
func_1602 = relay.Function([], output)
mutated_mod['func_1602'] = func_1602
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1608 = relay.var("var_1608", dtype = "float32", shape = (14, 7, 2))#candidate|1608|(14, 7, 2)|var|float32
uop_1609 = relay.atan(var_1608.astype('float32')) # shape=(14, 7, 2)
output = uop_1609
output2 = uop_1609
func_1611 = relay.Function([var_1608,], output)
mod['func_1611'] = func_1611
mod = relay.transform.InferType()(mod)
var_1612 = relay.var("var_1612", dtype = "float32", shape = (14, 7, 2))#candidate|1612|(14, 7, 2)|var|float32
output = func_1611(var_1612)
func_1613 = relay.Function([var_1612], output)
mutated_mod['func_1613'] = func_1613
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1634 = relay.var("var_1634", dtype = "bool", shape = (6, 9, 10))#candidate|1634|(6, 9, 10)|var|bool
var_1635 = relay.var("var_1635", dtype = "bool", shape = (6, 9, 10))#candidate|1635|(6, 9, 10)|var|bool
bop_1636 = relay.logical_or(var_1634.astype('bool'), relay.reshape(var_1635.astype('bool'), relay.shape_of(var_1634))) # shape=(6, 9, 10)
uop_1640 = relay.acos(var_1635.astype('float32')) # shape=(6, 9, 10)
bop_1645 = relay.equal(uop_1640.astype('bool'), relay.reshape(var_1635.astype('bool'), relay.shape_of(uop_1640))) # shape=(6, 9, 10)
bop_1653 = relay.minimum(uop_1640.astype('uint16'), relay.reshape(bop_1645.astype('uint16'), relay.shape_of(uop_1640))) # shape=(6, 9, 10)
bop_1657 = relay.less_equal(uop_1640.astype('bool'), relay.reshape(bop_1636.astype('bool'), relay.shape_of(uop_1640))) # shape=(6, 9, 10)
func_1343_call = mod.get_global_var('func_1343')
func_1344_call = mutated_mod.get_global_var('func_1344')
call_1665 = relay.TupleGetItem(func_1343_call(), 0)
call_1666 = relay.TupleGetItem(func_1344_call(), 0)
uop_1690 = relay.sqrt(uop_1640.astype('float64')) # shape=(6, 9, 10)
output = relay.Tuple([bop_1653,bop_1657,call_1665,uop_1690,])
output2 = relay.Tuple([bop_1653,bop_1657,call_1666,uop_1690,])
func_1718 = relay.Function([var_1634,var_1635,], output)
mod['func_1718'] = func_1718
mod = relay.transform.InferType()(mod)
mutated_mod['func_1718'] = func_1718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1718_call = mutated_mod.get_global_var('func_1718')
var_1720 = relay.var("var_1720", dtype = "bool", shape = (6, 9, 10))#candidate|1720|(6, 9, 10)|var|bool
var_1721 = relay.var("var_1721", dtype = "bool", shape = (6, 9, 10))#candidate|1721|(6, 9, 10)|var|bool
call_1719 = func_1718_call(var_1720,var_1721,)
output = call_1719
func_1722 = relay.Function([var_1720,var_1721,], output)
mutated_mod['func_1722'] = func_1722
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1740 = relay.var("var_1740", dtype = "uint32", shape = (15, 16, 4))#candidate|1740|(15, 16, 4)|var|uint32
var_1741 = relay.var("var_1741", dtype = "uint32", shape = (15, 16, 4))#candidate|1741|(15, 16, 4)|var|uint32
bop_1742 = relay.right_shift(var_1740.astype('uint32'), relay.reshape(var_1741.astype('uint32'), relay.shape_of(var_1740))) # shape=(15, 16, 4)
var_1750 = relay.var("var_1750", dtype = "uint32", shape = (15, 16, 4))#candidate|1750|(15, 16, 4)|var|uint32
bop_1751 = relay.logical_or(var_1741.astype('bool'), relay.reshape(var_1750.astype('bool'), relay.shape_of(var_1741))) # shape=(15, 16, 4)
func_1475_call = mod.get_global_var('func_1475')
func_1477_call = mutated_mod.get_global_var('func_1477')
call_1759 = relay.TupleGetItem(func_1475_call(), 0)
call_1760 = relay.TupleGetItem(func_1477_call(), 0)
output = relay.Tuple([bop_1742,bop_1751,call_1759,])
output2 = relay.Tuple([bop_1742,bop_1751,call_1760,])
func_1761 = relay.Function([var_1740,var_1741,var_1750,], output)
mod['func_1761'] = func_1761
mod = relay.transform.InferType()(mod)
var_1762 = relay.var("var_1762", dtype = "uint32", shape = (15, 16, 4))#candidate|1762|(15, 16, 4)|var|uint32
var_1763 = relay.var("var_1763", dtype = "uint32", shape = (15, 16, 4))#candidate|1763|(15, 16, 4)|var|uint32
var_1764 = relay.var("var_1764", dtype = "uint32", shape = (15, 16, 4))#candidate|1764|(15, 16, 4)|var|uint32
output = func_1761(var_1762,var_1763,var_1764,)
func_1765 = relay.Function([var_1762,var_1763,var_1764,], output)
mutated_mod['func_1765'] = func_1765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1343_call = mod.get_global_var('func_1343')
func_1344_call = mutated_mod.get_global_var('func_1344')
call_1773 = relay.TupleGetItem(func_1343_call(), 1)
call_1774 = relay.TupleGetItem(func_1344_call(), 1)
func_1433_call = mod.get_global_var('func_1433')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_1786 = func_1433_call()
call_1787 = func_1433_call()
func_604_call = mod.get_global_var('func_604')
func_606_call = mutated_mod.get_global_var('func_606')
call_1788 = relay.TupleGetItem(func_604_call(relay.reshape(call_1773.astype('float64'), [6, 14, 5])), 1)
call_1789 = relay.TupleGetItem(func_606_call(relay.reshape(call_1773.astype('float64'), [6, 14, 5])), 1)
output = relay.Tuple([call_1773,call_1786,call_1788,])
output2 = relay.Tuple([call_1774,call_1787,call_1789,])
func_1790 = relay.Function([], output)
mod['func_1790'] = func_1790
mod = relay.transform.InferType()(mod)
mutated_mod['func_1790'] = func_1790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1790_call = mutated_mod.get_global_var('func_1790')
call_1791 = func_1790_call()
output = call_1791
func_1792 = relay.Function([], output)
mutated_mod['func_1792'] = func_1792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1433_call = mod.get_global_var('func_1433')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_1804 = func_1433_call()
call_1805 = func_1433_call()
output = relay.Tuple([call_1804,])
output2 = relay.Tuple([call_1805,])
func_1810 = relay.Function([], output)
mod['func_1810'] = func_1810
mod = relay.transform.InferType()(mod)
mutated_mod['func_1810'] = func_1810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1810_call = mutated_mod.get_global_var('func_1810')
call_1811 = func_1810_call()
output = call_1811
func_1812 = relay.Function([], output)
mutated_mod['func_1812'] = func_1812
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1830 = relay.var("var_1830", dtype = "float32", shape = (2, 4, 14))#candidate|1830|(2, 4, 14)|var|float32
uop_1831 = relay.asinh(var_1830.astype('float32')) # shape=(2, 4, 14)
uop_1842 = relay.sin(uop_1831.astype('float32')) # shape=(2, 4, 14)
func_1489_call = mod.get_global_var('func_1489')
func_1492_call = mutated_mod.get_global_var('func_1492')
var_1851 = relay.var("var_1851", dtype = "float32", shape = (324,))#candidate|1851|(324,)|var|float32
call_1850 = relay.TupleGetItem(func_1489_call(relay.reshape(var_1851.astype('float32'), [12, 3, 9]), relay.reshape(var_1851.astype('float32'), [12, 3, 9]), ), 0)
call_1852 = relay.TupleGetItem(func_1492_call(relay.reshape(var_1851.astype('float32'), [12, 3, 9]), relay.reshape(var_1851.astype('float32'), [12, 3, 9]), ), 0)
func_873_call = mod.get_global_var('func_873')
func_875_call = mutated_mod.get_global_var('func_875')
call_1855 = relay.TupleGetItem(func_873_call(), 0)
call_1856 = relay.TupleGetItem(func_875_call(), 0)
var_1869 = relay.var("var_1869", dtype = "float32", shape = (2, 4, 14))#candidate|1869|(2, 4, 14)|var|float32
bop_1870 = relay.greater(uop_1831.astype('bool'), relay.reshape(var_1869.astype('bool'), relay.shape_of(uop_1831))) # shape=(2, 4, 14)
output = relay.Tuple([uop_1842,call_1850,var_1851,call_1855,bop_1870,])
output2 = relay.Tuple([uop_1842,call_1852,var_1851,call_1856,bop_1870,])
func_1873 = relay.Function([var_1830,var_1851,var_1869,], output)
mod['func_1873'] = func_1873
mod = relay.transform.InferType()(mod)
var_1874 = relay.var("var_1874", dtype = "float32", shape = (2, 4, 14))#candidate|1874|(2, 4, 14)|var|float32
var_1875 = relay.var("var_1875", dtype = "float32", shape = (324,))#candidate|1875|(324,)|var|float32
var_1876 = relay.var("var_1876", dtype = "float32", shape = (2, 4, 14))#candidate|1876|(2, 4, 14)|var|float32
output = func_1873(var_1874,var_1875,var_1876,)
func_1877 = relay.Function([var_1874,var_1875,var_1876,], output)
mutated_mod['func_1877'] = func_1877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_904_call = mod.get_global_var('func_904')
func_905_call = mutated_mod.get_global_var('func_905')
call_1907 = relay.TupleGetItem(func_904_call(), 0)
call_1908 = relay.TupleGetItem(func_905_call(), 0)
uop_1911 = relay.sqrt(call_1907.astype('float32')) # shape=(7, 8, 14)
uop_1913 = relay.sqrt(call_1908.astype('float32')) # shape=(7, 8, 14)
func_1790_call = mod.get_global_var('func_1790')
func_1792_call = mutated_mod.get_global_var('func_1792')
call_1914 = relay.TupleGetItem(func_1790_call(), 2)
call_1915 = relay.TupleGetItem(func_1792_call(), 2)
output = relay.Tuple([uop_1911,call_1914,])
output2 = relay.Tuple([uop_1913,call_1915,])
func_1919 = relay.Function([], output)
mod['func_1919'] = func_1919
mod = relay.transform.InferType()(mod)
mutated_mod['func_1919'] = func_1919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1919_call = mutated_mod.get_global_var('func_1919')
call_1920 = func_1919_call()
output = call_1920
func_1921 = relay.Function([], output)
mutated_mod['func_1921'] = func_1921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1433_call = mod.get_global_var('func_1433')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_1933 = func_1433_call()
call_1934 = func_1433_call()
func_1343_call = mod.get_global_var('func_1343')
func_1344_call = mutated_mod.get_global_var('func_1344')
call_1935 = relay.TupleGetItem(func_1343_call(), 0)
call_1936 = relay.TupleGetItem(func_1344_call(), 0)
func_1810_call = mod.get_global_var('func_1810')
func_1812_call = mutated_mod.get_global_var('func_1812')
call_1942 = relay.TupleGetItem(func_1810_call(), 0)
call_1943 = relay.TupleGetItem(func_1812_call(), 0)
bop_1956 = relay.maximum(call_1942.astype('uint8'), relay.reshape(call_1933.astype('uint8'), relay.shape_of(call_1942))) # shape=(14, 3, 6)
bop_1959 = relay.maximum(call_1943.astype('uint8'), relay.reshape(call_1934.astype('uint8'), relay.shape_of(call_1943))) # shape=(14, 3, 6)
uop_1963 = relay.log2(call_1935.astype('float64')) # shape=(14, 3, 6)
uop_1965 = relay.log2(call_1936.astype('float64')) # shape=(14, 3, 6)
output = relay.Tuple([bop_1956,uop_1963,])
output2 = relay.Tuple([bop_1959,uop_1965,])
func_1969 = relay.Function([], output)
mod['func_1969'] = func_1969
mod = relay.transform.InferType()(mod)
output = func_1969()
func_1970 = relay.Function([], output)
mutated_mod['func_1970'] = func_1970
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2005 = relay.var("var_2005", dtype = "float64", shape = (1, 1, 6))#candidate|2005|(1, 1, 6)|var|float64
const_2006 = relay.const([[[5.239331,-6.420131,7.052290,1.397389,-5.965324,-8.669328],[8.460142,4.621646,-0.131908,-4.424478,0.444779,8.448991],[8.350062,7.112409,7.394922,-7.027688,-8.971144,-0.784154],[-1.522860,-5.478216,-1.782986,6.491542,-1.558314,7.391352],[-9.099993,-0.602410,-7.088498,8.159097,-2.074684,-7.737908],[-9.728401,5.144765,5.902373,-2.489416,0.037469,-0.984132],[0.998802,-3.827330,2.836459,0.830374,6.713752,8.655694],[7.476383,0.788529,2.833723,3.472231,-4.238128,1.783420],[2.623968,9.114383,-5.760212,-5.454369,-3.539173,5.523767],[-3.018992,2.872032,0.304012,3.385387,8.982398,-7.139879],[-9.125694,-0.715345,-7.796354,-3.705435,-1.191436,8.212950],[-2.947771,-2.640852,-2.744342,-8.794826,-5.547959,-5.753167],[-5.199724,2.800772,-2.422662,5.798124,4.784602,3.266155],[6.646390,3.515548,5.368207,-9.550141,-1.283597,-7.275789],[-5.936306,4.455237,-2.987318,-0.123499,4.082386,6.668888]],[[-1.372904,-4.999965,-4.474063,4.109733,-9.126912,2.607074],[4.021851,5.656306,7.669399,-4.757649,-3.678222,-5.762550],[5.274150,6.253473,-5.311444,-9.830526,7.311059,6.091313],[-7.172897,6.883057,8.283217,9.751084,-2.240384,2.332665],[-1.892717,-9.513245,8.530396,-6.692117,5.596290,-0.571914],[-2.823875,-9.859985,2.048075,7.635360,1.152337,-6.197301],[-7.811033,7.069529,-0.778022,-1.117205,6.861575,0.873512],[8.795441,9.100055,-5.466688,6.011192,9.394774,-2.092046],[5.927399,-4.464785,4.075862,4.737852,-6.209534,-2.389282],[4.296896,-9.961589,5.269560,-9.875167,1.166804,-0.703618],[1.249112,-1.165259,7.600330,7.801319,-8.506926,4.607076],[5.211925,4.215493,-0.022734,-1.219364,-8.387930,-4.346944],[1.245640,3.584119,-8.793642,-6.020354,5.051876,-4.284796],[9.277665,2.278321,-1.106369,1.927889,5.880119,0.786857],[4.510233,-8.630614,-4.318353,4.454376,1.393032,-2.131533]],[[-5.001962,0.356658,0.558713,2.837845,4.374894,6.611970],[4.574264,4.924318,4.005174,-7.000921,2.278939,5.025316],[6.885157,1.049850,8.670311,6.507126,-2.568929,3.052584],[-0.178618,-3.080304,9.877704,5.481221,3.874768,1.098757],[-4.103270,0.773257,-9.919546,7.399715,8.476270,-5.894523],[4.848819,3.510965,-0.999119,7.116728,0.890025,6.460461],[0.931577,8.135581,0.294890,-9.191664,5.553690,0.712817],[-6.277088,9.962680,8.304638,-2.965466,7.516889,-8.823567],[-8.590471,1.092931,-8.322867,-8.379901,8.310791,-9.075663],[-3.378677,-5.391941,-5.918421,-5.357650,0.442213,-8.642927],[2.963730,1.471720,-8.378542,7.248145,4.513344,-4.354125],[4.566386,-2.079680,2.455231,3.720005,2.909608,5.048620],[-1.078248,-5.111105,9.291711,-9.519289,8.801459,-8.954551],[-6.540087,-5.079868,-6.900281,4.771419,4.134950,-7.025207],[-9.232639,-7.793790,-4.363589,2.768852,1.465157,-7.873266]],[[-4.301224,-9.397183,-7.826472,-3.112084,-7.782644,-7.154151],[9.195640,-9.704997,9.924331,0.737751,-9.126041,0.601708],[0.086202,2.753203,-2.085395,-5.238065,2.700262,-5.476402],[2.441420,-7.140559,2.869754,-7.074412,-0.794413,2.329632],[7.949720,9.161292,9.954797,-5.857608,6.749611,4.491907],[2.864948,-5.138351,-0.866382,-0.151547,8.597360,2.247981],[-6.620808,-5.947529,-9.736445,-2.720244,-9.832424,-0.752473],[5.117225,8.369885,-5.767064,-8.926321,-5.247455,-9.610172],[-4.721914,-6.832548,8.606114,-7.199654,2.506968,-3.710652],[1.139474,3.064629,-6.071529,8.023959,0.628231,-7.984396],[0.251052,2.454907,-8.294521,9.693284,2.561035,-2.336401],[9.432427,-7.096081,4.443227,6.359822,8.080409,0.344022],[-3.969563,8.331290,0.701813,9.564815,8.776408,-2.089007],[9.822589,-0.515785,4.548319,6.410243,4.081995,7.900017],[4.035581,7.430264,2.821230,-8.251271,3.462547,8.437290]],[[-4.727384,-6.121090,-8.340371,0.028883,-9.768221,-4.963616],[-6.842465,-5.913618,0.964568,5.769321,-8.585594,8.261277],[9.577221,1.458731,-0.937346,5.153333,-4.209476,-8.600226],[-7.027255,-0.568421,5.440435,-2.013571,-3.182963,7.087949],[-9.784578,-0.186241,-8.749024,-5.139451,-1.957054,-9.505624],[5.182232,8.162774,6.919368,-1.035224,9.541974,-0.581118],[6.759220,-5.203752,-6.789152,2.860836,-1.544328,6.556950],[0.357116,-1.967820,-6.943900,-3.705075,-5.088116,6.358809],[7.141959,3.407787,-7.232923,1.859413,-3.378084,4.929398],[-8.559003,2.794886,6.762944,6.967523,5.481306,-3.887289],[-1.813016,9.456565,-0.882012,0.127729,-7.128862,-8.609447],[-3.067322,-2.600479,5.352129,0.073114,-9.246038,8.386606],[-3.380537,-1.992853,-2.191376,7.185841,-0.873908,-6.829604],[6.324296,-4.301559,-1.846257,-4.450320,3.999924,-0.016271],[-0.270611,-6.155230,-9.856450,-7.877780,-0.501159,-7.778976]],[[8.601363,5.276991,-6.417558,-4.097770,0.909746,2.601025],[9.409487,8.231055,-5.832234,-6.024809,4.524906,0.510646],[-2.330807,-7.503927,9.622521,2.153553,-8.348176,-0.944795],[-3.584506,-3.929676,4.699301,-7.704851,5.205297,2.239768],[5.216559,0.377309,-7.821437,-7.005049,-1.228998,0.541879],[-7.474128,4.085576,-1.649097,1.433607,-5.058340,-3.523263],[-5.428205,9.578052,-5.095086,9.020662,-8.168781,9.308534],[-3.411202,6.414172,-5.344881,-3.505387,3.164032,-4.940384],[7.296806,0.279655,9.706213,8.952708,-5.658629,-9.961252],[-4.150918,-0.150018,-4.998459,1.025336,7.336207,6.787777],[-5.650021,-8.655203,3.729928,7.198156,1.431334,9.085622],[-7.326444,-3.357298,9.604580,-2.134194,-0.775642,-0.269097],[-2.251874,2.128498,-1.922539,3.881402,-8.597903,-9.898803],[-6.255146,-2.637612,-5.965905,4.725100,8.454183,4.702207],[-5.724610,-4.698119,-8.969401,5.034193,-0.521117,8.118565]],[[2.663508,5.748943,-9.942946,-9.551375,2.197126,-8.000772],[-9.341196,7.280054,5.728906,-1.650383,-4.350073,8.137459],[7.331281,2.342235,3.843845,-9.459765,9.940118,6.708073],[6.605124,3.269678,-2.555092,4.824304,8.876659,-9.538963],[8.180463,-7.359409,6.476372,8.538816,-5.472178,0.063276],[0.967299,-4.981091,7.671086,-7.507546,5.919470,-2.102448],[-2.739704,-6.874058,-0.529372,-5.880413,9.286640,6.031846],[-3.838402,6.524296,8.548437,2.244921,-8.706408,6.002576],[1.023959,3.210097,4.221782,-8.236004,4.461761,5.001705],[-0.243067,2.498581,-2.570444,-7.772363,2.624799,3.118043],[-7.173875,9.167749,0.301650,4.817705,5.727745,2.125843],[-1.300713,-1.821932,2.954354,8.826850,6.185939,6.335533],[5.639659,9.853332,-0.067740,0.041964,8.541609,3.632698],[7.771966,5.661795,7.764764,-0.880787,-1.446982,4.399596],[-7.801075,7.433790,-5.662661,-4.541630,1.038908,-8.773776]],[[-9.837776,-9.012886,6.572203,-2.036900,-1.732357,6.313001],[0.721335,7.005821,-6.835127,3.105575,1.181774,-3.610475],[1.045604,0.959833,-9.766732,-1.837895,9.932368,-3.858694],[9.270787,-0.322860,-9.322807,3.241292,8.504606,-4.532901],[-9.882652,-2.580264,-2.062219,6.653612,0.700961,-0.289860],[-8.328337,8.272932,-9.963649,-8.845684,-1.379383,2.808016],[-4.486726,-9.563114,-7.178691,5.781072,-6.365425,-3.500206],[4.647714,3.967337,1.453945,-5.379104,-2.756540,2.940022],[-8.386147,-2.407044,-7.471962,9.249178,5.695184,-7.555354],[-6.124745,-1.898513,-0.382177,-7.819284,-5.494888,-4.010271],[5.291214,4.143583,-6.178544,-7.770968,7.878899,-1.202824],[6.144575,-8.581628,3.147091,-6.760064,5.609917,5.167191],[2.334418,6.685324,6.682860,5.235364,-4.714151,-7.980900],[-5.506345,3.284925,-2.505742,9.983510,-8.842476,-3.267970],[3.455920,2.238396,3.248615,-2.730776,-7.876820,-4.013430]],[[9.862303,1.200235,-7.576552,1.498580,-1.097491,-8.918010],[-1.360911,-2.501210,-8.837150,-3.888656,0.726378,-2.234842],[-9.748245,-5.618926,-2.077005,-2.432228,-5.526710,5.202251],[-2.347860,8.612663,-1.729326,5.594337,-5.774409,3.284704],[-5.309647,-4.776250,3.410814,-4.572879,5.762555,1.562917],[5.151238,7.066876,4.854467,-8.055888,7.353711,-0.137830],[-2.077647,-3.874836,-6.611946,2.374407,-7.667791,-2.382047],[-8.764185,0.686039,4.335336,0.309592,2.346746,5.299722],[5.901334,-5.770684,5.738014,-9.470208,-6.133901,-6.077462],[-8.841359,4.215858,9.189944,4.559921,-0.409744,3.671772],[0.769831,-2.444199,-9.791523,5.054716,1.797590,-4.767269],[-4.558224,-2.185032,-1.446426,4.069628,-8.981695,2.258175],[8.184312,9.469391,5.536009,7.062775,7.711544,8.699642],[0.011782,-8.806173,-7.368383,-8.366353,4.444210,8.541703],[9.534368,1.989272,8.136491,-4.928598,8.412410,-3.197463]]], dtype = "float64")#candidate|2006|(9, 15, 6)|const|float64
bop_2007 = relay.greater_equal(var_2005.astype('bool'), const_2006.astype('bool')) # shape=(9, 15, 6)
bop_2027 = relay.less(var_2005.astype('bool'), const_2006.astype('bool')) # shape=(9, 15, 6)
output = relay.Tuple([bop_2007,bop_2027,])
output2 = relay.Tuple([bop_2007,bop_2027,])
func_2030 = relay.Function([var_2005,], output)
mod['func_2030'] = func_2030
mod = relay.transform.InferType()(mod)
mutated_mod['func_2030'] = func_2030
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2031 = relay.var("var_2031", dtype = "float64", shape = (1, 1, 6))#candidate|2031|(1, 1, 6)|var|float64
func_2030_call = mutated_mod.get_global_var('func_2030')
call_2032 = func_2030_call(var_2031)
output = call_2032
func_2033 = relay.Function([var_2031], output)
mutated_mod['func_2033'] = func_2033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1580_call = mod.get_global_var('func_1580')
func_1582_call = mutated_mod.get_global_var('func_1582')
call_2058 = relay.TupleGetItem(func_1580_call(), 1)
call_2059 = relay.TupleGetItem(func_1582_call(), 1)
var_2063 = relay.var("var_2063", dtype = "float32", shape = (5, 16, 10))#candidate|2063|(5, 16, 10)|var|float32
bop_2064 = relay.add(call_2058.astype('float64'), relay.reshape(var_2063.astype('float64'), relay.shape_of(call_2058))) # shape=(5, 16, 10)
bop_2067 = relay.add(call_2059.astype('float64'), relay.reshape(var_2063.astype('float64'), relay.shape_of(call_2059))) # shape=(5, 16, 10)
bop_2083 = relay.not_equal(bop_2064.astype('bool'), relay.reshape(var_2063.astype('bool'), relay.shape_of(bop_2064))) # shape=(5, 16, 10)
bop_2086 = relay.not_equal(bop_2067.astype('bool'), relay.reshape(var_2063.astype('bool'), relay.shape_of(bop_2067))) # shape=(5, 16, 10)
func_1969_call = mod.get_global_var('func_1969')
func_1970_call = mutated_mod.get_global_var('func_1970')
call_2087 = relay.TupleGetItem(func_1969_call(), 1)
call_2088 = relay.TupleGetItem(func_1970_call(), 1)
var_2094 = relay.var("var_2094", dtype = "float32", shape = (5, 16, 10))#candidate|2094|(5, 16, 10)|var|float32
bop_2095 = relay.bitwise_xor(call_2058.astype('int64'), relay.reshape(var_2094.astype('int64'), relay.shape_of(call_2058))) # shape=(5, 16, 10)
bop_2098 = relay.bitwise_xor(call_2059.astype('int64'), relay.reshape(var_2094.astype('int64'), relay.shape_of(call_2059))) # shape=(5, 16, 10)
uop_2101 = relay.sqrt(var_2063.astype('float32')) # shape=(5, 16, 10)
output = relay.Tuple([bop_2083,call_2087,bop_2095,uop_2101,])
output2 = relay.Tuple([bop_2086,call_2088,bop_2098,uop_2101,])
func_2103 = relay.Function([var_2063,var_2094,], output)
mod['func_2103'] = func_2103
mod = relay.transform.InferType()(mod)
var_2104 = relay.var("var_2104", dtype = "float32", shape = (5, 16, 10))#candidate|2104|(5, 16, 10)|var|float32
var_2105 = relay.var("var_2105", dtype = "float32", shape = (5, 16, 10))#candidate|2105|(5, 16, 10)|var|float32
output = func_2103(var_2104,var_2105,)
func_2106 = relay.Function([var_2104,var_2105,], output)
mutated_mod['func_2106'] = func_2106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1580_call = mod.get_global_var('func_1580')
func_1582_call = mutated_mod.get_global_var('func_1582')
call_2116 = relay.TupleGetItem(func_1580_call(), 2)
call_2117 = relay.TupleGetItem(func_1582_call(), 2)
func_873_call = mod.get_global_var('func_873')
func_875_call = mutated_mod.get_global_var('func_875')
call_2124 = relay.TupleGetItem(func_873_call(), 0)
call_2125 = relay.TupleGetItem(func_875_call(), 0)
output = relay.Tuple([call_2116,call_2124,])
output2 = relay.Tuple([call_2117,call_2125,])
func_2132 = relay.Function([], output)
mod['func_2132'] = func_2132
mod = relay.transform.InferType()(mod)
output = func_2132()
func_2133 = relay.Function([], output)
mutated_mod['func_2133'] = func_2133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1433_call = mod.get_global_var('func_1433')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_2171 = func_1433_call()
call_2172 = func_1433_call()
const_2180 = relay.const([[[6.730399,-4.129641,6.038119,-6.483099,-1.225018,-8.473314],[-8.695622,5.638708,0.928445,-0.916396,1.700920,5.340849],[-1.595619,6.902150,-9.427145,-1.433958,-6.104072,2.178634]],[[0.756728,-0.703081,-6.056626,-2.181877,8.840578,8.448590],[9.287075,-1.387644,1.460523,-1.672552,6.935324,9.189050],[-3.623591,9.091551,-5.450673,-7.053127,7.209550,6.965147]],[[2.992152,-9.264751,8.820110,-9.907478,9.997810,7.560996],[-7.605597,-9.503616,2.215832,1.050284,-0.017508,0.254072],[0.154299,-1.028769,-7.239701,-5.997009,4.897815,-8.642398]],[[-7.417445,6.818772,9.523582,7.350239,-2.656384,3.452370],[8.049824,3.432090,-9.153015,-1.745121,6.565413,-5.230850],[5.245489,6.278931,5.230018,9.716288,-6.375352,5.192768]],[[-5.069511,9.053987,-9.393392,-8.681430,-0.730170,4.793902],[-5.837735,-0.423878,-8.496160,4.841093,-0.450359,-1.644920],[-9.826253,1.589220,3.330021,-7.777337,7.767250,-9.591510]],[[7.533517,9.873415,0.983227,-3.780075,9.651786,9.662339],[5.836575,0.359748,1.119741,7.556095,7.371272,9.838974],[8.753686,-5.141623,8.101361,-7.999382,-5.551366,-9.557315]],[[8.316030,9.088728,-0.519118,-4.356510,-0.721795,3.488952],[-9.457565,8.142495,0.504085,-1.003615,8.009564,-7.036262],[5.619790,7.614945,-5.785814,7.689488,-9.125134,-7.414849]],[[9.951289,-1.832513,-9.562685,-2.167337,-4.817211,2.002089],[-7.445719,-1.832803,-5.260481,-3.234908,2.429100,9.617382],[-2.730693,6.283349,-9.308896,5.025182,8.212193,9.416025]],[[1.456821,-7.236541,6.373457,2.788282,8.054073,9.406732],[-2.550861,9.927154,0.543497,-0.846206,-0.606537,-9.624299],[6.822076,-3.442815,5.756817,0.139016,5.159125,-6.654964]],[[3.555592,-4.556889,0.439136,-0.738966,-4.836935,-8.606766],[0.018069,4.729506,-9.312682,-4.533896,4.727812,-7.606196],[-4.228889,5.557092,0.105776,-8.769649,5.149593,9.330883]],[[7.403363,8.674997,-3.028811,8.205450,-6.940875,4.678609],[9.925426,-1.891291,-3.984985,7.076371,-7.734618,2.470281],[7.858833,-2.400569,-2.624523,4.608977,-7.601547,6.105508]],[[-0.105619,-6.397610,6.359068,-6.927228,1.145951,8.460083],[7.827880,-8.649483,6.386266,-2.327570,4.236781,-3.739670],[-6.120637,9.181167,-1.398393,4.187537,-1.103528,7.696553]],[[6.035522,-2.739241,-4.428563,6.876966,-4.323072,-6.700462],[2.700403,-8.718276,4.273466,-6.714019,0.073649,-3.728870],[9.789168,-2.316739,3.591822,5.172819,3.089950,5.484475]],[[-3.975425,-2.743877,-6.683716,-5.529468,9.632861,2.319452],[3.081385,-8.112926,4.853511,-7.305647,9.646902,-1.814043],[-1.057845,2.709186,6.626138,-6.832689,7.262155,7.002782]]], dtype = "float64")#candidate|2180|(14, 3, 6)|const|float64
bop_2181 = relay.divide(call_2171.astype('float64'), relay.reshape(const_2180.astype('float64'), relay.shape_of(call_2171))) # shape=(14, 3, 6)
bop_2184 = relay.divide(call_2172.astype('float64'), relay.reshape(const_2180.astype('float64'), relay.shape_of(call_2172))) # shape=(14, 3, 6)
func_1873_call = mod.get_global_var('func_1873')
func_1877_call = mutated_mod.get_global_var('func_1877')
const_2186 = relay.const([9.301278,5.868837,-7.017004,0.356978,6.683019,-4.219130,-3.571402,-3.297674,0.470100,2.174066,-8.622977,8.220027,1.939925,-0.421831,3.118323,-3.423357,-1.375147,1.412107,3.046214,8.336797,5.176602,-2.668855,-7.727971,-4.584816,-3.955583,-7.946769,-0.452787,1.399920,5.184911,-1.678474,8.565131,3.166783,-6.936439,-3.259950,6.610010,0.707655,9.507078,-1.764221,-8.658962,-1.166790,2.645278,2.511380,-7.616988,0.106068,6.054080,-4.262858,-0.044416,-5.616893,-3.902201,9.472264,-1.869829,9.217977,-4.625214,-7.903619,-7.070126,9.401788,8.539423,8.820909,3.390000,2.284470,0.638714,3.787866,8.865322,-2.315761,-1.303975,-0.203419,-2.258753,2.781428,7.319079,-6.408470,-0.251648,3.495230,-7.795309,0.670423,-6.828705,-4.614565,5.539067,8.012324,3.790234,-9.285634,6.838290,8.094041,-3.492890,-3.995822,-8.498924,1.236896,-0.605044,-4.016234,-9.592128,5.066676,7.983269,-1.047217,0.170511,3.188441,5.608662,6.927586,-6.154013,4.346296,3.789025,0.438557,-5.886334,-6.754657,8.126916,9.976761,-8.754674,-4.077599,1.355506,-0.202939,2.530764,8.261874,-0.294500,7.940968], dtype = "float32")#candidate|2186|(112,)|const|float32
const_2187 = relay.const([8.244564,-9.263894,-0.179901,-2.469013,-0.237205,5.737873,-5.232684,-8.624580,-2.739026,3.225039,-3.758366,-9.528296,5.363811,-8.880217,-4.050107,3.208889,-6.510560,0.606258,-9.266198,-2.875516,-7.291055,9.006431,-2.172996,-4.539452,1.944138,-9.289777,-0.401919,-5.046414,-6.278605,3.658770,-6.302848,-9.163259,-1.380560,0.008454,-5.153743,8.033007,3.150021,2.192108,-5.270371,-8.518193,5.321643,-9.394564,-7.209365,4.502007,2.923785,8.285879,9.473081,-9.771574,-8.734793,-8.351829,1.530577,1.854437,9.801023,-1.190106,-4.316992,3.925909,1.707667,8.633453,-2.921671,8.379598,8.382176,3.209330,-7.895771,1.686934,-5.458800,6.485275,9.621464,-4.152958,-0.983351,0.785930,-7.627225,-5.845171,-1.506980,7.872946,1.229030,-0.906589,6.816506,4.381882,3.824325,-2.262192,1.286379,4.248623,-9.730303,5.344577,3.109349,6.108565,2.588679,4.770203,-3.034629,-4.888107,3.192074,-0.810001,-8.731357,5.742856,-6.180048,2.150948,8.480696,8.394042,7.018132,-0.558446,5.385764,-9.359245,-4.082138,-9.035805,-8.818218,-2.021603,7.001087,-2.894990,-0.137505,2.105252,-3.289069,-0.427590,3.210945,1.993943,-7.186737,9.827725,-9.047819,-3.476214,-8.239909,2.621070,9.189133,-2.747347,-5.428368,4.973845,-7.637545,-2.368959,0.042956,0.893518,-9.191124,2.941429,-3.397155,-4.423245,-6.064469,9.682661,4.128724,0.823694,-6.277104,1.722843,9.468503,-6.916371,6.693376,-2.277437,6.104628,1.708865,-5.416048,1.721170,-3.631406,1.514596,-5.873072,9.805580,7.963171,2.003411,-2.950324,0.734856,6.951848,-5.795635,-7.167949,4.473458,-0.001265,1.736283,-0.921511,2.222971,-1.425947,1.315078,-9.866313,-0.325378,-0.208814,3.571270,-0.042642,-8.367348,-9.072046,-3.888569,1.386136,6.109564,-8.619368,-0.968723,2.030876,2.592320,6.419520,-5.710411,3.241373,3.426618,-3.023456,4.907307,8.892515,-7.354711,-3.034068,-4.060047,2.128228,3.850021,-7.578637,-0.099166,3.882168,8.700475,-1.365935,-4.415398,-5.555580,3.203839,8.167205,9.564493,-1.304309,-4.571192,-3.106528,-3.444239,-5.443135,-0.759002,-2.648673,-0.479449,-2.605601,-9.738545,-7.438470,6.577937,-7.959991,5.434065,2.446504,4.841714,4.285225,-7.342082,-2.632087,9.961729,-8.606617,-1.109454,-0.808772,-1.544263,-4.025161,5.342559,-4.018282,-0.162504,-7.109231,-3.084978,-6.345282,2.430942,3.439723,-5.176364,8.923008,7.593569,9.172241,-5.814600,-7.893213,-7.324527,6.806952,3.803749,-0.386487,-2.534754,-5.191545,-6.765459,-8.920748,-7.884950,1.728326,-4.819849,-1.117212,-2.387759,7.330352,3.743949,-4.237015,-6.476088,9.190397,0.862955,5.416646,-3.968534,-0.567640,0.423542,5.584726,-6.254527,-0.011677,0.398819,-2.904939,-1.278342,-1.316220,-6.933703,5.641398,-4.743122,-0.107943,5.434777,2.756792,1.390000,-2.044568,5.181525,-4.368185,3.993374,-2.600792,0.579567,-8.777183,-5.483708,9.205237,2.628772,4.020071,-4.827608,6.616334,-2.787433,7.580810,-6.385504,-6.855935,0.796610,-3.316955,5.004821,0.017842,0.939101,-6.280772,-3.353599,-9.289848,-4.129601,0.596199,-0.681919,-0.711923,-2.237513,-9.657764,-2.073228,-9.768053,-1.641985,-4.303108,3.844635,-2.464727,4.316114,-2.500507,7.550851,-8.905428,-6.122192,-8.777251,-3.049245,1.437753,-1.661908,-7.338468,-5.632556], dtype = "float32")#candidate|2187|(324,)|const|float32
call_2185 = relay.TupleGetItem(func_1873_call(relay.reshape(const_2186.astype('float32'), [2, 4, 14]), relay.reshape(const_2187.astype('float32'), [324,]), relay.reshape(const_2186.astype('float32'), [2, 4, 14]), ), 1)
call_2188 = relay.TupleGetItem(func_1877_call(relay.reshape(const_2186.astype('float32'), [2, 4, 14]), relay.reshape(const_2187.astype('float32'), [324,]), relay.reshape(const_2186.astype('float32'), [2, 4, 14]), ), 1)
func_471_call = mod.get_global_var('func_471')
func_472_call = mutated_mod.get_global_var('func_472')
call_2198 = relay.TupleGetItem(func_471_call(), 0)
call_2199 = relay.TupleGetItem(func_472_call(), 0)
output = relay.Tuple([bop_2181,call_2185,const_2186,const_2187,call_2198,])
output2 = relay.Tuple([bop_2184,call_2188,const_2186,const_2187,call_2199,])
func_2202 = relay.Function([], output)
mod['func_2202'] = func_2202
mod = relay.transform.InferType()(mod)
mutated_mod['func_2202'] = func_2202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2202_call = mutated_mod.get_global_var('func_2202')
call_2203 = func_2202_call()
output = call_2203
func_2204 = relay.Function([], output)
mutated_mod['func_2204'] = func_2204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_825_call = mod.get_global_var('func_825')
func_827_call = mutated_mod.get_global_var('func_827')
call_2212 = relay.TupleGetItem(func_825_call(), 2)
call_2213 = relay.TupleGetItem(func_827_call(), 2)
var_2215 = relay.var("var_2215", dtype = "float64", shape = (7, 8, 14))#candidate|2215|(7, 8, 14)|var|float64
bop_2216 = relay.floor_divide(call_2212.astype('float64'), relay.reshape(var_2215.astype('float64'), relay.shape_of(call_2212))) # shape=(7, 8, 14)
bop_2219 = relay.floor_divide(call_2213.astype('float64'), relay.reshape(var_2215.astype('float64'), relay.shape_of(call_2213))) # shape=(7, 8, 14)
output = bop_2216
output2 = bop_2219
func_2225 = relay.Function([var_2215,], output)
mod['func_2225'] = func_2225
mod = relay.transform.InferType()(mod)
var_2226 = relay.var("var_2226", dtype = "float64", shape = (7, 8, 14))#candidate|2226|(7, 8, 14)|var|float64
output = func_2225(var_2226)
func_2227 = relay.Function([var_2226], output)
mutated_mod['func_2227'] = func_2227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_471_call = mod.get_global_var('func_471')
func_472_call = mutated_mod.get_global_var('func_472')
call_2266 = relay.TupleGetItem(func_471_call(), 0)
call_2267 = relay.TupleGetItem(func_472_call(), 0)
const_2268 = relay.const([[[4,-9,-6,1,-4,-8,1,5,-3,1,4,-7,7,-3],[-7,-6,6,1,6,-9,10,-9,-9,3,5,-8,-3,-3],[-2,-5,-7,-7,6,-4,9,-5,5,4,-8,-6,2,2],[-8,-8,-3,9,-3,4,-6,4,-6,-6,2,-4,6,-1],[-5,6,8,-4,-6,-3,-1,8,9,-5,-10,-5,3,-3],[1,-9,-7,-2,8,5,10,3,-9,1,5,-5,10,-9],[1,-4,-6,-1,-10,7,8,2,-2,-1,7,10,-9,9],[5,2,10,8,-1,-10,-1,-8,8,9,6,2,-2,-5]],[[5,10,-2,4,10,-1,-3,1,7,-7,3,7,-3,-1],[1,-6,2,6,10,-7,6,-1,-10,-4,-6,-1,6,8],[-9,6,5,-6,-10,10,-4,10,8,8,-8,4,-3,2],[-5,1,-9,1,1,-2,2,2,-2,4,6,7,-4,7],[-6,-1,9,-4,-10,-2,-4,3,8,-10,8,8,7,7],[6,1,2,2,5,-8,1,-6,-6,-1,-4,5,-4,-3],[10,-4,-3,8,-8,-5,-8,-6,6,-4,-10,-9,5,-6],[8,-1,1,-7,-10,-8,-7,1,-9,-6,10,-9,6,-5]],[[-1,1,-2,10,-10,6,3,-10,10,-8,8,-3,-6,1],[10,3,8,-1,-10,2,9,2,3,-2,3,1,6,2],[-6,-3,8,8,-4,4,9,4,3,9,7,-8,-3,-2],[5,-10,4,7,-9,-7,1,5,-7,-1,-6,-8,-2,-1],[-7,6,4,1,7,-9,-3,9,8,-6,-4,7,7,-3],[4,-6,7,-3,7,-9,3,1,6,10,4,9,4,8],[-3,-2,4,-8,-1,-2,-6,-3,8,-3,-3,-8,-10,7],[-7,5,5,-9,-7,-10,9,-5,2,1,1,6,-8,1]],[[3,2,-2,-2,-4,7,-7,10,-10,10,-10,-4,7,-4],[-4,3,-10,9,-1,10,1,9,-6,-3,-3,-8,4,-3],[-2,5,2,5,-4,4,5,-3,1,6,2,-4,2,7],[2,8,8,1,-5,2,1,5,1,-4,-1,-10,10,5],[5,-10,3,-2,5,-9,-8,-10,-8,-8,-2,-3,-3,-5],[6,6,3,10,-8,-6,-6,5,-7,-4,9,-6,-4,-5],[2,9,1,9,3,-1,2,4,-4,3,-4,-8,8,-4],[-3,-9,-9,2,6,-6,-3,-10,6,-4,-4,6,3,-1]],[[-8,-3,-1,5,-3,-10,8,-9,-6,-7,-6,-5,-9,8],[-4,3,1,-2,-10,-4,2,5,-3,5,5,2,-5,2],[7,-6,-7,3,-4,-2,-2,9,-4,7,9,5,-4,-5],[-3,2,7,10,-4,-1,8,5,4,5,8,-3,2,1],[4,-4,5,4,-4,3,7,-10,-1,-6,-9,-1,1,-4],[-2,8,10,-1,-9,-6,-1,-5,-5,5,8,-9,10,-3],[-3,-5,-9,1,6,6,-8,10,-1,10,-8,2,-6,-2],[-2,-9,-10,-2,-7,2,-6,9,-1,5,-4,10,2,9]],[[-2,8,5,-8,2,-6,4,10,-8,-6,-10,3,-8,7],[2,1,6,-7,-7,-8,7,-5,3,1,-6,10,-7,-1],[5,-8,3,-10,-9,10,4,-2,-3,3,4,-7,2,8],[2,6,-9,-4,-4,-1,-3,-8,10,-9,-6,-9,8,-3],[-7,10,2,7,-10,4,-3,-8,6,5,-5,9,9,-4],[-5,-7,-5,2,-5,-9,-7,-1,-5,-9,7,7,8,-3],[-3,4,-1,-10,10,-8,-2,9,9,2,-1,7,6,-9],[-7,3,-1,-9,10,1,-3,4,-5,7,-5,7,1,-3]],[[7,3,-6,5,-3,-10,-4,-4,1,2,-3,1,7,5],[2,-7,3,3,4,7,-10,4,-9,1,-8,-9,4,-2],[-5,-9,6,6,-5,9,6,-9,-2,-10,-3,4,-8,6],[-10,-2,-5,4,8,1,8,3,5,-10,-8,9,-3,-5],[-3,-2,-9,-9,-9,8,-2,1,10,-2,9,-1,4,8],[-2,-10,-4,-1,9,9,-3,-5,5,-5,-1,9,10,-7],[-9,-2,8,9,4,-4,8,-3,10,5,6,-10,6,-9],[9,-1,-10,1,-2,-9,8,3,9,-8,6,6,-3,2]]], dtype = "int32")#candidate|2268|(7, 8, 14)|const|int32
bop_2269 = relay.multiply(call_2266.astype('uint16'), relay.reshape(const_2268.astype('uint16'), relay.shape_of(call_2266))) # shape=(7, 8, 14)
bop_2272 = relay.multiply(call_2267.astype('uint16'), relay.reshape(const_2268.astype('uint16'), relay.shape_of(call_2267))) # shape=(7, 8, 14)
func_673_call = mod.get_global_var('func_673')
func_675_call = mutated_mod.get_global_var('func_675')
call_2276 = func_673_call()
call_2277 = func_673_call()
func_1386_call = mod.get_global_var('func_1386')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_2278 = relay.TupleGetItem(func_1386_call(), 1)
call_2279 = relay.TupleGetItem(func_1388_call(), 1)
output = relay.Tuple([bop_2269,call_2276,call_2278,])
output2 = relay.Tuple([bop_2272,call_2277,call_2279,])
func_2280 = relay.Function([], output)
mod['func_2280'] = func_2280
mod = relay.transform.InferType()(mod)
output = func_2280()
func_2281 = relay.Function([], output)
mutated_mod['func_2281'] = func_2281
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2392 = relay.var("var_2392", dtype = "int16", shape = (10, 1, 7))#candidate|2392|(10, 1, 7)|var|int16
var_2393 = relay.var("var_2393", dtype = "int16", shape = (10, 3, 7))#candidate|2393|(10, 3, 7)|var|int16
bop_2394 = relay.less(var_2392.astype('bool'), var_2393.astype('bool')) # shape=(10, 3, 7)
var_2399 = relay.var("var_2399", dtype = "int16", shape = (10, 7, 7))#candidate|2399|(10, 7, 7)|var|int16
bop_2400 = relay.subtract(var_2392.astype('float64'), var_2399.astype('float64')) # shape=(10, 7, 7)
uop_2404 = relay.asinh(bop_2400.astype('float32')) # shape=(10, 7, 7)
uop_2408 = relay.asin(uop_2404.astype('float32')) # shape=(10, 7, 7)
var_2415 = relay.var("var_2415", dtype = "int16", shape = (10, 14, 7))#candidate|2415|(10, 14, 7)|var|int16
bop_2416 = relay.add(var_2392.astype('uint64'), var_2415.astype('uint64')) # shape=(10, 14, 7)
output = relay.Tuple([bop_2394,uop_2408,bop_2416,])
output2 = relay.Tuple([bop_2394,uop_2408,bop_2416,])
func_2432 = relay.Function([var_2392,var_2393,var_2399,var_2415,], output)
mod['func_2432'] = func_2432
mod = relay.transform.InferType()(mod)
mutated_mod['func_2432'] = func_2432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2432_call = mutated_mod.get_global_var('func_2432')
var_2434 = relay.var("var_2434", dtype = "int16", shape = (10, 1, 7))#candidate|2434|(10, 1, 7)|var|int16
var_2435 = relay.var("var_2435", dtype = "int16", shape = (10, 3, 7))#candidate|2435|(10, 3, 7)|var|int16
var_2436 = relay.var("var_2436", dtype = "int16", shape = (10, 7, 7))#candidate|2436|(10, 7, 7)|var|int16
var_2437 = relay.var("var_2437", dtype = "int16", shape = (10, 14, 7))#candidate|2437|(10, 14, 7)|var|int16
call_2433 = func_2432_call(var_2434,var_2435,var_2436,var_2437,)
output = call_2433
func_2438 = relay.Function([var_2434,var_2435,var_2436,var_2437,], output)
mutated_mod['func_2438'] = func_2438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1433_call = mod.get_global_var('func_1433')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_2462 = func_1433_call()
call_2463 = func_1433_call()
output = relay.Tuple([call_2462,])
output2 = relay.Tuple([call_2463,])
func_2465 = relay.Function([], output)
mod['func_2465'] = func_2465
mod = relay.transform.InferType()(mod)
mutated_mod['func_2465'] = func_2465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2465_call = mutated_mod.get_global_var('func_2465')
call_2466 = func_2465_call()
output = call_2466
func_2467 = relay.Function([], output)
mutated_mod['func_2467'] = func_2467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1580_call = mod.get_global_var('func_1580')
func_1582_call = mutated_mod.get_global_var('func_1582')
call_2496 = relay.TupleGetItem(func_1580_call(), 0)
call_2497 = relay.TupleGetItem(func_1582_call(), 0)
func_810_call = mod.get_global_var('func_810')
func_813_call = mutated_mod.get_global_var('func_813')
var_2508 = relay.var("var_2508", dtype = "float32", shape = (50, 9))#candidate|2508|(50, 9)|var|float32
call_2507 = relay.TupleGetItem(func_810_call(relay.reshape(var_2508.astype('float32'), [10, 9, 5])), 0)
call_2509 = relay.TupleGetItem(func_813_call(relay.reshape(var_2508.astype('float32'), [10, 9, 5])), 0)
func_873_call = mod.get_global_var('func_873')
func_875_call = mutated_mod.get_global_var('func_875')
call_2514 = relay.TupleGetItem(func_873_call(), 0)
call_2515 = relay.TupleGetItem(func_875_call(), 0)
uop_2524 = relay.exp(call_2507.astype('float32')) # shape=(7, 8, 14)
uop_2526 = relay.exp(call_2509.astype('float32')) # shape=(7, 8, 14)
output = relay.Tuple([call_2496,var_2508,call_2514,uop_2524,])
output2 = relay.Tuple([call_2497,var_2508,call_2515,uop_2526,])
func_2528 = relay.Function([var_2508,], output)
mod['func_2528'] = func_2528
mod = relay.transform.InferType()(mod)
var_2529 = relay.var("var_2529", dtype = "float32", shape = (50, 9))#candidate|2529|(50, 9)|var|float32
output = func_2528(var_2529)
func_2530 = relay.Function([var_2529], output)
mutated_mod['func_2530'] = func_2530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1790_call = mod.get_global_var('func_1790')
func_1792_call = mutated_mod.get_global_var('func_1792')
call_2538 = relay.TupleGetItem(func_1790_call(), 1)
call_2539 = relay.TupleGetItem(func_1792_call(), 1)
func_1761_call = mod.get_global_var('func_1761')
func_1765_call = mutated_mod.get_global_var('func_1765')
var_2545 = relay.var("var_2545", dtype = "uint32", shape = (960,))#candidate|2545|(960,)|var|uint32
call_2544 = relay.TupleGetItem(func_1761_call(relay.reshape(var_2545.astype('uint32'), [15, 16, 4]), relay.reshape(var_2545.astype('uint32'), [15, 16, 4]), relay.reshape(var_2545.astype('uint32'), [15, 16, 4]), ), 2)
call_2546 = relay.TupleGetItem(func_1765_call(relay.reshape(var_2545.astype('uint32'), [15, 16, 4]), relay.reshape(var_2545.astype('uint32'), [15, 16, 4]), relay.reshape(var_2545.astype('uint32'), [15, 16, 4]), ), 2)
output = relay.Tuple([call_2538,call_2544,var_2545,])
output2 = relay.Tuple([call_2539,call_2546,var_2545,])
func_2549 = relay.Function([var_2545,], output)
mod['func_2549'] = func_2549
mod = relay.transform.InferType()(mod)
mutated_mod['func_2549'] = func_2549
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2550 = relay.var("var_2550", dtype = "uint32", shape = (960,))#candidate|2550|(960,)|var|uint32
func_2549_call = mutated_mod.get_global_var('func_2549')
call_2551 = func_2549_call(var_2550)
output = call_2551
func_2552 = relay.Function([var_2550], output)
mutated_mod['func_2552'] = func_2552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1475_call = mod.get_global_var('func_1475')
func_1477_call = mutated_mod.get_global_var('func_1477')
call_2586 = relay.TupleGetItem(func_1475_call(), 0)
call_2587 = relay.TupleGetItem(func_1477_call(), 0)
func_1004_call = mod.get_global_var('func_1004')
func_1007_call = mutated_mod.get_global_var('func_1007')
const_2589 = relay.const([[3.281479,8.514316,-7.908798,-8.752527,7.254580,-3.231917,6.276873,-7.554928,7.713713,-1.155092,-8.053869,2.914560,-2.622156,2.251756,2.982395,9.843604,-4.223984,5.437825,7.147600,1.149331,9.952309,0.163474,-3.908372,8.042430,-3.328444,-1.380728,1.071307,1.375305,-0.254634,0.416615,2.572261,-5.771251,5.767607,-5.552539,-0.183563,-8.945006,2.322429,-4.177244,7.063097,2.054549,9.901344,-2.518023,-3.682085,-3.809508,-5.042766,-4.070563,7.854879,1.361483,-7.004266,8.279185,3.926253,4.201412,8.321623,-9.422295,4.232784,-7.680626,-8.814274,1.896747,2.823140,0.834174,2.697288,9.736763,5.162423,-4.401401,-4.380838,-9.835037,3.968402,-9.171219,8.997033,2.148998,-9.593356,-1.679171,4.679810,6.014446,7.366544,-2.846810,-7.724046,7.553465,5.180430,-8.735041,6.673299,7.367126,-7.514331,-4.612266],[9.702784,-8.983712,6.660465,-0.509930,-3.652741,0.467163,-9.734185,5.087148,3.555438,-0.879624,-8.937479,-8.994647,9.361059,-5.898641,9.210608,-4.458734,-8.683155,7.308656,4.673475,-1.870688,0.028721,6.488683,-1.841423,8.344292,-7.007529,-4.832192,-1.962158,-8.181027,-9.352696,4.888182,6.597360,-9.131562,-8.186419,-2.348853,8.621574,1.320184,-6.951021,1.192171,1.480543,7.791644,-8.073398,-2.711117,-5.997069,6.652204,3.104202,5.540690,-9.788620,0.948345,2.053823,-3.054544,-0.982682,0.172261,-7.474293,3.195828,9.821913,8.032280,-2.608558,-5.099793,8.428869,-7.805569,-9.624666,3.733381,8.849457,1.019752,-4.172516,-8.350251,-3.042762,-5.157099,-3.884393,-3.404297,-5.639767,7.232973,-5.272303,1.884675,5.543334,-0.491215,4.546666,-8.366150,-0.220208,4.222725,6.910986,-8.407105,-7.821974,2.589045],[-2.335389,-2.653725,0.002584,-8.084613,-1.652886,0.754902,2.484130,3.682675,-4.006103,6.405069,-4.523021,4.615505,-4.080085,0.732268,-9.979748,9.483932,-6.929259,4.807398,-0.451034,9.492519,-9.643799,-1.570793,0.180847,-9.294651,-4.843748,-8.814507,4.192129,-8.845572,8.441444,-1.579090,-9.220033,8.716657,6.917319,9.834454,-2.528862,-1.135697,7.518940,-7.464203,1.034275,-7.450113,-9.346362,-8.952178,2.374489,-3.316848,-4.435598,-4.200124,-8.430203,1.113770,9.801180,4.846007,-3.056666,-5.717781,4.447607,-8.050174,5.087805,-1.360229,2.365758,2.486801,7.911187,-1.906914,-8.484834,0.371545,-8.521744,7.794277,9.262920,2.466274,-1.584035,7.265253,-2.540371,-9.499242,9.983217,3.673967,4.048280,2.186342,-9.254380,-2.227938,-3.830472,-8.593247,5.769681,-0.707471,-8.814881,-5.136618,0.451295,-2.801636]], dtype = "float64")#candidate|2589|(3, 84)|const|float64
call_2588 = relay.TupleGetItem(func_1004_call(relay.reshape(const_2589.astype('float64'), [14, 3, 6])), 0)
call_2590 = relay.TupleGetItem(func_1007_call(relay.reshape(const_2589.astype('float64'), [14, 3, 6])), 0)
func_1873_call = mod.get_global_var('func_1873')
func_1877_call = mutated_mod.get_global_var('func_1877')
const_2601 = relay.const([[-5.929325],[6.045092],[1.815348],[4.299278],[-5.389776],[9.935729],[5.435124],[-0.471281],[5.141242],[-0.026456],[-2.325893],[8.795443],[8.884066],[-6.085021],[4.019841],[-9.305949],[-8.816783],[-1.057004],[8.521360],[-7.517530],[8.355041],[0.874285],[-3.708243],[6.884117],[-0.776029],[8.959400],[-7.724649],[5.796216],[1.978352],[0.551667],[-8.212129],[-0.976532],[1.513589],[-3.000137],[-4.071286],[7.973228],[-0.958949],[-7.048396],[-1.422154],[4.030146],[-7.058087],[9.049387],[4.322619],[-0.628609],[3.654566],[-2.447816],[7.275122],[-5.510317],[3.327044],[5.171947],[0.524370],[-6.407923],[1.340685],[-0.011012],[-4.792751],[0.297233],[-2.580858],[3.004436],[1.273246],[-8.710513],[7.153953],[-9.372094],[6.596438],[-1.959687],[-6.813899],[3.714295],[-1.485299],[8.112883],[-1.164340],[7.185026],[3.427761],[1.001383],[-8.205147],[-0.993571],[1.405270],[-3.165219],[3.335389],[0.861117],[5.836645],[4.549312],[-9.250893],[-4.336162],[-9.718344],[-8.176343],[5.648724],[2.380286],[-5.244335],[2.185736],[6.326974],[-9.630941],[-6.115778],[-0.571128],[-9.837604],[5.042685],[1.744004],[9.861785],[3.774525],[-2.649142],[3.860632],[-9.143765],[-3.163888],[-1.095361],[4.771681],[0.686909],[3.287990],[0.427264],[-2.264718],[4.790565],[7.454575],[2.267714],[5.857491],[-4.378923]], dtype = "float32")#candidate|2601|(112, 1)|const|float32
var_2602 = relay.var("var_2602", dtype = "float32", shape = (324,))#candidate|2602|(324,)|var|float32
call_2600 = relay.TupleGetItem(func_1873_call(relay.reshape(const_2601.astype('float32'), [2, 4, 14]), relay.reshape(var_2602.astype('float32'), [324,]), relay.reshape(const_2601.astype('float32'), [2, 4, 14]), ), 3)
call_2603 = relay.TupleGetItem(func_1877_call(relay.reshape(const_2601.astype('float32'), [2, 4, 14]), relay.reshape(var_2602.astype('float32'), [324,]), relay.reshape(const_2601.astype('float32'), [2, 4, 14]), ), 3)
uop_2605 = relay.atan(call_2588.astype('float32')) # shape=(14, 3, 6)
uop_2607 = relay.atan(call_2590.astype('float32')) # shape=(14, 3, 6)
var_2608 = relay.var("var_2608", dtype = "float32", shape = (14, 3, 6))#candidate|2608|(14, 3, 6)|var|float32
bop_2609 = relay.minimum(uop_2605.astype('int32'), relay.reshape(var_2608.astype('int32'), relay.shape_of(uop_2605))) # shape=(14, 3, 6)
bop_2612 = relay.minimum(uop_2607.astype('int32'), relay.reshape(var_2608.astype('int32'), relay.shape_of(uop_2607))) # shape=(14, 3, 6)
output = relay.Tuple([call_2586,const_2589,call_2600,const_2601,var_2602,bop_2609,])
output2 = relay.Tuple([call_2587,const_2589,call_2603,const_2601,var_2602,bop_2612,])
func_2626 = relay.Function([var_2602,var_2608,], output)
mod['func_2626'] = func_2626
mod = relay.transform.InferType()(mod)
mutated_mod['func_2626'] = func_2626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2626_call = mutated_mod.get_global_var('func_2626')
var_2628 = relay.var("var_2628", dtype = "float32", shape = (324,))#candidate|2628|(324,)|var|float32
var_2629 = relay.var("var_2629", dtype = "float32", shape = (14, 3, 6))#candidate|2629|(14, 3, 6)|var|float32
call_2627 = func_2626_call(var_2628,var_2629,)
output = call_2627
func_2630 = relay.Function([var_2628,var_2629,], output)
mutated_mod['func_2630'] = func_2630
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2632 = relay.var("var_2632", dtype = "float32", shape = (8, 9, 13))#candidate|2632|(8, 9, 13)|var|float32
uop_2633 = relay.acosh(var_2632.astype('float32')) # shape=(8, 9, 13)
func_2103_call = mod.get_global_var('func_2103')
func_2106_call = mutated_mod.get_global_var('func_2106')
var_2636 = relay.var("var_2636", dtype = "float32", shape = (800,))#candidate|2636|(800,)|var|float32
call_2635 = relay.TupleGetItem(func_2103_call(relay.reshape(var_2636.astype('float32'), [5, 16, 10]), relay.reshape(var_2636.astype('float32'), [5, 16, 10]), ), 2)
call_2637 = relay.TupleGetItem(func_2106_call(relay.reshape(var_2636.astype('float32'), [5, 16, 10]), relay.reshape(var_2636.astype('float32'), [5, 16, 10]), ), 2)
func_1919_call = mod.get_global_var('func_1919')
func_1921_call = mutated_mod.get_global_var('func_1921')
call_2640 = relay.TupleGetItem(func_1919_call(), 0)
call_2641 = relay.TupleGetItem(func_1921_call(), 0)
func_2528_call = mod.get_global_var('func_2528')
func_2530_call = mutated_mod.get_global_var('func_2530')
const_2649 = relay.const([[-6.675194,1.227019,-4.097708],[3.268422,-2.317971,0.792764],[-0.923415,-5.954180,7.105901],[-5.190201,9.170311,-1.607083],[9.376736,2.978336,-7.241023],[-1.959406,3.951149,8.810810],[-8.433767,-6.178307,3.879507],[-5.391263,-5.399248,2.423588],[-3.454263,2.296400,-6.740120],[7.195386,1.455579,2.972091],[4.521412,1.425247,6.828214],[-2.533166,4.726376,9.681435],[-9.487137,-4.770852,-8.720145],[-2.459403,9.241129,-9.421557],[1.613188,-4.921271,7.852036],[8.452926,4.858752,7.524360],[8.693488,-0.113980,5.527259],[3.090146,8.191185,-9.942839],[4.168345,8.587203,-6.046908],[-7.378536,0.601567,6.035801],[-8.806867,1.150989,1.001750],[0.062903,7.627060,0.097887],[0.464600,-4.839317,-8.523073],[-4.874568,-2.961623,-9.730330],[6.591406,-5.149451,5.369841],[5.054302,-6.544805,-5.788065],[-7.210974,-4.949681,2.429577],[-8.490451,-2.407161,-6.733629],[4.585873,-6.829630,-3.963875],[6.077418,8.217201,-2.446168],[4.123809,2.865837,-6.228615],[3.601215,2.901672,-3.848652],[6.895664,8.506838,-7.153085],[-6.659629,-0.276950,5.755916],[3.038129,-5.171526,-5.832304],[-7.240933,2.840357,-0.347877],[5.208599,-7.624624,3.486269],[0.949791,5.502666,7.909685],[-2.837515,2.058135,-0.803604],[4.718176,9.215298,6.571403],[-0.174513,1.441037,2.914391],[-5.249854,1.588987,6.727963],[8.400338,8.349756,7.186172],[-9.583447,-9.498334,-5.176313],[-9.965136,5.369894,0.144057],[-9.094802,-2.234342,9.381324],[1.991937,-1.288273,-3.262820],[8.612116,-3.991217,-4.762403],[7.986347,-1.635314,5.021385],[5.976626,-5.592414,9.807796],[0.838816,-4.485745,-6.282052],[5.290976,1.201705,-3.027059],[6.516001,1.047056,5.368646],[9.894746,1.204427,-7.170187],[-1.299309,-1.637095,-4.233553],[-3.462266,8.260786,1.433581],[9.337652,0.318447,-6.422454],[-5.084480,-0.038465,-2.192182],[-7.828161,-5.428049,3.388193],[-6.713661,-0.573870,-3.230740],[-3.091007,-8.542128,1.029524],[7.542381,-7.299369,0.337187],[4.968320,-0.328263,-3.108422],[5.069330,-1.099474,-5.672779],[-6.441240,3.615890,9.171271],[-8.404616,7.406340,-0.676475],[-9.046817,8.108575,-5.695062],[-2.229671,-8.515038,0.926905],[8.260827,0.560526,1.144018],[0.676444,-0.478933,-2.237643],[-5.186324,-4.165796,-2.349588],[3.496669,-2.009781,5.976947],[9.646929,-1.117832,4.626634],[-7.331413,-5.877500,-3.868000],[7.954502,-0.396517,8.145425],[-7.077631,3.298485,8.463232],[0.773214,-0.667055,7.743779],[-3.788525,4.153800,-9.537323],[2.141213,5.762168,4.841909],[6.010788,2.851301,-0.373727],[-2.208473,1.138800,1.281773],[8.174516,8.478269,4.929148],[-7.704606,9.958100,-5.812246],[-2.233529,2.394450,-9.458859],[4.607281,6.999434,9.822464],[8.132040,-3.967070,8.326352],[5.271106,-9.754147,-1.218808],[8.142017,-9.129600,7.070703],[8.488536,-8.740430,2.125026],[5.615989,-0.272080,-6.170101],[-0.668024,6.106808,-8.432862],[4.624349,-1.198173,-5.515085],[2.004543,2.559893,-2.705202],[-4.928831,-3.654202,-5.434551],[4.247452,-2.613236,7.716417],[4.885869,8.290697,-7.550266],[6.035336,6.056836,-4.852300],[2.480185,-9.710990,9.637206],[6.681603,-2.969219,-0.969048],[4.983168,-6.908125,2.960406],[-2.877461,1.847658,4.767427],[8.469607,4.818200,-8.361937],[-5.677539,6.760888,-8.412366],[-6.292390,2.692228,9.542206],[0.514123,3.675073,3.285224],[8.843837,-6.159374,7.353352],[7.331555,-5.658533,9.214626],[-2.698157,-9.250656,-2.904633],[-2.756257,-8.832851,8.496991],[3.547746,3.920519,-7.239723],[6.506522,-3.159458,7.834292],[2.281824,4.556728,6.596735],[8.061725,-1.822575,-8.859107],[-9.813284,7.306282,-7.571169],[3.164751,-9.469934,-3.343586],[3.867306,-3.457493,5.917853],[0.076241,-0.473916,8.191762],[9.430392,7.756698,-7.243134],[3.905836,-9.536241,-9.504639],[7.817046,-7.687623,-1.508757],[1.518257,-3.689052,5.010308],[4.788381,6.201799,9.723766],[8.134465,4.617971,5.499378],[-9.312668,-3.323689,0.502073],[9.194317,-3.648516,-9.444377],[2.943896,-6.104204,-4.829277],[1.762288,-8.524289,5.982127],[2.351706,9.714851,-6.675774],[5.558037,1.704046,7.053007],[-8.762048,7.995738,4.475582],[2.713197,0.026877,-3.078886],[8.764545,6.524873,-5.947982],[-8.086494,-8.563299,-5.875134],[-0.475536,3.501539,-7.601500],[-9.649419,-2.460339,3.644035],[-2.858991,-0.259783,8.315739],[4.952648,-4.643043,-6.345557],[5.195430,9.403156,-9.124709],[-1.228918,3.528522,-8.298450],[9.182450,-5.979869,8.456354],[9.586582,-9.994859,6.227560],[-8.866729,-2.042540,-2.071133],[-3.599750,6.300415,7.236625],[8.424248,-7.100904,9.706164],[-3.196144,-7.433229,-8.154901],[0.479707,4.689208,4.319989],[6.020183,1.483825,3.204455],[-6.369229,2.169412,3.938063],[-7.563184,2.690249,6.055370],[8.967148,6.342290,-1.960529]], dtype = "float32")#candidate|2649|(150, 3)|const|float32
call_2648 = relay.TupleGetItem(func_2528_call(relay.reshape(const_2649.astype('float32'), [50, 9])), 2)
call_2650 = relay.TupleGetItem(func_2530_call(relay.reshape(const_2649.astype('float32'), [50, 9])), 2)
func_1873_call = mod.get_global_var('func_1873')
func_1877_call = mutated_mod.get_global_var('func_1877')
const_2663 = relay.const([[-6.361553,-8.985260],[2.481615,8.656118],[0.306859,-8.152408],[8.425311,-0.146400],[9.455566,-2.769659],[6.847499,-8.492349],[-1.214548,-9.242627],[5.788328,7.236261],[5.749789,2.786893],[-9.845166,-3.028182],[7.347692,1.642269],[-2.338812,8.858558],[0.799391,6.926048],[-3.127610,3.884740],[0.404381,-3.126627],[5.795033,-5.407281],[3.307888,3.503712],[-8.473613,1.288950],[-5.056272,6.454052],[2.288402,-0.833941],[-0.263470,0.398541],[8.695215,-4.480087],[-0.793949,-3.456871],[-7.854470,-2.002336],[-2.264140,9.391148],[-2.108738,-6.742197],[2.054634,5.677481],[-6.432023,1.540243],[-5.673790,-0.567207],[-8.386022,-3.116916],[3.750985,-8.515517],[-5.945155,9.645441],[2.819608,1.429942],[7.856554,-4.370021],[0.074142,4.285037],[-5.880727,5.538345],[-1.373525,-9.056823],[-0.316032,1.256319],[2.656780,1.677474],[2.895863,-2.809447],[6.223339,-4.297949],[0.786120,2.716361],[-5.434592,1.233009],[-4.662808,4.782960],[-7.966294,7.568960],[7.500738,-3.270383],[-9.036443,-6.101427],[-4.909095,-8.146562],[-0.998055,-9.622606],[-6.327943,6.567569],[8.282826,0.237678],[0.388211,-4.433131],[-3.973812,-1.907607],[-1.203652,0.772527],[-7.548869,-8.788105],[-3.349968,-9.364264]], dtype = "float32")#candidate|2663|(56, 2)|const|float32
const_2664 = relay.const([-4.847710,5.832365,9.979897,4.816995,3.856703,-2.228490,0.163478,0.052859,2.173608,0.067268,-0.501992,-0.827605,-5.803398,-6.050518,0.466660,5.921888,-6.308331,6.325823,9.400021,-6.352124,-3.984557,9.674077,3.233828,-1.458090,0.769311,-8.178916,3.897588,-7.355825,1.551803,-0.844205,-1.890549,-4.303981,-9.386762,-5.143355,2.041781,-9.894043,4.736358,7.436491,9.365476,7.495494,8.849740,-7.195216,-2.292523,0.708780,4.504727,7.755864,5.607454,-9.127862,1.809519,-1.772491,4.186482,0.355501,-1.171987,1.282903,-7.749626,-7.289667,-9.466412,-4.887106,3.754051,-6.814469,3.604351,8.548788,-0.474101,-9.301597,-8.586238,-7.312512,-6.896513,1.787604,-1.793920,-9.019247,4.526264,3.357844,7.379068,6.481298,7.550340,-6.148072,3.048718,9.626406,2.277241,6.893981,-0.179892,-4.131430,2.829386,2.545587,-4.554585,-2.114953,-6.650504,-9.560639,-4.281728,7.719976,4.058462,-5.616536,5.983816,-3.700379,-0.537276,-3.045188,0.224898,1.044061,-5.034862,6.969400,-9.919933,1.165115,6.258143,-6.149210,8.929719,0.323933,6.394158,8.482693,2.794501,-8.437059,0.904290,5.907714,0.445174,-4.782233,9.816624,-0.913225,4.329396,9.472157,2.990121,-1.482135,0.577932,-2.230075,-4.439316,9.683661,6.159856,9.141085,-1.902648,-7.672201,0.284224,-2.484083,-7.988988,-0.227316,-4.235183,-2.254913,0.576545,-0.986783,-7.851202,-5.822354,-0.954899,-7.114114,9.104231,-9.728537,-6.793021,8.285853,1.502738,4.052148,-2.936086,-7.441906,0.634253,5.720524,2.676880,9.889011,-9.009749,-7.716479,1.142485,-1.152715,-5.574083,-0.353046,6.757346,-0.393050,2.136819,-4.181304,1.623882,-8.619030,4.598980,-8.418760,4.182091,-9.344729,8.424801,-5.988986,-6.723301,5.118255,-7.176642,4.585400,7.289805,-7.704312,5.735395,-1.189013,6.739901,9.342133,-5.973206,-2.310280,4.142262,9.134669,8.392132,6.754703,8.926157,2.385308,9.974435,8.643809,-2.356664,6.681251,3.517487,0.806270,6.584965,7.305022,-2.850504,3.166827,1.982348,-8.306835,0.065143,-8.520275,-6.823141,-0.949978,-4.628896,-3.191403,6.744845,3.767884,4.940312,-9.339567,7.305621,2.111274,9.042419,-9.999343,9.556350,1.259097,-0.600592,3.573980,6.732053,-4.204501,-8.303352,9.500402,1.527088,-0.008680,2.783915,3.948664,-5.955347,-6.843592,0.697010,-7.995398,9.126817,2.189438,7.158104,-5.907650,-0.500894,7.508390,3.314646,3.586766,0.861602,5.478399,-0.211341,7.161266,0.498411,-8.646116,-9.024404,-0.374148,-7.078620,-6.007770,-9.060489,0.941003,1.060736,7.078266,5.611973,1.918098,-4.356209,8.515064,9.017826,-5.753029,-5.623147,-7.992622,8.738041,-4.034454,-5.453590,-9.603819,7.241092,-8.604653,-6.824466,6.275292,-7.812554,-5.932761,6.942042,0.836688,-0.611868,-3.130344,-0.907046,-4.492684,5.140427,7.356676,6.750291,-3.575241,0.298374,2.198250,5.467204,4.066751,-2.525433,-7.748369,7.004846,-2.594454,7.531211,-7.863091,9.751175,-7.044471,8.474068,7.271847,2.402170,0.143006,-7.478187,-1.097518,7.476966,9.103981,4.218181,-3.986052,3.645623,-4.280243,4.596125,-0.181903,5.383746,9.740235,-1.532791,7.309402,-6.406830,4.517337,-5.086484,-4.623806,8.962410,7.808899,-1.481245,-4.865086,-1.988568,-2.339009,8.418759,2.303795,4.804461,-3.373587], dtype = "float32")#candidate|2664|(324,)|const|float32
call_2662 = relay.TupleGetItem(func_1873_call(relay.reshape(const_2663.astype('float32'), [2, 4, 14]), relay.reshape(const_2664.astype('float32'), [324,]), relay.reshape(const_2663.astype('float32'), [2, 4, 14]), ), 0)
call_2665 = relay.TupleGetItem(func_1877_call(relay.reshape(const_2663.astype('float32'), [2, 4, 14]), relay.reshape(const_2664.astype('float32'), [324,]), relay.reshape(const_2663.astype('float32'), [2, 4, 14]), ), 0)
bop_2666 = relay.divide(uop_2633.astype('float32'), relay.reshape(var_2632.astype('float32'), relay.shape_of(uop_2633))) # shape=(8, 9, 13)
var_2671 = relay.var("var_2671", dtype = "float32", shape = (8, 9, 13))#candidate|2671|(8, 9, 13)|var|float32
bop_2672 = relay.logical_or(uop_2633.astype('bool'), relay.reshape(var_2671.astype('bool'), relay.shape_of(uop_2633))) # shape=(8, 9, 13)
var_2677 = relay.var("var_2677", dtype = "float32", shape = (8, 9, 13))#candidate|2677|(8, 9, 13)|var|float32
bop_2678 = relay.floor_mod(bop_2666.astype('float32'), relay.reshape(var_2677.astype('float32'), relay.shape_of(bop_2666))) # shape=(8, 9, 13)
bop_2688 = relay.equal(uop_2633.astype('bool'), relay.reshape(var_2671.astype('bool'), relay.shape_of(uop_2633))) # shape=(8, 9, 13)
var_2693 = relay.var("var_2693", dtype = "float32", shape = (8, 9, 13))#candidate|2693|(8, 9, 13)|var|float32
bop_2694 = relay.multiply(uop_2633.astype('int16'), relay.reshape(var_2693.astype('int16'), relay.shape_of(uop_2633))) # shape=(8, 9, 13)
func_1433_call = mod.get_global_var('func_1433')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_2698 = func_1433_call()
call_2699 = func_1433_call()
func_604_call = mod.get_global_var('func_604')
func_606_call = mutated_mod.get_global_var('func_606')
var_2704 = relay.var("var_2704", dtype = "float64", shape = (210, 2))#candidate|2704|(210, 2)|var|float64
call_2703 = relay.TupleGetItem(func_604_call(relay.reshape(var_2704.astype('float64'), [6, 14, 5])), 0)
call_2705 = relay.TupleGetItem(func_606_call(relay.reshape(var_2704.astype('float64'), [6, 14, 5])), 0)
output = relay.Tuple([call_2635,var_2636,call_2640,call_2648,const_2649,call_2662,const_2663,const_2664,bop_2672,bop_2678,bop_2688,bop_2694,call_2698,call_2703,var_2704,])
output2 = relay.Tuple([call_2637,var_2636,call_2641,call_2650,const_2649,call_2665,const_2663,const_2664,bop_2672,bop_2678,bop_2688,bop_2694,call_2699,call_2705,var_2704,])
func_2706 = relay.Function([var_2632,var_2636,var_2671,var_2677,var_2693,var_2704,], output)
mod['func_2706'] = func_2706
mod = relay.transform.InferType()(mod)
mutated_mod['func_2706'] = func_2706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2706_call = mutated_mod.get_global_var('func_2706')
var_2708 = relay.var("var_2708", dtype = "float32", shape = (8, 9, 13))#candidate|2708|(8, 9, 13)|var|float32
var_2709 = relay.var("var_2709", dtype = "float32", shape = (800,))#candidate|2709|(800,)|var|float32
var_2710 = relay.var("var_2710", dtype = "float32", shape = (8, 9, 13))#candidate|2710|(8, 9, 13)|var|float32
var_2711 = relay.var("var_2711", dtype = "float32", shape = (8, 9, 13))#candidate|2711|(8, 9, 13)|var|float32
var_2712 = relay.var("var_2712", dtype = "float32", shape = (8, 9, 13))#candidate|2712|(8, 9, 13)|var|float32
var_2713 = relay.var("var_2713", dtype = "float64", shape = (210, 2))#candidate|2713|(210, 2)|var|float64
call_2707 = func_2706_call(var_2708,var_2709,var_2710,var_2711,var_2712,var_2713,)
output = call_2707
func_2714 = relay.Function([var_2708,var_2709,var_2710,var_2711,var_2712,var_2713,], output)
mutated_mod['func_2714'] = func_2714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1433_call = mod.get_global_var('func_1433')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_2734 = func_1433_call()
call_2735 = func_1433_call()
func_2549_call = mod.get_global_var('func_2549')
func_2552_call = mutated_mod.get_global_var('func_2552')
var_2743 = relay.var("var_2743", dtype = "uint32", shape = (960,))#candidate|2743|(960,)|var|uint32
call_2742 = relay.TupleGetItem(func_2549_call(relay.reshape(var_2743.astype('uint32'), [960,])), 2)
call_2744 = relay.TupleGetItem(func_2552_call(relay.reshape(var_2743.astype('uint32'), [960,])), 2)
func_810_call = mod.get_global_var('func_810')
func_813_call = mutated_mod.get_global_var('func_813')
var_2749 = relay.var("var_2749", dtype = "float32", shape = (450,))#candidate|2749|(450,)|var|float32
call_2748 = relay.TupleGetItem(func_810_call(relay.reshape(var_2749.astype('float32'), [10, 9, 5])), 4)
call_2750 = relay.TupleGetItem(func_813_call(relay.reshape(var_2749.astype('float32'), [10, 9, 5])), 4)
func_604_call = mod.get_global_var('func_604')
func_606_call = mutated_mod.get_global_var('func_606')
const_2760 = relay.const([-0.854775,8.134604,-7.192641,-8.606393,0.068304,-1.573462,-7.631579,-3.196218,9.301740,-3.708543,-3.775208,6.323866,-5.541580,1.394088,-9.887070,-1.553597,6.424219,7.431238,8.904702,-7.678534,-7.412133,5.049139,-8.584588,-3.566003,-9.123418,3.916401,9.162044,-9.876396,4.395787,-3.850506,-7.834784,-9.808267,-5.442529,-7.307611,-8.475889,5.193611,9.819941,2.083349,-9.198655,4.971472,5.822658,-0.359517,0.066479,-7.334709,-9.050113,-3.444125,2.533575,0.074169,6.018368,9.181625,-1.252524,-9.640795,3.032423,3.929078,7.857181,-6.995936,4.051195,-8.557454,7.435037,-2.112871,0.354942,3.721829,2.620055,-4.608019,-3.640196,-6.966650,-5.036509,-8.053996,3.215479,-3.531591,7.073259,6.375191,5.121004,5.797554,-5.407735,-7.146743,4.570299,-4.298113,-0.667333,0.020044,-7.805979,4.753082,-5.199206,3.974438,9.834885,9.297533,-1.907564,-7.624994,-7.336109,7.242455,3.627204,-0.707494,4.051165,2.811669,7.755513,-5.885679,5.668738,8.010044,5.606494,2.181836,-4.607440,9.401766,6.319276,-3.443070,-2.992473,-1.590466,3.629240,-1.569663,1.446628,2.818820,-3.001849,-0.876632,3.261776,1.181001,-7.766509,-4.242730,6.053092,-8.395483,1.806629,-1.987448,-0.631610,6.546507,3.507413,-9.271106,6.043758,-5.405077,8.110245,6.226494,-7.916121,7.308994,0.353644,7.909921,-7.533102,6.671508,-3.797532,6.641578,-6.959326,-1.191466,-7.651646,-1.467041,-4.092687,6.652355,-6.656265,4.461717,8.250201,1.794684,-4.294947,-1.538981,-8.169805,-0.936355,7.704667,0.050103,-6.861317,-7.045153,-8.501485,-5.704878,1.808421,-1.315726,5.527890,-5.851932,8.525273,7.643100,-4.956716,-1.952746,-8.311151,5.439057,-3.667912,1.255176,-4.932530,8.128951,4.734845,-6.862353,7.797308,-2.969363,-8.016270,3.591403,-5.335552,0.759135,-5.873661,-3.176219,-0.445452,3.485291,-9.940101,3.809363,-1.096117,-0.414338,-1.535277,-6.746419,6.984706,-7.469438,3.732509,1.476675,3.642842,-3.749523,-1.132585,-7.691327,-9.894809,1.271778,-1.851737,6.836456,3.566316,-2.533882,-8.694135,1.326459,6.740955,4.250003,-1.862363,7.106648,3.336959,8.217935,-3.644909,-5.916241,0.518834,5.120102,-1.088726,-1.156803,-1.241656,-4.019518,7.903208,0.551789,8.977665,1.652547,0.644830,9.562233,-3.263839,6.602712,-3.881967,6.444613,4.586942,-0.871188,-1.537951,-2.007832,9.826263,3.088742,-2.833703,-6.198265,-3.862704,8.546522,-4.087473,-4.976182,-2.727437,5.232172,-3.708449,-0.718028,4.194154,9.900198,-5.270645,6.624944,-4.949484,-5.178847,2.819492,7.815450,4.243161,5.722772,3.427869,-8.790662,4.967245,1.963692,5.441906,-6.202964,-6.445378,-5.371721,7.883293,-5.961297,-3.092987,-0.945965,7.646435,2.275259,3.688431,-8.722917,3.207951,-6.472825,-4.645562,-4.878669,9.418293,8.880787,-1.046056,-5.793605,3.241028,-7.909964,-7.637568,6.160570,-0.187204,-0.034929,6.061225,-3.879029,7.099694,-4.764115,-7.081590,6.277327,2.623131,9.393532,-3.177440,0.052743,5.026101,-8.080622,-3.243666,7.931849,-8.305609,-8.310739,9.587780,-0.803245,4.413057,-0.745865,6.050826,-0.004142,-0.918359,6.251969,9.431128,-6.160595,-6.809273,-9.038480,-2.800590,8.948213,4.211461,1.774913,-8.984555,-2.870007,-1.877588,-1.375498,-2.097164,-6.925460,-0.066008,-6.617678,-9.504899,-7.587548,0.040707,4.202599,8.639074,-3.244001,6.156053,9.189555,-8.002021,4.013125,-4.472469,-4.263409,-8.793686,-9.476797,-3.275620,4.218866,6.120275,6.295574,-8.349451,7.224290,7.543789,5.579249,3.217598,2.782430,-9.148936,-1.640355,-4.412930,8.531508,3.221446,0.598836,-5.711512,-2.287231,2.962961,-7.600856,-9.960970,3.234808,-5.762544,-3.580561,7.194648,5.290856,3.468926,-8.240887,-2.399511,-0.656108,8.792115,-9.257812,-0.854892,-7.246537,-8.398651,-9.428146,-9.373300,5.942448,-9.816307,-9.118669,8.925120,2.011782,2.117728,-7.021675,1.789557,6.663752,-3.470116,6.545273,-2.563339,-2.903715,-4.150689,0.622698,-6.001027,4.773434,4.610677,-2.286603,5.308172,6.704040,-8.993662,8.049600,-4.114475,-5.600741,-1.465628,-3.780793,8.866247,4.955209,2.687821,-1.804102,9.660609,-2.833092,0.213622,9.349021,-5.161447,9.726895,-9.572768,-6.980575,4.999888,-7.982128,-7.115272,-4.113390,6.985001,-7.892811], dtype = "float64")#candidate|2760|(420,)|const|float64
call_2759 = relay.TupleGetItem(func_604_call(relay.reshape(const_2760.astype('float64'), [6, 14, 5])), 2)
call_2761 = relay.TupleGetItem(func_606_call(relay.reshape(const_2760.astype('float64'), [6, 14, 5])), 2)
output = relay.Tuple([call_2734,call_2742,var_2743,call_2748,var_2749,call_2759,const_2760,])
output2 = relay.Tuple([call_2735,call_2744,var_2743,call_2750,var_2749,call_2761,const_2760,])
func_2771 = relay.Function([var_2743,var_2749,], output)
mod['func_2771'] = func_2771
mod = relay.transform.InferType()(mod)
var_2772 = relay.var("var_2772", dtype = "uint32", shape = (960,))#candidate|2772|(960,)|var|uint32
var_2773 = relay.var("var_2773", dtype = "float32", shape = (450,))#candidate|2773|(450,)|var|float32
output = func_2771(var_2772,var_2773,)
func_2774 = relay.Function([var_2772,var_2773,], output)
mutated_mod['func_2774'] = func_2774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_673_call = mod.get_global_var('func_673')
func_675_call = mutated_mod.get_global_var('func_675')
call_2783 = func_673_call()
call_2784 = func_673_call()
output = relay.Tuple([call_2783,])
output2 = relay.Tuple([call_2784,])
func_2785 = relay.Function([], output)
mod['func_2785'] = func_2785
mod = relay.transform.InferType()(mod)
mutated_mod['func_2785'] = func_2785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2785_call = mutated_mod.get_global_var('func_2785')
call_2786 = func_2785_call()
output = call_2786
func_2787 = relay.Function([], output)
mutated_mod['func_2787'] = func_2787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1810_call = mod.get_global_var('func_1810')
func_1812_call = mutated_mod.get_global_var('func_1812')
call_2791 = relay.TupleGetItem(func_1810_call(), 0)
call_2792 = relay.TupleGetItem(func_1812_call(), 0)
output = relay.Tuple([call_2791,])
output2 = relay.Tuple([call_2792,])
func_2794 = relay.Function([], output)
mod['func_2794'] = func_2794
mod = relay.transform.InferType()(mod)
output = func_2794()
func_2795 = relay.Function([], output)
mutated_mod['func_2795'] = func_2795
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2810 = relay.var("var_2810", dtype = "uint8", shape = (5, 4, 12))#candidate|2810|(5, 4, 12)|var|uint8
var_2811 = relay.var("var_2811", dtype = "uint8", shape = (5, 4, 12))#candidate|2811|(5, 4, 12)|var|uint8
bop_2812 = relay.less(var_2810.astype('bool'), relay.reshape(var_2811.astype('bool'), relay.shape_of(var_2810))) # shape=(5, 4, 12)
var_2821 = relay.var("var_2821", dtype = "uint8", shape = (5, 4, 12))#candidate|2821|(5, 4, 12)|var|uint8
bop_2822 = relay.logical_or(var_2811.astype('bool'), relay.reshape(var_2821.astype('bool'), relay.shape_of(var_2811))) # shape=(5, 4, 12)
uop_2832 = relay.exp(var_2811.astype('float32')) # shape=(5, 4, 12)
var_2834 = relay.var("var_2834", dtype = "uint8", shape = (5, 4, 12))#candidate|2834|(5, 4, 12)|var|uint8
bop_2835 = relay.equal(var_2810.astype('bool'), relay.reshape(var_2834.astype('bool'), relay.shape_of(var_2810))) # shape=(5, 4, 12)
bop_2838 = relay.bitwise_or(uop_2832.astype('int32'), relay.reshape(bop_2812.astype('int32'), relay.shape_of(uop_2832))) # shape=(5, 4, 12)
uop_2843 = relay.cos(uop_2832.astype('float32')) # shape=(5, 4, 12)
func_1810_call = mod.get_global_var('func_1810')
func_1812_call = mutated_mod.get_global_var('func_1812')
call_2847 = relay.TupleGetItem(func_1810_call(), 0)
call_2848 = relay.TupleGetItem(func_1812_call(), 0)
output = relay.Tuple([bop_2822,bop_2835,bop_2838,uop_2843,call_2847,])
output2 = relay.Tuple([bop_2822,bop_2835,bop_2838,uop_2843,call_2848,])
func_2863 = relay.Function([var_2810,var_2811,var_2821,var_2834,], output)
mod['func_2863'] = func_2863
mod = relay.transform.InferType()(mod)
var_2864 = relay.var("var_2864", dtype = "uint8", shape = (5, 4, 12))#candidate|2864|(5, 4, 12)|var|uint8
var_2865 = relay.var("var_2865", dtype = "uint8", shape = (5, 4, 12))#candidate|2865|(5, 4, 12)|var|uint8
var_2866 = relay.var("var_2866", dtype = "uint8", shape = (5, 4, 12))#candidate|2866|(5, 4, 12)|var|uint8
var_2867 = relay.var("var_2867", dtype = "uint8", shape = (5, 4, 12))#candidate|2867|(5, 4, 12)|var|uint8
output = func_2863(var_2864,var_2865,var_2866,var_2867,)
func_2868 = relay.Function([var_2864,var_2865,var_2866,var_2867,], output)
mutated_mod['func_2868'] = func_2868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_421_call = mod.get_global_var('func_421')
func_423_call = mutated_mod.get_global_var('func_423')
call_2979 = relay.TupleGetItem(func_421_call(), 2)
call_2980 = relay.TupleGetItem(func_423_call(), 2)
var_2984 = relay.var("var_2984", dtype = "float64", shape = (4, 196))#candidate|2984|(4, 196)|var|float64
bop_2985 = relay.bitwise_xor(call_2979.astype('int32'), relay.reshape(var_2984.astype('int32'), relay.shape_of(call_2979))) # shape=(4, 196)
bop_2988 = relay.bitwise_xor(call_2980.astype('int32'), relay.reshape(var_2984.astype('int32'), relay.shape_of(call_2980))) # shape=(4, 196)
output = bop_2985
output2 = bop_2988
func_2989 = relay.Function([var_2984,], output)
mod['func_2989'] = func_2989
mod = relay.transform.InferType()(mod)
mutated_mod['func_2989'] = func_2989
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2990 = relay.var("var_2990", dtype = "float64", shape = (4, 196))#candidate|2990|(4, 196)|var|float64
func_2989_call = mutated_mod.get_global_var('func_2989')
call_2991 = func_2989_call(var_2990)
output = call_2991
func_2992 = relay.Function([var_2990], output)
mutated_mod['func_2992'] = func_2992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_873_call = mod.get_global_var('func_873')
func_875_call = mutated_mod.get_global_var('func_875')
call_3013 = relay.TupleGetItem(func_873_call(), 0)
call_3014 = relay.TupleGetItem(func_875_call(), 0)
uop_3017 = relay.sigmoid(call_3013.astype('float32')) # shape=(14, 3, 6)
uop_3019 = relay.sigmoid(call_3014.astype('float32')) # shape=(14, 3, 6)
func_2626_call = mod.get_global_var('func_2626')
func_2630_call = mutated_mod.get_global_var('func_2630')
const_3021 = relay.const([-0.170935,-6.523508,-4.218908,5.829035,3.750384,9.721115,-6.606669,9.067015,1.323053,5.129492,2.626095,7.567611,0.466187,-8.125098,3.637438,-2.385956,-3.244643,8.808676,2.684900,8.057705,-4.547834,-4.795737,-5.638819,-7.495420,-6.504935,-6.256960,3.883274,2.932465,7.359327,-0.795092,2.066832,9.744508,6.473705,4.396758,2.578571,3.024714,5.717835,-6.603200,-0.009853,4.221823,2.495460,-3.632404,-7.837760,6.659615,3.015113,-0.755002,5.423002,-8.963077,-0.566503,5.213710,-9.731979,-3.473915,-4.483017,6.679658,6.787604,7.684517,-9.341329,-7.913616,-8.568708,3.193031,5.188301,-1.943328,8.773709,4.385971,-0.871873,4.650706,2.583670,-9.143038,3.164341,-5.228016,7.676349,5.918027,6.803247,-4.956030,9.577792,4.227862,9.926388,4.841968,-2.774526,-5.518324,4.362237,9.758969,9.918031,4.926546,-7.002841,-5.224790,1.624549,2.287070,3.380643,-5.516509,9.690389,1.165010,-3.150338,4.560745,4.034863,9.355374,-5.744504,2.531525,2.023509,-1.905213,0.234912,2.613682,-1.120343,7.990009,-0.241987,-6.462909,-2.720115,-3.689132,6.519946,0.734373,7.922497,7.269254,-7.788486,-8.547659,8.101716,5.557634,2.797930,-1.745575,2.994774,7.645327,8.333558,-1.641661,0.099512,-9.127851,-0.815726,6.988916,6.743980,1.858833,0.016506,8.366003,-8.862669,0.701856,4.194415,0.373414,-0.493707,-4.125489,4.696310,5.517870,7.274509,2.174628,8.694489,1.865495,2.304539,-9.092872,-0.461751,-2.769536,-5.274632,-3.049810,7.631841,5.954764,-4.823800,4.053710,-3.030843,-9.706442,7.912367,1.374371,-7.510290,1.042498,-2.026886,4.354388,7.653876,2.653644,2.968617,7.333706,-6.276498,-1.798966,-3.109195,-0.606612,-6.502681,-3.759760,-3.939516,7.717517,-7.442730,-5.176000,-2.560622,-4.932615,8.419232,-7.859301,7.838419,4.774292,-4.700737,7.085351,-4.541762,0.506539,-1.462598,-4.107155,1.012402,-3.459785,-8.470205,-4.439919,-6.035829,-5.156160,5.710586,-7.149464,-0.723328,-1.527595,-4.939193,6.988668,6.703916,6.083357,-4.566885,-8.908107,8.082917,8.372080,9.053074,9.144927,-4.670922,-8.272390,-7.512619,7.716626,-0.226196,1.020996,2.830270,2.677556,9.845260,-6.024787,-1.623791,3.363953,8.503402,2.154498,8.697729,-5.207281,-9.261328,2.460168,-6.650703,8.157719,-5.984256,2.794952,8.319876,-8.361634,8.883804,-3.219004,6.308433,-4.473596,6.683789,0.931270,-7.749988,-3.918165,-2.670158,9.537507,-3.390337,-8.258697,3.354255,-5.187873,-7.246870,1.050437,-8.820411,-6.312484,1.418789,-2.608446,-4.179026,5.938067,-3.871906,-2.245450,4.676072,4.044716,-7.821508,-2.201467,2.307004,8.589933,1.484966,1.275429,-8.796640,3.716461,-9.813172,-8.662319,-7.956580,5.737370,-6.695091,0.117192,0.949385,2.220714,-4.256807,8.192471,1.537509,-6.278943,8.093750,-8.148511,2.636176,-7.947379,0.355302,-0.510881,-6.987115,-5.017669,0.208291,3.526320,-8.030210,0.877661,-5.139183,-8.160712,5.867684,0.699635,9.577673,-8.400160,3.813483,-1.624603,-9.699230,-5.362296,3.209775,1.150013,9.146856,8.952283,7.809381,-6.142624,-7.653682,4.852878,4.205539,-6.842506,-5.950524,2.394591,9.289874,8.725480,1.802562,5.053199,-5.424477,4.723058,2.294664,-6.148871,5.443531,-6.915890,8.221436,1.519096,-3.759948,5.783421], dtype = "float32")#candidate|3021|(324,)|const|float32
call_3020 = relay.TupleGetItem(func_2626_call(relay.reshape(const_3021.astype('float32'), [324,]), relay.reshape(call_3013.astype('float32'), [14, 3, 6]), ), 3)
call_3022 = relay.TupleGetItem(func_2630_call(relay.reshape(const_3021.astype('float32'), [324,]), relay.reshape(call_3013.astype('float32'), [14, 3, 6]), ), 3)
bop_3024 = relay.floor_mod(call_3020.astype('float32'), const_3021.astype('float32')) # shape=(112, 324)
bop_3027 = relay.floor_mod(call_3022.astype('float32'), const_3021.astype('float32')) # shape=(112, 324)
output = relay.Tuple([uop_3017,bop_3024,])
output2 = relay.Tuple([uop_3019,bop_3027,])
func_3031 = relay.Function([], output)
mod['func_3031'] = func_3031
mod = relay.transform.InferType()(mod)
output = func_3031()
func_3032 = relay.Function([], output)
mutated_mod['func_3032'] = func_3032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1343_call = mod.get_global_var('func_1343')
func_1344_call = mutated_mod.get_global_var('func_1344')
call_3117 = relay.TupleGetItem(func_1343_call(), 1)
call_3118 = relay.TupleGetItem(func_1344_call(), 1)
func_2771_call = mod.get_global_var('func_2771')
func_2774_call = mutated_mod.get_global_var('func_2774')
const_3120 = relay.const([[-6,5,-4,-6,-5,9,-2,-9,4,-3,-1,-9,9,-8,10,10,-4,-3,-5,-5,-4,4,-1,-3,8,-5,-8,-7,-10,3,6,-6,-10,3,6,8,4,-7,6,2,-3,-2,-3,5,-3,-1,-4,3],[4,9,-6,3,8,5,-8,-7,-5,-2,-9,10,-7,-3,8,5,4,3,3,-7,5,-5,10,4,3,2,2,4,-4,10,-6,5,1,7,-5,-4,-8,-3,-3,2,2,-7,-7,-4,9,3,1,5],[-6,-7,-7,-9,-10,-3,-9,8,-2,-6,6,-10,-5,2,10,1,10,-7,9,-3,-10,1,-5,1,-3,-6,8,-8,8,-3,7,-6,-2,-3,-1,-1,5,2,-2,-5,3,-6,7,6,-3,-6,4,5],[-5,8,-7,8,-10,9,-5,-9,-6,-9,-8,-8,7,1,-6,-9,9,8,8,-5,8,2,-8,4,-5,-7,-10,-6,-1,-8,7,9,-7,-9,6,-5,8,2,6,2,-8,4,5,5,-9,4,-2,-2],[-1,4,-5,-4,6,-2,1,-6,10,5,2,-1,2,-8,8,3,-1,1,-8,10,10,-8,6,9,4,3,-3,6,10,10,-4,-9,2,10,4,3,1,-6,3,-3,9,-2,10,8,4,10,-10,10],[1,-1,-1,3,-6,-9,4,8,9,4,10,3,-1,-3,-4,-5,4,-3,10,6,-3,-7,-8,10,6,1,7,1,7,-1,6,9,1,2,-6,-9,5,7,10,-3,1,-2,7,8,-7,6,-2,3],[5,-7,6,-3,4,4,-7,-2,-10,1,-10,-1,6,2,2,-3,3,-1,8,1,4,-7,4,-3,6,2,-1,-2,-2,-8,10,-3,-3,-3,6,6,9,3,3,-8,2,-4,4,-1,-8,1,2,10],[-6,-8,-7,4,-8,-1,-7,-9,-10,-1,8,-1,2,-6,-5,8,3,6,2,8,-9,2,-10,4,-5,6,-6,2,10,2,8,7,-8,1,-4,-2,10,8,5,1,6,3,-6,-2,5,-4,-6,4],[5,-5,-4,10,1,3,-2,5,-4,2,5,8,9,-5,-4,-10,4,-8,2,-2,7,-6,2,9,-2,-7,8,-9,1,4,4,-4,7,7,-9,-2,-8,7,2,9,-8,2,-4,-3,-8,-2,-10,1],[8,9,-8,-6,-1,-10,1,-10,-6,7,5,6,-6,6,-5,-5,4,10,5,10,-1,1,-10,2,-3,-5,-8,2,7,2,-2,5,-9,7,3,9,10,7,-9,3,8,10,6,10,9,-5,8,-8],[5,10,7,-3,9,6,-8,10,6,2,4,-7,-5,-8,4,-10,3,8,-9,-6,10,-6,10,6,6,10,-1,4,3,7,-8,-8,-6,9,-7,4,5,-8,4,3,-2,-1,-1,-9,7,-4,4,3],[8,5,-7,5,-7,-8,-10,2,-5,-7,7,3,-1,-8,6,-4,3,2,-6,-3,3,-5,-6,5,9,-8,-7,4,-5,-2,4,-5,-5,9,5,6,7,9,8,3,-5,6,1,9,-2,8,6,5],[2,5,-9,-5,10,-10,-7,8,5,3,5,5,-4,-3,8,-4,-3,-10,-9,1,-9,10,5,10,-3,9,9,-3,-8,-3,-6,9,-7,-4,-3,8,7,10,7,3,6,-5,-7,-8,-7,-1,2,-4],[10,5,-4,-7,-4,-4,-10,-10,2,-1,-6,-4,-4,7,7,-2,1,10,4,-8,-6,-9,1,3,5,-2,5,-5,5,2,3,-8,-5,10,8,8,-2,10,-6,-7,-9,3,7,2,10,-3,-1,-7],[-3,-6,5,-7,-8,-10,-10,-5,-8,-2,6,8,-9,9,3,-6,1,9,5,2,-3,-8,-1,-1,-1,3,-8,-3,3,-8,-6,-5,10,4,2,-9,-2,7,9,-2,2,8,-8,10,3,-10,-6,-9],[-10,10,-2,-6,-5,6,2,4,3,5,-5,3,-5,-8,-7,-5,-1,-9,-3,5,-8,10,9,6,-6,-3,8,-10,10,-3,-6,-6,-3,-9,-9,-2,7,1,-8,10,-9,-6,1,-9,-5,-10,1,9],[10,-8,-4,10,-4,9,-7,7,-4,-5,10,-9,-8,-5,4,1,-2,7,-1,1,-9,9,-1,-3,1,3,-2,4,9,9,3,-1,2,3,4,-3,4,8,8,2,9,-1,-6,-3,4,2,5,-2],[-9,2,-1,-8,-7,-2,-10,-6,-2,2,-4,6,-10,-7,10,-5,6,-6,-4,-4,3,-8,2,3,-5,-3,3,-8,8,1,-7,-8,-4,2,9,1,-3,4,-6,-1,-4,-9,8,10,-5,3,-7,-6],[5,1,5,-7,-10,6,-8,7,3,-8,5,6,-9,1,2,-7,5,-3,9,-9,-1,-6,-1,-2,1,7,8,-6,-4,2,-4,5,6,-2,-7,3,7,8,4,-4,10,1,-7,-2,5,7,3,-1],[-9,2,-5,6,6,-9,6,5,7,1,-4,4,-8,-9,2,-8,4,-9,-8,-10,-2,5,2,-1,8,2,-6,-1,7,5,-1,-10,-4,-5,-5,7,4,5,-3,-5,-10,-5,3,-3,8,-10,9,-6]], dtype = "uint32")#candidate|3120|(20, 48)|const|uint32
const_3121 = relay.const([5.074190,2.740688,-6.819394,3.693406,2.983712,9.823033,4.231341,-5.609068,1.114209,-1.256605,7.551062,1.300391,1.323443,-3.029758,4.725015,9.819213,5.554595,8.289542,-6.335363,4.348210,-4.212016,5.393524,-6.993592,7.222893,-8.070625,-0.599459,-2.228269,9.087075,4.590742,-3.085262,5.505478,-6.738317,-9.480039,-9.371502,-2.457983,2.253873,-3.635545,3.068567,-6.870962,-8.687960,-3.927017,-7.257563,4.281353,-7.602000,5.769434,9.981506,6.269354,-4.523267,7.307442,-5.890297,-3.193954,7.178304,-3.188283,4.463775,5.108687,2.137348,-8.040053,-7.980122,-7.539017,2.418645,7.084856,-1.077316,-6.723196,1.515772,3.138314,5.543716,4.077779,-4.883913,5.106802,-3.765416,1.147928,-0.758074,6.268065,4.056148,-9.381769,8.112628,8.276226,-5.469618,-0.277481,-6.995670,2.222460,-8.837402,-3.815529,-1.989401,-5.774305,-9.522268,-3.036612,-5.077549,-3.221571,8.619605,-9.339274,-8.704778,-2.795596,8.599600,-8.311029,-2.410453,7.231252,-2.158581,7.273002,-5.619326,7.256691,-6.639528,6.182358,3.718100,-0.521695,-3.225627,-7.748419,3.848006,5.589144,9.030969,-5.884710,9.404710,-4.729482,5.863734,-7.032123,-4.228539,-9.219797,-6.048286,4.973400,8.141922,-3.517371,-9.059290,1.944808,-1.794745,-1.154010,-3.186313,2.095867,-9.638221,-9.005844,-3.349474,7.337162,-4.887929,5.788185,-3.761126,7.316774,-2.849314,1.270191,-3.939002,-2.708285,-1.481331,-2.402127,6.553822,-5.606699,-5.839145,3.586001,-4.556671,4.960395,0.302018,5.196978,2.330025,4.142357,-3.165046,-9.861348,2.972750,0.661215,9.122269,2.845016,-0.063363,-7.569330,-9.132402,8.138958,2.497301,9.179762,7.938531,-9.807034,4.787860,-4.184705,-3.039562,-7.825653,-1.457519,2.408486,-5.676930,-9.266027,0.176645,4.540549,3.698816,-4.180456,8.257134,4.996950,-1.471760,9.044709,5.142938,9.437501,-8.255207,-5.974396,-4.548418,-5.025244,-6.019658,3.779440,8.557624,5.568145,0.140350,4.468844,1.825312,3.810101,-9.614932,-5.674216,-6.773452,-8.173335,2.207666,5.135752,-5.601883,-1.192340,5.602303,-7.181688,-9.606825,3.086645,9.751360,-3.075882,1.386160,-6.759671,-9.657860,3.778800,3.545025,2.929727,-7.778722,-1.123757,-5.683766,5.351144,-4.920047,1.823632,8.919041,-2.867866,9.025099,-8.985621,-2.799861,3.697729,5.377394,8.983145,-9.213497,0.485340,-5.267002,7.808975,0.045082,-8.858106,6.480991,-5.473277,-8.501010,2.432788,-3.333461,-2.148229,2.870053,1.346946,-0.616968,4.236744,-4.550691,-8.006017,-0.183195,6.627732,-2.613353,7.124798,1.721091,3.426694,-8.285904,-5.450130,-3.825559,1.929437,-8.775890,-1.178297,4.336822,0.788162,-3.585073,-1.362243,6.043530,-8.084506,3.688257,1.127923,-6.670457,-3.816836,-2.631449,8.513668,7.583036,-4.568914,2.010099,7.112438,-5.217050,-8.552461,-2.216813,7.625159,1.960568,5.836120,2.341489,9.974524,1.358274,-1.721951,-3.739274,-7.903045,-7.870571,2.625341,1.722555,-9.027255,6.180397,4.592865,-4.884396,-3.933635,-0.386647,-0.469565,-2.502649,3.801512,-2.522092,6.436808,6.708143,-9.550316,-0.937341,-5.187457,-0.568685,9.949747,9.371795,9.506587,6.369436,3.091746,-2.680257,1.294263,-8.196693,-7.106253,-7.843609,8.361382,-7.305424,0.226559,-7.298925,-0.551592,4.375626,-1.094688,-6.143621,-7.304068,0.925610,-3.184691,4.505518,6.064336,-1.661498,-9.983810,3.102746,3.995002,-6.457867,2.680228,-5.459852,0.522108,2.488423,-8.941793,-5.124690,-9.526547,8.134735,4.945890,-1.962537,-4.251197,-4.413457,-4.482459,-1.890104,4.772157,-4.772327,0.126604,7.706869,-0.035398,5.296335,-2.701894,5.286098,4.677031,9.806349,-5.345782,4.044077,3.902996,9.290765,-6.189250,3.997913,-7.763211,-8.035291,-1.011603,4.563711,-3.107035,4.233723,-5.292947,1.993545,0.494900,-5.449638,3.928687,-4.565792,6.334832,-3.642871,-4.809318,-0.340393,8.487554,-0.480153,-0.371104,3.820747,-5.971324,6.890448,2.273970,2.274897,-9.344882,-8.914553,5.362537,-8.230988,3.118104,-3.741796,-1.280296,-8.990198,9.597790,5.457803,-6.112084,1.552297,7.389106,8.463209,8.852655,-0.277888,-4.645897,3.164386,3.860569,8.990449,-7.281952,-2.485806,-7.946131,5.747720,-4.449871,6.245140,4.778720,5.606818,3.005526,7.279989,7.090234,-8.658908,8.931700,-5.026074,4.983320,2.812036,4.852983,-5.734287,-6.100787,-6.676395,-2.969394,-3.127980,-2.026583,9.463604,-3.419819,-9.224973,-9.465537,-6.731441,1.912144,-9.082333,-6.555750,-0.178057,-2.175133,2.060937,-7.051407,3.418055,5.175932,-9.160410,2.734079,6.695966,7.235719,-7.000538], dtype = "float32")#candidate|3121|(450,)|const|float32
call_3119 = relay.TupleGetItem(func_2771_call(relay.reshape(const_3120.astype('uint32'), [960,]), relay.reshape(const_3121.astype('float32'), [450,]), ), 4)
call_3122 = relay.TupleGetItem(func_2774_call(relay.reshape(const_3120.astype('uint32'), [960,]), relay.reshape(const_3121.astype('float32'), [450,]), ), 4)
output = relay.Tuple([call_3117,call_3119,const_3120,const_3121,])
output2 = relay.Tuple([call_3118,call_3122,const_3120,const_3121,])
func_3125 = relay.Function([], output)
mod['func_3125'] = func_3125
mod = relay.transform.InferType()(mod)
mutated_mod['func_3125'] = func_3125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3125_call = mutated_mod.get_global_var('func_3125')
call_3126 = func_3125_call()
output = call_3126
func_3127 = relay.Function([], output)
mutated_mod['func_3127'] = func_3127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1433_call = mod.get_global_var('func_1433')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_3135 = func_1433_call()
call_3136 = func_1433_call()
output = call_3135
output2 = call_3136
func_3137 = relay.Function([], output)
mod['func_3137'] = func_3137
mod = relay.transform.InferType()(mod)
output = func_3137()
func_3138 = relay.Function([], output)
mutated_mod['func_3138'] = func_3138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3031_call = mod.get_global_var('func_3031')
func_3032_call = mutated_mod.get_global_var('func_3032')
call_3142 = relay.TupleGetItem(func_3031_call(), 1)
call_3143 = relay.TupleGetItem(func_3032_call(), 1)
func_873_call = mod.get_global_var('func_873')
func_875_call = mutated_mod.get_global_var('func_875')
call_3151 = relay.TupleGetItem(func_873_call(), 0)
call_3152 = relay.TupleGetItem(func_875_call(), 0)
output = relay.Tuple([call_3142,call_3151,])
output2 = relay.Tuple([call_3143,call_3152,])
func_3160 = relay.Function([], output)
mod['func_3160'] = func_3160
mod = relay.transform.InferType()(mod)
mutated_mod['func_3160'] = func_3160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3160_call = mutated_mod.get_global_var('func_3160')
call_3161 = func_3160_call()
output = call_3161
func_3162 = relay.Function([], output)
mutated_mod['func_3162'] = func_3162
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3165 = relay.var("var_3165", dtype = "int8", shape = (16, 12, 6))#candidate|3165|(16, 12, 6)|var|int8
var_3166 = relay.var("var_3166", dtype = "int8", shape = (16, 12, 6))#candidate|3166|(16, 12, 6)|var|int8
bop_3167 = relay.multiply(var_3165.astype('int8'), relay.reshape(var_3166.astype('int8'), relay.shape_of(var_3165))) # shape=(16, 12, 6)
output = relay.Tuple([bop_3167,])
output2 = relay.Tuple([bop_3167,])
func_3176 = relay.Function([var_3165,var_3166,], output)
mod['func_3176'] = func_3176
mod = relay.transform.InferType()(mod)
mutated_mod['func_3176'] = func_3176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3176_call = mutated_mod.get_global_var('func_3176')
var_3178 = relay.var("var_3178", dtype = "int8", shape = (16, 12, 6))#candidate|3178|(16, 12, 6)|var|int8
var_3179 = relay.var("var_3179", dtype = "int8", shape = (16, 12, 6))#candidate|3179|(16, 12, 6)|var|int8
call_3177 = func_3176_call(var_3178,var_3179,)
output = call_3177
func_3180 = relay.Function([var_3178,var_3179,], output)
mutated_mod['func_3180'] = func_3180
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3191 = relay.var("var_3191", dtype = "uint32", shape = (1, 6, 12))#candidate|3191|(1, 6, 12)|var|uint32
var_3192 = relay.var("var_3192", dtype = "uint32", shape = (15, 6, 12))#candidate|3192|(15, 6, 12)|var|uint32
bop_3193 = relay.greater_equal(var_3191.astype('bool'), var_3192.astype('bool')) # shape=(15, 6, 12)
bop_3205 = relay.add(var_3192.astype('int64'), relay.reshape(bop_3193.astype('int64'), relay.shape_of(var_3192))) # shape=(15, 6, 12)
func_2626_call = mod.get_global_var('func_2626')
func_2630_call = mutated_mod.get_global_var('func_2630')
const_3220 = relay.const([9.224353,-6.785847,8.291349,-4.091327,1.223259,6.619408,-3.725534,-4.655128,-9.000972,2.183233,-8.095840,-3.431287,-2.774827,-7.880846,3.672951,-2.178195,7.617982,7.654055,-8.313075,-7.134219,4.592886,8.319350,-6.638833,4.337864,0.058077,-8.744196,-9.796458,3.313857,-8.637043,-9.461734,-3.520336,-7.268756,2.596640,-7.822926,9.001729,-1.435493,4.353342,9.217527,1.632336,-5.251243,6.832297,-7.672669,-2.941383,3.430411,8.786135,-9.353164,-2.497999,-7.254031,-8.955694,0.276324,3.346477,8.251251,-5.652218,-9.762961,6.714089,-1.820359,0.133137,-5.418884,3.449432,-5.126586,0.923507,-4.533985,3.493347,3.014169,0.499645,-5.712525,-2.827163,9.186753,-8.094349,-2.669150,8.244687,-3.478289,-5.298329,-5.590326,-3.373239,-3.426475,4.483125,-3.588011,9.898657,0.425301,-5.015721,2.680942,8.385026,6.786219,1.069497,8.432460,9.317861,4.736631,-1.484663,3.443797,0.454965,-3.669283,-2.392821,7.093774,-0.902975,-3.027970,-0.147499,-0.980561,2.148081,6.842740,5.218214,5.094215,5.314571,-8.934775,-7.286447,-8.147441,-2.005256,-5.584570,1.406258,-2.052025,-6.874146,6.539109,2.153931,-8.019829,8.212188,9.704186,-8.613656,7.083675,7.344112,7.429346,0.799622,2.551900,-9.729027,-4.625664,-8.125336,-6.972924,-1.222573,7.144757,9.301196,-0.056928,-4.122567,4.510172,-5.633643,-8.764667,7.260406,2.692842,9.779158,-1.694774,-5.918922,-9.712708,9.479623,-4.404033,-6.538914,3.948502,1.666661,-0.929076,2.733952,5.724823,8.282377,-2.894864,7.953224,6.745482,-1.295278,2.165478,0.201191,6.223935,-8.796724,-9.636406,-4.445880,-7.266845,0.533871,3.067841,-9.298307,-0.143944,-1.406810,-7.120844,-8.760623,-9.525400,8.429448,6.124368,3.228203,-0.236262,-1.446643,-5.156261,-2.299244,4.422073,-7.076364,0.197191,2.143585,-6.919277,-7.797016,3.445818,-6.226137,9.949056,6.287363,-8.821423,-1.191221,-4.709169,5.764542,5.789728,6.844663,9.183325,6.904723,7.580597,-4.127095,-8.853648,-3.839810,7.759524,3.759111,8.847979,-3.710798,-2.703496,-7.745699,3.018145,6.844810,4.210257,7.154682,-1.232071,9.688675,1.386553,9.766347,-3.765638,-5.079027,5.319940,1.017588,-0.945478,-1.610598,-1.326592,-2.212805,5.775289,-5.858242,-8.577307,3.776589,-3.196872,-3.174225,2.656915,4.448614,-0.095612,0.446274,9.357254,-1.635756,-5.496722,-3.746881,9.456839,4.725646,9.367304,1.218131,8.489666,-7.475582,-2.476442,-8.259203,2.801283,8.801908,9.702676,5.211345,3.836653,-1.307924,-8.824456,-3.856932,1.107938,-5.064894,7.695993,9.345653,7.502049,-9.189165,-7.422908,8.191776,-2.867948,3.941158,5.202955,8.571320,-2.783404,1.408236,-8.655821,-2.938037,5.258699,-1.912436,7.655632,1.995305,-0.751658,-5.967625,-8.371329,-5.157869,-8.248572,-6.950595,-8.062087,1.051508,-5.774912,6.554008,-4.247474,-6.819549,5.477668,9.726271,-7.606703,5.327908,-3.402558,-5.046199,3.665878,-8.474707,-3.554963,6.248874,-1.075126,-1.417901,4.168056,5.279320,9.690395,5.947538,7.485084,7.772809,-1.295383,-5.467193,-8.966018,3.077554,9.756727,-3.210974,4.702778,-7.281069,-4.235571,-5.387235,-5.609420,2.890283,2.995118,-5.324772,7.476816,2.523731,-2.849717,1.991270,-7.896969,-0.551886,-4.198338,0.936579,5.521121,1.891091,-5.579843], dtype = "float32")#candidate|3220|(324,)|const|float32
const_3221 = relay.const([8.385091,-5.715490,4.248444,3.755390,5.134005,-5.438489,1.798041,8.080718,-0.943030,-0.946888,3.519229,2.479638,5.125129,-3.848627,4.219344,0.113610,7.468299,-8.675569,-2.597410,9.393489,-8.968683,-1.054958,-7.964783,6.444356,0.174859,-3.599070,5.768990,4.039496,-1.322302,-9.766653,7.156764,-7.854454,5.599152,-4.439224,-0.378285,4.545912,5.092558,-0.392791,8.789443,8.985413,4.978246,-9.324127,2.246393,7.369491,7.170115,6.200243,-6.533420,2.531837,1.438672,8.122989,8.633198,-6.944993,-9.837031,-0.234547,-4.006590,-5.363541,-5.851054,1.045799,-1.167229,5.860735,-4.917269,-7.339073,-7.454605,-6.334777,9.997770,3.772840,-2.563712,-6.027411,0.817776,-1.972314,-1.967949,5.488739,4.123963,-7.599702,-6.819860,-3.105472,2.992976,4.382675,-3.897549,6.053433,5.993311,8.999749,-8.989091,-6.502959,-3.466131,1.905026,1.349152,4.973969,2.143790,-2.098980,0.483835,-6.667102,7.437218,-5.419361,5.151417,-1.161246,0.903220,-7.181087,4.218935,8.518545,-3.382894,-9.030019,5.697008,-5.055424,8.806022,-3.933902,7.714064,4.870281,-1.099164,7.927027,4.846686,-0.901463,0.881078,-4.193854,3.075156,-0.981602,4.416878,4.529403,4.504710,6.719104,-5.818719,8.661959,0.539862,1.895623,6.118765,5.419017,-1.007055,5.813592,3.213641,-9.726645,1.881387,-1.624732,1.943374,1.297654,1.021169,8.199344,2.029326,-8.052947,-9.553015,-8.548749,-2.836887,-4.610083,-3.327422,-4.770236,-5.719544,-4.209470,3.236439,-4.084673,8.707498,5.694072,-3.193507,-3.839886,-4.139994,-1.238406,-7.492831,-4.161536,7.156712,2.901149,-6.843394,7.164474,-6.982489,-7.930370,-1.168099,-4.209597,-1.031590,-6.149860,2.009616,-7.556476,3.827940,-3.786815,-0.764560,-3.149918,1.112359,0.999473,5.498999,-1.444845,-9.676560,-9.189757,6.383683,-4.227375,-1.266818,3.068973,-5.416492,9.383244,-8.029097,6.251975,-6.931623,-4.927894,-5.883897,6.660928,-4.858163,4.484918,-1.434726,0.348166,5.423299,-2.101129,9.144514,4.028532,7.837562,8.980376,-7.088061,-4.785316,8.707460,-9.884104,-9.620605,2.549839,-8.429214,-5.131460,-0.238353,-9.676935,0.587529,-1.949269,-4.409688,-0.744512,-4.524421,-7.555073,5.916645,-5.841870,5.609979,-3.873254,-8.690243,0.668369,-5.945436,-4.886441,3.554138,-6.080354,0.448346,7.671609,-8.884133,4.823790,-0.103014,0.039844,8.021923,-0.238290,5.482886,-1.794439,-8.741952,-3.032483,6.022715,-5.779872,6.530308,-6.752139,8.411398,3.677422,6.380804,-0.413022,-7.784445,9.078161,1.275289,-2.961154,-7.087748,9.487123], dtype = "float32")#candidate|3221|(252,)|const|float32
call_3219 = relay.TupleGetItem(func_2626_call(relay.reshape(const_3220.astype('float32'), [324,]), relay.reshape(const_3221.astype('float32'), [14, 3, 6]), ), 2)
call_3222 = relay.TupleGetItem(func_2630_call(relay.reshape(const_3220.astype('float32'), [324,]), relay.reshape(const_3221.astype('float32'), [14, 3, 6]), ), 2)
var_3223 = relay.var("var_3223", dtype = "float32", shape = (324,))#candidate|3223|(324,)|var|float32
bop_3224 = relay.greater(const_3220.astype('bool'), relay.reshape(var_3223.astype('bool'), relay.shape_of(const_3220))) # shape=(324,)
bop_3230 = relay.less_equal(const_3221.astype('bool'), relay.reshape(call_3219.astype('bool'), relay.shape_of(const_3221))) # shape=(252,)
bop_3233 = relay.less_equal(const_3221.astype('bool'), relay.reshape(call_3222.astype('bool'), relay.shape_of(const_3221))) # shape=(252,)
bop_3238 = relay.power(var_3191.astype('float32'), var_3192.astype('float32')) # shape=(15, 6, 12)
bop_3246 = relay.not_equal(bop_3205.astype('bool'), relay.reshape(bop_3193.astype('bool'), relay.shape_of(bop_3205))) # shape=(15, 6, 12)
uop_3251 = relay.atanh(var_3191.astype('float32')) # shape=(1, 6, 12)
output = relay.Tuple([bop_3224,bop_3230,bop_3238,bop_3246,uop_3251,])
output2 = relay.Tuple([bop_3224,bop_3233,bop_3238,bop_3246,uop_3251,])
func_3277 = relay.Function([var_3191,var_3192,var_3223,], output)
mod['func_3277'] = func_3277
mod = relay.transform.InferType()(mod)
var_3278 = relay.var("var_3278", dtype = "uint32", shape = (1, 6, 12))#candidate|3278|(1, 6, 12)|var|uint32
var_3279 = relay.var("var_3279", dtype = "uint32", shape = (15, 6, 12))#candidate|3279|(15, 6, 12)|var|uint32
var_3280 = relay.var("var_3280", dtype = "float32", shape = (324,))#candidate|3280|(324,)|var|float32
output = func_3277(var_3278,var_3279,var_3280,)
func_3281 = relay.Function([var_3278,var_3279,var_3280,], output)
mutated_mod['func_3281'] = func_3281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_904_call = mod.get_global_var('func_904')
func_905_call = mutated_mod.get_global_var('func_905')
call_3296 = relay.TupleGetItem(func_904_call(), 0)
call_3297 = relay.TupleGetItem(func_905_call(), 0)
func_68_call = mod.get_global_var('func_68')
func_72_call = mutated_mod.get_global_var('func_72')
call_3307 = relay.TupleGetItem(func_68_call(relay.reshape(call_3296.astype('float64'), [7, 8, 14]), relay.reshape(call_3296.astype('float64'), [7, 8, 14]), ), 0)
call_3308 = relay.TupleGetItem(func_72_call(relay.reshape(call_3296.astype('float64'), [7, 8, 14]), relay.reshape(call_3296.astype('float64'), [7, 8, 14]), ), 0)
bop_3313 = relay.bitwise_or(call_3307.astype('uint64'), relay.reshape(call_3296.astype('uint64'), relay.shape_of(call_3307))) # shape=(7, 8, 14)
bop_3316 = relay.bitwise_or(call_3308.astype('uint64'), relay.reshape(call_3297.astype('uint64'), relay.shape_of(call_3308))) # shape=(7, 8, 14)
bop_3322 = relay.left_shift(call_3296.astype('int8'), relay.reshape(call_3307.astype('int8'), relay.shape_of(call_3296))) # shape=(7, 8, 14)
bop_3325 = relay.left_shift(call_3297.astype('int8'), relay.reshape(call_3308.astype('int8'), relay.shape_of(call_3297))) # shape=(7, 8, 14)
output = relay.Tuple([bop_3313,bop_3322,])
output2 = relay.Tuple([bop_3316,bop_3325,])
func_3327 = relay.Function([], output)
mod['func_3327'] = func_3327
mod = relay.transform.InferType()(mod)
output = func_3327()
func_3328 = relay.Function([], output)
mutated_mod['func_3328'] = func_3328
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3432 = relay.var("var_3432", dtype = "bool", shape = ())#candidate|3432|()|var|bool
var_3433 = relay.var("var_3433", dtype = "bool", shape = (10, 4, 16))#candidate|3433|(10, 4, 16)|var|bool
bop_3434 = relay.logical_or(var_3432.astype('bool'), var_3433.astype('bool')) # shape=(10, 4, 16)
func_810_call = mod.get_global_var('func_810')
func_813_call = mutated_mod.get_global_var('func_813')
const_3440 = relay.const([[9.205749,-9.880504,1.211216],[-9.200769,-6.437577,-5.618958],[-0.468407,9.415620,-9.319348],[2.174680,-7.691127,4.794899],[2.632322,5.340710,5.963452],[-6.871892,7.973392,-6.654297],[-1.145739,-3.939097,-9.502294],[-9.641284,-1.341701,3.360471],[2.686588,8.626350,1.782679],[8.729774,-7.138191,-1.527504],[1.495286,-9.040001,7.182745],[6.638516,1.845003,-6.284830],[-3.180134,-5.318905,-6.456826],[2.814198,-4.353964,7.100837],[-4.451873,-6.567309,9.202509],[-5.485642,-5.349720,-6.381507],[7.578376,6.272473,5.854010],[7.954283,-7.484412,-7.805983],[4.575250,-9.153968,5.665893],[0.485451,-9.264131,-6.112178],[-0.111138,-9.001812,7.478347],[-3.519799,-0.449303,7.922463],[3.141909,0.644547,-6.709070],[-1.170424,-6.615036,7.608514],[-3.751261,0.379224,8.869214],[-2.111461,-4.658933,-8.939941],[4.019789,-7.344953,-5.116627],[-2.754204,-8.737345,5.912010],[6.053016,-1.612134,2.403927],[2.727354,-7.100177,-8.895358],[-6.017763,1.164350,-9.420305],[-5.506455,-3.082794,2.474789],[-4.683679,-8.610476,-4.572894],[7.815235,4.982861,3.781666],[-1.212078,-8.461254,4.684353],[-0.321707,-2.450297,-4.841093],[3.747234,-6.152485,6.443940],[-7.227307,0.396055,8.666724],[-6.641653,-1.323508,-7.951475],[-5.350123,-9.627253,-7.319891],[-1.584022,-4.813819,-7.766637],[7.980447,1.286474,-7.211002],[4.383903,0.518540,6.361778],[-8.820901,6.418155,-1.918678],[-1.478914,-3.939688,5.866735],[-1.055324,0.733310,-0.927293],[8.751351,8.452373,-4.006445],[-3.388353,-1.122925,-2.746077],[-8.713274,-0.741008,5.528334],[8.083581,7.440099,7.079293],[-4.103535,-7.252308,-8.250771],[-9.075736,-9.332672,-3.472030],[8.978997,1.680373,-4.126522],[3.827959,-2.370109,9.123316],[-0.045204,-4.015435,-3.194415],[9.655384,1.267060,7.264066],[-8.004122,-2.090492,0.565974],[0.995382,7.183228,9.133165],[0.321060,-2.182421,-2.838608],[4.684152,-9.976833,-6.098883],[3.039545,-9.494718,-4.056866],[-5.149845,7.007748,6.281816],[-5.140715,0.098993,2.448016],[6.716904,7.301207,9.242895],[8.342045,8.969097,-7.794164],[2.164064,0.531362,-0.565307],[8.913053,-6.983759,1.982849],[3.333021,4.328469,2.714461],[1.495136,2.713532,-6.254325],[-6.744517,5.410572,-3.335571],[-7.386828,-5.961212,2.295636],[6.786582,0.884706,6.622111],[0.630859,-4.922791,9.272525],[-5.926519,0.707832,6.847617],[-3.190377,7.039765,9.519794],[2.659080,4.839277,2.121456],[-3.017008,2.477599,9.898209],[3.936138,-1.481034,5.262678],[4.389046,-7.162990,9.343717],[4.250112,-6.367047,2.632315],[-1.596061,6.062323,-4.677849],[-2.043293,9.891605,8.029814],[-3.202846,6.739340,-0.656605],[-4.751113,-8.638341,-2.268836],[-7.619902,1.699418,6.948632],[4.528364,6.830033,2.191198],[4.238484,3.116268,-5.838047],[0.782088,4.933634,7.312974],[9.627039,3.996095,-7.338541],[4.184019,8.645954,2.425115],[-6.590759,-3.186732,0.061110],[7.325539,2.402197,1.395523],[1.844556,-6.762487,-9.724621],[4.401611,5.519236,1.458742],[-1.707678,1.760029,-4.782780],[-3.491803,9.935429,-0.097476],[4.962736,7.648717,-8.627958],[-6.969479,-2.605788,-8.187213],[-7.296413,-2.404650,2.228613],[1.122427,0.670126,1.051592],[-7.490158,-9.030560,5.473571],[-5.408419,-6.625749,8.599885],[2.512395,2.048214,0.095336],[-5.197200,3.942572,3.637007],[-0.892311,-6.645680,2.098782],[4.387585,-4.895415,3.979313],[1.146641,-7.099948,-2.751468],[-5.339081,2.358919,3.713177],[-7.365537,-4.391692,-0.840000],[-3.247708,-8.326879,-4.473169],[-9.843810,8.648662,5.723087],[-5.019390,6.212131,4.372578],[1.997497,4.999094,6.382191],[5.489698,-8.769018,8.684386],[5.183196,1.626381,-6.259028],[-0.601728,-7.059741,9.351641],[-1.568964,-4.798149,-4.893685],[1.492468,7.036701,-8.352689],[3.130780,-7.130690,8.942744],[2.365588,2.336255,8.865374],[-5.807560,5.299999,5.648122],[4.138083,-8.033653,1.648409],[0.853120,-0.180475,8.107506],[8.120263,-9.584905,-1.021039],[8.230916,7.667016,6.260493],[-9.005482,-6.416982,-9.870140],[7.274602,0.075252,4.971388],[-6.716461,-2.320341,1.318888],[-5.422184,-2.560272,6.436454],[-1.542186,-8.289512,2.624747],[-6.326089,-3.723754,5.230560],[1.690137,-3.066423,6.377087],[6.262428,-5.141971,-8.868248],[-5.349908,-9.617422,-5.207495],[5.422660,-7.970433,-4.070776],[0.566926,0.829460,8.322182],[-7.732437,1.048603,3.048773],[-8.496747,4.002584,-1.628095],[3.400591,-2.989174,-7.475316],[3.882700,6.781541,9.696553],[0.545110,6.106948,-9.013606],[-9.392877,4.934417,4.716532],[-0.074130,7.749914,-3.376173],[1.985304,-2.741757,6.653989],[-3.300363,8.220848,-9.349647],[1.558865,3.762470,2.110118],[3.692236,6.273730,8.206354],[-5.786380,-9.832355,8.866697],[5.651198,-3.743417,-8.541519],[-3.370596,-0.142564,5.416272]], dtype = "float32")#candidate|3440|(150, 3)|const|float32
call_3439 = relay.TupleGetItem(func_810_call(relay.reshape(const_3440.astype('float32'), [10, 9, 5])), 3)
call_3441 = relay.TupleGetItem(func_813_call(relay.reshape(const_3440.astype('float32'), [10, 9, 5])), 3)
uop_3454 = relay.acos(call_3439.astype('float32')) # shape=(10, 9, 5)
uop_3456 = relay.acos(call_3441.astype('float32')) # shape=(10, 9, 5)
var_3471 = relay.var("var_3471", dtype = "float32", shape = (10, 9, 5))#candidate|3471|(10, 9, 5)|var|float32
bop_3472 = relay.bitwise_and(uop_3454.astype('int64'), relay.reshape(var_3471.astype('int64'), relay.shape_of(uop_3454))) # shape=(10, 9, 5)
bop_3475 = relay.bitwise_and(uop_3456.astype('int64'), relay.reshape(var_3471.astype('int64'), relay.shape_of(uop_3456))) # shape=(10, 9, 5)
const_3478 = relay.const([[[0.198883,4.633036,6.940016,9.153922,2.694437],[7.725091,-7.326037,-7.197154,-8.913877,-5.373019],[8.523472,-0.908497,-6.801174,-2.644728,-2.329728],[-3.096682,8.024725,5.156869,3.286747,-6.246717],[2.707270,-4.940425,5.658442,9.418245,-5.640036],[-7.759109,3.353516,-7.448785,-1.264858,-9.420409],[-0.551539,-5.697111,-2.977800,-6.219497,-7.220066],[-3.320315,-6.412356,-7.206659,1.305907,8.421371],[2.787784,-7.991076,6.445939,-5.608668,8.849986]],[[-4.207906,-6.363748,6.341045,-7.565241,-7.021064],[-7.069517,-9.930330,1.540990,1.251555,-8.024391],[-3.557410,-2.600590,-2.581448,1.446813,2.783838],[6.064947,-2.645449,-2.174063,8.161706,6.612305],[-7.004625,-0.453893,-7.433890,7.496669,3.069558],[3.233897,9.303431,-2.487627,3.598234,6.769969],[-4.010258,-2.278491,-7.307406,-3.065307,6.406438],[6.327770,-3.068229,-9.086160,6.007955,-9.288955],[3.638127,-0.586083,1.848857,2.132140,5.529975]],[[6.981186,1.083900,-0.857537,-2.934121,4.119863],[2.293190,6.589429,6.641287,-0.966939,2.995020],[2.530718,-2.894719,-0.935777,-6.351199,-2.550823],[-6.653188,3.895307,5.665323,4.253114,-3.563112],[3.468532,3.788753,1.940704,-5.911187,7.886752],[-4.232954,7.436363,-3.600869,-0.149895,3.468084],[-1.487672,-6.639344,7.692072,-2.785106,-5.642873],[-0.224679,-3.678063,-3.486078,-2.157274,4.771468],[6.905850,-6.352235,0.527705,-6.799741,2.342696]],[[-6.513610,1.617115,7.631972,7.379683,5.802191],[-5.902915,1.624008,9.451997,5.081409,0.231844],[4.726347,-0.822562,5.388916,-0.059896,-0.128950],[7.008912,-4.045434,5.952261,5.616730,8.423069],[-5.062228,-9.824721,-9.427773,-4.951582,5.086562],[-8.382530,-6.909730,-2.040694,-9.631965,7.679989],[-9.257422,-9.898244,3.027776,-5.076370,-4.356164],[1.949635,-7.734454,-9.918137,8.485163,-6.160574],[-5.024570,8.058970,0.890021,-4.617932,-0.431247]],[[-0.592404,-6.044105,1.210330,6.864818,0.590799],[8.587610,-9.395897,-3.855155,-0.077719,8.758567],[5.142781,-9.583836,-3.863245,-0.750732,8.494148],[-2.771404,-0.618462,-4.859871,-8.602688,2.738542],[2.938107,-8.029871,-5.549821,6.025342,-3.666382],[3.730073,-1.474991,-1.246906,-3.816995,-1.439731],[-3.026586,3.045045,1.116568,-8.707637,2.175594],[5.407174,7.076916,8.023630,3.102443,-2.792745],[0.356779,3.874364,0.777680,4.821279,-7.117612]],[[-8.279030,-0.273975,8.533581,3.817911,-4.627636],[-8.987491,-4.806003,2.512201,0.994394,-7.059971],[8.353438,-6.679642,8.449877,-1.219660,6.836952],[-3.848411,9.503904,3.711621,7.305970,2.969828],[-4.311748,5.917222,6.608976,-0.681507,3.659949],[-8.696802,-5.820439,1.743361,3.501562,-0.022162],[9.882314,-5.038297,-6.476458,9.993775,-0.858753],[1.155019,-0.594189,7.210105,6.082938,9.950155],[-8.686551,8.755778,-2.640674,5.208448,7.769364]],[[-5.138247,-0.631959,7.101162,-3.396481,-5.272949],[2.686362,2.332118,6.484412,7.275272,-1.100963],[2.576951,8.663830,-9.223662,-2.990550,5.389715],[1.995454,-2.944513,-1.717716,-8.669096,-3.175465],[6.855405,-2.885764,-8.704607,-8.793822,9.972338],[-5.597581,7.511163,3.264422,2.285392,2.520260],[3.147880,-0.151061,6.521406,-3.387787,6.225303],[-8.755135,-6.310755,-7.938591,-2.353114,7.289995],[4.688665,1.738861,2.715606,-2.462276,-2.691567]],[[7.699690,2.363798,3.963941,-0.375820,-9.073159],[-3.121806,-3.865829,-7.697357,0.620885,1.739502],[-4.884793,-3.745691,-9.851406,-1.629773,-8.562307],[-0.525107,2.727110,0.630600,-3.143619,-2.792736],[-6.456952,-1.609298,4.658479,9.831493,6.345038],[1.577282,4.106566,1.874183,2.623962,9.012614],[-3.268900,3.282920,5.199757,-5.526264,-9.418722],[-0.948308,-2.542669,-3.731743,0.508200,-7.164083],[-3.569893,-5.422563,-8.108208,9.190735,-3.386337]],[[1.662520,2.409687,-0.375271,-9.986447,-1.395894],[5.372274,2.410396,6.073972,2.606554,1.380833],[-6.124559,-9.085582,5.476902,-6.842993,-4.045250],[4.444852,-5.390107,0.086520,7.516518,6.387358],[-5.491889,0.676917,-9.372507,1.542153,1.892741],[-4.930694,5.647462,7.317393,3.064274,1.446136],[-6.563339,6.077880,2.909054,3.184643,-1.728411],[0.793841,8.356700,-1.844216,8.013293,6.297694],[-5.774212,-4.877993,-8.854613,2.548147,-0.748173]],[[-9.756159,4.467608,0.488987,-0.996395,-3.208994],[3.450116,2.904355,-2.754322,2.678081,-3.471037],[-0.468874,-4.317653,-3.199766,-1.960315,-2.565205],[-3.105243,2.480259,-9.673321,8.856092,2.247562],[-7.459472,4.565396,5.476774,6.237766,1.727189],[-5.177510,1.009272,0.960890,1.020890,1.325422],[-6.648462,-9.679304,1.640842,-0.828618,6.172580],[-8.615173,-3.743548,-5.231466,2.546690,-4.879363],[1.352476,2.951178,9.353725,-8.683715,-9.841942]]], dtype = "float32")#candidate|3478|(10, 9, 5)|const|float32
bop_3479 = relay.power(uop_3454.astype('float32'), relay.reshape(const_3478.astype('float32'), relay.shape_of(uop_3454))) # shape=(10, 9, 5)
bop_3482 = relay.power(uop_3456.astype('float32'), relay.reshape(const_3478.astype('float32'), relay.shape_of(uop_3456))) # shape=(10, 9, 5)
const_3483 = relay.const([[[8.775951,-0.022528,9.472787,-9.487090,2.076443],[5.455847,-4.699455,4.883341,6.682315,8.320284],[5.570011,-9.320799,-7.297523,7.058877,0.692035],[6.272714,-3.171293,-1.917589,5.591595,-8.289615],[-4.811082,2.133682,7.305371,8.553279,9.588181],[-4.841056,4.889010,-7.810028,-1.047723,-6.327572],[-4.893075,3.401351,7.186875,-8.328502,-3.515602],[4.019837,6.866216,6.631324,4.356326,7.051177],[7.299940,7.278529,-7.767396,-5.561814,-3.123377]],[[5.914940,-9.258352,4.190943,-2.298107,-2.748039],[7.772657,4.975917,2.779562,3.239507,8.378607],[1.394071,-0.805901,-7.553686,-0.097873,-9.831982],[5.427359,2.666869,-2.908836,0.949296,-4.371546],[8.770543,5.715996,-0.772367,2.447653,1.926963],[9.029620,4.843088,-4.898834,-4.023515,-0.642691],[8.348393,-5.751613,0.610438,2.590223,6.847858],[4.662105,6.405322,8.299636,1.344908,-9.121097],[-2.468300,5.417325,7.776640,7.054093,-0.603386]],[[-4.122160,1.966318,-3.478636,5.923384,8.740018],[3.210580,9.968091,7.673698,3.946124,7.781420],[3.301136,4.238627,4.428408,-7.895420,-1.633678],[-8.166792,-5.297383,-0.282780,2.383085,2.748125],[-7.280327,7.754191,0.368428,9.031461,1.117955],[-4.616693,-9.539935,8.755880,2.606153,-9.416886],[-8.743408,-2.951817,-8.446354,5.356333,3.148124],[-6.938360,3.732148,8.338327,-6.943659,3.487071],[-5.153829,-5.367396,0.337224,-1.331259,-1.986621]],[[1.639142,-0.463408,1.785836,-7.966918,-2.349434],[0.186118,0.965247,-8.899118,-7.409859,0.398275],[-2.576353,4.198739,-9.736722,-6.566047,3.384823],[0.975605,6.596012,4.878808,-4.641998,1.601112],[1.701051,2.820283,5.418176,2.512034,-5.191042],[-4.957849,-7.862061,-0.820654,-6.973488,-4.626164],[9.585908,-1.447055,6.910923,6.114040,2.644735],[-9.348529,-0.211161,-7.428749,5.426471,6.728672],[-6.770000,-7.351070,5.319848,-9.064941,7.796492]],[[-6.108565,-3.386302,0.204728,-3.723650,-7.646871],[5.218796,-3.569704,-0.425415,3.934058,-5.496132],[-4.133230,-6.824268,-6.286653,5.266399,-4.777207],[8.107547,9.527422,1.240031,1.647325,1.355859],[-2.230804,-2.131404,-6.566658,6.494626,-1.310501],[-4.094397,-5.502400,3.026766,6.651146,2.889426],[2.749956,-5.671279,3.781614,2.993381,5.234023],[-8.644490,0.568178,-9.673180,8.930455,3.074880],[2.964818,-4.432494,9.036300,-0.561611,-1.299688]],[[-8.156181,-6.174754,-9.092664,-3.020920,-7.828157],[8.115254,7.551287,5.093618,-7.833831,4.935367],[-6.073840,-3.679375,2.564491,-2.847420,-0.882401],[7.029721,-0.013268,8.088069,9.727914,-0.852153],[0.088804,-0.698776,-2.685883,-7.837368,3.546040],[6.729762,-2.473025,-4.190422,5.515282,-6.422725],[-2.047268,-2.254229,0.462329,1.616532,4.314808],[6.246427,9.856210,-1.260003,1.058939,2.160840],[-2.838911,1.567732,-2.724152,-2.891897,-5.680915]],[[5.952627,9.844696,-0.361876,8.952088,6.808994],[4.504616,8.730596,9.448008,9.229746,-7.084445],[8.437200,9.158089,5.568905,-7.948611,2.161203],[-5.880827,7.540703,-4.868240,9.452860,-5.902518],[-6.273813,2.565754,-5.234142,4.342616,4.725784],[-2.193397,3.577082,2.450553,8.849288,-4.103815],[9.548253,7.833145,-4.473895,-6.433193,7.558752],[6.131502,-6.031801,0.575726,3.050174,-9.721537],[-1.948055,9.917683,-2.180149,9.067579,-2.076822]],[[-7.605947,-3.338233,4.704651,0.832149,-1.066026],[-8.809731,9.519173,-4.969526,2.855736,1.429253],[8.212858,8.821185,2.605619,0.164623,7.662045],[4.879136,0.900810,-5.845796,-3.539162,-6.598388],[-0.570266,-3.038034,-7.981557,6.804369,-9.588495],[8.581846,-4.361572,-3.896293,7.211182,-3.061515],[-8.452892,-7.191636,-9.411438,-5.553308,3.537548],[9.279303,1.562396,3.437668,4.420263,2.007136],[8.182328,8.835985,5.847274,-0.863719,1.926701]],[[-4.564807,-7.431071,-8.005758,5.015494,3.628384],[1.504986,-6.101379,5.049150,-4.690257,-9.336968],[-0.827768,7.958291,-1.215617,-9.192799,5.104504],[4.663991,9.628151,-4.212070,-7.017429,-8.088938],[-4.163789,9.749933,-0.640265,-1.267556,4.946661],[-4.796595,9.656280,8.661415,6.893111,-1.888340],[0.762020,-1.850114,0.668411,-0.592584,-5.651814],[1.211373,5.334739,2.978473,3.721482,-8.510579],[6.029135,8.139135,-7.596463,-2.851648,-0.039687]],[[-2.903809,-0.778826,-5.969447,-7.570903,-4.916999],[1.174231,9.343645,-1.398739,-6.275530,4.290215],[-9.399690,9.067076,9.833876,-2.436913,1.460602],[-3.483326,-4.374498,-5.161286,-8.307838,-2.826193],[2.313397,-2.288458,-9.202216,-5.385531,2.607403],[3.178637,-1.421425,0.771433,2.633861,9.508116],[-4.416703,-8.407459,-7.275510,6.803212,3.692225],[4.012773,3.189073,-2.683498,-4.990923,-4.513730],[-3.074709,8.201481,-0.954570,-5.486225,-3.280258]]], dtype = "float32")#candidate|3483|(10, 9, 5)|const|float32
bop_3484 = relay.minimum(const_3478.astype('int8'), relay.reshape(const_3483.astype('int8'), relay.shape_of(const_3478))) # shape=(10, 9, 5)
output = relay.Tuple([bop_3434,const_3440,bop_3472,bop_3479,bop_3484,])
output2 = relay.Tuple([bop_3434,const_3440,bop_3475,bop_3482,bop_3484,])
func_3488 = relay.Function([var_3432,var_3433,var_3471,], output)
mod['func_3488'] = func_3488
mod = relay.transform.InferType()(mod)
var_3489 = relay.var("var_3489", dtype = "bool", shape = ())#candidate|3489|()|var|bool
var_3490 = relay.var("var_3490", dtype = "bool", shape = (10, 4, 16))#candidate|3490|(10, 4, 16)|var|bool
var_3491 = relay.var("var_3491", dtype = "float32", shape = (10, 9, 5))#candidate|3491|(10, 9, 5)|var|float32
output = func_3488(var_3489,var_3490,var_3491,)
func_3492 = relay.Function([var_3489,var_3490,var_3491,], output)
mutated_mod['func_3492'] = func_3492
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3550 = relay.var("var_3550", dtype = "float32", shape = (1, 2, 4))#candidate|3550|(1, 2, 4)|var|float32
uop_3551 = relay.log(var_3550.astype('float32')) # shape=(1, 2, 4)
output = uop_3551
output2 = uop_3551
func_3553 = relay.Function([var_3550,], output)
mod['func_3553'] = func_3553
mod = relay.transform.InferType()(mod)
mutated_mod['func_3553'] = func_3553
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3554 = relay.var("var_3554", dtype = "float32", shape = (1, 2, 4))#candidate|3554|(1, 2, 4)|var|float32
func_3553_call = mutated_mod.get_global_var('func_3553')
call_3555 = func_3553_call(var_3554)
output = call_3555
func_3556 = relay.Function([var_3554], output)
mutated_mod['func_3556'] = func_3556
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3558 = relay.var("var_3558", dtype = "float64", shape = (9, 13, 3))#candidate|3558|(9, 13, 3)|var|float64
uop_3559 = relay.sinh(var_3558.astype('float64')) # shape=(9, 13, 3)
uop_3570 = relay.log(uop_3559.astype('float32')) # shape=(9, 13, 3)
bop_3576 = relay.multiply(uop_3570.astype('int32'), relay.reshape(uop_3559.astype('int32'), relay.shape_of(uop_3570))) # shape=(9, 13, 3)
func_3277_call = mod.get_global_var('func_3277')
func_3281_call = mutated_mod.get_global_var('func_3281')
const_3580 = relay.const([[2,-9,-10,4,5,7,6,8,7,-3,8,4],[-7,-8,6,8,3,-9,-4,-4,-8,8,5,2],[-5,4,7,3,-9,-6,8,-3,1,-5,-4,3],[10,-5,-9,-6,4,-10,-10,-6,6,5,5,-5],[7,-1,-9,-4,8,-5,-8,3,-4,6,6,4],[5,-5,7,-9,2,-7,6,1,3,-1,10,7]], dtype = "uint32")#candidate|3580|(6, 12)|const|uint32
const_3581 = relay.const([-8,7,6,-3,-2,-5,-7,3,-7,7,3,7,-5,9,8,6,-8,2,-3,-7,7,8,-8,-10,-9,6,-9,7,-7,-5,-2,-5,-4,-6,-1,-3,-6,2,1,-10,9,4,8,-1,8,4,-6,10,-5,8,1,6,-2,3,2,-8,1,8,-3,-6,6,-1,-8,-4,-9,-3,-2,8,-9,1,-6,2,-1,9,-9,7,7,-10,8,10,-4,8,1,-4,-10,-2,4,-4,-4,10,-9,1,-2,-3,-2,-10,5,4,7,-8,5,-3,-4,5,-1,-1,10,6,-10,-6,1,1,-5,6,5,9,4,10,-9,5,-9,-10,-6,-3,-3,-1,7,2,8,-6,-2,6,6,-3,10,5,-2,-8,-9,-9,2,-9,-3,-2,9,-8,2,-4,-10,1,4,-9,1,9,10,4,-9,2,-4,-6,10,-3,-8,1,5,-7,-10,-9,4,10,-5,8,9,-7,2,-7,7,-7,10,-4,9,-6,-10,9,3,9,-6,-4,-7,-10,-6,3,1,-10,-7,-6,8,3,-8,-3,4,1,-9,4,5,4,5,5,-7,-6,1,-9,5,6,-6,4,-1,9,9,-5,-1,8,-6,1,9,-6,-9,-9,10,-8,6,-6,7,8,-3,2,4,10,-2,3,-8,10,-5,2,6,-2,1,1,5,6,2,2,6,6,-2,-7,-10,-8,8,8,9,6,10,-2,7,-3,-3,-7,-6,7,3,-8,3,-6,7,4,-6,8,8,-2,-7,3,1,-9,2,7,-1,6,3,6,-8,6,1,-1,-5,3,8,-1,6,6,-7,-5,7,2,-5,-10,9,8,-3,10,-10,9,10,6,2,-6,-6,5,2,5,-6,-10,-2,-4,7,-2,-8,6,-5,-4,8,-3,-10,-10,-8,10,10,10,10,9,-9,-6,-6,-4,7,-7,7,1,-10,10,4,5,-1,9,10,-7,-1,-7,7,9,9,-1,5,4,1,-7,-3,2,-9,3,9,10,5,10,-7,8,-2,-2,10,-6,7,7,-8,-6,-10,-6,-1,10,4,-9,-8,6,-7,8,-2,8,2,3,-4,6,-8,-2,1,-6,-1,-5,-4,-8,-7,8,-5,-3,4,6,3,-10,8,-9,-4,-3,1,-4,7,8,2,-7,4,3,-6,-6,3,-9,7,-10,-4,-6,1,2,3,3,-9,2,2,3,-6,-6,-2,2,2,10,4,-1,-7,-4,4,-8,10,8,7,8,8,-6,9,-2,9,9,8,-10,-4,7,-4,2,-5,5,-10,9,7,10,1,-6,-4,6,4,8,2,7,10,-7,-2,1,5,1,3,-7,3,-7,-10,-8,-10,-4,10,6,5,-7,8,-8,-5,-7,10,5,9,10,-6,6,3,-8,-3,6,-2,2,10,4,-1,-6,-7,4,-6,5,-3,7,1,10,2,2,9,-5,-8,-4,10,-9,4,2,10,-1,-10,-8,6,5,-5,3,2,3,-4,8,9,-2,-3,-3,2,5,-4,3,4,-7,6,3,7,8,4,-7,3,8,-4,10,-6,-9,1,-10,1,-4,-9,-5,-6,8,-8,5,-4,9,7,-3,-6,3,4,2,3,2,-4,6,9,10,-9,-1,9,1,1,8,8,-5,-7,8,1,-3,7,5,-5,3,1,7,6,-5,-3,4,-6,-4,6,-6,3,3,1,6,-4,-10,-5,-6,-8,-9,6,10,4,9,-7,-8,4,-8,1,1,-5,2,-1,-2,-9,-9,8,-9,3,-4,-2,-9,-6,-1,3,4,-6,-9,-7,5,-3,3,4,-4,9,-7,10,7,-5,3,-2,-7,5,7,-6,-2,-9,-10,8,-9,-10,7,-4,-6,-5,-10,-5,-7,-2,4,7,7,-2,8,-1,-6,5,2,8,-2,-6,9,-9,4,1,9,6,5,-3,8,1,-6,7,-10,6,9,-4,3,-7,5,9,-9,10,-4,8,-8,8,-7,-1,-2,-9,-7,1,4,-1,7,3,-4,1,-7,-2,10,-8,-4,6,-6,-9,7,4,-8,-2,-4,3,9,10,3,-2,9,-9,-9,-1,9,-7,-7,-8,8,2,-5,2,6,-10,3,1,-2,-6,-5,-5,6,9,-4,10,4,-4,6,-3,-7,3,-2,3,-3,4,-6,2,-2,-5,7,8,7,2,-9,8,-5,7,5,3,9,-8,6,-6,9,7,-7,7,1,9,-4,8,-8,-9,7,1,-9,10,8,-8,-5,3,1,8,-1,2,4,7,6,-6,-7,-8,7,4,4,-4,-6,-3,-9,9,-7,-7,2,6,-1,-3,-1,-7,-9,-6,4,1,7,6,-4,9,-7,-2,-2,7,3,4,-10,-4,3,-1,-10,-8,6,-4,-1,2,9,7,4,-7,-5,-1,-1,6,-3,-2,1,9,-3,8,7,-2,-5,10,-2,-8,-7,1,-4,-1,-4,-1,10,-2,4,-7,-1,-7,-7,-10,3,7,5,-7,7,-7,2,5,7,-5,1,-1,-2,-1,-5,-1,8,-10,7,3,7,6,5,1,3,2,1,-6,-4,-3,7,9,1,-8,7,6,-9,-3,-6,-8,-2,2,-6,6,5,-8,3,-6,7,7,-5,-9,-5,-1,-9,-9,9,-6,-10,-2,-4,-5,-8,-3,7,8,-3,8,-1,9,8,-5,-9,-2,5,-2,-6,8,-10,-6,1,10,-3,1,9,-6,-8,-6,3,-6,3,1,-6,1,2,-4,-3,8,-5,2,9,-3,-10,-3,-8,-5,-6,-10,5,-10,-9,1,-1,10,8,-1,1,-1,4,5,-3,-3,-7,3,4,-1,8,-7,-1,-4,-10,-5,9,-1,9,7,8,-3,4,-9,9,-1,1,3,-6,2,-2,-6,-2,7,3,-5,3,6,-2,-6,-4,-8,-7,-9,-8,9,-8], dtype = "uint32")#candidate|3581|(1080,)|const|uint32
var_3582 = relay.var("var_3582", dtype = "float32", shape = (324,))#candidate|3582|(324,)|var|float32
call_3579 = relay.TupleGetItem(func_3277_call(relay.reshape(const_3580.astype('uint32'), [1, 6, 12]), relay.reshape(const_3581.astype('uint32'), [15, 6, 12]), relay.reshape(var_3582.astype('float32'), [324,]), ), 0)
call_3583 = relay.TupleGetItem(func_3281_call(relay.reshape(const_3580.astype('uint32'), [1, 6, 12]), relay.reshape(const_3581.astype('uint32'), [15, 6, 12]), relay.reshape(var_3582.astype('float32'), [324,]), ), 0)
bop_3584 = relay.logical_or(uop_3559.astype('bool'), relay.reshape(uop_3570.astype('bool'), relay.shape_of(uop_3559))) # shape=(9, 13, 3)
var_3590 = relay.var("var_3590", dtype = "bool", shape = (9, 13, 3))#candidate|3590|(9, 13, 3)|var|bool
bop_3591 = relay.greater_equal(bop_3584.astype('bool'), relay.reshape(var_3590.astype('bool'), relay.shape_of(bop_3584))) # shape=(9, 13, 3)
uop_3606 = relay.asinh(bop_3591.astype('float64')) # shape=(9, 13, 3)
func_1611_call = mod.get_global_var('func_1611')
func_1613_call = mutated_mod.get_global_var('func_1613')
const_3615 = relay.const([6.475438,2.680852,-8.570733,-6.162434,-8.645744,5.834772,4.224922,-9.765226,6.643285,0.843570,-2.450921,-0.136565,5.258608,-6.639715,-6.535055,-3.087818,-5.296602,2.666572,-9.334629,8.461592,-2.539341,7.462798,-2.761816,7.652479,3.471320,-1.698601,-9.231811,1.376659,-0.855985,7.657091,5.926025,-5.665172,7.173933,-1.922723,-1.298137,-6.041718,-4.230805,-2.511536,4.239328,2.084062,4.489034,-9.402326,-0.140301,2.277948,6.212665,8.889924,-3.406827,4.055023,8.798193,6.949193,8.417790,8.994731,0.932247,5.975713,2.491329,8.883689,-6.587699,-6.622874,9.987043,3.664372,-7.248841,0.499415,-2.832794,-1.106016,-6.907362,3.139540,5.970064,-8.431274,8.278224,8.166821,-9.383019,3.985984,-2.273025,4.976731,7.568159,8.316281,2.705094,3.381706,8.759500,-0.853745,2.117753,9.764399,-0.795938,-3.516521,9.234371,-3.403735,-9.682291,-0.563172,7.948833,3.427870,-4.518671,7.124530,6.104269,-6.321433,-8.536822,5.871028,-7.140903,6.711155,-9.795899,-6.353074,4.307916,3.826219,-3.725742,8.369778,5.451982,8.881936,6.363953,1.074002,7.559017,6.469547,-3.077456,6.822147,4.135998,9.870766,-6.307683,-9.398048,-8.677255,-0.250470,5.095832,5.087286,-2.041792,0.010280,0.077450,-5.601431,-9.578241,-5.033495,-6.773943,8.566285,-7.037744,7.804218,8.190098,4.367154,7.279253,-6.056352,0.492644,8.018458,-0.360630,5.745009,-0.224122,-8.737223,5.628237,8.634564,8.396207,1.113382,-6.381759,-8.216748,-0.551641,4.608410,5.808372,1.841260,2.101535,-9.422869,5.386011,1.034707,-4.178432,-3.763065,6.708803,5.314063,-7.479636,-1.791404,-4.181709,-3.946881,-0.333176,-6.770381,-6.354990,-5.401406,7.957935,0.162021,-3.270585,-9.393605,2.750436,-5.178200,-5.824037,7.182701,2.289203,7.687630,-4.688826,-6.484033,-8.147891,4.028585,-1.966139,-5.258270,-3.977669,-1.387948,1.542762,9.931493,6.567967,9.541702,-0.874126,7.381987,-9.416749,5.121760,-3.532596,-6.004414,-0.487790,1.932225], dtype = "float32")#candidate|3615|(196,)|const|float32
call_3614 = func_1611_call(relay.reshape(const_3615.astype('float32'), [14, 7, 2]))
call_3616 = func_1611_call(relay.reshape(const_3615.astype('float32'), [14, 7, 2]))
func_1489_call = mod.get_global_var('func_1489')
func_1492_call = mutated_mod.get_global_var('func_1492')
call_3621 = relay.TupleGetItem(func_1489_call(relay.reshape(var_3582.astype('float32'), [12, 3, 9]), relay.reshape(var_3582.astype('float32'), [12, 3, 9]), ), 0)
call_3622 = relay.TupleGetItem(func_1492_call(relay.reshape(var_3582.astype('float32'), [12, 3, 9]), relay.reshape(var_3582.astype('float32'), [12, 3, 9]), ), 0)
bop_3637 = relay.minimum(uop_3606.astype('float64'), relay.reshape(var_3558.astype('float64'), relay.shape_of(uop_3606))) # shape=(9, 13, 3)
bop_3643 = relay.power(uop_3559.astype('float32'), relay.reshape(bop_3584.astype('float32'), relay.shape_of(uop_3559))) # shape=(9, 13, 3)
func_2989_call = mod.get_global_var('func_2989')
func_2992_call = mutated_mod.get_global_var('func_2992')
var_3650 = relay.var("var_3650", dtype = "float64", shape = (784,))#candidate|3650|(784,)|var|float64
call_3649 = func_2989_call(relay.reshape(var_3650.astype('float64'), [4, 196]))
call_3651 = func_2989_call(relay.reshape(var_3650.astype('float64'), [4, 196]))
var_3658 = relay.var("var_3658", dtype = "int32", shape = (9, 13, 3))#candidate|3658|(9, 13, 3)|var|int32
bop_3659 = relay.bitwise_xor(bop_3576.astype('int16'), relay.reshape(var_3658.astype('int16'), relay.shape_of(bop_3576))) # shape=(9, 13, 3)
output = relay.Tuple([call_3579,const_3580,const_3581,var_3582,call_3614,const_3615,call_3621,bop_3637,bop_3643,call_3649,var_3650,bop_3659,])
output2 = relay.Tuple([call_3583,const_3580,const_3581,var_3582,call_3616,const_3615,call_3622,bop_3637,bop_3643,call_3651,var_3650,bop_3659,])
func_3679 = relay.Function([var_3558,var_3582,var_3590,var_3650,var_3658,], output)
mod['func_3679'] = func_3679
mod = relay.transform.InferType()(mod)
mutated_mod['func_3679'] = func_3679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3679_call = mutated_mod.get_global_var('func_3679')
var_3681 = relay.var("var_3681", dtype = "float64", shape = (9, 13, 3))#candidate|3681|(9, 13, 3)|var|float64
var_3682 = relay.var("var_3682", dtype = "float32", shape = (324,))#candidate|3682|(324,)|var|float32
var_3683 = relay.var("var_3683", dtype = "bool", shape = (9, 13, 3))#candidate|3683|(9, 13, 3)|var|bool
var_3684 = relay.var("var_3684", dtype = "float64", shape = (784,))#candidate|3684|(784,)|var|float64
var_3685 = relay.var("var_3685", dtype = "int32", shape = (9, 13, 3))#candidate|3685|(9, 13, 3)|var|int32
call_3680 = func_3679_call(var_3681,var_3682,var_3683,var_3684,var_3685,)
output = call_3680
func_3686 = relay.Function([var_3681,var_3682,var_3683,var_3684,var_3685,], output)
mutated_mod['func_3686'] = func_3686
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3693 = relay.var("var_3693", dtype = "uint32", shape = ())#candidate|3693|()|var|uint32
var_3694 = relay.var("var_3694", dtype = "uint32", shape = (9, 3, 5))#candidate|3694|(9, 3, 5)|var|uint32
bop_3695 = relay.multiply(var_3693.astype('uint32'), var_3694.astype('uint32')) # shape=(9, 3, 5)
bop_3699 = relay.less_equal(var_3693.astype('bool'), bop_3695.astype('bool')) # shape=(9, 3, 5)
output = relay.Tuple([bop_3699,])
output2 = relay.Tuple([bop_3699,])
F = relay.Function([var_3693,var_3694,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_3693,var_3694,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')
input_3693= np.array(8, dtype='uint32')
module1.set_input('var_3693', input_3693)
input_3694= np.array([[[7,2,-5,5,4],[5,4,10,-1,-8],[5,10,3,-8,4]],[[-2,6,-6,-6,-4],[3,-2,9,6,4],[-4,6,-6,-1,-5]],[[-10,7,-2,9,-4],[-8,4,-5,-3,2],[6,6,-9,2,-7]],[[-4,-5,-5,4,7],[-8,-4,-7,3,1],[-5,1,-9,-4,-10]],[[-10,-1,5,-4,-1],[6,5,10,-10,-10],[-8,6,-6,2,5]],[[-2,8,10,9,-4],[-4,-8,10,-9,-10],[-9,-5,10,1,-3]],[[7,1,-1,1,-4],[10,5,7,7,6],[-6,-10,4,-4,3]],[[1,-3,7,3,3],[3,5,5,-5,-1],[-4,10,10,5,6]],[[1,9,-10,-7,-2],[-10,6,-5,9,-3],[-1,-9,-8,-4,3]]], dtype='uint32')
module1.set_input('var_3694', input_3694)
module1.set_input(**params)
module1.run()
res2 = intrp2.evaluate()(input_3693, input_3694, )
res3 = intrp3.evaluate()(input_3693, input_3694, )
res4 = intrp4.evaluate()(input_3693, input_3694, )
res2 = vmobj_to_list(res2)
res3 = vmobj_to_list(res3)
res4 = vmobj_to_list(res4)
res1_0 = module1.get_output(0).asnumpy()
res2_0 = res2[0].asnumpy()
res3_0 = res3[0].asnumpy()
res4_0 = res4[0].asnumpy()
np.testing.assert_allclose(res1_0 ,res2_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_0 ,res3_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_0 ,res4_0, atol=1e-3, rtol=1e-3)
(res1_0 == res2_0).all()
(res1_0 == res3_0).all()
(res1_0 == res4_0).all()
module5.set_input('var_3693', input_3693)
module5.set_input('var_3694', input_3694)
module5.set_input(**params)
module5.run()
res6 = intrp6.evaluate()(input_3693, input_3694, )
res7 = intrp7.evaluate()(input_3693, input_3694, )
res8 = intrp8.evaluate()(input_3693, input_3694, )
res6 = vmobj_to_list(res6)
res7 = vmobj_to_list(res7)
res8 = vmobj_to_list(res8)
res5_0 = module5.get_output(0).asnumpy()
res6_0 = res6[0].asnumpy()
res7_0 = res7[0].asnumpy()
res8_0 = res8[0].asnumpy()
np.testing.assert_allclose(res5_0 ,res6_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_0 ,res7_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_0 ,res8_0, atol=1e-3, rtol=1e-3)
(res5_0 == res6_0).all()
(res5_0 == res7_0).all()
(res5_0 == res8_0).all()
module9.set_input('var_3693', input_3693)
module9.set_input('var_3694', input_3694)
module9.set_input(**params)
module9.run()
res10 = intrp10.evaluate()(input_3693, input_3694, )
res11 = intrp11.evaluate()(input_3693, input_3694, )
res12 = intrp12.evaluate()(input_3693, input_3694, )
res10 = vmobj_to_list(res10)
res11 = vmobj_to_list(res11)
res12 = vmobj_to_list(res12)
res9_0 = module9.get_output(0).asnumpy()
res10_0 = res10[0].asnumpy()
res11_0 = res11[0].asnumpy()
res12_0 = res12[0].asnumpy()
np.testing.assert_allclose(res9_0 ,res10_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_0 ,res11_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_0 ,res12_0, atol=1e-3, rtol=1e-3)
(res9_0 == res10_0).all()
(res9_0 == res11_0).all()
(res9_0 == res12_0).all()
module13.set_input('var_3693', input_3693)
module13.set_input('var_3694', input_3694)
module13.set_input(**params)
module13.run()
res14 = intrp14.evaluate()(input_3693, input_3694, )
res15 = intrp15.evaluate()(input_3693, input_3694, )
res16 = intrp16.evaluate()(input_3693, input_3694, )
res14 = vmobj_to_list(res14)
res15 = vmobj_to_list(res15)
res16 = vmobj_to_list(res16)
res13_0 = module13.get_output(0).asnumpy()
res14_0 = res14[0].asnumpy()
res15_0 = res15[0].asnumpy()
res16_0 = res16[0].asnumpy()
np.testing.assert_allclose(res13_0 ,res14_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_0 ,res15_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_0 ,res16_0, atol=1e-3, rtol=1e-3)
(res13_0 == res14_0).all()
(res13_0 == res15_0).all()
(res13_0 == res16_0).all()
module17.set_input('var_3693', input_3693)
module17.set_input('var_3694', input_3694)
module17.set_input(**params)
module17.run()
res18 = intrp18.evaluate()(input_3693, input_3694, )
res19 = intrp19.evaluate()(input_3693, input_3694, )
res20 = intrp20.evaluate()(input_3693, input_3694, )
res18 = vmobj_to_list(res18)
res19 = vmobj_to_list(res19)
res20 = vmobj_to_list(res20)
res17_0 = module17.get_output(0).asnumpy()
res18_0 = res18[0].asnumpy()
res19_0 = res19[0].asnumpy()
res20_0 = res20[0].asnumpy()
np.testing.assert_allclose(res17_0 ,res18_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_0 ,res19_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_0 ,res20_0, atol=1e-3, rtol=1e-3)
(res17_0 == res18_0).all()
(res17_0 == res19_0).all()
(res17_0 == res20_0).all()
module21.set_input('var_3693', input_3693)
module21.set_input('var_3694', input_3694)
module21.set_input(**params)
module21.run()
res22 = intrp22.evaluate()(input_3693, input_3694, )
res23 = intrp23.evaluate()(input_3693, input_3694, )
res24 = intrp24.evaluate()(input_3693, input_3694, )
res22 = vmobj_to_list(res22)
res23 = vmobj_to_list(res23)
res24 = vmobj_to_list(res24)
res21_0 = module21.get_output(0).asnumpy()
res22_0 = res22[0].asnumpy()
res23_0 = res23[0].asnumpy()
res24_0 = res24[0].asnumpy()
np.testing.assert_allclose(res21_0 ,res22_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_0 ,res23_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_0 ,res24_0, atol=1e-3, rtol=1e-3)
(res21_0 == res22_0).all()
(res21_0 == res23_0).all()
(res21_0 == res24_0).all()

'''193: TVMFuncCall
192: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::vm::VMCompiler::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
191: tvm::relay::vm::VMCompiler::Lower(tvm::IRModule, tvm::runtime::Map<tvm::Integer, tvm::Target, void, void>, tvm::Target)
190: tvm::relay::vm::VMFunctionCompiler::Compile(tvm::GlobalVar const&, tvm::relay::Function const&)
189: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
188: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
187: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::FunctionNode const*)
186: tvm::relay::vm::VMFunctionCompiler::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
185: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
184: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
183: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
182: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
181: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
180: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
179: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
178: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
177: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
176: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
175: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
174: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
173: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
172: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
171: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
170: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
169: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
168: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
167: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
166: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
165: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
164: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
163: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
162: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
161: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
160: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
159: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
158: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
157: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
156: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
155: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
154: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
153: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
152: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
151: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
150: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
149: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
148: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
147: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
146: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
145: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
144: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
143: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
142: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
141: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
140: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
139: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
138: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
137: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
136: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
135: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
134: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
133: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
132: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
131: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
130: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
129: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
128: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
127: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
126: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
125: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
124: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
123: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
122: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
121: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
120: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
119: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
118: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
117: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
116: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
115: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
114: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
113: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
112: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
111: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
110: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
109: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
108: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
107: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
106: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
105: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
104: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
103: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
102: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
101: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
100: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
99: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
98: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
97: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
96: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
95: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
94: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
93: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
92: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
91: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
90: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
89: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
88: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
87: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
86: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
85: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
84: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
83: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
82: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
81: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
80: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
79: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
78: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
77: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
76: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
75: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
74: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
73: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
72: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
71: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
70: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
69: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
68: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
67: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
66: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
65: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
64: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
63: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
62: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
61: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
60: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
59: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
58: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
57: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
56: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
55: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
54: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
53: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
52: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
51: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
50: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
49: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
48: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
47: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
46: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
45: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
44: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
43: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
42: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
41: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
40: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
39: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
38: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
37: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
36: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
35: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
34: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
33: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
32: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
31: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
30: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
29: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
28: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
27: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
26: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
25: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
24: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
23: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
22: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
21: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
20: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
19: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
18: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
17: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
16: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
15: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
14: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
13: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
12: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
11: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
10: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
9: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
8: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
7: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
6: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
5: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
4: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::CallNode const*)
3: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
2: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
1: tvm::relay::transform::DeviceAwareExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr_(tvm::relay::LetNode const*)
0: tvm::relay::vm::VMFunctionCompiler::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)

'''