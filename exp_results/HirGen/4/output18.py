import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
def vmobj_to_list(o, dtype="float32"):
    if isinstance(o, tvm.nd.NDArray):
        return [o]
    elif isinstance(o, tvm.runtime.container.ADT):
        result = []
        for f in o:
            result.extend(vmobj_to_list(f, dtype))
        return result
    else:
        return o


mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_26 = relay.var("var_26", dtype = "uint64", shape = ())#candidate|26|()|var|uint64
var_27 = relay.var("var_27", dtype = "uint64", shape = (5, 12))#candidate|27|(5, 12)|var|uint64
bop_28 = relay.bitwise_and(var_26.astype('uint64'), var_27.astype('uint64')) # shape=(5, 12)
output = relay.Tuple([bop_28,])
output2 = relay.Tuple([bop_28,])
func_71 = relay.Function([var_26,var_27,], output)
mod['func_71'] = func_71
mod = relay.transform.InferType()(mod)
var_72 = relay.var("var_72", dtype = "uint64", shape = ())#candidate|72|()|var|uint64
var_73 = relay.var("var_73", dtype = "uint64", shape = (5, 12))#candidate|73|(5, 12)|var|uint64
output = func_71(var_72,var_73,)
func_74 = relay.Function([var_72,var_73,], output)
mutated_mod['func_74'] = func_74
mutated_mod = relay.transform.InferType()(mutated_mod)
var_108 = relay.var("var_108", dtype = "float32", shape = (10, 13, 13))#candidate|108|(10, 13, 13)|var|float32
uop_109 = relay.atan(var_108.astype('float32')) # shape=(10, 13, 13)
func_71_call = mod.get_global_var('func_71')
func_74_call = mutated_mod.get_global_var('func_74')
const_114 = relay.const(8, dtype = "uint64")#candidate|114|()|const|uint64
const_115 = relay.const([[-2,-7,2,-4,1,-2,-9,7,-1,5,7,-3,8,-7,-3,3,10,2,5,6],[3,-9,8,10,10,-5,9,-7,1,-7,5,-2,8,-4,3,3,10,8,-7,-7],[-4,-5,-10,9,8,-8,5,-7,-5,10,-3,-1,2,-8,8,5,10,4,-4,-1]], dtype = "uint64")#candidate|115|(3, 20)|const|uint64
call_113 = relay.TupleGetItem(func_71_call(relay.reshape(const_114.astype('uint64'), []), relay.reshape(const_115.astype('uint64'), [5, 12]), ), 0)
call_116 = relay.TupleGetItem(func_74_call(relay.reshape(const_114.astype('uint64'), []), relay.reshape(const_115.astype('uint64'), [5, 12]), ), 0)
output = relay.Tuple([uop_109,call_113,const_114,const_115,])
output2 = relay.Tuple([uop_109,call_116,const_114,const_115,])
func_122 = relay.Function([var_108,], output)
mod['func_122'] = func_122
mod = relay.transform.InferType()(mod)
mutated_mod['func_122'] = func_122
mutated_mod = relay.transform.InferType()(mutated_mod)
var_123 = relay.var("var_123", dtype = "float32", shape = (10, 13, 13))#candidate|123|(10, 13, 13)|var|float32
func_122_call = mutated_mod.get_global_var('func_122')
call_124 = func_122_call(var_123)
output = call_124
func_125 = relay.Function([var_123], output)
mutated_mod['func_125'] = func_125
mutated_mod = relay.transform.InferType()(mutated_mod)
const_197 = relay.const([[[-5,5,-8,-7,-6,6],[10,5,-4,7,9,1],[7,-7,-5,5,10,1],[6,-5,-7,-10,-2,-1],[8,-10,4,-2,-1,2],[-10,7,8,7,6,-8],[6,-3,1,-5,-2,7],[-6,6,10,7,-6,9],[2,8,2,4,4,-6],[-1,-5,6,10,-2,1]],[[-6,-1,3,-4,10,7],[-10,9,8,10,-6,4],[-8,4,-1,-4,-3,7],[7,-5,7,-8,-2,-2],[4,-10,10,2,8,-10],[1,6,-10,-2,-8,5],[-8,4,-2,10,2,-6],[-6,10,4,-5,-5,3],[-5,4,1,-1,-4,8],[-5,2,10,10,8,-2]],[[-2,-1,9,4,-8,-9],[10,7,9,8,6,1],[-1,4,1,-2,-2,-1],[5,-4,8,2,-7,9],[-8,8,-10,2,10,-9],[-1,-5,5,3,-3,-5],[-4,8,7,5,-8,-9],[-6,10,-6,-6,-3,9],[8,10,-3,-4,-1,8],[2,5,-10,8,3,9]],[[-6,-6,7,7,-9,9],[-1,9,-3,-1,-10,-5],[-1,6,1,-5,4,8],[-9,9,1,10,-8,7],[7,8,-6,-10,6,-1],[1,3,-9,7,5,8],[3,-9,8,-4,-4,2],[5,-7,8,-7,-5,-4],[-9,-4,8,-2,9,-2],[9,-2,10,3,6,6]],[[9,2,-2,-10,-9,7],[6,8,3,4,6,5],[2,1,9,3,-1,-3],[3,-5,-10,10,4,-5],[8,6,-7,-1,-8,-10],[-10,-4,10,-5,3,-5],[-4,10,5,-4,-5,8],[-9,3,-9,-4,-6,1],[8,-8,6,3,-10,-10],[6,-7,-2,5,4,-1]],[[-10,4,-5,-1,1,-5],[5,-8,1,-2,-10,10],[-6,5,10,2,3,8],[-1,3,10,-10,6,-2],[6,3,-6,7,-5,-1],[10,-7,-9,3,3,3],[-5,-8,1,-7,-5,2],[-1,-3,-3,3,8,-8],[-4,9,10,1,-5,6],[9,2,2,-5,-2,1]],[[-3,-9,-6,-9,10,10],[-2,-5,9,2,5,-4],[-5,-3,-9,2,-1,-4],[10,7,-5,-1,-9,-3],[-8,-8,10,-1,5,2],[8,-8,7,-6,-9,-6],[-2,-9,-3,-7,9,3],[1,4,10,10,2,-5],[-1,-3,-3,-3,7,-6],[-6,1,-10,7,-10,7]],[[-7,-8,-4,7,3,6],[-8,-5,-2,-5,-3,6],[-1,-7,3,3,-9,-10],[-3,10,4,5,4,-9],[8,5,-10,-7,3,4],[-5,6,7,1,-1,-5],[7,-1,8,7,5,9],[4,-8,9,-3,-10,-10],[-4,-6,-2,-4,-3,-9],[-4,-8,8,-6,-3,-9]],[[6,-7,-10,-5,8,1],[-4,-8,-9,-7,3,4],[3,6,-2,-8,-7,-9],[2,3,-5,1,-1,-4],[3,-3,-7,10,5,-5],[10,-9,8,8,-10,-1],[7,-6,-10,9,4,-2],[9,10,-7,-2,10,-6],[7,-2,4,6,7,2],[-4,3,-4,-8,6,-6]],[[-5,-9,-2,-5,8,-8],[3,6,7,7,10,7],[2,7,-3,10,3,-3],[2,-4,7,5,-7,8],[-10,5,-5,-3,8,-7],[-5,9,4,-3,-1,-9],[10,-8,4,10,1,3],[8,4,-6,-6,-6,8],[-8,8,-9,-10,10,7],[4,-7,5,-2,6,8]],[[5,-2,1,-2,-3,2],[1,1,10,7,-5,10],[4,2,5,3,-6,-2],[-7,7,9,3,3,-1],[-2,-8,3,-9,-9,-7],[1,-4,-7,5,3,5],[3,-1,-2,1,9,4],[-7,-8,-4,-1,-5,1],[3,5,7,-9,-7,-7],[1,4,-7,-3,-1,-1]],[[6,-9,6,2,-7,-7],[-8,-7,5,4,3,-9],[8,7,10,4,7,-6],[5,-4,4,9,8,-7],[-3,10,-2,-8,-8,10],[10,-4,7,-4,8,7],[9,-6,-3,1,-3,-3],[1,-5,-4,-9,-9,5],[-4,2,-7,4,6,-5],[2,-6,7,1,-9,-9]],[[1,9,-10,8,3,6],[9,-6,-1,-4,6,-9],[9,3,6,3,7,-9],[-6,2,9,1,-1,4],[7,4,-10,-8,-5,-7],[10,-10,1,5,10,-9],[9,-8,-7,2,-2,9],[1,1,6,-7,-5,3],[-8,-3,10,-7,10,-9],[10,2,8,-4,-7,-5]],[[10,-1,-10,-10,5,-7],[5,-5,-1,-3,8,5],[-7,6,-1,-8,2,-7],[-4,-1,2,5,1,-2],[8,5,1,3,8,-1],[-10,-1,8,7,7,-10],[-7,6,-7,-2,6,-3],[9,6,-5,6,7,2],[-7,7,8,-5,-2,-4],[-3,-6,-6,-7,-2,2]],[[-3,-5,-8,-6,-5,-3],[8,-9,-10,1,-1,-2],[3,4,4,5,6,8],[6,-1,6,-7,3,-5],[8,6,-3,8,10,5],[10,3,-1,-2,-4,-9],[8,-3,1,3,7,3],[-10,8,-5,-5,-3,2],[7,1,8,2,-8,-8],[6,-10,-5,-1,-6,-6]],[[-1,5,-7,-10,-3,-8],[4,1,-6,3,-2,-2],[-8,3,-3,-2,-8,-2],[5,1,-4,-1,10,10],[-10,-7,6,1,-4,5],[-3,-4,7,8,-8,10],[-10,10,-2,8,-3,-8],[2,-2,-4,-4,7,8],[3,-6,4,3,-8,6],[3,-3,8,-7,1,-9]]], dtype = "int8")#candidate|197|(16, 10, 6)|const|int8
var_198 = relay.var("var_198", dtype = "int8", shape = (16, 10, 6))#candidate|198|(16, 10, 6)|var|int8
bop_199 = relay.multiply(const_197.astype('int8'), relay.reshape(var_198.astype('int8'), relay.shape_of(const_197))) # shape=(16, 10, 6)
uop_209 = relay.log(bop_199.astype('float64')) # shape=(16, 10, 6)
output = relay.Tuple([uop_209,])
output2 = relay.Tuple([uop_209,])
func_220 = relay.Function([var_198,], output)
mod['func_220'] = func_220
mod = relay.transform.InferType()(mod)
mutated_mod['func_220'] = func_220
mutated_mod = relay.transform.InferType()(mutated_mod)
var_221 = relay.var("var_221", dtype = "int8", shape = (16, 10, 6))#candidate|221|(16, 10, 6)|var|int8
func_220_call = mutated_mod.get_global_var('func_220')
call_222 = func_220_call(var_221)
output = call_222
func_223 = relay.Function([var_221], output)
mutated_mod['func_223'] = func_223
mutated_mod = relay.transform.InferType()(mutated_mod)
var_347 = relay.var("var_347", dtype = "uint8", shape = ())#candidate|347|()|var|uint8
var_348 = relay.var("var_348", dtype = "uint8", shape = (4, 14, 2))#candidate|348|(4, 14, 2)|var|uint8
bop_349 = relay.multiply(var_347.astype('uint8'), var_348.astype('uint8')) # shape=(4, 14, 2)
output = relay.Tuple([bop_349,])
output2 = relay.Tuple([bop_349,])
func_356 = relay.Function([var_347,var_348,], output)
mod['func_356'] = func_356
mod = relay.transform.InferType()(mod)
var_357 = relay.var("var_357", dtype = "uint8", shape = ())#candidate|357|()|var|uint8
var_358 = relay.var("var_358", dtype = "uint8", shape = (4, 14, 2))#candidate|358|(4, 14, 2)|var|uint8
output = func_356(var_357,var_358,)
func_359 = relay.Function([var_357,var_358,], output)
mutated_mod['func_359'] = func_359
mutated_mod = relay.transform.InferType()(mutated_mod)
const_506 = relay.const(3, dtype = "int8")#candidate|506|()|const|int8
var_507 = relay.var("var_507", dtype = "int8", shape = (1, 7, 12))#candidate|507|(1, 7, 12)|var|int8
bop_508 = relay.equal(const_506.astype('bool'), var_507.astype('bool')) # shape=(1, 7, 12)
func_356_call = mod.get_global_var('func_356')
func_359_call = mutated_mod.get_global_var('func_359')
const_515 = relay.const([3,10,-10,7,10,8,7,-3,8,4,-8,-3,8,1,4,-4,10,1,3,-8,7,-8,-9,-3,-6,-8,-3,-1,6,-8,1,-7,7,3,-6,-3,-6,-7,2,3,-6,-2,-1,9,-4,8,-2,6,-3,-1,7,-1,-5,-9,8,-4,-2,3,-9,3,-1,7,-5,5,2,-6,8,-4,-8,9,-3,-2,9,-8,-10,-4,-1,-6,-3,-4,-5,-6,10,7,2,-7,8,2,7,-8,3,7,2,-10,-4,-4,5,-3,9,-6,-5,10,2,-3,-5,3,-4,2,4,4,6,-7], dtype = "uint8")#candidate|515|(112,)|const|uint8
call_514 = relay.TupleGetItem(func_356_call(relay.reshape(const_506.astype('uint8'), []), relay.reshape(const_515.astype('uint8'), [4, 14, 2]), ), 0)
call_516 = relay.TupleGetItem(func_359_call(relay.reshape(const_506.astype('uint8'), []), relay.reshape(const_515.astype('uint8'), [4, 14, 2]), ), 0)
bop_519 = relay.multiply(var_507.astype('uint32'), const_506.astype('uint32')) # shape=(1, 7, 12)
func_356_call = mod.get_global_var('func_356')
func_359_call = mutated_mod.get_global_var('func_359')
call_525 = relay.TupleGetItem(func_356_call(relay.reshape(const_506.astype('uint8'), []), relay.reshape(const_515.astype('uint8'), [4, 14, 2]), ), 0)
call_526 = relay.TupleGetItem(func_359_call(relay.reshape(const_506.astype('uint8'), []), relay.reshape(const_515.astype('uint8'), [4, 14, 2]), ), 0)
func_356_call = mod.get_global_var('func_356')
func_359_call = mutated_mod.get_global_var('func_359')
call_533 = relay.TupleGetItem(func_356_call(relay.reshape(const_506.astype('uint8'), []), relay.reshape(const_515.astype('uint8'), [4, 14, 2]), ), 0)
call_534 = relay.TupleGetItem(func_359_call(relay.reshape(const_506.astype('uint8'), []), relay.reshape(const_515.astype('uint8'), [4, 14, 2]), ), 0)
bop_537 = relay.equal(const_506.astype('bool'), call_514.astype('bool')) # shape=(4, 14, 2)
bop_540 = relay.equal(const_506.astype('bool'), call_516.astype('bool')) # shape=(4, 14, 2)
func_356_call = mod.get_global_var('func_356')
func_359_call = mutated_mod.get_global_var('func_359')
call_549 = relay.TupleGetItem(func_356_call(relay.reshape(const_506.astype('uint8'), []), relay.reshape(bop_537.astype('uint8'), [4, 14, 2]), ), 0)
call_550 = relay.TupleGetItem(func_359_call(relay.reshape(const_506.astype('uint8'), []), relay.reshape(bop_537.astype('uint8'), [4, 14, 2]), ), 0)
func_71_call = mod.get_global_var('func_71')
func_74_call = mutated_mod.get_global_var('func_74')
const_557 = relay.const([-2,-8,6,10,10,10,-10,-1,-2,-5,-3,2,-9,10,-1,-5,-5,-5,-2,7,-6,-1,-6,7,7,-6,-8,-10,9,10,-5,3,7,-5,5,-2,-8,7,7,-2,7,-5,-6,9,-7,5,5,1,6,-2,7,1,-7,7,-2,8,-7,-4,8,-8], dtype = "uint64")#candidate|557|(60,)|const|uint64
call_556 = relay.TupleGetItem(func_71_call(relay.reshape(const_506.astype('uint64'), []), relay.reshape(const_557.astype('uint64'), [5, 12]), ), 0)
call_558 = relay.TupleGetItem(func_74_call(relay.reshape(const_506.astype('uint64'), []), relay.reshape(const_557.astype('uint64'), [5, 12]), ), 0)
output = relay.Tuple([bop_508,const_515,bop_519,call_525,call_533,bop_537,call_549,call_556,const_557,])
output2 = relay.Tuple([bop_508,const_515,bop_519,call_526,call_534,bop_540,call_550,call_558,const_557,])
func_564 = relay.Function([var_507,], output)
mod['func_564'] = func_564
mod = relay.transform.InferType()(mod)
mutated_mod['func_564'] = func_564
mutated_mod = relay.transform.InferType()(mutated_mod)
var_565 = relay.var("var_565", dtype = "int8", shape = (1, 7, 12))#candidate|565|(1, 7, 12)|var|int8
func_564_call = mutated_mod.get_global_var('func_564')
call_566 = func_564_call(var_565)
output = call_566
func_567 = relay.Function([var_565], output)
mutated_mod['func_567'] = func_567
mutated_mod = relay.transform.InferType()(mutated_mod)
const_670 = relay.const([[[-8.942575,2.388150,-7.328885,-2.285414,-3.235732,2.583803,-1.114355,-4.012843],[5.193670,9.019125,-8.645012,1.563789,-8.130587,-6.822736,-2.330041,3.304231],[6.468155,-5.079922,-4.797290,-2.639189,6.298293,9.205418,4.832294,-1.252238],[-3.722393,9.291414,8.194390,5.889645,0.619131,-4.063140,2.149191,-7.959697],[-2.929601,-2.708361,4.537361,-3.622953,-3.325735,-1.588717,8.574070,-7.019476],[-5.027490,-8.928155,-4.950064,2.810037,9.080066,9.415609,8.475209,1.961025]],[[5.353849,-7.918522,-3.955259,7.032199,1.145017,2.241103,8.522803,-6.819721],[0.804301,7.507066,-0.894559,2.080433,0.207739,-1.021329,-0.230806,-2.985352],[8.341948,-3.011516,7.979912,-8.401356,8.762172,2.118339,8.943004,2.181533],[-1.225990,7.038399,0.449276,2.507027,6.558812,-1.252078,1.383961,8.974990],[6.037126,0.470875,-1.929065,4.350932,4.205768,-6.801015,9.215657,8.277784],[-0.563465,-5.324271,-9.410699,-5.126465,-5.306918,3.401715,-1.907351,-4.987132]],[[2.571450,-6.125546,-6.070538,3.662447,2.479021,-6.473067,2.732693,-1.524990],[-0.456645,-1.611014,-0.700712,9.729333,3.409882,1.132543,0.846054,2.046135],[7.297617,-6.883939,-9.653099,2.452991,9.988034,-7.374684,4.410972,0.154006],[6.232744,-4.879031,-6.188633,-7.653540,9.471422,4.003000,-5.529868,1.693275],[6.187194,5.713562,5.485459,4.863457,-9.425234,-7.946687,-4.311298,-8.345330],[5.655952,-9.850812,-8.314863,1.596828,-2.723731,-5.689382,5.335484,-9.885919]],[[-0.712344,-8.473233,-7.187674,-6.738647,0.903939,-7.987988,-6.175681,-9.009269],[-4.130921,-0.555816,4.247385,-0.355018,-4.938863,-7.750897,-4.432598,-2.860905],[-8.513891,-1.321232,-9.607130,-7.594233,8.720942,-9.450861,7.401210,8.045881],[5.121460,-2.121827,1.790976,-9.108939,2.135533,-6.180819,9.382072,-2.321708],[4.511997,-3.905875,-3.067764,-3.284352,4.219509,3.514369,0.395997,-8.597610],[-9.283210,5.217799,7.603983,-4.924684,1.158993,-5.738625,6.698963,-7.730636]],[[-7.008657,7.477850,2.821082,-0.487095,-3.847793,9.501303,1.897854,-2.841510],[-8.792607,4.159051,3.435749,4.324774,-8.448949,1.267254,-0.753141,3.539834],[-0.869382,8.448799,-1.428548,-1.482351,-8.450637,-6.618029,-6.909058,5.832060],[-9.676325,-6.482188,-2.866472,-9.398257,-7.227314,0.853892,-4.472253,9.520618],[5.416598,-0.065589,-3.811706,-7.983272,7.496886,-7.578578,8.210427,-2.708773],[7.032995,4.969258,-0.809056,-2.709547,6.941892,-4.018221,-6.207689,-2.032537]],[[-8.115334,3.031634,9.882950,6.739990,-9.921358,-8.947559,-5.897080,-1.011315],[-0.157508,4.350443,3.587986,7.620085,9.525487,-6.605942,2.604253,1.353695],[-0.469365,-9.011900,-7.994640,-6.774510,-0.335728,-2.801444,5.835018,-9.915958],[-8.679193,6.950672,8.149273,-7.903077,-1.271782,5.496915,1.100046,6.947713],[4.371989,-2.438084,-5.381576,5.945068,1.712113,3.635209,-2.282955,-5.510038],[3.300083,-7.422126,-0.785857,-8.155969,-3.146075,-7.152878,-3.708519,8.755515]],[[-2.971507,-5.331935,-4.914843,1.224566,4.751849,-5.683709,-8.844223,7.878338],[-2.860677,-5.223253,-8.187861,2.763188,-5.284261,0.003041,-2.879441,1.886274],[-0.688512,6.125031,8.248579,-1.023343,0.362682,-7.782760,-2.696987,5.724240],[3.315626,4.531822,-1.817474,-1.002216,6.687685,-1.712304,-4.052103,-2.083452],[7.797874,5.454108,-4.703602,8.427096,5.533465,3.351743,2.189511,-5.939486],[-6.534621,0.340662,3.303494,-4.470424,1.800181,-5.727684,-1.137947,-6.784635]],[[-9.402539,-4.034113,6.523732,-1.971873,5.289476,-5.584419,-4.868327,4.508180],[0.605189,-3.807586,7.609447,1.337076,6.982133,-9.612607,-4.876908,0.347314],[8.650721,3.282283,1.836562,7.735450,2.208368,-6.505053,-7.383629,-1.056690],[-4.303915,-9.127524,5.010714,-0.957784,3.334974,-6.393567,5.940712,-8.929706],[2.757363,0.965716,6.834218,5.040354,5.680830,7.642267,-9.730371,2.366027],[-9.649885,-0.157629,9.842555,-2.333127,9.816431,-2.477308,-2.689593,6.428575]],[[-6.512435,-5.336808,9.793697,-3.319790,3.309789,3.924790,6.744564,-5.498002],[-0.577590,-4.598672,8.444728,2.400302,2.782680,7.403338,-2.365127,-9.990935],[-2.892003,4.641812,-6.930690,-7.009717,9.134178,7.150733,-2.196870,-3.137199],[-6.090768,-3.476291,8.088552,4.611378,9.839491,-7.655930,3.007934,-3.378233],[2.148239,-2.029116,6.220717,-3.847065,-6.867340,3.670390,0.310658,3.056428],[-1.436808,-5.297458,9.165254,9.557212,-8.471804,7.637882,-1.023638,3.413938]],[[3.031988,6.785128,-3.903522,2.008549,-9.300746,2.947411,-6.596742,1.492311],[-2.920851,-0.418660,4.129800,-1.734487,4.514467,-2.880972,2.795080,6.774737],[0.879398,1.458766,-0.136064,-9.715455,-8.324807,8.734317,-7.915600,6.084768],[-5.347136,6.680553,2.005779,1.448240,3.671285,-5.072960,-5.255635,5.272495],[1.202478,5.039271,9.665118,-1.396182,-1.699178,-8.942381,-7.730149,5.745348],[7.378393,5.370296,0.421161,5.937978,-0.556686,2.555035,1.455877,-8.864399]],[[-9.926427,8.188649,3.386617,1.456778,2.723061,-1.884813,9.823517,-2.111501],[-7.701272,-8.195305,-1.510691,-7.555448,9.350023,5.333768,-7.240490,0.444319],[-7.550659,-4.700429,-4.348064,3.232182,6.679088,-6.085216,1.570883,2.292909],[-3.534947,3.644617,3.637979,0.649983,-7.456904,-8.380004,-3.962601,6.027665],[-5.403279,-1.369873,2.923601,-8.222368,6.823092,5.187841,6.412270,1.090804],[-2.793950,-5.251372,-2.690609,9.588393,6.388513,-9.835567,4.169154,-5.019430]]], dtype = "float64")#candidate|670|(11, 6, 8)|const|float64
uop_671 = relay.cos(const_670.astype('float64')) # shape=(11, 6, 8)
var_674 = relay.var("var_674", dtype = "float64", shape = (11, 6, 8))#candidate|674|(11, 6, 8)|var|float64
bop_675 = relay.bitwise_or(const_670.astype('int16'), relay.reshape(var_674.astype('int16'), relay.shape_of(const_670))) # shape=(11, 6, 8)
uop_680 = relay.atanh(bop_675.astype('float32')) # shape=(11, 6, 8)
const_684 = relay.const([[[-4.484574,-3.108362,-0.216500,7.144128,2.488011,2.347975,-4.144760,6.939565],[-2.071177,-1.700034,9.222188,8.940755,1.586498,-1.722489,4.525775,-0.563584],[-1.239315,-0.373895,6.142389,-6.294651,5.375119,2.931571,-6.587471,6.644357],[5.933824,-8.441714,-9.462629,-1.770744,3.323079,3.925883,-5.191407,-1.488680],[0.365129,8.928096,-5.310872,3.376964,8.446028,8.360656,5.260094,7.556154],[1.465692,-0.384138,1.610254,5.518606,7.832261,5.573524,-0.005694,-4.618430]],[[7.996925,-8.479394,-9.807090,1.816644,-6.981822,1.895630,8.536298,-8.040343],[1.314343,-7.887096,5.544611,6.614880,1.676013,-3.410775,9.010612,1.549299],[-7.948850,-1.514257,2.357348,6.327146,8.284763,6.997663,8.419955,7.085898],[-6.500241,0.610492,7.539900,4.591069,-4.715492,-6.186656,-3.513546,-3.925349],[-9.948111,6.185774,-3.676071,4.643298,-2.433516,-6.228824,7.066476,-7.531410],[-5.774259,8.561127,-6.077775,-7.916335,5.753301,-9.290077,-9.044757,-6.371328]],[[-5.251624,-7.085616,-4.837539,-9.873593,-4.131178,-3.057036,-2.829535,-5.219978],[3.428702,-5.574029,-0.045363,-8.478465,7.067773,1.753190,3.763781,-1.854693],[-3.051777,-3.219544,6.058011,8.940046,2.814420,7.744238,-9.761450,-5.705510],[2.606176,0.384444,4.493368,7.791813,3.875901,-6.441830,0.218164,-6.329917],[2.511301,-0.673394,0.489900,5.645923,-4.107369,-5.847238,-2.013002,-4.893416],[5.192423,9.368518,4.419892,6.594959,8.824990,9.963210,6.677516,-7.959777]],[[-5.842075,1.708279,-9.459641,-4.359615,6.939524,9.876220,-9.324733,4.630625],[-6.779767,-5.614492,-2.775434,-1.406071,-4.439742,-9.873036,9.674869,-9.266538],[4.178558,8.452022,-5.459583,-9.705872,-8.052222,4.586466,6.065514,-0.101763],[3.387840,5.391365,-5.942170,-4.410167,8.523055,-4.522171,1.895728,-0.601447],[-0.720364,7.775379,-1.341329,-6.497462,9.845446,3.675362,5.596308,-1.537733],[-0.984335,-5.853376,8.779645,0.457082,1.631895,6.885995,2.400753,3.016723]],[[8.429560,-5.776197,0.206847,-7.540358,0.070956,3.372821,1.111103,8.830005],[-1.754332,5.368353,-5.658974,-3.891601,-8.634537,1.008401,-5.361488,-5.405041],[4.810951,0.010345,3.320703,1.491990,5.574921,6.820132,8.920012,-6.454029],[-3.949317,6.865640,8.087952,-8.708662,-7.572990,6.712611,2.411688,-3.607004],[-6.127499,9.768207,-9.741974,-9.260487,1.333932,-0.877382,2.464777,-1.905904],[-4.139745,-9.305955,-4.089726,-4.864468,-1.751838,0.709816,2.314472,-5.251616]],[[8.979284,9.630596,1.784302,4.249281,-9.889173,3.929507,-0.764804,3.435741],[3.249973,-5.199203,7.848017,-3.761877,-2.939946,5.223853,-6.108290,-0.493775],[2.105249,6.820884,6.851764,3.328633,-5.568072,8.301082,9.050384,-7.479772],[8.936378,-8.158269,1.371032,-5.802374,-3.441958,1.362149,-1.219630,-8.983861],[7.065794,-0.703268,-4.597163,-4.142448,-4.009804,3.593751,0.877693,-5.465622],[5.188979,9.812555,-9.474406,-1.825219,9.879306,7.428594,3.230008,2.947841]],[[5.464726,-1.232768,7.252883,-4.993979,-5.678699,2.669050,0.276714,-7.283575],[-5.273891,5.538652,-2.588757,0.478862,2.540276,8.508981,-2.937518,-3.391336],[-4.128990,3.104272,7.204705,0.577716,-6.650700,8.598953,-2.071060,-3.309547],[7.050789,6.169142,1.807481,2.409418,1.050882,-7.077713,0.649289,5.016207],[2.188082,-5.841352,9.678218,-8.353941,-7.245234,1.276766,-5.246933,-5.474081],[-1.756912,4.971821,-6.840980,-0.221871,0.100247,-6.256627,0.132541,-6.212067]],[[-3.888920,-4.720084,-0.352521,0.344359,-9.036489,6.412963,-3.156810,1.130783],[-1.066728,5.470450,7.901238,-1.562098,-8.997912,-5.207423,5.070282,-3.106317],[3.939340,9.992257,7.657508,-8.518079,4.034075,-5.071563,1.121831,-1.558562],[-8.559696,6.708058,-2.881462,-8.859829,-2.204480,-4.940331,2.738498,2.495829],[6.158302,-1.798246,-0.879326,8.520388,4.073583,9.283492,0.638116,-1.492877],[4.741056,2.303886,8.320781,-1.378492,-6.437844,9.988844,0.687643,-0.362735]],[[6.519804,-3.336122,-0.382138,-3.194501,5.061130,-3.453040,9.780893,4.328277],[-6.007331,-5.842608,-7.552725,0.902633,-1.251309,1.878418,-9.815165,-7.362528],[-3.809185,2.798688,-0.156975,-8.499739,5.671145,-9.436604,1.349529,-3.814909],[7.395668,-0.095556,2.780254,-6.761372,-8.304315,-2.835019,-7.276749,4.420379],[6.800880,5.835014,-7.376874,1.056946,-3.173439,-5.426442,5.161056,-8.638362],[-1.999607,1.725345,-4.245493,9.053880,9.368397,5.415673,-6.460164,-0.810209]],[[6.672582,-5.222374,-6.949643,-6.419009,5.526598,-6.525653,3.068656,3.839119],[3.702750,8.056725,7.126520,1.373548,-4.785316,-6.170806,2.255257,-7.165193],[-9.806590,-7.147580,3.696073,2.251993,8.119227,0.369071,-8.741900,-3.632341],[2.100606,-8.133908,-6.106587,3.627595,-7.908023,-7.184331,0.919256,6.966869],[0.776639,-2.904355,-4.717986,4.877151,7.119826,-2.217054,-5.739269,-4.146712],[-8.551565,-7.229021,-3.788841,-4.898705,6.955494,-3.590155,3.024499,-7.834893]],[[7.428647,5.636784,-1.925805,6.295297,-3.177768,-8.463348,6.891781,-2.221981],[1.835048,-3.825684,1.337624,-8.979874,9.221754,6.361249,-2.797141,8.469103],[-0.996798,4.654710,-6.659361,-2.094592,-1.256219,7.992025,1.657238,-0.055799],[-3.444196,-3.978812,7.972661,-9.395726,7.713859,6.860086,5.349787,9.306021],[-9.900892,-4.940210,-1.402421,9.088189,6.112384,-5.858770,-4.828647,2.216425],[0.159559,-7.168863,9.939990,-2.732018,-1.302203,-6.707067,-8.981724,0.836577]]], dtype = "float64")#candidate|684|(11, 6, 8)|const|float64
bop_685 = relay.mod(const_670.astype('float64'), relay.reshape(const_684.astype('float64'), relay.shape_of(const_670))) # shape=(11, 6, 8)
bop_689 = relay.divide(uop_671.astype('float32'), relay.reshape(const_684.astype('float32'), relay.shape_of(uop_671))) # shape=(11, 6, 8)
func_356_call = mod.get_global_var('func_356')
func_359_call = mutated_mod.get_global_var('func_359')
const_696 = relay.const(-4, dtype = "uint8")#candidate|696|()|const|uint8
const_697 = relay.const([-4,8,-1,6,-4,1,-9,-2,9,-7,9,-1,-3,-8,-9,5,-5,1,-9,5,1,9,-1,6,-8,-6,-6,3,-3,-4,-10,-6,-3,-3,7,6,-4,-9,-9,-4,-10,3,-7,-5,7,-3,-10,2,-7,8,2,3,2,-10,-6,7,5,10,-8,2,-6,-2,5,2,10,-7,7,-10,-9,9,5,9,-5,1,6,9,-8,10,9,-5,-5,3,2,10,-2,-7,6,6,-9,-7,8,-8,-8,-2,-10,6,-9,7,2,3,6,-2,7,4,-3,-2,-6,1,-9,-3,-10,-6], dtype = "uint8")#candidate|697|(112,)|const|uint8
call_695 = relay.TupleGetItem(func_356_call(relay.reshape(const_696.astype('uint8'), []), relay.reshape(const_697.astype('uint8'), [4, 14, 2]), ), 0)
call_698 = relay.TupleGetItem(func_359_call(relay.reshape(const_696.astype('uint8'), []), relay.reshape(const_697.astype('uint8'), [4, 14, 2]), ), 0)
bop_702 = relay.less_equal(uop_671.astype('bool'), relay.reshape(const_684.astype('bool'), relay.shape_of(uop_671))) # shape=(11, 6, 8)
output = relay.Tuple([uop_680,bop_685,bop_689,call_695,const_696,const_697,bop_702,])
output2 = relay.Tuple([uop_680,bop_685,bop_689,call_698,const_696,const_697,bop_702,])
func_711 = relay.Function([var_674,], output)
mod['func_711'] = func_711
mod = relay.transform.InferType()(mod)
mutated_mod['func_711'] = func_711
mutated_mod = relay.transform.InferType()(mutated_mod)
var_712 = relay.var("var_712", dtype = "float64", shape = (11, 6, 8))#candidate|712|(11, 6, 8)|var|float64
func_711_call = mutated_mod.get_global_var('func_711')
call_713 = func_711_call(var_712)
output = call_713
func_714 = relay.Function([var_712], output)
mutated_mod['func_714'] = func_714
mutated_mod = relay.transform.InferType()(mutated_mod)
var_730 = relay.var("var_730", dtype = "uint64", shape = (3, 3, 8))#candidate|730|(3, 3, 8)|var|uint64
var_731 = relay.var("var_731", dtype = "uint64", shape = (3, 3, 8))#candidate|731|(3, 3, 8)|var|uint64
bop_732 = relay.add(var_730.astype('uint64'), relay.reshape(var_731.astype('uint64'), relay.shape_of(var_730))) # shape=(3, 3, 8)
uop_740 = relay.log10(var_731.astype('float64')) # shape=(3, 3, 8)
func_711_call = mod.get_global_var('func_711')
func_714_call = mutated_mod.get_global_var('func_714')
var_747 = relay.var("var_747", dtype = "float64", shape = (1, 528))#candidate|747|(1, 528)|var|float64
call_746 = relay.TupleGetItem(func_711_call(relay.reshape(var_747.astype('float64'), [11, 6, 8])), 2)
call_748 = relay.TupleGetItem(func_714_call(relay.reshape(var_747.astype('float64'), [11, 6, 8])), 2)
func_122_call = mod.get_global_var('func_122')
func_125_call = mutated_mod.get_global_var('func_125')
var_750 = relay.var("var_750", dtype = "float32", shape = (1690,))#candidate|750|(1690,)|var|float32
call_749 = relay.TupleGetItem(func_122_call(relay.reshape(var_750.astype('float32'), [10, 13, 13])), 3)
call_751 = relay.TupleGetItem(func_125_call(relay.reshape(var_750.astype('float32'), [10, 13, 13])), 3)
bop_752 = relay.right_shift(uop_740.astype('int8'), relay.reshape(bop_732.astype('int8'), relay.shape_of(uop_740))) # shape=(3, 3, 8)
func_122_call = mod.get_global_var('func_122')
func_125_call = mutated_mod.get_global_var('func_125')
call_755 = relay.TupleGetItem(func_122_call(relay.reshape(var_750.astype('float32'), [10, 13, 13])), 1)
call_756 = relay.TupleGetItem(func_125_call(relay.reshape(var_750.astype('float32'), [10, 13, 13])), 1)
const_757 = relay.const([[[-0.415677,-8.864485,-0.515985,7.613508,3.432895,-2.514568,-6.574072,-8.756680],[-1.300417,-1.315031,9.586451,-8.252560,-7.782581,-6.403551,-9.919857,-6.100644],[0.299401,-0.110824,1.493934,5.554941,7.007242,3.467428,5.480057,-4.702199]],[[-9.193261,-0.082114,7.979137,-4.339930,2.179755,5.655708,-6.658526,-4.198909],[-3.304115,-8.436593,-3.849158,-5.275492,6.055010,6.399803,5.694955,-6.946389],[2.098656,-6.898913,6.332784,-9.918296,7.960177,-1.450743,5.790951,-5.637815]],[[7.537897,5.718726,-5.114692,2.892688,2.082593,-8.996303,-0.768046,8.176593],[-6.850794,-0.109125,-3.948652,-2.739105,7.873807,-9.400582,4.449967,-9.154948],[8.087605,8.752282,-5.053833,6.895150,4.103492,-0.252446,-5.288993,3.934909]]], dtype = "float64")#candidate|757|(3, 3, 8)|const|float64
bop_758 = relay.greater_equal(uop_740.astype('bool'), relay.reshape(const_757.astype('bool'), relay.shape_of(uop_740))) # shape=(3, 3, 8)
uop_763 = relay.exp(bop_752.astype('float64')) # shape=(3, 3, 8)
func_71_call = mod.get_global_var('func_71')
func_74_call = mutated_mod.get_global_var('func_74')
const_767 = relay.const(-8, dtype = "uint64")#candidate|767|()|const|uint64
call_766 = relay.TupleGetItem(func_71_call(relay.reshape(const_767.astype('uint64'), []), relay.reshape(call_749.astype('uint64'), [5, 12]), ), 0)
call_768 = relay.TupleGetItem(func_74_call(relay.reshape(const_767.astype('uint64'), []), relay.reshape(call_749.astype('uint64'), [5, 12]), ), 0)
bop_774 = relay.greater(var_731.astype('bool'), const_767.astype('bool')) # shape=(3, 3, 8)
uop_779 = relay.asin(uop_763.astype('float32')) # shape=(3, 3, 8)
bop_787 = relay.divide(uop_779.astype('float64'), relay.reshape(bop_758.astype('float64'), relay.shape_of(uop_779))) # shape=(3, 3, 8)
bop_790 = relay.floor_divide(uop_763.astype('float64'), relay.reshape(bop_758.astype('float64'), relay.shape_of(uop_763))) # shape=(3, 3, 8)
bop_794 = relay.minimum(bop_787.astype('uint8'), relay.reshape(var_730.astype('uint8'), relay.shape_of(bop_787))) # shape=(3, 3, 8)
uop_807 = relay.asinh(bop_787.astype('float64')) # shape=(3, 3, 8)
func_711_call = mod.get_global_var('func_711')
func_714_call = mutated_mod.get_global_var('func_714')
call_828 = relay.TupleGetItem(func_711_call(relay.reshape(var_747.astype('float64'), [11, 6, 8])), 5)
call_829 = relay.TupleGetItem(func_714_call(relay.reshape(var_747.astype('float64'), [11, 6, 8])), 5)
uop_830 = relay.cosh(uop_807.astype('float32')) # shape=(3, 3, 8)
func_564_call = mod.get_global_var('func_564')
func_567_call = mutated_mod.get_global_var('func_567')
var_842 = relay.var("var_842", dtype = "int8", shape = (84,))#candidate|842|(84,)|var|int8
call_841 = relay.TupleGetItem(func_564_call(relay.reshape(var_842.astype('int8'), [1, 7, 12])), 3)
call_843 = relay.TupleGetItem(func_567_call(relay.reshape(var_842.astype('int8'), [1, 7, 12])), 3)
bop_846 = relay.left_shift(uop_779.astype('uint8'), relay.reshape(var_730.astype('uint8'), relay.shape_of(uop_779))) # shape=(3, 3, 8)
bop_851 = relay.maximum(uop_830.astype('int32'), relay.reshape(uop_807.astype('int32'), relay.shape_of(uop_830))) # shape=(3, 3, 8)
func_356_call = mod.get_global_var('func_356')
func_359_call = mutated_mod.get_global_var('func_359')
call_854 = relay.TupleGetItem(func_356_call(relay.reshape(const_767.astype('uint8'), []), relay.reshape(call_828.astype('uint8'), [4, 14, 2]), ), 0)
call_855 = relay.TupleGetItem(func_359_call(relay.reshape(const_767.astype('uint8'), []), relay.reshape(call_828.astype('uint8'), [4, 14, 2]), ), 0)
func_220_call = mod.get_global_var('func_220')
func_223_call = mutated_mod.get_global_var('func_223')
var_865 = relay.var("var_865", dtype = "int8", shape = (960,))#candidate|865|(960,)|var|int8
call_864 = relay.TupleGetItem(func_220_call(relay.reshape(var_865.astype('int8'), [16, 10, 6])), 0)
call_866 = relay.TupleGetItem(func_223_call(relay.reshape(var_865.astype('int8'), [16, 10, 6])), 0)
output = relay.Tuple([call_746,var_747,call_749,var_750,call_755,call_766,bop_774,bop_790,bop_794,call_828,call_841,var_842,bop_846,bop_851,call_854,call_864,var_865,])
output2 = relay.Tuple([call_748,var_747,call_751,var_750,call_756,call_768,bop_774,bop_790,bop_794,call_829,call_843,var_842,bop_846,bop_851,call_855,call_866,var_865,])
func_881 = relay.Function([var_730,var_731,var_747,var_750,var_842,var_865,], output)
mod['func_881'] = func_881
mod = relay.transform.InferType()(mod)
mutated_mod['func_881'] = func_881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_881_call = mutated_mod.get_global_var('func_881')
var_883 = relay.var("var_883", dtype = "uint64", shape = (3, 3, 8))#candidate|883|(3, 3, 8)|var|uint64
var_884 = relay.var("var_884", dtype = "uint64", shape = (3, 3, 8))#candidate|884|(3, 3, 8)|var|uint64
var_885 = relay.var("var_885", dtype = "float64", shape = (1, 528))#candidate|885|(1, 528)|var|float64
var_886 = relay.var("var_886", dtype = "float32", shape = (1690,))#candidate|886|(1690,)|var|float32
var_887 = relay.var("var_887", dtype = "int8", shape = (84,))#candidate|887|(84,)|var|int8
var_888 = relay.var("var_888", dtype = "int8", shape = (960,))#candidate|888|(960,)|var|int8
call_882 = func_881_call(var_883,var_884,var_885,var_886,var_887,var_888,)
output = call_882
func_889 = relay.Function([var_883,var_884,var_885,var_886,var_887,var_888,], output)
mutated_mod['func_889'] = func_889
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1007 = relay.var("var_1007", dtype = "float64", shape = (4, 7, 7))#candidate|1007|(4, 7, 7)|var|float64
uop_1008 = relay.atanh(var_1007.astype('float64')) # shape=(4, 7, 7)
func_220_call = mod.get_global_var('func_220')
func_223_call = mutated_mod.get_global_var('func_223')
const_1012 = relay.const([-4,-6,-2,-6,1,1,2,-9,1,-6,-2,-4,-5,-1,-4,8,5,-2,-8,-10,-4,-2,7,1,-5,8,-3,8,7,-10,6,-1,-3,7,-1,10,-8,-2,-6,-2,9,8,-4,-9,-6,4,-8,-2,-7,-2,-6,4,7,-8,8,-5,9,6,-10,4,5,-7,-2,3,7,-8,8,-6,9,-9,3,-1,-7,-6,5,2,-8,2,-7,-9,-10,9,10,-4,-9,-5,7,7,-6,-9,-2,10,2,-8,-9,-5,-4,7,-8,-5,4,-1,8,2,-10,-5,-4,2,7,4,9,-4,-4,8,-4,10,3,-10,9,4,-5,-4,4,-6,8,-8,1,-9,-5,-6,-2,-8,10,-5,-9,8,8,4,8,4,2,-2,-3,8,9,-6,2,5,9,-1,-1,-2,-1,-2,6,4,7,1,-6,-6,4,-6,-4,-10,-3,1,2,-6,8,3,-3,4,-4,9,-5,-4,7,-7,3,5,-10,9,-10,4,-2,-5,-5,-6,-1,8,-10,-7,4,-1,3,2,-4,5,7,-5,-6,5,-7,-10,-6,6,-5,-6,-7,8,4,-1,-5,6,8,3,10,-7,9,-7,8,-4,6,-3,-8,1,3,2,-10,9,10,2,-8,-8,8,5,-1,-10,8,8,-6,-7,2,-6,8,2,5,-7,-5,-3,10,-3,-6,8,8,-1,-4,3,8,2,-5,3,10,-5,4,-10,-6,7,-5,10,-10,8,-9,-2,2,-4,-8,-7,8,-3,-1,-9,3,-1,-9,-4,1,-3,-4,-9,8,-5,2,-5,5,-3,9,3,7,2,4,5,7,8,-4,10,-2,-8,-9,7,1,2,3,3,1,6,-1,-3,-10,10,7,5,6,-6,-8,-9,-6,-10,6,8,9,3,6,8,6,-1,-9,4,2,10,-4,1,-10,6,-2,-3,10,-1,-1,-4,9,2,2,5,6,5,4,8,7,-2,-10,-2,-1,1,-3,1,-2,2,-6,9,-2,-2,2,-4,5,10,1,8,-6,-5,5,3,-8,-3,-1,6,1,-4,7,-4,4,-8,7,-10,-8,-1,1,-2,8,5,10,-5,-1,-5,-8,1,-4,-8,8,3,-3,8,-8,-4,6,6,-3,10,-1,-4,-4,1,-5,-9,9,6,-4,-7,-5,-9,-2,-10,5,1,-4,2,-10,-6,-4,-8,6,-4,-10,-5,1,7,-8,-10,-6,-8,8,8,5,-4,10,-1,-8,9,5,3,7,-9,7,-7,-2,1,4,-7,5,7,3,-2,-4,-9,6,-7,3,7,7,1,8,9,-3,-1,8,-4,10,4,-8,3,8,-6,-7,-9,8,2,-3,-7,7,-3,-10,8,2,3,8,3,-7,-4,-3,-7,-4,6,-1,-2,-3,-5,-3,-4,-8,6,-5,1,9,4,-10,-2,3,-2,10,-5,10,-9,-5,-9,-8,-9,3,4,-7,5,-1,-6,6,9,3,-3,5,7,3,-3,10,-5,-5,-6,-9,-2,9,-7,7,2,-1,4,-5,6,-6,2,-4,-8,7,-1,-4,-9,2,-7,-3,8,2,-9,-10,8,5,-1,-6,-6,-2,7,2,8,-1,3,-4,7,-1,-4,3,-9,1,-7,-1,-7,-2,7,-2,9,10,7,-3,9,-1,6,-6,-2,7,1,2,10,-4,-9,-4,8,-10,-5,9,6,-8,2,9,10,-3,5,8,-3,-4,9,-3,-1,3,-6,1,-2,4,4,8,-1,-2,-8,4,5,4,-8,-2,-7,-5,5,7,-7,-1,-6,3,-2,6,7,9,-9,-7,-9,-6,-2,-1,8,-6,1,-6,-8,4,5,-8,-3,-6,2,-9,-10,7,-7,1,-8,-10,4,-6,4,10,2,-2,7,-7,-1,9,-3,-5,7,-8,1,-6,4,5,1,-7,-5,8,-9,10,3,-1,-8,-9,-2,-1,-4,10,-6,8,-2,10,6,-9,3,4,9,-2,-2,3,5,9,-1,-9,-5,6,-2,5,4,-2,3,1,-1,-10,-4,-9,7,10,8,-6,-4,10,-9,-3,-9,10,-1,6,3,-7,7,6,5,-1,-5,3,9,5,-8,-1,-5,9,-1,10,-10,-3,-2,-2,-6,7,2,-1,3,1,6,8,-2,-1,-3,8,-7,-10,-3,5,7,-9,4,-2,-7,10,-4,9,5,-8,1,2,1,7,6,3,2,4,3,-2,-8,6,-1,5,-2,-6,3,1,2,7,-9,-3,2,8,-3,6,5,1,-6,5,3,3,1,-9,-3,1,9,-3,-9,-8,3,2,-7,-3,-1,-3,10,-10,9,4,-8,-3,8,1,9,10,5,-8,-8,7,1,-4,3,4,3,-5,-2,1,-4,-7,-2,-5,-2,-1,-7,-10,8,9,-5,-5,-10,1,-9,-2,-5,-8,-10,5,-9,2,7,-2,3,-8,8,-9,6,-10,4,-9,-5,-5,-3,6,-9,6,10,10,-3,4,-4,10,4,-4,-6,-7,-4,-5,-7,9,-9,1,-4,5,-9,-1,-3,-2,2,5,-3,-6,-9,3,2,-9,8,-4,-10,2,-7,4,-3,-7,4,-3,-6,-1,-10,10,-8,-4,-8,-1,-7], dtype = "int8")#candidate|1012|(960,)|const|int8
call_1011 = relay.TupleGetItem(func_220_call(relay.reshape(const_1012.astype('int8'), [16, 10, 6])), 0)
call_1013 = relay.TupleGetItem(func_223_call(relay.reshape(const_1012.astype('int8'), [16, 10, 6])), 0)
uop_1014 = relay.sinh(const_1012.astype('float32')) # shape=(960,)
output = relay.Tuple([uop_1008,call_1011,uop_1014,])
output2 = relay.Tuple([uop_1008,call_1013,uop_1014,])
func_1016 = relay.Function([var_1007,], output)
mod['func_1016'] = func_1016
mod = relay.transform.InferType()(mod)
var_1017 = relay.var("var_1017", dtype = "float64", shape = (4, 7, 7))#candidate|1017|(4, 7, 7)|var|float64
output = func_1016(var_1017)
func_1018 = relay.Function([var_1017], output)
mutated_mod['func_1018'] = func_1018
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1057 = relay.const([[9.362726,-1.185475,-0.917642,-0.401744,-0.447606,5.495721,3.364786,-0.888068,-2.085948,3.584785,1.371281,1.298942,1.200433],[1.299060,-4.283010,-3.475432,-9.228152,6.549493,8.141752,3.859650,7.326193,2.569505,-7.215855,2.869782,-7.100386,-8.799486],[9.858588,-9.529673,5.220352,-7.835481,-8.891939,7.809347,5.488661,5.994484,5.952290,8.489697,-6.369672,8.464567,-6.643327],[1.597735,6.045276,3.494788,3.169931,-2.486214,3.202474,-5.977909,4.331461,-3.652897,3.092481,4.680115,-0.270324,4.495877],[5.306495,5.250548,9.274792,-7.876891,-0.574446,-9.770827,-3.214531,-1.364023,8.677448,6.753663,6.191208,6.848814,-9.892302],[4.047047,6.363415,6.734207,7.671502,9.754746,7.816584,-3.672673,8.662188,-5.071725,7.093637,9.605225,2.799839,5.914919],[-6.569684,0.496468,5.767206,6.420140,6.824520,-5.421487,-9.020017,-8.934892,8.776256,4.400752,7.787007,-0.974484,3.951800],[3.550927,7.836521,8.312498,3.171789,-1.188096,7.369369,-4.740974,-7.551929,8.084015,-8.970783,-5.103357,-1.788803,-5.470013],[4.671252,-6.634117,-0.236590,-4.021027,-7.886796,6.332468,-9.508075,0.908156,7.806425,6.648922,-7.027510,-9.053691,-6.328713],[-2.012681,5.511462,-2.860865,-3.782583,2.864011,-0.235033,-5.668612,4.177320,-0.844643,9.653981,8.012111,8.536245,-7.122863],[4.855106,-4.060726,1.922635,5.189515,8.353657,-3.711213,-8.404191,-0.540854,6.671727,-3.631985,-0.437510,-7.357059,-6.984427],[2.034667,-1.533461,7.285524,-7.703386,7.214486,-4.872268,-3.952853,-8.084453,7.650580,-4.707398,4.496444,-5.263416,-4.016071]], dtype = "float64")#candidate|1057|(12, 13)|const|float64
uop_1058 = relay.sinh(const_1057.astype('float64')) # shape=(12, 13)
bop_1062 = relay.subtract(const_1057.astype('int8'), relay.reshape(uop_1058.astype('int8'), relay.shape_of(const_1057))) # shape=(12, 13)
func_122_call = mod.get_global_var('func_122')
func_125_call = mutated_mod.get_global_var('func_125')
var_1067 = relay.var("var_1067", dtype = "float32", shape = (1690,))#candidate|1067|(1690,)|var|float32
call_1066 = relay.TupleGetItem(func_122_call(relay.reshape(var_1067.astype('float32'), [10, 13, 13])), 3)
call_1068 = relay.TupleGetItem(func_125_call(relay.reshape(var_1067.astype('float32'), [10, 13, 13])), 3)
func_881_call = mod.get_global_var('func_881')
func_889_call = mutated_mod.get_global_var('func_889')
const_1071 = relay.const([[9],[8],[9],[1],[2],[10],[2],[1],[-3],[-10],[-5],[-5],[3],[-1],[-3],[1],[-8],[-5],[-7],[-6],[2],[2],[-10],[-2],[1],[-7],[8],[-9],[3],[2],[-8],[7],[-4],[-4],[1],[-1],[-6],[4],[4],[-10],[-7],[-3],[-10],[6],[2],[-9],[-2],[8],[-1],[6],[-2],[4],[10],[3],[-6],[-10],[1],[8],[8],[5],[1],[-2],[-2],[-9],[-1],[-6],[2],[3],[8],[7],[-1],[8]], dtype = "uint64")#candidate|1071|(72, 1)|const|uint64
const_1072 = relay.const([1.150644,3.858146,7.817374,-5.714247,0.187836,-0.722998,4.446241,5.356480,9.836512,-9.873048,6.849411,1.431151,-8.101908,-0.426634,-2.411677,-8.016601,4.915567,7.178825,-0.229989,7.860429,-8.013019,-4.993063,6.263763,-2.741635,-0.522739,5.673810,2.514961,1.531629,-9.514745,-0.635396,4.930972,1.748417,-8.073242,-8.793061,-8.173604,5.912534,0.609096,-4.613381,1.029321,9.176904,-5.371495,0.565590,6.745066,2.545281,-4.726535,5.304494,-9.195705,0.423999,9.236541,7.453656,1.652348,-7.764171,5.367557,-7.809497,0.678319,-7.649203,-7.351051,1.314439,-6.687953,2.534225,-1.902264,8.313312,3.682930,-1.435855,-2.799507,-4.953208,-8.825130,-0.598804,-5.391640,-7.183033,-6.727923,2.586082,-1.203326,1.397109,9.667098,0.726088,1.441420,7.047668,1.061821,0.299687,7.048216,-2.062165,-1.018246,8.279248,0.791164,-8.331611,6.163510,-1.783170,-7.934327,-8.538728,-1.779735,-5.361378,-6.266926,7.135426,7.849316,8.196176,-9.893324,-6.222872,-4.883129,1.087662,7.749841,-7.639549,7.912665,-5.458171,-6.943666,-2.079713,-8.144896,-4.307621,-4.367876,6.871079,-6.460737,-4.712790,-4.731519,1.459328,8.748842,-6.128860,-6.159508,3.537112,5.184063,1.829367,-3.427610,-1.184714,-5.566263,-6.428954,-5.318656,-3.300212,-0.170706,-6.443299,8.671378,-4.209463,-4.765390,1.800579,3.466158,7.262134,-8.660950,-0.464345,-1.825342,-1.809092,5.031147,7.222049,-9.792601,-9.584131,-8.149562,4.093962,-0.763523,-1.217737,-7.801188,0.334370,-9.939402,-4.678751,6.917064,-4.614614,9.130829,4.496928,2.727923,4.449683,-5.275971,-7.244223,-9.512937,6.525809,3.658895,8.179709,2.081649,2.836116,9.685316,2.265469,-2.525570,-1.647254,-9.747087,-4.357863,-1.355860,3.524600,8.447879,-7.892243,8.980889,-4.099342,1.462518,-5.682380,-2.036258,4.022303,7.776192,9.062132,-4.533001,8.282383,6.805335,-3.854796,3.940343,-5.542561,3.252038,-4.627134,-2.877725,-8.253015,6.179839,1.741581,-4.792789,8.093310,2.663929,-2.625091,2.874731,-0.278917,2.157006,-8.234172,-7.433449,-4.486889,4.354317,-4.764023,1.157691,-5.929278,6.455701,9.217431,-2.531192,8.391319,2.342405,0.506624,9.182486,2.123029,-5.014425,-8.999266,-2.217692,-1.430613,9.973043,-3.005320,3.043814,9.495105,-1.500041,7.106398,-2.733735,-5.166710,-1.514222,-4.025276,9.136046,-0.212219,5.250955,-6.816225,4.535835,-3.681186,1.293889,-1.989564,1.302068,3.498948,-9.377942,-9.494129,9.321540,-5.035887,-8.285988,5.554489,-3.628318,4.497150,-9.640226,3.592633,-0.923046,0.022710,-9.433987,2.434556,5.501164,3.315861,4.993987,-9.598685,-0.667942,-7.014797,7.359502,-6.989933,3.465486,-3.255179,9.720604,-2.985342,6.279768,7.469339,3.819180,0.357148,2.386015,-3.236809,-5.412066,9.981852,0.292836,3.900815,-3.678112,-8.801612,5.885121,2.230509,-3.224618,-1.477205,5.010803,-6.104756,-7.226618,-2.310158,-1.058778,-5.744061,6.482371,-4.366132,1.733784,-3.577584,4.955071,-5.998672,1.079841,-4.406887,1.256607,2.971661,-4.226276,5.772810,4.075566,6.469270,-1.645056,-6.743673,7.150731,-6.300229,-3.354786,-9.613338,3.928749,-4.888420,5.202597,-7.360827,2.032929,9.579055,0.538627,5.500193,-0.245332,8.971003,-2.609154,9.414956,-3.766750,2.315021,-3.692794,-3.466291,-9.335743,-5.440978,0.537918,-8.598963,-6.546189,4.320799,-3.277852,-9.898182,7.552217,0.837605,9.943771,3.436033,-2.030215,-7.878178,5.146826,-2.303556,6.586183,5.747028,9.784367,9.914178,7.897507,-9.271379,2.304448,8.785792,-8.914129,7.610574,9.689634,3.641836,3.774301,-5.294284,-6.062633,-3.862741,3.589048,3.795989,1.689721,-7.232296,6.089619,-2.487544,5.596985,4.295617,-4.172374,4.404917,7.041162,7.370305,-1.372357,6.888507,-9.016763,-6.931218,0.116986,-8.399565,-2.438571,-5.519136,8.011927,0.376226,-6.064253,-4.658904,0.923542,-7.190756,-4.671433,0.435926,9.660374,-5.542544,-1.424871,3.884616,-5.602795,-3.711940,-5.725539,-2.870963,7.172886,-3.458673,-7.861249,-4.025551,-7.523879,-6.006484,-6.466118,9.823844,1.258008,2.912398,-6.681810,8.673735,-6.431221,2.827358,-3.165354,8.389378,3.438901,5.622034,-2.991871,7.666056,-2.793479,-2.711291,8.225739,-6.596357,2.001008,-4.557649,-5.091625,-4.990628,7.836040,8.079794,1.698913,1.590230,-8.104749,-6.780438,-4.807080,3.901703,2.019962,0.109935,4.117534,7.061807,6.937756,-0.767216,-3.609707,1.268007,2.130432,6.378454,1.479931,6.187584,-3.315837,-3.862209,-9.705551,2.941518,4.838592,-9.496959,3.415688,6.742817,-2.374129,-4.411396,-3.285101,-4.318944,9.852367,-8.160158,0.272315,-0.347566,0.597547,-6.739385,6.637094,-5.823810,8.750145,3.584539,-7.149845,1.195966,6.051459,7.079003,3.993645,7.923171,-0.948545,2.857430,0.315752,2.248453,7.991929,-7.841616,2.902800,9.081072,-5.610041,1.158708,-5.015834,4.700646,0.980549,3.754957,-5.147903,2.829610,8.526225,-8.958504,-2.657041,1.639141,-4.640911,-2.995995,-3.559927,-2.612886,8.321781,-9.524715,-5.590161,2.529003,-9.203963,9.104731,5.119251,9.987487,6.451621,5.908059,2.405121,3.243914,0.091383,-3.533360,-8.100190,-6.719850,-3.516919,4.996829,-1.102492,-9.090401,5.391625,0.439903,-1.659921,7.148497,2.254350,-9.335691,-3.685254,-3.130863,3.763905,1.651095,9.706927,9.739118,-7.803012,-1.522098,6.142783,-6.298730], dtype = "float64")#candidate|1072|(528,)|const|float64
const_1073 = relay.const([[4,-3,-4,1,-4,9,-6,-3,-7,-3,5,-6,1,-5,5,-10,3,-9,10,-2,-4,-4,-4,-7,-6,-1,8,-7,-3,6,2,-7,9,1,-8,6,6,2,10,10,4,4,1,1,-6,3,4,10,-8,5,-3,-9,4,10,-3,-8,4,-8,-7,-8,-7,8,1,-7,10,4,-4,4,-6,-1,-5,-5,5,3,-4,3,-1,3,1,-10,1,-8,-9,-4]], dtype = "int8")#candidate|1073|(1, 84)|const|int8
const_1074 = relay.const([[-3],[-8],[-4],[-6],[6],[-8],[-9],[-10],[-4],[3],[-10],[3],[-8],[2],[4],[-6],[-6],[1],[-9],[-5],[-6],[-3],[-7],[-7],[-3],[-7],[1],[-2],[8],[2],[-2],[10],[-5],[10],[-7],[-3],[9],[-7],[-1],[7],[5],[1],[-3],[-6],[7],[-2],[8],[-6],[2],[-1],[10],[1],[-7],[8],[-5],[6],[-9],[7],[-9],[5],[-2],[-4],[-9],[-5],[6],[-10],[-7],[-10],[3],[4],[2],[-7],[6],[3],[6],[-9],[4],[-9],[4],[4],[8],[-10],[6],[9],[5],[7],[-3],[8],[-8],[-5],[6],[-3],[9],[-3],[-5],[-5],[-10],[-6],[-5],[8],[-10],[7],[9],[3],[6],[-2],[-5],[-3],[8],[-7],[3],[-6],[9],[1],[-8],[-3],[-4],[-2],[-6],[2],[4],[-4],[-10],[3],[-3],[3],[-4],[-10],[10],[6],[2],[4],[10],[1],[-2],[9],[7],[-5],[10],[-5],[10],[-2],[-6],[9],[4],[3],[3],[-2],[-5],[10],[-3],[3],[2],[-7],[10],[7],[1],[-6],[2],[2],[-9],[1],[-2],[8],[5],[-7],[6],[-10],[-10],[1],[10],[-9],[9],[-5],[-1],[6],[2],[3],[-2],[3],[8],[8],[10],[2],[-7],[-1],[5],[8],[-7],[5],[-2],[7],[2],[-7],[-2],[2],[10],[4],[9],[1],[1],[3],[-2],[-9],[5],[-7],[7],[-8],[6],[3],[-8],[10],[6],[10],[-1],[1],[3],[-9],[-6],[3],[4],[-8],[-6],[10],[-4],[9],[-10],[1],[-4],[1],[-6],[-1],[-10],[-5],[9],[-8],[10],[6],[4],[5],[10],[1],[-7],[-6],[-5],[-6],[1],[9],[8],[-8],[4],[1],[-3],[7],[2],[-5],[-9],[2],[1],[5],[-3],[7],[10],[5],[-2],[6],[10],[9],[2],[-3],[9],[7],[-4],[-2],[-7],[1],[9],[3],[-7],[-9],[3],[6],[-1],[-9],[2],[-1],[9],[7],[-9],[10],[-7],[5],[10],[9],[-8],[8],[-2],[-7],[1],[9],[-5],[4],[-8],[-9],[1],[10],[-10],[-8],[-3],[-10],[3],[-2],[-6],[9],[-4],[-1],[-7],[-3],[8],[-2],[1],[9],[-5],[4],[3],[-10],[-3],[3],[-1],[7],[3],[4],[-4],[6],[1],[1],[10],[-5],[-8],[-4],[2],[7],[-6],[7],[5],[3],[-3],[-7],[-4],[-9],[1],[-8],[1],[-5],[-2],[-9],[-2],[-2],[-9],[4],[-2],[-1],[3],[-1],[2],[-3],[1],[1],[5],[-10],[4],[-9],[-6],[-5],[-9],[-10],[-7],[3],[-8],[7],[6],[3],[1],[9],[2],[1],[1],[-2],[-3],[3],[-5],[1],[1],[-2],[-8],[-10],[-10],[2],[-7],[-5],[4],[-4],[-8],[-1],[5],[-2],[-6],[-4],[9],[-9],[6],[-3],[-2],[-8],[-10],[9],[1],[-7],[2],[-1],[-4],[7],[10],[-9],[9],[5],[-7],[2],[5],[-10],[2],[-9],[3],[-3],[5],[-1],[-1],[-1],[2],[-7],[9],[-6],[2],[6],[7],[4],[-5],[2],[8],[2],[1],[4],[-4],[2],[-6],[10],[-5],[-2],[6],[6],[-1],[-3],[-1],[4],[-2],[3],[-2],[7],[4],[5],[-10],[-7],[-1],[2],[6],[9],[6],[6],[8],[-7],[8],[6],[-8],[7],[2],[-6],[-7],[7],[-4],[3],[5],[-9],[-7],[10],[-7],[-8],[8],[-5],[6],[-10],[6],[-3],[1],[-8],[9],[4],[7],[-6],[-8],[-10],[5],[10],[-1],[-10],[8],[7],[8],[-6],[-10],[-1],[-10],[-4],[8],[-1],[-6],[3],[-10],[-5],[-1],[8],[-6],[5],[5],[-10],[-8],[5],[-8],[4],[6],[-6],[8],[-4],[-4],[9],[-3],[-7],[2],[-3],[-5],[-3],[8],[10],[-6],[3],[2],[6],[1],[-10],[10],[-2],[-8],[4],[-3],[8],[-1],[-1],[-8],[4],[7],[-6],[9],[1],[-4],[4],[-4],[-9],[-5],[4],[-9],[6],[-3],[9],[-7],[-5],[-10],[-5],[7],[-6],[-9],[-4],[-7],[7],[5],[2],[4],[-4],[-4],[-8],[5],[7],[-8],[-6],[-8],[-5],[5],[4],[-4],[5],[-10],[5],[-2],[1],[-3],[-9],[6],[-6],[10],[-1],[-4],[-7],[-8],[10],[2],[1],[-10],[-6],[-7],[-10],[-9],[9],[-7],[-2],[-4],[-5],[-9],[-7],[5],[-9],[1],[-9],[-6],[5],[3],[4],[-8],[-7],[-5],[-4],[-2],[-7],[-3],[-6],[-2],[-5],[4],[-5],[-8],[-6],[10],[5],[2],[-5],[-1],[-9],[-7],[-3],[-3],[-1],[3],[7],[10],[2],[4],[1],[9],[-2],[-7],[1],[3],[10],[6],[-2],[-2],[1],[9],[-7],[-2],[6],[-6],[-10],[2],[7],[6],[-9],[5],[10],[-3],[-10],[7],[2],[-1],[-4],[-5],[-1],[-9],[5],[10],[3],[9],[-8],[1],[8],[2],[9],[-1],[-5],[8],[-7],[10],[-6],[-8],[2],[-3],[7],[-7],[8],[3],[-2],[-4],[-4],[9],[-9],[-9],[-2],[6],[-7],[8],[-4],[4],[-3],[-4],[-9],[-7],[-2],[1],[9],[-5],[9],[-7],[-2],[8],[9],[1],[-9],[7],[-8],[-4],[-8],[7],[5],[-5],[-7],[3],[4],[-8],[4],[6],[-4],[-9],[1],[-4],[6],[5],[1],[5],[-1],[-8],[-1],[-6],[-10],[-1],[-10],[10],[-1],[-8],[4],[1],[-10],[-6],[-10],[6],[-3],[10],[5],[1],[10],[-2],[7],[6],[-10],[10],[6],[5],[-10],[8],[-4],[-1],[-1],[1],[7],[-3],[-3],[9],[6],[10],[2],[1],[-3],[-6],[9],[-3],[10],[-2],[-5],[9],[6],[-10],[9],[-9],[-5],[-3],[8],[4],[2],[6],[-6],[6],[5],[9],[10],[3],[-1],[5],[10],[-7],[4],[1],[5],[5],[5],[-1],[-10],[-9],[7],[-4],[-7],[5],[8],[8],[-5],[-3],[6],[-10],[9],[-8],[-5],[-7],[8],[-2],[3],[3],[1],[-8],[7],[8],[-2],[10],[-5],[6],[-8],[-10],[5],[-9],[-3],[-7],[-5],[6],[8],[8],[1],[-9],[7],[10],[-2],[5],[3],[2],[-3],[1],[2],[-4],[-8],[-6],[6],[2],[-9],[10],[-10],[7],[-9],[1],[-8],[-1],[4],[10],[-10],[4],[5],[-2],[3],[8],[-5],[-8],[-3],[5],[7],[-5],[9],[-9],[8],[10],[4],[-5],[5],[9],[3],[1],[-10],[-1],[4],[-4],[-3],[8],[-6],[6],[6],[1],[-9],[8],[6],[-3],[-9],[-7],[1],[-1],[-5],[6],[5],[-10],[10]], dtype = "int8")#candidate|1074|(960, 1)|const|int8
call_1070 = relay.TupleGetItem(func_881_call(relay.reshape(const_1071.astype('uint64'), [3, 3, 8]), relay.reshape(const_1071.astype('uint64'), [3, 3, 8]), relay.reshape(const_1072.astype('float64'), [1, 528]), relay.reshape(var_1067.astype('float32'), [1690,]), relay.reshape(const_1073.astype('int8'), [84,]), relay.reshape(const_1074.astype('int8'), [960,]), ), 16)
call_1075 = relay.TupleGetItem(func_889_call(relay.reshape(const_1071.astype('uint64'), [3, 3, 8]), relay.reshape(const_1071.astype('uint64'), [3, 3, 8]), relay.reshape(const_1072.astype('float64'), [1, 528]), relay.reshape(var_1067.astype('float32'), [1690,]), relay.reshape(const_1073.astype('int8'), [84,]), relay.reshape(const_1074.astype('int8'), [960,]), ), 16)
output = relay.Tuple([bop_1062,call_1066,var_1067,call_1070,const_1071,const_1072,const_1073,const_1074,])
output2 = relay.Tuple([bop_1062,call_1068,var_1067,call_1075,const_1071,const_1072,const_1073,const_1074,])
func_1085 = relay.Function([var_1067,], output)
mod['func_1085'] = func_1085
mod = relay.transform.InferType()(mod)
var_1086 = relay.var("var_1086", dtype = "float32", shape = (1690,))#candidate|1086|(1690,)|var|float32
output = func_1085(var_1086)
func_1087 = relay.Function([var_1086], output)
mutated_mod['func_1087'] = func_1087
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1102 = relay.const([[-1,-9],[-7,-6],[-7,3]], dtype = "uint32")#candidate|1102|(3, 2)|const|uint32
const_1103 = relay.const([[9,-6],[5,10],[-8,-5]], dtype = "uint32")#candidate|1103|(3, 2)|const|uint32
bop_1104 = relay.multiply(const_1102.astype('uint32'), relay.reshape(const_1103.astype('uint32'), relay.shape_of(const_1102))) # shape=(3, 2)
func_122_call = mod.get_global_var('func_122')
func_125_call = mutated_mod.get_global_var('func_125')
var_1117 = relay.var("var_1117", dtype = "float32", shape = (1690,))#candidate|1117|(1690,)|var|float32
call_1116 = relay.TupleGetItem(func_122_call(relay.reshape(var_1117.astype('float32'), [10, 13, 13])), 2)
call_1118 = relay.TupleGetItem(func_125_call(relay.reshape(var_1117.astype('float32'), [10, 13, 13])), 2)
output = relay.Tuple([bop_1104,call_1116,var_1117,])
output2 = relay.Tuple([bop_1104,call_1118,var_1117,])
func_1121 = relay.Function([var_1117,], output)
mod['func_1121'] = func_1121
mod = relay.transform.InferType()(mod)
var_1122 = relay.var("var_1122", dtype = "float32", shape = (1690,))#candidate|1122|(1690,)|var|float32
output = func_1121(var_1122)
func_1123 = relay.Function([var_1122], output)
mutated_mod['func_1123'] = func_1123
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1214 = relay.var("var_1214", dtype = "float32", shape = (16, 7, 13))#candidate|1214|(16, 7, 13)|var|float32
uop_1215 = relay.atanh(var_1214.astype('float32')) # shape=(16, 7, 13)
output = uop_1215
output2 = uop_1215
func_1225 = relay.Function([var_1214,], output)
mod['func_1225'] = func_1225
mod = relay.transform.InferType()(mod)
var_1226 = relay.var("var_1226", dtype = "float32", shape = (16, 7, 13))#candidate|1226|(16, 7, 13)|var|float32
output = func_1225(var_1226)
func_1227 = relay.Function([var_1226], output)
mutated_mod['func_1227'] = func_1227
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1357 = relay.var("var_1357", dtype = "float32", shape = (11, 16, 5))#candidate|1357|(11, 16, 5)|var|float32
uop_1358 = relay.cosh(var_1357.astype('float32')) # shape=(11, 16, 5)
const_1377 = relay.const([[[5.746273,-7.083608,8.329588,0.534624,1.802342],[-3.895249,5.897678,3.208482,0.894725,-7.288467],[0.988472,-3.913887,1.185343,-0.772000,9.343916],[3.836404,4.866470,1.374605,5.790273,3.256256],[-7.510459,-3.934082,-8.265726,-8.574423,-9.259490],[6.815953,-3.941873,-4.112338,8.827364,-3.109624],[-9.016417,6.125965,-6.303647,7.727416,3.195551],[-0.826756,-4.072257,1.851582,8.626412,-2.972512],[7.516503,8.141557,7.901327,5.110350,-9.024854],[-5.490950,4.629575,-6.193081,-4.169954,-3.866800],[-7.287556,5.195308,2.544520,-7.846583,-4.673263],[-1.607031,-0.582322,1.145327,2.775012,-2.469045],[-6.226573,1.941969,-6.628590,9.935972,6.208701],[-2.646687,3.726367,-1.727705,8.774481,8.194293],[1.766875,6.385897,3.593826,9.758653,2.452456],[-8.000238,-4.140140,7.856081,0.517460,1.857296]],[[-5.850246,-3.751616,0.601261,-7.951188,0.253480],[-8.973185,4.935794,-9.038157,-4.548146,-3.032898],[0.711373,-4.546337,-4.642227,-8.186549,-9.968122],[-4.588819,-2.302564,-5.232170,4.940329,-8.020803],[-3.713285,0.011693,-1.932405,-8.823904,4.236430],[-1.122765,4.823654,8.001840,-3.761464,7.006881],[1.969093,-8.604916,5.447508,-3.002491,1.082406],[9.025983,5.433606,-7.559883,2.350048,0.901777],[4.085440,2.055186,-3.300684,-9.247507,6.147002],[6.919569,0.146750,-9.396381,5.026234,8.420186],[8.807371,-2.698533,3.617796,-8.970680,-7.940118],[5.244215,7.944936,-1.029707,7.682468,-6.250651],[3.121591,-8.374275,5.588227,8.508146,6.377263],[-4.561428,2.449039,4.534424,9.876345,9.087798],[5.189192,4.917443,-1.155175,-8.412720,-6.728210],[-9.980151,0.274270,-5.672309,5.312773,5.346126]],[[-4.763422,5.975505,-2.656469,-0.134643,-3.987906],[0.281809,-1.848960,-8.103455,6.711509,2.982786],[2.627872,0.555424,-2.657324,-4.587934,7.265321],[-0.236722,1.020459,7.721872,-7.823789,9.312740],[-3.959386,1.127704,5.224076,0.904155,-3.612145],[-0.355807,-9.411290,-0.802979,7.794538,-6.284186],[-1.470679,-2.060573,-5.143183,-4.496527,0.730905],[6.260011,-3.923090,-3.197622,-1.523332,-6.425841],[-4.166899,-4.345360,-7.041198,2.213918,4.680565],[-6.972666,-4.118447,5.794296,5.806440,-4.857483],[2.978714,-3.172509,-8.777651,4.441023,-1.906056],[8.344362,-7.227919,9.041128,9.240080,-9.269404],[-6.716488,-5.315452,7.929638,2.782783,8.721796],[8.194293,5.786488,5.360298,1.496819,-5.728794],[-8.784219,-8.543846,6.096074,-8.605425,7.564968],[-3.723526,5.060908,-0.673785,-8.456178,2.051507]],[[1.335102,4.142246,-4.802418,-8.138315,7.413243],[5.670190,2.593019,4.164438,3.325000,6.415647],[-4.692793,-5.540403,-0.643305,7.689803,-9.664495],[8.940550,5.484996,-7.323292,4.871772,8.357345],[9.843538,-8.340980,0.692141,-1.462720,4.534109],[0.102338,9.415790,-5.975227,-3.891020,-2.336847],[-2.676138,9.437791,-2.837021,-7.725300,-9.256085],[8.456240,-7.028104,-4.124175,4.441099,7.154059],[-4.725904,-1.603174,-1.280163,-2.920416,-0.607446],[-7.665302,-1.881409,7.752041,0.251083,-6.529540],[3.318544,-8.926486,1.312121,5.583190,1.389689],[-6.783194,1.710266,0.113916,7.080804,0.576272],[-1.522633,-3.045249,9.888110,-7.143837,7.719810],[-4.594193,-7.297476,0.466138,-3.256418,-3.924002],[0.420449,6.527381,0.707743,-5.156449,-9.317503],[1.019867,2.166026,6.592371,1.452611,-3.592256]],[[-8.828313,6.775366,8.262553,9.360660,-2.985303],[4.783676,-8.447037,-4.926551,1.690094,-4.204423],[-5.218694,-2.367304,4.840993,-1.439689,1.706108],[-1.999394,-7.558530,-8.837213,-7.797827,1.992544],[8.044246,-6.837486,9.327074,-4.092019,4.992951],[3.978152,-5.132177,-8.726787,2.387508,-6.223332],[4.022336,0.195847,-8.840639,0.032369,5.856213],[3.427907,8.586352,-3.278543,0.807916,9.193765],[9.784058,-2.276983,-5.390609,1.066188,-6.022186],[9.404161,-2.051576,8.242629,-7.189125,5.524597],[1.887032,5.611609,-9.894826,6.198302,-0.709010],[2.930186,8.149649,6.221551,-9.805113,-2.719548],[-5.017276,-0.429460,-5.443235,0.971749,-0.165278],[-1.300597,-0.639356,-0.023703,4.915799,-5.195797],[-6.228898,3.028904,0.279962,0.824440,8.640306],[-1.664180,3.766936,0.688033,-9.189780,2.896058]],[[8.448516,-8.425683,5.076175,8.794390,4.226748],[-8.254096,9.486215,3.439962,-3.743700,-3.443489],[-5.679920,4.517705,9.557670,1.816566,2.729799],[-2.252122,-9.902404,-9.797143,4.703705,-6.802515],[1.597392,-9.966011,-7.183544,-1.700286,-2.203734],[3.504117,7.190048,3.223232,2.651164,5.222420],[1.107840,0.957998,-1.349898,0.801388,4.305879],[-9.181962,-9.164402,6.911026,2.846943,8.660786],[-6.218714,-9.342312,2.647284,-1.498886,5.966347],[6.427964,6.677112,-0.224194,2.854081,5.237912],[-8.006058,4.743568,-4.985233,5.691832,-0.504127],[-8.514855,2.263605,8.926259,-6.640930,3.491800],[7.582817,-4.993703,-2.047176,-3.800014,-0.212382],[-5.482257,-6.168672,6.985168,3.275376,-3.707960],[7.480965,-8.326461,4.032867,5.160748,-6.683396],[6.691037,8.933663,-7.402834,5.596374,9.360850]],[[5.428438,-2.897705,-0.814957,-7.060955,-4.447971],[6.466979,7.178529,1.465142,1.862657,-4.097751],[5.138302,8.464768,3.165379,-1.439019,4.973064],[-9.516142,-2.877900,-2.641058,-5.005506,-0.912501],[2.271690,-8.042063,5.443227,4.620818,-1.725944],[-7.637525,-5.633359,6.603592,-2.375165,-5.104687],[0.111449,-3.577809,7.951910,-6.999765,4.554618],[-6.301179,0.300931,-0.391053,-4.348423,9.873914],[4.615333,1.071274,-9.060035,-9.018385,-1.424166],[-0.719933,6.556954,2.932413,6.217798,5.448968],[-4.839063,3.745700,-2.684315,2.420503,7.521373],[-9.813748,-1.340872,-9.626719,-5.699274,1.521782],[8.078802,-7.666478,-5.572917,7.254755,-6.442078],[9.494172,7.495860,-9.226687,-6.304863,-7.182293],[-6.880767,-4.639960,-1.413445,3.079154,5.093080],[-7.538392,-2.372478,-3.900065,-5.075670,-9.637598]],[[-8.515675,-4.321813,-5.512899,8.205662,-0.314023],[6.936107,-0.965629,9.945472,-7.821478,7.859900],[-5.887070,5.957453,3.743070,0.938299,1.179918],[-3.878214,6.931386,4.762343,8.204577,-6.189246],[4.392201,-2.664204,-7.563527,-1.134455,8.037715],[-0.619459,4.145021,-8.537957,5.705936,5.834738],[-7.657241,-6.510774,-7.284504,7.890227,7.820176],[4.882681,8.681693,-0.191094,1.386797,9.614410],[1.704497,-6.355944,2.793351,8.925895,6.073289],[3.114841,-2.105824,8.439291,-2.352686,-9.818568],[5.690414,-6.648888,4.773417,-6.948278,3.804476],[9.102470,9.176745,-5.903135,6.351537,-4.937160],[-9.818391,-0.611928,3.614503,0.401084,-1.756679],[4.969150,7.643068,4.938660,5.559923,1.394760],[2.001994,3.214464,8.988535,0.419148,2.850751],[9.771980,6.466939,-7.379822,7.334036,-8.165310]],[[0.231021,0.724529,6.305568,7.792042,-8.793191],[-0.616703,-9.608227,2.810656,7.759173,-9.561629],[-2.524803,-0.277744,2.284173,-5.189589,-6.768546],[-6.431159,9.014106,-2.689230,-1.643199,7.731308],[-9.073826,-9.505624,9.427111,-8.093520,-0.019980],[6.975676,-6.352127,7.249163,-1.779882,3.849932],[-0.347406,-1.871383,3.371746,2.876831,-0.033190],[3.031627,-6.654422,5.290224,2.458419,-4.288691],[-5.011268,-4.952097,2.397658,-0.593424,5.200049],[-1.261320,-6.428449,9.301772,5.572098,6.521632],[5.506474,-9.609626,2.531460,9.638376,-9.011014],[-2.381475,2.041210,7.620163,-1.750053,-1.193264],[5.094017,-6.880010,6.777023,-9.387191,-2.481727],[6.145044,-5.809019,7.143795,9.375291,-5.501121],[-2.996508,3.420590,2.905951,-2.635856,-1.643160],[6.445901,0.071753,1.816752,-9.826571,0.001135]],[[-1.643180,-2.456405,-7.732285,-2.342279,3.983190],[9.025935,8.263308,4.422098,-1.472959,4.427222],[3.459363,-4.314403,-8.674196,4.631219,4.468902],[1.728841,4.754871,-4.924602,8.202672,-5.474129],[0.453409,-4.808550,-3.683240,4.591863,5.605916],[6.395816,-1.007192,4.446275,-2.272826,7.083625],[8.049861,5.339000,-9.385869,-2.937806,-9.709776],[-4.883433,9.012921,-8.081101,7.561333,-9.976028],[-6.143209,8.947344,5.533437,4.963064,9.926929],[-2.729584,8.151561,-4.490947,5.113945,4.184949],[7.893756,-3.319479,-1.103133,-8.566412,-4.802241],[-0.911544,-4.531341,7.387333,-3.559667,7.385276],[7.350290,-4.552964,3.335015,4.671562,-2.706290],[-0.799770,-1.197046,-1.960864,-8.474987,-5.274020],[9.817224,1.898723,-1.541304,7.591472,-2.462128],[8.922746,-8.385721,-7.800295,-7.339741,7.100301]],[[5.381157,-4.365727,-6.858435,-4.429259,6.671634],[9.037846,-5.724789,-9.253782,-0.289434,7.538601],[9.868768,-2.820592,9.810589,2.964722,-8.099154],[-3.030318,2.197481,-3.516043,7.446512,-6.334439],[6.459211,1.022017,-9.050109,0.616968,8.570149],[6.897906,5.128385,3.897151,3.677780,-5.891197],[7.770085,8.887818,1.466392,-2.458471,-8.389906],[0.415450,-9.674507,5.952867,-7.449566,7.476607],[-1.460262,-1.415796,7.376930,-5.328104,9.771165],[-8.974394,0.665156,8.285876,9.063255,9.353780],[-7.421301,-8.013532,9.233967,7.946961,-2.686009],[7.654973,-2.797293,-0.825075,0.976473,-6.851569],[0.501445,3.382946,-7.790020,4.394406,-8.661701],[8.077555,6.698699,-2.088533,-0.312491,-8.219369],[-0.418527,3.131895,-0.754387,-9.495254,-0.963366],[-2.855865,-1.852578,-1.876876,-0.318274,-4.972655]]], dtype = "float32")#candidate|1377|(11, 16, 5)|const|float32
bop_1378 = relay.bitwise_or(uop_1358.astype('int16'), relay.reshape(const_1377.astype('int16'), relay.shape_of(uop_1358))) # shape=(11, 16, 5)
uop_1383 = relay.sinh(uop_1358.astype('float64')) # shape=(11, 16, 5)
uop_1386 = relay.log(bop_1378.astype('float32')) # shape=(11, 16, 5)
var_1402 = relay.var("var_1402", dtype = "int16", shape = (11, 16, 5))#candidate|1402|(11, 16, 5)|var|int16
bop_1403 = relay.greater(bop_1378.astype('bool'), relay.reshape(var_1402.astype('bool'), relay.shape_of(bop_1378))) # shape=(11, 16, 5)
bop_1414 = relay.bitwise_and(bop_1403.astype('int8'), relay.reshape(var_1357.astype('int8'), relay.shape_of(bop_1403))) # shape=(11, 16, 5)
const_1429 = relay.const([[[-1.729380,-2.462827,0.912469,2.775606,5.515706],[-4.468206,-6.290045,-8.774037,-5.131629,-3.918176],[6.367384,1.273674,9.760239,4.695362,-0.625512],[8.506916,-7.030470,-7.091557,3.341903,-7.657153],[9.599489,9.902202,-1.927436,-8.755795,7.332025],[0.981251,-5.139180,-8.837304,1.591748,-2.279300],[-0.009078,9.662887,2.405775,0.823792,2.816712],[-3.885793,-1.742384,-4.640039,6.016389,-7.173320],[6.167915,-1.688290,-2.284044,0.001823,-8.747888],[6.904262,5.625228,-6.895998,5.623294,-8.498032],[3.981078,0.335652,-8.327223,1.148855,-6.150422],[-1.389343,7.008062,6.277594,3.292661,3.753086],[-0.514636,7.260948,5.303237,4.242883,2.941637],[-0.457079,-5.151688,-8.260417,6.352157,-1.330127],[0.920352,-7.544111,2.165151,-3.617610,-1.262053],[2.315060,8.077258,2.556345,-8.572672,5.713358]],[[-2.413755,-9.642230,4.629199,1.303511,-5.285773],[-7.115336,-0.568514,-6.239133,-9.433629,-5.426898],[0.904691,-8.958453,-0.457414,6.376211,-0.218959],[-9.756707,-0.148327,0.946991,-5.813979,6.673506],[-9.557353,-9.383674,-8.906892,6.203573,-3.954999],[8.615789,9.430804,-1.972400,7.753700,-9.956482],[-7.160883,-7.510884,3.034430,-0.013822,-3.926230],[5.165541,2.498650,7.377211,-5.503884,-4.921666],[7.045826,-6.921075,6.947700,-9.267318,9.733007],[-5.613323,-5.954243,-9.471714,-1.913512,4.374152],[-7.293703,-5.140220,-7.446947,8.797801,-1.353647],[8.393977,-9.893080,-2.002953,-8.795511,-2.530962],[1.239979,3.727650,-5.815922,7.557824,-5.935379],[7.972886,0.590688,-1.007055,-7.952478,6.559656],[-0.657411,-0.282478,-0.303297,-7.900901,6.296434],[-7.810033,-6.359642,-3.307775,-0.667313,0.769759]],[[-6.445057,8.023339,-5.540892,-9.514916,-1.671840],[0.837934,-7.022817,6.939310,-6.614344,-2.976055],[-9.300794,-6.499503,-7.714560,6.505480,8.102802],[-3.165326,-6.783021,3.863954,7.273727,9.928873],[6.733602,-0.384855,-3.390773,4.781177,-9.139201],[-5.249747,-1.128910,7.708514,-0.252180,5.786348],[9.906555,0.660110,-2.670776,6.201362,-2.121103],[6.469953,3.155077,-2.499790,3.351281,8.790203],[1.124000,-9.064429,-1.406526,-9.708132,6.165557],[-9.488176,8.861682,-8.159511,2.941467,-8.757582],[-8.520622,0.838558,0.513676,9.119811,5.906590],[-9.509613,-8.102547,1.448430,-5.518776,7.269756],[4.360198,3.494500,-4.082962,-5.185878,9.756623],[7.643028,-0.997466,2.828554,-5.132229,-6.225850],[3.332484,-1.078085,-9.446028,0.783114,-7.831622],[-8.173464,-0.835006,-3.757099,5.077306,-4.113409]],[[0.393800,-6.062561,6.355275,-4.295289,-7.931599],[8.349979,4.376990,1.046045,3.722036,2.210380],[-7.734691,-0.501011,6.988565,7.972361,8.241286],[8.207802,2.481877,3.982617,3.395855,5.465096],[-8.396908,-6.835888,-6.164248,2.456596,-9.980978],[7.029967,-0.223058,0.699524,9.312926,-4.993250],[9.520150,7.991351,4.871869,1.813966,-9.877342],[-9.546603,1.562125,7.933999,9.465430,-5.600087],[5.030713,-4.367955,0.869046,9.719243,-3.683229],[2.252427,2.347436,-2.232751,2.004758,6.605126],[-8.161710,2.752250,-7.687837,-8.969947,8.863799],[9.985954,-6.104603,0.513585,-5.836077,-5.296903],[-1.007433,-4.628986,0.883028,4.389991,-9.448817],[-3.969164,-1.678171,-1.539617,-5.207350,-1.438009],[5.157004,-7.596188,6.597038,3.361526,-9.471719],[-2.898966,-1.862377,-1.428299,-8.259778,-4.682217]],[[3.834046,9.191422,-7.376851,-8.408015,-7.578152],[6.872284,4.982914,-3.818530,0.052052,-3.184081],[8.812565,-3.870400,5.807484,5.568332,-2.814926],[-7.263623,2.897023,-8.695111,4.881272,-3.677602],[6.591197,-9.348756,-1.931497,-6.354903,-7.374234],[3.251611,1.891373,8.927739,5.473874,-6.257584],[9.911092,1.317074,4.344862,-5.596762,-2.538563],[-5.749180,-7.803165,-2.121243,6.864564,-1.064139],[9.112334,-9.291013,-0.966989,9.862822,-7.513327],[0.046108,-8.604225,-6.310863,-2.197065,4.262050],[-1.140274,6.474935,-3.839179,9.084213,-7.382891],[2.239746,3.088322,-9.237472,-3.750845,8.225623],[-7.687847,-1.780590,6.442573,-7.345500,3.231021],[8.443202,3.363466,6.483814,-8.318407,-6.634606],[-0.333565,5.566000,9.148302,9.726470,9.568888],[-3.089082,-8.104412,1.372318,-4.730140,7.992668]],[[8.822453,3.592820,5.645014,-1.496069,7.637581],[-4.608029,-7.268512,2.194791,-3.658021,8.476603],[-4.732407,3.773336,-1.522867,-1.237438,-7.378186],[1.116214,-2.335635,-3.147758,8.963669,-8.319741],[9.799069,-8.229767,-8.549112,5.767778,5.815587],[-6.138179,9.842407,-0.930422,-9.547555,-0.857386],[-9.609518,-2.442387,-2.784814,4.246302,5.419627],[-4.074353,-4.515144,2.719397,-8.070428,8.218862],[9.671174,5.118901,4.634943,9.211235,0.626658],[-7.293137,2.765903,-1.317294,-1.866898,4.489866],[8.832249,-9.293700,-0.134924,-1.589625,5.273084],[-8.452647,-3.292718,2.000162,4.411580,4.074199],[-5.158201,6.485520,8.781121,1.409873,1.169128],[2.630763,-3.135932,-4.313446,1.552258,8.577516],[4.301349,-9.848002,-8.226372,3.789537,-7.952659],[-4.466228,0.161178,-8.197787,4.133798,-9.781646]],[[-0.032046,-3.783156,6.968221,9.752795,5.372590],[5.940169,3.897314,-2.891625,7.724131,9.892384],[9.038383,-5.693454,7.637474,6.595117,-5.500287],[3.656692,7.366537,3.579965,3.862141,-5.041739],[-9.590299,5.905390,0.606516,6.404116,5.545978],[-0.214436,-7.744883,8.918993,7.220529,-1.214449],[-3.286123,-7.085746,6.610253,6.161903,-9.959506],[-1.583100,3.021491,-2.451530,7.881795,-7.810951],[0.825614,9.371040,0.689988,2.404206,3.544377],[1.902399,-6.647551,-0.004701,2.405610,-2.155454],[0.694696,-8.971931,-1.366122,3.516081,-3.226669],[-6.647373,-3.944691,1.497363,8.680864,-1.361915],[1.341772,-5.720515,3.752156,1.780194,-4.117294],[-0.041782,-6.962813,3.235327,-6.528938,5.186955],[-4.546927,-6.220795,5.552721,-6.574270,-6.022017],[-7.355837,-1.674919,1.421327,7.492008,4.291037]],[[-2.253570,6.043712,-3.692937,5.185768,7.379932],[-1.287802,7.277343,-5.257338,-0.152009,0.126520],[4.931450,-0.711728,-2.814747,0.180691,0.748667],[-0.031687,-1.399472,-9.679408,-9.494566,8.366944],[-1.024147,9.894321,-1.169219,7.991703,-1.648565],[-7.106588,-9.797675,-9.505583,-1.552997,-8.009164],[-4.311397,-3.239915,-2.719749,6.387091,-0.060754],[-9.829808,-3.622816,-9.628366,5.204677,-5.587324],[-7.051556,1.021355,8.832769,-9.050964,7.440997],[6.157592,3.736051,-0.321354,8.192450,-6.990478],[9.415306,-4.108910,-7.486329,-2.686434,-0.070388],[2.839981,0.579135,2.527669,-4.599158,1.154536],[-4.040096,0.142023,-4.273812,5.863201,-3.439989],[8.450245,-5.437539,8.504177,2.815080,-5.824009],[-9.180217,-1.801849,-9.529316,6.503869,9.994727],[-7.084872,6.765655,3.806691,-1.764109,2.515741]],[[-0.392139,-3.387797,0.749394,6.756572,3.297952],[-2.396946,-4.313684,-1.675646,1.991195,7.548405],[-3.158550,-5.734947,-8.600788,0.500162,2.135581],[7.522072,7.957749,-9.783407,1.116967,6.822487],[-2.578949,6.098268,1.118519,4.468674,2.126898],[9.242517,2.141660,3.515963,-1.252348,-7.303392],[-6.598653,6.182265,5.360572,-3.363561,-1.769019],[9.835601,0.324464,0.044345,-8.208906,2.385164],[2.712162,4.845497,7.576478,-9.609459,3.684101],[2.245475,-2.012046,-8.940339,-3.690996,1.530840],[-5.646856,0.046577,2.289014,-8.347881,-0.894346],[4.252074,9.078899,-1.549832,2.482489,-4.967410],[5.076015,-8.765774,-6.166553,2.192795,5.619824],[7.613355,8.269534,-9.476896,7.942068,3.627338],[-1.842842,-8.921458,9.467998,-7.765877,0.429344],[-7.852428,-2.638458,3.497233,3.455473,-3.545255]],[[0.433134,-7.126650,-4.880725,6.334179,-7.591351],[4.288710,1.857035,-8.015821,-3.483941,3.329470],[1.428683,-9.885147,7.287129,-1.732189,-0.530066],[3.714153,8.525838,0.029410,-6.129750,9.778299],[8.098627,-6.569739,-4.826555,8.824973,0.184407],[9.726056,-4.006828,8.519796,6.732255,-8.539807],[-8.737191,5.065150,-1.264878,1.971981,0.329371],[2.792385,-6.850770,4.068926,-4.959647,8.199249],[2.314935,-0.750233,4.331175,8.444123,8.658906],[-0.300283,-0.092676,2.882837,-6.733329,1.615356],[-1.822614,-5.445644,-1.679484,2.924461,4.156182],[2.754039,9.136478,-0.138837,4.435352,3.355860],[-5.420764,-1.022886,3.523578,0.313710,-0.843421],[8.721313,3.031779,3.179380,2.851677,-4.765751],[-1.462494,-7.095568,6.660072,-9.957748,-4.714280],[1.500290,2.163387,4.159836,-6.328233,8.631623]],[[-8.089726,2.746168,-7.090161,4.622205,2.638739],[-6.158683,1.402861,-4.009119,-4.708312,0.407309],[-2.016541,6.460239,-1.810313,6.676350,9.008708],[-7.326992,3.148512,3.969895,-5.162443,-8.906499],[-6.290962,4.299159,5.947903,-9.064772,-0.595072],[-7.418151,-2.652993,9.782165,6.550476,1.304012],[2.580776,-4.044771,8.068710,-5.632693,-3.214240],[-8.048837,-3.178165,2.462769,7.056832,1.369493],[9.353591,-2.628191,1.036840,6.733389,-5.329743],[1.551495,-4.137174,3.070641,8.825127,7.050508],[-0.876116,-4.514685,-9.404538,-2.190154,5.182930],[3.617237,8.230903,-5.307502,4.304320,6.767056],[3.191603,5.506089,-5.361699,4.642274,9.374990],[-3.229179,-5.574837,-3.325634,-1.371186,-4.355621],[-6.302064,-9.728276,-1.258093,-1.628614,-2.323411],[0.429963,-9.410108,6.974831,2.745811,-8.201970]]], dtype = "float32")#candidate|1429|(11, 16, 5)|const|float32
bop_1430 = relay.divide(uop_1358.astype('float64'), relay.reshape(const_1429.astype('float64'), relay.shape_of(uop_1358))) # shape=(11, 16, 5)
uop_1442 = relay.log2(uop_1383.astype('float64')) # shape=(11, 16, 5)
func_711_call = mod.get_global_var('func_711')
func_714_call = mutated_mod.get_global_var('func_714')
const_1445 = relay.const([7.629039,4.610005,-4.680539,1.843051,7.989121,8.571524,-7.531191,-6.118234,-0.217546,-5.145442,-5.113898,-2.141496,-6.898932,2.371294,2.190524,-9.143170,-4.505922,-8.613986,4.893608,-3.492246,-7.616110,-3.976003,-1.302050,-2.650682,-3.437030,-8.786490,-2.780988,-3.717174,7.090331,-2.156725,9.025598,6.494693,-5.543307,-0.261778,5.904915,-7.648767,-8.882529,-8.196669,-4.250712,3.897055,-6.847401,0.193773,-1.457746,7.975984,-0.314501,2.332772,-9.979681,5.439697,-3.651769,1.523941,-4.567829,1.099215,-5.409133,7.325876,-2.446287,-3.035841,7.021934,3.794577,0.338639,9.727755,-9.227887,9.349062,7.796259,-2.900662,2.470242,1.339515,6.597037,-3.623115,3.982612,-3.089811,6.860948,-3.280457,7.200260,-4.584604,-7.260685,-9.497869,-5.536389,-3.808641,-1.304613,2.150818,-1.084879,1.377911,-0.923568,1.554123,5.348778,4.378643,-9.018206,7.718740,-2.861946,9.316197,1.413340,0.924693,8.355883,7.795670,-4.471150,8.505066,-9.520950,4.204885,4.159079,-7.389118,-7.008237,4.157134,3.343072,-6.360316,-5.887618,-2.065928,7.684026,-6.145855,9.155011,-1.810041,-6.967955,-5.627801,-9.076321,6.852920,0.970370,5.936001,-6.703248,-1.872557,3.105604,0.637887,-1.146791,-5.214318,2.447036,7.490963,-4.533579,3.416716,3.071693,6.804471,6.278772,5.558928,-0.204226,-9.164146,4.928010,-7.815404,-4.016445,7.705003,-4.299060,-8.201940,-3.183000,-6.064566,-5.078779,4.795610,-2.908285,6.980175,-3.441515,-9.297538,1.112862,7.377710,4.068026,-3.775761,2.877618,0.355167,0.953017,2.792480,5.489786,-7.225942,9.279790,2.290382,4.730172,9.067131,-4.788248,-5.129607,6.745522,-2.070963,-8.226931,-8.884397,-7.110011,5.656923,7.954313,5.521933,-9.339135,-0.641797,-3.733187,0.262399,3.956302,1.574406,-6.322774,9.388890,6.956573,4.171679,-1.994156,7.679831,2.027052,-7.243967,4.187969,1.739117,-4.356217,-7.929496,5.040077,-4.047993,-1.007906,-1.489811,5.690195,-4.791051,-8.751090,-2.520522,3.300251,5.756783,-5.443751,-3.021896,-0.226729,-3.152203,7.271530,6.331652,-0.359562,8.376511,6.318103,-7.046130,-4.201580,1.687970,-8.522471,8.632442,6.611721,-3.020904,1.228420,7.302177,-7.587141,-5.336231,-4.104163,-2.604897,4.364153,-2.036592,-4.639836,0.248130,8.110346,0.537580,9.465323,-8.830121,4.176549,-8.119480,4.613140,-9.585634,7.584145,2.037404,-0.198640,4.439909,-4.895994,-1.113445,-3.658856,1.206396,-1.796342,8.033244,5.215405,-3.169246,-3.987268,3.682097,5.143159,4.769842,-5.574581,-8.061829,-7.509396,-9.274779,1.914244,0.072310,2.919081,-4.408464,3.778574,6.417180,6.255146,-2.633133,-2.569038,4.968534,9.417714,6.356882,0.214801,2.473894,5.588109,-0.375310,-1.289074,-0.889786,-1.471979,-1.172076,-9.785849,6.564572,1.906717,1.599725,5.773879,3.309643,8.656124,1.082395,9.927370,-6.680624,-2.128474,6.078379,1.869437,-3.015287,-7.070000,1.125583,-7.984805,-0.335104,-5.138658,-3.283732,-7.018060,7.285676,-5.137449,1.556763,3.111322,-5.491651,-5.350522,-0.136115,6.033395,-9.745791,1.819508,-1.157635,-8.800872,-3.062782,-4.987517,-1.576597,-9.519676,-5.316718,-9.203251,-4.363404,8.441051,-5.395756,9.813037,5.997335,7.074988,-6.376127,-2.756182,8.758336,-7.100798,0.826103,-1.047975,5.003017,7.488330,9.753564,7.563089,9.128545,-3.881620,6.239018,7.815312,-7.446437,-8.717430,9.606488,1.359801,0.653286,-4.860873,-3.700408,-4.667527,-7.355361,1.913571,-6.905133,0.293402,8.118478,7.846428,9.112207,-2.165109,6.368369,8.114159,9.660737,7.520952,-2.230207,7.133711,-3.353074,-8.223049,-6.095192,-3.202723,4.360963,-1.253134,6.808011,4.978041,-2.567102,-1.137983,-8.990759,4.436647,-6.305305,-1.138765,-2.130744,8.236355,3.239673,5.606814,0.508076,-7.914343,-3.409379,-8.811065,-1.356530,-3.827110,3.285280,1.265003,-1.177624,6.352426,5.050477,7.616548,5.249239,8.897894,9.798019,-7.286324,-6.645940,7.220705,-0.138313,4.661366,7.665983,8.998107,-1.632252,-3.351114,2.478032,-4.847566,9.281885,5.901177,-2.043433,0.850237,5.417306,2.766731,3.655255,-1.243968,-3.464044,-3.371128,-2.908823,-8.340527,-9.802252,9.533794,-2.297664,8.055321,-7.403579,-8.276881,3.561034,-1.646386,-7.333077,-8.781029,-0.324022,7.078433,-9.958880,-3.349384,0.897173,-0.960934,5.712514,-0.787392,8.517120,7.924890,-3.629468,-5.963731,1.261756,-7.857028,-9.505990,3.577831,-8.607060,0.578405,9.885193,2.256295,-2.778073,-9.384041,0.645151,1.850081,-1.487495,-6.126960,4.689395,-7.669547,2.571337,-0.112019,-2.062204,-5.860015,-0.974847,9.448658,1.447664,-6.160298,-9.712205,1.668557,5.089907,-1.079721,7.544098,-8.596719,-6.110450,-1.685678,-2.721160,8.825852,-8.471660,1.860728,-3.965337,-5.692937,0.610678,1.532097,-1.692220,3.235849,-7.731788,6.935849,9.290010,-9.561745,6.746756,3.032196,2.415966,-6.341195,0.819679,-2.145121,-6.763510,4.473494,1.739770,-6.641793,-8.003863,-0.680201,3.823362,-2.161067,7.518802,-5.957209,7.220742,-2.994806,5.334162,1.291179,-8.528733,-3.114135,-8.963009,-0.401834,-2.213371,5.354877,2.527268,9.495090,-4.890715,5.566837,-1.734506,-7.028525,8.102276,-5.638380,7.204117,8.692119,8.375741,-6.339755,-0.437089,-8.417678,3.887999,1.736958,0.097003,-3.972120,-2.336740,4.195008,4.914471,7.427180,5.067228,9.080822,8.891619], dtype = "float64")#candidate|1445|(528,)|const|float64
call_1444 = relay.TupleGetItem(func_711_call(relay.reshape(const_1445.astype('float64'), [11, 6, 8])), 1)
call_1446 = relay.TupleGetItem(func_714_call(relay.reshape(const_1445.astype('float64'), [11, 6, 8])), 1)
output = relay.Tuple([uop_1386,bop_1414,bop_1430,uop_1442,call_1444,const_1445,])
output2 = relay.Tuple([uop_1386,bop_1414,bop_1430,uop_1442,call_1446,const_1445,])
func_1447 = relay.Function([var_1357,var_1402,], output)
mod['func_1447'] = func_1447
mod = relay.transform.InferType()(mod)
var_1448 = relay.var("var_1448", dtype = "float32", shape = (11, 16, 5))#candidate|1448|(11, 16, 5)|var|float32
var_1449 = relay.var("var_1449", dtype = "int16", shape = (11, 16, 5))#candidate|1449|(11, 16, 5)|var|int16
output = func_1447(var_1448,var_1449,)
func_1450 = relay.Function([var_1448,var_1449,], output)
mutated_mod['func_1450'] = func_1450
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1478 = relay.const([[-3.486609,0.465358,-9.650989,6.171592,7.354369,6.518107,-7.634883,0.333078,-7.845337,2.033319,-7.377962,-5.920008,3.122449,0.053508,4.674962,4.536926],[6.513547,-6.252458,-2.307785,-7.205374,-1.092424,0.274847,-2.660848,9.250162,4.411215,5.040355,1.768685,-9.910075,8.077794,8.878989,-3.351337,5.550375],[1.493233,3.173987,6.626835,5.882909,9.679262,-3.576498,4.190497,-6.611648,-3.576363,-4.113110,-0.541424,-0.194220,-9.454395,-4.604656,2.359945,-2.039979],[-0.646999,-2.404426,4.844157,4.861073,-7.473439,9.637681,4.847556,-2.372110,2.162713,-5.299679,1.097633,-8.159868,-6.279945,-9.637135,-4.760047,-3.302828],[5.751975,-6.880909,7.336605,0.623951,9.696742,4.999400,7.019083,-7.802636,7.669692,-2.644448,-6.078571,-7.494280,3.091696,-6.003889,-6.425565,-4.824384],[8.182671,-5.710497,2.769881,-3.564993,-6.211523,3.684249,9.350478,9.449682,-5.046926,-4.499790,-1.560193,6.860482,7.957027,1.824541,4.066583,4.766109],[-9.367347,0.976256,-0.332130,-5.950521,1.269407,-0.699830,6.452470,6.202969,6.131025,-5.841157,2.295131,8.578998,6.112132,-8.488706,4.545564,5.575730],[4.978005,4.637723,-5.375758,6.335915,6.010182,6.235519,4.666915,8.921102,-5.341201,-3.002198,4.869714,-9.625888,-6.931453,4.944992,8.891980,0.592966],[9.509657,-7.727913,-9.490601,-3.476919,3.949996,-1.185298,-8.225649,5.419928,-6.370055,-6.867466,2.287555,-6.278196,1.963853,0.067421,6.652808,-9.456927],[2.133164,-7.504363,-6.130184,-9.723996,-9.112224,-4.328837,-6.793481,2.604288,6.344552,-9.925279,0.625177,-0.566439,7.447447,4.486748,-8.088689,8.823457],[-8.994014,8.271583,-9.543833,-0.141875,-4.100214,-9.265393,-2.311579,8.120848,1.353055,-7.065620,4.824715,-1.545927,3.882594,3.747766,1.700327,6.274452]], dtype = "float64")#candidate|1478|(11, 16)|const|float64
uop_1479 = relay.log(const_1478.astype('float64')) # shape=(11, 16)
uop_1489 = relay.cos(uop_1479.astype('float64')) # shape=(11, 16)
uop_1494 = relay.sin(const_1478.astype('float32')) # shape=(11, 16)
output = relay.Tuple([uop_1489,uop_1494,])
output2 = relay.Tuple([uop_1489,uop_1494,])
func_1498 = relay.Function([], output)
mod['func_1498'] = func_1498
mod = relay.transform.InferType()(mod)
output = func_1498()
func_1499 = relay.Function([], output)
mutated_mod['func_1499'] = func_1499
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1510 = relay.var("var_1510", dtype = "float64", shape = (12, 8, 4))#candidate|1510|(12, 8, 4)|var|float64
uop_1511 = relay.acos(var_1510.astype('float64')) # shape=(12, 8, 4)
uop_1513 = relay.exp(uop_1511.astype('float64')) # shape=(12, 8, 4)
const_1522 = relay.const([[[3.104632,3.455694,0.352532,5.733856],[7.202538,-4.958333,6.313239,8.957396],[8.226906,-8.886063,-5.216981,1.525243],[-3.403482,-6.285022,1.101036,9.363993],[-7.929998,-2.979042,3.171795,-2.520027],[3.305410,-6.565318,-3.361997,-3.575298],[7.894478,6.058726,5.920719,7.034933],[1.004811,5.896084,6.618514,9.494785]],[[-4.074346,6.285006,0.714050,-6.252821],[3.839509,-8.162485,-2.288599,0.193907],[4.645055,-2.292354,0.487336,-2.834485],[4.687853,1.452586,-1.526988,-1.987908],[-9.027838,-1.999862,0.293693,6.245634],[-3.201841,-8.778697,-9.329958,-4.809328],[-5.308325,-4.303965,-8.680059,-2.581697],[-1.821786,2.983667,-9.024628,0.855748]],[[5.809071,3.003971,3.864664,0.207063],[-2.753193,-5.848733,-5.171565,-9.599593],[5.950954,-6.438849,0.318062,1.507843],[6.820881,-8.969006,-8.841467,-0.400266],[-4.890821,-9.142312,-7.622689,8.240727],[1.649051,7.758755,-9.102627,-0.192474],[-9.077434,9.276727,0.675526,-6.907404],[9.124852,3.190535,-7.316333,-1.358407]],[[5.133703,-6.942288,-4.202359,-5.625817],[-6.745418,9.635662,9.374686,-7.890403],[9.144835,2.865353,9.466253,9.647902],[-7.969488,-5.583262,-7.878725,4.047242],[-2.309243,-6.244910,0.211661,-1.116618],[-2.889525,-0.179020,-0.830022,-8.387646],[4.269163,-4.305529,5.165798,8.532507],[-0.065466,-4.035011,-7.127078,-7.170745]],[[-9.575339,-2.757470,8.338751,2.792180],[-4.464950,8.196494,-8.011162,-7.322420],[4.493279,-4.935906,-1.490051,6.787543],[-2.537885,-5.736034,6.189512,5.714647],[1.078425,-1.348456,-5.574736,-7.796048],[2.725212,8.001047,5.380723,9.044642],[9.248389,9.809104,-0.716095,-6.163646],[3.352940,6.386541,-9.145219,-0.995354]],[[-7.912961,-0.697900,-8.481130,-2.425851],[1.931741,4.486717,1.909802,8.516271],[1.527280,0.098844,9.091099,-4.622582],[-7.670944,-8.938311,-9.185992,-9.305399],[7.899550,6.197557,4.132335,6.659989],[-8.624548,-5.385158,-6.134308,-2.929821],[-3.980175,0.568571,8.448242,-5.109911],[3.656779,-8.500540,9.696528,4.838839]],[[-0.406368,-3.255994,-6.863571,-3.901966],[0.945623,-5.954074,-7.212885,3.178477],[-5.103901,7.663942,-3.925178,7.362203],[-7.263966,0.949415,-3.339310,-3.964360],[8.120833,1.396343,-3.845667,-0.576179],[-8.641576,0.706477,8.376458,6.688119],[6.677753,-3.508468,5.394947,-2.118072],[1.035836,6.100119,-9.348878,-6.806313]],[[3.238340,5.248008,4.085436,1.229055],[-5.558172,9.652808,5.886797,-2.156298],[0.144617,-8.984060,-3.082208,-0.959877],[-9.667033,-3.449012,7.163798,-9.720256],[-0.526567,-9.062311,-9.660236,1.471774],[0.915170,-1.878334,2.417120,9.753400],[2.077628,1.421482,-8.275198,-5.799419],[-6.938075,1.448036,6.767934,-4.934014]],[[2.005569,-1.539451,-4.929448,1.994477],[-8.969044,-2.969735,-4.795149,-8.260285],[4.357724,2.909635,6.730593,-9.498126],[-4.731463,3.459329,2.438079,1.107019],[-6.955021,-1.376645,5.481530,-1.740509],[-9.351744,-9.852374,1.833610,-3.508567],[-8.985109,-6.650789,0.902257,0.505954],[8.384248,-0.462880,-7.222091,0.986755]],[[3.301937,0.194924,6.169196,-9.349801],[-0.913856,-2.319394,8.651893,-1.049238],[8.091965,9.188694,5.083286,-8.454083],[9.697219,-2.038218,0.239179,-3.677874],[4.939650,4.379702,-4.010085,-4.020809],[-5.832650,-3.957369,-4.524976,-6.416864],[0.248309,-2.514163,-5.085222,1.958805],[8.621210,-2.258827,-4.287625,7.026590]],[[-4.185975,-2.195150,-2.961862,-2.347219],[-3.571460,-5.539596,6.843739,-7.305978],[-8.357581,-0.437348,7.572606,-5.708014],[9.567960,5.827434,-0.703794,0.794528],[-3.348112,4.833941,5.501040,0.291574],[-1.075357,-7.348751,-6.036314,-8.120539],[1.011015,-3.304786,6.266492,-2.955458],[0.475801,-7.775855,-0.619402,-7.819254]],[[9.071097,-7.619098,3.894550,-5.830502],[6.158055,-8.448746,9.866757,4.679698],[2.719874,-2.641760,-8.630722,3.032699],[-1.740594,3.601029,0.221018,2.147504],[7.585713,5.921472,-8.387608,-8.755990],[-0.305873,7.942857,-2.882321,7.937549],[-5.983103,-9.363439,-4.055281,-6.213344],[3.776449,6.938620,-3.756848,6.629733]]], dtype = "float64")#candidate|1522|(12, 8, 4)|const|float64
bop_1523 = relay.bitwise_or(uop_1513.astype('uint16'), relay.reshape(const_1522.astype('uint16'), relay.shape_of(uop_1513))) # shape=(12, 8, 4)
var_1530 = relay.var("var_1530", dtype = "float64", shape = (12, 8, 4))#candidate|1530|(12, 8, 4)|var|float64
bop_1531 = relay.multiply(const_1522.astype('float32'), relay.reshape(var_1530.astype('float32'), relay.shape_of(const_1522))) # shape=(12, 8, 4)
output = relay.Tuple([bop_1523,bop_1531,])
output2 = relay.Tuple([bop_1523,bop_1531,])
func_1543 = relay.Function([var_1510,var_1530,], output)
mod['func_1543'] = func_1543
mod = relay.transform.InferType()(mod)
mutated_mod['func_1543'] = func_1543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1543_call = mutated_mod.get_global_var('func_1543')
var_1545 = relay.var("var_1545", dtype = "float64", shape = (12, 8, 4))#candidate|1545|(12, 8, 4)|var|float64
var_1546 = relay.var("var_1546", dtype = "float64", shape = (12, 8, 4))#candidate|1546|(12, 8, 4)|var|float64
call_1544 = func_1543_call(var_1545,var_1546,)
output = call_1544
func_1547 = relay.Function([var_1545,var_1546,], output)
mutated_mod['func_1547'] = func_1547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1498_call = mod.get_global_var('func_1498')
func_1499_call = mutated_mod.get_global_var('func_1499')
call_1549 = relay.TupleGetItem(func_1498_call(), 0)
call_1550 = relay.TupleGetItem(func_1499_call(), 0)
output = call_1549
output2 = call_1550
func_1551 = relay.Function([], output)
mod['func_1551'] = func_1551
mod = relay.transform.InferType()(mod)
output = func_1551()
func_1552 = relay.Function([], output)
mutated_mod['func_1552'] = func_1552
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1626 = relay.var("var_1626", dtype = "float64", shape = (3, 13))#candidate|1626|(3, 13)|var|float64
uop_1627 = relay.sin(var_1626.astype('float64')) # shape=(3, 13)
func_881_call = mod.get_global_var('func_881')
func_889_call = mutated_mod.get_global_var('func_889')
var_1651 = relay.var("var_1651", dtype = "uint64", shape = (72,))#candidate|1651|(72,)|var|uint64
var_1652 = relay.var("var_1652", dtype = "float64", shape = (264, 2))#candidate|1652|(264, 2)|var|float64
const_1653 = relay.const([[8.271063],[-6.412638],[6.418948],[-1.467803],[5.576676],[-2.352276],[5.880938],[-9.053755],[9.263219],[9.495616],[-1.988686],[-5.067801],[-9.052875],[8.574781],[1.432817],[5.720547],[2.808562],[2.345296],[9.269282],[4.653747],[3.924822],[4.454699],[-7.547152],[8.746707],[5.403519],[-4.788575],[-0.568024],[5.167102],[-5.760664],[-1.582967],[-1.689296],[-8.714048],[7.282408],[2.593241],[5.116641],[-1.218172],[-1.318034],[4.489548],[3.831800],[9.742099],[0.056453],[-2.072709],[-9.915979],[-7.617114],[3.267333],[0.929987],[6.425186],[0.149970],[6.844931],[9.035203],[-9.345242],[0.900457],[1.777172],[2.615913],[8.725698],[-3.758945],[-5.089269],[-4.679618],[-0.397008],[7.725168],[9.663468],[-7.541946],[-4.848122],[-7.341518],[-1.485246],[-3.597788],[6.641376],[3.920110],[-9.566938],[4.693363],[9.562482],[5.911350],[-4.614028],[1.174449],[-8.929794],[-6.726074],[3.913339],[-6.499119],[8.513446],[9.879765],[-8.475321],[-2.359125],[1.530281],[5.791650],[-3.125086],[8.051648],[-4.738042],[-4.953792],[-9.532255],[9.340407],[-1.814079],[0.387811],[-1.484694],[-3.492427],[-3.607527],[6.371306],[6.682738],[-9.137036],[-3.170630],[9.371140],[-3.928754],[-1.298479],[4.819839],[1.271623],[-6.899163],[-1.195491],[9.181533],[-0.451403],[-8.076640],[2.897571],[-0.965682],[1.337370],[-2.831774],[-3.679178],[3.304388],[8.899870],[-4.630418],[-8.245185],[-2.865913],[-4.731269],[0.949011],[-0.816322],[-8.794987],[-9.737645],[8.512032],[6.638319],[3.250203],[3.743471],[-7.581907],[-9.793310],[0.408390],[8.165225],[2.070833],[2.106093],[7.918862],[4.627544],[6.094036],[1.806377],[-5.360500],[-4.954323],[3.279126],[-6.219002],[-0.036576],[-7.768662],[4.916809],[3.858429],[9.622286],[2.696331],[-2.816730],[-5.391241],[-6.388718],[-7.773431],[6.535376],[8.922589],[-1.539347],[1.093529],[7.153987],[-8.105295],[-4.998181],[-6.031668],[0.084863],[-4.486501],[-3.380503],[2.491257],[5.098816],[-0.230411],[1.113164],[2.238267],[9.245551],[7.356857],[-2.292995],[2.213547],[-9.842118],[4.065438],[1.751642],[-5.737298],[5.618163],[8.445473],[-4.919250],[7.896267],[-0.089093],[6.894576],[-4.999380],[0.834954],[2.216466],[7.023234],[0.853042],[2.614073],[-2.619685],[-3.563106],[-2.993649],[-5.598222],[-0.541955],[2.393345],[3.583583],[-9.169981],[2.720530],[4.137524],[-1.254699],[9.874865],[1.269801],[7.221751],[3.516712],[-0.983850],[0.185863],[6.874694],[-3.388239],[-8.375388],[9.471698],[2.579766],[-3.106525],[7.051311],[-6.989816],[4.928174],[8.102504],[-0.467757],[-8.134847],[3.984742],[6.966595],[9.440394],[6.997385],[-2.080526],[9.124986],[-2.789190],[7.604339],[2.382166],[8.765600],[4.698334],[1.551029],[-8.639169],[9.944715],[-5.906878],[-3.624950],[1.155935],[8.876079],[-7.364918],[-5.604420],[-4.589614],[2.078373],[-8.961284],[9.488739],[-9.777614],[-8.249331],[-8.596410],[3.516187],[-4.832708],[1.381445],[-9.297046],[8.724546],[8.637054],[-5.560082],[7.295747],[3.747933],[-1.383201],[-3.456063],[9.087307],[-0.331964],[-8.521828],[3.144708],[5.074285],[2.425459],[1.728087],[-1.663682],[-5.858048],[2.606592],[-2.245984],[6.756992],[-5.178641],[-0.493842],[-3.035012],[-3.545668],[-2.972489],[1.995157],[1.221712],[3.141973],[4.840594],[1.466858],[9.743328],[-5.898733],[8.916039],[-6.795432],[-1.562419],[8.306309],[-9.302170],[2.892978],[-4.125680],[-8.984879],[1.625577],[3.065821],[-0.671306],[2.286358],[9.766553],[-5.717494],[-8.036895],[-7.681140],[-9.782893],[7.964976],[-5.297794],[-6.871106],[-6.733342],[1.502219],[6.105215],[5.422787],[-8.804509],[1.287611],[7.635121],[-2.295769],[3.344088],[-9.130655],[-6.534973],[8.463167],[6.771785],[4.037112],[6.127421],[-0.135998],[4.803098],[-5.463815],[7.506177],[4.589543],[-7.724263],[-2.620276],[1.997607],[-6.234648],[1.457042],[-7.814863],[6.532404],[-8.472489],[6.038921],[5.490894],[5.452318],[-1.999034],[1.284631],[3.373013],[7.157555],[-8.803341],[-7.058310],[9.099879],[-4.906809],[-0.778587],[-3.354820],[2.624849],[3.387481],[-3.496961],[0.218374],[2.265599],[8.229346],[5.010802],[5.425141],[8.887531],[-9.187586],[-5.516529],[-0.988966],[-3.812995],[-2.988547],[-4.224931],[-5.262733],[-6.432614],[-7.796157],[-4.798658],[-8.292410],[-9.272569],[8.475187],[3.229208],[1.925089],[4.835007],[-8.158196],[-3.540736],[-6.605939],[3.963539],[3.839972],[5.037068],[4.560800],[3.716160],[9.908160],[4.926326],[-5.714895],[8.560258],[-0.544814],[-4.666524],[-5.584656],[3.877946],[4.015905],[2.471572],[-2.182921],[-6.787954],[9.599560],[1.568009],[-6.724008],[-9.620793],[-3.194147],[9.931371],[0.645627],[4.237268],[0.773823],[4.574240],[8.200331],[5.723664],[-4.765862],[-5.562399],[3.788485],[1.265504],[0.384791],[-7.304094],[9.650986],[5.065353],[-9.256453],[-8.294586],[1.674915],[0.254853],[7.212517],[-1.144483],[4.805965],[-3.531529],[5.961648],[9.275196],[9.058180],[2.256437],[7.354949],[-4.236134],[-1.267116],[0.680550],[8.877920],[-9.203232],[1.669032],[1.621575],[6.265085],[5.666523],[3.511783],[-6.033012],[6.806412],[-6.706686],[-8.908333],[5.080549],[8.161899],[3.043598],[7.401344],[-0.498184],[-0.637945],[2.323322],[1.069182],[9.315802],[7.148014],[3.522703],[-2.749283],[7.271363],[3.091652],[-6.766464],[3.186352],[-0.897694],[-5.164362],[-2.471116],[-1.740275],[-0.646231],[8.988159],[-0.916609],[-8.348740],[6.225505],[-7.423839],[1.209530],[1.597704],[-0.319212],[-0.516945],[-6.204507],[-9.013628],[-7.158722],[-7.197545],[-0.307549],[1.023450],[-4.462571],[2.579910],[1.714529],[-1.807036],[5.503770],[-3.596821],[5.056994],[4.630473],[-0.683757],[-3.707984],[8.559530],[6.893871],[3.742088],[-8.909083],[-1.107158],[-7.379931],[-8.246423],[6.792919],[-1.658377],[6.653814],[0.255092],[-5.864672],[9.181779],[-3.804177],[2.767058],[-5.152274],[-6.456430],[-1.778050],[-5.319687],[1.265439],[-0.492858],[5.791716],[0.651300],[4.047639],[-4.572078],[7.524597],[-6.313166],[-3.738989],[0.584935],[7.050812],[9.589934],[2.065044],[-9.705337],[-6.807298],[-6.370236],[6.102130],[5.903865],[-4.278851],[-3.597628],[-1.516865],[-1.938089],[-5.063215],[1.247246],[-4.216165],[8.480480],[8.490859],[8.471312],[-5.449478],[-9.101865],[-5.392663],[6.768242],[-5.011720],[-8.237251],[1.122211],[-7.585553],[9.661318],[-7.293032],[5.012023],[-1.948032],[-7.911007],[3.001790],[2.781372],[3.418573],[-7.832259],[-8.897678],[-2.778401],[0.095917],[-5.196712],[1.381024],[-1.751132],[-4.991877],[-8.915362],[3.631152],[-2.600813],[8.277338],[6.094903],[8.609595],[-7.225862],[1.400191],[-8.859631],[1.968303],[8.556504],[8.825043],[9.809087],[7.305554],[-4.555414],[4.492676],[-2.927686],[-3.366879],[1.917144],[-2.058010],[6.648270],[7.336890],[-0.745386],[-6.699459],[-9.319645],[1.046205],[-5.225656],[3.184745],[-8.162799],[4.807293],[-9.895920],[7.790176],[7.552565],[-3.347372],[-5.234528],[-2.856182],[-0.949603],[4.604292],[-9.655363],[9.661174],[1.980713],[-6.026406],[-1.796768],[6.472846],[-2.389383],[9.613453],[-5.856090],[-3.705093],[9.010684],[-1.318589],[7.010919],[3.948531],[-8.034491],[-5.844248],[-7.956109],[4.002862],[-9.878147],[-4.423966],[9.015222],[1.601527],[-9.436357],[3.647675],[-0.266596],[1.946702],[-0.235295],[7.107850],[-2.485785],[2.337129],[7.506782],[1.181842],[9.864685],[4.183698],[-4.257413],[-3.331489],[-3.335642],[2.819309],[0.884831],[5.926042],[-9.542733],[8.984972],[-3.153996],[-3.011866],[8.806232],[1.110923],[7.037539],[-3.682188],[1.521524],[4.274957],[4.623471],[9.289481],[0.654364],[2.786502],[6.844849],[-6.097288],[1.628613],[-3.829200],[-8.547101],[-6.219687],[-6.849941],[-1.927862],[-6.252418],[5.935705],[6.889920],[8.630873],[-3.616672],[-3.215203],[2.153975],[-8.086981],[-2.157085],[2.048550],[-9.394643],[5.307146],[-4.101988],[-4.502834],[7.769934],[6.999408],[-2.670043],[0.556152],[3.055400],[-0.810572],[1.342602],[5.525248],[-2.727911],[-8.984158],[1.236568],[-3.150821],[5.767352],[-4.298745],[0.056381],[8.401142],[-5.330366],[-6.889235],[9.975669],[-6.137925],[-0.495770],[-2.386684],[2.844264],[0.480317],[-5.088020],[-0.805180],[7.754687],[6.703769],[-7.084242],[-7.862550],[4.265992],[-3.265047],[-8.905183],[-9.953424],[-0.235628],[-5.923830],[6.818521],[-1.084592],[7.194046],[5.980465],[2.372524],[2.164813],[-4.647000],[-9.050368],[-8.760606],[7.618409],[-8.088680],[4.160051],[-1.601715],[-9.963025],[-4.928855],[-1.777404],[0.239171],[-4.915494],[-8.365186],[-2.056644],[0.594334],[-5.016245],[0.664704],[-6.021890],[5.401095],[4.213925],[1.111855],[2.604268],[-3.829982],[-8.932058],[-6.977419],[-3.940847],[-3.037950],[-9.513415],[-9.200173],[-8.200292],[-6.238376],[-6.402815],[3.630163],[-8.167613],[-2.537398],[-9.765921],[-8.179233],[3.773278],[7.768826],[-4.301013],[-6.294198],[-8.033992],[7.240285],[0.493558],[0.915390],[-3.612153],[-5.140468],[8.159778],[3.424559],[2.916816],[2.392988],[-3.800776],[7.608148],[-5.546262],[7.486790],[-3.445811],[-3.077957],[-6.216015],[-4.797191],[5.201006],[-9.414672],[6.680684],[-4.000004],[-9.997052],[-7.844910],[2.933501],[-6.309486],[-3.409537],[-1.173698],[-4.880076],[4.673810],[2.850409],[3.505368],[0.811908],[-5.915365],[-1.263917],[-7.160950],[1.373835],[-8.819484],[3.904464],[4.917662],[9.685421],[-7.219691],[1.181956],[-4.133535],[-4.948738],[3.844966],[9.446343],[-2.449998],[-2.090349],[-0.169282],[4.345468],[-2.652637],[7.255348],[-4.340696],[-1.250738],[-5.540298],[2.718338],[7.632289],[2.641615],[6.654242],[8.935316],[5.824075],[8.497044],[9.502839],[-1.094810],[-7.237718],[1.161033],[4.638178],[-7.281065],[9.463718],[5.142455],[-0.435173],[-7.875777],[-8.547043],[4.614726],[1.093894],[-3.970615],[-2.772960],[-0.573162],[4.342137],[5.259582],[-9.230628],[-4.248930],[7.254378],[-4.341510],[1.513884],[-1.419699],[-5.137343],[0.627916],[-0.370175],[-2.353466],[4.213986],[8.885348],[3.750815],[-6.832603],[-8.778592],[-8.904493],[-3.479597],[-1.006802],[6.927041],[-2.304639],[8.226581],[-5.905594],[1.243522],[-5.783825],[7.196442],[1.492941],[8.089232],[-1.086243],[5.773250],[8.980089],[-9.118905],[-7.418477],[-0.356654],[-0.570881],[8.676635],[0.974680],[-7.309855],[6.508281],[9.974102],[2.556792],[-0.627244],[-0.940711],[4.758591],[-7.529626],[3.097970],[4.196702],[-4.496321],[-5.671727],[-9.422800],[-6.648652],[5.766591],[-5.653521],[-0.269997],[1.378078],[8.561629],[-8.178767],[0.394993],[8.956234],[9.324917],[3.987235],[9.965768],[-9.956456],[6.501495],[1.732247],[5.161330],[0.817033],[2.567102],[-2.837692],[9.102121],[5.961086],[2.550220],[5.576597],[-5.596382],[1.853909],[-8.519643],[-7.183691],[7.989873],[6.864551],[5.142218],[2.444870],[3.423967],[8.628771],[-2.796604],[-5.225233],[2.909144],[5.294374],[3.978295],[-4.752886],[0.774978],[5.827527],[-0.589013],[-9.453103],[-5.246497],[-4.505196],[-9.966758],[-0.079566],[3.831439],[-9.107461],[-8.144001],[9.931144],[-0.652332],[-8.792020],[4.306671],[-1.715601],[-3.179982],[7.985003],[4.118451],[3.214688],[3.627844],[-0.895126],[4.532627],[0.010739],[-8.857782],[-7.681153],[-6.471433],[7.244909],[-3.558566],[-5.156127],[-0.927481],[9.238719],[-8.499804],[8.142678],[-5.334949],[6.019747],[1.846094],[9.634843],[0.725832],[5.703606],[-5.362028],[-7.513843],[9.884994],[3.404090],[5.455403],[-1.301955],[-6.816426],[-1.433827],[-1.279893],[8.265522],[-3.631942],[-3.413556],[-2.371315],[-0.877467],[3.216255],[8.659282],[-0.908595],[-6.950264],[0.862405],[4.474997],[-2.071697],[-0.978564],[2.918351],[2.689659],[7.826844],[-7.545070],[-1.866597],[2.104945],[-3.378900],[-2.768581],[9.039570],[9.223166],[3.722929],[8.530196],[-4.938441],[5.396788],[-1.841058],[8.258229],[-9.951964],[1.688680],[5.928513],[-8.633618],[9.484327],[-4.640208],[0.806580],[6.022717],[5.437812],[-3.688843],[-9.873690],[5.769652],[7.383622],[1.266151],[2.125364],[8.911962],[-3.337229],[5.077359],[8.424571],[9.931678],[0.771343],[-5.595652],[-2.559678],[7.795376],[5.778874],[-9.411866],[6.293824],[-3.688899],[-4.734206],[7.147433],[-4.000042],[1.841072],[9.313297],[6.872202],[-3.872655],[0.105914],[-4.917904],[8.101693],[2.781830],[-3.669265],[-2.855536],[1.345713],[6.661558],[-4.062281],[1.337918],[8.460241],[4.837650],[-7.193737],[6.300597],[8.372114],[-4.726250],[9.607821],[-3.089932],[7.635461],[4.879652],[-2.768255],[-8.007860],[0.429751],[2.161226],[2.835047],[2.940981],[8.691486],[-3.908460],[-5.320500],[7.324144],[0.592581],[-3.406412],[-8.368208],[6.078259],[6.873816],[-5.231388],[4.116518],[1.184146],[-1.820053],[-1.423830],[4.156709],[-4.948004],[-8.380928],[5.390802],[-8.697940],[-4.729205],[-6.068314],[-4.079491],[-4.671940],[4.117725],[-0.735262],[2.286636],[-2.065291],[-9.572987],[-2.630924],[8.046945],[7.986502],[-8.738404],[-0.303107],[-7.325803],[-3.721454],[-7.015451],[7.580978],[6.373762],[3.603110],[9.480291],[-9.217703],[5.123860],[4.094755],[8.816016],[-3.548727],[-9.525252],[-0.707218],[-7.169441],[-0.118788],[1.384750],[1.674560],[2.112898],[-8.991000],[-3.949229],[4.389034],[3.047002],[0.943265],[7.347168],[1.500156],[-2.613638],[6.317351],[8.119338],[3.452399],[-3.151809],[-5.333350],[-7.367418],[5.867290],[-2.940666],[-8.370823],[4.084168],[2.563031],[-8.093092],[9.111589],[4.394569],[-4.980887],[7.318057],[-5.798675],[-8.696516],[-6.389139],[1.272164],[-6.661955],[-4.124903],[-3.796610],[-4.529302],[-0.631565],[-8.051915],[-7.621184],[-4.180838],[-2.379046],[-0.266519],[5.783033],[-3.518383],[-1.414102],[3.391143],[3.288670],[9.002420],[-6.174052],[-9.346752],[1.746738],[3.415576],[-5.158789],[9.048296],[-9.796582],[3.053211],[3.907404],[-3.103094],[6.199862],[3.644152],[5.574146],[-2.318560],[0.172870],[-2.298470],[0.788227],[-0.444002],[4.100488],[-4.851828],[-2.513947],[7.387457],[3.465066],[3.156941],[-1.058587],[8.693044],[7.467219],[-1.662649],[8.689855],[7.237842],[-1.413254],[-1.072053],[-4.414317],[-5.218661],[2.796520],[-7.105891],[-1.247272],[-5.416622],[-2.940062],[0.195059],[9.224340],[-9.935027],[2.306086],[6.303541],[0.723659],[3.711115],[3.979499],[1.398185],[1.634228],[2.637785],[7.850969],[-1.147854],[6.171261],[9.921455],[-9.419892],[5.555706],[-7.590878],[-6.353031],[-1.130968],[-9.976228],[9.186306],[6.856890],[-4.198198],[-1.099554],[7.625814],[-0.174408],[8.674146],[-4.556764],[1.188483],[-8.565619],[-0.598541],[-2.902882],[7.682829],[-7.611254],[-9.804799],[0.015113],[0.124215],[-6.272149],[-0.414866],[6.523057],[0.054182],[-0.267787],[-3.260660],[2.739116],[-2.365233],[4.822252],[8.897720],[2.415730],[4.415621],[-3.415119],[5.093908],[0.929140],[4.918790],[-1.008593],[-5.646082],[8.853545],[9.415999],[7.482265],[-8.072740],[5.989630],[-8.780599],[-3.053160],[-0.810211],[8.868220],[6.784524],[-6.514947],[7.727878],[8.797246],[6.989802],[-5.815528],[3.246789],[1.430961],[1.221333],[-4.921637],[-8.250542],[8.709327],[4.449679],[-4.142490],[7.267795],[0.280411],[-6.378919],[6.194690],[3.207631],[-3.054877],[-0.911490],[-0.139319],[-1.507507],[-7.500184],[-5.781987],[2.820340],[4.046618],[-9.585369],[-0.053712],[-5.469926],[-1.666523],[1.075094],[0.640770],[-2.716707],[8.015604],[-5.140798],[-0.745087],[-2.715283],[-5.546009],[-2.186061],[8.249790],[8.113420],[-9.117254],[1.979008],[0.875886],[9.620138],[5.671138],[-5.084402],[8.263350],[9.531458],[5.516456],[9.296206],[7.025420],[-0.057507],[-7.077650],[-3.722278],[-9.109853],[-6.631810],[1.842173],[-7.297715],[-7.806121],[-4.754562],[-7.164701],[-8.618266],[-5.646260],[-2.928385],[9.400157],[4.561161],[5.553534],[3.126149],[-6.547355],[-1.981744],[8.558858],[-2.043082],[-3.250716],[1.071769],[-9.783133],[0.641330],[-2.716294],[-5.482300],[6.733645],[-1.543451],[-3.821009],[6.388003],[6.213454],[-8.666967],[6.432594],[6.167758],[8.637917],[6.404650],[-9.858659],[-4.775937],[8.433048],[3.119517],[-6.395570],[-0.031598],[-1.210675],[-3.386102],[-4.106710],[2.919248],[-5.020081],[3.355148],[-8.685151],[4.109198],[-7.543895],[5.876334],[3.730266],[7.773870],[5.448993],[3.053094],[6.369699],[-6.895592],[-5.584309],[-8.665790],[-7.358381],[8.788872],[0.684986],[-5.336466],[7.427009],[-3.858288],[4.720477],[-9.495164],[2.964946],[9.257637],[-6.935502],[-8.065121],[-0.901493],[0.112460],[-5.154379],[3.135197],[2.704993],[2.041218],[3.712764],[-9.363546],[1.092644],[2.761987],[8.424232],[-0.591755],[7.039180],[8.142063],[-4.995115],[9.143167],[-2.150459],[6.614435],[4.104456],[-6.939570],[1.536444],[1.336709],[1.492725],[1.523539],[-1.758290],[0.008663],[-9.999418],[0.135251],[1.219519],[5.493629],[-5.053150],[-5.492505],[-4.063236],[1.485766],[-4.765550],[-5.575912],[-9.600344],[8.823969],[-1.351067],[-7.811043],[3.855979],[-1.402306],[1.984926],[5.733166],[-9.274735],[-0.767903],[-6.577913],[-5.393811],[9.845423],[-5.276871],[0.118505],[2.620910],[-2.009228],[8.111855],[-4.433343],[-9.539864],[-4.118998],[4.902138],[-2.026708],[-8.419835],[-5.265607],[0.614191],[-9.205793],[5.098667],[-8.883027],[2.738955],[-3.373587],[7.066454],[8.323151],[8.257170],[-8.747001],[7.151554],[-4.189206],[3.108839],[-9.032764],[-1.618133],[-2.662078],[0.410037],[0.307401],[-4.084951],[-0.861863],[3.099149],[2.099822],[4.311905],[8.913337],[-9.080857],[-5.968842],[-5.911126],[-6.351672],[8.140717],[-3.686211],[0.793632],[-3.834851],[9.920592],[2.112344],[0.398989],[6.625976],[2.244105],[8.667573],[-9.115727],[3.813662],[-1.370521],[-0.941792],[7.507212],[-9.115892],[7.236152],[-5.918518],[-4.521964],[7.261201],[-5.162046],[4.527484],[-5.757343],[-1.135297],[4.987052],[2.780096],[-0.949058],[-6.575514],[-7.874133],[-9.270221],[-8.896777],[3.857617],[3.651195],[-8.034792],[-2.185575],[1.109398],[8.225756],[-8.901287],[4.616712],[8.059036],[-5.868330],[-9.668690],[3.233779],[9.108071],[-3.232654],[9.975182],[6.287685],[-6.615056],[-5.067368],[-8.297167],[4.743489],[7.480146],[-3.435320],[-1.809912],[-1.530451],[5.675493],[-4.405210],[-0.328105],[-0.934276],[-2.898150],[5.614245],[7.490388],[-4.487514],[8.974069],[6.033893],[8.108910],[6.840602],[7.931626],[-5.860752],[0.501325],[7.412238],[1.266956],[0.340856],[2.330912],[9.975072],[-3.580137],[-0.816202],[4.020031],[1.402190],[7.072017],[-0.839823],[4.936158],[-2.907658],[-9.196373],[5.208882],[1.736373],[-3.139768],[-4.170692],[-7.544026],[3.924108],[3.098217],[-0.458930],[-1.565525],[-2.819662],[-2.650784],[-6.745203],[-0.298804],[-5.187147],[-0.272838],[2.844829],[9.748881],[-7.568201],[8.944028],[7.586531],[-9.946842],[-4.755857],[-3.448752],[2.319218],[-9.683647],[-7.651463],[-9.662297],[-6.712848],[1.647701],[3.589530],[6.819668],[1.191646],[2.072774],[-0.118931],[-1.043772],[0.625686],[-3.372265],[1.950400],[-0.271168],[4.015131],[-2.895309],[-1.975766],[-8.603163],[-3.246800],[9.863231],[6.426155],[-0.321582],[6.457670],[-2.256629],[6.563495],[2.686061],[-6.195428],[-1.269703],[-8.711678],[-7.619082],[4.442322],[-1.812247],[7.630894],[-8.130710],[-7.014958],[2.008669],[-7.034499],[-4.661938],[-0.089287],[9.092890],[9.691655],[-5.184999],[1.001509],[2.801909],[4.850976],[3.699059],[3.878280],[-1.191804],[2.195457],[-9.004848],[6.634339],[7.646631],[2.947236],[1.021167],[2.487592],[3.282161],[-7.943073],[-9.449458],[-8.807008],[7.126406],[1.496051],[1.420986],[-9.942064],[-1.037360],[-1.397152],[1.384212],[-4.511176],[-9.589768],[-4.085204],[4.905930],[-4.238177],[7.191138],[-5.034259],[-3.528374],[9.457883],[6.231502],[5.896501],[4.788689],[-4.686001],[7.610816],[-0.492329],[-1.689329],[0.462316],[3.840738],[5.014241],[2.881009],[5.291729],[-5.119266],[-6.700397],[3.986116],[-0.137933],[0.782915],[8.130084],[-0.730614],[-8.648161],[-7.483264],[-6.255917],[4.224353],[7.482652],[-9.592703],[-4.159566],[7.611266],[-2.234566],[0.544126],[-1.509420],[-1.902364],[4.831963],[-8.779717],[9.874440],[9.862131],[-9.004014],[-6.617140]], dtype = "float32")#candidate|1653|(1690, 1)|const|float32
var_1654 = relay.var("var_1654", dtype = "int8", shape = (84,))#candidate|1654|(84,)|var|int8
var_1655 = relay.var("var_1655", dtype = "int8", shape = (1, 960))#candidate|1655|(1, 960)|var|int8
call_1650 = relay.TupleGetItem(func_881_call(relay.reshape(var_1651.astype('uint64'), [3, 3, 8]), relay.reshape(var_1651.astype('uint64'), [3, 3, 8]), relay.reshape(var_1652.astype('float64'), [1, 528]), relay.reshape(const_1653.astype('float32'), [1690,]), relay.reshape(var_1654.astype('int8'), [84,]), relay.reshape(var_1655.astype('int8'), [960,]), ), 3)
call_1656 = relay.TupleGetItem(func_889_call(relay.reshape(var_1651.astype('uint64'), [3, 3, 8]), relay.reshape(var_1651.astype('uint64'), [3, 3, 8]), relay.reshape(var_1652.astype('float64'), [1, 528]), relay.reshape(const_1653.astype('float32'), [1690,]), relay.reshape(var_1654.astype('int8'), [84,]), relay.reshape(var_1655.astype('int8'), [960,]), ), 3)
func_881_call = mod.get_global_var('func_881')
func_889_call = mutated_mod.get_global_var('func_889')
call_1658 = relay.TupleGetItem(func_881_call(relay.reshape(var_1651.astype('uint64'), [3, 3, 8]), relay.reshape(var_1651.astype('uint64'), [3, 3, 8]), relay.reshape(var_1652.astype('float64'), [1, 528]), relay.reshape(const_1653.astype('float32'), [1690,]), relay.reshape(var_1654.astype('int8'), [84,]), relay.reshape(var_1655.astype('int8'), [960,]), ), 0)
call_1659 = relay.TupleGetItem(func_889_call(relay.reshape(var_1651.astype('uint64'), [3, 3, 8]), relay.reshape(var_1651.astype('uint64'), [3, 3, 8]), relay.reshape(var_1652.astype('float64'), [1, 528]), relay.reshape(const_1653.astype('float32'), [1690,]), relay.reshape(var_1654.astype('int8'), [84,]), relay.reshape(var_1655.astype('int8'), [960,]), ), 0)
func_1447_call = mod.get_global_var('func_1447')
func_1450_call = mutated_mod.get_global_var('func_1450')
var_1663 = relay.var("var_1663", dtype = "float32", shape = (880,))#candidate|1663|(880,)|var|float32
call_1662 = relay.TupleGetItem(func_1447_call(relay.reshape(var_1663.astype('float32'), [11, 16, 5]), relay.reshape(var_1663.astype('int16'), [11, 16, 5]), ), 5)
call_1664 = relay.TupleGetItem(func_1450_call(relay.reshape(var_1663.astype('float32'), [11, 16, 5]), relay.reshape(var_1663.astype('int16'), [11, 16, 5]), ), 5)
func_1085_call = mod.get_global_var('func_1085')
func_1087_call = mutated_mod.get_global_var('func_1087')
call_1685 = relay.TupleGetItem(func_1085_call(relay.reshape(const_1653.astype('float32'), [1690,])), 3)
call_1686 = relay.TupleGetItem(func_1087_call(relay.reshape(const_1653.astype('float32'), [1690,])), 3)
uop_1689 = relay.asinh(const_1653.astype('float64')) # shape=(1690, 1)
output = relay.Tuple([uop_1627,call_1650,var_1651,var_1652,var_1654,var_1655,call_1658,call_1662,var_1663,call_1685,uop_1689,])
output2 = relay.Tuple([uop_1627,call_1656,var_1651,var_1652,var_1654,var_1655,call_1659,call_1664,var_1663,call_1686,uop_1689,])
func_1692 = relay.Function([var_1626,var_1651,var_1652,var_1654,var_1655,var_1663,], output)
mod['func_1692'] = func_1692
mod = relay.transform.InferType()(mod)
var_1693 = relay.var("var_1693", dtype = "float64", shape = (3, 13))#candidate|1693|(3, 13)|var|float64
var_1694 = relay.var("var_1694", dtype = "uint64", shape = (72,))#candidate|1694|(72,)|var|uint64
var_1695 = relay.var("var_1695", dtype = "float64", shape = (264, 2))#candidate|1695|(264, 2)|var|float64
var_1696 = relay.var("var_1696", dtype = "int8", shape = (84,))#candidate|1696|(84,)|var|int8
var_1697 = relay.var("var_1697", dtype = "int8", shape = (1, 960))#candidate|1697|(1, 960)|var|int8
var_1698 = relay.var("var_1698", dtype = "float32", shape = (880,))#candidate|1698|(880,)|var|float32
output = func_1692(var_1693,var_1694,var_1695,var_1696,var_1697,var_1698,)
func_1699 = relay.Function([var_1693,var_1694,var_1695,var_1696,var_1697,var_1698,], output)
mutated_mod['func_1699'] = func_1699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1551_call = mod.get_global_var('func_1551')
func_1552_call = mutated_mod.get_global_var('func_1552')
call_1773 = func_1551_call()
call_1774 = func_1551_call()
output = call_1773
output2 = call_1774
func_1777 = relay.Function([], output)
mod['func_1777'] = func_1777
mod = relay.transform.InferType()(mod)
mutated_mod['func_1777'] = func_1777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1777_call = mutated_mod.get_global_var('func_1777')
call_1778 = func_1777_call()
output = call_1778
func_1779 = relay.Function([], output)
mutated_mod['func_1779'] = func_1779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1551_call = mod.get_global_var('func_1551')
func_1552_call = mutated_mod.get_global_var('func_1552')
call_1793 = func_1551_call()
call_1794 = func_1551_call()
uop_1802 = relay.tan(call_1793.astype('float64')) # shape=(11, 16)
uop_1804 = relay.tan(call_1794.astype('float64')) # shape=(11, 16)
bop_1806 = relay.left_shift(call_1793.astype('uint8'), relay.reshape(uop_1802.astype('uint8'), relay.shape_of(call_1793))) # shape=(11, 16)
bop_1809 = relay.left_shift(call_1794.astype('uint8'), relay.reshape(uop_1804.astype('uint8'), relay.shape_of(call_1794))) # shape=(11, 16)
uop_1825 = relay.erf(uop_1802.astype('float32')) # shape=(11, 16)
uop_1827 = relay.erf(uop_1804.astype('float32')) # shape=(11, 16)
output = relay.Tuple([bop_1806,uop_1825,])
output2 = relay.Tuple([bop_1809,uop_1827,])
func_1833 = relay.Function([], output)
mod['func_1833'] = func_1833
mod = relay.transform.InferType()(mod)
output = func_1833()
func_1834 = relay.Function([], output)
mutated_mod['func_1834'] = func_1834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1833_call = mod.get_global_var('func_1833')
func_1834_call = mutated_mod.get_global_var('func_1834')
call_1856 = relay.TupleGetItem(func_1833_call(), 1)
call_1857 = relay.TupleGetItem(func_1834_call(), 1)
func_122_call = mod.get_global_var('func_122')
func_125_call = mutated_mod.get_global_var('func_125')
const_1867 = relay.const([-7.300366,7.373926,-2.837984,5.321664,-4.120004,8.092274,0.613458,4.938657,-5.691621,-0.010905,2.786079,-7.946843,-0.006584,-4.130946,7.628465,-2.259145,9.988699,-2.720937,8.200976,8.969391,-8.163506,7.830029,6.200713,6.451884,-1.938933,8.706122,0.679247,4.142786,4.374134,8.968726,8.279480,-9.757158,3.983841,5.097567,-7.240813,-9.979647,1.666974,1.542802,-6.586467,-1.381851,-5.659272,2.028756,2.162664,8.023047,-1.020724,1.705341,0.173957,-4.767609,-6.435005,9.158144,-2.839060,3.476234,6.799588,-7.234378,-9.329650,-5.409588,-2.259729,-4.804699,-7.271861,0.869234,-7.077981,4.406191,-6.975151,-6.604802,5.373766,-5.991515,7.578185,4.730914,-2.557949,-2.037866,-9.525034,1.240513,-6.705672,-4.991405,-4.526327,6.420445,-2.807973,-5.313865,-0.185741,2.930520,-7.436926,1.279965,7.247087,5.779035,4.081218,-8.635949,-2.696319,-6.793533,5.852022,-5.406085,-3.561479,-6.733115,-8.751449,-1.988807,3.281844,-6.704365,7.759830,8.574247,-2.075259,-7.575629,9.414187,8.038884,-2.287218,-2.226768,-2.187294,9.876420,2.494524,7.343524,-6.201047,-4.222529,7.305866,-0.374672,5.220583,3.611151,-8.714683,4.152901,0.954796,9.990305,-1.420758,7.970871,-1.782946,-8.868279,8.245418,0.476084,8.425530,7.380540,-2.204141,4.996127,-6.200859,6.841739,-8.538603,-9.510915,6.517045,9.568530,2.023951,-1.201460,-9.243648,8.548330,-3.078118,6.509937,6.940181,-5.933407,-6.688397,3.092931,7.249503,5.534325,8.357986,2.620004,-2.598559,-9.904023,4.189905,6.487426,7.225944,1.947049,-4.421142,2.077411,-6.022098,6.071398,0.529060,8.799178,-1.286876,-5.999534,-2.017188,-2.064816,7.519042,-1.652680,-7.588618,-0.307824,0.562616,4.636636,-9.297154,9.910689,2.295970,-0.210580,1.631971,6.276407,-8.458892,9.908392,0.512197,9.395298,-4.682790,5.346327,-6.185770,4.212789,-2.602063,4.487413,5.388261,5.592500,0.539820,-0.677197,6.821381,-6.261863,9.111270,-5.421731,-5.594864,3.195046,1.853915,2.168433,-3.670223,2.405444,6.835794,-3.676538,6.142752,4.366750,2.684598,3.917307,4.432617,-0.359685,6.331909,1.728298,2.638548,5.109991,-7.852161,-5.672561,9.700895,3.381969,-4.634256,5.426733,0.196176,-6.617713,-8.420972,2.736361,-9.650690,3.066226,-3.533172,2.802960,2.868405,-4.736008,2.468525,9.231871,6.551861,4.681720,-5.196726,0.325447,-3.975170,-2.260587,-6.675530,-0.214907,4.598190,-9.188772,1.894835,5.361153,-7.880446,-5.734363,-6.519593,-7.017774,-7.504125,1.692367,6.297800,-4.883258,5.449873,-1.582048,-2.491830,-8.043443,-3.131073,9.854273,-0.734116,6.847353,-8.120291,-9.208067,5.158260,-5.487332,-6.944824,-9.456616,3.899001,3.915843,7.984190,-8.526800,1.828414,8.032418,6.322096,3.441391,-3.247563,3.481468,-5.844361,3.363138,-6.940037,6.296980,-8.696826,-7.874712,-9.880397,-1.664079,-3.985884,8.111231,8.846546,4.081452,9.256446,-0.465910,7.579929,-7.314389,0.259402,2.779620,-6.102412,-0.339549,-2.074752,-6.949865,1.297953,-5.050190,2.528645,0.250232,5.509685,9.604214,4.177757,-3.287173,3.218026,-8.623147,-9.245149,5.719246,-5.151980,9.004788,-9.402653,3.706846,-8.846291,3.219105,1.137328,-4.948184,-8.159144,9.157845,9.235767,-6.914353,-3.792654,0.570430,8.749522,5.493727,5.196285,-5.085035,-6.072383,1.793689,-0.001794,-0.189138,7.456287,-4.089906,9.772498,5.189460,6.399560,0.291632,-0.025205,-5.967296,8.586271,7.440908,1.880321,0.180197,3.689032,-8.705594,1.457666,3.553303,-6.084951,-7.596376,9.713321,-2.784800,-8.314972,-0.673634,3.227673,-9.611267,9.342789,7.070387,1.392444,-4.117119,0.632908,-2.948374,-5.084438,1.708483,6.884583,-9.385076,1.147899,5.246097,-7.160174,-3.325551,0.442998,1.656561,-0.704704,8.356971,8.359582,-4.427399,-1.422543,2.376261,-5.504935,7.248249,5.172167,-3.326258,4.435993,-7.172076,2.903793,4.601209,6.253222,1.607761,3.641517,9.182462,6.659999,1.129605,3.987247,-2.539276,2.230700,9.644786,9.175579,8.728322,-6.813641,-0.417246,-2.985670,-5.319579,-4.221536,0.733430,-6.197648,-5.871061,-6.589996,2.943308,4.473863,3.166778,-5.426603,9.738670,-2.282178,-7.059591,-0.608544,-4.670763,-0.479437,-5.404845,2.453667,-3.854061,-7.618506,8.395112,-3.046510,-9.280314,-6.879435,-3.986443,9.991609,-9.806928,-0.139689,-9.825654,9.527620,4.734421,9.507806,1.726326,3.656206,-5.812371,-0.271911,-0.845282,-5.790735,-3.361648,-0.798211,3.543767,-3.270878,5.376953,-0.739666,0.198975,-6.393223,7.436835,-3.090113,-0.842345,-8.241489,-6.668111,-0.998711,3.985760,1.988852,6.499647,-2.489456,1.497982,-9.800450,5.261066,-6.542113,8.698239,2.367487,-2.860848,8.712402,4.974639,8.751944,-3.919646,-9.460616,7.392688,-8.236160,8.219576,1.970520,1.885981,4.230348,7.494935,-3.177625,9.017615,6.721739,1.964269,-2.663500,8.616072,-3.108168,-0.539511,4.043497,1.891950,-9.738125,9.315969,6.622745,-6.814957,8.769407,2.504269,-9.617390,-9.261365,-3.563857,-3.439530,-3.127033,9.340213,2.085492,-0.795415,4.330850,-3.262558,-6.846462,3.673739,3.332719,2.491341,4.109330,-1.219299,2.905907,-7.238873,-5.997137,-9.724771,-2.527783,-5.551276,0.972802,-7.707569,-0.785515,2.222150,-0.289450,-8.615595,-7.278465,8.902525,-6.555369,6.859200,-0.833983,-7.335860,-5.854279,3.948266,-2.711028,-9.775923,-4.579761,-3.017335,-1.858976,-1.365423,-9.942256,-3.535814,-6.544252,3.769802,1.923548,-4.443464,-8.687651,-2.999560,4.975922,6.808390,4.927394,-4.474928,-5.078210,-2.646908,-8.792938,-6.461607,-2.808136,5.315347,-6.201113,5.279619,7.038397,7.946934,-1.832882,-9.137426,7.187483,2.125912,9.525935,6.985755,-4.038257,-0.987444,-8.139118,-0.317846,3.611013,4.856863,-3.247420,5.977588,-0.184463,8.492343,4.900768,-9.937090,4.004523,0.864242,4.575832,-8.174416,1.534701,-1.084780,7.079592,-9.242874,-5.776287,-7.520684,-8.142471,-4.293050,-3.305292,-0.738993,8.083469,8.233045,-7.595232,-0.692661,4.822786,-0.016678,9.496895,-1.497270,2.752060,-1.948027,-5.559561,-6.521415,-6.270325,5.169551,-4.024371,-3.184897,-7.552074,-2.074999,6.143371,0.473045,6.358405,2.173203,-9.333412,-7.286997,-6.711514,-0.761522,4.397866,9.892471,7.238593,3.932858,-0.993698,-9.596401,4.867356,-8.155609,8.117610,3.055982,7.219883,8.435990,-7.798085,0.623973,-1.370510,8.809909,-9.253495,-7.753862,1.959207,9.053014,8.622366,-0.645629,-3.292807,9.265622,-3.055279,-0.961242,1.607808,-1.442740,7.725718,-4.237753,9.844141,-9.710218,4.824289,4.223637,-1.481087,-7.851093,-9.173008,-5.757565,9.425072,-1.891837,-2.782613,2.603301,2.578306,7.505480,5.105407,-6.857625,4.024317,-0.666422,8.889936,3.529238,-5.387006,-3.467381,-5.687680,7.247513,-3.794075,-8.824732,4.185345,0.558494,6.304018,4.770976,-0.451258,7.467016,-2.232217,-0.540409,3.782170,4.042681,-4.026091,1.227483,-0.301162,-3.615472,-7.631598,1.019671,7.538267,-4.595005,3.890793,3.514967,-0.025773,9.338596,4.207594,-5.240357,7.253051,-7.962103,0.512358,5.552601,5.452406,3.932714,-9.714002,7.311607,1.553184,-9.114141,7.915382,-8.204199,-2.007345,8.512123,-2.854410,-1.074819,0.753560,2.083867,-3.682265,9.840487,-2.873661,-2.426730,2.612920,-7.045572,5.790578,-4.532414,4.272390,-1.905053,-9.913842,9.710855,-1.672817,6.275514,-3.041786,-9.149727,1.006355,-3.005217,-7.366152,-4.252533,-5.402844,-4.403633,4.180234,9.600631,-9.293892,-2.038729,3.869583,5.030499,4.549996,4.694551,3.904466,2.042457,9.309991,-4.489225,-7.321639,-6.272266,-8.585782,-8.751016,6.562193,-7.554649,-3.972467,-6.405439,-3.541235,0.794204,-1.169499,0.547866,-6.554633,-8.515894,6.748831,-3.602126,5.242608,-5.992659,9.415556,2.065068,-7.315912,-4.416392,-7.093508,-4.940561,-1.567311,4.083555,2.522960,-5.462984,7.144034,0.672233,-7.432459,-7.055800,-4.130609,5.467232,8.609101,-9.683417,-0.499829,-1.234199,-7.555643,8.121742,-5.599735,1.182824,3.638353,-4.655492,9.449930,8.879858,2.847648,9.700310,4.148707,3.872142,-0.697680,-1.080543,4.599189,5.183412,-2.691978,-8.059552,3.992196,-8.521017,-1.804445,5.484153,-5.443749,4.263638,-3.402480,-0.995465,8.359860,9.626782,6.548392,-9.124293,-9.616931,-2.316949,-6.751805,-0.964347,9.717126,-0.116437,4.280790,4.603245,6.476554,7.629918,7.898530,3.567577,3.953443,-4.250734,-6.269185,8.632009,4.341771,6.414861,3.586780,7.759340,-4.972702,-5.032415,-2.329595,-8.019079,-3.286645,1.999640,3.414197,-0.389046,4.960860,8.949867,1.028629,3.200255,0.126235,-0.582129,-4.413112,4.625144,6.228144,-1.340609,8.052425,6.731977,-7.823670,1.561866,7.364166,-4.620835,1.895034,1.373359,9.741230,5.268215,2.655383,0.587720,8.167716,8.546411,-6.066635,-4.578270,-5.272840,9.977895,9.551135,-0.435420,-5.036451,8.910495,-8.011963,-4.799081,2.170303,-3.410378,9.451288,-6.054842,-7.831729,0.011274,3.388213,-6.866807,-6.742514,-0.474778,3.844055,-3.838407,-7.480124,2.444259,-2.936444,-1.864966,0.299711,4.578870,-8.782829,2.664981,1.909296,9.290283,2.106976,-5.997178,6.695568,9.288717,3.366806,-1.343553,3.716962,-4.802729,0.194286,-7.490260,-9.431775,1.605577,6.032621,7.799070,8.219881,-9.355258,3.350379,-2.941223,9.376502,2.494172,-1.063227,-7.365443,5.759910,7.559130,1.060878,7.182607,6.362081,-1.976351,7.119067,7.290473,-1.822972,1.730984,-7.995053,-7.224682,0.886283,-8.993817,7.346767,-8.459061,-9.969664,5.447144,2.799834,9.843638,4.532185,1.035937,0.951338,-1.620872,-3.566044,0.077681,8.995163,6.597717,0.274736,-6.328972,-0.331982,0.121327,6.677262,2.645320,7.481492,4.396831,-7.855556,-6.253845,-4.733553,-6.575086,-7.321804,6.469679,0.145272,9.666632,1.467416,-4.284642,-4.519694,-3.920010,-0.690898,-7.576875,-8.659936,8.542180,-0.637368,-2.307098,-7.179107,-0.149149,8.993763,-6.646698,-4.458555,8.918445,-4.808528,1.626854,-2.532573,-4.767650,3.658360,-0.948767,-5.261841,4.639223,2.041684,8.977118,-0.656615,7.273267,-4.140363,-3.822137,1.303635,-1.167864,0.512522,-0.588622,0.411188,8.365858,6.006742,-7.155777,5.832295,-6.985231,1.761579,-4.419752,4.710738,7.635923,3.966990,-4.490682,-9.674990,-3.866287,1.294193,2.472854,4.607763,3.022931,-0.316696,2.682562,9.778603,3.199834,4.848009,-5.909489,3.239460,-1.196284,-0.630612,9.632796,4.351482,-8.538006,-1.346183,0.765100,-5.596814,-6.564465,-5.413437,-9.694004,0.820239,7.702644,0.585077,-1.870745,6.894105,-4.991172,7.217733,-6.497446,2.516173,2.896198,-3.081208,-4.340244,-0.427684,-3.756086,-1.847420,-0.688571,-5.270393,-5.304995,-7.622505,-4.542214,-7.240755,1.598269,-4.414495,-0.268485,-5.400495,3.204872,3.545405,-1.521035,-2.874326,-2.229665,2.617429,-8.721142,-1.532519,-2.189415,8.763576,5.401495,9.825269,-0.092981,-1.597746,6.934233,-0.043007,-8.774750,-7.450590,4.349687,6.831776,9.644683,7.992331,-5.864397,8.582990,-8.286129,5.873610,-0.002714,-9.540610,-4.213402,3.462891,7.332611,-7.394979,7.010727,-9.766773,6.632937,0.609976,4.494738,-7.482799,-2.514822,-6.848476,7.692338,-4.164027,-9.423647,-0.973473,-8.093675,-7.104492,8.977075,1.802637,-8.286097,-4.065100,4.845150,-2.394581,-9.148920,-8.022608,-1.141651,1.891637,-7.658309,3.235496,-9.751893,0.478307,-9.131035,-2.795367,-5.325522,-3.945427,-9.537684,-5.777965,-7.307334,-8.426763,6.056273,-0.557266,8.317953,7.238640,3.149728,-8.194925,-0.467260,-6.835632,9.755199,0.359374,-7.788684,-1.362582,-5.640030,-1.027509,-7.080862,5.421808,5.182242,0.768295,1.900056,-5.101734,-0.206518,-2.177632,-2.671615,5.660930,1.541906,6.129226,-8.301387,-4.762630,-1.281070,-9.193582,8.358881,2.182312,7.430190,2.211626,0.490115,7.442164,-5.802995,2.538372,5.735023,8.783104,2.124248,-5.914358,-8.674110,-7.893329,-9.749627,0.096540,-1.087753,-4.705118,-6.332747,-3.166218,-8.754622,5.768242,5.382557,7.530038,7.093094,8.616067,-3.728286,-4.492163,9.824772,0.670104,8.362993,5.687787,7.898290,8.894248,-0.762946,-4.909344,-9.455197,8.361218,-0.760284,-3.536377,3.683337,-9.304299,0.907442,1.337082,6.137922,-5.478770,3.399918,-9.001039,-1.727846,-4.998834,5.161595,7.381915,-8.113666,5.202164,5.218684,-2.619411,5.591945,-8.827196,-0.715135,4.446533,6.408545,-3.986862,-3.356422,3.435964,2.009526,0.306803,-6.204435,-7.656157,0.398884,9.032320,9.828832,-1.850750,-4.351082,8.936669,-1.625642,-2.068338,4.982382,-7.444127,4.681249,-2.481080,-9.531386,1.406377,-3.490361,6.053698,9.282952,-4.664279,8.590056,-1.380993,-5.903326,-3.222952,-6.409237,-3.763733,9.660319,9.373261,-4.709915,2.697868,1.681584,-4.719510,-9.197999,-2.074536,-2.221054,-4.615584,0.362462,-5.008413,1.968307,-6.010532,2.412159,8.631844,9.929718,-3.354820,-9.109254,-4.751873,-8.226855,6.530428,8.817407,1.900094,-0.168564,3.011304,-9.025507,4.306557,-3.300095,5.928392,-5.981016,-1.009643,-4.016824,-0.592300,3.177199,-2.458564,5.767286,-5.578659,1.843326,-6.935120,-3.529988,3.673480,6.551707,-4.538842,-8.598427,-2.553010,-0.985994,4.152465,8.194480,2.613685,-4.490331,-5.395811,1.656720,-0.476589,-6.654691,-0.173607,-8.951979,4.269923,8.124175,4.923426,-7.552782,-8.527526,9.147849,6.423068,3.889601,8.505628,-1.095696,1.059386,-5.821948,2.756098,7.009730,4.711663,5.036594,4.182656,-7.388317,7.737393,-8.974299,2.383774,7.490848,-4.167784,5.711792,-5.253991,-6.623926,7.263062,-7.324478,0.978082,4.995599,2.156299,-2.777706,9.512278,-9.156100,2.218023,-4.635429,-3.307281,0.199603,1.025090,-5.221484,-9.681921,4.753403,7.155951,-6.696821,7.392767,-4.087347,1.844172,-6.791403,0.726203,8.786259,9.974223,-5.994125,8.504338,4.064621,-6.689304,-7.804034,-9.254593,0.147387,2.591342,-8.612878,2.776604,-3.140870,5.833596,6.180479,6.026225,4.753018,-8.024536,-3.716954,0.102107,-5.775127,2.640438,9.984176,5.703549,1.787142,-2.837734,0.865480,-1.259279,-3.706510,-2.433574,4.815745,-5.525261,4.829733,-3.487865,-5.993881,6.791636,2.112669,-1.990947,-8.491013,8.661349,-6.894113,5.372633,7.298809,0.811525,-1.516956,0.658877,0.589892,-5.719702,8.015626,-1.787396,9.545477,-6.087501,-4.206927,5.068115,-3.237320,6.639667,-4.681788,4.640525,-7.157334,-4.705803,-5.504891,-1.992255,5.836704,-2.213868,7.379750,1.829990,-5.392190,-1.241903,-3.752245,9.796804,-4.773793,9.785707,-1.282459,2.343720,-6.703506,8.122113,2.827081,-8.575803,-2.364607,1.909096,-2.746929,-8.768666,1.450852,2.962680,-5.847154,-1.635695,2.062182,-0.856582,-6.901639,7.863427,4.843846,-1.621396,-4.220731,8.974152,2.441056,1.423024,6.677993,4.632930,-4.752960,-9.434694,9.753147,3.945920,9.046480,-7.665168,2.854140,-3.666703,-9.683067,-9.170472,2.824836,-8.817077,-1.172970,-9.977157,3.656536,-5.982574,6.031001,0.814006,-6.511358,1.471079,-1.585932,2.243564,3.935452,-2.977859,-5.124689,3.822476,-7.176115,1.981353,6.249265,8.697175,5.225838,-7.267789,-3.089706,8.305442,-7.959398,-6.057437,8.733393,4.827201,2.702728,-5.134357,-0.881863,-7.367430,0.124415,5.208993,3.118799,-8.114284,7.802579,8.115167,-4.921067,-8.831062,-7.245755,8.352779,-0.846223,-2.902748,-0.112258,-5.382133,-4.782040,9.463754,-3.427500,-2.868933,5.351478,-0.920741,0.696740,7.331274,-0.088970,5.383924,-5.607653,-2.779341,7.162917,7.506359,-7.417546,-8.122698,-9.096685,-9.757395,-8.636172,-9.055390,8.759053,-0.553945,6.956032,-0.724545,1.402226,-0.365083,-6.657915,2.626602,8.590222,0.557782,-8.165879,6.670827,-2.786223,2.170347,-4.701415,-5.744420,-2.806302,4.258715,-6.700139,1.694706,3.945688,-1.810771,8.649161,9.318153,-4.410242,-9.602024,-5.615527,4.487260,1.042378,7.336357,-4.291510,-7.318348,2.423279,-7.877331,4.801873,0.184427,7.162647,2.651123,6.641471,-5.808540,4.025226,-4.396066,-5.760845,-4.232469,-4.280961,7.128860,-0.519508,7.066938,1.010338,4.351934,-4.964118,6.941322,-2.528741,-4.824646,9.039658,2.467210,6.764552,-8.805556,3.572253,1.628698,8.125779,4.849612,-2.808326,7.745929,-6.685429,6.924378,1.980701,1.152600,5.980726,-2.462853,-3.730203,4.020662,4.905294,4.011154,4.710122,5.621479,3.464337,-7.419934,8.582137,-2.766523,-0.135311,-4.538793,-0.015597,-9.308809,8.863912,8.124161,-2.063450,9.605118,-7.291937,2.877037,-9.520993,-6.830001,8.434874,4.451239,-0.955322,-9.712599,6.131469,7.841803,-6.892538,7.986405,-0.760804,9.594063,-2.800381,-2.221975,3.152280,-2.226632,-4.874075,-7.789786,8.360829,5.418867,2.849139,-0.617025,-7.969687,-7.593970,8.942117,4.492058,-9.934869,9.727879,8.499471,-3.490018,5.810083,-7.690750,4.612921,1.371975,3.015089,5.048045,-2.906621,4.302305,6.792703,-0.055823,-2.159520,-0.677264,-8.048983,3.865751,1.370940,9.927422,-5.801542,5.868650,-8.033901,-2.043733,5.766423,-3.712251,2.438965,-8.554732,5.140071,-7.035839,-2.668626,1.313796,-7.526020,1.074382,-7.971726,-7.882362,-4.015005,-8.526153,-1.980270,-9.147253,-5.841958,5.415883,1.564430,-1.664544,-1.503986,-7.120809,1.770472], dtype = "float32")#candidate|1867|(1690,)|const|float32
call_1866 = relay.TupleGetItem(func_122_call(relay.reshape(const_1867.astype('float32'), [10, 13, 13])), 2)
call_1868 = relay.TupleGetItem(func_125_call(relay.reshape(const_1867.astype('float32'), [10, 13, 13])), 2)
func_122_call = mod.get_global_var('func_122')
func_125_call = mutated_mod.get_global_var('func_125')
call_1879 = relay.TupleGetItem(func_122_call(relay.reshape(const_1867.astype('float32'), [10, 13, 13])), 2)
call_1880 = relay.TupleGetItem(func_125_call(relay.reshape(const_1867.astype('float32'), [10, 13, 13])), 2)
uop_1890 = relay.atanh(const_1867.astype('float32')) # shape=(1690,)
func_122_call = mod.get_global_var('func_122')
func_125_call = mutated_mod.get_global_var('func_125')
call_1895 = relay.TupleGetItem(func_122_call(relay.reshape(uop_1890.astype('float32'), [10, 13, 13])), 3)
call_1896 = relay.TupleGetItem(func_125_call(relay.reshape(uop_1890.astype('float32'), [10, 13, 13])), 3)
output = relay.Tuple([call_1856,call_1866,call_1879,uop_1890,call_1895,])
output2 = relay.Tuple([call_1857,call_1868,call_1880,uop_1890,call_1896,])
func_1900 = relay.Function([], output)
mod['func_1900'] = func_1900
mod = relay.transform.InferType()(mod)
mutated_mod['func_1900'] = func_1900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1900_call = mutated_mod.get_global_var('func_1900')
call_1901 = func_1900_call()
output = call_1901
func_1902 = relay.Function([], output)
mutated_mod['func_1902'] = func_1902
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1905 = relay.var("var_1905", dtype = "float32", shape = (5, 5, 15))#candidate|1905|(5, 5, 15)|var|float32
uop_1906 = relay.atanh(var_1905.astype('float32')) # shape=(5, 5, 15)
const_1913 = relay.const([[[6.287675,1.510379,7.707167,-4.356414,-0.854621,0.327272,-1.632884,9.849916,0.407305,-8.622578,-3.390699,-0.440415,0.075155,-7.535010,3.576523],[-9.060938,3.342555,-0.139864,6.771183,2.857073,-7.704178,3.962882,-9.016067,2.396187,-5.834301,4.570109,7.798161,-3.500307,-9.704957,3.721688],[-2.844382,-5.598980,-3.798225,-5.491216,1.397586,3.561162,-9.332056,4.317504,3.857239,2.882291,-9.249969,-5.725201,-0.605164,-7.646391,2.707070],[-1.078076,2.540797,-8.027083,5.146949,0.482941,-9.236108,-7.632160,7.015575,5.209333,-1.409144,-3.712957,9.082746,-6.521851,2.439810,-3.500841],[-2.363023,0.978940,2.033436,0.916569,-5.060438,-3.305634,9.551515,-8.309121,-9.016890,5.683317,-4.750784,1.431184,-0.635889,6.748611,-2.257993]],[[7.444071,-5.498169,-6.043417,-0.617220,-1.719441,-5.225396,4.591156,0.838505,-0.686070,-7.360515,-1.348563,-0.543062,-5.515201,1.096536,-4.065286],[-5.805746,-2.336978,-6.200974,-9.358430,0.999702,-5.881418,0.970902,1.777188,4.582185,-2.612586,-7.581492,-1.538957,-2.838360,9.288773,-8.935298],[8.630170,5.192320,0.146901,-9.103447,-4.738486,-0.825373,1.204936,3.946856,-4.964501,7.731407,-6.868474,3.469203,-9.723554,9.012808,1.522096],[5.300453,-1.591651,-5.269960,1.210705,-4.231534,-8.798149,-2.888113,-4.694604,2.594979,-1.549900,-9.283964,-8.900237,3.570116,4.232939,-7.712912],[-2.389212,-5.815385,8.655243,-7.106504,7.347750,-3.084079,5.238535,-1.809915,-7.806611,-1.352523,-1.926830,8.320522,-7.828887,9.253454,-5.159185]],[[-6.663496,1.863550,1.013706,0.460419,7.543650,-2.904405,6.635061,-1.032670,-2.708002,8.821781,0.184742,5.306678,-0.487922,0.255594,3.542584],[0.871253,-7.502044,-3.219223,5.601711,3.833170,0.726349,2.703181,1.412900,-5.498448,-0.760550,-1.514821,2.739113,8.418665,8.552186,5.612462],[-8.866898,-8.723272,5.923721,-5.492582,4.254387,-6.414448,-4.518827,5.046727,0.874988,7.425824,6.990173,-7.366276,6.392414,-8.443699,-8.934806],[3.971409,-1.245916,-4.135859,6.390890,6.153078,-7.503846,3.445659,9.578717,4.705934,-1.459427,-1.683685,-9.014333,-8.324945,-2.320571,9.934228],[-5.231736,7.896298,-4.714763,-7.498562,8.259343,-8.621419,1.876666,-9.643726,-3.466565,-9.912814,-1.116129,-1.976763,8.928308,-0.483620,9.188869]],[[-2.179032,-6.383085,1.776044,4.225778,-8.091067,7.308298,8.890411,-5.871781,4.521546,9.960362,5.341857,-3.951241,-2.771782,-9.646074,-1.392518],[-8.272908,3.919865,-9.528812,-1.156517,3.654677,-9.874272,2.899186,8.264144,5.247348,1.095418,-7.210146,-6.171024,-6.370737,-3.828637,7.309540],[5.424119,-5.194690,8.730129,8.686401,-8.562011,-5.953529,5.478482,-8.826202,-3.431786,0.496751,-1.186094,-8.323928,-8.349796,-4.925971,-7.633138],[6.839563,1.415440,-0.794009,9.319237,-8.908776,-8.168154,-1.107405,3.062925,2.422902,7.920245,7.410205,-2.973994,-1.351967,-9.552836,-7.709881],[4.224719,-9.635525,8.523373,5.104668,-5.950044,-0.238214,-8.686719,-2.996491,-9.837648,4.556469,-2.617397,1.256669,7.781306,-3.413248,-2.790290]],[[-0.644790,-2.962186,1.124861,1.839190,-6.072370,-7.633451,2.043353,-9.354377,-9.628083,8.750500,-1.839692,-5.655114,-7.505642,4.249870,-8.628853],[0.324162,3.726783,6.291396,8.309408,1.747931,9.822679,9.499026,6.970698,-7.054555,-1.547159,2.290662,-7.851831,-5.868089,2.931522,1.650008],[-6.921797,-2.476294,-1.585454,-6.943560,8.546385,-0.714433,4.908297,4.369287,3.940397,9.781398,4.943169,-0.822948,-2.134368,-8.860452,-3.733259],[0.309361,7.653483,6.847942,-4.685804,6.163148,5.570688,-1.080309,3.915227,0.662930,1.386725,-9.181294,-7.948862,-7.217557,-1.850123,-5.991313],[-5.748383,4.023023,-2.389145,-3.113418,-3.905426,-4.798049,0.547245,-9.592824,-5.832190,7.878400,-3.833204,-3.281093,-2.488159,-5.802829,0.639157]]], dtype = "float32")#candidate|1913|(5, 5, 15)|const|float32
bop_1914 = relay.bitwise_or(uop_1906.astype('int16'), relay.reshape(const_1913.astype('int16'), relay.shape_of(uop_1906))) # shape=(5, 5, 15)
uop_1917 = relay.log10(var_1905.astype('float64')) # shape=(5, 5, 15)
bop_1920 = relay.right_shift(uop_1917.astype('int64'), relay.reshape(bop_1914.astype('int64'), relay.shape_of(uop_1917))) # shape=(5, 5, 15)
output = bop_1920
output2 = bop_1920
func_1923 = relay.Function([var_1905,], output)
mod['func_1923'] = func_1923
mod = relay.transform.InferType()(mod)
mutated_mod['func_1923'] = func_1923
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1924 = relay.var("var_1924", dtype = "float32", shape = (5, 5, 15))#candidate|1924|(5, 5, 15)|var|float32
func_1923_call = mutated_mod.get_global_var('func_1923')
call_1925 = func_1923_call(var_1924)
output = call_1925
func_1926 = relay.Function([var_1924], output)
mutated_mod['func_1926'] = func_1926
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1933 = relay.const(2.500540, dtype = "float64")#candidate|1933|()|const|float64
var_1934 = relay.var("var_1934", dtype = "float64", shape = (2, 6, 9))#candidate|1934|(2, 6, 9)|var|float64
bop_1935 = relay.subtract(const_1933.astype('float64'), var_1934.astype('float64')) # shape=(2, 6, 9)
bop_1944 = relay.maximum(var_1934.astype('int64'), const_1933.astype('int64')) # shape=(2, 6, 9)
bop_1975 = relay.bitwise_or(const_1933.astype('uint32'), var_1934.astype('uint32')) # shape=(2, 6, 9)
output = relay.Tuple([bop_1935,bop_1944,bop_1975,])
output2 = relay.Tuple([bop_1935,bop_1944,bop_1975,])
func_1986 = relay.Function([var_1934,], output)
mod['func_1986'] = func_1986
mod = relay.transform.InferType()(mod)
mutated_mod['func_1986'] = func_1986
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1987 = relay.var("var_1987", dtype = "float64", shape = (2, 6, 9))#candidate|1987|(2, 6, 9)|var|float64
func_1986_call = mutated_mod.get_global_var('func_1986')
call_1988 = func_1986_call(var_1987)
output = call_1988
func_1989 = relay.Function([var_1987], output)
mutated_mod['func_1989'] = func_1989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1551_call = mod.get_global_var('func_1551')
func_1552_call = mutated_mod.get_global_var('func_1552')
call_2001 = func_1551_call()
call_2002 = func_1551_call()
func_1777_call = mod.get_global_var('func_1777')
func_1779_call = mutated_mod.get_global_var('func_1779')
call_2005 = func_1777_call()
call_2006 = func_1777_call()
bop_2036 = relay.bitwise_or(call_2005.astype('uint8'), relay.reshape(call_2001.astype('uint8'), relay.shape_of(call_2005))) # shape=(11, 16)
bop_2039 = relay.bitwise_or(call_2006.astype('uint8'), relay.reshape(call_2002.astype('uint8'), relay.shape_of(call_2006))) # shape=(11, 16)
uop_2059 = relay.acos(call_2001.astype('float32')) # shape=(11, 16)
uop_2061 = relay.acos(call_2002.astype('float32')) # shape=(11, 16)
output = relay.Tuple([bop_2036,uop_2059,])
output2 = relay.Tuple([bop_2039,uop_2061,])
func_2074 = relay.Function([], output)
mod['func_2074'] = func_2074
mod = relay.transform.InferType()(mod)
mutated_mod['func_2074'] = func_2074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2074_call = mutated_mod.get_global_var('func_2074')
call_2075 = func_2074_call()
output = call_2075
func_2076 = relay.Function([], output)
mutated_mod['func_2076'] = func_2076
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2083 = relay.var("var_2083", dtype = "float64", shape = (2, 11))#candidate|2083|(2, 11)|var|float64
uop_2084 = relay.erf(var_2083.astype('float64')) # shape=(2, 11)
bop_2095 = relay.less(var_2083.astype('bool'), relay.reshape(uop_2084.astype('bool'), relay.shape_of(var_2083))) # shape=(2, 11)
bop_2112 = relay.left_shift(var_2083.astype('int16'), relay.reshape(bop_2095.astype('int16'), relay.shape_of(var_2083))) # shape=(2, 11)
func_1833_call = mod.get_global_var('func_1833')
func_1834_call = mutated_mod.get_global_var('func_1834')
call_2121 = relay.TupleGetItem(func_1833_call(), 0)
call_2122 = relay.TupleGetItem(func_1834_call(), 0)
output = relay.Tuple([bop_2112,call_2121,])
output2 = relay.Tuple([bop_2112,call_2122,])
func_2144 = relay.Function([var_2083,], output)
mod['func_2144'] = func_2144
mod = relay.transform.InferType()(mod)
mutated_mod['func_2144'] = func_2144
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2145 = relay.var("var_2145", dtype = "float64", shape = (2, 11))#candidate|2145|(2, 11)|var|float64
func_2144_call = mutated_mod.get_global_var('func_2144')
call_2146 = func_2144_call(var_2145)
output = call_2146
func_2147 = relay.Function([var_2145], output)
mutated_mod['func_2147'] = func_2147
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2151 = relay.var("var_2151", dtype = "uint32", shape = (14, 4, 3))#candidate|2151|(14, 4, 3)|var|uint32
var_2152 = relay.var("var_2152", dtype = "uint32", shape = (14, 4, 3))#candidate|2152|(14, 4, 3)|var|uint32
bop_2153 = relay.not_equal(var_2151.astype('bool'), relay.reshape(var_2152.astype('bool'), relay.shape_of(var_2151))) # shape=(14, 4, 3)
func_1777_call = mod.get_global_var('func_1777')
func_1779_call = mutated_mod.get_global_var('func_1779')
call_2159 = func_1777_call()
call_2160 = func_1777_call()
uop_2163 = relay.erf(bop_2153.astype('float64')) # shape=(14, 4, 3)
func_1498_call = mod.get_global_var('func_1498')
func_1499_call = mutated_mod.get_global_var('func_1499')
call_2167 = relay.TupleGetItem(func_1498_call(), 1)
call_2168 = relay.TupleGetItem(func_1499_call(), 1)
output = relay.Tuple([call_2159,uop_2163,call_2167,])
output2 = relay.Tuple([call_2160,uop_2163,call_2168,])
func_2183 = relay.Function([var_2151,var_2152,], output)
mod['func_2183'] = func_2183
mod = relay.transform.InferType()(mod)
var_2184 = relay.var("var_2184", dtype = "uint32", shape = (14, 4, 3))#candidate|2184|(14, 4, 3)|var|uint32
var_2185 = relay.var("var_2185", dtype = "uint32", shape = (14, 4, 3))#candidate|2185|(14, 4, 3)|var|uint32
output = func_2183(var_2184,var_2185,)
func_2186 = relay.Function([var_2184,var_2185,], output)
mutated_mod['func_2186'] = func_2186
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2194 = relay.const([[[5.988511],[-6.211356]],[[8.158838],[-6.058972]],[[1.999871],[8.590534]],[[-8.116390],[8.822357]],[[-1.150788],[-9.773094]],[[8.241715],[-3.880955]],[[6.683021],[-9.299492]]], dtype = "float32")#candidate|2194|(7, 2, 1)|const|float32
uop_2195 = relay.asinh(const_2194.astype('float32')) # shape=(7, 2, 1)
uop_2202 = relay.sinh(uop_2195.astype('float64')) # shape=(7, 2, 1)
bop_2205 = relay.not_equal(uop_2202.astype('bool'), relay.reshape(uop_2195.astype('bool'), relay.shape_of(uop_2202))) # shape=(7, 2, 1)
output = bop_2205
output2 = bop_2205
func_2208 = relay.Function([], output)
mod['func_2208'] = func_2208
mod = relay.transform.InferType()(mod)
mutated_mod['func_2208'] = func_2208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2208_call = mutated_mod.get_global_var('func_2208')
call_2209 = func_2208_call()
output = call_2209
func_2210 = relay.Function([], output)
mutated_mod['func_2210'] = func_2210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2074_call = mod.get_global_var('func_2074')
func_2076_call = mutated_mod.get_global_var('func_2076')
call_2213 = relay.TupleGetItem(func_2074_call(), 1)
call_2214 = relay.TupleGetItem(func_2076_call(), 1)
output = relay.Tuple([call_2213,])
output2 = relay.Tuple([call_2214,])
func_2236 = relay.Function([], output)
mod['func_2236'] = func_2236
mod = relay.transform.InferType()(mod)
output = func_2236()
func_2237 = relay.Function([], output)
mutated_mod['func_2237'] = func_2237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1777_call = mod.get_global_var('func_1777')
func_1779_call = mutated_mod.get_global_var('func_1779')
call_2254 = func_1777_call()
call_2255 = func_1777_call()
output = relay.Tuple([call_2254,])
output2 = relay.Tuple([call_2255,])
func_2256 = relay.Function([], output)
mod['func_2256'] = func_2256
mod = relay.transform.InferType()(mod)
output = func_2256()
func_2257 = relay.Function([], output)
mutated_mod['func_2257'] = func_2257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2208_call = mod.get_global_var('func_2208')
func_2210_call = mutated_mod.get_global_var('func_2210')
call_2314 = func_2208_call()
call_2315 = func_2208_call()
func_71_call = mod.get_global_var('func_71')
func_74_call = mutated_mod.get_global_var('func_74')
var_2317 = relay.var("var_2317", dtype = "uint64", shape = ())#candidate|2317|()|var|uint64
var_2318 = relay.var("var_2318", dtype = "uint64", shape = (60,))#candidate|2318|(60,)|var|uint64
call_2316 = relay.TupleGetItem(func_71_call(relay.reshape(var_2317.astype('uint64'), []), relay.reshape(var_2318.astype('uint64'), [5, 12]), ), 0)
call_2319 = relay.TupleGetItem(func_74_call(relay.reshape(var_2317.astype('uint64'), []), relay.reshape(var_2318.astype('uint64'), [5, 12]), ), 0)
output = relay.Tuple([call_2314,call_2316,var_2317,var_2318,])
output2 = relay.Tuple([call_2315,call_2319,var_2317,var_2318,])
func_2321 = relay.Function([var_2317,var_2318,], output)
mod['func_2321'] = func_2321
mod = relay.transform.InferType()(mod)
var_2322 = relay.var("var_2322", dtype = "uint64", shape = ())#candidate|2322|()|var|uint64
var_2323 = relay.var("var_2323", dtype = "uint64", shape = (60,))#candidate|2323|(60,)|var|uint64
output = func_2321(var_2322,var_2323,)
func_2324 = relay.Function([var_2322,var_2323,], output)
mutated_mod['func_2324'] = func_2324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1900_call = mod.get_global_var('func_1900')
func_1902_call = mutated_mod.get_global_var('func_1902')
call_2338 = relay.TupleGetItem(func_1900_call(), 1)
call_2339 = relay.TupleGetItem(func_1902_call(), 1)
output = call_2338
output2 = call_2339
func_2347 = relay.Function([], output)
mod['func_2347'] = func_2347
mod = relay.transform.InferType()(mod)
output = func_2347()
func_2348 = relay.Function([], output)
mutated_mod['func_2348'] = func_2348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1498_call = mod.get_global_var('func_1498')
func_1499_call = mutated_mod.get_global_var('func_1499')
call_2396 = relay.TupleGetItem(func_1498_call(), 0)
call_2397 = relay.TupleGetItem(func_1499_call(), 0)
func_2236_call = mod.get_global_var('func_2236')
func_2237_call = mutated_mod.get_global_var('func_2237')
call_2403 = relay.TupleGetItem(func_2236_call(), 0)
call_2404 = relay.TupleGetItem(func_2237_call(), 0)
output = relay.Tuple([call_2396,call_2403,])
output2 = relay.Tuple([call_2397,call_2404,])
func_2410 = relay.Function([], output)
mod['func_2410'] = func_2410
mod = relay.transform.InferType()(mod)
output = func_2410()
func_2411 = relay.Function([], output)
mutated_mod['func_2411'] = func_2411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1900_call = mod.get_global_var('func_1900')
func_1902_call = mutated_mod.get_global_var('func_1902')
call_2418 = relay.TupleGetItem(func_1900_call(), 1)
call_2419 = relay.TupleGetItem(func_1902_call(), 1)
output = call_2418
output2 = call_2419
func_2425 = relay.Function([], output)
mod['func_2425'] = func_2425
mod = relay.transform.InferType()(mod)
mutated_mod['func_2425'] = func_2425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2425_call = mutated_mod.get_global_var('func_2425')
call_2426 = func_2425_call()
output = call_2426
func_2427 = relay.Function([], output)
mutated_mod['func_2427'] = func_2427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2410_call = mod.get_global_var('func_2410')
func_2411_call = mutated_mod.get_global_var('func_2411')
call_2448 = relay.TupleGetItem(func_2410_call(), 1)
call_2449 = relay.TupleGetItem(func_2411_call(), 1)
func_356_call = mod.get_global_var('func_356')
func_359_call = mutated_mod.get_global_var('func_359')
const_2451 = relay.const(1, dtype = "uint8")#candidate|2451|()|const|uint8
var_2452 = relay.var("var_2452", dtype = "uint8", shape = (112,))#candidate|2452|(112,)|var|uint8
call_2450 = relay.TupleGetItem(func_356_call(relay.reshape(const_2451.astype('uint8'), []), relay.reshape(var_2452.astype('uint8'), [4, 14, 2]), ), 0)
call_2453 = relay.TupleGetItem(func_359_call(relay.reshape(const_2451.astype('uint8'), []), relay.reshape(var_2452.astype('uint8'), [4, 14, 2]), ), 0)
uop_2456 = relay.sin(call_2450.astype('float32')) # shape=(4, 14, 2)
uop_2458 = relay.sin(call_2453.astype('float32')) # shape=(4, 14, 2)
uop_2475 = relay.log(uop_2456.astype('float64')) # shape=(4, 14, 2)
uop_2477 = relay.log(uop_2458.astype('float64')) # shape=(4, 14, 2)
func_220_call = mod.get_global_var('func_220')
func_223_call = mutated_mod.get_global_var('func_223')
const_2480 = relay.const([-3,4,3,6,-9,4,-7,10,7,3,1,1,-9,-7,-2,-8,5,8,-1,1,5,-7,10,-4,7,8,-9,-4,-7,-1,-5,3,3,10,-8,-6,-8,5,2,4,1,7,-9,10,-4,-5,2,-9,-1,-8,9,2,-9,-5,10,-10,1,1,-8,8,-2,9,10,6,6,-10,10,-4,3,-1,9,4,-7,-10,5,-7,10,10,3,-1,2,7,7,2,-1,5,-2,-1,-3,6,-10,7,-6,-10,-3,-1,6,8,7,5,2,-1,-10,-7,-3,3,3,-3,-6,-9,8,5,-6,-9,-4,-5,8,-3,6,1,1,5,3,5,3,-2,4,6,2,-6,-4,3,5,-8,5,4,-3,-2,-7,10,10,4,9,7,7,-6,-4,-1,-4,-4,8,7,-5,10,5,-5,-1,-3,6,10,5,4,-6,10,4,10,-2,-7,-7,10,-8,7,3,-8,1,-4,-5,-6,3,-2,2,1,1,2,7,-10,-8,-2,8,-9,9,5,-2,-4,7,-4,-10,-2,4,-10,7,-4,8,3,8,-5,7,-1,-1,4,1,-8,4,3,-5,9,-3,-4,-10,7,10,5,3,4,10,-3,-7,-3,2,-1,9,8,2,4,-8,-2,-2,6,10,9,-10,-1,3,10,-2,-10,-10,4,10,-5,-9,-9,-3,-8,4,3,10,-3,-9,-8,-5,-1,-9,-6,-3,9,8,-4,-10,-4,-10,10,-2,-4,-7,2,-1,6,10,-8,5,-6,5,3,-2,2,5,-3,5,10,10,-4,6,10,4,-10,7,-1,6,10,1,4,-3,3,-4,10,4,4,5,-8,4,-7,4,3,-10,-1,-4,6,-2,5,-9,-2,10,5,-2,6,10,6,1,-3,-2,-3,9,-6,-6,1,-6,2,-8,5,9,5,5,3,-1,-9,1,1,-1,5,6,7,-6,1,-6,-6,-8,-4,2,-10,-4,-8,-3,8,-4,5,6,3,1,-8,10,3,6,-10,-5,-3,-1,5,-10,2,-4,3,9,4,1,10,-7,-7,10,-5,-8,-3,9,-5,-1,-2,-3,6,2,3,-1,3,6,3,7,-3,6,6,-6,-6,-7,3,-5,2,-7,1,8,8,-5,-1,8,-1,-10,4,9,2,-10,6,3,5,2,10,9,7,-8,8,2,2,6,7,-6,1,-5,-3,4,-8,1,10,3,-6,6,7,-3,10,-5,-3,6,-8,1,-9,7,-3,3,-10,1,-7,10,-4,5,2,-1,-2,1,9,-9,-8,4,-5,-7,3,-1,-4,6,-5,2,-2,4,-9,2,-8,-4,9,10,-7,1,4,2,-4,-5,-1,6,-9,7,-5,6,4,-2,10,-7,8,6,-9,-9,9,9,3,3,-8,-10,1,-8,7,-8,-1,-5,2,-10,-10,-1,5,8,7,-9,-4,-8,6,10,8,-4,2,10,1,-4,-1,1,-6,3,4,10,3,-5,-6,6,-2,4,10,-7,-6,-3,5,-4,-6,-8,-8,-6,-8,2,5,-9,10,4,-9,-2,-3,3,-10,-1,-1,5,-7,4,4,-9,-6,10,4,-6,7,10,-3,-8,-8,-9,7,-2,-9,-10,-2,5,-9,-4,9,6,7,5,-8,5,1,-5,-10,-5,-3,3,5,-3,-3,7,-6,9,10,-5,5,2,-4,8,-6,-4,-7,-4,4,-7,4,-10,-7,-6,-3,5,1,-5,6,8,6,1,-8,6,-10,-3,-6,-9,-4,-2,-7,4,-4,-10,4,-2,-1,-4,6,3,4,4,-10,7,-9,-8,7,4,-3,-2,4,7,-7,-4,-2,2,-4,-10,-9,-8,-7,3,-2,-7,-1,2,-5,1,-10,6,2,10,4,2,-8,-2,-1,-8,3,-6,6,-10,-6,2,5,-10,8,5,-1,-5,-9,3,-3,-3,-8,-1,-8,5,3,10,7,-7,1,9,10,8,-1,1,1,10,-4,4,-1,6,6,4,-7,10,-4,9,-3,5,-7,9,2,-9,-10,6,2,5,-7,3,9,-1,10,-9,6,-8,4,-5,7,-3,-9,-6,3,2,2,6,-7,-6,-7,-2,1,-10,-7,9,10,-9,-3,3,8,-5,-9,2,10,-4,3,3,-8,-6,7,7,9,6,10,-7,-3,9,-5,-9,-6,-3,-1,-2,-9,-1,4,-4,3,7,9,4,-8,5,3,-10,9,10,10,-8,-8,5,-9,7,9,7,-7,2,-5,9,-5,7,-2,3,-6,-1,1,8,-5,2,-8,3,-4,-1,4,-5,8,-4,-10,2,-9,2,-1,10,7,9,2,5,7,-5,7,-1,-5,-7,1,2,-4,-9,-7,2,-10,-3,3,10,-3,2,-4,-7,7,3,3,7,10,-6,-5,-2,7,9,3,-9,-2,-8,-3,7,-9,7,4,3,2,-2,6,-1,-1,-5,8,3,-7,8,8,-2,-6,10,5,-3,-3,-3,8,5,4,6,-6,-6,1,-4,9,-5,5,4,-9,6,-3,2,-4,-3,-7,-4,7,7,-4,-7,9,8,7,5,-3,9,-1,-7,10,-5,8,-1,7,-3,2,-6,3,-6,-7], dtype = "int8")#candidate|2480|(960,)|const|int8
call_2479 = relay.TupleGetItem(func_220_call(relay.reshape(const_2480.astype('int8'), [16, 10, 6])), 0)
call_2481 = relay.TupleGetItem(func_223_call(relay.reshape(const_2480.astype('int8'), [16, 10, 6])), 0)
func_1498_call = mod.get_global_var('func_1498')
func_1499_call = mutated_mod.get_global_var('func_1499')
call_2487 = relay.TupleGetItem(func_1498_call(), 0)
call_2488 = relay.TupleGetItem(func_1499_call(), 0)
output = relay.Tuple([call_2448,const_2451,var_2452,uop_2475,call_2479,const_2480,call_2487,])
output2 = relay.Tuple([call_2449,const_2451,var_2452,uop_2477,call_2481,const_2480,call_2488,])
func_2494 = relay.Function([var_2452,], output)
mod['func_2494'] = func_2494
mod = relay.transform.InferType()(mod)
var_2495 = relay.var("var_2495", dtype = "uint8", shape = (112,))#candidate|2495|(112,)|var|uint8
output = func_2494(var_2495)
func_2496 = relay.Function([var_2495], output)
mutated_mod['func_2496'] = func_2496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2208_call = mod.get_global_var('func_2208')
func_2210_call = mutated_mod.get_global_var('func_2210')
call_2524 = func_2208_call()
call_2525 = func_2208_call()
func_1085_call = mod.get_global_var('func_1085')
func_1087_call = mutated_mod.get_global_var('func_1087')
var_2532 = relay.var("var_2532", dtype = "float32", shape = (1690,))#candidate|2532|(1690,)|var|float32
call_2531 = relay.TupleGetItem(func_1085_call(relay.reshape(var_2532.astype('float32'), [1690,])), 0)
call_2533 = relay.TupleGetItem(func_1087_call(relay.reshape(var_2532.astype('float32'), [1690,])), 0)
func_1986_call = mod.get_global_var('func_1986')
func_1989_call = mutated_mod.get_global_var('func_1989')
var_2537 = relay.var("var_2537", dtype = "float64", shape = (108,))#candidate|2537|(108,)|var|float64
call_2536 = relay.TupleGetItem(func_1986_call(relay.reshape(var_2537.astype('float64'), [2, 6, 9])), 2)
call_2538 = relay.TupleGetItem(func_1989_call(relay.reshape(var_2537.astype('float64'), [2, 6, 9])), 2)
uop_2541 = relay.exp(call_2536.astype('float32')) # shape=(2, 6, 9)
uop_2543 = relay.exp(call_2538.astype('float32')) # shape=(2, 6, 9)
output = relay.Tuple([call_2524,call_2531,var_2532,var_2537,uop_2541,])
output2 = relay.Tuple([call_2525,call_2533,var_2532,var_2537,uop_2543,])
func_2544 = relay.Function([var_2532,var_2537,], output)
mod['func_2544'] = func_2544
mod = relay.transform.InferType()(mod)
var_2545 = relay.var("var_2545", dtype = "float32", shape = (1690,))#candidate|2545|(1690,)|var|float32
var_2546 = relay.var("var_2546", dtype = "float64", shape = (108,))#candidate|2546|(108,)|var|float64
output = func_2544(var_2545,var_2546,)
func_2547 = relay.Function([var_2545,var_2546,], output)
mutated_mod['func_2547'] = func_2547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1498_call = mod.get_global_var('func_1498')
func_1499_call = mutated_mod.get_global_var('func_1499')
call_2577 = relay.TupleGetItem(func_1498_call(), 1)
call_2578 = relay.TupleGetItem(func_1499_call(), 1)
output = call_2577
output2 = call_2578
func_2579 = relay.Function([], output)
mod['func_2579'] = func_2579
mod = relay.transform.InferType()(mod)
mutated_mod['func_2579'] = func_2579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2579_call = mutated_mod.get_global_var('func_2579')
call_2580 = func_2579_call()
output = call_2580
func_2581 = relay.Function([], output)
mutated_mod['func_2581'] = func_2581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1777_call = mod.get_global_var('func_1777')
func_1779_call = mutated_mod.get_global_var('func_1779')
call_2662 = func_1777_call()
call_2663 = func_1777_call()
func_1498_call = mod.get_global_var('func_1498')
func_1499_call = mutated_mod.get_global_var('func_1499')
call_2679 = relay.TupleGetItem(func_1498_call(), 1)
call_2680 = relay.TupleGetItem(func_1499_call(), 1)
output = relay.Tuple([call_2662,call_2679,])
output2 = relay.Tuple([call_2663,call_2680,])
func_2681 = relay.Function([], output)
mod['func_2681'] = func_2681
mod = relay.transform.InferType()(mod)
mutated_mod['func_2681'] = func_2681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mutated_mod.get_global_var('func_2681')
call_2682 = func_2681_call()
output = call_2682
func_2683 = relay.Function([], output)
mutated_mod['func_2683'] = func_2683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1900_call = mod.get_global_var('func_1900')
func_1902_call = mutated_mod.get_global_var('func_1902')
call_2760 = relay.TupleGetItem(func_1900_call(), 0)
call_2761 = relay.TupleGetItem(func_1902_call(), 0)
func_2347_call = mod.get_global_var('func_2347')
func_2348_call = mutated_mod.get_global_var('func_2348')
call_2765 = func_2347_call()
call_2766 = func_2347_call()
func_1833_call = mod.get_global_var('func_1833')
func_1834_call = mutated_mod.get_global_var('func_1834')
call_2768 = relay.TupleGetItem(func_1833_call(), 0)
call_2769 = relay.TupleGetItem(func_1834_call(), 0)
func_2544_call = mod.get_global_var('func_2544')
func_2547_call = mutated_mod.get_global_var('func_2547')
const_2783 = relay.const([-0.725322,-3.665374,3.515855,-3.191474,-0.581448,-0.884594,-3.502836,-8.932511,-4.610637,-7.887891,-4.865252,-5.994159,8.928441,5.795922,-7.039049,-1.424183,5.928952,-9.242930,3.896596,0.169822,-7.296919,-6.896042,4.527123,0.716098,2.491515,4.614084,7.952133,1.737716,-3.286782,8.491279,-9.221842,2.531861,8.383446,-3.243734,-6.412404,-2.047036,2.624191,2.832466,-2.971727,-7.619067,5.273578,2.694477,9.448824,5.531169,1.900711,-8.832567,-7.697059,4.268082,8.277473,-2.587819,-3.394041,-4.893740,-2.772517,-7.964303,-0.165721,-9.510908,-3.751303,-6.197612,-8.962767,1.128943,3.149716,7.551724,6.424682,1.547015,-0.630457,9.480937,-2.856575,-1.297069,3.491168,3.798161,-1.901768,6.272888,7.201902,-8.544260,0.803852,-2.656739,-5.155733,-4.898451,-5.225033,-1.918485,-7.669313,7.944160,-3.713487,6.251030,-2.624441,8.673485,-2.582603,-4.776051,1.262793,8.128403,-6.345969,1.688472,-9.480636,2.234076,8.548703,4.427316,8.943139,-8.449722,1.603663,0.295594,0.771449,-1.380283,-3.551204,3.414351,4.775535,-4.501946,-9.278562,-8.325884,-1.261403,-9.287756,-0.306512,1.673566,-9.738381,0.199815,4.982732,-8.687308,4.296597,-5.078042,7.629037,6.873794,-7.685429,-7.239060,4.499128,2.573524,-9.518187,0.960052,-8.261179,-5.306596,2.973179,-6.173574,5.444723,2.047369,2.272553,-0.340450,0.982223,2.725238,8.734227,8.598780,5.407004,-9.593516,-7.516200,-0.395312,-4.229017,2.834350,-9.863473,-5.331963,-7.509906,-3.655128,2.386504,-1.539798,7.652916,4.170734,-5.870373,1.078727,2.062132,6.187013,-4.409601,-8.261024,6.053183,-3.266971,5.402305,4.354424,-3.963403,2.396817,-9.970839,-1.728926,-8.608617,-4.556809,-0.430120,-0.552601,-2.604590,4.618187,2.838927,9.530277,-8.858399,-2.152602,5.601866,6.346417,5.330342,7.824420,7.607636,8.311863,4.699103,-1.391258,-8.363806,-8.792505,-0.910403,0.436851,8.253127,-5.589618,-1.758957,-3.360826,-1.080407,3.283925,-5.095687,8.433021,-0.251772,4.330442,4.203391,-7.258734,-2.543528,-4.291342,-4.218272,-6.355532,-4.751256,7.473496,5.960423,-4.575710,-9.607397,-9.291369,7.492171,-9.396782,-7.011851,4.832012,2.946863,5.606797,-6.128839,-0.510500,6.759021,2.033307,-6.594177,-0.158400,-2.300002,3.294929,-8.709405,1.827319,-5.143607,-0.872041,-3.983186,-0.485408,3.117702,1.831597,5.514837,-9.281801,6.120068,-0.778420,7.763606,3.803808,-0.165313,-4.860564,-0.413139,-9.119342,0.450174,-6.392785,-6.435461,2.172865,-7.678018,-4.799571,-0.840262,0.381291,-6.682555,6.632268,-5.278771,5.896986,-2.754038,-7.678842,6.486506,0.582105,6.576283,-0.252598,-4.131849,7.902288,7.959328,-9.000713,-7.158765,0.266412,6.792042,-9.162952,9.087693,-2.386345,9.835594,5.928700,3.789898,6.395628,-1.757768,8.183117,9.079143,2.077244,-7.972782,5.701392,0.689009,3.882860,5.835966,3.226281,0.266020,-0.011265,-1.514358,0.295715,-4.361982,-5.872412,1.737503,9.179206,-8.421025,4.734105,-1.704515,2.935162,7.591282,0.700168,4.352432,7.961235,-4.631533,9.777923,9.173171,6.564720,-6.204137,-4.396001,9.135557,-9.340573,4.776616,-9.954960,-3.322022,6.876020,-3.683976,9.632044,6.898919,-9.797579,-9.574040,-0.695072,-6.583022,-9.415826,2.156101,-8.081851,-1.428929,-4.172148,-5.297756,-3.268965,5.755376,-1.656333,-8.104427,1.727063,6.945303,9.927116,8.412911,7.467348,3.611163,-9.717149,9.874458,8.598862,-7.781533,3.313706,-4.637719,6.604660,7.756157,2.058086,0.399622,-7.994883,-0.973391,4.663620,7.847968,-8.577749,-7.732684,-2.980559,8.843170,7.142647,1.926857,4.303725,-0.951476,1.435355,-6.115153,7.758969,1.656052,-9.093858,-0.148918,-2.878329,8.903751,-1.722478,9.030020,3.889158,0.053346,-0.866018,6.709437,-4.108803,0.590311,1.062361,1.514499,5.028808,-5.996978,-4.348883,8.802470,1.330578,4.840564,-6.341143,-2.187716,-7.044212,9.447357,-6.482377,-9.573616,-3.732586,8.042246,1.474182,0.523202,3.496510,1.849916,-5.755681,-8.711504,5.474617,0.483160,9.801406,9.929164,0.188244,-4.499695,3.124587,4.699944,-6.406468,7.390375,8.627861,6.990777,1.141753,-6.849579,0.161555,8.337429,7.830263,5.276493,-8.868462,-0.063544,6.944424,5.366556,4.290090,-1.629540,3.771136,8.863015,-6.175974,-2.669505,0.284042,1.639269,9.562866,9.220441,-1.192995,9.281442,2.114650,-8.474771,8.044314,0.085725,-1.726641,-9.474383,-1.472319,-5.027071,-5.747477,-7.893384,-5.429814,0.513831,-2.732241,-5.869317,9.731896,8.812906,5.562949,6.075826,7.427342,3.921312,-0.906605,-5.659866,0.735833,-0.261992,6.415611,-5.145354,-2.177859,4.644018,-6.000364,6.669666,-9.490355,2.421709,7.851427,-3.198230,8.763048,-6.195164,1.532572,-2.231411,-6.873965,4.218007,7.584073,1.753250,3.458220,-3.291774,-9.538945,4.366636,-1.029827,-5.378828,3.652975,9.164478,-2.623254,-5.970123,-2.690677,-5.377322,0.716545,-8.170787,3.442962,2.272611,-3.865251,1.363185,2.067237,0.079828,0.455344,6.042853,-5.456153,8.840739,4.426198,8.003547,4.139138,-7.950841,1.555386,2.236311,-3.918178,8.391628,9.051045,0.354577,6.779299,-9.574045,-6.156815,0.880008,-6.366473,3.590191,-7.298328,0.233115,-0.347358,3.402519,-7.763513,5.702013,8.747563,-2.994192,8.186663,5.662060,-9.540204,0.443584,-9.014579,-4.694944,9.552738,-4.190842,-4.983203,4.400003,3.695237,-3.758481,-5.291883,-6.952528,-5.847498,-9.595409,-0.462802,-1.599572,3.632296,0.233063,-1.813141,3.244280,4.481730,0.805950,2.350472,-5.810525,4.983217,5.625850,-3.726565,8.533952,-7.396949,-7.845638,-5.406507,9.311681,-5.367686,8.822239,-7.360018,3.518467,-4.435765,6.948672,2.724476,-9.010033,-0.479814,-3.940758,0.623929,7.992860,6.800678,-0.828377,-9.099303,-9.894475,-7.733869,3.530433,-5.060069,-5.809681,-1.616381,-0.667823,1.093905,-4.863588,-7.043272,6.835731,1.971329,1.691493,-9.443289,-7.647453,-3.450779,-4.848341,-1.113455,6.192615,-8.868592,8.890794,-5.508618,-7.164912,-0.113335,2.952233,-8.269949,-1.418255,-1.548478,-4.494686,9.707048,5.267853,5.549194,-4.434077,-1.849540,-6.201954,3.315511,8.199495,-3.893559,3.256835,-5.487139,2.739639,0.272431,-6.183080,-6.061849,7.775891,6.270802,5.461817,-3.139786,-9.674951,9.934586,9.349449,-8.235643,-1.178509,-3.981647,6.953905,6.546813,7.939094,-2.659042,-9.944970,1.404927,-6.066738,-0.500870,9.141051,9.012035,7.631360,9.533213,9.622154,4.688780,-3.448796,-3.197987,7.108256,-5.990219,-3.259045,-2.544134,4.279353,-5.516722,9.964932,7.367176,0.553920,-7.048087,-5.463253,9.897728,-0.794525,4.901198,3.401118,-6.284650,6.966695,4.961709,-7.897796,-9.389233,3.607629,8.648229,-2.728903,-2.859712,-2.047964,-4.745287,-3.389166,-5.650833,4.250670,5.529959,5.750523,6.093343,-7.378052,8.363098,-3.619774,2.898059,-6.235342,-4.773634,1.925686,8.753910,-4.822769,-0.056336,2.692982,1.034611,7.699918,7.208430,-2.871714,7.403160,-5.514067,4.554384,1.591082,-8.644823,-6.077043,-8.360873,6.117826,0.669962,3.241950,-0.993549,-4.580144,6.552049,-5.719955,4.335907,1.488240,-3.795934,6.950005,1.218814,-5.729824,-6.664694,-4.927419,-1.064671,-0.769854,9.973965,-0.271925,9.498772,4.834258,-5.295628,3.685252,3.368668,-9.776261,-5.536186,4.258868,-9.230064,-8.766671,-2.140083,1.147834,-7.735802,-5.837885,-9.898180,-4.581465,-2.791117,-1.628240,1.978768,-0.796156,1.802980,-4.502531,-0.099431,3.955701,6.988067,1.199544,-9.547113,7.472932,5.975053,9.441214,-1.688685,5.320972,6.785378,6.082291,8.224837,0.974144,-4.486788,6.953530,-0.218240,-8.619559,-9.327344,4.329233,-9.116131,9.923432,3.351352,1.600896,-3.276307,-9.755540,0.530544,9.913410,2.443995,6.143544,-2.151121,-3.530203,3.491158,2.640912,-8.132491,-7.088622,8.658529,-1.909453,-3.770534,-5.305891,-7.699447,9.379414,-6.335234,0.556415,0.058480,5.410919,0.419931,-1.546248,-8.841455,-5.707460,1.360893,-7.224840,-4.474316,2.731773,-8.946714,-6.400709,-0.962337,-7.064130,-0.006758,-8.233309,-4.390254,2.127109,0.989742,-5.262541,4.862085,-0.262293,-9.727699,0.162738,-2.574208,9.432357,-0.089470,3.169533,5.866824,8.893260,1.050790,-4.948305,-9.320584,5.218949,7.302461,0.354707,-6.185568,4.826855,-5.688976,-6.688391,6.515183,-9.574295,7.979515,-2.551765,7.332962,-1.679575,0.061076,3.450004,-2.526115,3.153347,-3.902392,0.182407,7.280156,6.482829,1.187164,-1.685415,-3.993264,0.466548,-7.181366,-8.499034,1.885417,9.412493,0.567959,-6.573286,5.283249,-1.968221,0.955810,1.506229,-9.105310,-1.760998,-3.662864,6.283395,2.737598,-1.857953,-4.597243,-1.823503,5.840688,2.212245,-6.310550,-9.134863,0.942712,5.810984,-7.451316,1.969988,-8.625749,1.489385,-3.292554,1.966853,0.034881,-3.326733,-1.306687,0.322774,-9.046458,7.808233,5.666394,-2.676693,-9.107537,1.114517,-0.891617,3.678884,-3.825554,9.268753,6.945895,3.604987,-9.518273,7.560331,-0.099178,-9.718530,0.691310,8.590169,-1.739793,4.707888,2.740434,7.174615,-9.400148,-0.462135,2.655142,6.821287,-9.069266,9.336945,-1.585002,-9.297437,-1.629878,0.775146,-6.407554,-7.147092,0.110365,6.273621,-8.267722,-5.668395,2.261112,9.236938,8.450587,-2.369251,4.373072,-6.439987,-5.681857,-7.486216,-5.410596,-4.767943,-0.421012,4.448389,-3.894957,0.532900,8.470589,7.934085,-7.361869,-3.113228,-6.368971,-7.395922,-5.919444,3.586917,0.590544,3.636439,-3.697611,-9.428525,-2.320641,-5.606318,-5.439055,3.381449,4.596235,-5.243710,-6.200594,6.640977,4.639168,-8.873362,5.527518,-0.124353,-0.837807,-2.121748,0.904775,8.568469,-0.416281,1.804419,1.332676,-2.677512,8.160612,3.222812,4.840881,-8.405819,-9.736595,3.325521,0.415056,-4.588027,6.688669,-9.771718,2.756816,1.608740,3.568773,-8.816370,5.428284,1.761848,8.672423,-7.283084,-5.317567,-7.819742,-3.830906,-2.735660,2.802683,4.281512,4.821613,-4.098198,5.396071,-3.779748,-4.930105,-6.852604,0.078355,-1.247679,-9.880778,-6.179066,-7.068378,6.178024,-7.571894,-0.021202,-2.533926,-6.656458,4.984446,-6.409326,-9.729273,1.696505,7.959234,7.788249,5.235048,9.743834,-7.760393,-3.482409,-7.289063,1.198637,7.466467,1.787929,3.953328,7.916908,-0.226904,-5.441364,-4.126631,2.939544,4.982271,5.978629,-5.631713,-7.202397,-7.653477,8.490449,-6.737424,6.218489,-5.366687,5.963279,-7.295994,-9.026520,-0.004771,-8.097282,-2.733844,-0.235110,-3.932666,0.348090,-9.368031,2.287380,-5.756285,-2.425909,-2.677327,0.935937,-7.569807,-9.810943,5.063476,2.150526,2.184996,3.371728,2.642700,6.097224,9.781419,-6.062388,-6.330551,-4.557940,0.183519,1.055121,-6.366889,-0.607459,3.730430,4.866562,-9.764308,-4.518675,-5.420988,6.536166,1.795156,2.485524,3.498717,9.650058,-5.813803,0.473803,-8.560410,9.307115,6.078347,7.276553,-0.567051,7.350854,1.786044,5.804050,5.877926,1.342674,5.761582,1.934019,-5.926514,0.032473,-6.938214,-5.281857,2.278965,8.738680,-5.045799,-4.413112,-9.679658,1.193721,3.956901,1.222597,7.737177,-5.179652,-3.003845,-9.148155,-5.712715,5.761187,-5.672159,4.054085,2.169388,-7.483486,6.640612,-4.293401,-5.789511,3.096363,-4.651923,1.549263,9.585760,8.650612,6.596580,-3.761840,8.063648,2.001534,-9.213967,9.621812,8.144665,7.653578,-6.270080,-7.900873,7.415329,4.776057,9.272484,3.397706,-8.544148,-6.179444,-5.541845,7.548331,-5.524814,8.052537,1.407681,-4.863633,-0.146972,1.606914,3.924598,-1.845076,5.942645,1.210659,-1.052152,2.006625,0.435380,-9.116564,-6.396728,5.017413,-7.640919,3.354966,5.336850,0.150785,9.010519,3.480953,-3.537077,9.195489,9.241534,-3.301512,-3.770658,-8.373291,9.678551,8.417899,-1.021634,-3.093683,-0.221784,-3.993258,0.701028,3.215605,-8.790843,-8.155438,-7.665633,-6.120373,-8.360362,9.441039,-0.451939,-5.071537,8.192480,9.084391,-1.577654,-7.993251,-8.669638,-0.404141,-3.921519,-7.449664,-5.292988,-8.600204,5.891741,-1.390231,6.403041,-6.437957,3.548279,-6.849851,-8.369454,-0.722516,6.506774,9.667088,2.127512,-6.407617,-7.600996,-1.315379,0.297329,0.405314,4.835209,-9.638038,-9.573913,-5.499273,5.008601,-6.839135,7.313255,-9.564894,8.327726,-7.685776,9.011078,6.870162,6.531987,5.731664,-1.405808,1.221709,-0.026023,-8.755765,-0.389830,0.442037,8.178846,-2.610343,-0.616323,-5.870970,-8.831819,0.035429,0.008188,6.559250,-6.283082,9.609857,-5.517467,4.632702,-7.303683,1.009189,-0.210208,-2.967445,-1.839585,-3.848691,5.414575,-0.536326,5.259629,8.375373,-7.293921,-0.054300,5.346399,6.576333,-8.980219,7.076395,0.799430,-8.956995,2.400173,3.651361,5.135378,-8.187990,-5.677221,-3.239622,-8.405055,-5.236626,8.483321,-0.785387,-0.754608,-9.905797,-4.463833,1.272650,-7.376788,3.550056,-6.044650,2.644381,9.040124,-6.726070,-6.439166,8.696828,5.586515,-3.872306,-9.716931,0.199567,-8.096986,-4.689921,0.227247,-2.441665,5.477735,0.667723,2.708540,1.328774,4.752034,-5.029298,-8.908480,-8.607446,-5.272387,-3.710732,9.156258,7.433716,8.281710,-8.485022,-7.396492,-5.253370,7.977238,2.056038,-2.429057,3.035270,1.524840,-2.106706,0.065849,2.175662,9.580914,8.626852,8.377817,-3.244038,-4.616809,-0.411362,-3.350147,-6.916223,-9.642407,-0.277602,-4.972189,-5.086472,0.392267,5.753527,-0.196119,-0.247550,2.419485,-4.831250,9.945148,0.590574,-6.291104,-8.277615,9.540193,-2.000331,-7.735314,-3.052195,-9.356438,-7.578373,8.042154,-2.140112,-1.976875,0.470119,-4.724115,2.579900,1.798009,2.632352,-7.039306,-4.565388,-8.007831,3.887477,4.238897,2.869968,3.638273,3.543765,-1.955261,-4.911156,6.106598,-3.943939,7.375282,7.015025,-7.540635,-2.721873,-8.874076,-5.336492,9.195607,2.763072,-1.349942,-0.395757,9.439811,-0.414321,-6.479361,-6.296467,7.785998,7.239453,-2.221921,3.858581,-9.568980,1.627330,-5.784100,8.746339,-0.263486,-0.574061,-1.543943,-9.825772,-8.621257,2.911711,4.120789,-4.958377,-0.648905,6.439354,-8.280423,4.104083,7.287310,2.319987,4.547295,3.475079,-1.990901,-9.989280,7.349445,-7.566803,7.558147,-2.380646,6.857738,5.378098,-9.843902,0.244696,8.962525,0.806395,9.540646,-3.111785,-1.168284,-9.848894,9.095789,3.693149,0.399986,6.466783,1.408185,3.083215,-4.571904,-0.378697,-0.195273,-8.834957,-1.891167,-1.872644,-9.866545,-9.480075,-8.075709,0.622051,4.508569,-1.346581,-7.814439,-4.894286,6.146704,8.967586,-0.600857,4.591441,6.786175,1.559137,4.876551,4.123058,-6.047560,-9.249617,9.569611,9.440211,-4.439691,6.484176,7.961460,-2.786169,-4.929682,-4.623799,4.157090,7.691581,2.826391,1.464884,-9.322614,1.852814,-1.596717,5.865604,9.334951,1.839751,4.910828,5.804249,-5.672732,8.876824,1.706501,3.467148,8.657538,5.619136,9.854595,-2.744983,4.346612,8.544726,9.812411,1.204313,4.440580,5.799738,-8.783281,7.580668,-9.453213,0.088923,-4.547140,9.664874,4.663989,8.094209,5.651885,-9.156315,0.297687,-3.265919,-4.787016,1.214396,-8.121498,-1.432189,5.566424,6.181003,9.345839,3.504340,-8.976022,1.583493,4.713971,-3.804233,-5.545730,-2.369761,-5.142223,9.640644,-5.587660,-1.347097,2.303346,6.893511,-8.764776,-7.738328,3.077549,-9.202634,-0.040037,3.746239,-0.773250,-4.644834,-4.832063,-7.662855,-0.521825,-1.754568,-8.265719,6.934888,4.505793,9.376756,-8.824928,1.801481,0.918253,0.141184,-4.920383,-4.192226,-8.454317,6.001805,5.711530,-9.507012,6.611700,-8.631290,2.900647,6.319470,3.299399,0.553195,2.925117,9.851385,-2.353937,-2.799683,-8.247382,2.387565,-5.833945,6.673421,-9.113326,9.968513,-3.905619,8.159680,4.510559,1.562249,4.897185,-0.389432,1.961000,-9.000294,-4.499079,-9.173914,9.808325,-7.349850,5.068940,8.297160,2.071518,8.356369,-8.636191,0.396299,-7.036796,-1.580358,6.296072,-8.236000,0.743773,-7.795974,8.200125,-5.563699,-5.992666,-9.478183,-7.679085,9.270949,-0.631156,-7.780326,-9.582798,1.740152,-3.994968,-8.036429,-5.712585,-9.273921,1.267850,-1.415231,-1.247518,9.710252,3.151104,-4.502929,7.904061,4.202988,-2.769801,4.703435,9.745102,5.141913,-2.522469,-6.190841,-6.092439,-4.337185,6.381582,4.213071,5.498475,2.520726,-4.378357,6.985916,9.405180,-5.696961,-1.486536,-4.343635,-6.350917,9.305480,-2.515685,7.610326,-7.619263,-3.995367,-7.920910,4.865073,2.741311,-2.734140,-8.121367,1.093492,-9.733793,-8.707897,7.368240,0.731825,-1.892504,0.691330,-0.886149,-6.733158,-5.229096,-9.981754,-2.666418,1.734224,-8.565794,3.939236,2.453955,8.581057,-5.461958,-8.707258,-7.581582,0.702290,-1.362211,7.061742,-7.092098,0.361253,2.673153,9.587877,-6.944745,1.663580,6.518145,8.263836,1.923372,-1.802681,-3.818118,-4.235820,-1.864150,-0.254975,-3.615427,9.282915,5.251895,8.309042,3.143562,-3.042612,1.457528,-1.090669,-6.476209,2.867792,-3.800434,-2.054456,-7.852989,-0.140105,-6.176435,7.932880,-5.613393,6.051667,-6.870264,-8.799682,-1.970340,1.521842,-0.557576,-2.062566,9.673671,1.515914,4.138314,0.799470,-0.454266,4.178412,-6.409607,1.221699,9.619296,-9.609439,1.955975,4.083511,7.077103,-8.684386,7.394296], dtype = "float32")#candidate|2783|(1690,)|const|float32
var_2784 = relay.var("var_2784", dtype = "float64", shape = (108,))#candidate|2784|(108,)|var|float64
call_2782 = relay.TupleGetItem(func_2544_call(relay.reshape(const_2783.astype('float32'), [1690,]), relay.reshape(var_2784.astype('float64'), [108,]), ), 3)
call_2785 = relay.TupleGetItem(func_2547_call(relay.reshape(const_2783.astype('float32'), [1690,]), relay.reshape(var_2784.astype('float64'), [108,]), ), 3)
bop_2793 = relay.power(const_2783.astype('float32'), call_2765.astype('float32')) # shape=(1690,)
bop_2796 = relay.power(const_2783.astype('float32'), call_2766.astype('float32')) # shape=(1690,)
bop_2797 = relay.mod(call_2782.astype('float64'), call_2765.astype('float64')) # shape=(108,)
bop_2800 = relay.mod(call_2785.astype('float64'), call_2766.astype('float64')) # shape=(108,)
output = relay.Tuple([call_2760,call_2768,var_2784,bop_2793,bop_2797,])
output2 = relay.Tuple([call_2761,call_2769,var_2784,bop_2796,bop_2800,])
func_2801 = relay.Function([var_2784,], output)
mod['func_2801'] = func_2801
mod = relay.transform.InferType()(mod)
var_2802 = relay.var("var_2802", dtype = "float64", shape = (108,))#candidate|2802|(108,)|var|float64
output = func_2801(var_2802)
func_2803 = relay.Function([var_2802], output)
mutated_mod['func_2803'] = func_2803
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2839 = relay.var("var_2839", dtype = "float32", shape = (9, 1, 14))#candidate|2839|(9, 1, 14)|var|float32
uop_2840 = relay.acosh(var_2839.astype('float32')) # shape=(9, 1, 14)
func_71_call = mod.get_global_var('func_71')
func_74_call = mutated_mod.get_global_var('func_74')
var_2855 = relay.var("var_2855", dtype = "uint64", shape = ())#candidate|2855|()|var|uint64
var_2856 = relay.var("var_2856", dtype = "uint64", shape = (60,))#candidate|2856|(60,)|var|uint64
call_2854 = relay.TupleGetItem(func_71_call(relay.reshape(var_2855.astype('uint64'), []), relay.reshape(var_2856.astype('uint64'), [5, 12]), ), 0)
call_2857 = relay.TupleGetItem(func_74_call(relay.reshape(var_2855.astype('uint64'), []), relay.reshape(var_2856.astype('uint64'), [5, 12]), ), 0)
output = relay.Tuple([uop_2840,call_2854,var_2855,var_2856,])
output2 = relay.Tuple([uop_2840,call_2857,var_2855,var_2856,])
func_2862 = relay.Function([var_2839,var_2855,var_2856,], output)
mod['func_2862'] = func_2862
mod = relay.transform.InferType()(mod)
mutated_mod['func_2862'] = func_2862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2862_call = mutated_mod.get_global_var('func_2862')
var_2864 = relay.var("var_2864", dtype = "float32", shape = (9, 1, 14))#candidate|2864|(9, 1, 14)|var|float32
var_2865 = relay.var("var_2865", dtype = "uint64", shape = ())#candidate|2865|()|var|uint64
var_2866 = relay.var("var_2866", dtype = "uint64", shape = (60,))#candidate|2866|(60,)|var|uint64
call_2863 = func_2862_call(var_2864,var_2865,var_2866,)
output = call_2863
func_2867 = relay.Function([var_2864,var_2865,var_2866,], output)
mutated_mod['func_2867'] = func_2867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1551_call = mod.get_global_var('func_1551')
func_1552_call = mutated_mod.get_global_var('func_1552')
call_2881 = func_1551_call()
call_2882 = func_1551_call()
func_1498_call = mod.get_global_var('func_1498')
func_1499_call = mutated_mod.get_global_var('func_1499')
call_2884 = relay.TupleGetItem(func_1498_call(), 1)
call_2885 = relay.TupleGetItem(func_1499_call(), 1)
func_1225_call = mod.get_global_var('func_1225')
func_1227_call = mutated_mod.get_global_var('func_1227')
const_2890 = relay.const([[0.670416,-2.497005,-5.172940,-0.631210,9.874332,5.910516,-1.250465,4.013138,1.843240,-1.011410,9.960570,-5.403038,-3.832499,8.817140,-9.069162,-4.922972,7.784805,7.424105,-6.503930,-1.009304,-0.512697,7.524556,6.885766,6.497049,-4.339739,8.754235,-7.998470,-4.040205,-6.328733,1.268962,3.766705,-7.715064,4.353154,-2.755474,5.083298,3.453185,-2.960560,-7.454840,2.919040,-1.986293,6.211508,9.079261,-8.842398,-2.949352,-8.993020,3.941514,5.306713,-1.128846,8.411836,6.604730,3.492799,-6.587613,7.727329,4.097035,-3.554203,-6.440031,-2.012472,-2.238411,-7.817526,8.706448,-9.523193,-6.201029,-0.913030,-2.632806,-0.274665,-6.848618,-4.786716,2.934591,0.118214,9.875389,3.078630,8.306444,6.189527,-8.044092,-4.252639,-9.694328,-3.084568,7.074917,8.907707,4.853836,0.479695,-2.246729,-0.468492,3.158682,-9.978366,-0.623514,3.847617,4.615413,6.797343,-5.520346,8.905155,-8.753333,7.012935,-8.328174,-5.631640,-1.627032,4.146465,6.264172,3.765934,2.517646,1.168197,7.170159,0.649585,-0.607701,-4.130311,7.450949,3.018660,1.569901,9.166155,-3.284736,0.016648,0.157003,4.741062,0.463793,3.643158,-7.323528,-4.524894,7.864748,8.271735,-1.197359,-3.510343,5.860204,0.716735,6.434115,9.186198,-1.129686,-5.440994,7.241881,6.748593,-4.031171,-9.250221,5.353687,-5.009176,-5.106466,-7.475341,2.692876,-3.648322,1.406868,-9.498620,-2.439802,-6.012106,-3.841772,-5.851130,-1.118654,-3.475490,6.007174,5.339530,4.390730,4.198891,4.810022,-9.688256,0.101331,-2.660384,1.824348,4.230632,-3.448988,-3.318929,-4.340550,-1.650794,-8.554471,-7.649233,3.225727,7.016934,9.768513,1.427834,-5.990959,-5.870399,-4.540441,-3.764118,5.418639,-7.983934,7.045579,-9.685898,8.219719,-4.852439,-2.611485,1.130679,4.254829,-6.201033,-6.096091,9.189872,-9.741033,-1.058930,-1.674411,-3.262638,-3.671033,8.866397,0.831631,2.814210,5.961303,5.766173,-0.472271,9.679248,1.185345,3.414480,3.804499,-8.797835,-5.061398,3.221425,-7.436672,-7.020365,-7.093156,-2.540682,1.813568,-5.005504,-9.777524,-9.650846,4.195913,-1.563167,-3.879128,-9.594472,-8.207174,0.596145,7.720821,-6.128554,-0.627540,-0.109209,-3.937571,-4.615144,-3.588697,-8.039654,-2.578191,-1.892814,2.969972,-4.250159,-9.143080,4.160350,-8.344245,2.485118,1.166355,2.710103,-3.274436,-7.218573,-9.824033,-1.194863,-6.974066,6.573472,-4.375498,-3.559682,-1.599917,1.168600,7.226428,-5.727539,7.982717,0.422480,8.543328,-7.956160,-1.004829,-8.739039,7.241598,2.986213,-6.900125,8.582347,-3.174841,-8.759724,-4.356736,7.003164,-6.620819,5.967698,4.533306,9.643843,8.347515,-9.560971,-3.549963,9.793077,-0.014249,9.387056,0.772740,2.240994,-8.872672,5.510008,0.733619,-4.070181,-9.731972,3.492032,-6.222507,-4.434833,-3.802163,4.846104,8.348366,-9.972521,-9.715616,-1.979864,-5.828445,2.670820,7.200833,-8.286398,-7.747765,7.691301,-2.803291,-4.214223,9.984194,2.048021,-5.122201,-5.942083,1.381100,5.680613,9.874030,3.081857,5.942226,-8.694799,7.844970,5.175900,-5.995309,-4.345199,7.571506,0.912628,9.860975,-5.758710,-9.570482,-5.363486,8.377645,0.616190,2.110279,5.507906,6.159024,-0.054747,-3.878059,-1.842857,-0.881424,5.689791,-3.058187,-5.958381,8.160726,1.962421,4.184672,3.776338,6.139272,3.146823,-5.472471,5.507865,0.905251,-5.449460,9.253776,-2.508881,-4.005685,8.556912,-1.949194,-8.778230,-0.472824,7.227447,5.881722,-7.987957,2.217086,-9.351885,-5.888723,-4.222957,4.518758,5.331224,9.409400,-7.585700,-6.116472,-4.438984,0.250196,-1.045183,-9.329756,3.726691,8.792443,-3.803051,-0.573992,-0.533483,-2.766545,-0.039796,6.018030,-0.123912,7.030367,-4.419563,-9.397078,-1.199281,-9.717362,6.463206,6.067843,-5.835246,8.117206,7.846222,6.586422,-3.609921,-3.773511,6.096622,8.128132,0.184643,-0.208492,-6.220194,-1.448315,-4.505510,3.531310,-2.273955,9.479499,6.190868,9.902532,-6.664548,-4.776174,3.363371,5.311939,9.330764,-1.206707,9.419610,-7.706556,-6.265686,-2.089559,8.588415,-0.393748,-5.678712,3.504833,-6.333027,0.754566,6.008489,-5.993807,-9.318359,-7.319800,-3.522919,-8.782262,9.573629,4.202462,-6.523647,3.770259,8.113911,5.003413,8.877709,-2.562211,6.316593,-0.845921,8.951841,9.881527,-5.236550,5.540248,3.420008,-0.702031,8.657849,-6.398629,5.623291,9.755986,8.612298,5.053195,9.960651,8.184261,0.195333,-7.525986,-0.532974,-7.790824,8.349736,9.481014,-6.504800,4.424793,2.722185,8.431159,1.754593,5.276561,1.047066,0.749314,-0.190196,3.558808,-3.707614,6.229886,-4.439192,3.662946,5.375751,-8.731272,-9.921523,5.929621,8.344512,7.604328,-9.337423,1.042425,2.607446,-4.826706,0.154007,7.313590,3.738795,-6.270799,-6.213867,7.210964,-9.693283,3.956937,-7.648835,-4.745412,3.310419,-0.221495,8.718823,7.470409,8.635480,-2.710237,-9.312108,-3.377467,-6.870848,9.740521,1.433996,4.721514,-5.050856,-6.802000,7.817645,-7.329059,-4.550718,-7.926139,-0.918175,-5.288488,-8.642020,0.816273,-8.652436,-5.659141,-9.902373,-6.726034,6.824726,-4.299026,-4.323121,-1.971745,8.371893,9.004012,8.424946,3.822675,7.645822,5.161057,8.152898,-4.902168,6.991671,-0.997124,-1.872041,5.588906,-8.628718,2.865718,-2.658953,0.139761,-4.370411,-1.985330,-0.463954,-5.351356,6.689319,3.412518,-5.181198,3.024596,0.449282,2.113896,-7.901199,6.600333,-5.683787,7.974770,-7.273273,8.405589,0.126443,-3.570862,8.646468,-4.856029,3.352440,8.370959,1.231329,0.034865,4.623232,9.150203,9.646918,-7.131503,4.507027,-6.201452,-7.576169,7.052962,0.859069,-7.466147,-1.256839,-7.434073,-8.994000,9.906072,-2.664003,-6.961939,9.366402,1.418530,-7.723644,9.374206,8.998248,2.888742,6.601340,-9.118547,8.564433,5.131195,4.982809,6.848304,-0.052614,2.413610,3.295236,-9.843337,6.347626,2.755563,6.774139,-9.396134,-2.466894,9.301431,-1.428575,3.742179,-7.569666,5.882098,-2.711953,0.070322,7.089714,5.843970,9.749385,8.955628,9.750113,-5.165031,8.751577,2.120063,0.169175,2.085483,-5.395868,0.364350,-8.210227,-5.396701,3.209210,8.159971,4.902972,4.262164,-7.618198,7.900885,1.639134,-3.141484,-7.323286,-5.901509,-7.836480,3.377983,-1.984004,4.234372,8.924028,6.256665,-1.874847,7.699681,1.915015,-7.249813,-7.291115,9.204659,1.243145,-1.700631,-4.382369,0.383402,4.891151,5.632928,0.513992,-8.318341,5.074046,8.859417,-4.182406,4.534187,4.415400,0.653369,6.594595,1.299470,-8.178688,0.871931,8.844122,-5.499904,2.274803,-4.368711,-3.508057,-0.585195,9.623423,3.948076,-1.860881,3.240330,-6.188636,7.720827,-8.378723,9.687539,5.223108,7.180785,3.669793,4.646513,4.571372,-2.410463,-2.779529,4.231252,-2.561386,9.645240,8.194331,0.589082,1.350173,-3.859667,1.233220,-0.884403,-2.570397,2.388910,1.765453,-3.349321,7.183588,7.545287,7.906982,1.026246,6.367557,6.782051,8.089018,4.394814,6.501391,-9.335611,8.302586,3.226784,-9.383413,9.789973,1.518599,9.989768,-4.021825,-8.633362,2.033488,-0.423821,-4.422086,-0.371127,-0.686071,-8.229307,1.924885,-1.628823,-1.656705,-3.221189,2.886130,-7.981210,3.032958,8.002632,-6.619655,-7.119007,8.224627,8.344586,-7.523754,4.655437,8.205278,-6.174480,2.600837,0.922953,4.835577,-8.414144,5.789847,7.795356,-0.556547,9.391726,5.144565,5.439469],[-8.479228,-6.270328,-8.234929,0.484114,-2.727516,-0.514551,-3.250978,3.568302,5.574335,-3.795239,-8.077708,2.071228,-3.117783,-4.401354,-5.898505,-0.262425,-1.124239,3.158899,4.651951,-3.541169,1.856387,4.631813,-7.008262,4.550728,-7.326238,-4.085962,8.633734,-7.559129,-7.026871,4.234790,-2.166310,9.710222,9.030993,8.050207,5.112031,-6.331986,-9.166155,4.471860,-8.920685,-7.825359,-8.341265,8.421500,-1.994889,-9.058416,-2.833002,-6.672798,1.806076,6.075163,-8.833812,8.062819,-6.432652,-2.238163,7.509653,8.327090,-6.052085,6.680137,9.864671,3.348650,-5.754561,-8.564779,4.350827,5.946190,9.619679,0.186836,9.883912,1.443362,-7.979666,-4.996698,1.537046,1.250925,3.795970,6.781399,-9.027420,-2.940662,-5.756107,0.731141,1.402232,-8.328722,-1.668088,0.674459,9.422341,5.170181,-4.724727,7.520897,-3.296250,-5.005610,0.464198,-7.205788,-7.083214,-8.287960,4.081141,-7.887833,-9.134525,9.296008,9.052878,-1.882354,-5.228684,-5.090605,5.935240,-1.992468,4.635186,4.923673,-7.311680,-5.789021,0.342604,5.749381,-7.053993,5.632040,8.411346,0.698063,9.000969,1.252309,-8.108995,3.301734,6.406748,9.664758,-2.558140,-7.771670,-2.937714,9.361136,1.464679,-5.691966,-4.707587,0.295874,1.077560,-5.086064,-6.618417,-2.026702,-0.105832,5.322652,4.018774,-6.320920,1.400319,7.216038,7.003512,8.682302,7.372679,-9.468702,-6.209882,2.946348,5.087619,-9.836600,7.742523,-7.015277,-6.433798,-2.825856,-4.267056,7.268690,9.663303,6.041477,4.281474,1.179269,-5.474043,4.026519,6.998718,-8.448821,-4.012547,2.301035,0.719456,8.220873,6.136968,-5.065888,-0.973974,4.725998,-3.499966,-9.673216,-6.838478,-5.904376,-8.239794,1.918274,5.633377,-7.190028,-2.176290,9.922419,2.060414,-3.964904,-5.243194,-4.137435,-0.751227,-3.598351,-2.215900,8.287191,8.206137,8.182953,5.511598,5.412147,6.014120,-8.786431,5.654570,5.687170,0.032264,2.526228,-3.011588,-1.641937,-7.331771,8.957376,-5.277906,2.573819,7.540541,9.234336,0.183138,6.808002,-4.906741,-8.890426,2.054223,-9.737257,9.923526,7.153884,7.311613,9.974799,-0.802206,-1.944887,3.624578,-8.527415,-6.960680,9.234483,3.743574,-0.276717,-5.530449,7.712363,0.168634,-6.179383,-2.176066,-6.480215,-0.030172,9.297668,8.084488,0.342665,6.773628,7.957128,7.179469,1.980803,8.423958,-6.914888,-1.739752,7.328904,6.532880,8.179888,9.897350,2.880469,4.105410,2.723917,-8.357894,9.986673,-0.347083,9.187759,2.455637,-4.809763,3.635813,-9.493054,3.432101,9.653812,-6.863407,-1.927358,-8.828133,3.313300,-4.634653,-3.943764,4.233745,-6.467287,-7.844988,5.046749,-9.348502,-5.981612,-8.824625,1.897062,5.919017,-5.900134,7.716645,3.049690,-9.683102,8.923119,8.108602,8.954616,4.053835,5.373235,3.690040,1.803962,-5.233759,9.710682,7.301600,-4.766635,6.596030,-3.364886,0.858920,7.363365,-0.933882,-1.104210,-4.549684,-6.214594,0.695707,-1.572639,-4.287270,-1.104484,9.339368,2.575651,4.510527,8.962894,-5.551829,1.846303,-4.505148,4.796016,-5.969148,-3.842196,2.829022,-2.362714,-7.624718,9.842644,4.381005,-4.838944,-3.885458,8.238586,3.771685,-7.259403,-4.370566,-5.717696,-9.968576,8.485973,5.561196,-5.135120,-1.418667,-4.118028,2.468101,1.970584,2.340716,8.137216,5.308311,5.286399,-3.734367,-4.528938,-8.613900,6.324543,-2.291053,2.647608,-3.526722,-3.589326,-5.281511,-2.919130,-1.489377,-0.111365,0.396804,1.334001,-7.351864,5.858568,0.546109,9.353154,-3.203212,-7.569142,4.069449,5.927759,4.829773,-6.885832,-4.224108,1.252645,-9.528893,-4.947941,-1.676844,-1.164095,0.079465,5.529454,2.359054,-9.125828,9.449962,-4.085161,-3.739631,-6.349345,2.120084,5.547370,7.721471,7.898558,6.013432,8.343867,3.679552,-7.121548,-0.435592,8.673404,6.131183,7.119053,8.159392,4.907317,0.653259,0.714332,4.629706,-1.575949,-2.166568,-1.048231,-3.999842,2.349410,-6.634869,-5.444997,9.701052,-7.714028,0.437645,8.197484,-1.310847,-0.769039,-7.270003,-5.349753,-9.918956,2.515053,-6.155816,-6.493496,0.236521,8.412167,-9.026782,-1.843934,2.328317,-9.864423,1.629017,8.327797,-4.187420,0.967352,-0.794809,-8.859011,2.005729,9.587298,-1.751317,-6.460422,3.420402,1.461073,8.635167,3.586029,-1.066197,2.106005,9.662143,8.513938,-6.650440,-6.504180,8.552183,8.760882,-2.856160,-0.611237,5.299404,7.218523,-9.702280,-9.636271,-6.923110,1.817756,2.104852,-8.528724,7.777730,-9.528122,2.018587,-4.893275,-0.566536,4.375952,-9.166560,4.129830,-1.079322,-1.437402,9.342967,-2.300459,-5.929929,-6.850725,-3.767183,-8.814387,0.071168,3.503263,-3.390468,8.506161,4.075276,8.006745,-9.024979,5.533577,1.107387,-6.008291,-6.654620,3.078926,-7.278654,-5.329987,-1.860811,-0.852083,-0.248778,-4.502862,-7.224240,4.411200,-9.356494,3.495976,0.380281,7.999271,3.378332,5.902118,-2.798069,-7.460014,-2.886147,3.596317,-3.279486,-4.104869,0.634105,6.486986,-4.207123,-7.307489,3.771496,-2.624856,-0.884812,-0.527162,8.608681,-0.752308,-8.379836,-1.831701,9.113398,4.939287,3.248526,-7.930906,5.905766,-5.138822,-3.949776,-9.310948,8.296607,-9.295648,5.032842,0.917973,-4.495962,-8.302745,-8.195452,-1.440315,4.918292,0.519044,3.730272,8.527104,6.273036,0.195898,-1.051519,-6.019019,-3.185462,-4.453623,2.152123,-5.103750,2.973661,-8.481937,3.543226,2.572354,-5.927083,3.982059,0.026583,-9.852939,0.266077,-8.556365,-7.112253,3.181249,-0.973246,-0.838392,1.824724,7.404987,2.347798,-0.466004,-7.924902,8.812410,3.732082,2.186623,-2.696901,9.832894,7.860129,0.947052,-5.403761,-5.800527,-5.440610,-2.755178,6.880057,-0.009954,1.296332,1.821652,7.837274,4.231043,0.374784,9.095301,-9.056750,8.861424,-8.664664,3.768743,5.816833,5.002387,-9.908422,5.878459,-3.881083,0.265654,8.255770,7.532280,4.179333,6.778202,0.015587,-0.683714,4.572488,6.845503,2.714867,3.415563,-0.978891,-1.348319,-7.028634,-4.060189,-1.460718,7.188567,-0.394566,-0.509002,6.854313,4.554432,-8.875199,-4.763220,3.908193,0.044510,0.831521,-9.542064,-0.093058,-4.147492,-6.279502,8.308634,-9.791520,-0.447423,0.194267,0.888945,-1.446199,-8.734565,-3.922090,1.031231,-8.469092,-5.134518,6.522152,-2.098078,-5.130096,-1.726189,9.997726,8.070671,-7.781655,8.309501,-3.695973,-2.197426,0.106772,3.804876,-5.872763,7.488459,8.772085,-3.484594,-6.541799,-3.789586,7.381265,-3.409440,-7.966374,4.665751,4.428334,5.582396,4.413048,5.898032,-8.486023,-0.753810,1.962008,5.938442,-8.705697,7.671092,-6.326703,9.417536,-0.168913,9.233297,7.836956,-8.583691,4.049540,-2.257368,1.529331,1.247961,-1.666683,-0.019696,1.419860,-0.718907,6.914241,5.607640,-6.302658,-0.467227,-7.253821,2.512402,-8.950517,-8.712821,2.807050,-3.389403,-0.900099,-2.318064,8.870870,-9.676644,2.011957,-7.149552,-8.827620,-7.558916,-1.498372,-8.328784,-6.473583,-8.975996,6.143472,-2.469249,4.430426,9.539612,-9.118539,-0.744330,4.737247,7.622321,-7.601124,6.213794,7.173357,2.986693,-7.539863,-8.075535,2.907821,1.234850,3.909411,-8.384817,-3.318829,6.548052,2.990738,9.903821,-0.822437,6.240583,-4.577880,-8.953815,8.591186,-9.865816,6.144459,-4.664201,7.759454,4.409083,-0.942450,-1.983940,9.278977,0.907568,7.518236,9.325777,4.872874,-7.455866,-1.500225,3.549026,-7.065110,2.152015]], dtype = "float32")#candidate|2890|(2, 728)|const|float32
call_2889 = func_1225_call(relay.reshape(const_2890.astype('float32'), [16, 7, 13]))
call_2891 = func_1225_call(relay.reshape(const_2890.astype('float32'), [16, 7, 13]))
func_2862_call = mod.get_global_var('func_2862')
func_2867_call = mutated_mod.get_global_var('func_2867')
const_2899 = relay.const([[6.440365,2.980163],[0.911501,-8.491275],[9.752165,8.577537],[-6.134144,1.299199],[-6.410646,-9.238916],[-1.137108,1.728405],[-4.645855,-5.357182],[-4.223663,8.067351],[5.824625,1.956594],[-0.655040,-9.856053],[-5.350093,-9.452412],[-9.770624,-6.694224],[4.834026,8.753426],[3.751216,-5.798178],[4.794811,-7.297940],[-3.611284,3.761704],[3.446837,-6.335296],[1.305997,9.144825],[-9.819913,-0.089278],[9.156844,-6.349911],[-5.048599,-3.148294],[-9.384906,0.623508],[6.668403,6.758838],[7.767232,7.476392],[-6.732112,-3.221029],[-5.153007,6.818547],[7.848606,-6.835832],[-8.652659,3.970627],[-0.936047,3.050393],[-8.397507,8.301657],[-3.338805,7.770042],[1.734905,-0.375242],[-1.219797,0.918658],[-7.624806,-8.968853],[0.918075,-1.003042],[1.468708,-6.067822],[-2.582533,-5.640804],[-3.927018,-2.819604],[4.492408,-2.753515],[0.722346,-5.207831],[3.244458,-8.376008],[-2.733375,0.432012],[8.740527,9.331224],[0.220591,1.553442],[4.229894,-0.935151],[0.223045,7.464205],[-7.335040,8.539229],[-8.719513,0.603913],[-2.877962,-4.823655],[-0.341650,-0.701620],[3.071540,-2.982073],[6.348973,-8.593250],[-6.551920,-3.691969],[-8.374623,-3.889587],[3.803183,-9.644908],[2.109192,2.888692],[0.336212,-7.801112],[3.354476,-8.443091],[-2.074013,8.396451],[-0.974120,0.796222],[-3.204427,-1.394882],[2.990426,7.577085],[-2.871067,-3.923097]], dtype = "float32")#candidate|2899|(63, 2)|const|float32
const_2900 = relay.const(7, dtype = "uint64")#candidate|2900|()|const|uint64
const_2901 = relay.const([[-6,7],[-7,10],[-5,-7],[9,5],[-9,-9],[9,-6],[8,1],[-1,-6],[-6,-1],[-2,-1],[8,-9],[6,-8],[-4,-6],[10,-10],[-1,2],[9,-9],[2,8],[-2,3],[6,7],[-6,5],[-2,5],[-4,2],[5,7],[3,9],[-7,1],[5,-9],[6,1],[1,-3],[8,8],[-10,-9]], dtype = "uint64")#candidate|2901|(30, 2)|const|uint64
call_2898 = relay.TupleGetItem(func_2862_call(relay.reshape(const_2899.astype('float32'), [9, 1, 14]), relay.reshape(const_2900.astype('uint64'), []), relay.reshape(const_2901.astype('uint64'), [60,]), ), 1)
call_2902 = relay.TupleGetItem(func_2867_call(relay.reshape(const_2899.astype('float32'), [9, 1, 14]), relay.reshape(const_2900.astype('uint64'), []), relay.reshape(const_2901.astype('uint64'), [60,]), ), 1)
output = relay.Tuple([call_2881,call_2884,call_2889,const_2890,call_2898,const_2899,const_2900,const_2901,])
output2 = relay.Tuple([call_2882,call_2885,call_2891,const_2890,call_2902,const_2899,const_2900,const_2901,])
func_2916 = relay.Function([], output)
mod['func_2916'] = func_2916
mod = relay.transform.InferType()(mod)
mutated_mod['func_2916'] = func_2916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2916_call = mutated_mod.get_global_var('func_2916')
call_2917 = func_2916_call()
output = call_2917
func_2918 = relay.Function([], output)
mutated_mod['func_2918'] = func_2918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1900_call = mod.get_global_var('func_1900')
func_1902_call = mutated_mod.get_global_var('func_1902')
call_2935 = relay.TupleGetItem(func_1900_call(), 4)
call_2936 = relay.TupleGetItem(func_1902_call(), 4)
uop_2941 = relay.tan(call_2935.astype('float64')) # shape=(3, 20)
uop_2943 = relay.tan(call_2936.astype('float64')) # shape=(3, 20)
output = relay.Tuple([uop_2941,])
output2 = relay.Tuple([uop_2943,])
func_2945 = relay.Function([], output)
mod['func_2945'] = func_2945
mod = relay.transform.InferType()(mod)
mutated_mod['func_2945'] = func_2945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2945_call = mutated_mod.get_global_var('func_2945')
call_2946 = func_2945_call()
output = call_2946
func_2947 = relay.Function([], output)
mutated_mod['func_2947'] = func_2947
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2990 = relay.var("var_2990", dtype = "uint32", shape = (11, 8, 6))#candidate|2990|(11, 8, 6)|var|uint32
var_2991 = relay.var("var_2991", dtype = "uint32", shape = (11, 8, 6))#candidate|2991|(11, 8, 6)|var|uint32
bop_2992 = relay.multiply(var_2990.astype('uint32'), relay.reshape(var_2991.astype('uint32'), relay.shape_of(var_2990))) # shape=(11, 8, 6)
func_2410_call = mod.get_global_var('func_2410')
func_2411_call = mutated_mod.get_global_var('func_2411')
call_2998 = relay.TupleGetItem(func_2410_call(), 0)
call_2999 = relay.TupleGetItem(func_2411_call(), 0)
output = relay.Tuple([bop_2992,call_2998,])
output2 = relay.Tuple([bop_2992,call_2999,])
func_3002 = relay.Function([var_2990,var_2991,], output)
mod['func_3002'] = func_3002
mod = relay.transform.InferType()(mod)
var_3003 = relay.var("var_3003", dtype = "uint32", shape = (11, 8, 6))#candidate|3003|(11, 8, 6)|var|uint32
var_3004 = relay.var("var_3004", dtype = "uint32", shape = (11, 8, 6))#candidate|3004|(11, 8, 6)|var|uint32
output = func_3002(var_3003,var_3004,)
func_3005 = relay.Function([var_3003,var_3004,], output)
mutated_mod['func_3005'] = func_3005
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3018 = relay.var("var_3018", dtype = "float32", shape = (14, 11))#candidate|3018|(14, 11)|var|float32
uop_3019 = relay.erf(var_3018.astype('float32')) # shape=(14, 11)
var_3027 = relay.var("var_3027", dtype = "float32", shape = (14, 11))#candidate|3027|(14, 11)|var|float32
bop_3028 = relay.greater_equal(uop_3019.astype('bool'), relay.reshape(var_3027.astype('bool'), relay.shape_of(uop_3019))) # shape=(14, 11)
bop_3032 = relay.subtract(bop_3028.astype('uint32'), relay.reshape(uop_3019.astype('uint32'), relay.shape_of(bop_3028))) # shape=(14, 11)
func_2801_call = mod.get_global_var('func_2801')
func_2803_call = mutated_mod.get_global_var('func_2803')
const_3041 = relay.const([[-4.886401,-3.076359,-9.292935,-1.602721,8.886695,-7.525389,0.455931,-8.085703,4.447189,7.828892,0.622744,5.394915,6.241374,0.857390,3.118000,8.275096,5.720708,7.597155],[-1.474426,9.174406,1.325233,-5.519556,2.386587,8.675330,-5.174272,-0.866257,5.732881,8.553905,-7.681334,-6.174947,-8.860431,9.266502,6.499188,9.530862,-8.773655,5.067935],[4.471212,-9.282338,-7.866759,0.993883,-0.696863,6.656384,4.826438,-8.861050,0.684029,3.357008,-9.782022,4.685987,-0.581643,-4.044143,5.596763,-4.955602,2.196956,-9.578811],[-2.824200,-1.867344,1.655703,-0.502712,-0.316356,-5.555120,6.254919,4.828862,0.139442,2.821778,-4.629058,-6.808176,7.899004,-1.447993,-1.559407,4.812498,-7.134692,1.890082],[2.499956,0.081151,9.467807,8.318488,6.327584,-4.500930,-0.078886,-3.967433,2.970699,-9.743422,0.541075,3.114776,6.590945,7.308558,-6.499921,2.456673,-1.961295,-4.324322],[8.989533,6.332177,-5.543613,4.374550,5.846412,5.313506,-0.929256,-9.775892,-2.701310,1.667718,-7.167185,-9.906270,-6.765198,-3.846323,-9.398921,-3.171822,-1.478367,-8.687209]], dtype = "float64")#candidate|3041|(6, 18)|const|float64
call_3040 = relay.TupleGetItem(func_2801_call(relay.reshape(const_3041.astype('float64'), [108,])), 0)
call_3042 = relay.TupleGetItem(func_2803_call(relay.reshape(const_3041.astype('float64'), [108,])), 0)
output = relay.Tuple([bop_3032,call_3040,const_3041,])
output2 = relay.Tuple([bop_3032,call_3042,const_3041,])
func_3050 = relay.Function([var_3018,var_3027,], output)
mod['func_3050'] = func_3050
mod = relay.transform.InferType()(mod)
var_3051 = relay.var("var_3051", dtype = "float32", shape = (14, 11))#candidate|3051|(14, 11)|var|float32
var_3052 = relay.var("var_3052", dtype = "float32", shape = (14, 11))#candidate|3052|(14, 11)|var|float32
output = func_3050(var_3051,var_3052,)
func_3053 = relay.Function([var_3051,var_3052,], output)
mutated_mod['func_3053'] = func_3053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2208_call = mod.get_global_var('func_2208')
func_2210_call = mutated_mod.get_global_var('func_2210')
call_3083 = func_2208_call()
call_3084 = func_2208_call()
func_2945_call = mod.get_global_var('func_2945')
func_2947_call = mutated_mod.get_global_var('func_2947')
call_3090 = relay.TupleGetItem(func_2945_call(), 0)
call_3091 = relay.TupleGetItem(func_2947_call(), 0)
var_3093 = relay.var("var_3093", dtype = "float64", shape = (3, 20))#candidate|3093|(3, 20)|var|float64
bop_3094 = relay.maximum(call_3090.astype('uint64'), relay.reshape(var_3093.astype('uint64'), relay.shape_of(call_3090))) # shape=(3, 20)
bop_3097 = relay.maximum(call_3091.astype('uint64'), relay.reshape(var_3093.astype('uint64'), relay.shape_of(call_3091))) # shape=(3, 20)
output = relay.Tuple([call_3083,bop_3094,])
output2 = relay.Tuple([call_3084,bop_3097,])
func_3099 = relay.Function([var_3093,], output)
mod['func_3099'] = func_3099
mod = relay.transform.InferType()(mod)
var_3100 = relay.var("var_3100", dtype = "float64", shape = (3, 20))#candidate|3100|(3, 20)|var|float64
output = func_3099(var_3100)
func_3101 = relay.Function([var_3100], output)
mutated_mod['func_3101'] = func_3101
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3130 = relay.var("var_3130", dtype = "float64", shape = (16, 16))#candidate|3130|(16, 16)|var|float64
uop_3131 = relay.erf(var_3130.astype('float64')) # shape=(16, 16)
bop_3157 = relay.bitwise_and(uop_3131.astype('uint16'), relay.reshape(var_3130.astype('uint16'), relay.shape_of(uop_3131))) # shape=(16, 16)
func_2321_call = mod.get_global_var('func_2321')
func_2324_call = mutated_mod.get_global_var('func_2324')
var_3161 = relay.var("var_3161", dtype = "uint64", shape = ())#candidate|3161|()|var|uint64
const_3162 = relay.const([[2,-10],[4,1],[3,-3],[-7,1],[-1,4],[2,-6],[-8,5],[-6,10],[10,4],[-5,4],[-4,-8],[-3,10],[-9,-7],[10,3],[4,3],[-3,-7],[-5,9],[-7,-8],[7,-2],[7,8],[6,9],[7,-3],[2,-10],[-1,7],[7,5],[-8,4],[1,8],[6,3],[9,10],[-4,8]], dtype = "uint64")#candidate|3162|(30, 2)|const|uint64
call_3160 = relay.TupleGetItem(func_2321_call(relay.reshape(var_3161.astype('uint64'), []), relay.reshape(const_3162.astype('uint64'), [60,]), ), 1)
call_3163 = relay.TupleGetItem(func_2324_call(relay.reshape(var_3161.astype('uint64'), []), relay.reshape(const_3162.astype('uint64'), [60,]), ), 1)
func_2945_call = mod.get_global_var('func_2945')
func_2947_call = mutated_mod.get_global_var('func_2947')
call_3176 = relay.TupleGetItem(func_2945_call(), 0)
call_3177 = relay.TupleGetItem(func_2947_call(), 0)
func_71_call = mod.get_global_var('func_71')
func_74_call = mutated_mod.get_global_var('func_74')
call_3190 = relay.TupleGetItem(func_71_call(relay.reshape(var_3161.astype('uint64'), []), relay.reshape(call_3160.astype('uint64'), [5, 12]), ), 0)
call_3191 = relay.TupleGetItem(func_74_call(relay.reshape(var_3161.astype('uint64'), []), relay.reshape(call_3160.astype('uint64'), [5, 12]), ), 0)
uop_3193 = relay.tan(bop_3157.astype('float32')) # shape=(16, 16)
output = relay.Tuple([call_3160,var_3161,const_3162,call_3176,call_3190,uop_3193,])
output2 = relay.Tuple([call_3163,var_3161,const_3162,call_3177,call_3191,uop_3193,])
func_3200 = relay.Function([var_3130,var_3161,], output)
mod['func_3200'] = func_3200
mod = relay.transform.InferType()(mod)
mutated_mod['func_3200'] = func_3200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3200_call = mutated_mod.get_global_var('func_3200')
var_3202 = relay.var("var_3202", dtype = "float64", shape = (16, 16))#candidate|3202|(16, 16)|var|float64
var_3203 = relay.var("var_3203", dtype = "uint64", shape = ())#candidate|3203|()|var|uint64
call_3201 = func_3200_call(var_3202,var_3203,)
output = call_3201
func_3204 = relay.Function([var_3202,var_3203,], output)
mutated_mod['func_3204'] = func_3204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2916_call = mod.get_global_var('func_2916')
func_2918_call = mutated_mod.get_global_var('func_2918')
call_3206 = relay.TupleGetItem(func_2916_call(), 3)
call_3207 = relay.TupleGetItem(func_2918_call(), 3)
uop_3218 = relay.log10(call_3206.astype('float32')) # shape=(2, 728)
uop_3220 = relay.log10(call_3207.astype('float32')) # shape=(2, 728)
uop_3230 = relay.acosh(uop_3218.astype('float64')) # shape=(2, 728)
uop_3232 = relay.acosh(uop_3220.astype('float64')) # shape=(2, 728)
func_2256_call = mod.get_global_var('func_2256')
func_2257_call = mutated_mod.get_global_var('func_2257')
call_3234 = relay.TupleGetItem(func_2256_call(), 0)
call_3235 = relay.TupleGetItem(func_2257_call(), 0)
func_3099_call = mod.get_global_var('func_3099')
func_3101_call = mutated_mod.get_global_var('func_3101')
var_3239 = relay.var("var_3239", dtype = "float64", shape = (60,))#candidate|3239|(60,)|var|float64
call_3238 = relay.TupleGetItem(func_3099_call(relay.reshape(var_3239.astype('float64'), [3, 20])), 0)
call_3240 = relay.TupleGetItem(func_3101_call(relay.reshape(var_3239.astype('float64'), [3, 20])), 0)
bop_3241 = relay.multiply(uop_3230.astype('uint8'), relay.reshape(uop_3218.astype('uint8'), relay.shape_of(uop_3230))) # shape=(2, 728)
bop_3244 = relay.multiply(uop_3232.astype('uint8'), relay.reshape(uop_3220.astype('uint8'), relay.shape_of(uop_3232))) # shape=(2, 728)
bop_3245 = relay.bitwise_xor(call_3238.astype('uint8'), call_3206.astype('uint8')) # shape=(7, 2, 728)
bop_3248 = relay.bitwise_xor(call_3240.astype('uint8'), call_3207.astype('uint8')) # shape=(7, 2, 728)
uop_3249 = relay.log2(bop_3241.astype('float32')) # shape=(2, 728)
uop_3251 = relay.log2(bop_3244.astype('float32')) # shape=(2, 728)
func_3002_call = mod.get_global_var('func_3002')
func_3005_call = mutated_mod.get_global_var('func_3005')
const_3257 = relay.const([-3,-9,7,10,-2,-6,-4,-6,-6,6,1,9,1,-2,9,4,-8,7,-9,-1,7,5,-2,2,9,7,-7,3,6,-4,7,-9,1,4,2,-10,5,-2,10,6,-3,9,-7,-8,8,-2,-10,-1,4,10,1,4,-7,4,2,7,10,5,-6,4,5,-10,6,5,-7,5,4,3,-8,1,6,5,-1,5,3,3,7,2,-5,1,-9,7,8,9,8,5,-7,9,-1,9,-6,-10,6,-4,9,2,-6,3,10,9,1,9,4,-8,-2,7,-9,-1,-10,-3,-4,9,5,-1,6,-10,-4,5,-9,-3,9,-1,8,1,-8,-9,1,-2,1,-1,5,-6,-4,-9,3,6,-1,-2,8,6,-10,-8,-4,9,-4,-4,4,10,-10,-1,-10,-9,-1,-7,-4,6,-10,9,7,-1,10,1,-5,2,-9,-10,-7,9,8,8,1,-6,-10,-6,2,-9,-3,6,3,-5,10,-1,-4,6,8,-6,10,3,8,9,7,4,-10,1,-8,-6,-2,5,9,10,7,-10,7,-7,3,6,-5,3,9,-9,-10,7,-1,-10,6,-2,7,10,-3,8,4,-7,4,-6,-4,2,-9,-8,3,-5,-9,2,6,9,-10,7,-2,-6,-6,9,-7,-6,10,-1,3,2,10,5,7,-7,-2,2,1,-8,2,9,-8,8,-10,-1,-4,2,-8,-9,-2,3,-1,5,4,-8,-3,-8,3,-1,4,3,-6,1,3,-10,-8,-8,9,-10,-9,1,-7,-4,-2,1,-6,3,1,-7,-6,1,1,3,-3,3,3,-3,-1,-1,2,3,10,2,-2,8,-8,-9,6,-9,7,10,-7,2,-10,5,7,-9,-3,-8,2,10,5,-10,-5,10,4,2,1,-1,9,2,-1,-4,-4,9,8,-7,-1,4,10,8,3,5,-5,6,10,3,1,-8,-10,2,-6,-3,-7,-3,-10,-3,2,-9,-4,-3,3,8,3,-10,2,-3,10,-5,2,6,-10,6,-6,-1,2,-7,-9,-10,10,7,9,-10,5,-5,-5,2,-1,9,5,-10,-1,-1,-1,-5,10,-2,-2,-7,-10,-8,7,-10,8,6,7,-10,2,-3,4,-5,-1,-5,-9,-2,9,4,7,4,5,-1,-7,-5,4,-3,5,5,5,9,-2,-5,-10,-7,-4,4,-3,4,-8,9,6,-10,-10,-8,-5,-10,-7,-10,-3,6,7,9,-7,-10,-3,-6,-10,9,-3,6,-4,-7,-1,-10,5,6,-5,4,9,6,-2,10,-3,6,7,-6,-8,2,1,6,7,9,-6,-6,6,6,6,-4,6,-5,-9,4,5,7,-7,1,4,7,-5,-4,5,-1,-7,-10,-2,-5,-7,10,-4,-7,1,-6,9,4,4,-5,1,10,10,2,4,-6,-6,-2], dtype = "uint32")#candidate|3257|(528,)|const|uint32
call_3256 = relay.TupleGetItem(func_3002_call(relay.reshape(const_3257.astype('uint32'), [11, 8, 6]), relay.reshape(const_3257.astype('uint32'), [11, 8, 6]), ), 0)
call_3258 = relay.TupleGetItem(func_3005_call(relay.reshape(const_3257.astype('uint32'), [11, 8, 6]), relay.reshape(const_3257.astype('uint32'), [11, 8, 6]), ), 0)
output = relay.Tuple([call_3234,var_3239,bop_3245,uop_3249,call_3256,const_3257,])
output2 = relay.Tuple([call_3235,var_3239,bop_3248,uop_3251,call_3258,const_3257,])
func_3262 = relay.Function([var_3239,], output)
mod['func_3262'] = func_3262
mod = relay.transform.InferType()(mod)
mutated_mod['func_3262'] = func_3262
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3263 = relay.var("var_3263", dtype = "float64", shape = (60,))#candidate|3263|(60,)|var|float64
func_3262_call = mutated_mod.get_global_var('func_3262')
call_3264 = func_3262_call(var_3263)
output = call_3264
func_3265 = relay.Function([var_3263], output)
mutated_mod['func_3265'] = func_3265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2945_call = mod.get_global_var('func_2945')
func_2947_call = mutated_mod.get_global_var('func_2947')
call_3298 = relay.TupleGetItem(func_2945_call(), 0)
call_3299 = relay.TupleGetItem(func_2947_call(), 0)
output = relay.Tuple([call_3298,])
output2 = relay.Tuple([call_3299,])
func_3301 = relay.Function([], output)
mod['func_3301'] = func_3301
mod = relay.transform.InferType()(mod)
output = func_3301()
func_3302 = relay.Function([], output)
mutated_mod['func_3302'] = func_3302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2256_call = mod.get_global_var('func_2256')
func_2257_call = mutated_mod.get_global_var('func_2257')
call_3327 = relay.TupleGetItem(func_2256_call(), 0)
call_3328 = relay.TupleGetItem(func_2257_call(), 0)
uop_3335 = relay.acosh(call_3327.astype('float64')) # shape=(11, 16)
uop_3337 = relay.acosh(call_3328.astype('float64')) # shape=(11, 16)
func_1498_call = mod.get_global_var('func_1498')
func_1499_call = mutated_mod.get_global_var('func_1499')
call_3340 = relay.TupleGetItem(func_1498_call(), 1)
call_3341 = relay.TupleGetItem(func_1499_call(), 1)
func_1551_call = mod.get_global_var('func_1551')
func_1552_call = mutated_mod.get_global_var('func_1552')
call_3345 = func_1551_call()
call_3346 = func_1551_call()
func_3200_call = mod.get_global_var('func_3200')
func_3204_call = mutated_mod.get_global_var('func_3204')
var_3351 = relay.var("var_3351", dtype = "float64", shape = (256,))#candidate|3351|(256,)|var|float64
const_3352 = relay.const(5, dtype = "uint64")#candidate|3352|()|const|uint64
call_3350 = relay.TupleGetItem(func_3200_call(relay.reshape(var_3351.astype('float64'), [16, 16]), relay.reshape(const_3352.astype('uint64'), []), ), 5)
call_3353 = relay.TupleGetItem(func_3204_call(relay.reshape(var_3351.astype('float64'), [16, 16]), relay.reshape(const_3352.astype('uint64'), []), ), 5)
output = relay.Tuple([uop_3335,call_3340,call_3345,call_3350,var_3351,const_3352,])
output2 = relay.Tuple([uop_3337,call_3341,call_3346,call_3353,var_3351,const_3352,])
func_3370 = relay.Function([var_3351,], output)
mod['func_3370'] = func_3370
mod = relay.transform.InferType()(mod)
mutated_mod['func_3370'] = func_3370
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3371 = relay.var("var_3371", dtype = "float64", shape = (256,))#candidate|3371|(256,)|var|float64
func_3370_call = mutated_mod.get_global_var('func_3370')
call_3372 = func_3370_call(var_3371)
output = call_3372
func_3373 = relay.Function([var_3371], output)
mutated_mod['func_3373'] = func_3373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2208_call = mod.get_global_var('func_2208')
func_2210_call = mutated_mod.get_global_var('func_2210')
call_3386 = func_2208_call()
call_3387 = func_2208_call()
uop_3396 = relay.sqrt(call_3386.astype('float64')) # shape=(7, 2, 1)
uop_3398 = relay.sqrt(call_3387.astype('float64')) # shape=(7, 2, 1)
output = relay.Tuple([uop_3396,])
output2 = relay.Tuple([uop_3398,])
func_3403 = relay.Function([], output)
mod['func_3403'] = func_3403
mod = relay.transform.InferType()(mod)
output = func_3403()
func_3404 = relay.Function([], output)
mutated_mod['func_3404'] = func_3404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2579_call = mod.get_global_var('func_2579')
func_2581_call = mutated_mod.get_global_var('func_2581')
call_3417 = func_2579_call()
call_3418 = func_2579_call()
output = call_3417
output2 = call_3418
func_3456 = relay.Function([], output)
mod['func_3456'] = func_3456
mod = relay.transform.InferType()(mod)
mutated_mod['func_3456'] = func_3456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3456_call = mutated_mod.get_global_var('func_3456')
call_3457 = func_3456_call()
output = call_3457
func_3458 = relay.Function([], output)
mutated_mod['func_3458'] = func_3458
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3493 = relay.var("var_3493", dtype = "float64", shape = (9, 8, 6))#candidate|3493|(9, 8, 6)|var|float64
uop_3494 = relay.sin(var_3493.astype('float64')) # shape=(9, 8, 6)
output = uop_3494
output2 = uop_3494
func_3501 = relay.Function([var_3493,], output)
mod['func_3501'] = func_3501
mod = relay.transform.InferType()(mod)
mutated_mod['func_3501'] = func_3501
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3502 = relay.var("var_3502", dtype = "float64", shape = (9, 8, 6))#candidate|3502|(9, 8, 6)|var|float64
func_3501_call = mutated_mod.get_global_var('func_3501')
call_3503 = func_3501_call(var_3502)
output = call_3503
func_3504 = relay.Function([var_3502], output)
mutated_mod['func_3504'] = func_3504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2208_call = mod.get_global_var('func_2208')
func_2210_call = mutated_mod.get_global_var('func_2210')
call_3562 = func_2208_call()
call_3563 = func_2208_call()
var_3571 = relay.var("var_3571", dtype = "bool", shape = (7, 2, 8))#candidate|3571|(7, 2, 8)|var|bool
bop_3572 = relay.logical_or(call_3562.astype('bool'), var_3571.astype('bool')) # shape=(7, 2, 8)
bop_3575 = relay.logical_or(call_3563.astype('bool'), var_3571.astype('bool')) # shape=(7, 2, 8)
func_2410_call = mod.get_global_var('func_2410')
func_2411_call = mutated_mod.get_global_var('func_2411')
call_3582 = relay.TupleGetItem(func_2410_call(), 1)
call_3583 = relay.TupleGetItem(func_2411_call(), 1)
output = relay.Tuple([bop_3572,call_3582,])
output2 = relay.Tuple([bop_3575,call_3583,])
func_3584 = relay.Function([var_3571,], output)
mod['func_3584'] = func_3584
mod = relay.transform.InferType()(mod)
mutated_mod['func_3584'] = func_3584
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3585 = relay.var("var_3585", dtype = "bool", shape = (7, 2, 8))#candidate|3585|(7, 2, 8)|var|bool
func_3584_call = mutated_mod.get_global_var('func_3584')
call_3586 = func_3584_call(var_3585)
output = call_3586
func_3587 = relay.Function([var_3585], output)
mutated_mod['func_3587'] = func_3587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1833_call = mod.get_global_var('func_1833')
func_1834_call = mutated_mod.get_global_var('func_1834')
call_3602 = relay.TupleGetItem(func_1833_call(), 0)
call_3603 = relay.TupleGetItem(func_1834_call(), 0)
func_2801_call = mod.get_global_var('func_2801')
func_2803_call = mutated_mod.get_global_var('func_2803')
const_3610 = relay.const([-9.126145,9.776765,2.698470,-7.305536,-1.240045,-4.166642,7.917471,8.983482,-2.112316,8.779805,0.908326,4.839756,3.711842,-0.803018,7.068293,0.937492,-5.398944,9.186427,-5.699886,-1.833778,4.817012,-9.239283,-2.434377,-2.989888,-1.307635,3.729579,-5.264937,0.693443,5.583224,-8.199620,2.551711,-0.929943,-0.511993,6.936907,8.373441,-6.896310,-2.286856,-8.327926,-4.748108,-2.859233,-8.242842,0.758976,-0.567693,9.341558,-1.410944,-0.640992,3.259742,5.465266,5.801890,-2.551720,-6.606599,2.602926,5.821251,6.029196,-5.941137,-7.838141,1.708785,-9.621484,-3.293114,-9.417570,4.939144,-5.416783,5.650745,5.583240,7.582009,-4.178817,-8.321557,-5.987527,1.340452,8.367190,4.829062,-8.025892,1.447933,8.456123,-6.532991,-2.663637,-0.906765,4.100150,-9.730121,-3.101574,-1.129629,7.321984,-5.290534,1.097944,-9.509000,-0.955679,-3.106913,-1.160836,8.841768,-0.240027,1.281034,1.020401,5.884123,-5.330806,7.276892,2.621645,9.730648,-4.990875,1.238155,3.039467,9.284948,0.139831,-8.742397,5.061722,2.317569,-7.463089,8.007336,8.116692], dtype = "float64")#candidate|3610|(108,)|const|float64
call_3609 = relay.TupleGetItem(func_2801_call(relay.reshape(const_3610.astype('float64'), [108,])), 4)
call_3611 = relay.TupleGetItem(func_2803_call(relay.reshape(const_3610.astype('float64'), [108,])), 4)
bop_3626 = relay.maximum(const_3610.astype('int8'), relay.reshape(call_3609.astype('int8'), relay.shape_of(const_3610))) # shape=(108,)
bop_3629 = relay.maximum(const_3610.astype('int8'), relay.reshape(call_3611.astype('int8'), relay.shape_of(const_3610))) # shape=(108,)
func_2862_call = mod.get_global_var('func_2862')
func_2867_call = mutated_mod.get_global_var('func_2867')
var_3639 = relay.var("var_3639", dtype = "float32", shape = (126,))#candidate|3639|(126,)|var|float32
const_3640 = relay.const(-7, dtype = "uint64")#candidate|3640|()|const|uint64
const_3641 = relay.const([[9,-4],[-1,2],[3,6],[2,-2],[-1,-1],[-6,10],[-10,-8],[10,9],[-6,-8],[-3,-5],[-2,2],[10,6],[-8,6],[5,4],[6,-2],[-1,-6],[4,-4],[-4,7],[-9,-1],[-2,2],[4,-6],[3,4],[1,8],[7,-9],[-9,1],[-3,1],[-7,2],[-9,-9],[-2,4],[4,-7]], dtype = "uint64")#candidate|3641|(30, 2)|const|uint64
call_3638 = relay.TupleGetItem(func_2862_call(relay.reshape(var_3639.astype('float32'), [9, 1, 14]), relay.reshape(const_3640.astype('uint64'), []), relay.reshape(const_3641.astype('uint64'), [60,]), ), 2)
call_3642 = relay.TupleGetItem(func_2867_call(relay.reshape(var_3639.astype('float32'), [9, 1, 14]), relay.reshape(const_3640.astype('uint64'), []), relay.reshape(const_3641.astype('uint64'), [60,]), ), 2)
func_3403_call = mod.get_global_var('func_3403')
func_3404_call = mutated_mod.get_global_var('func_3404')
call_3651 = relay.TupleGetItem(func_3403_call(), 0)
call_3652 = relay.TupleGetItem(func_3404_call(), 0)
func_3456_call = mod.get_global_var('func_3456')
func_3458_call = mutated_mod.get_global_var('func_3458')
call_3658 = func_3456_call()
call_3659 = func_3456_call()
func_1498_call = mod.get_global_var('func_1498')
func_1499_call = mutated_mod.get_global_var('func_1499')
call_3665 = relay.TupleGetItem(func_1498_call(), 0)
call_3666 = relay.TupleGetItem(func_1499_call(), 0)
output = relay.Tuple([call_3602,bop_3626,call_3638,var_3639,const_3640,const_3641,call_3651,call_3658,call_3665,])
output2 = relay.Tuple([call_3603,bop_3629,call_3642,var_3639,const_3640,const_3641,call_3652,call_3659,call_3666,])
func_3682 = relay.Function([var_3639,], output)
mod['func_3682'] = func_3682
mod = relay.transform.InferType()(mod)
mutated_mod['func_3682'] = func_3682
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3683 = relay.var("var_3683", dtype = "float32", shape = (126,))#candidate|3683|(126,)|var|float32
func_3682_call = mutated_mod.get_global_var('func_3682')
call_3684 = func_3682_call(var_3683)
output = call_3684
func_3685 = relay.Function([var_3683], output)
mutated_mod['func_3685'] = func_3685
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3706 = relay.var("var_3706", dtype = "float32", shape = (1, 15))#candidate|3706|(1, 15)|var|float32
uop_3707 = relay.sigmoid(var_3706.astype('float32')) # shape=(1, 15)
bop_3709 = relay.bitwise_and(var_3706.astype('uint16'), relay.reshape(uop_3707.astype('uint16'), relay.shape_of(var_3706))) # shape=(1, 15)
output = bop_3709
output2 = bop_3709
func_3712 = relay.Function([var_3706,], output)
mod['func_3712'] = func_3712
mod = relay.transform.InferType()(mod)
var_3713 = relay.var("var_3713", dtype = "float32", shape = (1, 15))#candidate|3713|(1, 15)|var|float32
output = func_3712(var_3713)
func_3714 = relay.Function([var_3713], output)
mutated_mod['func_3714'] = func_3714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2579_call = mod.get_global_var('func_2579')
func_2581_call = mutated_mod.get_global_var('func_2581')
call_3820 = func_2579_call()
call_3821 = func_2579_call()
output = relay.Tuple([call_3820,])
output2 = relay.Tuple([call_3821,])
func_3834 = relay.Function([], output)
mod['func_3834'] = func_3834
mod = relay.transform.InferType()(mod)
mutated_mod['func_3834'] = func_3834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3834_call = mutated_mod.get_global_var('func_3834')
call_3835 = func_3834_call()
output = call_3835
func_3836 = relay.Function([], output)
mutated_mod['func_3836'] = func_3836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1498_call = mod.get_global_var('func_1498')
func_1499_call = mutated_mod.get_global_var('func_1499')
call_3907 = relay.TupleGetItem(func_1498_call(), 0)
call_3908 = relay.TupleGetItem(func_1499_call(), 0)
func_2945_call = mod.get_global_var('func_2945')
func_2947_call = mutated_mod.get_global_var('func_2947')
call_3927 = relay.TupleGetItem(func_2945_call(), 0)
call_3928 = relay.TupleGetItem(func_2947_call(), 0)
output = relay.Tuple([call_3907,call_3927,])
output2 = relay.Tuple([call_3908,call_3928,])
func_3929 = relay.Function([], output)
mod['func_3929'] = func_3929
mod = relay.transform.InferType()(mod)
mutated_mod['func_3929'] = func_3929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3929_call = mutated_mod.get_global_var('func_3929')
call_3930 = func_3929_call()
output = call_3930
func_3931 = relay.Function([], output)
mutated_mod['func_3931'] = func_3931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3301_call = mod.get_global_var('func_3301')
func_3302_call = mutated_mod.get_global_var('func_3302')
call_3934 = relay.TupleGetItem(func_3301_call(), 0)
call_3935 = relay.TupleGetItem(func_3302_call(), 0)
func_3099_call = mod.get_global_var('func_3099')
func_3101_call = mutated_mod.get_global_var('func_3101')
call_3936 = relay.TupleGetItem(func_3099_call(relay.reshape(call_3934.astype('float64'), [3, 20])), 0)
call_3937 = relay.TupleGetItem(func_3101_call(relay.reshape(call_3934.astype('float64'), [3, 20])), 0)
output = relay.Tuple([call_3934,call_3936,])
output2 = relay.Tuple([call_3935,call_3937,])
func_3940 = relay.Function([], output)
mod['func_3940'] = func_3940
mod = relay.transform.InferType()(mod)
mutated_mod['func_3940'] = func_3940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3940_call = mutated_mod.get_global_var('func_3940')
call_3941 = func_3940_call()
output = call_3941
func_3942 = relay.Function([], output)
mutated_mod['func_3942'] = func_3942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3456_call = mod.get_global_var('func_3456')
func_3458_call = mutated_mod.get_global_var('func_3458')
call_3948 = func_3456_call()
call_3949 = func_3456_call()
output = relay.Tuple([call_3948,])
output2 = relay.Tuple([call_3949,])
func_3950 = relay.Function([], output)
mod['func_3950'] = func_3950
mod = relay.transform.InferType()(mod)
output = func_3950()
func_3951 = relay.Function([], output)
mutated_mod['func_3951'] = func_3951
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3988 = relay.const(-0.719913, dtype = "float64")#candidate|3988|()|const|float64
const_3989 = relay.const([[[1.534193,-4.472443,-8.494704,-3.440513,1.505209,-7.148293],[-6.271276,0.482612,1.260823,-0.967543,-7.725204,-5.530733],[6.509314,-6.244806,-0.535152,4.575144,3.299649,4.997890],[-4.203353,-4.112447,4.043306,-1.157362,6.545482,1.857513]],[[-1.788849,-9.441647,-5.557949,3.687878,3.094589,2.495647],[2.741264,6.209720,-8.080292,8.407601,5.899921,9.223616],[-7.606471,-4.790231,9.248765,-4.331422,7.297450,-3.093776],[5.218621,6.360245,-8.163312,-5.973420,8.757943,-2.902837]],[[-2.580009,-7.700086,-8.682587,-0.958727,5.225214,-2.743512],[-0.437101,-9.457588,1.011726,9.123868,-2.544308,-0.233120],[-6.197354,5.813011,-1.376838,7.677031,1.465988,-2.851848],[2.440250,-4.852353,5.428547,-8.858261,0.726010,8.209081]],[[4.284562,7.118692,1.697171,-9.456352,-4.141260,8.719614],[-5.427504,-6.088875,-8.696048,1.178282,7.352145,-5.133130],[-6.030438,9.429123,1.481340,-7.179286,4.278464,0.552352],[8.318700,-8.905403,8.018940,2.005997,4.103058,5.933790]],[[-6.058897,7.203291,-8.053708,2.194758,-0.006282,-5.439637],[8.100972,2.801831,-8.198460,-5.373967,-7.241994,2.449535],[-7.114793,9.805107,-8.656816,-3.040912,0.847463,9.429353],[9.601530,-7.714656,9.306029,-0.108031,-5.623118,9.020176]],[[-3.832223,-3.568507,6.228651,-8.957880,-7.893707,0.303526],[-1.042689,-0.900529,9.038541,3.034446,-9.360938,6.178728],[-5.901335,-7.244172,5.521562,0.530463,3.560123,-0.335563],[5.242645,9.681574,3.740228,0.101796,-6.812756,7.504896]],[[9.633150,-3.702709,2.778369,0.022821,9.680466,-5.301747],[5.000496,-1.625880,3.773914,2.840175,5.868358,6.247007],[5.784357,-7.070320,-2.487127,-0.248689,-6.543115,5.195830],[-6.727224,6.613886,-5.116518,-8.731750,9.994149,6.666066]],[[6.922999,-2.383639,4.305051,1.416909,-5.154759,-4.152719],[-3.085802,-2.409372,4.301285,-5.803345,-6.385448,-8.262138],[3.240472,-0.988201,0.664490,6.919260,2.201862,-3.762884],[1.505269,8.073628,7.267806,-3.894130,-9.556642,5.374782]],[[-4.944051,4.810704,0.589227,-5.261541,-1.029382,-9.672989],[-8.237762,8.254843,2.719085,-8.461145,5.471008,-3.840248],[5.529705,-8.998770,9.408158,4.536859,3.887709,-8.174943],[-0.707779,7.959675,7.086907,4.505788,-4.120216,9.457392]],[[-1.726868,-5.766811,-8.820310,-4.959413,-7.578984,8.757238],[-3.933021,7.034860,-3.603590,3.267170,-0.077464,4.028341],[-6.424930,3.407071,5.813052,-5.397538,-7.171614,-8.296352],[4.028731,-8.034212,8.734423,3.015140,2.099197,-2.567962]]], dtype = "float64")#candidate|3989|(10, 4, 6)|const|float64
bop_3990 = relay.floor_mod(const_3988.astype('float64'), const_3989.astype('float64')) # shape=(10, 4, 6)
output = relay.Tuple([bop_3990,])
output2 = relay.Tuple([bop_3990,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')
module1.set_input(**params)
module1.run()
res2 = intrp2.evaluate()()
res3 = intrp3.evaluate()()
res4 = intrp4.evaluate()()
res2 = vmobj_to_list(res2)
res3 = vmobj_to_list(res3)
res4 = vmobj_to_list(res4)
res1_0 = module1.get_output(0).asnumpy()
res2_0 = res2[0].asnumpy()
res3_0 = res3[0].asnumpy()
res4_0 = res4[0].asnumpy()
np.testing.assert_allclose(res1_0 ,res2_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_0 ,res3_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_0 ,res4_0, atol=1e-3, rtol=1e-3)
(res1_0 == res2_0).all()
(res1_0 == res3_0).all()
(res1_0 == res4_0).all()
module5.set_input(**params)
module5.run()
res6 = intrp6.evaluate()()
res7 = intrp7.evaluate()()
res8 = intrp8.evaluate()()
res6 = vmobj_to_list(res6)
res7 = vmobj_to_list(res7)
res8 = vmobj_to_list(res8)
res5_0 = module5.get_output(0).asnumpy()
res6_0 = res6[0].asnumpy()
res7_0 = res7[0].asnumpy()
res8_0 = res8[0].asnumpy()
np.testing.assert_allclose(res5_0 ,res6_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_0 ,res7_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_0 ,res8_0, atol=1e-3, rtol=1e-3)
(res5_0 == res6_0).all()
(res5_0 == res7_0).all()
(res5_0 == res8_0).all()
module9.set_input(**params)
module9.run()
res10 = intrp10.evaluate()()
res11 = intrp11.evaluate()()
res12 = intrp12.evaluate()()
res10 = vmobj_to_list(res10)
res11 = vmobj_to_list(res11)
res12 = vmobj_to_list(res12)
res9_0 = module9.get_output(0).asnumpy()
res10_0 = res10[0].asnumpy()
res11_0 = res11[0].asnumpy()
res12_0 = res12[0].asnumpy()
np.testing.assert_allclose(res9_0 ,res10_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_0 ,res11_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_0 ,res12_0, atol=1e-3, rtol=1e-3)
(res9_0 == res10_0).all()
(res9_0 == res11_0).all()
(res9_0 == res12_0).all()
module13.set_input(**params)
module13.run()
res14 = intrp14.evaluate()()
res15 = intrp15.evaluate()()
res16 = intrp16.evaluate()()
res14 = vmobj_to_list(res14)
res15 = vmobj_to_list(res15)
res16 = vmobj_to_list(res16)
res13_0 = module13.get_output(0).asnumpy()
res14_0 = res14[0].asnumpy()
res15_0 = res15[0].asnumpy()
res16_0 = res16[0].asnumpy()
np.testing.assert_allclose(res13_0 ,res14_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_0 ,res15_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_0 ,res16_0, atol=1e-3, rtol=1e-3)
(res13_0 == res14_0).all()
(res13_0 == res15_0).all()
(res13_0 == res16_0).all()
module17.set_input(**params)
module17.run()
res18 = intrp18.evaluate()()
res19 = intrp19.evaluate()()
res20 = intrp20.evaluate()()
res18 = vmobj_to_list(res18)
res19 = vmobj_to_list(res19)
res20 = vmobj_to_list(res20)
res17_0 = module17.get_output(0).asnumpy()
res18_0 = res18[0].asnumpy()
res19_0 = res19[0].asnumpy()
res20_0 = res20[0].asnumpy()
np.testing.assert_allclose(res17_0 ,res18_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_0 ,res19_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_0 ,res20_0, atol=1e-3, rtol=1e-3)
(res17_0 == res18_0).all()
(res17_0 == res19_0).all()
(res17_0 == res20_0).all()
module21.set_input(**params)
module21.run()
res22 = intrp22.evaluate()()
res23 = intrp23.evaluate()()
res24 = intrp24.evaluate()()
res22 = vmobj_to_list(res22)
res23 = vmobj_to_list(res23)
res24 = vmobj_to_list(res24)
res21_0 = module21.get_output(0).asnumpy()
res22_0 = res22[0].asnumpy()
res23_0 = res23[0].asnumpy()
res24_0 = res24[0].asnumpy()
np.testing.assert_allclose(res21_0 ,res22_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_0 ,res23_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_0 ,res24_0, atol=1e-3, rtol=1e-3)
(res21_0 == res22_0).all()
(res21_0 == res23_0).all()
(res21_0 == res24_0).all()

'''7.852960e-01, -7.199130e-01],
0.000000e+00,  0.000000e+00],

'''