import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
def vmobj_to_list(o, dtype="float32"):
    if isinstance(o, tvm.nd.NDArray):
        return [o]
    elif isinstance(o, tvm.runtime.container.ADT):
        result = []
        for f in o:
            result.extend(vmobj_to_list(f, dtype))
        return result
    else:
        return o


mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_2 = relay.var("var_2", dtype = "int16", shape = (15, 8, 10))#candidate|2|(15, 8, 10)|var|int16
var_3 = relay.var("var_3", dtype = "int16", shape = (15, 8, 10))#candidate|3|(15, 8, 10)|var|int16
bop_4 = relay.greater_equal(var_2.astype('bool'), relay.reshape(var_3.astype('bool'), relay.shape_of(var_2))) # shape=(15, 8, 10)
output = relay.Tuple([bop_4,])
output2 = relay.Tuple([bop_4,])
func_33 = relay.Function([var_2,var_3,], output)
mod['func_33'] = func_33
mod = relay.transform.InferType()(mod)
var_34 = relay.var("var_34", dtype = "int16", shape = (15, 8, 10))#candidate|34|(15, 8, 10)|var|int16
var_35 = relay.var("var_35", dtype = "int16", shape = (15, 8, 10))#candidate|35|(15, 8, 10)|var|int16
output = func_33(var_34,var_35,)
func_36 = relay.Function([var_34,var_35,], output)
mutated_mod['func_36'] = func_36
mutated_mod = relay.transform.InferType()(mutated_mod)
var_289 = relay.var("var_289", dtype = "float32", shape = (5, 5, 7))#candidate|289|(5, 5, 7)|var|float32
uop_290 = relay.log(var_289.astype('float32')) # shape=(5, 5, 7)
uop_293 = relay.asinh(uop_290.astype('float64')) # shape=(5, 5, 7)
func_33_call = mod.get_global_var('func_33')
func_36_call = mutated_mod.get_global_var('func_36')
const_296 = relay.const([[-5],[8],[-3],[8],[9],[-5],[-8],[7],[3],[-7],[-1],[-8],[1],[-7],[-8],[-9],[-7],[-10],[1],[-6],[-9],[-1],[9],[7],[9],[8],[-6],[2],[-10],[8],[6],[-10],[4],[5],[-10],[-6],[-1],[-6],[-8],[-2],[-6],[-8],[9],[-10],[1],[-9],[-5],[1],[-9],[-5],[-7],[-7],[-9],[-7],[-5],[3],[-9],[6],[10],[-7],[3],[-7],[-4],[-10],[-7],[3],[-5],[10],[-3],[-10],[-8],[-4],[3],[-5],[7],[6],[-7],[-10],[3],[4],[-4],[-4],[7],[-4],[3],[-3],[-6],[-7],[6],[-4],[3],[2],[-4],[1],[-10],[-9],[-3],[-3],[9],[1],[3],[2],[-10],[10],[1],[8],[5],[4],[-10],[-9],[1],[7],[9],[2],[-9],[-9],[-8],[2],[1],[3],[-10],[-6],[1],[-6],[-6],[-5],[1],[8],[-2],[-7],[5],[5],[-8],[-1],[-1],[-1],[-7],[7],[6],[9],[6],[-6],[6],[6],[-6],[10],[10],[5],[4],[-5],[10],[7],[-2],[5],[8],[1],[-10],[1],[-2],[-5],[-2],[8],[-2],[-10],[-8],[-3],[-2],[8],[-5],[-5],[9],[-8],[-2],[6],[-8],[10],[7],[3],[-10],[-6],[-1],[-1],[-9],[10],[-3],[8],[-8],[2],[5],[-2],[8],[4],[10],[3],[-4],[2],[-7],[-10],[-1],[-2],[-3],[6],[-9],[1],[-6],[-9],[-5],[-10],[-2],[-8],[-3],[10],[3],[-8],[-8],[1],[-3],[5],[5],[5],[9],[8],[7],[-10],[10],[-3],[-8],[2],[-5],[-8],[-3],[6],[-7],[-9],[7],[6],[10],[-9],[-1],[-7],[-6],[-1],[-5],[8],[5],[5],[-6],[-5],[4],[-5],[-10],[6],[-4],[-8],[-5],[-5],[5],[-5],[-1],[2],[-8],[4],[-8],[7],[5],[-4],[3],[-6],[6],[-2],[-8],[1],[-3],[6],[1],[9],[-5],[-3],[4],[-6],[2],[-3],[-9],[-9],[-2],[5],[8],[-3],[-4],[4],[-5],[5],[6],[2],[10],[10],[-9],[6],[-1],[-2],[-8],[10],[6],[-4],[2],[-4],[-10],[6],[8],[7],[-9],[9],[-9],[5],[-2],[2],[-5],[3],[-8],[2],[6],[9],[-6],[4],[-5],[4],[-8],[-2],[-10],[9],[-4],[-9],[5],[-10],[10],[5],[9],[-3],[-6],[-9],[-8],[7],[-7],[-2],[-3],[-8],[-2],[-6],[10],[10],[-10],[-7],[-6],[4],[-7],[-7],[5],[8],[-2],[-9],[-3],[-2],[4],[2],[5],[-6],[-6],[6],[3],[-5],[2],[-5],[5],[-8],[-6],[-2],[4],[2],[3],[3],[-5],[-5],[-2],[-4],[-10],[7],[-3],[10],[6],[7],[-7],[-8],[4],[-10],[-5],[6],[-2],[2],[5],[-10],[5],[8],[10],[5],[6],[-7],[-2],[5],[-7],[4],[-9],[-4],[3],[-6],[-10],[-3],[8],[2],[-9],[-5],[9],[-9],[6],[-7],[-2],[7],[-9],[-2],[-4],[3],[9],[-10],[7],[-4],[-7],[3],[-10],[6],[-8],[-1],[2],[-2],[8],[7],[6],[-8],[6],[-1],[-8],[-1],[-3],[-2],[7],[-1],[1],[-7],[-9],[-7],[-3],[-8],[2],[4],[-6],[3],[10],[-10],[8],[-8],[-3],[2],[-10],[-8],[8],[-5],[-10],[1],[-3],[-2],[-10],[2],[8],[-4],[5],[3],[-10],[2],[6],[10],[-7],[-8],[-10],[-1],[-4],[9],[-7],[-3],[-4],[-3],[-9],[-6],[3],[-1],[-2],[-4],[8],[6],[-1],[-10],[-9],[6],[-1],[-2],[5],[3],[-2],[-5],[9],[-6],[8],[9],[-2],[-3],[-3],[7],[-3],[9],[1],[10],[-9],[-4],[-2],[-7],[-6],[3],[5],[-2],[-1],[1],[10],[-8],[-8],[-9],[-10],[-8],[4],[1],[-2],[8],[-3],[4],[6],[-6],[-2],[1],[-2],[5],[5],[10],[-6],[6],[2],[-5],[-6],[-2],[5],[7],[-3],[6],[-8],[7],[5],[-10],[7],[8],[2],[-3],[-9],[-9],[-1],[-4],[-9],[8],[3],[-7],[-1],[1],[-6],[10],[4],[-9],[2],[-1],[8],[8],[10],[-6],[4],[-1],[7],[8],[-2],[-8],[1],[-4],[-6],[1],[4],[-8],[9],[4],[7],[-8],[-5],[8],[9],[-4],[6],[-9],[-9],[-1],[-5],[10],[-2],[4],[6],[3],[-7],[6],[2],[-5],[-1],[-1],[-10],[1],[-3],[-4],[-5],[-10],[5],[-10],[-9],[4],[-6],[9],[4],[10],[-5],[-10],[1],[-4],[-6],[-7],[-3],[9],[8],[-6],[-2],[4],[-1],[-5],[-10],[-10],[-6],[-10],[4],[5],[2],[-2],[-6],[2],[-2],[-2],[1],[2],[10],[-8],[-4],[3],[-9],[-1],[7],[-4],[8],[6],[10],[-8],[8],[-7],[-6],[2],[-10],[-6],[9],[6],[-2],[-2],[3],[-10],[5],[-4],[3],[7],[2],[2],[-7],[-3],[7],[1],[9],[-3],[-6],[-2],[2],[-7],[7],[1],[-3],[-3],[4],[-4],[10],[-6],[-9],[2],[-8],[-10],[3],[-3],[-3],[3],[2],[-2],[-4],[-4],[10],[7],[-7],[10],[4],[5],[8],[-4],[7],[-7],[8],[2],[6],[8],[1],[-8],[2],[-5],[-10],[7],[7],[-4],[7],[-8],[-7],[-7],[-7],[-8],[-5],[2],[-10],[8],[-6],[3],[8],[-8],[3],[-1],[-1],[-5],[6],[-3],[10],[-7],[-10],[10],[-1],[-2],[-3],[-5],[-6],[-7],[-6],[-9],[7],[-5],[-7],[9],[2],[2],[-7],[9],[-5],[7],[7],[-1],[4],[4],[-6],[6],[9],[10],[10],[5],[3],[3],[2],[-10],[-5],[4],[-8],[7],[-5],[-3],[-5],[6],[-10],[2],[-4],[-1],[4],[9],[-8],[-4],[-7],[-6],[-5],[8],[-5],[-1],[-9],[8],[1],[-1],[-7],[-4],[-8],[1],[-1],[8],[-3],[-2],[9],[-8],[-2],[-9],[-6],[-2],[7],[4],[8],[8],[-10],[-4],[2],[-8],[8],[5],[1],[-6],[-2],[5],[1],[7],[-3],[-3],[6],[8],[10],[6],[4],[9],[5],[1],[-7],[10],[-1],[-9],[4],[-2],[4],[9],[9],[-5],[-9],[-3],[6],[-7],[7],[-6],[5],[6],[-5],[-10],[-3],[-8],[-8],[-9],[4],[5],[7],[-6],[-1],[-2],[1],[3],[-8],[-5],[5],[1],[-6],[5],[4],[8],[-7],[1],[1],[7],[-2],[-10],[-8],[2],[5],[-6],[1],[-8],[-6],[10],[8],[8],[-4],[-1],[10],[-9],[-6],[-7],[4],[-8],[-5],[9],[4],[4],[4],[-2],[5],[-10],[-10],[-6],[-9],[-5],[3],[-7],[1],[6],[-4],[3],[-4],[-9],[-4],[-1],[-10],[-8],[1],[3],[6],[-5],[7],[-8],[7],[-4],[8],[-10],[6],[-3],[8],[-9],[-6],[-9],[2],[9],[7],[9],[-5],[-4],[-10],[3],[8],[2],[-3],[-6],[2],[9],[4],[-7],[1],[4],[-1],[4],[9],[-8],[6],[9],[-7],[10],[8],[10],[1],[10],[-9],[-2],[4],[-8],[1],[10],[-10],[1],[10],[-2],[10],[6],[7],[-8],[5],[-4],[4],[3],[-1],[4],[3],[-2],[-10],[10],[2],[6],[3],[-10],[8],[-9],[-5],[-9],[8],[-8],[5],[1],[-5],[10],[7],[-5],[2],[-8],[5],[-5],[5],[8],[-6],[2],[9],[3],[3],[-1],[-8],[-4],[-10],[1],[-10],[9],[9],[8],[10],[6],[3],[2],[-8],[-5],[8],[9],[-8],[8],[-10],[2],[-9],[7],[4],[2],[3],[2],[5],[-9],[6],[6],[-1],[-1],[-6],[7],[-9],[9],[-7],[-6],[4],[-7],[-5],[3],[10],[5],[-8],[-1],[5],[-8],[-10],[-6],[1],[4],[2],[10],[-7],[2],[-5],[-6],[-9],[-10],[-1],[5],[-2],[7],[-7],[10],[-10],[7],[6],[7],[6],[9],[-6],[-4],[-3],[9],[-7],[10],[-9],[-3],[1],[2],[10],[3],[-9],[-1],[-2],[4],[-3],[-1],[5],[2],[8],[3],[-10],[2],[10],[1],[5],[5],[-4],[9],[-5],[4],[-3],[4],[-8],[-2],[-10],[-2],[1],[-10],[-9],[-10],[4],[-8],[-2],[-4],[10],[-4],[-4],[-1],[-7],[-7],[-7],[-5],[-2],[-1],[5],[5],[7],[-8],[10],[5],[-2],[3]], dtype = "int16")#candidate|296|(1200, 1)|const|int16
call_295 = relay.TupleGetItem(func_33_call(relay.reshape(const_296.astype('int16'), [15, 8, 10]), relay.reshape(const_296.astype('int16'), [15, 8, 10]), ), 0)
call_297 = relay.TupleGetItem(func_36_call(relay.reshape(const_296.astype('int16'), [15, 8, 10]), relay.reshape(const_296.astype('int16'), [15, 8, 10]), ), 0)
func_33_call = mod.get_global_var('func_33')
func_36_call = mutated_mod.get_global_var('func_36')
call_300 = relay.TupleGetItem(func_33_call(relay.reshape(const_296.astype('int16'), [15, 8, 10]), relay.reshape(call_295.astype('int16'), [15, 8, 10]), ), 0)
call_301 = relay.TupleGetItem(func_36_call(relay.reshape(const_296.astype('int16'), [15, 8, 10]), relay.reshape(call_295.astype('int16'), [15, 8, 10]), ), 0)
bop_309 = relay.bitwise_xor(uop_293.astype('uint8'), relay.reshape(uop_290.astype('uint8'), relay.shape_of(uop_293))) # shape=(5, 5, 7)
output = relay.Tuple([call_295,const_296,call_300,bop_309,])
output2 = relay.Tuple([call_297,const_296,call_301,bop_309,])
func_324 = relay.Function([var_289,], output)
mod['func_324'] = func_324
mod = relay.transform.InferType()(mod)
mutated_mod['func_324'] = func_324
mutated_mod = relay.transform.InferType()(mutated_mod)
var_325 = relay.var("var_325", dtype = "float32", shape = (5, 5, 7))#candidate|325|(5, 5, 7)|var|float32
func_324_call = mutated_mod.get_global_var('func_324')
call_326 = func_324_call(var_325)
output = call_326
func_327 = relay.Function([var_325], output)
mutated_mod['func_327'] = func_327
mutated_mod = relay.transform.InferType()(mutated_mod)
const_652 = relay.const([[[8,9,8,7,-4,-3,-6,10,8,-10,10,-8,9],[8,-9,-5,9,-10,-2,6,-4,8,-1,9,2,-6],[1,-7,-4,-10,-8,-9,10,3,-6,9,10,-1,-8],[10,-2,-10,10,1,-2,8,9,8,-7,-3,-2,3],[10,2,-4,5,1,-9,5,-7,-5,7,-2,-5,-6],[2,-3,-1,-8,-10,-7,10,-2,-1,1,2,-2,-9],[-3,-3,-5,10,-9,10,6,-2,4,-5,3,1,-1],[-1,3,-9,-6,-9,5,-8,2,4,7,3,9,6],[-3,9,2,-8,10,3,-10,-9,-2,1,-5,2,-10],[3,-4,-3,-8,2,10,6,7,-10,-2,4,-5,7],[-8,2,-5,-7,-4,5,-1,-1,-7,5,-6,3,-3],[3,-9,-8,9,-7,4,3,-4,-9,5,8,-9,-8]],[[-7,5,7,7,-8,5,6,-2,-5,8,5,-4,9],[6,4,-7,4,-2,9,9,6,-7,-5,1,-5,-9],[8,5,-5,7,5,-2,-5,-2,-6,4,-6,-4,-1],[2,6,10,-5,3,-6,-9,4,9,-8,4,3,-7],[10,-9,6,8,-3,6,-3,-7,-9,9,-10,1,-1],[-5,6,3,-1,6,6,-9,-4,6,-4,-8,9,-6],[-6,-10,-5,-1,-7,6,9,-7,-8,5,-1,-1,3],[-2,7,-5,7,9,-2,-1,-7,9,1,-2,-10,4],[7,10,7,2,10,-6,-5,-6,-5,6,-8,-9,-8],[-9,-9,4,10,-6,8,8,7,2,9,7,-9,-8],[-7,-5,10,-5,-6,-5,-5,-3,10,8,5,7,1],[8,10,-6,-2,2,-4,-1,8,-9,8,5,-3,-3]],[[-6,-10,8,-7,-5,5,-4,9,8,10,-7,-10,-9],[3,1,-10,-8,-3,10,7,5,-3,1,-6,-4,-6],[5,8,-2,-8,6,-7,8,-5,2,-6,-5,3,-10],[6,7,-7,-7,-8,5,-1,4,9,8,2,5,-6],[-6,-6,-9,-10,-4,1,-3,10,5,-1,9,-2,-4],[-8,2,-1,4,5,-2,2,-4,-9,1,7,1,4],[-7,-1,-3,-2,-5,-5,2,4,9,-10,-6,1,8],[-3,5,-1,6,-5,-4,-7,-10,10,4,-4,10,7],[-2,-5,-6,9,8,4,-3,4,-6,8,3,9,-2],[2,8,-9,-8,9,1,-5,-10,-2,10,2,-6,3],[8,9,-5,-1,-10,3,3,2,-2,2,10,8,-1],[-7,3,-8,-1,1,8,9,2,-6,6,10,8,3]],[[-7,7,3,7,-1,-5,10,10,-9,5,-3,-6,-10],[-8,-10,4,1,-7,5,-8,-9,-1,-10,8,-2,-1],[-6,5,-5,4,-3,5,2,-8,-10,-3,1,9,-7],[-1,1,-5,10,3,-2,-3,9,-8,-3,-8,-3,9],[9,5,6,4,-9,2,-8,9,6,-4,1,6,8],[-5,8,-5,4,2,8,-5,4,8,-6,1,-8,-7],[-5,-3,8,6,-3,-1,-10,9,9,-5,-3,5,10],[3,1,7,2,10,7,6,-6,-7,1,6,-9,-3],[4,6,-5,1,7,-1,7,1,-7,4,-5,4,8],[-4,-9,-1,-6,-8,-4,-7,9,3,1,-2,10,-4],[8,9,-5,10,1,-8,10,9,7,6,4,-3,-3],[5,-10,6,-6,1,9,9,7,-6,5,1,-1,-9]],[[-8,2,-9,3,-8,9,-8,-7,-4,-5,-6,-9,8],[5,9,-6,6,6,-7,-7,2,10,6,4,-6,2],[2,2,-1,1,1,-5,-9,4,-2,10,-7,-3,-10],[5,-8,7,-10,1,-6,-1,10,-5,1,-5,-4,-8],[-7,-6,-7,-2,-9,6,6,3,8,10,-4,-8,-8],[-9,-2,-3,-9,6,9,-1,-7,-10,-4,6,10,1],[2,-10,-6,3,7,7,-5,2,-2,-4,9,3,-8],[-7,-4,-4,-10,1,3,-4,-9,4,5,-8,8,6],[-6,3,8,4,-8,2,-5,4,6,8,-8,-7,-10],[-1,-5,-10,-8,6,-4,-9,9,2,4,-1,5,-4],[-6,7,-6,-6,5,-3,-10,-8,9,7,-1,-1,-7],[5,-6,5,2,7,10,10,-1,8,-9,-6,-6,-6]],[[3,1,-4,2,-5,-1,10,-4,5,-8,4,10,4],[4,2,-8,9,-5,-6,-4,-5,-10,7,5,-8,10],[9,-9,-7,-5,-3,4,-10,9,-7,9,-10,-4,2],[8,-2,-4,-10,6,-6,-8,3,4,-2,-1,6,8],[-10,-2,4,2,10,-9,-1,-8,7,9,-8,5,-6],[7,-8,-7,-9,-1,-10,-1,3,9,-8,-2,-2,6],[3,-10,-8,10,-3,-6,-7,9,2,-10,-1,-8,7],[-5,2,-9,-1,-2,7,8,-9,6,1,-5,-5,-7],[-5,7,-6,1,2,-3,-8,-5,-6,-6,-7,-3,8],[-1,-3,9,-5,10,-9,-1,10,7,8,-4,4,7],[2,8,-8,-1,1,-10,8,-10,-10,1,5,-7,-9],[7,-1,-5,-6,3,3,-6,-5,1,-8,-4,3,8]],[[5,-3,8,-10,-6,-4,-7,6,-10,-6,-3,-2,-9],[-9,4,-2,-7,-5,-7,-6,9,5,6,6,6,-2],[-9,9,-1,-10,-8,-5,-9,9,-5,-9,4,8,5],[-5,8,-1,-2,-6,-9,-9,1,1,4,6,-7,-2],[8,1,6,6,5,-2,8,-1,4,-5,4,5,-9],[5,-5,-7,9,-8,-7,-10,4,9,-9,2,-10,8],[-4,-10,-3,9,4,-3,-7,9,-7,-6,10,-6,6],[2,-4,10,3,-1,6,4,-5,4,-8,-5,9,-8],[7,-8,10,8,10,2,-7,10,2,-5,1,-10,-2],[3,-4,-2,5,-3,10,10,9,-1,-6,2,-5,4],[8,-4,-9,-4,10,-6,-6,3,-10,5,-7,-8,9],[1,-10,-1,-9,1,-4,10,10,10,-7,-1,-5,8]],[[5,7,9,10,-4,-8,-6,2,-3,-3,-10,-9,7],[4,6,-8,-10,-7,-4,8,7,-1,-4,-2,-7,10],[-1,2,8,-2,10,7,4,8,-2,3,2,-10,-9],[5,-9,-3,3,8,3,-8,-7,-2,-3,-8,5,-2],[-7,5,-7,4,-7,-8,-2,4,6,10,-10,-6,-1],[6,6,-2,2,-1,-10,-7,-1,7,-1,1,-2,-3],[-1,5,-3,-9,9,-6,-1,-10,-1,5,-1,-5,3],[2,-7,8,-5,-2,-4,-9,-2,-3,-1,3,-9,-6],[-3,5,-7,1,-3,3,-4,8,6,10,-2,5,6],[-9,-8,-5,6,-9,8,-8,-1,-1,-8,4,6,-5],[6,4,-8,7,8,1,4,8,9,5,8,6,2],[-3,-5,7,-8,5,5,-6,-4,6,6,-9,1,7]]], dtype = "uint64")#candidate|652|(8, 12, 13)|const|uint64
var_653 = relay.var("var_653", dtype = "uint64", shape = (8, 12, 13))#candidate|653|(8, 12, 13)|var|uint64
bop_654 = relay.greater(const_652.astype('bool'), relay.reshape(var_653.astype('bool'), relay.shape_of(const_652))) # shape=(8, 12, 13)
func_33_call = mod.get_global_var('func_33')
func_36_call = mutated_mod.get_global_var('func_36')
var_658 = relay.var("var_658", dtype = "int16", shape = (4, 300))#candidate|658|(4, 300)|var|int16
call_657 = relay.TupleGetItem(func_33_call(relay.reshape(var_658.astype('int16'), [15, 8, 10]), relay.reshape(var_658.astype('int16'), [15, 8, 10]), ), 0)
call_659 = relay.TupleGetItem(func_36_call(relay.reshape(var_658.astype('int16'), [15, 8, 10]), relay.reshape(var_658.astype('int16'), [15, 8, 10]), ), 0)
output = relay.Tuple([bop_654,call_657,var_658,])
output2 = relay.Tuple([bop_654,call_659,var_658,])
func_663 = relay.Function([var_653,var_658,], output)
mod['func_663'] = func_663
mod = relay.transform.InferType()(mod)
mutated_mod['func_663'] = func_663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_663_call = mutated_mod.get_global_var('func_663')
var_665 = relay.var("var_665", dtype = "uint64", shape = (8, 12, 13))#candidate|665|(8, 12, 13)|var|uint64
var_666 = relay.var("var_666", dtype = "int16", shape = (4, 300))#candidate|666|(4, 300)|var|int16
call_664 = func_663_call(var_665,var_666,)
output = call_664
func_667 = relay.Function([var_665,var_666,], output)
mutated_mod['func_667'] = func_667
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1072 = relay.var("var_1072", dtype = "uint8", shape = (11, 6, 13))#candidate|1072|(11, 6, 13)|var|uint8
const_1073 = relay.const([[[-5,4,-7,9,5,6,3,10,-1,6,8,10,-10],[5,-4,-7,5,4,-2,-6,5,2,-3,-1,3,-6],[9,8,-4,1,-3,8,-10,10,5,10,7,8,-4],[-4,6,5,-6,5,7,8,6,8,8,9,-3,3],[-9,-9,10,10,-3,-3,10,-1,-6,7,-4,-10,-2],[-8,-8,-4,-4,1,-8,3,-6,2,-6,2,-1,6]],[[5,-10,4,3,-10,10,2,1,-10,1,9,-3,6],[7,-6,3,-8,8,2,4,8,8,-5,10,-1,3],[-6,-7,2,2,-8,9,9,-9,-1,-4,9,1,-1],[1,-1,4,-1,-4,8,10,2,-5,7,3,-9,6],[-9,3,-7,-1,-9,8,9,-2,7,-4,-9,9,5],[1,8,-1,4,6,8,-10,6,4,9,4,-8,-4]],[[-9,3,4,7,3,9,-2,9,-4,-7,-8,-8,9],[-4,2,3,2,5,-2,-7,10,2,-3,-4,-3,-1],[-3,1,-1,-8,4,4,9,-1,-4,6,6,-8,1],[10,-4,-7,8,-1,-3,-3,2,3,9,-10,4,-6],[4,-1,-7,-2,-10,10,-7,6,-9,8,-8,-3,-7],[-9,1,-1,-3,-1,-1,-1,-2,-8,1,-10,5,-2]],[[-1,10,-9,8,8,4,-10,-10,-8,2,4,-10,4],[-5,-9,9,-3,-7,10,2,-3,-9,-1,-3,-2,2],[5,-10,3,-5,6,2,7,-4,3,6,2,10,-4],[6,-10,-9,10,1,9,-4,3,4,5,8,-4,5],[-10,1,2,8,-6,4,-10,-7,-4,-2,9,1,-6],[4,-3,-5,-8,9,-4,9,-5,3,-1,-4,5,3]],[[6,2,3,9,8,3,2,5,8,-5,-8,-10,-3],[5,-2,4,4,-7,3,-7,4,7,9,-10,-8,1],[5,7,6,6,4,-8,-7,7,3,-2,-1,2,1],[-8,7,4,-1,-10,7,-6,5,7,-1,3,-6,2],[4,-9,6,-5,-7,4,4,-6,9,9,-8,-9,1],[-4,9,-8,7,-9,7,5,4,3,-5,-8,2,10]],[[4,-10,3,3,7,-4,-1,7,-10,-3,2,-4,-6],[3,8,10,5,8,-6,-10,4,-9,-1,-2,-9,-5],[10,9,-2,6,6,-5,-7,-8,5,6,-4,-6,-1],[7,-5,10,2,1,-10,7,2,8,2,-2,6,8],[-3,8,-5,2,5,-5,-1,-4,-3,8,10,5,-4],[1,-5,3,-5,1,-3,-10,-5,9,1,-9,-2,-10]],[[-5,-6,-3,10,-8,-7,-3,5,-1,4,9,-4,-5],[-7,-3,1,3,8,8,4,-2,-1,9,-9,-2,-6],[6,-3,6,10,-6,-7,2,-5,-7,6,-1,-4,-4],[1,-8,7,9,-7,-8,4,9,3,1,4,6,-7],[9,-5,8,1,5,2,-7,-10,-5,1,8,-9,-1],[-8,3,3,-9,-6,-6,-3,-4,4,-3,10,-1,-5]],[[-6,-9,-5,5,-10,-1,9,-8,-2,-8,5,2,8],[-7,5,-7,6,10,-1,-1,-5,2,10,1,-10,-10],[2,-6,-4,-7,-4,-1,-8,-6,-6,-10,9,-5,3],[-3,-4,9,-7,-6,7,-1,8,5,-3,-7,-8,-7],[10,-8,-7,-7,5,9,-10,-6,-10,1,-9,6,-5],[-10,-1,-2,7,5,2,-7,7,-1,-2,-7,4,-10]],[[4,6,2,-4,10,-5,7,-3,9,8,-5,-4,-5],[-9,9,-1,-9,4,-2,-4,6,1,7,-2,3,6],[-8,5,3,2,5,-5,-2,-6,7,7,9,-7,-10],[-5,-1,-3,1,-2,-3,-8,-10,5,-4,-8,-10,6],[-3,-6,-4,-7,3,-3,9,-1,-2,3,2,7,10],[8,-10,-9,-5,-7,-9,-5,-6,9,6,10,-10,3]],[[2,9,5,1,-10,-8,7,-8,-2,9,1,-3,-1],[-4,-7,-7,7,10,3,-7,4,-2,5,-7,2,4],[7,8,-2,1,1,10,-3,-2,-2,3,-6,-6,6],[-7,1,-2,1,-6,-6,4,-4,7,-5,-6,-8,4],[6,7,3,-2,5,3,-6,1,-6,9,-7,7,-5],[-8,4,9,2,-3,9,-1,9,-2,-5,-5,8,-10]],[[2,7,-10,10,-7,-3,-6,3,-2,-4,10,-4,-1],[-3,4,-1,3,-4,3,7,7,-8,-8,10,5,1],[-2,-8,7,-9,7,7,-10,-2,-9,2,3,-8,-10],[3,2,3,-10,-6,-4,-7,-7,-2,-7,9,-7,9],[2,1,6,9,9,-4,5,-3,5,2,4,8,-10],[7,-9,-5,6,4,1,3,-7,6,-7,1,-9,-3]]], dtype = "uint8")#candidate|1073|(11, 6, 13)|const|uint8
bop_1074 = relay.not_equal(var_1072.astype('bool'), relay.reshape(const_1073.astype('bool'), relay.shape_of(var_1072))) # shape=(11, 6, 13)
func_33_call = mod.get_global_var('func_33')
func_36_call = mutated_mod.get_global_var('func_36')
const_1082 = relay.const([4,-5,3,7,8,-8,-10,8,10,10,-9,9,-1,-3,7,-4,-5,8,-2,-3,-8,5,-5,-1,4,-4,4,-2,-8,-5,3,9,-8,-8,-2,3,4,-10,-10,6,2,-6,3,-5,-4,-9,-2,7,-3,-2,-5,-7,-2,8,9,7,-5,-8,-10,-1,-5,-3,9,7,-4,9,2,6,4,-8,-7,-4,6,1,7,2,4,-7,7,5,2,9,-9,-10,1,5,10,2,-1,4,7,-8,-5,-4,-8,2,-4,-4,9,5,1,-10,9,-9,-5,10,10,4,4,8,8,4,2,-4,-3,1,-1,4,-10,-2,-5,8,-10,-1,-10,-6,8,2,-7,2,-7,3,3,8,10,8,-10,-1,9,-5,-2,1,3,1,-2,-10,-6,-5,-10,-2,-2,-6,-9,5,8,10,2,-1,5,-5,-6,5,7,3,-4,-8,7,1,10,7,5,-9,9,2,-3,-10,-1,5,5,-7,-4,7,10,9,-3,9,2,-5,-9,4,3,5,10,-1,-7,-6,-3,2,9,5,-8,10,-4,10,1,9,1,-7,3,6,4,1,-2,-3,6,3,-2,-3,-7,2,-10,-3,3,10,7,8,-7,-1,3,2,-1,3,-9,2,1,5,2,-10,9,3,-7,7,9,7,-1,-1,-5,8,1,9,3,-3,5,10,-7,-9,-3,2,-2,5,-7,8,3,3,5,7,-9,4,6,-7,-6,-9,1,-2,8,8,6,-7,-1,2,-4,5,1,-7,-3,2,-9,10,-2,-4,-10,8,-8,4,5,5,-8,5,10,-8,6,-4,-5,-8,-7,-9,-5,-4,2,-2,7,-10,-10,4,-7,-4,-6,-10,3,8,-10,-8,4,8,3,6,-7,-2,-1,6,-1,-3,-7,8,10,-1,-2,5,-2,-3,3,4,6,-7,-4,-7,1,4,2,9,7,-2,8,5,2,-4,7,-5,4,2,-2,5,-8,5,-10,-1,4,-3,1,-4,-6,-8,-6,10,4,8,-2,3,-1,-9,3,-7,3,1,10,7,-4,10,9,-10,1,-8,2,-2,-10,-5,9,1,-1,-8,-10,6,-1,5,-6,2,2,10,-1,-6,-3,5,-2,6,1,-6,-8,-6,-1,-8,6,6,-1,-4,3,3,-3,-10,5,10,-9,-8,1,9,-4,2,-8,-10,7,1,-5,5,-5,3,-10,-7,-9,9,8,5,4,4,6,-1,7,2,-6,-10,-4,2,-5,-5,1,-8,4,1,-1,-10,-8,-9,-2,-8,1,-9,2,9,10,4,9,-10,-5,1,-9,-2,-1,-3,5,-1,-3,9,2,3,-3,-3,8,5,8,9,4,-4,6,8,-3,8,-9,-9,7,5,8,-2,5,2,-1,3,-4,-2,8,-2,9,5,6,-3,8,3,-7,-4,10,10,-9,-7,-1,5,-9,8,-6,-7,1,-7,7,-6,-5,-1,-10,-8,-1,2,-6,-1,4,4,-4,-2,3,3,1,6,-2,3,-5,1,-8,10,-9,-10,8,-3,-6,-7,-6,9,-10,3,2,-5,9,-5,-8,2,5,2,-7,-8,-10,4,-5,-3,-9,-10,4,-10,-1,1,-1,1,-6,-1,-8,8,4,-3,-6,-6,3,-8,1,-10,-4,-6,-4,2,9,-5,-10,2,4,3,-2,-4,2,1,-9,-6,4,9,8,-7,3,-2,4,7,1,-7,8,7,-5,-3,-1,-9,-2,2,10,-7,-3,7,6,5,-5,-2,6,-3,10,-5,-7,-6,3,-1,9,-5,8,8,-6,-3,7,-4,-7,-6,-10,-7,-7,6,-1,2,-4,10,1,-9,-3,9,-10,-5,-7,3,3,-6,3,10,-10,5,1,9,-5,8,1,-2,-10,7,9,9,-9,2,-9,-9,-7,5,2,-10,2,-7,-7,5,5,7,3,-5,2,-6,2,-10,-10,6,8,-8,-6,-3,-5,2,-2,3,-6,-8,10,9,-1,-10,5,10,-4,6,-5,-6,-9,2,1,7,-6,8,-10,7,-8,-2,-4,8,5,1,5,2,-6,-5,10,4,8,-9,9,-4,4,1,10,-6,-7,5,-4,6,-1,-9,-5,-4,-5,5,-10,4,-5,-2,8,8,-6,-5,-1,-2,-4,-1,4,-3,-10,-6,7,6,4,-7,-5,8,-9,4,6,2,7,-10,-1,-1,-3,-5,4,4,-9,-2,5,8,5,-8,5,2,5,2,-4,1,9,-10,7,-3,-3,3,-9,6,2,-4,3,-1,-9,-6,-6,-2,5,10,-6,-10,-9,8,3,-1,-7,-2,-2,-9,-5,-4,4,-8,10,2,-10,-4,5,-9,8,-5,-7,-5,9,-10,3,-7,-1,-5,-2,6,1,-3,4,7,1,8,9,5,-9,4,10,-8,-8,-2,2,-4,-8,1,8,5,-10,-5,8,8,-6,1,6,7,-4,6,-6,1,7,5,10,5,5,-8,10,2,10,10,-3,-2,5,-5,10,5,7,-5,10,-8,7,-9,4,3,-3,10,9,2,-3,6,-2,3,9,-8,-9,5,2,5,5,10,10,-3,5,4,4,-1,9,8,3,10,-2,-8,-8,2,10,3,-3,10,4,6,-5,4,9,3,-8,4,7,4,-4,1,8,3,-2,1,-8,-4,2,-7,2,4,5,9,9,-1,10,8,-8,3,-3,-4,9,-4,-9,-3,2,-10,7,-9,5,-1,2,4,2,9,-2,-8,2,4,-2,-2,-6,1,4,-2,-10,5,-6,-1,6,6,3,-1,-6,8,-3,2,7,-5,-3,-1,3,4,-4,-8,7,2,-5,-8,-5,-9,-9,8,-4,6,-3,10,-2,5,-1,10,-6,9,3,-4,-4,-7,-6,8,1,7,10,9,-2,-7,7,1,8,-9,-9,-9,8,7,-4,-3,-8,8,8,9,-2,-2,-4,6,-5,2,8,9,1,1,1,-2,-4,7,10,1,2,4,-8,-7,5,-7,3,10,-1,1,5,-1,6,3,3,1,-9,9,-7,-8,-6,-7,2,2,10,-3,7,-4,-1,-10,-2,10,-7,-7,-7,-9,4,1,5,9,-9,8,8,10,10,-6,2,-4,-6,5,9,-4,8,-7,1,8,-8,-7,-10,-8,8,5,-9,-10,9,8,-7,-1,10,-10,5,10,-4,-2,3,-7,3,10,10,-8,-5,-6,-9,-9,-4,9,-9,-3,-7,9,4,-10,7,-10,3,-5,4,-1,8,-9], dtype = "int16")#candidate|1082|(1200,)|const|int16
call_1081 = relay.TupleGetItem(func_33_call(relay.reshape(const_1082.astype('int16'), [15, 8, 10]), relay.reshape(const_1082.astype('int16'), [15, 8, 10]), ), 0)
call_1083 = relay.TupleGetItem(func_36_call(relay.reshape(const_1082.astype('int16'), [15, 8, 10]), relay.reshape(const_1082.astype('int16'), [15, 8, 10]), ), 0)
uop_1090 = relay.erf(const_1082.astype('float32')) # shape=(1200,)
output = relay.Tuple([bop_1074,call_1081,uop_1090,])
output2 = relay.Tuple([bop_1074,call_1083,uop_1090,])
func_1098 = relay.Function([var_1072,], output)
mod['func_1098'] = func_1098
mod = relay.transform.InferType()(mod)
var_1099 = relay.var("var_1099", dtype = "uint8", shape = (11, 6, 13))#candidate|1099|(11, 6, 13)|var|uint8
output = func_1098(var_1099)
func_1100 = relay.Function([var_1099], output)
mutated_mod['func_1100'] = func_1100
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1167 = relay.var("var_1167", dtype = "float32", shape = (14, 10, 12))#candidate|1167|(14, 10, 12)|var|float32
uop_1168 = relay.erf(var_1167.astype('float32')) # shape=(14, 10, 12)
func_324_call = mod.get_global_var('func_324')
func_327_call = mutated_mod.get_global_var('func_327')
var_1184 = relay.var("var_1184", dtype = "float32", shape = (175, 1))#candidate|1184|(175, 1)|var|float32
call_1183 = relay.TupleGetItem(func_324_call(relay.reshape(var_1184.astype('float32'), [5, 5, 7])), 2)
call_1185 = relay.TupleGetItem(func_327_call(relay.reshape(var_1184.astype('float32'), [5, 5, 7])), 2)
output = relay.Tuple([uop_1168,call_1183,var_1184,])
output2 = relay.Tuple([uop_1168,call_1185,var_1184,])
func_1186 = relay.Function([var_1167,var_1184,], output)
mod['func_1186'] = func_1186
mod = relay.transform.InferType()(mod)
mutated_mod['func_1186'] = func_1186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1186_call = mutated_mod.get_global_var('func_1186')
var_1188 = relay.var("var_1188", dtype = "float32", shape = (14, 10, 12))#candidate|1188|(14, 10, 12)|var|float32
var_1189 = relay.var("var_1189", dtype = "float32", shape = (175, 1))#candidate|1189|(175, 1)|var|float32
call_1187 = func_1186_call(var_1188,var_1189,)
output = call_1187
func_1190 = relay.Function([var_1188,var_1189,], output)
mutated_mod['func_1190'] = func_1190
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1356 = relay.var("var_1356", dtype = "int8", shape = (15, 7, 5))#candidate|1356|(15, 7, 5)|var|int8
var_1357 = relay.var("var_1357", dtype = "int8", shape = (15, 7, 5))#candidate|1357|(15, 7, 5)|var|int8
bop_1358 = relay.less_equal(var_1356.astype('bool'), relay.reshape(var_1357.astype('bool'), relay.shape_of(var_1356))) # shape=(15, 7, 5)
uop_1364 = relay.exp(var_1356.astype('float64')) # shape=(15, 7, 5)
func_324_call = mod.get_global_var('func_324')
func_327_call = mutated_mod.get_global_var('func_327')
var_1367 = relay.var("var_1367", dtype = "float32", shape = (175,))#candidate|1367|(175,)|var|float32
call_1366 = relay.TupleGetItem(func_324_call(relay.reshape(var_1367.astype('float32'), [5, 5, 7])), 0)
call_1368 = relay.TupleGetItem(func_327_call(relay.reshape(var_1367.astype('float32'), [5, 5, 7])), 0)
var_1370 = relay.var("var_1370", dtype = "float64", shape = (15, 7, 5))#candidate|1370|(15, 7, 5)|var|float64
bop_1371 = relay.logical_and(uop_1364.astype('bool'), relay.reshape(var_1370.astype('bool'), relay.shape_of(uop_1364))) # shape=(15, 7, 5)
output = relay.Tuple([bop_1358,call_1366,var_1367,bop_1371,])
output2 = relay.Tuple([bop_1358,call_1368,var_1367,bop_1371,])
func_1376 = relay.Function([var_1356,var_1357,var_1367,var_1370,], output)
mod['func_1376'] = func_1376
mod = relay.transform.InferType()(mod)
mutated_mod['func_1376'] = func_1376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1376_call = mutated_mod.get_global_var('func_1376')
var_1378 = relay.var("var_1378", dtype = "int8", shape = (15, 7, 5))#candidate|1378|(15, 7, 5)|var|int8
var_1379 = relay.var("var_1379", dtype = "int8", shape = (15, 7, 5))#candidate|1379|(15, 7, 5)|var|int8
var_1380 = relay.var("var_1380", dtype = "float32", shape = (175,))#candidate|1380|(175,)|var|float32
var_1381 = relay.var("var_1381", dtype = "float64", shape = (15, 7, 5))#candidate|1381|(15, 7, 5)|var|float64
call_1377 = func_1376_call(var_1378,var_1379,var_1380,var_1381,)
output = call_1377
func_1382 = relay.Function([var_1378,var_1379,var_1380,var_1381,], output)
mutated_mod['func_1382'] = func_1382
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1629 = relay.const([[[10,-1,-1,10,-1,-7,-5,-7,-3,2,-3]],[[-10,7,6,-9,-1,10,1,-3,1,-2,-1]],[[5,6,4,-1,-2,10,4,-7,10,2,-10]],[[-3,-4,4,-5,6,6,-9,8,9,-9,-7]],[[4,6,2,6,-2,4,5,5,5,-1,1]],[[-1,-10,-9,9,3,-2,1,-8,-7,-8,-10]]], dtype = "uint64")#candidate|1629|(6, 1, 11)|const|uint64
const_1630 = relay.const([[[-5,7,4,-6,9,7,-6,-5,-4,-8,10],[-2,8,-7,4,-4,-8,5,-10,-1,8,8],[6,2,8,-5,-8,7,-8,6,10,1,2],[-4,-8,3,2,-9,-3,-2,-3,-1,-5,-6],[-3,-3,2,-2,9,-7,10,-2,-9,3,-3],[5,2,-6,-4,-10,-7,-1,8,-5,9,5],[-2,-4,-7,5,1,-8,7,2,10,-10,8],[8,-7,2,-7,-7,-3,1,7,-1,-7,-5]],[[-5,-6,2,2,9,3,-4,-4,-3,1,-2],[-7,-10,9,-7,2,3,5,-5,-3,-8,10],[3,-3,5,-4,6,-5,-10,-6,9,9,5],[5,-2,4,-5,1,8,-8,-10,7,-4,4],[7,2,-5,5,-6,10,9,7,-8,-5,4],[9,-6,10,1,5,-2,-3,10,9,-10,-4],[-4,-4,9,1,1,-7,-8,-8,-9,-6,-1],[-9,9,-5,-10,-8,9,-7,1,2,-7,10]],[[6,-4,-2,7,1,2,-8,9,-7,-10,-10],[5,-6,5,7,-1,-5,7,5,-1,-2,6],[-4,-7,1,7,8,-3,10,10,-5,-10,3],[-8,-3,-7,-5,-6,8,-10,-3,-10,-1,-5],[-1,10,-3,-6,10,-9,6,10,8,8,9],[5,-5,5,10,-6,-5,8,-9,-6,-2,-9],[-10,-8,5,4,-6,-8,-8,6,2,-10,10],[-5,-4,-7,-8,5,-5,8,-10,6,5,-6]],[[6,10,8,5,10,9,2,10,-2,10,7],[1,-4,5,10,2,-5,-6,-4,5,10,8],[1,4,5,3,5,1,-1,-9,-8,-9,-5],[8,-5,-3,-8,-8,9,2,-9,-5,-9,4],[-1,-10,-5,-3,-5,10,-5,-4,-4,-10,6],[6,-7,10,7,7,-8,-8,8,-5,-4,3],[-10,10,1,6,4,-5,-4,10,-10,1,3],[-10,5,-4,-10,6,-3,-3,-10,4,-2,-8]],[[5,-8,-4,2,2,-10,7,6,10,9,-2],[-10,1,8,-6,-10,4,-5,-10,-8,10,1],[-4,7,9,-7,-8,5,2,5,-10,8,-4],[4,3,10,2,3,8,-9,-5,10,-5,5],[8,5,4,4,8,5,2,5,5,-9,7],[2,6,5,4,-9,7,-10,1,10,2,1],[9,9,5,8,7,3,-1,5,8,10,1],[-10,-4,2,-6,-1,10,-10,7,6,-10,-7]],[[7,8,7,-5,-8,9,-5,-9,5,-5,-9],[1,-7,-9,-5,-7,8,2,-1,-4,-1,-10],[-3,5,-10,-4,-7,4,1,10,2,2,1],[5,-8,1,-1,6,-4,3,-1,-1,-1,4],[-10,10,10,-2,-6,2,-8,-5,-8,3,2],[-3,3,3,1,-10,10,5,-3,-10,5,-3],[7,-2,-9,-4,-10,-3,-3,1,-4,6,-10],[-5,-7,-10,-8,-5,-2,-9,-1,1,-2,-6]]], dtype = "uint64")#candidate|1630|(6, 8, 11)|const|uint64
bop_1631 = relay.bitwise_xor(const_1629.astype('uint64'), const_1630.astype('uint64')) # shape=(6, 8, 11)
output = bop_1631
output2 = bop_1631
func_1635 = relay.Function([], output)
mod['func_1635'] = func_1635
mod = relay.transform.InferType()(mod)
output = func_1635()
func_1636 = relay.Function([], output)
mutated_mod['func_1636'] = func_1636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1635_call = mod.get_global_var('func_1635')
func_1636_call = mutated_mod.get_global_var('func_1636')
call_1643 = func_1635_call()
call_1644 = func_1635_call()
uop_1671 = relay.acosh(call_1643.astype('float64')) # shape=(6, 8, 11)
uop_1673 = relay.acosh(call_1644.astype('float64')) # shape=(6, 8, 11)
output = relay.Tuple([uop_1671,])
output2 = relay.Tuple([uop_1673,])
func_1676 = relay.Function([], output)
mod['func_1676'] = func_1676
mod = relay.transform.InferType()(mod)
mutated_mod['func_1676'] = func_1676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1676_call = mutated_mod.get_global_var('func_1676')
call_1677 = func_1676_call()
output = call_1677
func_1678 = relay.Function([], output)
mutated_mod['func_1678'] = func_1678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1676_call = mod.get_global_var('func_1676')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_1700 = relay.TupleGetItem(func_1676_call(), 0)
call_1701 = relay.TupleGetItem(func_1678_call(), 0)
output = call_1700
output2 = call_1701
func_1716 = relay.Function([], output)
mod['func_1716'] = func_1716
mod = relay.transform.InferType()(mod)
output = func_1716()
func_1717 = relay.Function([], output)
mutated_mod['func_1717'] = func_1717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1635_call = mod.get_global_var('func_1635')
func_1636_call = mutated_mod.get_global_var('func_1636')
call_1754 = func_1635_call()
call_1755 = func_1635_call()
output = relay.Tuple([call_1754,])
output2 = relay.Tuple([call_1755,])
func_1760 = relay.Function([], output)
mod['func_1760'] = func_1760
mod = relay.transform.InferType()(mod)
output = func_1760()
func_1761 = relay.Function([], output)
mutated_mod['func_1761'] = func_1761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1716_call = mod.get_global_var('func_1716')
func_1717_call = mutated_mod.get_global_var('func_1717')
call_1883 = func_1716_call()
call_1884 = func_1716_call()
func_324_call = mod.get_global_var('func_324')
func_327_call = mutated_mod.get_global_var('func_327')
const_1888 = relay.const([7.133129,-5.472149,1.608285,-6.715246,-1.345765,-5.844347,-7.791188,-3.817047,-9.960483,9.389594,-0.513477,-5.637500,-5.042933,-5.188741,-4.878228,-0.533811,-0.121047,2.734722,-7.341552,-0.191821,-5.410080,-6.109178,-8.139767,-2.831813,6.836189,4.412215,7.728378,-1.034059,7.752041,6.231442,-6.284817,-7.214958,-9.768579,-1.611977,0.829931,-0.932511,1.882212,1.183708,1.290913,-5.358739,0.265639,5.692857,4.473485,-1.947614,-2.687816,-2.044302,6.132945,-6.552051,-1.751839,-6.414519,0.240960,2.300763,-2.959801,-7.811598,8.348485,-4.604885,-0.658968,9.794196,3.241529,7.883182,-6.264083,-8.108867,-4.390066,2.352489,1.122645,-6.186003,-6.579292,-5.519250,-4.305476,3.746512,4.508169,-8.898934,6.568759,-9.477582,8.573454,-1.412023,8.150008,-1.881004,7.136618,1.945306,9.504445,-9.565790,6.625121,-1.743577,1.281717,6.815336,4.802319,3.558744,-5.542192,5.561326,9.851049,9.951952,-6.132672,-6.973554,9.147999,2.710477,7.954148,2.805981,-6.717896,9.410282,7.890468,-6.272706,-5.899872,6.077841,8.128829,8.189368,-0.061631,-0.048091,-1.089374,1.077341,-1.025653,-2.013037,-3.459953,-1.274236,-8.402500,-4.927974,6.499703,-2.792899,-6.929717,-8.866620,0.155840,-9.490348,-3.264819,-0.805154,6.205574,-2.404408,-0.501493,-1.932899,-6.638530,2.278515,-8.306026,-5.967613,2.361481,8.541301,-5.746380,5.034656,2.976383,-1.680263,-6.584242,-1.010292,-4.695667,7.833168,-0.276697,0.299524,2.697218,9.186752,-1.637949,6.571094,-6.998123,-2.083274,-9.160289,-8.488667,9.092018,6.921819,-2.438549,-0.282246,-4.238556,1.162353,4.293496,-1.296840,-8.867185,-0.837209,0.355455,-9.078181,-6.424946,1.534493,-2.161349,4.076364,-8.627763,-5.689193,-4.805320,6.350295,-5.674765,5.494991,4.174299], dtype = "float32")#candidate|1888|(175,)|const|float32
call_1887 = relay.TupleGetItem(func_324_call(relay.reshape(const_1888.astype('float32'), [5, 5, 7])), 0)
call_1889 = relay.TupleGetItem(func_327_call(relay.reshape(const_1888.astype('float32'), [5, 5, 7])), 0)
func_1186_call = mod.get_global_var('func_1186')
func_1190_call = mutated_mod.get_global_var('func_1190')
const_1894 = relay.const([3.981157,-1.513449,-0.427011,-7.515156,7.516251,-4.397042,3.446579,1.039940,2.595115,-1.884731,4.336161,7.694026,-5.069575,4.744412,0.932042,0.278111,-4.509351,7.535077,3.981674,-0.991448,9.013638,1.171516,4.988365,-3.948314,-2.010817,-4.849278,-4.961720,-9.336297,6.448364,-0.246687,5.310753,4.582793,4.709384,-7.525958,-8.242193,-7.813786,-9.647664,-3.198739,-8.952073,-3.734058,-8.771117,-9.780970,6.523887,9.543681,9.412049,1.066423,0.837667,-6.042121,8.956643,1.002438,9.725840,-2.054727,-3.605131,1.057521,9.370840,1.156454,-3.954232,1.584381,-3.298513,-7.110058,-0.813937,-6.407891,-8.883086,6.895530,1.958904,6.518911,-4.578103,-6.922896,9.575672,4.870921,-2.622633,-0.079317,2.156180,-5.209644,-7.276941,2.308213,-4.728407,-6.096882,-6.775013,4.989155,0.145326,-9.663722,-9.357367,-5.422753,-1.884070,-8.657499,-9.326687,-1.377407,-2.425306,3.149924,3.355364,-5.664333,-0.797183,1.246026,-8.081489,-4.654077,9.273463,3.461907,-4.283012,7.611703,2.040389,5.953441,-3.303931,8.066129,-1.700804,6.535259,4.621154,5.124723,9.372661,-4.800765,3.691734,1.799570,0.775684,-8.753353,-4.247388,4.698096,-2.542079,5.364177,-3.581498,2.164149,5.827250,-9.690796,-9.144685,-4.996356,-3.167713,2.274035,3.148766,6.555261,5.088411,-3.368283,5.302082,-2.390614,-2.449981,8.986286,-5.376834,8.071338,6.040696,9.033877,-3.217422,7.196577,-3.405255,-0.732466,2.750426,3.727272,-1.447026,-1.167776,4.790268,1.712493,-6.940977,-6.475463,8.657852,-2.270892,0.996173,2.242347,3.859736,0.136899,8.305610,-9.575049,5.038082,-4.297018,8.959416,1.866262,4.573084,9.175729,1.203220,-7.208264,9.882257,-8.590426,-0.327970,-4.361136,-8.064916,-3.694088,-3.663560,1.772086,-0.854894,2.776491,-0.725379,-2.620023,2.297706,-5.417883,6.693445,4.008715,7.633062,5.942798,2.245893,-9.773283,7.386317,-7.696294,0.163516,5.922256,1.096147,0.116975,-8.286378,4.256077,0.271868,-5.186530,-2.306367,-1.004932,6.383122,-0.342829,7.453823,9.205362,9.183687,-6.030540,4.454668,-9.991228,-5.970342,-9.741357,1.951957,-3.530257,3.679800,5.849539,0.417361,-4.440996,5.400403,6.843535,3.750268,-3.862002,-1.425829,4.993225,-2.258719,-1.642280,2.456355,0.617280,-2.698212,-0.037623,7.092967,-2.485106,0.287589,1.244067,7.843029,6.009788,3.185339,3.438312,5.316974,1.280574,-5.549681,-1.215014,8.472800,-0.699610,-7.806242,7.678290,-8.961715,-7.911698,-0.653588,-1.542169,-3.158779,-4.023119,4.289435,-6.148936,-7.112191,1.367102,8.593130,4.126455,2.165196,4.967144,-7.559600,3.304102,-7.579485,-9.632658,-9.419739,-4.426837,-7.905684,-5.786755,-7.488333,-0.322847,7.180222,8.152411,-5.731034,3.980473,-2.718365,2.632305,8.226043,9.328025,-7.785645,6.270281,-0.792635,2.743586,-8.867487,6.461544,-1.328213,-3.925098,5.611174,7.917175,-1.662012,8.831936,0.155513,6.593798,-3.990716,-2.795668,-6.320018,9.949312,7.760193,0.531242,-0.524463,-9.803446,6.249047,-3.572386,-7.034187,-6.961955,-3.221602,2.842662,-1.771501,0.378805,9.694446,0.060908,0.807914,-0.235477,7.785472,-8.006251,-3.749831,5.372995,3.795864,-5.181532,0.258799,-4.461198,8.731571,0.963970,-9.017315,-2.938878,-6.977993,2.452452,-3.467326,-2.799842,-7.857330,6.745355,2.518206,-9.419064,1.635660,-4.397664,7.552119,-8.128151,-8.398608,-2.191703,-4.571684,-3.569546,-5.282672,-5.490663,0.392850,-4.049057,-7.805509,0.791851,-6.037096,-2.117033,-7.523805,-3.455205,-5.530917,-1.984873,-3.524453,6.410489,7.087457,5.422383,-3.088329,-8.437086,-4.945872,3.441122,4.962717,-1.271932,-0.390165,8.156916,3.352942,-7.206831,-7.315834,-8.398843,2.314699,-5.837522,2.266879,-4.248142,7.463771,-4.933828,8.921557,-3.549396,-6.377165,2.189150,-6.045697,2.331965,-6.940118,4.794413,8.502674,-3.588410,6.083816,2.926281,-3.385633,-5.195188,1.072562,-4.471960,-6.499943,3.950534,0.141294,5.256257,1.126421,-8.371237,-7.410071,-8.432520,5.954356,-9.057845,6.477710,-3.228328,6.757085,-3.702573,2.430850,-9.646756,5.757451,-8.811417,-9.901925,-8.521640,-7.483732,0.744536,-3.738731,-6.193264,-4.642638,4.523413,2.459055,-0.498465,-4.534399,5.752337,4.220482,-8.197827,2.459491,1.971306,-3.288725,7.831633,-3.698459,-2.769471,-2.635509,3.569376,5.210977,1.461663,-3.051884,-6.493637,-4.512739,-7.628445,6.942858,-1.333520,4.886026,-7.337138,-0.997974,-8.115938,-8.804382,2.515961,-4.507063,-2.904551,9.211099,-2.754164,4.582240,9.810652,-7.497504,2.385108,-4.432775,-5.197056,3.820009,1.262580,-6.356966,0.946252,-4.520623,4.026567,6.855907,9.114799,3.026346,-4.468485,-3.102666,-6.570654,7.121683,-7.944170,-8.425459,2.019082,3.652869,3.477897,-7.720904,-8.765873,8.468535,9.990075,7.054065,-6.220607,-7.407668,8.738975,-6.912160,1.702229,6.205453,0.375901,-0.553105,-0.770732,0.585506,0.432679,-5.647078,9.966817,-8.248577,-7.234793,1.032627,-0.036006,4.764910,-3.378332,-8.283526,0.798296,4.013613,8.950935,8.571814,4.185596,6.189975,-3.949205,-2.046003,9.672870,8.258156,8.970610,-3.285557,-3.036775,0.255353,7.009304,4.765517,-8.967182,3.846100,-8.334612,3.603973,-8.143152,4.248237,-3.002934,-5.794514,-8.822222,8.623165,-1.537766,3.034196,1.568176,2.181848,-7.959880,5.155703,1.983614,-8.854060,2.868224,8.504656,-5.589541,-9.493536,-5.322014,7.265366,-9.921023,-9.384382,-5.516901,-4.069429,0.047622,4.899252,-6.197055,-8.390827,2.643787,2.879574,-5.794207,-1.339318,7.333713,2.018843,7.511351,-9.586214,8.235826,-8.569987,0.769845,3.311389,-7.446213,-0.807645,4.570758,-7.078792,-2.764676,1.321935,-2.999745,9.643640,-6.173086,-4.910282,8.989153,-5.820372,5.249454,6.261004,2.704635,0.633300,5.681374,-4.749115,-2.456083,9.342347,-3.684720,0.168686,5.324214,1.488936,0.168199,4.992213,-5.366495,1.632931,6.102011,-6.039421,5.888989,-6.454832,-2.025381,4.091749,-4.065231,2.582675,4.963754,2.520844,7.858181,4.824358,-6.964171,-8.473652,-5.882887,0.851174,-3.804564,-8.776342,3.512687,-4.168105,2.801645,9.553743,-5.867527,-6.520367,8.924943,-8.956147,-5.112391,-5.105171,8.302209,-2.603055,-9.698442,8.042692,7.774114,5.747792,-0.947700,-9.501473,0.292321,4.124131,-4.717829,-7.135391,-9.919900,0.001759,-4.948217,7.625461,-0.655189,4.894341,0.628130,4.616429,-0.035430,-8.913192,-4.705905,-0.159356,-2.953433,5.635313,1.451424,-3.460027,4.261212,2.101893,5.497628,2.979540,-0.161068,4.422011,0.575761,-6.740910,4.110558,-3.306070,-0.570979,7.055285,6.215107,8.068708,-6.055338,-6.702036,6.954965,0.924528,-0.167431,-7.705379,4.790483,4.105047,-1.256889,-1.447486,-6.596660,9.978926,9.317136,7.047139,-5.024425,-0.465777,-1.885071,-1.230327,-7.243099,6.012671,-4.965448,6.643719,7.925191,-8.848297,-0.225103,8.640127,1.950942,7.884190,7.951884,6.222008,-1.600821,8.931960,-5.280747,-8.163690,3.454140,-1.268602,-5.156286,-3.404494,-3.249313,5.697060,1.718153,0.410626,-6.079035,-2.974582,1.198950,8.772064,9.158630,-9.181897,-2.960910,-9.592227,-4.636180,4.687079,-2.297004,-1.632289,-2.462310,2.532227,-2.063825,-5.193462,-9.379172,4.163546,9.119030,8.893483,5.604757,-6.038451,-8.709433,4.017186,9.646421,0.567994,-1.693243,-5.502477,-4.104703,0.604963,-7.934480,4.664676,-5.992665,-4.782365,6.989222,-2.052041,-6.931811,-6.709775,0.546227,9.427212,-8.480314,-9.401553,1.887953,7.369863,-6.767071,-4.343405,-4.232475,0.587041,-8.637503,-9.492327,4.835617,-7.199719,-3.436506,7.071114,1.886217,-7.353408,6.044841,-9.164998,-0.547931,-7.705397,-6.008306,4.774628,-1.888854,0.672169,4.020542,-4.567542,-8.099796,-4.306500,1.367517,-3.521487,-6.038473,-8.401454,3.953672,-2.402756,-9.562987,9.963449,-0.836474,-3.323396,1.366250,1.230941,9.450551,-3.443683,7.314445,-7.220343,-6.962514,2.860083,-7.687851,-2.340883,-7.053644,1.654426,-3.984653,-4.491943,5.514836,1.897697,-2.804514,7.239309,7.487776,-3.300481,-9.870787,2.123670,0.258750,-9.194799,0.759961,-2.160685,5.330819,-0.495998,-3.191305,-0.152280,4.467002,-2.641439,4.417812,-1.402106,2.757786,6.297436,4.624411,-5.984373,7.156464,-1.188801,-1.697385,-1.287716,-7.419963,1.855242,5.004196,2.252412,6.543547,6.050865,3.103792,0.180780,-9.104110,0.023466,-9.567138,-6.739137,-7.145608,-2.455791,8.284433,-7.668555,0.936172,-3.237903,-7.890931,-8.956754,-5.619101,-4.464173,8.151082,-7.208535,-7.580144,7.948324,-9.646418,-5.322902,0.475404,1.672921,1.323932,-9.559447,0.461764,-5.986463,-6.539434,3.169284,-2.281827,9.392654,-5.790153,9.937521,5.870269,9.146103,-6.640909,-9.206742,-7.696043,0.098837,1.289587,-4.924906,-0.959064,-6.578656,1.884423,2.232461,2.841391,2.879355,6.823259,-3.691026,-9.045207,-6.429087,0.251816,-9.080402,-8.231520,-6.974272,3.169483,-6.932290,4.563924,2.432198,-5.123113,-2.566642,6.401335,8.632433,-6.429553,8.073116,0.057607,7.038283,-0.390453,-9.197522,0.437396,-9.545976,-8.290993,0.444020,-5.977940,-0.892963,8.047591,-9.101578,2.617043,8.804069,-6.721313,-2.815898,-3.014028,-5.302143,0.410388,1.278090,3.363369,5.495767,-7.492290,9.728885,7.825852,-6.329163,-1.713535,4.525053,-3.857095,7.677168,3.138841,2.316764,-2.926898,-9.010930,-5.290016,-5.739554,-3.401000,0.658869,-3.331928,2.793778,1.535409,9.511721,-4.010823,1.462321,7.370748,0.727514,-5.834356,3.644757,1.850750,-6.015236,7.861089,9.244307,-1.324955,2.993210,-3.870162,1.520223,-6.127945,0.063758,6.439468,7.979802,-1.645479,-6.529844,5.592599,7.583447,3.694651,1.106769,-9.328871,-7.926293,6.863800,-2.379920,-7.322545,8.199963,-4.664523,-0.287231,3.815913,-6.774700,-2.705396,-6.600872,-8.652793,-8.462614,8.751106,3.500764,9.577468,4.189545,9.131835,-5.817126,7.705320,-1.309431,-4.148766,6.231290,-7.854579,3.234395,-2.506643,8.436272,2.066171,9.190308,7.021466,0.964587,-9.406774,5.961332,-4.373937,-1.554599,-2.372676,5.422686,6.000530,-8.187848,-4.374020,-2.132504,-2.812208,-5.321758,-0.170295,-2.328298,-9.952165,-1.369060,-5.850524,-8.189713,5.772758,-0.655896,7.946422,-1.975422,3.970739,-7.466486,3.020634,-6.735174,-1.009174,5.909117,-6.633184,-5.278881,0.767448,-1.092162,7.147580,-3.647249,7.904026,-4.346532,-3.975809,7.385171,6.841243,-6.200568,-3.477952,-7.883737,3.604655,2.464012,-5.954580,-2.614621,-8.099766,7.375414,1.535070,-5.545767,7.272725,8.137754,-1.121375,7.735858,-6.199480,-0.114266,-0.021798,-9.140100,-1.233774,-5.905403,7.164167,4.430729,2.449158,4.511680,-0.792969,9.468618,-0.263204,-7.285237,0.760473,6.087750,8.365549,-4.063142,-2.519341,7.905566,6.266329,8.586058,-2.539843,-6.950824,-5.549684,-5.918205,-4.989171,-8.587859,-5.033340,0.326561,-9.924937,9.905370,-6.073577,9.037176,-3.446938,7.335849,-8.281144,6.959989,4.681608,-0.003964,0.952662,5.398924,-9.746847,3.152272,-7.859953,-6.255503,3.564225,-9.797723,-9.691994,-1.296572,-8.924461,-9.933086,0.465208,2.846849,4.017345,-8.293272,-3.158614,-4.288280,5.936854,9.221059,-4.727518,-1.855698,0.762575,1.847159,-2.542157,0.953438,-8.465487,-3.220789,0.643340,-6.009293,6.385791,6.562954,-8.479507,6.906309,9.946203,6.287034,-3.766992,1.193256,-8.454580,2.540988,8.367009,9.171049,-2.282846,9.271981,4.311512,7.676683,-9.694976,-2.963840,-2.501788,-6.676512,-2.556340,-1.810097,9.894332,1.850567,-1.114254,-2.829895,5.187695,9.915051,4.031746,6.453648,5.095457,-9.629485,6.361811,-5.721948,-1.667575,-8.535670,2.861169,6.733837,-5.818888,-6.849899,-0.083011,-0.629951,0.678199,9.559223,-2.778648,5.402328,8.568909,1.439016,6.902630,8.175378,-8.936364,-2.353468,-5.434541,-3.172465,-8.151564,0.711285,-0.254659,-5.253744,-1.598179,-4.440551,-7.829584,-1.132486,3.511107,4.567508,6.337143,-7.948454,-7.803314,8.912097,3.146040,1.411112,7.430190,-9.413102,3.900151,7.102333,-1.806071,-0.466676,2.063584,1.462492,7.400411,9.439413,1.159141,-6.467288,6.119690,-0.337612,-8.237142,-9.496615,-9.354648,3.436550,-4.291334,1.033668,-0.751686,8.497514,-2.622994,4.711272,8.111592,9.838095,-9.946208,-5.069556,7.791737,-4.480051,2.139944,4.290719,8.256932,6.364014,9.759760,5.935041,-6.131294,-5.028511,3.148693,-3.258832,-2.607835,4.768873,-1.057860,-9.441114,-6.998374,5.978506,-3.294522,0.110091,9.071250,0.680300,-6.580181,-1.597026,4.129574,0.990437,-0.900788,-0.502808,4.899453,-6.553914,6.530701,-9.531787,8.660332,5.278624,-5.949560,-4.550157,3.579279,7.398918,-2.112472,5.865024,-8.338253,-0.652247,-6.195252,9.409975,-1.516019,2.701628,5.016345,8.491789,3.961939,-3.625940,1.966397,7.467708,-5.078475,-0.036850,3.457180,-3.569100,2.203481,-4.501082,6.069655,2.998288,8.628871,-0.839448,-9.591958,-4.129068,-0.624605,-4.123264,7.409566,1.653051,-9.403449,-8.030510,7.272125,9.412490,6.460202,-6.218665,3.904189,-8.972697,6.668525,3.991594,-5.165083,3.101265,-4.224934,-6.739144,-0.648550,4.204122,-0.247807,-7.310750,2.428342,-8.237829,3.763550,2.229306,-6.320024,-6.632761,-3.167898,-5.951726,0.307564,-3.094297,9.290992,4.982992,-7.208381,-6.411633,-4.066409,-3.938146,-1.062339,-4.636393,1.254090,-6.385774,8.286820,7.261161,7.341796,-9.336067,-4.004788,-0.660086,1.403301,0.751159,2.446368,-3.935716,-1.807684,0.110656,4.645120,-7.043732,5.202600,8.530872,3.677746,9.622749,-5.260424,8.727827,-8.681432,-5.518881,1.803938,2.311455,1.893351,-8.842101,-5.917821,-7.157269,8.759243,-5.925656,1.382333,7.060312,8.375132,1.182544,-3.182176,-6.319598,8.803846,9.014895,-0.880798,4.142427,-4.500788,5.354934,7.561200,2.157448,-0.310298,1.985280,4.333525,8.691264,1.732771,-3.350249,0.836999,-5.411530,9.287032,-6.136304,-8.456837,3.026930,3.583083,3.350117,-0.310911,-6.368408,2.823673,-6.804661,-5.606771,5.661938,7.773010,-2.274829,-1.120142,9.933183,-1.816700,8.813966,4.207213,1.123353,3.162814,9.755559,1.294271,-8.228758,6.360816,7.286199,-5.739873,-5.808201,-7.093729,5.679843,2.810231,-8.493927,-1.785268,9.617285,-6.701603,-7.292344,0.769181,4.534387,2.885154,6.254136,4.461707,1.040282,5.222752,4.812967,-1.416232,-2.396709,6.959207,4.570488,-3.812250,5.060233,1.051665,-5.205394,7.100370,-5.646484,-4.631164,6.037990,-1.233426,5.449347,-3.868750,-3.359753,6.754516,9.003470,8.203423,-7.637713,9.526140,4.439690,-3.152951,3.925176,6.109424,-5.142328,-6.677602,4.761322,-9.247838,-0.729754,9.712967,0.406722,-2.716468,8.951315,6.812470,8.623335,2.767656,-2.858293,6.007378,5.011681,3.350269,-8.118294,-3.820066,-6.981464,-2.147211,6.469878,6.605134,4.313510,0.118695,-1.282046,-4.578218,8.922088,-3.757972,8.378463,-4.324201,-6.582330,3.888467,5.437358,2.293544,-3.163374,-8.384379,9.461206,7.468196,9.427663,-1.739850,8.382863,-1.718778,-7.728191,-0.379668,-0.368545,6.697812,-8.810968,3.425673,-4.899015,-6.093988,-0.699474,-6.174545,-1.801005,-7.807368,2.874778,7.188839,-2.118100,5.728498,-1.473955,-9.326956,-2.510213,-9.977976,-2.776878,-0.889769,-6.608495,-5.217753,-4.314575,-3.780084,-2.794497,-9.671934,8.267065,-7.681588,9.127359,2.997892,-1.980479,-4.756473,3.538641,3.451863,-2.488477,-1.383617,-8.531953,-0.413658,9.013936,-7.779378,2.099848,0.122384,-0.017376,-8.021218,-6.069997,-9.869706,-2.064435,9.999238,8.594852,6.409172,5.569796,-7.640034,-7.665316,-7.374531,4.233740,0.485336,2.737980,-4.298729,5.352150,-7.790810,-4.677621,-5.879591,1.221474,-7.473920,-9.512550,9.146503,4.596141,-0.997264,-1.848490,7.196990,8.920530,-6.750192,-6.782953,-9.118559,-6.124918,6.731173,3.631773,2.847493,8.378132,7.213888,7.166326,4.657032,-6.796049,2.659482,-2.109957,8.003891,4.713805,0.556296,-6.281624,3.388602,-9.282148,5.396414,-0.258185,-4.820878,-1.404167,-6.437971,-0.690453,-1.178165,2.392539,2.516072,-2.878278,4.236194,9.594395,9.683741,-5.165299,-6.319420,0.077552,7.420607,-1.183972,-1.183120,7.046971,-7.033793,-8.710489,5.135147,-2.458804,-7.555761,2.661775,3.727643,-4.085960,-8.916564,1.572766,2.010221,-6.482715,5.082641,-6.610296,4.113926,-4.732816,-2.338290,-6.242612,-4.917141,-6.933340,7.593913,-5.878781,-6.906865,-0.528307,1.294032,9.572487,-3.831186,9.834159,-4.924471,4.785718,-1.413014,-0.425741,2.619449,-4.426878,9.278396,-3.327735,-0.192197,2.755868,0.378674,8.710527,-0.814532,6.166580,-4.791200,-6.219525,-2.775822,-2.636215,0.469971,2.712751,7.185220,-3.327249,0.025549,7.367720,6.797826,-0.037347,-3.488408,7.963859,9.314269,-6.100894,-5.228336,-2.892774,-3.419797,0.426909,0.128415,-2.551094,-4.303065,-4.482779,3.042973,5.138475,-6.587340,5.827047,8.928415,0.218251,0.473806,-1.976381,-9.780532,5.116137,9.092240,-8.114061,5.222524,3.619403,2.918130,2.364145,1.719644,1.544723,3.305642,5.903297,-2.771091,4.617011,-4.599144,5.025759,-5.317282,4.202139,4.557397], dtype = "float32")#candidate|1894|(1680,)|const|float32
call_1893 = relay.TupleGetItem(func_1186_call(relay.reshape(const_1894.astype('float32'), [14, 10, 12]), relay.reshape(const_1888.astype('float32'), [175, 1]), ), 0)
call_1895 = relay.TupleGetItem(func_1190_call(relay.reshape(const_1894.astype('float32'), [14, 10, 12]), relay.reshape(const_1888.astype('float32'), [175, 1]), ), 0)
output = relay.Tuple([call_1883,call_1887,const_1888,call_1893,const_1894,])
output2 = relay.Tuple([call_1884,call_1889,const_1888,call_1895,const_1894,])
func_1905 = relay.Function([], output)
mod['func_1905'] = func_1905
mod = relay.transform.InferType()(mod)
output = func_1905()
func_1906 = relay.Function([], output)
mutated_mod['func_1906'] = func_1906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1676_call = mod.get_global_var('func_1676')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_1927 = relay.TupleGetItem(func_1676_call(), 0)
call_1928 = relay.TupleGetItem(func_1678_call(), 0)
output = relay.Tuple([call_1927,])
output2 = relay.Tuple([call_1928,])
func_1944 = relay.Function([], output)
mod['func_1944'] = func_1944
mod = relay.transform.InferType()(mod)
mutated_mod['func_1944'] = func_1944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1944_call = mutated_mod.get_global_var('func_1944')
call_1945 = func_1944_call()
output = call_1945
func_1946 = relay.Function([], output)
mutated_mod['func_1946'] = func_1946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1760_call = mod.get_global_var('func_1760')
func_1761_call = mutated_mod.get_global_var('func_1761')
call_1958 = relay.TupleGetItem(func_1760_call(), 0)
call_1959 = relay.TupleGetItem(func_1761_call(), 0)
output = call_1958
output2 = call_1959
func_1969 = relay.Function([], output)
mod['func_1969'] = func_1969
mod = relay.transform.InferType()(mod)
output = func_1969()
func_1970 = relay.Function([], output)
mutated_mod['func_1970'] = func_1970
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2022 = relay.var("var_2022", dtype = "float32", shape = (2, 1, 7))#candidate|2022|(2, 1, 7)|var|float32
uop_2023 = relay.log(var_2022.astype('float32')) # shape=(2, 1, 7)
func_1760_call = mod.get_global_var('func_1760')
func_1761_call = mutated_mod.get_global_var('func_1761')
call_2025 = relay.TupleGetItem(func_1760_call(), 0)
call_2026 = relay.TupleGetItem(func_1761_call(), 0)
output = relay.Tuple([uop_2023,call_2025,])
output2 = relay.Tuple([uop_2023,call_2026,])
func_2033 = relay.Function([var_2022,], output)
mod['func_2033'] = func_2033
mod = relay.transform.InferType()(mod)
var_2034 = relay.var("var_2034", dtype = "float32", shape = (2, 1, 7))#candidate|2034|(2, 1, 7)|var|float32
output = func_2033(var_2034)
func_2035 = relay.Function([var_2034], output)
mutated_mod['func_2035'] = func_2035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1676_call = mod.get_global_var('func_1676')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_2045 = relay.TupleGetItem(func_1676_call(), 0)
call_2046 = relay.TupleGetItem(func_1678_call(), 0)
func_1760_call = mod.get_global_var('func_1760')
func_1761_call = mutated_mod.get_global_var('func_1761')
call_2051 = relay.TupleGetItem(func_1760_call(), 0)
call_2052 = relay.TupleGetItem(func_1761_call(), 0)
output = relay.Tuple([call_2045,call_2051,])
output2 = relay.Tuple([call_2046,call_2052,])
func_2053 = relay.Function([], output)
mod['func_2053'] = func_2053
mod = relay.transform.InferType()(mod)
output = func_2053()
func_2054 = relay.Function([], output)
mutated_mod['func_2054'] = func_2054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1716_call = mod.get_global_var('func_1716')
func_1717_call = mutated_mod.get_global_var('func_1717')
call_2058 = func_1716_call()
call_2059 = func_1716_call()
uop_2084 = relay.asinh(call_2058.astype('float32')) # shape=(6, 8, 11)
uop_2086 = relay.asinh(call_2059.astype('float32')) # shape=(6, 8, 11)
output = relay.Tuple([uop_2084,])
output2 = relay.Tuple([uop_2086,])
func_2092 = relay.Function([], output)
mod['func_2092'] = func_2092
mod = relay.transform.InferType()(mod)
mutated_mod['func_2092'] = func_2092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2092_call = mutated_mod.get_global_var('func_2092')
call_2093 = func_2092_call()
output = call_2093
func_2094 = relay.Function([], output)
mutated_mod['func_2094'] = func_2094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1969_call = mod.get_global_var('func_1969')
func_1970_call = mutated_mod.get_global_var('func_1970')
call_2135 = func_1969_call()
call_2136 = func_1969_call()
output = call_2135
output2 = call_2136
func_2143 = relay.Function([], output)
mod['func_2143'] = func_2143
mod = relay.transform.InferType()(mod)
output = func_2143()
func_2144 = relay.Function([], output)
mutated_mod['func_2144'] = func_2144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2143_call = mod.get_global_var('func_2143')
func_2144_call = mutated_mod.get_global_var('func_2144')
call_2158 = func_2143_call()
call_2159 = func_2143_call()
func_2092_call = mod.get_global_var('func_2092')
func_2094_call = mutated_mod.get_global_var('func_2094')
call_2160 = relay.TupleGetItem(func_2092_call(), 0)
call_2161 = relay.TupleGetItem(func_2094_call(), 0)
output = relay.Tuple([call_2158,call_2160,])
output2 = relay.Tuple([call_2159,call_2161,])
func_2170 = relay.Function([], output)
mod['func_2170'] = func_2170
mod = relay.transform.InferType()(mod)
output = func_2170()
func_2171 = relay.Function([], output)
mutated_mod['func_2171'] = func_2171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2170_call = mod.get_global_var('func_2170')
func_2171_call = mutated_mod.get_global_var('func_2171')
call_2172 = relay.TupleGetItem(func_2170_call(), 0)
call_2173 = relay.TupleGetItem(func_2171_call(), 0)
output = relay.Tuple([call_2172,])
output2 = relay.Tuple([call_2173,])
func_2181 = relay.Function([], output)
mod['func_2181'] = func_2181
mod = relay.transform.InferType()(mod)
mutated_mod['func_2181'] = func_2181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2181_call = mutated_mod.get_global_var('func_2181')
call_2182 = func_2181_call()
output = call_2182
func_2183 = relay.Function([], output)
mutated_mod['func_2183'] = func_2183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1944_call = mod.get_global_var('func_1944')
func_1946_call = mutated_mod.get_global_var('func_1946')
call_2217 = relay.TupleGetItem(func_1944_call(), 0)
call_2218 = relay.TupleGetItem(func_1946_call(), 0)
func_2092_call = mod.get_global_var('func_2092')
func_2094_call = mutated_mod.get_global_var('func_2094')
call_2219 = relay.TupleGetItem(func_2092_call(), 0)
call_2220 = relay.TupleGetItem(func_2094_call(), 0)
output = relay.Tuple([call_2217,call_2219,])
output2 = relay.Tuple([call_2218,call_2220,])
func_2223 = relay.Function([], output)
mod['func_2223'] = func_2223
mod = relay.transform.InferType()(mod)
mutated_mod['func_2223'] = func_2223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2223_call = mutated_mod.get_global_var('func_2223')
call_2224 = func_2223_call()
output = call_2224
func_2225 = relay.Function([], output)
mutated_mod['func_2225'] = func_2225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1676_call = mod.get_global_var('func_1676')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_2249 = relay.TupleGetItem(func_1676_call(), 0)
call_2250 = relay.TupleGetItem(func_1678_call(), 0)
func_663_call = mod.get_global_var('func_663')
func_667_call = mutated_mod.get_global_var('func_667')
const_2252 = relay.const([4,-8,-4,3,-4,1,-3,-10,5,-2,2,-10,9,6,4,2,5,-8,-10,-5,10,-8,-3,3,-4,-5,-4,1,9,-7,-1,2,-8,-6,-3,-5,-9,5,3,9,10,-2,-9,10,-10,-10,8,8,-2,8,-7,8,8,-7,-1,8,10,-10,5,-4,8,8,6,4,4,3,5,-9,-3,3,3,-7,-1,2,6,-1,-10,10,6,-1,-6,-4,-6,-3,7,4,7,-3,-8,-4,-10,9,-5,3,-3,-2,1,-1,6,7,-9,-5,2,-7,-2,-5,6,-2,2,-2,4,-7,9,1,1,-1,8,-9,6,3,4,2,-1,-3,-2,10,-9,10,-5,3,10,6,-2,10,-8,-5,10,-4,-2,6,2,-9,-4,-6,9,-3,-5,-6,-4,4,9,6,-9,-10,9,-6,-1,9,3,4,-7,8,6,9,-10,1,6,-9,-8,-7,-5,8,-7,1,2,-1,-2,3,5,-9,-6,-6,-8,9,-4,-4,9,-4,9,-6,1,-2,-8,-3,8,10,2,8,9,-9,2,-1,-5,9,10,-7,-3,-6,-5,-4,10,-6,-9,4,2,2,-7,6,10,8,-1,3,-5,4,7,-10,3,-9,10,8,-9,7,5,-1,-7,7,5,1,-8,-7,-5,3,-5,-8,-8,-9,1,4,-9,1,4,-5,7,-7,3,3,3,5,8,4,-4,-6,9,8,-5,-4,-6,-7,7,9,10,-9,8,2,9,-4,1,7,10,-7,-6,-5,2,-7,-6,8,-10,2,10,4,1,4,9,-1,-9,-5,9,-1,-10,9,-7,-5,-3,5,-10,-5,-8,-3,2,-6,-10,8,-1,-10,9,8,-8,5,7,-7,8,9,2,-4,4,5,-3,5,4,-4,9,-9,2,-10,-3,-7,10,-10,8,7,6,-9,-7,-2,2,-5,5,-7,7,7,4,-2,1,-7,6,2,9,10,6,8,5,8,-7,-8,-4,-6,-2,-3,2,2,7,9,-5,-2,8,-8,3,-6,3,-7,-10,5,3,7,-1,3,-2,4,1,10,-7,-6,-6,-5,6,-6,-4,10,-1,3,5,2,8,7,-3,1,-5,4,-9,10,10,-4,9,2,-3,3,-10,-7,2,-8,-3,7,-7,-1,2,2,9,8,9,9,-6,-2,-7,5,-7,4,-3,9,-6,4,4,-9,1,-1,9,4,2,10,-7,1,-7,5,8,7,6,1,7,-5,7,-9,-7,10,9,1,6,-1,6,10,-9,9,10,9,10,-4,-9,-3,-7,6,-6,3,8,2,9,-10,-1,-6,-7,-8,9,3,-8,6,3,9,-10,1,6,2,7,4,10,-1,-6,-3,-5,-5,-7,6,5,-1,-10,5,-6,-1,-10,3,6,-7,4,-7,8,-10,5,7,3,-6,-8,9,7,-9,7,-7,5,-5,-5,8,8,-2,-5,-2,-7,-1,1,-1,2,-7,9,1,-9,-2,1,-2,7,-2,3,1,4,4,-2,4,-4,-2,-7,8,-9,2,10,9,-10,-2,-4,-2,4,4,3,-1,-10,-2,4,-3,-10,-5,3,-2,4,5,-8,10,2,-10,-3,4,2,8,-7,10,-8,-10,8,3,7,-4,4,6,8,-3,-5,-2,-2,-6,5,-6,1,-5,9,5,-5,-10,-10,5,10,-9,-2,5,-3,-4,-7,1,-8,8,-4,3,1,6,-10,9,6,9,9,3,3,10,8,7,-8,3,-10,-1,4,2,10,-5,1,6,6,-2,9,-10,-5,-2,3,-7,6,2,9,1,7,-6,10,8,3,8,4,-8,-4,-2,-6,8,8,1,5,-7,-9,-1,-4,6,1,-1,1,-1,-8,10,3,7,9,1,9,6,-10,9,-8,-3,-1,3,4,7,-7,9,8,-3,3,10,-1,-1,7,-7,5,3,4,9,10,-1,6,10,5,8,-7,-1,-7,1,2,-9,8,4,10,2,-1,8,1,1,1,-4,-10,-9,7,10,-8,8,-3,-9,-8,-2,4,-6,9,-10,7,-3,1,3,-3,-7,2,-6,10,7,-6,6,-10,-4,-2,-3,10,-7,9,-7,2,5,1,-8,-9,-8,-5,-5,-9,-6,-3,1,9,2,-9,-2,5,7,-1,7,-2,-6,-1,2,10,-2,-10,-6,-2,-7,-9,4,-8,-2,-7,-10,-5,-6,5,-8,-9,-6,3,6,-10,6,3,5,-10,10,-5,-8,5,7,-3,5,-5,-9,-4,-6,9,6,-4,1,6,-1,2,-1,5,-6,-5,10,-1,2,7,10,2,8,-4,7,-2,1,10,-10,-2,-5,7,-8,-6,2,8,1,-7,-3,-10,1,3,-8,5,-9,-6,3,10,2,10,1,-7,8,-1,-4,-3,3,-10,10,8,-10,4,6,5,-1,-3,4,5,3,-5,7,6,8,8,9,7,-10,5,4,5,8,10,-7,8,-10,-9,-2,6,8,8,-2,1,6,10,-7,-7,-5,8,1,2,-8,-8,-5,-2,8,2,-7,-2,10,-2,10,-3,8,7,-7,1,-1,8,3,10,-2,-3,-5,1,-8,-2,4,-3,7,2,-10,-1,-1,-6,-1,-8,-9,1,8,1,6,-6,1,3,-1,3,-7,2,-3,4,7,6,-5,-1,-10,-8,-8,-7,4,-8,-8,-6,-5,-4,-1,2,-4,-3,7,1,8,4,-6,6,2,8,-9,4,5,4,-8,-3,7,1,-9,9,-6,3,5,-5,-7,8,7,10,2,7,10,-2,5,-1,8,4,-5,7,8,7,-2,9,-9,-3,-3,-10,-10,10,-6,2,2,-1,2,-9,9,-6,-2,-2,6,-9,6,9,-2,3,-1,5,10,-2,-1,5,-6,-2,-7,-9,-10,9,-8,1,-9,-9,9,6,9,4,-1,-9,-1,5,-7,-9,3,-2,8,2,-8,-10,4,-8,7,2,-2,-3,3,-9,4,-9,7,9,-5,-5,-1,-1,4,-7,-3,7,9,-8,-1,5,6,2,5,9,10,2,10,6,5,4,-2,5,2,8,-10,-9,-6,10,-2,-3,6,4,1,1,-3,5,-6,9,-4,3,9,-10,3,-8,2,7,-7,3,3,5,7,-3,10,4,8,-10,9,4,2,7,3,10,-7,9,7,7,-4,10,2,-10,1,-7,-9,-4,-3,5,-7,8,-9,5,9,-1,-2,-8,3,7,7,-4,-5,9,1,5,-10,1,8,-7,-8,1,-7,6,-5,6,5,8,10,1,1,7,-7,-3,6,3,8,6,10,-7,-3,7,-3,-9,4,2,5,9,10,8,-3,10,6,-7,5,3,7,7,7,-10,-7,-6,-4,6,-6], dtype = "uint64")#candidate|2252|(1248,)|const|uint64
const_2253 = relay.const([-7,1,4,2,-3,9,-5,7,2,2,-4,4,3,9,4,1,7,-7,-1,2,3,4,-6,1,10,1,-4,-1,3,-8,-8,-10,-2,-7,7,-9,-9,-8,3,6,5,-9,-2,-5,10,4,6,-4,5,3,9,2,-4,4,10,-3,9,3,2,-6,5,10,-6,-10,-6,-2,-5,-2,3,-8,-7,-1,5,-8,3,-9,4,8,4,2,10,-2,6,-8,3,5,9,6,9,-8,8,1,-7,-3,-6,8,8,-5,-7,5,-8,-9,6,8,-9,-8,-6,-10,-7,-3,-9,10,-2,-4,-7,8,-1,2,-4,5,-9,-2,-3,7,7,-4,10,8,1,2,2,7,8,-5,2,-6,4,-7,10,8,3,-8,9,6,7,-10,-9,-6,-6,9,-10,10,-3,-4,2,-4,5,-9,-5,4,4,-3,-3,-10,-10,9,-2,-6,6,1,2,-3,7,-3,9,-6,-3,6,8,7,4,7,-4,4,3,-10,-1,3,-6,-8,-6,-10,3,-7,3,-8,1,-5,-10,-7,-2,-1,-9,-9,-3,-4,3,-9,1,9,1,2,-5,-7,6,10,-10,-1,5,5,-10,6,2,-10,-1,-8,-6,-2,-9,-6,2,3,6,2,5,-9,8,-8,1,5,9,-2,-8,-8,5,10,-1,-1,6,-8,3,-5,3,3,-5,3,4,3,-4,-6,6,-8,8,3,5,4,9,8,7,5,10,8,-7,-5,-1,-10,9,-1,9,3,-5,1,10,-7,9,-9,-4,-4,-7,2,1,4,-1,-1,10,4,2,-1,-3,9,4,4,6,-9,-6,-2,4,-1,10,-7,5,-6,-5,9,-9,3,-8,-1,2,9,2,6,-9,3,8,-10,9,2,-6,5,1,7,2,4,-8,3,6,6,-8,-5,-8,3,-4,5,-8,-5,6,-8,2,4,7,-9,-9,-8,-7,5,-9,-5,3,-3,10,-10,2,9,-2,-3,10,-3,1,8,-6,3,9,-10,-10,3,-1,-10,-3,-6,-2,3,10,-3,-7,9,3,-1,-2,7,4,-3,5,9,-2,2,-3,-6,-10,6,-9,3,6,4,-2,7,-3,2,-6,5,-5,2,1,-1,-8,-8,-1,-8,-4,-3,5,4,-2,5,9,-8,6,-2,-9,-8,1,3,-1,-7,5,-3,1,8,6,-5,-5,9,2,-10,4,5,6,-7,9,1,-5,-4,-4,2,-8,-6,10,4,-7,-3,2,6,6,-6,7,-10,-4,1,-7,-9,-1,-7,10,-3,6,8,5,-8,7,-7,3,-9,2,-4,-4,-5,8,6,-5,-3,-6,-9,-4,2,-10,8,-8,10,-8,2,-9,-4,1,3,8,7,6,5,-4,5,-7,9,1,-7,6,-10,-8,-10,-4,-5,10,8,-1,-7,-1,-8,7,-6,-9,-7,2,-9,-2,9,5,-10,-9,10,3,-2,-2,-3,-2,-7,-3,7,2,6,-7,9,1,5,-8,-8,4,5,4,7,8,6,-8,7,-9,5,-9,7,4,10,9,-4,1,1,7,3,1,9,2,-9,-10,-8,9,-9,-9,6,10,-1,9,-6,1,4,-9,-9,-8,6,5,6,-9,-6,5,-6,-3,-6,2,-9,-3,3,5,-7,-4,-10,6,2,1,4,1,-3,-9,-5,2,4,-6,-7,2,-5,-6,-5,10,-8,5,-1,3,1,2,3,-1,-9,-5,-9,2,-3,-8,1,-4,-1,10,-5,3,-3,1,10,4,-10,-8,7,-2,8,-9,-8,-5,-3,-10,-6,-6,9,-8,1,8,2,-10,-6,1,2,3,2,8,5,-6,4,-3,-1,-2,4,4,8,6,6,-9,7,8,-2,-7,-6,-9,8,3,-2,4,9,-3,-3,10,-6,8,1,-5,2,-1,6,1,1,-3,-3,10,-6,8,1,9,-6,-1,10,-1,7,-3,1,6,9,6,8,-1,-6,4,-6,-5,7,-1,-1,1,6,10,9,-1,7,10,3,2,2,-9,8,-3,1,5,-10,-1,-2,6,-8,10,4,5,-3,7,2,6,-1,8,-4,-3,9,1,-4,3,-3,9,4,5,10,5,-9,3,-1,-9,4,-1,5,-2,-8,2,7,9,5,1,5,7,-8,-1,1,-3,-3,6,6,-10,5,8,-3,-5,8,-4,-1,-4,-1,-7,-6,-7,-7,-10,5,9,-9,-3,-3,-3,-6,3,-7,-8,3,-3,8,-1,-7,9,-10,3,7,-4,-6,-1,-3,2,3,-10,-5,-9,-3,7,-3,3,7,5,-9,4,5,10,2,-7,1,-5,-10,-1,-7,4,-7,3,10,7,6,-9,-9,-10,10,-7,-7,-9,-7,2,9,3,-3,-9,4,-4,-7,5,1,-6,5,2,-6,-10,9,8,-8,-5,7,5,10,-4,-2,5,-6,-4,6,4,-7,6,6,6,-5,4,5,-5,-9,-3,8,6,-1,-5,-8,-1,-3,9,-3,1,5,1,-7,6,5,-8,-9,9,7,-9,2,10,-10,-3,5,2,3,10,10,-5,5,-10,-10,-6,-2,3,-6,-9,1,9,10,-4,5,-3,9,-1,-1,-1,-1,-9,-2,9,5,-4,4,10,5,6,-1,-6,-9,7,10,-3,4,8,-4,6,8,6,3,5,4,-7,-4,-5,10,3,1,4,7,3,-10,-3,-9,10,6,2,-1,-5,2,6,-4,-3,-2,-10,1,-4,-2,-9,7,7,-7,5,7,-10,2,10,-4,2,-10,-7,-6,1,-8,-3,10,-8,10,-2,3,-6,8,2,-9,-10,-9,-1,9,-4,-2,2,10,8,3,-5,-4,3,6,-5,-2,-5,3,-5,-8,9,-8,2,9,8,-4,8,5,-1,9,-6,-5,9,7,-10,2,2,10,-10,8,3,-10,-9,4,-5,-9,1,2,-2,3,3,-1,7,-1,-2,-4,10,-6,10,2,-1,8,5,-2,-10,-10,10,8,-5,-6,-9,-10,8,-9,-5,6,1,10,4,2,-8,-7,-4,-8,3,3,-6,-10,-8,3,-9,1,-2,6,4,-10,-10,3,-1,2,6,-5,-2,-9,5,6,-10,5,-10,6,9,-6,-4,-3,-3,6,-4,-4,-7,7,-4,7,1,-3,-3,5,-8,10,-2,-4,10,6,4,-10,-2,4,-9,-9,-5,1,5,9,-7,-5,2,5,1,5,1,6,-4,9,-5,4,-5,7,1,5,-7,-8,-10,-10], dtype = "int16")#candidate|2253|(1200,)|const|int16
call_2251 = relay.TupleGetItem(func_663_call(relay.reshape(const_2252.astype('uint64'), [8, 12, 13]), relay.reshape(const_2253.astype('int16'), [4, 300]), ), 0)
call_2254 = relay.TupleGetItem(func_667_call(relay.reshape(const_2252.astype('uint64'), [8, 12, 13]), relay.reshape(const_2253.astype('int16'), [4, 300]), ), 0)
func_2092_call = mod.get_global_var('func_2092')
func_2094_call = mutated_mod.get_global_var('func_2094')
call_2255 = relay.TupleGetItem(func_2092_call(), 0)
call_2256 = relay.TupleGetItem(func_2094_call(), 0)
output = relay.Tuple([call_2249,call_2251,const_2252,const_2253,call_2255,])
output2 = relay.Tuple([call_2250,call_2254,const_2252,const_2253,call_2256,])
func_2257 = relay.Function([], output)
mod['func_2257'] = func_2257
mod = relay.transform.InferType()(mod)
output = func_2257()
func_2258 = relay.Function([], output)
mutated_mod['func_2258'] = func_2258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1635_call = mod.get_global_var('func_1635')
func_1636_call = mutated_mod.get_global_var('func_1636')
call_2259 = func_1635_call()
call_2260 = func_1635_call()
output = call_2259
output2 = call_2260
func_2261 = relay.Function([], output)
mod['func_2261'] = func_2261
mod = relay.transform.InferType()(mod)
mutated_mod['func_2261'] = func_2261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2261_call = mutated_mod.get_global_var('func_2261')
call_2262 = func_2261_call()
output = call_2262
func_2263 = relay.Function([], output)
mutated_mod['func_2263'] = func_2263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1905_call = mod.get_global_var('func_1905')
func_1906_call = mutated_mod.get_global_var('func_1906')
call_2266 = relay.TupleGetItem(func_1905_call(), 0)
call_2267 = relay.TupleGetItem(func_1906_call(), 0)
output = relay.Tuple([call_2266,])
output2 = relay.Tuple([call_2267,])
func_2316 = relay.Function([], output)
mod['func_2316'] = func_2316
mod = relay.transform.InferType()(mod)
mutated_mod['func_2316'] = func_2316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2316_call = mutated_mod.get_global_var('func_2316')
call_2317 = func_2316_call()
output = call_2317
func_2318 = relay.Function([], output)
mutated_mod['func_2318'] = func_2318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2223_call = mod.get_global_var('func_2223')
func_2225_call = mutated_mod.get_global_var('func_2225')
call_2355 = relay.TupleGetItem(func_2223_call(), 0)
call_2356 = relay.TupleGetItem(func_2225_call(), 0)
const_2362 = relay.const([[[-0.976239,3.366006,-0.392148,-4.599184,-0.679688,9.629414,3.489415,-4.987612,-7.736864,6.788433,7.553069],[-6.533908,-5.105132,-5.255964,6.502709,-3.473102,3.933091,-2.118734,-8.732844,4.538190,-3.536558,5.786683],[0.671172,-6.546282,-5.783289,5.728485,5.631258,4.377293,-7.514035,8.039578,3.182198,-7.169727,1.326650],[3.841137,2.041208,-3.544737,8.508139,8.982919,4.155323,8.228751,-9.419047,-6.915291,-6.396072,3.849803],[3.667106,4.346830,6.134255,8.075446,-8.942726,-8.837978,4.326246,-2.413840,-6.777934,8.410077,2.149348],[4.407875,1.154295,0.503471,6.627116,0.882195,6.900931,-0.633527,-2.389037,5.081609,-8.494821,-0.231661],[4.303265,-9.673129,5.200993,5.829802,-6.504718,-7.886630,-0.745302,-9.029744,-4.365313,-6.142487,-4.812915],[-1.312649,-5.799283,4.529260,1.055983,-4.736370,-6.139307,-0.393396,1.669992,-7.544143,-8.494298,9.704667]],[[-5.494548,1.791748,5.352786,-7.550395,-2.655863,-6.597134,8.456606,1.847513,-7.594265,5.375990,-2.107488],[-8.438043,2.791951,-3.423988,3.594389,2.888484,4.198496,-1.934530,-8.433825,-7.016231,-9.354696,-0.835668],[-9.482396,-6.047477,8.101621,-8.810338,-7.489291,0.385867,9.126394,6.157142,-0.629953,1.949523,1.600019],[-8.908281,-3.444019,-9.712483,-0.852279,-2.420269,-8.740619,1.672468,-5.752857,-7.275373,-0.475538,0.921615],[5.567628,-9.085576,1.442947,7.621744,3.871021,-3.183067,-2.597244,-7.146196,7.330267,9.864868,-6.163931],[-9.632472,-1.011967,8.962651,-0.840115,3.433155,4.081835,3.086815,9.909966,-0.175794,5.409057,-6.285200],[5.110396,-0.062919,-6.889398,6.503928,-2.212585,6.157767,-7.755754,7.031238,8.760400,-5.695928,-6.416739],[1.141466,-3.625143,-6.960358,3.258283,2.065786,-7.723119,3.587909,2.628344,8.950436,-2.591011,1.654254]],[[4.745843,-0.245853,9.663085,1.994197,-5.293709,3.267521,-3.677434,-4.836679,-4.488551,9.230727,8.899267],[9.592713,3.844936,-4.410089,-4.155756,-6.794236,-3.375632,-1.726021,0.568715,3.503988,3.256960,-7.633196],[2.790663,3.075115,-0.639230,-2.619282,8.860405,-1.151585,-0.923341,6.862670,-5.336836,-1.403915,-7.744174],[-9.171997,-1.279429,3.185563,-2.696884,-7.604904,8.287532,-0.694203,-2.720365,7.134438,-4.856429,-9.677040],[4.277335,2.366651,2.315318,-6.064521,8.971820,6.612469,5.592020,1.890899,-9.839538,7.308504,9.289072],[5.983544,-6.211655,0.731883,-3.397996,4.820792,2.659848,-4.084798,-7.472537,-4.666074,3.003836,0.045542],[3.754622,6.440843,-5.210783,1.685639,-4.850905,8.832631,6.058192,2.053167,-3.629884,1.478083,-2.804303],[-9.947998,7.494727,-0.510541,-5.571986,3.059675,-9.479792,5.270949,6.279774,-0.374220,1.512286,-8.844078]],[[-5.428923,7.700451,-3.848517,1.019477,-8.299657,9.479810,-6.007890,-0.571019,1.912564,-7.351401,-2.164397],[6.042252,-5.445862,3.537668,3.335683,8.740859,-7.167874,1.062201,0.183826,3.454942,-2.351750,3.583537],[-4.612926,-7.590149,2.875945,9.947207,-0.598936,3.845576,-7.734440,9.880207,-5.649637,3.068444,0.582238],[4.688852,8.049223,-4.508399,8.357015,9.263258,4.436222,-2.920240,-3.463700,8.853084,-7.353108,-2.199876],[9.190108,-5.080916,-3.215348,-3.282498,-0.734996,-2.754692,-1.512074,-1.505895,7.718051,9.156966,5.185561],[9.099043,5.002473,-5.984884,-8.283282,-1.492375,-0.710257,4.107089,2.693296,-5.970825,-1.280757,8.583646],[7.654853,-9.355524,9.983064,-7.990554,4.402575,4.029320,-9.012450,-1.994151,-7.449432,-0.012847,-8.827238],[2.371393,-7.786920,2.952440,-3.828108,4.827074,-4.163436,-5.794979,-7.982122,-3.367948,2.309650,-9.907339]],[[-6.849013,-4.944627,-6.507973,7.171142,-0.681757,-5.075579,8.675387,8.058862,-1.422339,1.554712,2.065109],[6.000890,-4.616490,3.879550,2.182284,5.233088,3.117906,-6.449504,6.770753,-7.077897,-9.827276,-1.581243],[-1.536135,4.419707,-4.449536,-8.241207,6.415611,4.060576,4.358402,3.402931,1.127351,-2.593776,-9.729574],[-0.725631,3.960773,3.267095,5.340617,5.635274,-3.610768,-9.504086,8.236395,-8.175436,-4.494334,6.049007],[-7.360194,-2.944032,1.791983,-3.866384,2.904703,7.411989,8.553358,-6.575636,-7.243211,6.978867,1.578540],[-0.618993,-5.363576,4.818449,-7.419407,-8.686735,8.843946,-7.478661,-0.654321,-8.828418,4.098020,-3.454260],[-5.648336,8.276664,-3.591338,8.878720,9.881141,-2.322946,-1.452497,-6.716572,-5.999958,-2.594654,-8.812474],[1.923450,7.904412,-3.146117,4.536864,-6.195004,-7.091431,4.604531,-4.853928,-7.174413,-8.146929,8.774084]],[[-5.761594,5.748674,-9.351510,-4.471803,1.301163,0.602782,1.490473,1.207529,-8.899014,-3.242238,-1.179911],[7.549177,2.137681,-7.674100,0.010636,-1.074335,2.490776,-7.625497,0.834268,-3.186128,-5.686556,-6.303762],[-0.751570,5.390475,8.255026,8.219288,9.416560,-8.482914,-6.183675,-7.093612,-8.942374,0.282848,-2.056300],[9.342585,-8.885635,-4.847016,-5.288461,-7.443320,2.309577,7.791737,6.927628,-6.520243,-5.336877,8.388708],[4.145249,-6.657369,1.491368,6.568763,6.326026,4.867660,8.272286,4.606595,-2.670091,-2.928051,7.180145],[-9.366261,-4.084140,2.158762,2.030348,8.093128,-7.468931,-4.665347,3.814915,3.218995,8.174352,-4.625670],[5.336776,-2.998212,7.266748,7.740686,-6.582399,3.808184,-3.438782,6.334655,-3.085237,-1.850219,-4.044205],[-5.563198,-2.037367,9.053849,-8.974324,-3.592227,4.170977,-7.953499,4.585229,7.217339,1.079907,-2.013624]]], dtype = "float64")#candidate|2362|(6, 8, 11)|const|float64
bop_2363 = relay.mod(call_2355.astype('float32'), relay.reshape(const_2362.astype('float32'), relay.shape_of(call_2355))) # shape=(6, 8, 11)
bop_2366 = relay.mod(call_2356.astype('float32'), relay.reshape(const_2362.astype('float32'), relay.shape_of(call_2356))) # shape=(6, 8, 11)
func_663_call = mod.get_global_var('func_663')
func_667_call = mutated_mod.get_global_var('func_667')
var_2375 = relay.var("var_2375", dtype = "uint64", shape = (1248,))#candidate|2375|(1248,)|var|uint64
const_2376 = relay.const([-6,5,-8,5,-7,10,2,6,8,6,2,8,-3,-6,-10,-4,-5,-10,-5,-3,-10,6,8,-4,3,-6,1,-4,6,-1,-2,-5,-5,-4,-1,-3,-1,-5,-10,-7,-10,-9,-8,-5,-2,3,3,-2,4,-9,2,-6,-10,2,-9,-4,-2,9,-7,-4,-3,4,6,4,-2,3,-6,7,-7,7,-7,-6,-5,9,-1,2,2,10,4,8,-1,-1,7,3,6,3,-1,2,-3,-2,6,6,2,7,-4,-5,3,9,4,7,2,-5,6,10,8,4,6,5,-8,7,7,-6,-5,-4,7,-1,1,1,-3,9,-3,-9,-2,10,-7,3,-6,-8,-4,-2,-4,-9,8,4,-10,-5,3,1,-8,-9,-7,-1,-3,-6,1,-7,2,2,5,3,7,8,2,9,-2,5,1,2,6,1,5,-4,8,-7,2,-8,-10,10,6,1,8,-7,3,4,-7,-7,-7,-9,9,-5,8,3,-10,9,4,3,-8,-10,-10,-10,-9,7,-2,-10,2,3,9,-7,8,-6,-6,4,-9,-4,-9,6,-3,-6,1,7,1,5,-5,10,8,8,5,9,6,-5,-2,-5,-3,-2,-6,8,-9,9,5,9,-5,1,-9,-6,-6,2,-1,4,9,-8,3,4,9,5,-3,9,-9,10,1,-3,-6,-8,1,10,-6,-6,-6,-2,-4,-1,1,-8,10,-10,-3,-1,-9,7,9,-1,6,7,-8,7,7,-2,7,1,-8,-10,6,-2,-10,-5,6,5,3,-4,-2,6,8,-6,-8,2,-7,-6,6,8,-9,-5,8,7,-4,6,-9,-3,-10,1,7,-3,10,9,-9,9,9,3,6,1,-8,-5,-1,5,7,-9,-3,-1,2,-8,7,9,3,-3,9,-8,3,5,2,-5,-9,-7,7,-5,8,-9,1,10,9,3,-9,4,-6,8,-10,9,7,2,-4,10,8,-8,7,-3,3,-4,-8,-6,9,4,-7,1,-9,-8,9,4,7,-8,-1,-1,-8,-7,-5,-3,-9,6,-10,-9,-1,9,-7,9,6,-10,-10,-1,8,-5,5,7,-4,9,1,10,-7,2,-5,-9,10,-8,-2,7,1,3,1,-9,5,9,-7,8,10,-9,-2,-6,8,3,6,-10,-5,2,-4,-10,-10,7,-8,5,-6,4,3,-2,-7,10,6,-10,-4,-6,-7,9,5,-7,10,4,-6,-6,10,9,5,-3,-1,2,7,-6,-4,4,-1,-4,-4,-7,-7,-1,-2,-6,-2,-8,2,-10,7,7,-9,3,-1,10,-3,8,-1,7,-9,-8,2,6,5,-6,2,-6,-4,10,3,-1,-7,8,-7,-1,10,9,-7,-7,-3,-7,-8,-5,-1,8,-2,-2,-7,9,5,-2,1,-6,-8,-3,8,5,2,-8,4,-8,-4,-7,1,5,-10,-1,-10,-1,10,9,-3,-5,6,-9,9,7,8,-4,-2,4,-8,2,2,6,7,-1,2,5,-1,-6,-10,4,7,-8,9,-10,7,-6,-5,-10,-10,1,10,9,10,2,10,-9,-3,5,-9,10,-7,4,9,-2,-8,10,-1,-7,-6,-1,4,5,-7,9,7,3,-6,-6,2,3,-5,5,-3,4,-3,8,-5,5,5,-9,5,-6,8,5,4,-7,10,2,8,5,-1,9,5,-7,7,-3,-5,-3,-3,-2,-8,-7,-2,-4,-4,-4,-1,10,-6,-6,-2,-7,-8,-1,-1,-1,1,9,-4,6,1,3,-4,6,2,4,1,-1,4,-1,3,5,-7,-9,-7,-10,-6,8,8,9,8,-1,7,-7,6,-7,7,4,8,6,10,-6,9,-8,10,4,-1,6,-9,-10,-8,-3,-2,-10,10,-8,9,9,-9,-4,6,-6,3,6,2,4,-4,-6,1,7,-3,-4,-10,-2,-1,6,2,-4,-4,6,8,-8,6,9,2,-1,-2,7,9,8,6,7,8,5,-4,9,-1,-4,-1,-6,-8,9,-1,1,6,2,-3,-1,2,2,7,10,6,-6,-7,-3,-9,-7,9,-2,5,-6,-3,-9,3,3,-3,-1,-6,-10,-1,-10,-3,3,-2,6,9,8,-1,10,-10,-5,5,4,2,4,6,4,-8,-1,3,10,1,7,6,-5,10,9,-5,7,-6,-3,-7,-2,-5,7,-2,2,-6,-5,-6,-7,2,2,-1,-7,3,9,-6,-7,6,10,1,-1,-3,-9,9,-5,-4,-8,-9,-1,-6,2,-1,-4,-3,5,8,-10,2,-10,-7,-4,2,-5,-9,-3,9,7,-6,-7,7,2,-7,6,4,-2,1,-4,-8,-5,-9,1,6,8,-1,9,-6,-3,7,-4,-7,4,4,10,8,10,4,5,-9,1,7,-8,-3,8,4,3,-10,-9,6,6,-7,-3,-8,-10,-1,-9,-3,3,-9,7,3,-5,6,7,3,8,-8,10,9,-2,-3,1,7,-3,5,10,-2,2,8,10,3,-1,8,8,3,10,-3,5,4,-6,8,8,-2,-7,-2,-10,-6,-7,-4,4,6,-7,-4,9,-10,7,-3,-9,-7,-3,-7,7,8,10,10,-1,-9,-3,1,-10,-7,1,4,-4,8,4,-4,9,-5,-4,-4,-9,-5,9,-6,-9,8,4,-1,4,10,3,7,6,2,6,6,10,-10,9,7,-1,-9,-6,-5,-8,-8,-9,-4,6,-8,1,-8,7,-9,5,6,1,-1,6,9,3,6,4,-10,3,3,-1,-4,-2,-9,-8,-5,2,8,-3,1,-6,-7,-8,-1,4,6,8,6,-2,-6,-9,1,-6,9,-8,5,-9,4,-1,8,-10,1,-4,-7,1,9,4,-1,-1,-2,-1,4,-1,-7,5,8,-10,1,-7,10,-2,9,-1,8,3,2,9,3,-8,4,8,9,2,-1,8,8,10,-10,10,-2,10,-6,-4,8,-1,-5,4,-4,4,5,7,-4,3,-8,3,-5,-4,1,1,-9,-4,9,6,4,1,4,5,6,1,2,-4,7,7,7,7,-10,10,-9,-7,8,6,-7,-9,10,7,-6,-10,-8,-10,5,-10,-8,-6,-9,-4,10,-7,1,-2,-6,5,-9,-4,2,-1,-1,3,1,10,2,-5,4,-3,-9,-7,3,8,5,-6,-6,-5,8,-10,-7,9,4,6,-7,4,4,-3,-3,7,-3,-6,-2,7,9,10,-8,9,-6,-4,4,1,9,-4,-4,-10,-6,5,-7,1], dtype = "int16")#candidate|2376|(1200,)|const|int16
call_2374 = relay.TupleGetItem(func_663_call(relay.reshape(var_2375.astype('uint64'), [8, 12, 13]), relay.reshape(const_2376.astype('int16'), [4, 300]), ), 2)
call_2377 = relay.TupleGetItem(func_667_call(relay.reshape(var_2375.astype('uint64'), [8, 12, 13]), relay.reshape(const_2376.astype('int16'), [4, 300]), ), 2)
uop_2379 = relay.rsqrt(call_2374.astype('float64')) # shape=(4, 300)
uop_2381 = relay.rsqrt(call_2377.astype('float64')) # shape=(4, 300)
output = relay.Tuple([bop_2363,var_2375,const_2376,uop_2379,])
output2 = relay.Tuple([bop_2366,var_2375,const_2376,uop_2381,])
func_2388 = relay.Function([var_2375,], output)
mod['func_2388'] = func_2388
mod = relay.transform.InferType()(mod)
mutated_mod['func_2388'] = func_2388
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2389 = relay.var("var_2389", dtype = "uint64", shape = (1248,))#candidate|2389|(1248,)|var|uint64
func_2388_call = mutated_mod.get_global_var('func_2388')
call_2390 = func_2388_call(var_2389)
output = call_2390
func_2391 = relay.Function([var_2389], output)
mutated_mod['func_2391'] = func_2391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2223_call = mod.get_global_var('func_2223')
func_2225_call = mutated_mod.get_global_var('func_2225')
call_2438 = relay.TupleGetItem(func_2223_call(), 1)
call_2439 = relay.TupleGetItem(func_2225_call(), 1)
func_1716_call = mod.get_global_var('func_1716')
func_1717_call = mutated_mod.get_global_var('func_1717')
call_2440 = func_1716_call()
call_2441 = func_1716_call()
output = relay.Tuple([call_2438,call_2440,])
output2 = relay.Tuple([call_2439,call_2441,])
func_2443 = relay.Function([], output)
mod['func_2443'] = func_2443
mod = relay.transform.InferType()(mod)
output = func_2443()
func_2444 = relay.Function([], output)
mutated_mod['func_2444'] = func_2444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2223_call = mod.get_global_var('func_2223')
func_2225_call = mutated_mod.get_global_var('func_2225')
call_2464 = relay.TupleGetItem(func_2223_call(), 0)
call_2465 = relay.TupleGetItem(func_2225_call(), 0)
output = call_2464
output2 = call_2465
func_2480 = relay.Function([], output)
mod['func_2480'] = func_2480
mod = relay.transform.InferType()(mod)
mutated_mod['func_2480'] = func_2480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2480_call = mutated_mod.get_global_var('func_2480')
call_2481 = func_2480_call()
output = call_2481
func_2482 = relay.Function([], output)
mutated_mod['func_2482'] = func_2482
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2504 = relay.const([[[1.094296,-0.392077,0.365040,-3.264929,2.037255,-8.584333,8.162007,-4.366759,0.674680,-1.479531,-5.547665,1.436906],[1.463564,9.395251,-5.226554,8.457992,-4.737660,5.030216,-3.413401,-9.613136,-7.692152,3.115980,1.911268,8.275684],[-6.153700,-2.106493,7.544268,1.218633,-3.592363,-3.148147,8.122000,-9.430630,3.841335,5.516096,6.303436,1.502011],[-4.055475,8.649345,-8.325484,-4.444268,3.099828,5.818754,-0.713477,8.990750,6.675636,2.806419,8.200745,-4.117406]],[[8.697977,9.074666,4.763862,6.196042,0.828918,-6.294637,3.482966,3.513804,7.192766,3.322400,4.641930,-0.686212],[-7.531036,9.980295,8.801297,-2.511751,-6.074393,5.845357,9.863292,9.578732,-5.636648,-4.689153,6.711849,-4.649683],[5.342658,-0.985249,-1.335245,9.397085,6.604618,6.952153,5.869057,9.960343,0.117272,7.403756,1.181328,8.127869],[-5.834439,-5.669070,9.379381,0.296613,-2.960944,2.098252,-2.265813,-7.611277,-9.779955,6.339723,4.222411,1.792624]],[[7.356193,5.631240,2.633890,-0.880228,3.087688,7.644957,3.639044,5.213634,5.140124,7.464224,6.864265,3.180479],[9.579482,8.890848,0.958040,4.443798,-2.315190,-4.985759,9.957018,8.799905,1.378727,-7.724806,0.395348,-1.742628],[-1.045179,6.067442,6.170933,8.480136,6.991200,-9.979207,7.262153,5.649286,-2.458530,-3.581382,6.916494,-4.859769],[-8.936073,3.020674,-3.494809,-2.791861,8.888039,3.459835,-9.195090,6.735353,8.905552,9.226088,0.708126,-6.207134]],[[-5.726467,-5.240741,8.094431,-3.165151,5.395450,9.199438,0.723602,-9.491446,9.888947,-2.977642,4.143010,3.053202],[4.869231,4.833561,-0.200592,-6.311255,-4.003121,-3.073059,-6.151074,-5.158448,-2.253555,1.438525,7.241709,4.429111],[7.909646,1.111139,8.130922,-0.679763,4.290767,-9.415252,0.072524,-2.536554,4.542875,7.119344,2.378087,2.290876],[-7.112809,2.932608,-3.108400,-7.449029,-1.045561,-6.341142,9.992111,-1.414481,6.968398,-3.017468,-6.943431,-9.336044]],[[4.337537,3.356090,1.486397,-0.983315,0.789040,-6.117649,-3.793759,-1.814932,-5.844432,4.288697,4.369174,-6.005530],[-9.744789,7.614814,4.695732,-8.419267,-5.067307,4.223591,-1.450247,4.908835,7.119443,2.236096,-3.528581,0.238244],[2.268173,-8.239419,-8.584933,6.083667,2.621066,9.371062,-3.872405,4.081881,0.970493,3.175701,8.236459,-2.294085],[-4.554641,-4.778249,8.969685,8.759698,-4.510206,1.564706,-9.801450,6.665265,4.579486,-7.523055,-7.495731,-7.807055]]], dtype = "float32")#candidate|2504|(5, 4, 12)|const|float32
var_2505 = relay.var("var_2505", dtype = "float32", shape = (5, 4, 12))#candidate|2505|(5, 4, 12)|var|float32
bop_2506 = relay.divide(const_2504.astype('float32'), relay.reshape(var_2505.astype('float32'), relay.shape_of(const_2504))) # shape=(5, 4, 12)
var_2509 = relay.var("var_2509", dtype = "float32", shape = (5, 4, 12))#candidate|2509|(5, 4, 12)|var|float32
bop_2510 = relay.power(const_2504.astype('float32'), relay.reshape(var_2509.astype('float32'), relay.shape_of(const_2504))) # shape=(5, 4, 12)
func_1676_call = mod.get_global_var('func_1676')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_2513 = relay.TupleGetItem(func_1676_call(), 0)
call_2514 = relay.TupleGetItem(func_1678_call(), 0)
output = relay.Tuple([bop_2506,bop_2510,call_2513,])
output2 = relay.Tuple([bop_2506,bop_2510,call_2514,])
func_2515 = relay.Function([var_2505,var_2509,], output)
mod['func_2515'] = func_2515
mod = relay.transform.InferType()(mod)
mutated_mod['func_2515'] = func_2515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2515_call = mutated_mod.get_global_var('func_2515')
var_2517 = relay.var("var_2517", dtype = "float32", shape = (5, 4, 12))#candidate|2517|(5, 4, 12)|var|float32
var_2518 = relay.var("var_2518", dtype = "float32", shape = (5, 4, 12))#candidate|2518|(5, 4, 12)|var|float32
call_2516 = func_2515_call(var_2517,var_2518,)
output = call_2516
func_2519 = relay.Function([var_2517,var_2518,], output)
mutated_mod['func_2519'] = func_2519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1905_call = mod.get_global_var('func_1905')
func_1906_call = mutated_mod.get_global_var('func_1906')
call_2565 = relay.TupleGetItem(func_1905_call(), 1)
call_2566 = relay.TupleGetItem(func_1906_call(), 1)
output = relay.Tuple([call_2565,])
output2 = relay.Tuple([call_2566,])
func_2608 = relay.Function([], output)
mod['func_2608'] = func_2608
mod = relay.transform.InferType()(mod)
mutated_mod['func_2608'] = func_2608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2608_call = mutated_mod.get_global_var('func_2608')
call_2609 = func_2608_call()
output = call_2609
func_2610 = relay.Function([], output)
mutated_mod['func_2610'] = func_2610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2316_call = mod.get_global_var('func_2316')
func_2318_call = mutated_mod.get_global_var('func_2318')
call_2617 = relay.TupleGetItem(func_2316_call(), 0)
call_2618 = relay.TupleGetItem(func_2318_call(), 0)
output = relay.Tuple([call_2617,])
output2 = relay.Tuple([call_2618,])
func_2621 = relay.Function([], output)
mod['func_2621'] = func_2621
mod = relay.transform.InferType()(mod)
output = func_2621()
func_2622 = relay.Function([], output)
mutated_mod['func_2622'] = func_2622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2143_call = mod.get_global_var('func_2143')
func_2144_call = mutated_mod.get_global_var('func_2144')
call_2652 = func_2143_call()
call_2653 = func_2143_call()
func_2181_call = mod.get_global_var('func_2181')
func_2183_call = mutated_mod.get_global_var('func_2183')
call_2662 = relay.TupleGetItem(func_2181_call(), 0)
call_2663 = relay.TupleGetItem(func_2183_call(), 0)
func_1635_call = mod.get_global_var('func_1635')
func_1636_call = mutated_mod.get_global_var('func_1636')
call_2687 = func_1635_call()
call_2688 = func_1635_call()
output = relay.Tuple([call_2652,call_2662,call_2687,])
output2 = relay.Tuple([call_2653,call_2663,call_2688,])
func_2690 = relay.Function([], output)
mod['func_2690'] = func_2690
mod = relay.transform.InferType()(mod)
mutated_mod['func_2690'] = func_2690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2690_call = mutated_mod.get_global_var('func_2690')
call_2691 = func_2690_call()
output = call_2691
func_2692 = relay.Function([], output)
mutated_mod['func_2692'] = func_2692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2690_call = mod.get_global_var('func_2690')
func_2692_call = mutated_mod.get_global_var('func_2692')
call_2699 = relay.TupleGetItem(func_2690_call(), 2)
call_2700 = relay.TupleGetItem(func_2692_call(), 2)
func_324_call = mod.get_global_var('func_324')
func_327_call = mutated_mod.get_global_var('func_327')
var_2717 = relay.var("var_2717", dtype = "float32", shape = (175,))#candidate|2717|(175,)|var|float32
call_2716 = relay.TupleGetItem(func_324_call(relay.reshape(var_2717.astype('float32'), [5, 5, 7])), 0)
call_2718 = relay.TupleGetItem(func_327_call(relay.reshape(var_2717.astype('float32'), [5, 5, 7])), 0)
func_1716_call = mod.get_global_var('func_1716')
func_1717_call = mutated_mod.get_global_var('func_1717')
call_2726 = func_1716_call()
call_2727 = func_1716_call()
func_2261_call = mod.get_global_var('func_2261')
func_2263_call = mutated_mod.get_global_var('func_2263')
call_2743 = func_2261_call()
call_2744 = func_2261_call()
output = relay.Tuple([call_2699,call_2716,var_2717,call_2726,call_2743,])
output2 = relay.Tuple([call_2700,call_2718,var_2717,call_2727,call_2744,])
func_2753 = relay.Function([var_2717,], output)
mod['func_2753'] = func_2753
mod = relay.transform.InferType()(mod)
mutated_mod['func_2753'] = func_2753
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2754 = relay.var("var_2754", dtype = "float32", shape = (175,))#candidate|2754|(175,)|var|float32
func_2753_call = mutated_mod.get_global_var('func_2753')
call_2755 = func_2753_call(var_2754)
output = call_2755
func_2756 = relay.Function([var_2754], output)
mutated_mod['func_2756'] = func_2756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2621_call = mod.get_global_var('func_2621')
func_2622_call = mutated_mod.get_global_var('func_2622')
call_2760 = relay.TupleGetItem(func_2621_call(), 0)
call_2761 = relay.TupleGetItem(func_2622_call(), 0)
output = relay.Tuple([call_2760,])
output2 = relay.Tuple([call_2761,])
func_2764 = relay.Function([], output)
mod['func_2764'] = func_2764
mod = relay.transform.InferType()(mod)
output = func_2764()
func_2765 = relay.Function([], output)
mutated_mod['func_2765'] = func_2765
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2835 = relay.var("var_2835", dtype = "float64", shape = (5, 12, 6))#candidate|2835|(5, 12, 6)|var|float64
uop_2836 = relay.acos(var_2835.astype('float64')) # shape=(5, 12, 6)
func_2480_call = mod.get_global_var('func_2480')
func_2482_call = mutated_mod.get_global_var('func_2482')
call_2842 = func_2480_call()
call_2843 = func_2480_call()
uop_2844 = relay.asinh(var_2835.astype('float64')) # shape=(5, 12, 6)
func_1186_call = mod.get_global_var('func_1186')
func_1190_call = mutated_mod.get_global_var('func_1190')
var_2849 = relay.var("var_2849", dtype = "float32", shape = (1680,))#candidate|2849|(1680,)|var|float32
var_2850 = relay.var("var_2850", dtype = "float32", shape = (175,))#candidate|2850|(175,)|var|float32
call_2848 = relay.TupleGetItem(func_1186_call(relay.reshape(var_2849.astype('float32'), [14, 10, 12]), relay.reshape(var_2850.astype('float32'), [175, 1]), ), 1)
call_2851 = relay.TupleGetItem(func_1190_call(relay.reshape(var_2849.astype('float32'), [14, 10, 12]), relay.reshape(var_2850.astype('float32'), [175, 1]), ), 1)
output = relay.Tuple([uop_2836,call_2842,uop_2844,call_2848,var_2849,var_2850,])
output2 = relay.Tuple([uop_2836,call_2843,uop_2844,call_2851,var_2849,var_2850,])
func_2854 = relay.Function([var_2835,var_2849,var_2850,], output)
mod['func_2854'] = func_2854
mod = relay.transform.InferType()(mod)
mutated_mod['func_2854'] = func_2854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2854_call = mutated_mod.get_global_var('func_2854')
var_2856 = relay.var("var_2856", dtype = "float64", shape = (5, 12, 6))#candidate|2856|(5, 12, 6)|var|float64
var_2857 = relay.var("var_2857", dtype = "float32", shape = (1680,))#candidate|2857|(1680,)|var|float32
var_2858 = relay.var("var_2858", dtype = "float32", shape = (175,))#candidate|2858|(175,)|var|float32
call_2855 = func_2854_call(var_2856,var_2857,var_2858,)
output = call_2855
func_2859 = relay.Function([var_2856,var_2857,var_2858,], output)
mutated_mod['func_2859'] = func_2859
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2875 = relay.var("var_2875", dtype = "float32", shape = (3, 14, 12))#candidate|2875|(3, 14, 12)|var|float32
uop_2876 = relay.sin(var_2875.astype('float32')) # shape=(3, 14, 12)
func_663_call = mod.get_global_var('func_663')
func_667_call = mutated_mod.get_global_var('func_667')
const_2890 = relay.const([3,-6,6,6,1,-1,-7,-7,1,10,-7,-2,-1,-1,8,-4,9,-5,9,-4,7,9,-10,-5,-2,8,1,-10,-9,-7,-7,5,1,9,-3,-10,8,4,-6,1,-5,-7,-3,1,10,-6,-9,10,-4,9,4,8,9,-2,-3,2,5,8,-8,7,-5,4,-5,3,5,-7,-3,1,-6,-6,-7,1,-8,8,-6,-4,10,-6,-4,4,-4,6,-5,9,1,2,-2,10,2,7,-4,10,1,-9,-8,2,-4,-9,-7,-10,-2,6,7,-7,5,4,7,5,3,-2,-9,-3,7,3,10,4,-8,-7,8,2,8,-5,4,-2,6,-6,-2,-7,10,-5,-3,-4,9,6,7,-3,5,-9,-9,-4,9,-9,10,10,-6,-4,-3,-2,10,-8,-5,2,-8,-9,-4,-4,-6,3,-9,-7,9,-5,-10,3,-4,-8,3,-1,1,-9,-4,9,6,-7,9,1,7,-10,-1,-6,-5,4,-4,-8,4,3,10,9,6,-2,-1,-2,-7,3,3,-4,6,6,-4,9,4,7,4,2,3,-6,5,3,8,1,-9,-2,5,-7,4,9,7,-10,4,-4,5,3,6,1,4,-9,-5,8,-1,-10,-2,-1,-5,-4,4,-7,-6,7,6,7,-8,-3,-7,6,5,-1,3,9,-2,6,-9,-4,-5,8,-9,-1,9,-3,-4,-4,-2,-7,-6,2,9,5,3,4,2,-9,-7,9,6,-4,-10,-9,-3,7,5,1,-9,4,6,10,-10,-9,1,2,-2,6,-5,4,5,1,-1,4,7,-2,5,-2,-2,3,1,-1,-4,-4,-3,-8,10,-8,2,-10,9,-3,-5,1,-8,-1,10,3,-10,-4,7,-1,3,-7,1,-3,3,-7,3,-8,-2,1,2,7,-4,4,3,6,5,9,5,6,-8,-6,1,-1,4,7,7,-9,3,10,-9,9,4,-9,8,4,-8,-6,-8,-2,-8,-10,10,-5,3,6,6,5,3,-6,7,8,4,-4,2,5,-4,-6,4,-9,9,-8,-3,4,7,9,-1,1,3,-6,-5,5,-5,6,-4,-8,-10,-9,-1,9,2,4,-4,-9,-4,10,-7,9,-7,3,9,4,8,-2,-6,-9,-8,-4,-1,7,-9,5,3,-7,-10,-10,2,10,-7,10,-5,2,3,-4,-8,-10,-10,-2,-10,1,-1,-8,-7,2,-1,7,-3,-7,-6,1,-6,2,7,-6,5,6,10,-7,-2,-1,5,-1,1,-5,1,-5,-10,-2,3,5,-7,3,6,-4,-1,5,7,4,-4,-6,-8,3,-8,-4,-2,8,-1,9,-3,10,-10,-9,1,-4,6,-1,1,-10,-8,1,-3,-1,1,4,3,-7,-8,-9,-4,3,2,-2,-7,-3,7,9,4,6,10,-1,-3,7,7,-10,10,10,-7,-5,5,1,4,5,10,7,-1,-6,-7,8,10,6,1,-1,8,-3,6,6,4,1,-3,5,-7,10,5,-9,-6,-4,-10,-5,1,-1,2,10,-9,3,9,5,10,-3,5,-7,-6,-8,-5,3,1,-6,3,2,-7,3,-2,6,-8,-4,-1,-4,3,3,4,-4,2,-9,-6,-9,3,-2,2,4,5,3,-10,-2,6,1,-1,-7,6,10,-7,6,-10,-7,-6,-4,-1,-8,-1,-4,-6,-9,9,-2,3,9,-10,4,-5,4,-1,4,-5,-5,-3,-5,3,9,-1,-8,-4,8,4,-6,2,10,-10,7,7,4,-10,-2,-5,6,-2,4,-1,-2,4,-6,1,2,-10,-9,-1,-10,1,4,1,-6,4,8,10,-4,9,-3,-6,2,-3,5,-3,5,-5,2,10,-8,7,4,8,-4,-8,5,-1,7,7,8,-7,6,3,-9,-7,9,-4,1,-1,-9,3,10,-3,8,1,10,6,-1,5,1,-4,5,-1,2,-5,-10,4,-2,9,7,-3,-7,4,-9,-7,-2,-9,10,7,-6,2,-9,-6,-5,1,4,-10,3,10,-4,2,-7,-7,5,-9,-6,-4,7,-8,-4,4,-2,-10,10,-9,-6,-2,-4,-2,-3,-9,-1,-6,5,-3,-10,9,-3,7,1,-8,6,2,9,8,-4,-2,10,-5,9,-3,7,3,1,3,-7,-10,1,3,-5,-3,-8,6,-3,2,-1,3,5,7,-5,7,-1,4,-9,3,8,3,-3,3,-9,7,9,7,-7,9,7,3,5,4,-6,7,5,1,10,3,10,1,-2,-1,-5,1,8,-3,-5,8,4,-7,-7,6,-2,-7,8,2,-8,-7,5,8,3,-8,-8,10,-2,-10,5,6,-2,-2,3,-10,-6,4,6,7,-3,10,3,-3,4,6,7,7,-7,2,2,10,9,-9,8,-4,1,2,3,9,-9,9,6,-7,-6,10,-9,5,-6,2,-8,-5,-10,3,2,-1,6,9,5,-5,-5,8,-7,3,-5,9,1,4,-3,-7,10,8,-7,10,-2,-4,9,-4,-4,2,-2,-5,-5,6,-10,2,10,-8,6,-2,10,-7,9,7,-8,7,2,-3,-2,6,2,2,8,3,-7,-4,3,7,-3,-7,7,-9,5,5,-2,1,-9,-6,-4,-10,-3,7,-6,-8,-1,9,1,7,1,5,-3,7,-3,10,3,-6,4,2,10,-10,7,8,-9,-5,-7,2,-1,3,-4,-9,2,-1,3,-10,-5,5,-10,-1,-10,-9,-9,8,-2,3,-3,-10,10,-5,7,5,6,8,-2,4,7,8,6,7,-8,-3,3,-10,-7,5,8,9,-9,-9,8,-3,-9,-3,9,-5,2,-10,1,7,4,-5,-3,6,1,-5,1,4,-10,-4,-8,-8,7,5,-9,-8,-8,5,7,-5,7,7,-7,5,-9,8,10,-8,-5,6,9,7,7,9,3,2,6,-5,8,2,-3,-5,-6,9,-7,-3,1,4,-2,-1,8,5,3,-9,-2,-10,-9,7,9,-7,2,-3,-2,2,3,-10,-7,7,5,-2,-4,1,5,-1,3,-1,7,-8,4,-4,-3,7,9,1,9,2,-4,-9,10,-5,7,8,3,-3,-7,-3,-1,-2,6,6,-9,-1,1,5,-1,4,8,1,7,-8,3,7,-4,6,-6,-7,1,7,-9,5,3,-7,-1,-2,-2,-5,4,9,-2,-9,-7,1,-6,4,-3,7,-8,8,-5,-8,-3,-4,-4,4,-7,-4,1,6,6,-5,9,-8,8,-4,8,-10,6,7,-6,-6,6,-1,5,-4,-7,3,-1,-1,-7,-2,9,-6,-3,-5,-4,3,-2,6,-2,-10,1,3,4,-1,-2,-4,4,-6,-2,7,3,-7,4,2,-6,-3,6,9,3], dtype = "uint64")#candidate|2890|(1248,)|const|uint64
const_2891 = relay.const([-2,6,6,4,-2,-4,-2,-9,4,2,-4,7,4,-1,5,-2,8,2,9,-2,8,7,6,-4,-7,-2,-3,2,4,-4,7,5,-1,9,-4,2,-6,-10,5,7,-2,5,-10,5,-2,3,3,5,5,-6,7,-1,-7,7,6,-3,5,-8,-3,-8,-1,4,-7,10,5,10,-3,6,3,9,-9,2,10,-8,-2,-10,7,7,-5,5,2,-3,-8,3,2,3,-6,-7,2,9,-2,-6,-3,3,9,-7,5,6,-8,-7,2,-4,-4,5,6,1,-3,7,10,-5,7,-2,1,-8,-8,9,-4,8,-4,5,9,8,-2,9,2,-1,-5,1,-10,4,5,-7,8,8,-2,-2,8,-4,-2,2,-8,-4,7,-8,-6,4,8,10,-9,-8,1,2,7,-10,1,-6,5,2,5,9,-4,3,-6,-10,1,-6,5,2,5,4,3,5,-9,-2,-6,-8,-5,6,3,-8,3,7,-3,-3,-2,-4,-6,5,-3,10,7,4,10,-5,6,-1,7,-9,8,9,-9,-3,10,-8,4,-4,9,-6,8,4,-5,2,-3,-2,-3,1,4,6,-3,-6,-4,9,-8,4,6,-9,5,5,-4,-8,-10,10,-4,-5,-3,-5,1,2,-9,-3,-6,-8,-6,8,-9,-9,-7,2,-7,10,8,-7,-9,8,5,3,-6,10,-5,1,5,5,-9,5,2,6,-9,8,-9,-8,-10,6,3,5,4,-1,8,-1,1,-4,1,4,10,10,10,6,8,-3,7,8,-8,10,-7,2,9,4,4,10,1,5,-9,-1,-2,9,-6,3,-7,9,-6,-5,-7,-4,6,8,7,9,4,-2,-8,-8,-7,-8,5,-2,8,-5,4,-7,7,-10,-9,-10,-10,-1,-3,-3,-1,-7,-8,-7,-4,-1,-4,-1,-6,-5,1,-9,-8,-9,3,-1,3,-1,5,-7,-10,9,9,-7,2,-9,9,-4,-2,6,-7,10,-3,10,10,-8,4,-6,-1,7,7,6,7,3,-7,5,-5,3,-5,-9,8,7,7,6,-8,-1,2,1,1,7,2,-9,6,-7,5,-7,-3,9,-6,8,-2,9,10,1,5,-7,-9,-3,10,-7,-6,-2,-7,-1,-7,-8,-1,3,8,-3,2,-9,-10,-8,-4,7,-9,3,1,-8,-4,-7,3,6,-4,6,1,-10,8,1,-5,4,-9,-10,10,9,4,8,-6,3,-5,7,-2,7,7,4,6,3,-6,8,-1,-9,-2,6,-5,-1,8,6,-7,2,1,-3,5,-4,1,6,-8,-8,-3,-2,5,-9,-3,3,-8,-3,2,-7,4,-7,-5,6,5,8,10,6,-5,-8,-2,8,7,-10,-5,-5,2,3,-2,-3,-3,-9,-2,10,-2,4,9,-3,-1,-7,-3,7,-4,-5,9,5,10,9,-9,-9,-7,-4,-5,5,1,6,2,-9,6,-3,3,-9,2,-5,6,3,-7,10,-3,1,4,-7,-3,-3,10,3,5,-6,-1,1,5,1,-10,-7,3,-6,5,5,2,4,7,-5,1,-1,-4,-10,-6,-2,-1,9,7,2,1,-10,9,-6,5,-7,5,-9,-10,-8,9,5,1,5,-1,1,-6,6,-9,10,-4,-8,-8,-7,-7,7,7,5,5,-5,7,-10,-7,10,7,-9,10,-9,6,7,3,9,-5,5,6,-8,-5,8,5,9,-10,4,-8,6,-10,-7,-6,-10,-1,-1,-6,2,7,7,-7,-3,-7,-7,-1,8,6,4,-2,-5,1,1,-4,3,2,5,-8,-8,-5,-9,10,8,5,-9,8,3,9,9,9,-9,1,2,-2,4,7,-4,5,4,3,8,-9,-1,6,-4,-3,6,6,-5,10,6,5,4,-3,9,-4,-9,9,-1,-1,2,9,2,-7,4,6,-5,-1,2,-1,-9,-9,8,-8,7,-6,-7,-8,-10,4,4,-5,3,-10,-7,-6,-8,5,-5,6,4,10,7,-8,2,-3,4,-5,-2,-1,-8,7,2,-1,-5,-8,9,2,-3,-4,-4,1,-5,-6,5,-7,-6,10,-4,-6,8,-10,1,2,4,-1,3,8,-10,6,-4,10,-5,10,1,-10,10,-5,-4,5,3,8,-9,5,-1,-7,-3,-6,7,-10,4,7,-2,4,-9,5,4,1,8,-5,6,7,-8,10,1,-4,-7,-6,3,-6,9,-6,3,-6,-3,1,2,-1,-2,-6,10,-5,-4,8,1,2,3,10,-7,-8,-7,2,-8,-10,5,-1,-9,-3,-7,10,3,5,2,-4,6,-9,-3,-2,7,1,-9,8,1,9,-10,-6,-1,-1,-10,1,-8,-9,-3,-2,-5,4,-7,4,-2,4,3,7,2,-6,6,6,-8,-5,-8,-1,1,-8,8,4,4,3,7,1,1,-10,5,-1,3,-5,-4,-3,-2,1,3,-9,3,-6,4,-2,7,2,-9,4,-10,2,-5,-8,8,-8,-5,9,1,-10,5,9,-3,-3,-5,-4,-7,-8,-3,-3,6,-1,-10,-10,-8,-5,-4,4,-7,-2,5,7,4,4,2,8,9,-10,10,10,-2,-2,1,-4,2,-1,3,6,-3,-7,-10,-2,4,9,-10,3,-8,-8,10,9,9,-6,-8,-2,-7,-6,1,9,10,1,-9,-3,9,7,-3,-9,6,7,-2,-7,-5,7,2,1,-3,3,-7,10,8,-3,-2,5,10,6,-8,-10,-7,-1,2,-3,6,-9,-4,9,6,5,6,8,2,9,-6,-7,7,-5,9,8,-6,8,-7,2,-9,-3,-6,3,6,2,-5,6,4,-5,-1,-8,-1,7,-3,1,-5,-9,7,1,-5,7,1,-4,-7,9,3,5,4,-9,-10,-1,9,9,1,9,-4,-10,2,-9,-4,-6,-8,8,-4,10,-1,10,10,-6,-9,1,-3,-8,4,3,8,6,2,-7,-2,2,-8,3,-2,-1,6,-6,-2,6,-6,5,-10,-9,4,9,-4,9,-3,-4,-3,-10,6,2,4,3,6,-3,6,1,1,5,-2,1,-1,2,9,-5,-10,10,-4,4,-10,6,-3,7,-8,-3,-9,6,9,-3,2,1,4,7,-6,-8,2,-4,3,-10,6,-9,-8,-4,-5,-3,-7,-8,-10,1,-8,4,-2,-4,2,6,-7,-4,2,-10,-6,-3,-1,-6,-5,-7,-5,-10,1,-2,8,-2,6,8,3,4,-4,4,7,-4,-4], dtype = "int16")#candidate|2891|(1200,)|const|int16
call_2889 = relay.TupleGetItem(func_663_call(relay.reshape(const_2890.astype('uint64'), [8, 12, 13]), relay.reshape(const_2891.astype('int16'), [4, 300]), ), 0)
call_2892 = relay.TupleGetItem(func_667_call(relay.reshape(const_2890.astype('uint64'), [8, 12, 13]), relay.reshape(const_2891.astype('int16'), [4, 300]), ), 0)
bop_2907 = relay.left_shift(uop_2876.astype('uint32'), relay.reshape(var_2875.astype('uint32'), relay.shape_of(uop_2876))) # shape=(3, 14, 12)
bop_2922 = relay.bitwise_or(bop_2907.astype('int64'), relay.reshape(uop_2876.astype('int64'), relay.shape_of(bop_2907))) # shape=(3, 14, 12)
uop_2925 = relay.asin(var_2875.astype('float64')) # shape=(3, 14, 12)
output = relay.Tuple([call_2889,const_2890,const_2891,bop_2922,uop_2925,])
output2 = relay.Tuple([call_2892,const_2890,const_2891,bop_2922,uop_2925,])
func_2929 = relay.Function([var_2875,], output)
mod['func_2929'] = func_2929
mod = relay.transform.InferType()(mod)
mutated_mod['func_2929'] = func_2929
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2930 = relay.var("var_2930", dtype = "float32", shape = (3, 14, 12))#candidate|2930|(3, 14, 12)|var|float32
func_2929_call = mutated_mod.get_global_var('func_2929')
call_2931 = func_2929_call(var_2930)
output = call_2931
func_2932 = relay.Function([var_2930], output)
mutated_mod['func_2932'] = func_2932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2053_call = mod.get_global_var('func_2053')
func_2054_call = mutated_mod.get_global_var('func_2054')
call_2978 = relay.TupleGetItem(func_2053_call(), 1)
call_2979 = relay.TupleGetItem(func_2054_call(), 1)
uop_2991 = relay.sqrt(call_2978.astype('float32')) # shape=(6, 8, 11)
uop_2993 = relay.sqrt(call_2979.astype('float32')) # shape=(6, 8, 11)
output = relay.Tuple([uop_2991,])
output2 = relay.Tuple([uop_2993,])
func_2999 = relay.Function([], output)
mod['func_2999'] = func_2999
mod = relay.transform.InferType()(mod)
output = func_2999()
func_3000 = relay.Function([], output)
mutated_mod['func_3000'] = func_3000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2053_call = mod.get_global_var('func_2053')
func_2054_call = mutated_mod.get_global_var('func_2054')
call_3019 = relay.TupleGetItem(func_2053_call(), 1)
call_3020 = relay.TupleGetItem(func_2054_call(), 1)
output = relay.Tuple([call_3019,])
output2 = relay.Tuple([call_3020,])
func_3021 = relay.Function([], output)
mod['func_3021'] = func_3021
mod = relay.transform.InferType()(mod)
mutated_mod['func_3021'] = func_3021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3021_call = mutated_mod.get_global_var('func_3021')
call_3022 = func_3021_call()
output = call_3022
func_3023 = relay.Function([], output)
mutated_mod['func_3023'] = func_3023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2257_call = mod.get_global_var('func_2257')
func_2258_call = mutated_mod.get_global_var('func_2258')
call_3033 = relay.TupleGetItem(func_2257_call(), 4)
call_3034 = relay.TupleGetItem(func_2258_call(), 4)
output = relay.Tuple([call_3033,])
output2 = relay.Tuple([call_3034,])
func_3036 = relay.Function([], output)
mod['func_3036'] = func_3036
mod = relay.transform.InferType()(mod)
mutated_mod['func_3036'] = func_3036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3036_call = mutated_mod.get_global_var('func_3036')
call_3037 = func_3036_call()
output = call_3037
func_3038 = relay.Function([], output)
mutated_mod['func_3038'] = func_3038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2480_call = mod.get_global_var('func_2480')
func_2482_call = mutated_mod.get_global_var('func_2482')
call_3042 = func_2480_call()
call_3043 = func_2480_call()
output = relay.Tuple([call_3042,])
output2 = relay.Tuple([call_3043,])
func_3048 = relay.Function([], output)
mod['func_3048'] = func_3048
mod = relay.transform.InferType()(mod)
mutated_mod['func_3048'] = func_3048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3048_call = mutated_mod.get_global_var('func_3048')
call_3049 = func_3048_call()
output = call_3049
func_3050 = relay.Function([], output)
mutated_mod['func_3050'] = func_3050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1716_call = mod.get_global_var('func_1716')
func_1717_call = mutated_mod.get_global_var('func_1717')
call_3051 = func_1716_call()
call_3052 = func_1716_call()
func_1760_call = mod.get_global_var('func_1760')
func_1761_call = mutated_mod.get_global_var('func_1761')
call_3061 = relay.TupleGetItem(func_1760_call(), 0)
call_3062 = relay.TupleGetItem(func_1761_call(), 0)
func_1098_call = mod.get_global_var('func_1098')
func_1100_call = mutated_mod.get_global_var('func_1100')
const_3064 = relay.const([-1,4,4,-5,5,-7,6,8,7,-7,6,-4,-10,2,-9,-2,9,8,-3,4,-4,-1,-10,-10,-10,5,8,10,-6,6,5,-10,5,-8,2,-8,-4,9,-1,-2,-9,7,-8,-5,-1,-2,10,1,-9,-4,4,9,3,3,-8,3,3,5,6,10,1,-4,-5,8,7,-4,6,-8,-1,10,-7,9,4,-5,-1,10,8,-5,-10,-6,-5,-5,-6,-9,-5,8,-2,1,-10,8,3,3,1,-4,-1,7,3,-6,-6,-7,3,-10,4,-3,-10,-4,-7,4,-7,9,9,3,-8,10,-3,3,-4,-1,6,1,-4,-9,-3,9,1,5,3,-9,-6,-5,8,5,2,-10,-1,-6,-5,-4,-8,-8,10,-9,3,4,-9,-10,-8,8,-4,-10,-9,-10,3,-5,-8,2,-8,10,8,-3,-2,5,2,2,4,-1,-8,9,4,2,9,-9,-4,-8,-3,-1,-6,7,-10,1,10,-8,2,10,1,7,8,7,-5,4,8,4,-2,1,7,7,-8,8,2,6,-1,-5,9,1,-9,-1,-10,2,-6,-5,8,2,9,-6,7,-6,4,-7,7,8,-3,-4,6,7,2,-4,-4,-6,6,3,5,4,-5,4,-7,8,3,-4,-10,10,-3,-2,-5,-1,4,6,5,9,-9,2,7,-7,-1,-9,4,-3,-8,-3,5,3,7,-9,9,2,10,7,3,-8,-7,-5,8,7,5,8,3,9,3,4,-5,4,-10,3,-7,8,-7,4,-1,3,10,-5,-7,4,-4,3,-5,-5,10,-8,10,-10,9,4,2,3,3,4,2,-1,8,-6,-3,-8,10,9,-4,-8,-10,2,-2,-3,-2,-6,-6,-1,-10,-7,-9,-5,5,-10,10,1,-10,1,7,-8,2,-3,10,-5,2,-1,-9,3,-10,-2,-1,-10,7,7,-7,2,9,-10,-3,9,-8,-8,7,-2,4,-9,8,-8,-3,8,-9,1,-10,-9,7,8,-8,-2,-10,4,-10,-1,-2,-5,3,5,6,2,-7,8,-6,-9,5,-9,-8,8,-6,8,7,1,7,-4,1,10,6,2,-2,-8,4,1,10,2,10,2,-3,1,-8,-6,10,7,-2,8,9,3,3,7,-5,9,-1,7,3,-6,1,-2,-8,5,-7,3,8,1,-2,-5,9,4,-5,4,7,3,-3,-8,-5,8,7,9,-9,-9,9,8,9,8,3,4,-3,7,-3,5,-10,-9,8,4,-8,-10,8,7,-2,-1,-6,-4,-1,4,-7,-9,4,6,6,1,3,-3,1,-8,4,5,-6,10,1,-1,-3,-5,-10,2,1,2,-5,6,-6,9,6,1,-5,9,-4,-2,3,-7,8,-1,-3,2,-9,-5,5,-4,-8,-10,5,-6,-2,-8,-8,7,2,-7,-2,-4,7,7,-3,-2,-7,3,4,1,-10,10,-3,7,7,-2,-3,2,-8,-4,2,-4,-10,1,6,1,-10,-7,-8,-10,-8,-5,-3,-3,-8,3,-4,-6,-4,10,8,10,-10,3,-1,4,7,2,-6,10,3,3,10,2,8,-6,3,4,-2,3,2,-5,-7,-1,-2,-7,6,-4,9,2,10,-4,1,8,7,-9,1,9,10,10,-1,-9,-7,5,9,-3,-3,-1,5,10,-3,2,-2,1,-1,6,-8,-10,9,10,1,8,10,-10,3,8,10,9,1,6,2,5,-10,-6,-8,-9,-10,3,-10,-5,-5,-8,-5,9,-8,-9,6,2,-8,-6,-5,-5,4,4,-3,9,-4,-4,-6,6,-5,-8,-8,8,-9,2,1,-6,5,1,1,-7,8,5,-2,10,5,-2,-8,-10,-5,8,8,-3,8,-5,5,-5,3,7,-2,-5,-6,-1,-7,1,1,-10,-7,-6,-8,-3,2,5,9,-1,2,-7,2,3,7,3,-5,-9,-5,-7,-7,-7,-8,4,-6,-6,2,-7,1,6,-5,-8,-4,-3,3,4,-10,-8,-3,6,9,8,-7,-8,6,-8,4,9,4,-9,-2,8,-3,-8,9,8,8,-9,-2,5,2,-6,9,6,-9,-2,-7,-3,-9,9,-7,-5,-4,1,-3,1,-8,-2,6,2,-3,6,-5,4,-10,-1,1,-1,2,10,-8,3,-10,5,-4,-1,9,9,-6,9,8,-2,-8,4,7,-7,5,-1,4,-10,2,5,9,-7,-7,-3,-6,5,-8,-4,-5,9,1,-4,7,3,-7,1,2,-3,4,-5,-10,6,1,4,3,5,-7,-8,5,4,-10,2,-2,-5,10,9,-2,10,7,9,-1,-3], dtype = "uint8")#candidate|3064|(858,)|const|uint8
call_3063 = relay.TupleGetItem(func_1098_call(relay.reshape(const_3064.astype('uint8'), [11, 6, 13])), 0)
call_3065 = relay.TupleGetItem(func_1100_call(relay.reshape(const_3064.astype('uint8'), [11, 6, 13])), 0)
func_1098_call = mod.get_global_var('func_1098')
func_1100_call = mutated_mod.get_global_var('func_1100')
call_3075 = relay.TupleGetItem(func_1098_call(relay.reshape(const_3064.astype('uint8'), [11, 6, 13])), 0)
call_3076 = relay.TupleGetItem(func_1100_call(relay.reshape(const_3064.astype('uint8'), [11, 6, 13])), 0)
var_3077 = relay.var("var_3077", dtype = "bool", shape = (11, 6, 13))#candidate|3077|(11, 6, 13)|var|bool
bop_3078 = relay.left_shift(call_3063.astype('uint8'), relay.reshape(var_3077.astype('uint8'), relay.shape_of(call_3063))) # shape=(11, 6, 13)
bop_3081 = relay.left_shift(call_3065.astype('uint8'), relay.reshape(var_3077.astype('uint8'), relay.shape_of(call_3065))) # shape=(11, 6, 13)
output = relay.Tuple([call_3051,call_3061,const_3064,call_3075,bop_3078,])
output2 = relay.Tuple([call_3052,call_3062,const_3064,call_3076,bop_3081,])
func_3084 = relay.Function([var_3077,], output)
mod['func_3084'] = func_3084
mod = relay.transform.InferType()(mod)
mutated_mod['func_3084'] = func_3084
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3085 = relay.var("var_3085", dtype = "bool", shape = (11, 6, 13))#candidate|3085|(11, 6, 13)|var|bool
func_3084_call = mutated_mod.get_global_var('func_3084')
call_3086 = func_3084_call(var_3085)
output = call_3086
func_3087 = relay.Function([var_3085], output)
mutated_mod['func_3087'] = func_3087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1905_call = mod.get_global_var('func_1905')
func_1906_call = mutated_mod.get_global_var('func_1906')
call_3179 = relay.TupleGetItem(func_1905_call(), 3)
call_3180 = relay.TupleGetItem(func_1906_call(), 3)
output = call_3179
output2 = call_3180
func_3190 = relay.Function([], output)
mod['func_3190'] = func_3190
mod = relay.transform.InferType()(mod)
output = func_3190()
func_3191 = relay.Function([], output)
mutated_mod['func_3191'] = func_3191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2764_call = mod.get_global_var('func_2764')
func_2765_call = mutated_mod.get_global_var('func_2765')
call_3207 = relay.TupleGetItem(func_2764_call(), 0)
call_3208 = relay.TupleGetItem(func_2765_call(), 0)
func_2170_call = mod.get_global_var('func_2170')
func_2171_call = mutated_mod.get_global_var('func_2171')
call_3212 = relay.TupleGetItem(func_2170_call(), 1)
call_3213 = relay.TupleGetItem(func_2171_call(), 1)
output = relay.Tuple([call_3207,call_3212,])
output2 = relay.Tuple([call_3208,call_3213,])
func_3229 = relay.Function([], output)
mod['func_3229'] = func_3229
mod = relay.transform.InferType()(mod)
output = func_3229()
func_3230 = relay.Function([], output)
mutated_mod['func_3230'] = func_3230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2443_call = mod.get_global_var('func_2443')
func_2444_call = mutated_mod.get_global_var('func_2444')
call_3240 = relay.TupleGetItem(func_2443_call(), 0)
call_3241 = relay.TupleGetItem(func_2444_call(), 0)
output = relay.Tuple([call_3240,])
output2 = relay.Tuple([call_3241,])
func_3242 = relay.Function([], output)
mod['func_3242'] = func_3242
mod = relay.transform.InferType()(mod)
output = func_3242()
func_3243 = relay.Function([], output)
mutated_mod['func_3243'] = func_3243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1969_call = mod.get_global_var('func_1969')
func_1970_call = mutated_mod.get_global_var('func_1970')
call_3248 = func_1969_call()
call_3249 = func_1969_call()
output = relay.Tuple([call_3248,])
output2 = relay.Tuple([call_3249,])
func_3258 = relay.Function([], output)
mod['func_3258'] = func_3258
mod = relay.transform.InferType()(mod)
output = func_3258()
func_3259 = relay.Function([], output)
mutated_mod['func_3259'] = func_3259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2170_call = mod.get_global_var('func_2170')
func_2171_call = mutated_mod.get_global_var('func_2171')
call_3269 = relay.TupleGetItem(func_2170_call(), 1)
call_3270 = relay.TupleGetItem(func_2171_call(), 1)
func_2316_call = mod.get_global_var('func_2316')
func_2318_call = mutated_mod.get_global_var('func_2318')
call_3271 = relay.TupleGetItem(func_2316_call(), 0)
call_3272 = relay.TupleGetItem(func_2318_call(), 0)
output = relay.Tuple([call_3269,call_3271,])
output2 = relay.Tuple([call_3270,call_3272,])
func_3274 = relay.Function([], output)
mod['func_3274'] = func_3274
mod = relay.transform.InferType()(mod)
output = func_3274()
func_3275 = relay.Function([], output)
mutated_mod['func_3275'] = func_3275
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3301 = relay.var("var_3301", dtype = "float32", shape = (12, 3, 2))#candidate|3301|(12, 3, 2)|var|float32
var_3302 = relay.var("var_3302", dtype = "float32", shape = (12, 3, 2))#candidate|3302|(12, 3, 2)|var|float32
bop_3303 = relay.mod(var_3301.astype('float32'), relay.reshape(var_3302.astype('float32'), relay.shape_of(var_3301))) # shape=(12, 3, 2)
output = bop_3303
output2 = bop_3303
func_3315 = relay.Function([var_3301,var_3302,], output)
mod['func_3315'] = func_3315
mod = relay.transform.InferType()(mod)
var_3316 = relay.var("var_3316", dtype = "float32", shape = (12, 3, 2))#candidate|3316|(12, 3, 2)|var|float32
var_3317 = relay.var("var_3317", dtype = "float32", shape = (12, 3, 2))#candidate|3317|(12, 3, 2)|var|float32
output = func_3315(var_3316,var_3317,)
func_3318 = relay.Function([var_3316,var_3317,], output)
mutated_mod['func_3318'] = func_3318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2143_call = mod.get_global_var('func_2143')
func_2144_call = mutated_mod.get_global_var('func_2144')
call_3385 = func_2143_call()
call_3386 = func_2143_call()
func_3048_call = mod.get_global_var('func_3048')
func_3050_call = mutated_mod.get_global_var('func_3050')
call_3410 = relay.TupleGetItem(func_3048_call(), 0)
call_3411 = relay.TupleGetItem(func_3050_call(), 0)
func_1376_call = mod.get_global_var('func_1376')
func_1382_call = mutated_mod.get_global_var('func_1382')
var_3426 = relay.var("var_3426", dtype = "int8", shape = (525,))#candidate|3426|(525,)|var|int8
var_3427 = relay.var("var_3427", dtype = "float32", shape = (175,))#candidate|3427|(175,)|var|float32
call_3425 = relay.TupleGetItem(func_1376_call(relay.reshape(var_3426.astype('int8'), [15, 7, 5]), relay.reshape(var_3426.astype('int8'), [15, 7, 5]), relay.reshape(var_3427.astype('float32'), [175,]), relay.reshape(var_3426.astype('float64'), [15, 7, 5]), ), 0)
call_3428 = relay.TupleGetItem(func_1382_call(relay.reshape(var_3426.astype('int8'), [15, 7, 5]), relay.reshape(var_3426.astype('int8'), [15, 7, 5]), relay.reshape(var_3427.astype('float32'), [175,]), relay.reshape(var_3426.astype('float64'), [15, 7, 5]), ), 0)
uop_3445 = relay.erf(call_3425.astype('float64')) # shape=(15, 7, 5)
uop_3447 = relay.erf(call_3428.astype('float64')) # shape=(15, 7, 5)
output = relay.Tuple([call_3385,call_3410,var_3426,var_3427,uop_3445,])
output2 = relay.Tuple([call_3386,call_3411,var_3426,var_3427,uop_3447,])
func_3457 = relay.Function([var_3426,var_3427,], output)
mod['func_3457'] = func_3457
mod = relay.transform.InferType()(mod)
var_3458 = relay.var("var_3458", dtype = "int8", shape = (525,))#candidate|3458|(525,)|var|int8
var_3459 = relay.var("var_3459", dtype = "float32", shape = (175,))#candidate|3459|(175,)|var|float32
output = func_3457(var_3458,var_3459,)
func_3460 = relay.Function([var_3458,var_3459,], output)
mutated_mod['func_3460'] = func_3460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1635_call = mod.get_global_var('func_1635')
func_1636_call = mutated_mod.get_global_var('func_1636')
call_3467 = func_1635_call()
call_3468 = func_1635_call()
func_3021_call = mod.get_global_var('func_3021')
func_3023_call = mutated_mod.get_global_var('func_3023')
call_3471 = relay.TupleGetItem(func_3021_call(), 0)
call_3472 = relay.TupleGetItem(func_3023_call(), 0)
output = relay.Tuple([call_3467,call_3471,])
output2 = relay.Tuple([call_3468,call_3472,])
func_3483 = relay.Function([], output)
mod['func_3483'] = func_3483
mod = relay.transform.InferType()(mod)
output = func_3483()
func_3484 = relay.Function([], output)
mutated_mod['func_3484'] = func_3484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3483_call = mod.get_global_var('func_3483')
func_3484_call = mutated_mod.get_global_var('func_3484')
call_3493 = relay.TupleGetItem(func_3483_call(), 1)
call_3494 = relay.TupleGetItem(func_3484_call(), 1)
output = call_3493
output2 = call_3494
func_3515 = relay.Function([], output)
mod['func_3515'] = func_3515
mod = relay.transform.InferType()(mod)
output = func_3515()
func_3516 = relay.Function([], output)
mutated_mod['func_3516'] = func_3516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2143_call = mod.get_global_var('func_2143')
func_2144_call = mutated_mod.get_global_var('func_2144')
call_3527 = func_2143_call()
call_3528 = func_2143_call()
func_1969_call = mod.get_global_var('func_1969')
func_1970_call = mutated_mod.get_global_var('func_1970')
call_3554 = func_1969_call()
call_3555 = func_1969_call()
func_3021_call = mod.get_global_var('func_3021')
func_3023_call = mutated_mod.get_global_var('func_3023')
call_3567 = relay.TupleGetItem(func_3021_call(), 0)
call_3568 = relay.TupleGetItem(func_3023_call(), 0)
bop_3575 = relay.power(call_3554.astype('float32'), relay.reshape(call_3567.astype('float32'), relay.shape_of(call_3554))) # shape=(6, 8, 11)
bop_3578 = relay.power(call_3555.astype('float32'), relay.reshape(call_3568.astype('float32'), relay.shape_of(call_3555))) # shape=(6, 8, 11)
func_2257_call = mod.get_global_var('func_2257')
func_2258_call = mutated_mod.get_global_var('func_2258')
call_3581 = relay.TupleGetItem(func_2257_call(), 4)
call_3582 = relay.TupleGetItem(func_2258_call(), 4)
output = relay.Tuple([call_3527,bop_3575,call_3581,])
output2 = relay.Tuple([call_3528,bop_3578,call_3582,])
func_3585 = relay.Function([], output)
mod['func_3585'] = func_3585
mod = relay.transform.InferType()(mod)
mutated_mod['func_3585'] = func_3585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3585_call = mutated_mod.get_global_var('func_3585')
call_3586 = func_3585_call()
output = call_3586
func_3587 = relay.Function([], output)
mutated_mod['func_3587'] = func_3587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2443_call = mod.get_global_var('func_2443')
func_2444_call = mutated_mod.get_global_var('func_2444')
call_3637 = relay.TupleGetItem(func_2443_call(), 0)
call_3638 = relay.TupleGetItem(func_2444_call(), 0)
func_2033_call = mod.get_global_var('func_2033')
func_2035_call = mutated_mod.get_global_var('func_2035')
const_3650 = relay.const([-2.517558,-9.454263,0.416293,5.906910,3.011141,8.135205,1.570033,0.686043,3.879700,-3.394676,-5.090507,-4.573972,7.976827,2.206579], dtype = "float32")#candidate|3650|(14,)|const|float32
call_3649 = relay.TupleGetItem(func_2033_call(relay.reshape(const_3650.astype('float32'), [2, 1, 7])), 0)
call_3651 = relay.TupleGetItem(func_2035_call(relay.reshape(const_3650.astype('float32'), [2, 1, 7])), 0)
output = relay.Tuple([call_3637,call_3649,const_3650,])
output2 = relay.Tuple([call_3638,call_3651,const_3650,])
func_3672 = relay.Function([], output)
mod['func_3672'] = func_3672
mod = relay.transform.InferType()(mod)
mutated_mod['func_3672'] = func_3672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3672_call = mutated_mod.get_global_var('func_3672')
call_3673 = func_3672_call()
output = call_3673
func_3674 = relay.Function([], output)
mutated_mod['func_3674'] = func_3674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1969_call = mod.get_global_var('func_1969')
func_1970_call = mutated_mod.get_global_var('func_1970')
call_3687 = func_1969_call()
call_3688 = func_1969_call()
var_3696 = relay.var("var_3696", dtype = "uint64", shape = (6, 8, 11))#candidate|3696|(6, 8, 11)|var|uint64
bop_3697 = relay.multiply(call_3687.astype('int64'), relay.reshape(var_3696.astype('int64'), relay.shape_of(call_3687))) # shape=(6, 8, 11)
bop_3700 = relay.multiply(call_3688.astype('int64'), relay.reshape(var_3696.astype('int64'), relay.shape_of(call_3688))) # shape=(6, 8, 11)
func_3190_call = mod.get_global_var('func_3190')
func_3191_call = mutated_mod.get_global_var('func_3191')
call_3750 = func_3190_call()
call_3751 = func_3190_call()
output = relay.Tuple([bop_3697,call_3750,])
output2 = relay.Tuple([bop_3700,call_3751,])
func_3759 = relay.Function([var_3696,], output)
mod['func_3759'] = func_3759
mod = relay.transform.InferType()(mod)
mutated_mod['func_3759'] = func_3759
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3760 = relay.var("var_3760", dtype = "uint64", shape = (6, 8, 11))#candidate|3760|(6, 8, 11)|var|uint64
func_3759_call = mutated_mod.get_global_var('func_3759')
call_3761 = func_3759_call(var_3760)
output = call_3761
func_3762 = relay.Function([var_3760], output)
mutated_mod['func_3762'] = func_3762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2053_call = mod.get_global_var('func_2053')
func_2054_call = mutated_mod.get_global_var('func_2054')
call_3767 = relay.TupleGetItem(func_2053_call(), 0)
call_3768 = relay.TupleGetItem(func_2054_call(), 0)
func_3315_call = mod.get_global_var('func_3315')
func_3318_call = mutated_mod.get_global_var('func_3318')
const_3776 = relay.const([7.813119,7.103189,-4.426434,1.795732,2.870890,-9.532244,4.931040,-0.720844,-1.361768,4.702572,-5.467045,-9.873885,-2.085198,7.735861,7.254154,-7.131920,3.992102,3.501095,-7.116986,-3.050716,-2.035259,4.256977,-9.678830,-3.428976,0.452580,1.561163,9.805902,-1.658427,3.671581,5.488469,-7.337735,-8.116193,-9.414513,7.314421,-2.895464,-7.621044,-8.133109,-8.377476,-5.311995,8.128719,-0.335354,6.276794,-6.088192,8.966665,7.742627,-5.851124,-9.671859,-0.906401,0.995479,2.186651,6.923320,-9.724177,2.071740,-0.470274,3.130606,-2.066949,-1.008290,1.336827,6.494574,2.387046,-5.058457,-9.766207,-3.098227,7.029749,-3.001104,0.872170,-1.179267,-5.053579,-3.786401,1.805125,-9.872527,9.684112], dtype = "float32")#candidate|3776|(72,)|const|float32
call_3775 = func_3315_call(relay.reshape(const_3776.astype('float32'), [12, 3, 2]), relay.reshape(const_3776.astype('float32'), [12, 3, 2]), )
call_3777 = func_3315_call(relay.reshape(const_3776.astype('float32'), [12, 3, 2]), relay.reshape(const_3776.astype('float32'), [12, 3, 2]), )
output = relay.Tuple([call_3767,call_3775,const_3776,])
output2 = relay.Tuple([call_3768,call_3777,const_3776,])
func_3802 = relay.Function([], output)
mod['func_3802'] = func_3802
mod = relay.transform.InferType()(mod)
output = func_3802()
func_3803 = relay.Function([], output)
mutated_mod['func_3803'] = func_3803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3802_call = mod.get_global_var('func_3802')
func_3803_call = mutated_mod.get_global_var('func_3803')
call_3863 = relay.TupleGetItem(func_3802_call(), 0)
call_3864 = relay.TupleGetItem(func_3803_call(), 0)
func_2854_call = mod.get_global_var('func_2854')
func_2859_call = mutated_mod.get_global_var('func_2859')
const_3873 = relay.const([2.831113,8.676647,4.793042,-4.247554,-7.487896,-2.522412,4.514689,-4.353814,-5.210783,-2.840458,4.116085,-3.884138,-5.981052,-6.119364,-2.150936,5.824250,8.625210,-6.814245,1.369392,1.175908,4.657616,9.387771,3.292037,-7.750596,0.606593,1.793737,3.681764,-6.575962,2.322223,2.161390,5.300999,5.919467,7.957717,2.864667,-7.474586,1.062212,-2.224741,-3.666564,-1.929776,-4.496145,3.281367,-9.457047,2.277112,-9.052455,9.596356,-7.441993,5.743934,-3.161552,4.596071,3.571563,-6.257246,5.864898,5.542447,-8.486670,7.637144,-5.233345,-5.414638,5.993191,6.344123,-6.866921,1.021186,4.978768,-3.174235,-4.422774,7.074788,8.214119,-7.821931,1.095091,-3.473736,0.945849,-6.078445,6.316964,-1.821411,-0.999951,-6.573897,6.860194,8.378953,-9.955953,-5.797795,-9.034329,3.409059,3.268332,-5.268275,9.072757,9.221609,-6.142607,-3.319658,-1.018823,-3.125982,-8.535437,-8.523779,9.622608,-9.480346,2.253282,-3.836698,0.141457,-2.680260,5.215697,2.635824,7.342478,4.775273,-4.140145,7.557987,-5.477931,4.262994,7.937758,-4.875369,5.012107,-0.871387,3.506522,-0.541799,-8.283129,-7.443283,-3.460238,2.738661,-1.243355,5.520517,-6.415869,8.651326,9.112822,-7.620461,-8.880069,1.940570,8.557409,8.820032,-0.511954,8.434927,-9.973718,-2.642481,2.143592,-6.447371,-3.880433,-3.661614,0.844153,2.788853,-8.034010,9.602235,2.681443,9.064088,-8.640543,5.302158,-0.772518,-5.055524,-6.456293,3.225071,-5.426971,2.325745,-3.225101,7.275696,-5.675391,-3.700206,-3.775388,5.438357,-2.370247,9.752262,6.498477,7.893985,2.646987,-7.074907,-0.830510,-0.674331,-3.364550,2.314036,5.278464,-7.055603,0.107727,8.241213,-5.729274,8.634210,9.490997,0.124419,-3.935023,-0.598274,-6.654548,6.224688,6.283690,2.235702,-0.019710,-6.595276,-2.391034,7.067668,9.588250,9.226084,0.061332,-5.621655,5.741594,-1.189045,-8.264424,-6.082160,7.257741,4.697941,1.283270,-4.061369,6.272648,4.729303,4.491349,7.422760,9.714543,-8.481942,-3.300174,5.354423,7.868354,1.153343,1.999393,-7.870864,6.405912,7.251680,7.573858,-5.937755,-1.699983,-0.113376,-6.359257,-1.507084,-6.879956,7.767372,6.068180,8.523636,-5.765169,-1.343608,-7.946202,-8.016891,-8.694250,-2.231334,-4.025184,-7.863334,-1.066285,-4.980880,-3.630059,1.263043,-7.895429,8.731954,9.398385,-4.994356,8.525689,8.093323,6.067008,-0.492065,4.456070,8.595279,4.575822,-4.650138,-8.587640,7.540360,5.290460,-3.783520,8.644150,1.432930,-4.536495,-7.723811,-3.418620,5.716118,2.004743,5.235407,-7.960288,-9.975199,-3.221432,7.519531,-0.951416,-0.315108,5.435548,9.616758,-6.558393,-9.281533,-3.586288,4.213921,-6.254491,-3.268298,-2.585291,6.008627,7.574828,-0.723280,-5.856589,-6.450229,-0.447909,2.338597,8.531741,-1.542787,7.565078,-6.134394,8.915980,8.759867,-4.837903,-6.684982,0.595686,2.898532,9.117484,1.239632,-6.812012,-3.933491,-6.874242,-7.751401,-7.439685,5.369035,9.814715,7.542754,1.624627,9.144674,1.066929,-8.207272,0.974530,4.473427,-0.947967,-3.475804,-4.385871,8.875066,-9.605644,3.090291,9.116530,8.021596,-2.853383,5.638619,6.571228,-2.791036,-8.415111,4.155769,-2.259364,3.851928,4.112423,5.313068,-1.699896,-4.763079,8.178418,-0.174519,5.347115,2.606134,-7.088697,9.216346,9.832954,-1.543167,4.969712,2.409717,-1.451095,-9.892542,4.072434,-1.730546,-4.682324,-4.605354,-0.984518,-3.570775,-6.780897,8.297399,8.857457,-4.874866,-4.782079,-1.903008,6.640705,-2.367689,-8.355945,5.247019,-3.166733,-4.621990,2.533067,-1.333899,6.163503,6.710498,1.111604,-9.412844,6.619485,5.922978,-1.616675], dtype = "float64")#candidate|3873|(360,)|const|float64
const_3874 = relay.constdtype = "float32")#candidate|3874|(84, 20)|const|float32
var_3875 = relay.var("var_3875", dtype = "float32", shape = (175,))#candidate|3875|(175,)|var|float32
call_3872 = relay.TupleGetItem(func_2854_call(relay.reshape(const_3873.astype('float64'), [5, 12, 6]), relay.reshape(const_3874.astype('float32'), [1680,]), relay.reshape(var_3875.astype('float32'), [175,]), ), 2)
call_3876 = relay.TupleGetItem(func_2859_call(relay.reshape(const_3873.astype('float64'), [5, 12, 6]), relay.reshape(const_3874.astype('float32'), [1680,]), relay.reshape(var_3875.astype('float32'), [175,]), ), 2)
var_3887 = relay.var("var_3887", dtype = "float64", shape = (5, 12, 6))#candidate|3887|(5, 12, 6)|var|float64
bop_3888 = relay.less(call_3872.astype('bool'), relay.reshape(var_3887.astype('bool'), relay.shape_of(call_3872))) # shape=(5, 12, 6)
bop_3891 = relay.less(call_3876.astype('bool'), relay.reshape(var_3887.astype('bool'), relay.shape_of(call_3876))) # shape=(5, 12, 6)
uop_3899 = relay.rsqrt(var_3875.astype('float32')) # shape=(175,)
output = relay.Tuple([call_3863,const_3873,const_3874,bop_3888,uop_3899,])
output2 = relay.Tuple([call_3864,const_3873,const_3874,bop_3891,uop_3899,])
func_3914 = relay.Function([var_3875,var_3887,], output)
mod['func_3914'] = func_3914
mod = relay.transform.InferType()(mod)
mutated_mod['func_3914'] = func_3914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3914_call = mutated_mod.get_global_var('func_3914')
var_3916 = relay.var("var_3916", dtype = "float32", shape = (175,))#candidate|3916|(175,)|var|float32
var_3917 = relay.var("var_3917", dtype = "float64", shape = (5, 12, 6))#candidate|3917|(5, 12, 6)|var|float64
call_3915 = func_3914_call(var_3916,var_3917,)
output = call_3915
func_3918 = relay.Function([var_3916,var_3917,], output)
mutated_mod['func_3918'] = func_3918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2170_call = mod.get_global_var('func_2170')
func_2171_call = mutated_mod.get_global_var('func_2171')
call_3939 = relay.TupleGetItem(func_2170_call(), 0)
call_3940 = relay.TupleGetItem(func_2171_call(), 0)
func_2257_call = mod.get_global_var('func_2257')
func_2258_call = mutated_mod.get_global_var('func_2258')
call_3944 = relay.TupleGetItem(func_2257_call(), 2)
call_3945 = relay.TupleGetItem(func_2258_call(), 2)
output = relay.Tuple([call_3939,call_3944,])
output2 = relay.Tuple([call_3940,call_3945,])
func_3970 = relay.Function([], output)
mod['func_3970'] = func_3970
mod = relay.transform.InferType()(mod)
mutated_mod['func_3970'] = func_3970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3970_call = mutated_mod.get_global_var('func_3970')
call_3971 = func_3970_call()
output = call_3971
func_3972 = relay.Function([], output)
mutated_mod['func_3972'] = func_3972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2257_call = mod.get_global_var('func_2257')
func_2258_call = mutated_mod.get_global_var('func_2258')
call_3993 = relay.TupleGetItem(func_2257_call(), 3)
call_3994 = relay.TupleGetItem(func_2258_call(), 3)
func_1676_call = mod.get_global_var('func_1676')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_3996 = relay.TupleGetItem(func_1676_call(), 0)
call_3997 = relay.TupleGetItem(func_1678_call(), 0)
func_2170_call = mod.get_global_var('func_2170')
func_2171_call = mutated_mod.get_global_var('func_2171')
call_4031 = relay.TupleGetItem(func_2170_call(), 1)
call_4032 = relay.TupleGetItem(func_2171_call(), 1)
var_4035 = relay.var("var_4035", dtype = "float64", shape = (6, 8, 11))#candidate|4035|(6, 8, 11)|var|float64
bop_4036 = relay.bitwise_and(call_3996.astype('int64'), relay.reshape(var_4035.astype('int64'), relay.shape_of(call_3996))) # shape=(6, 8, 11)
bop_4039 = relay.bitwise_and(call_3997.astype('int64'), relay.reshape(var_4035.astype('int64'), relay.shape_of(call_3997))) # shape=(6, 8, 11)
func_1098_call = mod.get_global_var('func_1098')
func_1100_call = mutated_mod.get_global_var('func_1100')
var_4047 = relay.var("var_4047", dtype = "uint8", shape = (858,))#candidate|4047|(858,)|var|uint8
call_4046 = relay.TupleGetItem(func_1098_call(relay.reshape(var_4047.astype('uint8'), [11, 6, 13])), 1)
call_4048 = relay.TupleGetItem(func_1100_call(relay.reshape(var_4047.astype('uint8'), [11, 6, 13])), 1)
uop_4063 = relay.asin(var_4035.astype('float32')) # shape=(6, 8, 11)
func_2480_call = mod.get_global_var('func_2480')
func_2482_call = mutated_mod.get_global_var('func_2482')
call_4068 = func_2480_call()
call_4069 = func_2480_call()
output = relay.Tuple([call_3993,call_4031,bop_4036,call_4046,var_4047,uop_4063,call_4068,])
output2 = relay.Tuple([call_3994,call_4032,bop_4039,call_4048,var_4047,uop_4063,call_4069,])
func_4071 = relay.Function([var_4035,var_4047,], output)
mod['func_4071'] = func_4071
mod = relay.transform.InferType()(mod)
var_4072 = relay.var("var_4072", dtype = "float64", shape = (6, 8, 11))#candidate|4072|(6, 8, 11)|var|float64
var_4073 = relay.var("var_4073", dtype = "uint8", shape = (858,))#candidate|4073|(858,)|var|uint8
output = func_4071(var_4072,var_4073,)
func_4074 = relay.Function([var_4072,var_4073,], output)
mutated_mod['func_4074'] = func_4074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1635_call = mod.get_global_var('func_1635')
func_1636_call = mutated_mod.get_global_var('func_1636')
call_4101 = func_1635_call()
call_4102 = func_1635_call()
func_663_call = mod.get_global_var('func_663')
func_667_call = mutated_mod.get_global_var('func_667')
const_4105 = relay.const([2,3,5,-8,-6,-2,-7,9,-6,-7,-1,-4,-2,5,1,-5,-5,4,10,2,8,-3,2,6,-1,6,-10,10,-1,1,8,-6,2,-4,9,2,-9,4,-7,1,5,-9,10,-6,-6,-2,1,-7,5,7,7,-5,4,-10,-10,-10,8,10,1,-8,3,1,-7,8,10,-10,-7,-7,-2,2,10,7,-1,6,2,-9,4,-2,-8,5,-8,-7,7,5,-3,-1,1,8,4,-4,-10,5,2,-6,-8,8,-7,-10,-1,6,-4,-6,7,-6,10,9,-4,-5,-2,9,-4,-5,-4,-5,-9,-10,8,-7,9,-5,-5,10,-1,-8,-8,4,-3,-2,5,5,-8,9,8,2,1,-6,-6,-6,1,-1,-10,-10,-3,4,-2,3,4,10,8,-9,1,-5,-4,-3,6,4,8,-1,-8,10,5,-2,5,-1,3,-2,-7,-1,-10,6,8,-2,-3,9,9,3,-5,5,8,3,-7,-8,-1,-7,-5,7,-2,10,-3,1,10,-7,9,-3,7,-10,10,-3,9,4,-3,-7,-9,4,-6,3,9,1,2,-4,-9,-5,4,-3,-8,-7,7,9,1,-9,8,-2,-4,4,-6,-6,5,-7,-9,-4,-7,-9,-4,-4,2,3,5,-7,-10,-6,-9,3,-4,-3,-1,2,-9,-4,-1,-8,-2,-3,8,-6,10,5,4,1,10,-3,-2,-1,-7,-4,3,-1,4,-2,5,9,1,3,3,3,10,6,-10,3,-2,-6,-8,8,1,4,-9,9,6,5,-8,5,-4,-1,8,2,2,4,2,-2,3,9,9,-2,-4,6,-5,1,2,4,8,9,-3,-10,5,8,-9,10,8,5,-10,3,4,5,-6,5,6,-5,-4,-3,-10,7,-9,9,10,9,-7,-3,6,6,-8,7,-2,2,9,7,8,1,10,5,8,-9,-6,-7,-2,-4,1,-6,-6,-10,-6,8,-10,9,1,-1,-10,5,3,-10,-2,-7,8,7,-4,10,-6,1,-9,6,-8,10,-7,6,6,5,10,4,-5,-1,10,6,2,-1,-10,1,-6,-6,6,3,7,4,9,-5,-9,-1,8,6,-7,-8,-8,4,10,8,-3,-1,-8,8,-1,2,-7,-10,2,-4,-4,5,1,-5,1,-10,4,-5,-4,-10,5,-8,4,-7,3,5,-4,-9,-10,-8,8,5,9,6,2,10,-7,8,-6,8,-8,9,5,-1,-2,8,-8,6,3,-1,-8,-10,9,8,5,-7,1,9,1,3,-8,7,-3,3,5,-9,-5,9,9,1,3,8,-1,-2,-6,10,-5,10,-2,-4,-7,1,3,7,-7,-7,8,6,4,-4,4,-4,4,9,-9,2,-7,9,3,6,-6,-10,-8,-4,6,-3,-5,-1,3,5,-2,-9,10,-3,-3,2,-1,4,1,-2,-7,9,-3,8,-2,-9,10,5,5,-4,6,10,10,-7,-3,10,-7,1,-1,8,-2,8,-7,5,-1,-4,4,-4,-9,5,-1,1,4,-8,1,-8,4,-8,-9,5,-1,-6,-5,9,-3,-6,-9,-10,1,10,5,6,4,-10,-4,-2,6,-9,-10,4,5,8,9,9,-8,-1,-6,10,-10,10,7,-10,-10,3,9,3,-1,8,-1,-1,7,-1,8,5,-4,-1,-7,-6,-10,-10,10,3,-6,-1,-9,7,-4,-10,-2,2,10,-8,4,7,-7,-3,10,-8,8,-5,-4,2,9,-2,-9,-6,8,7,10,-8,-10,-3,8,9,1,-2,4,-2,-9,5,-7,-6,-7,-8,6,-5,6,9,7,1,-1,2,-8,2,7,3,10,-10,2,-5,4,5,6,-6,-1,3,-10,9,7,3,-9,-1,-6,4,-1,-6,-9,-6,4,-9,1,-9,5,8,7,10,-10,5,-6,-5,9,3,-2,-2,5,3,3,6,10,-4,7,-3,6,4,8,-8,-3,-5,-2,-3,-8,10,10,1,-1,-7,8,-3,7,-8,-9,1,7,-6,3,-5,-8,4,4,6,-10,-2,-2,-7,-4,-7,1,-2,-4,-9,-10,7,3,7,-7,-1,-5,-7,7,9,7,4,-4,8,7,-2,-4,-8,-10,-4,-8,-6,-9,-4,-7,10,9,-3,2,-10,1,-7,-2,-3,10,1,-4,2,10,-10,9,2,-3,2,6,-4,3,-3,-8,9,-6,5,9,-3,-3,7,-2,1,-4,9,-4,-9,6,-4,-10,2,5,-6,-7,5,-4,2,-1,-1,6,5,5,-7,-5,5,3,-1,-7,3,10,3,-10,9,-2,6,-2,-7,2,10,-6,5,4,-10,-7,-4,2,-8,-6,6,9,5,-3,-8,8,-4,-3,-6,7,8,8,8,1,4,6,5,-4,-7,-5,-1,3,9,-6,-4,2,4,4,-2,9,6,8,1,4,-8,-2,-3,-6,-4,-9,3,10,1,-1,-1,-1,-8,-8,2,6,2,8,-7,-8,-5,9,8,7,-3,4,-1,-1,-3,-9,-3,-4,-4,-10,7,2,-7,-1,-10,6,-9,7,3,-10,-9,3,3,-8,-2,-2,6,-10,-4,-6,1,8,-2,9,-5,6,-5,7,-6,9,-1,6,4,8,1,4,8,2,-7,7,-8,-5,2,5,4,8,4,3,-2,-5,7,-4,1,6,7,-7,6,9,1,6,9,-3,7,-10,8,-1,7,1,3,6,-3,-4,5,7,-9,-3,6,-1,3,2,-9,8,2,5,-9,3,2,-10,-3,4,9,-2,3,-8,7,10,4,-5,7,10,-9,-7,2,-9,-4,7,-10,6,4,-4,5,10,-1,-6,5,6,2,-6,-1,-9,9,8,-7,-5,-10,6,2,-7,-1,3,2,9,-3,6,1,10,-3,1,5,-3,-6,2,-4,-3,1,-10,-5,7,-5,1,8,8,-10,-3,7,-9,2,-1,10,1,9,-6,-2,10,6,5,-3,-7,-2,-7,4,-1,7,5,7,-1,-7,1,-10,7,4,-1,-7,-1,9,-9,4,-3,4,-10,-4,-7,8,10,-1,-3,1,6,-4,-6,-5,-8,-4,3,9,-9,6,3,4,-3,2,-1,-2,10,6,-9,-10,-3,7,4,-9,8,9,-1,-5,-9,2,10,9,-2,-8,5,9,4,-3,-4,1,10,-3,2,-7,5,-3,5,-6,6,-7,2,8,-4,6,5,-9,-7,8,-10,-10,-6,3,4,8,3,-10,3,-5,-1,6,8,3,-10,5,-5,9,10,3,-1,-4,10,3,6,-2,-9,-4,-6,2,-7,-5,2,6,-6,-5,-1,3,-5,-5,-6,-9,-7,-2,10,-8,9,-1,-9,-4,-7,-4,-10,-10,-5,7,3,-6,10,5], dtype = "uint64")#candidate|4105|(1248,)|const|uint64
var_4106 = relay.var("var_4106", dtype = "int16", shape = (1200,))#candidate|4106|(1200,)|var|int16
call_4104 = relay.TupleGetItem(func_663_call(relay.reshape(const_4105.astype('uint64'), [8, 12, 13]), relay.reshape(var_4106.astype('int16'), [4, 300]), ), 1)
call_4107 = relay.TupleGetItem(func_667_call(relay.reshape(const_4105.astype('uint64'), [8, 12, 13]), relay.reshape(var_4106.astype('int16'), [4, 300]), ), 1)
func_2181_call = mod.get_global_var('func_2181')
func_2183_call = mutated_mod.get_global_var('func_2183')
call_4119 = relay.TupleGetItem(func_2181_call(), 0)
call_4120 = relay.TupleGetItem(func_2183_call(), 0)
output = relay.Tuple([call_4101,call_4104,const_4105,var_4106,call_4119,])
output2 = relay.Tuple([call_4102,call_4107,const_4105,var_4106,call_4120,])
func_4133 = relay.Function([var_4106,], output)
mod['func_4133'] = func_4133
mod = relay.transform.InferType()(mod)
var_4134 = relay.var("var_4134", dtype = "int16", shape = (1200,))#candidate|4134|(1200,)|var|int16
output = func_4133(var_4134)
func_4135 = relay.Function([var_4134], output)
mutated_mod['func_4135'] = func_4135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1716_call = mod.get_global_var('func_1716')
func_1717_call = mutated_mod.get_global_var('func_1717')
call_4166 = func_1716_call()
call_4167 = func_1716_call()
func_3084_call = mod.get_global_var('func_3084')
func_3087_call = mutated_mod.get_global_var('func_3087')
var_4179 = relay.var("var_4179", dtype = "bool", shape = (1, 858))#candidate|4179|(1, 858)|var|bool
call_4178 = relay.TupleGetItem(func_3084_call(relay.reshape(var_4179.astype('bool'), [11, 6, 13])), 4)
call_4180 = relay.TupleGetItem(func_3087_call(relay.reshape(var_4179.astype('bool'), [11, 6, 13])), 4)
uop_4181 = relay.rsqrt(var_4179.astype('float64')) # shape=(1, 858)
output = relay.Tuple([call_4166,call_4178,uop_4181,])
output2 = relay.Tuple([call_4167,call_4180,uop_4181,])
func_4185 = relay.Function([var_4179,], output)
mod['func_4185'] = func_4185
mod = relay.transform.InferType()(mod)
var_4186 = relay.var("var_4186", dtype = "bool", shape = (1, 858))#candidate|4186|(1, 858)|var|bool
output = func_4185(var_4186)
func_4187 = relay.Function([var_4186], output)
mutated_mod['func_4187'] = func_4187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2764_call = mod.get_global_var('func_2764')
func_2765_call = mutated_mod.get_global_var('func_2765')
call_4191 = relay.TupleGetItem(func_2764_call(), 0)
call_4192 = relay.TupleGetItem(func_2765_call(), 0)
func_2316_call = mod.get_global_var('func_2316')
func_2318_call = mutated_mod.get_global_var('func_2318')
call_4228 = relay.TupleGetItem(func_2316_call(), 0)
call_4229 = relay.TupleGetItem(func_2318_call(), 0)
func_2316_call = mod.get_global_var('func_2316')
func_2318_call = mutated_mod.get_global_var('func_2318')
call_4233 = relay.TupleGetItem(func_2316_call(), 0)
call_4234 = relay.TupleGetItem(func_2318_call(), 0)
bop_4255 = relay.maximum(call_4191.astype('int8'), relay.reshape(call_4233.astype('int8'), relay.shape_of(call_4191))) # shape=(6, 8, 11)
bop_4258 = relay.maximum(call_4192.astype('int8'), relay.reshape(call_4234.astype('int8'), relay.shape_of(call_4192))) # shape=(6, 8, 11)
output = relay.Tuple([call_4228,bop_4255,])
output2 = relay.Tuple([call_4229,bop_4258,])
func_4277 = relay.Function([], output)
mod['func_4277'] = func_4277
mod = relay.transform.InferType()(mod)
mutated_mod['func_4277'] = func_4277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4277_call = mutated_mod.get_global_var('func_4277')
call_4278 = func_4277_call()
output = call_4278
func_4279 = relay.Function([], output)
mutated_mod['func_4279'] = func_4279
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4302 = relay.var("var_4302", dtype = "float32", shape = (15, 2, 12))#candidate|4302|(15, 2, 12)|var|float32
const_4303 = relay.const([[[9.210997,-4.719566,2.198382,-6.602010,-2.341822,-3.433345,-2.384023,-4.385226,9.625514,-1.652315,6.712920,-4.125183],[0.141219,-3.676100,-2.713076,-5.054801,3.460169,-8.169229,4.400360,5.506613,0.394081,3.271669,-2.787325,-6.776089]],[[-3.249261,2.494321,-5.723328,3.535920,-0.708470,-2.030180,-9.274440,-6.503620,0.086672,-4.595033,2.487492,-4.155135],[8.345902,-6.644675,2.245915,7.449547,-3.311104,-1.351593,6.535703,-7.562664,1.732906,-9.039492,0.439238,0.575940]],[[1.736852,9.010537,9.560092,0.426519,8.015117,-7.843157,-9.328522,1.284630,-9.594469,6.200674,4.036130,-4.839290],[-5.566047,-3.469238,5.678722,-1.901186,3.135643,-7.051007,2.650313,-8.956369,6.165844,-0.910691,-4.576823,-6.425002]],[[5.294063,-6.462410,2.418123,6.074245,9.912394,-9.679891,4.285797,2.351170,-4.740507,1.503076,1.895441,7.747320],[-6.115039,-0.791997,9.470350,6.774785,0.930228,6.025398,-1.082565,-1.771755,8.612914,9.773477,-7.352796,2.568083]],[[-7.855506,-8.595847,-6.705721,-5.344967,0.863313,-2.347336,-3.603332,7.274613,3.178611,-3.380690,2.217554,-6.833030],[0.809987,2.535292,-6.469451,4.175915,8.755995,7.845120,7.217919,-3.926182,-1.712315,9.434496,5.696051,-4.782902]],[[0.231785,-1.885388,-2.233926,0.244046,-7.122111,6.478492,-9.203365,9.273217,-4.412839,6.421009,6.142114,6.457584],[-7.458415,-6.538134,6.298193,9.566149,3.427094,-5.209610,-6.462764,-7.698568,-3.653655,0.670020,-0.504275,4.762493]],[[6.012658,-0.083186,-4.265907,7.225574,-5.717975,-5.418770,-4.559516,-3.837297,-3.211728,3.469701,6.830790,7.391679],[5.608461,-4.524803,-5.238956,9.929276,-0.621756,-6.216387,2.548080,-7.069031,3.937399,9.611136,-4.939339,7.609963]],[[-3.343639,2.751139,-2.315434,-9.410716,2.719742,1.936016,-4.772668,-4.438223,-6.381930,7.572097,-4.715073,0.936982],[5.773604,8.202658,7.799924,-5.116436,-5.362590,8.507708,-3.661649,-5.293726,-3.310266,3.152887,-5.074290,3.038708]],[[-7.246996,-0.285452,-2.924973,-5.853939,0.523281,0.062531,4.583493,-0.355078,3.037277,-0.413312,1.013396,-6.962554],[8.325220,-5.016037,6.678100,-2.490929,7.819690,-3.544651,0.917094,7.049212,-2.046713,7.550894,-4.681139,3.091871]],[[1.707994,5.790064,7.710917,-0.599788,-0.835835,-4.250560,-3.383491,1.952706,-7.833703,-4.070915,5.722412,-8.220521],[-0.876040,8.404027,7.062355,6.284596,-6.778384,-3.764318,-4.165848,-7.836842,0.665657,-9.684472,-0.212885,1.259233]],[[5.167193,-8.458605,4.084608,-3.500209,-0.730816,-6.652583,5.826819,-3.310944,9.896038,8.520985,3.673763,-1.025673],[-2.203432,-4.684525,-9.993084,6.194377,1.360550,-2.810491,-6.340310,5.231908,-7.180972,7.917846,4.895543,-5.178201]],[[-0.520416,-5.496234,0.207772,-3.335064,6.201297,-9.242513,0.936410,9.292834,3.044792,8.617748,-6.955358,-3.710088],[5.343515,-4.194554,8.508331,2.315217,-9.192845,1.245303,-0.760851,-0.282758,3.860217,3.221897,-3.738772,5.555639]],[[7.761913,-7.719087,9.856708,-4.186946,-4.372669,2.677128,0.424874,6.067710,-5.071169,-5.883961,-4.597710,-2.386938],[9.243598,-5.966906,-4.699415,-9.802089,7.888307,-9.685937,7.778867,2.854213,4.509800,-7.312457,1.521166,2.913038]],[[-1.222330,-8.883996,-6.355690,-8.701654,-7.596349,3.244943,6.720204,-7.013079,-3.119832,4.207082,-7.743192,6.761541],[-0.645296,-3.308861,9.728169,8.043623,9.217260,3.490294,0.470932,-8.825736,-6.918099,-5.811239,7.724151,-6.227309]],[[2.482633,2.933830,-2.695298,-7.467489,-1.559468,-8.434492,-3.570457,-8.646736,4.723725,9.188291,6.689053,7.163964],[0.492375,1.822496,-2.359644,1.830477,-1.890993,6.172063,9.800242,1.372266,8.311841,-3.543675,8.822841,7.134725]]], dtype = "float32")#candidate|4303|(15, 2, 12)|const|float32
bop_4304 = relay.subtract(var_4302.astype('float32'), relay.reshape(const_4303.astype('float32'), relay.shape_of(var_4302))) # shape=(15, 2, 12)
output = relay.Tuple([bop_4304,])
output2 = relay.Tuple([bop_4304,])
func_4310 = relay.Function([var_4302,], output)
mod['func_4310'] = func_4310
mod = relay.transform.InferType()(mod)
var_4311 = relay.var("var_4311", dtype = "float32", shape = (15, 2, 12))#candidate|4311|(15, 2, 12)|var|float32
output = func_4310(var_4311)
func_4312 = relay.Function([var_4311], output)
mutated_mod['func_4312'] = func_4312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1676_call = mod.get_global_var('func_1676')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_4523 = relay.TupleGetItem(func_1676_call(), 0)
call_4524 = relay.TupleGetItem(func_1678_call(), 0)
func_4310_call = mod.get_global_var('func_4310')
func_4312_call = mutated_mod.get_global_var('func_4312')
const_4527 = relay.const([[-8.277700,-9.502746,5.930088,-4.226384,-9.065658,-5.881036,-3.293542,8.142676,-9.474113,6.844669,-6.032321,1.249759,-4.597013,-1.763324,2.997974,4.239548,7.642045,1.021530,-5.617965,-3.114319,-7.175486,5.427733,2.582935,-4.317317,6.482663,9.545788,-0.053798,0.259650,-8.418462,-3.283762,-4.747189,8.884656,2.410468,-9.816624,-3.499597,9.941501,7.728680,2.012176,1.631184,6.112485,-0.523259,2.416645,5.657811,5.173841,-6.590033,0.124891,7.438896,3.342847,-9.130468,-3.337131,-0.652067,7.315659,-4.124411,-5.393632,4.898824,6.666218,1.641760,-5.807783,0.874959,-7.670844,4.003067,-5.869841,-8.479891,-8.199177,-6.859926,5.228275,-2.293279,-4.529676,-7.807839,-9.724549,-5.076367,4.255160,-5.908172,-3.399866,5.830514,-1.119412,4.264231,1.270111,-4.988627,-1.662220,-8.826690,7.781672,-5.472440,5.252693,-0.245274,-5.056820,6.415523,-4.109828,-9.694346,-9.017201,4.522110,-0.506655,3.253617,-5.969179,7.852262,-4.924746,4.897545,-5.299210,-4.315253,-6.144549,-4.900970,5.592251,-7.879912,0.841980,5.432187,-7.379252,-8.154413,0.484142,-8.896932,3.161997,-0.436708,6.210537,7.345990,7.659402,9.545181,2.469648,7.389175,-8.793717,-3.371805,-7.604119,4.162756,8.455939,0.087971,3.662818,-9.703364,-8.329401,9.960024,-2.473049,8.964761,-7.597999,5.605249,-4.162282,-3.534079,-0.214132,5.208959,-7.300589,4.422214,-8.204752,-7.376063,-6.561483,5.424726,0.220705,-0.246520,4.779139,-3.452471,7.299368,2.075078,-1.572192,-6.724866,9.758394,0.892732,-2.529502,1.774649,6.491711,-3.878869,-0.592857,-5.097295,-7.214847,-4.648862,4.521088,2.332508,-7.065078,-1.631672,5.468472,-4.174219,-7.610931,-3.750165,-8.447265,-2.183740,-0.372163,-2.776186,-2.610505,-1.638058,1.209133,-4.403472,1.319627,5.374164,7.252375,-2.429550,-1.629597],[1.356668,-4.509481,3.829754,6.764161,8.584445,6.845525,-8.668444,-8.829297,-7.810628,8.195026,-5.100547,1.570607,8.263552,-1.840469,0.573369,-1.060958,1.420279,-2.450524,8.996322,-1.379310,9.910967,-5.066283,2.877673,9.077624,3.898252,0.669294,0.587540,1.083148,0.449303,7.820908,9.529213,3.991521,-6.154486,6.879592,2.098528,-8.078238,1.821702,-4.646291,-3.024742,3.701983,8.540615,4.217570,9.625737,3.006158,-7.246633,9.122731,-8.617946,5.017300,-1.171286,-9.527112,-4.851849,9.078269,-5.026696,1.708552,5.736969,-7.777542,4.038084,3.403420,-7.880820,2.649317,6.843426,-6.035423,5.264478,0.178670,9.256561,1.849071,-0.715258,0.080138,-7.569836,7.257847,0.472075,-7.148530,-7.144423,0.267887,-1.583775,1.358776,7.469761,0.226425,6.020826,3.125599,1.783334,2.604186,6.952866,-0.464648,9.939070,1.079123,7.844211,4.429515,8.879066,-8.928813,5.267308,-4.111934,-7.060495,3.578173,-6.754090,-8.077868,0.868203,5.232566,-0.738653,-3.484312,-3.177652,3.740735,-7.931622,3.968555,6.473596,6.383529,4.833072,-2.854594,-7.811541,-0.107915,-2.490420,-6.995131,-7.202080,-5.934469,2.445604,-9.410798,-0.107896,6.583211,-7.128891,-1.593766,-0.646668,-7.864437,2.487558,7.678934,-8.973141,-0.757605,-9.569623,-8.392066,1.698401,-4.382597,2.850287,-9.510119,-0.264420,-1.549659,-4.938791,-6.136950,4.672410,-3.843271,2.189241,-1.842133,9.416424,-0.477015,5.921381,-2.531876,6.944991,6.847556,2.228295,-3.237321,9.016347,-1.596909,-1.925566,-4.312158,5.098824,-2.646825,6.371118,-7.540910,-4.051579,-3.813501,2.551714,-1.397469,7.428375,-8.164190,2.957756,-7.541501,3.373139,-5.265906,-2.820099,6.128491,7.008795,-1.470258,-0.792015,-4.310313,-2.359178,-8.284519,9.172161,-5.337012,-9.940987,-7.422927,-5.141863,-3.940916]], dtype = "float32")#candidate|4527|(2, 180)|const|float32
call_4526 = relay.TupleGetItem(func_4310_call(relay.reshape(const_4527.astype('float32'), [15, 2, 12])), 0)
call_4528 = relay.TupleGetItem(func_4312_call(relay.reshape(const_4527.astype('float32'), [15, 2, 12])), 0)
bop_4531 = relay.floor_divide(const_4527.astype('float64'), relay.reshape(call_4526.astype('float64'), relay.shape_of(const_4527))) # shape=(2, 180)
bop_4534 = relay.floor_divide(const_4527.astype('float64'), relay.reshape(call_4528.astype('float64'), relay.shape_of(const_4527))) # shape=(2, 180)
func_2999_call = mod.get_global_var('func_2999')
func_3000_call = mutated_mod.get_global_var('func_3000')
call_4537 = relay.TupleGetItem(func_2999_call(), 0)
call_4538 = relay.TupleGetItem(func_3000_call(), 0)
uop_4550 = relay.asinh(bop_4531.astype('float32')) # shape=(2, 180)
uop_4552 = relay.asinh(bop_4534.astype('float32')) # shape=(2, 180)
output = relay.Tuple([call_4523,call_4537,uop_4550,])
output2 = relay.Tuple([call_4524,call_4538,uop_4552,])
func_4560 = relay.Function([], output)
mod['func_4560'] = func_4560
mod = relay.transform.InferType()(mod)
mutated_mod['func_4560'] = func_4560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4560_call = mutated_mod.get_global_var('func_4560')
call_4561 = func_4560_call()
output = call_4561
func_4562 = relay.Function([], output)
mutated_mod['func_4562'] = func_4562
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4570 = relay.var("var_4570", dtype = "float64", shape = (14, 4, 15))#candidate|4570|(14, 4, 15)|var|float64
uop_4571 = relay.asin(var_4570.astype('float64')) # shape=(14, 4, 15)
func_3802_call = mod.get_global_var('func_3802')
func_3803_call = mutated_mod.get_global_var('func_3803')
call_4574 = relay.TupleGetItem(func_3802_call(), 2)
call_4575 = relay.TupleGetItem(func_3803_call(), 2)
bop_4578 = relay.right_shift(uop_4571.astype('int8'), relay.reshape(var_4570.astype('int8'), relay.shape_of(uop_4571))) # shape=(14, 4, 15)
uop_4584 = relay.atan(uop_4571.astype('float32')) # shape=(14, 4, 15)
var_4593 = relay.var("var_4593", dtype = "float32", shape = (14, 4, 15))#candidate|4593|(14, 4, 15)|var|float32
bop_4594 = relay.divide(uop_4584.astype('float64'), relay.reshape(var_4593.astype('float64'), relay.shape_of(uop_4584))) # shape=(14, 4, 15)
output = relay.Tuple([call_4574,bop_4578,bop_4594,])
output2 = relay.Tuple([call_4575,bop_4578,bop_4594,])
func_4610 = relay.Function([var_4570,var_4593,], output)
mod['func_4610'] = func_4610
mod = relay.transform.InferType()(mod)
mutated_mod['func_4610'] = func_4610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4610_call = mutated_mod.get_global_var('func_4610')
var_4612 = relay.var("var_4612", dtype = "float64", shape = (14, 4, 15))#candidate|4612|(14, 4, 15)|var|float64
var_4613 = relay.var("var_4613", dtype = "float32", shape = (14, 4, 15))#candidate|4613|(14, 4, 15)|var|float32
call_4611 = func_4610_call(var_4612,var_4613,)
output = call_4611
func_4614 = relay.Function([var_4612,var_4613,], output)
mutated_mod['func_4614'] = func_4614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1944_call = mod.get_global_var('func_1944')
func_1946_call = mutated_mod.get_global_var('func_1946')
call_4681 = relay.TupleGetItem(func_1944_call(), 0)
call_4682 = relay.TupleGetItem(func_1946_call(), 0)
uop_4706 = relay.erf(call_4681.astype('float32')) # shape=(6, 8, 11)
uop_4708 = relay.erf(call_4682.astype('float32')) # shape=(6, 8, 11)
output = relay.Tuple([uop_4706,])
output2 = relay.Tuple([uop_4708,])
func_4727 = relay.Function([], output)
mod['func_4727'] = func_4727
mod = relay.transform.InferType()(mod)
mutated_mod['func_4727'] = func_4727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4727_call = mutated_mod.get_global_var('func_4727')
call_4728 = func_4727_call()
output = call_4728
func_4729 = relay.Function([], output)
mutated_mod['func_4729'] = func_4729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3970_call = mod.get_global_var('func_3970')
func_3972_call = mutated_mod.get_global_var('func_3972')
call_4756 = relay.TupleGetItem(func_3970_call(), 0)
call_4757 = relay.TupleGetItem(func_3972_call(), 0)
uop_4774 = relay.cos(call_4756.astype('float32')) # shape=(6, 8, 11)
uop_4776 = relay.cos(call_4757.astype('float32')) # shape=(6, 8, 11)
func_2515_call = mod.get_global_var('func_2515')
func_2519_call = mutated_mod.get_global_var('func_2519')
const_4778 = relay.const([-3.651200,-1.081037,2.935454,1.441092,-0.948655,5.317996,-9.200607,-2.851366,6.369611,3.348273,-8.330682,5.765271,2.717326,-9.872123,9.283049,-5.670349,-2.979680,-4.723707,-1.411216,3.821212,-4.523474,-2.996011,-5.500512,4.850633,-0.720300,9.410803,-7.213466,-5.746149,4.334488,0.081583,6.838367,-5.494117,-4.173797,0.989698,-3.265216,9.638639,7.473674,3.343186,-0.196334,-7.712583,6.867621,5.576549,-0.280771,7.630435,-4.250446,0.447554,9.994385,5.735865,-8.061364,-0.741865,-3.233665,-8.143603,0.436717,0.601079,-1.206149,4.648516,7.903029,-8.074330,-7.210630,9.089495,-8.700378,-5.189461,-9.622353,2.985903,-7.663203,0.336825,-1.899538,3.794462,9.043271,3.173552,-8.005013,-2.467088,-0.154960,4.961703,-5.270787,0.092949,1.877903,-1.950631,-8.029698,3.696892,-4.299831,8.030486,-8.530881,-5.675161,6.864754,7.527563,-9.568070,-7.001272,-6.535471,-6.811268,-9.643203,3.686592,5.896661,-8.499083,-3.872234,1.404562,-8.095580,4.418449,7.929136,5.631719,4.055313,-8.417730,-3.831278,-6.064737,-4.556287,9.077801,9.375807,5.398310,0.764959,-1.733610,0.319205,-5.710473,-4.168092,-5.703282,1.724721,-4.726742,-7.944492,5.996623,6.752033,-1.455621,-0.982270,8.264287,-7.806001,-0.067934,-0.924937,5.279140,-8.026254,7.025630,8.018330,-8.082511,2.651371,-1.417395,5.001285,-4.157042,1.962495,0.712504,3.643361,6.851211,8.278205,0.312023,-4.989493,2.140128,-4.405400,8.874408,-2.578915,-0.404120,9.960346,3.900244,-7.345932,9.528816,-3.494885,2.167031,6.462289,-5.379211,7.237251,-7.255707,-1.294668,-4.147847,4.672697,6.280892,-2.749152,6.149115,-3.690152,-4.958587,0.953091,-6.134441,-5.068887,8.233266,5.135525,-9.478922,9.724101,-2.110903,-5.754386,-2.998909,0.505099,9.048970,0.272715,7.690868,-9.464666,7.537702,5.717160,4.778132,9.041900,-4.631914,-4.352350,8.842091,5.532570,-8.468013,5.936980,6.977985,-7.414832,-4.039794,-7.487537,0.183167,2.919237,-6.656198,-4.266259,3.540266,-7.899237,-1.830108,-9.641985,-0.101282,-9.314623,-2.629269,0.177113,-1.085178,-2.978520,3.901838,-8.596337,5.056639,7.618640,-3.123299,-7.971092,-3.773583,5.434457,2.050080,-9.936325,-7.427047,-2.208366,-3.892142,-0.124825,6.648497,5.144688,7.539856,8.403916,-9.723662,-0.551366,2.801312,-7.353280,5.340120,-6.192804,7.098327,-9.659358,8.826566,-8.295415,-9.003555,-8.223684,-4.217539,6.061424,4.197302], dtype = "float32")#candidate|4778|(240,)|const|float32
call_4777 = relay.TupleGetItem(func_2515_call(relay.reshape(const_4778.astype('float32'), [5, 4, 12]), relay.reshape(const_4778.astype('float32'), [5, 4, 12]), ), 1)
call_4779 = relay.TupleGetItem(func_2519_call(relay.reshape(const_4778.astype('float32'), [5, 4, 12]), relay.reshape(const_4778.astype('float32'), [5, 4, 12]), ), 1)
func_2261_call = mod.get_global_var('func_2261')
func_2263_call = mutated_mod.get_global_var('func_2263')
call_4790 = func_2261_call()
call_4791 = func_2261_call()
func_1676_call = mod.get_global_var('func_1676')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_4799 = relay.TupleGetItem(func_1676_call(), 0)
call_4800 = relay.TupleGetItem(func_1678_call(), 0)
func_4560_call = mod.get_global_var('func_4560')
func_4562_call = mutated_mod.get_global_var('func_4562')
call_4803 = relay.TupleGetItem(func_4560_call(), 0)
call_4804 = relay.TupleGetItem(func_4562_call(), 0)
func_3048_call = mod.get_global_var('func_3048')
func_3050_call = mutated_mod.get_global_var('func_3050')
call_4816 = relay.TupleGetItem(func_3048_call(), 0)
call_4817 = relay.TupleGetItem(func_3050_call(), 0)
bop_4822 = relay.divide(uop_4774.astype('float64'), relay.reshape(call_4799.astype('float64'), relay.shape_of(uop_4774))) # shape=(6, 8, 11)
bop_4825 = relay.divide(uop_4776.astype('float64'), relay.reshape(call_4800.astype('float64'), relay.shape_of(uop_4776))) # shape=(6, 8, 11)
output = relay.Tuple([call_4777,const_4778,call_4790,call_4803,call_4816,bop_4822,])
output2 = relay.Tuple([call_4779,const_4778,call_4791,call_4804,call_4817,bop_4825,])
func_4836 = relay.Function([], output)
mod['func_4836'] = func_4836
mod = relay.transform.InferType()(mod)
mutated_mod['func_4836'] = func_4836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4836_call = mutated_mod.get_global_var('func_4836')
call_4837 = func_4836_call()
output = call_4837
func_4838 = relay.Function([], output)
mutated_mod['func_4838'] = func_4838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3515_call = mod.get_global_var('func_3515')
func_3516_call = mutated_mod.get_global_var('func_3516')
call_4844 = func_3515_call()
call_4845 = func_3515_call()
func_3242_call = mod.get_global_var('func_3242')
func_3243_call = mutated_mod.get_global_var('func_3243')
call_4847 = relay.TupleGetItem(func_3242_call(), 0)
call_4848 = relay.TupleGetItem(func_3243_call(), 0)
output = relay.Tuple([call_4844,call_4847,])
output2 = relay.Tuple([call_4845,call_4848,])
func_4860 = relay.Function([], output)
mod['func_4860'] = func_4860
mod = relay.transform.InferType()(mod)
output = func_4860()
func_4861 = relay.Function([], output)
mutated_mod['func_4861'] = func_4861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3242_call = mod.get_global_var('func_3242')
func_3243_call = mutated_mod.get_global_var('func_3243')
call_4932 = relay.TupleGetItem(func_3242_call(), 0)
call_4933 = relay.TupleGetItem(func_3243_call(), 0)
var_4937 = relay.var("var_4937", dtype = "float32", shape = (6, 8, 11))#candidate|4937|(6, 8, 11)|var|float32
bop_4938 = relay.minimum(call_4932.astype('float64'), relay.reshape(var_4937.astype('float64'), relay.shape_of(call_4932))) # shape=(6, 8, 11)
bop_4941 = relay.minimum(call_4933.astype('float64'), relay.reshape(var_4937.astype('float64'), relay.shape_of(call_4933))) # shape=(6, 8, 11)
output = relay.Tuple([bop_4938,])
output2 = relay.Tuple([bop_4941,])
func_4948 = relay.Function([var_4937,], output)
mod['func_4948'] = func_4948
mod = relay.transform.InferType()(mod)
var_4949 = relay.var("var_4949", dtype = "float32", shape = (6, 8, 11))#candidate|4949|(6, 8, 11)|var|float32
output = func_4948(var_4949)
func_4950 = relay.Function([var_4949], output)
mutated_mod['func_4950'] = func_4950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3585_call = mod.get_global_var('func_3585')
func_3587_call = mutated_mod.get_global_var('func_3587')
call_4955 = relay.TupleGetItem(func_3585_call(), 2)
call_4956 = relay.TupleGetItem(func_3587_call(), 2)
output = call_4955
output2 = call_4956
func_4959 = relay.Function([], output)
mod['func_4959'] = func_4959
mod = relay.transform.InferType()(mod)
mutated_mod['func_4959'] = func_4959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4959_call = mutated_mod.get_global_var('func_4959')
call_4960 = func_4959_call()
output = call_4960
func_4961 = relay.Function([], output)
mutated_mod['func_4961'] = func_4961
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4979 = relay.const([[[9,-10,9,-5,-9,4,1,-6,10,-1],[5,-1,5,4,9,5,-10,-10,-10,7],[-5,7,-1,-1,8,2,-1,-8,4,8],[-6,5,5,-6,10,6,-4,-1,5,6],[5,-9,-4,5,-9,-5,-3,10,4,6]],[[-9,9,-7,-10,2,6,-7,-4,-9,1],[1,4,4,5,-10,-4,-3,-2,-1,1],[-8,1,-9,6,-5,10,3,-3,6,7],[-6,2,-1,-10,-7,-8,-9,2,-7,7],[-5,9,1,-5,7,-2,2,-6,2,-7]],[[-8,-6,5,4,6,3,10,-1,3,7],[-9,-7,-7,-4,-9,-8,6,-2,1,5],[9,1,2,-10,8,-7,8,-6,6,-4],[10,2,5,1,1,-5,1,-2,6,8],[-3,10,10,8,7,3,-3,7,10,-4]],[[-1,-5,-5,-7,-3,6,1,-7,4,-1],[9,-2,8,10,7,-10,3,3,2,-8],[7,1,9,-3,5,-6,5,-9,-7,-2],[3,3,9,5,-7,8,-6,-4,-9,8],[8,-10,-1,-9,-6,-3,2,6,-1,5]],[[-3,-2,10,-3,-2,2,-6,4,-1,-6],[-3,-7,-4,-8,-5,4,4,6,1,-4],[2,-2,8,6,8,-8,2,6,10,4],[7,-3,4,-4,3,-10,5,5,-2,5],[-4,1,-8,-3,-2,-4,-3,-9,-10,-5]],[[-2,10,-1,-3,6,2,-10,-6,-3,7],[-4,-6,1,7,10,-6,9,10,-1,-2],[10,6,9,8,-1,-7,9,-5,9,-4],[3,9,-8,-1,-3,-5,-7,3,-5,7],[-6,-4,-8,-5,-10,-3,-1,-5,5,-5]],[[1,1,2,-5,5,-4,8,7,-6,10],[3,9,10,-10,-3,3,-6,-3,10,-7],[2,7,-1,6,9,5,3,-6,7,-6],[-3,-6,5,9,-9,-10,2,-3,-2,-2],[8,4,1,-2,8,-1,-1,9,-6,9]],[[9,-8,-7,-5,3,1,-7,3,-7,-6],[-5,5,4,9,-6,-5,8,-5,-8,3],[8,-3,10,-2,-8,-3,5,-10,4,7],[10,5,7,4,-10,7,2,4,-3,-1],[3,8,2,7,9,-7,9,-8,4,2]],[[-8,4,8,-4,-4,-5,-10,7,1,9],[-9,7,-10,6,7,-10,8,9,-3,8],[9,-6,-6,-1,6,-5,8,-5,-8,-2],[9,-4,-9,-5,-7,2,8,-4,-9,-9],[7,-2,-7,3,7,2,1,-5,8,-5]],[[-2,-10,-2,-5,1,8,2,-3,8,-6],[-3,-3,6,-3,7,-1,4,1,8,-1],[-2,9,10,2,-9,-4,-9,-5,4,-1],[-7,-2,-6,8,-7,-4,-7,-2,6,4],[-2,-8,-7,8,-2,-2,3,-9,-7,4]],[[-6,-2,5,10,9,9,-4,6,9,-3],[-3,1,1,7,-6,1,-3,-5,-10,-10],[-8,-2,-5,4,-10,-6,-5,3,6,5],[4,6,-10,6,5,-9,-6,-5,-9,6],[7,-6,-10,10,8,-9,-1,2,7,1]],[[5,-5,3,3,-1,3,2,4,-8,-7],[10,-1,-3,4,10,-4,-9,7,10,-6],[-8,3,-8,-9,1,-3,1,6,6,8],[7,-10,-2,8,6,7,3,-3,6,7],[7,10,5,-6,6,-8,5,-1,4,10]],[[-5,3,4,-1,7,10,10,-4,8,8],[3,8,6,4,1,2,-9,-4,-3,5],[-2,8,5,-9,-3,6,4,1,-3,4],[6,-10,2,-8,-10,7,-8,-6,-6,-7],[-1,-4,-8,9,-9,-5,-8,2,2,5]],[[4,4,6,8,-4,-2,9,1,10,-9],[2,5,-1,-8,-8,-5,-6,6,-10,5],[-9,-8,-4,6,-1,-4,-8,-1,-8,4],[-3,-8,-1,-2,-1,4,5,-10,4,-4],[10,-8,-6,9,-9,10,5,2,2,-4]],[[2,-3,-1,7,-9,-10,8,7,-8,-8],[3,-10,5,2,-9,-2,-8,9,10,-5],[-8,7,-5,-2,5,2,9,6,-6,-3],[7,-6,-10,6,-3,-8,8,-7,-2,-7],[-8,-4,-1,-2,9,1,-1,-2,-4,-3]],[[-1,-7,8,3,-2,6,-9,8,-1,6],[4,-7,-8,7,9,-8,1,-1,-9,9],[-7,1,5,6,10,5,1,10,-3,1],[5,2,5,4,-10,-5,-8,-4,8,1],[2,-3,-10,-4,7,6,-5,9,4,5]]], dtype = "int32")#candidate|4979|(16, 5, 10)|const|int32
var_4980 = relay.var("var_4980", dtype = "int32", shape = (16, 5, 10))#candidate|4980|(16, 5, 10)|var|int32
bop_4981 = relay.bitwise_and(const_4979.astype('int32'), relay.reshape(var_4980.astype('int32'), relay.shape_of(const_4979))) # shape=(16, 5, 10)
output = relay.Tuple([bop_4981,])
output2 = relay.Tuple([bop_4981,])
func_5005 = relay.Function([var_4980,], output)
mod['func_5005'] = func_5005
mod = relay.transform.InferType()(mod)
var_5006 = relay.var("var_5006", dtype = "int32", shape = (16, 5, 10))#candidate|5006|(16, 5, 10)|var|int32
output = func_5005(var_5006)
func_5007 = relay.Function([var_5006], output)
mutated_mod['func_5007'] = func_5007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3242_call = mod.get_global_var('func_3242')
func_3243_call = mutated_mod.get_global_var('func_3243')
call_5012 = relay.TupleGetItem(func_3242_call(), 0)
call_5013 = relay.TupleGetItem(func_3243_call(), 0)
func_3229_call = mod.get_global_var('func_3229')
func_3230_call = mutated_mod.get_global_var('func_3230')
call_5015 = relay.TupleGetItem(func_3229_call(), 0)
call_5016 = relay.TupleGetItem(func_3230_call(), 0)
output = relay.Tuple([call_5012,call_5015,])
output2 = relay.Tuple([call_5013,call_5016,])
func_5027 = relay.Function([], output)
mod['func_5027'] = func_5027
mod = relay.transform.InferType()(mod)
mutated_mod['func_5027'] = func_5027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5027_call = mutated_mod.get_global_var('func_5027')
call_5028 = func_5027_call()
output = call_5028
func_5029 = relay.Function([], output)
mutated_mod['func_5029'] = func_5029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2999_call = mod.get_global_var('func_2999')
func_3000_call = mutated_mod.get_global_var('func_3000')
call_5043 = relay.TupleGetItem(func_2999_call(), 0)
call_5044 = relay.TupleGetItem(func_3000_call(), 0)
output = call_5043
output2 = call_5044
func_5077 = relay.Function([], output)
mod['func_5077'] = func_5077
mod = relay.transform.InferType()(mod)
output = func_5077()
func_5078 = relay.Function([], output)
mutated_mod['func_5078'] = func_5078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3229_call = mod.get_global_var('func_3229')
func_3230_call = mutated_mod.get_global_var('func_3230')
call_5145 = relay.TupleGetItem(func_3229_call(), 1)
call_5146 = relay.TupleGetItem(func_3230_call(), 1)
func_2316_call = mod.get_global_var('func_2316')
func_2318_call = mutated_mod.get_global_var('func_2318')
call_5153 = relay.TupleGetItem(func_2316_call(), 0)
call_5154 = relay.TupleGetItem(func_2318_call(), 0)
func_3315_call = mod.get_global_var('func_3315')
func_3318_call = mutated_mod.get_global_var('func_3318')
var_5182 = relay.var("var_5182", dtype = "float32", shape = (72,))#candidate|5182|(72,)|var|float32
call_5181 = func_3315_call(relay.reshape(var_5182.astype('float32'), [12, 3, 2]), relay.reshape(var_5182.astype('float32'), [12, 3, 2]), )
call_5183 = func_3315_call(relay.reshape(var_5182.astype('float32'), [12, 3, 2]), relay.reshape(var_5182.astype('float32'), [12, 3, 2]), )
func_3759_call = mod.get_global_var('func_3759')
func_3762_call = mutated_mod.get_global_var('func_3762')
call_5185 = relay.TupleGetItem(func_3759_call(relay.reshape(call_5153.astype('uint64'), [6, 8, 11])), 1)
call_5186 = relay.TupleGetItem(func_3762_call(relay.reshape(call_5153.astype('uint64'), [6, 8, 11])), 1)
func_2316_call = mod.get_global_var('func_2316')
func_2318_call = mutated_mod.get_global_var('func_2318')
call_5190 = relay.TupleGetItem(func_2316_call(), 0)
call_5191 = relay.TupleGetItem(func_2318_call(), 0)
func_2261_call = mod.get_global_var('func_2261')
func_2263_call = mutated_mod.get_global_var('func_2263')
call_5194 = func_2261_call()
call_5195 = func_2261_call()
output = relay.Tuple([call_5145,call_5153,call_5181,var_5182,call_5185,call_5190,call_5194,])
output2 = relay.Tuple([call_5146,call_5154,call_5183,var_5182,call_5186,call_5191,call_5195,])
func_5200 = relay.Function([var_5182,], output)
mod['func_5200'] = func_5200
mod = relay.transform.InferType()(mod)
mutated_mod['func_5200'] = func_5200
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5201 = relay.var("var_5201", dtype = "float32", shape = (72,))#candidate|5201|(72,)|var|float32
func_5200_call = mutated_mod.get_global_var('func_5200')
call_5202 = func_5200_call(var_5201)
output = call_5202
func_5203 = relay.Function([var_5201], output)
mutated_mod['func_5203'] = func_5203
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5209 = relay.var("var_5209", dtype = "uint64", shape = (9, 12, 12))#candidate|5209|(9, 12, 12)|var|uint64
var_5210 = relay.var("var_5210", dtype = "uint64", shape = (9, 12, 12))#candidate|5210|(9, 12, 12)|var|uint64
bop_5211 = relay.not_equal(var_5209.astype('bool'), relay.reshape(var_5210.astype('bool'), relay.shape_of(var_5209))) # shape=(9, 12, 12)
func_4610_call = mod.get_global_var('func_4610')
func_4614_call = mutated_mod.get_global_var('func_4614')
const_5216 = relay.const([-1.555712,-9.917596,-4.114066,3.689978,-5.106812,1.833987,8.639147,-5.206388,-9.834798,7.780053,8.576073,4.635289,-0.833014,3.018117,-0.493419,0.144772,-7.511400,7.439280,-4.047842,1.436701,-1.203059,-5.632511,5.302304,-6.494905,6.703140,-7.778994,-4.182356,5.135187,4.515244,-7.640781,-0.375369,-0.581611,2.637322,3.518876,-9.203650,4.774103,-2.894926,-6.088346,-8.275727,5.571426,7.979650,-4.597310,7.840743,-5.254553,-7.440093,-4.852174,3.767537,6.933147,-2.536854,-6.956530,0.250816,-8.732247,0.434328,-5.438517,9.700000,8.120487,1.780144,-3.716429,-8.836202,5.044693,2.201672,7.880391,-8.797334,-9.886642,1.990721,5.936510,-6.303364,-0.374541,-3.878287,5.052101,-9.108450,-9.663013,-7.494358,-6.233971,-8.645778,0.396510,0.344831,-7.495184,-1.459462,3.645435,8.460543,-4.297354,-7.719864,-8.747089,9.192582,-2.162747,-6.464760,2.385554,7.894194,9.225006,2.494986,2.397630,7.905182,-5.972682,-5.032908,-0.395041,-4.892877,4.209012,1.309005,-6.239333,6.650594,6.304111,9.525934,-8.820174,-6.409908,-3.599208,7.646125,4.372905,3.323837,-2.074243,0.324618,-0.583544,4.192141,-1.500471,6.477192,-6.692814,1.642890,-6.571227,-7.752518,4.193414,2.430233,1.636589,7.154258,6.213984,-1.141583,3.568537,-8.450294,-1.414364,1.296538,2.225867,7.277439,-9.037925,1.065751,0.220500,2.232492,-8.827356,7.863552,1.015615,-8.300209,8.890929,-5.181039,-9.448320,-7.156254,7.782409,1.813543,-3.720366,-0.456775,2.734467,-6.205542,5.870807,2.936187,-0.815826,8.304499,-8.307958,-5.379494,7.900109,-5.817776,-0.264130,-2.709813,-6.867874,-2.873883,-7.213988,9.594487,-3.092519,-7.583915,-8.878825,5.021779,-8.023895,-7.806211,7.035569,7.658701,-0.533103,-7.735785,-3.531711,-4.355176,5.682058,-7.528585,0.863231,7.618272,9.021973,9.390364,-8.717513,-8.722216,-8.812639,8.848608,1.428340,-8.789823,-8.731281,-2.064695,5.528311,3.162368,2.815768,-4.934730,-7.927354,-0.130665,8.350969,0.573723,8.384424,2.839599,-0.998976,5.536381,8.905599,7.356294,-1.037124,-3.192785,-2.286189,-7.135917,9.902287,-0.385100,4.372218,2.348532,7.894308,-9.095190,-3.569200,-5.884545,-2.717671,7.497586,3.713013,1.508737,-2.490556,7.497784,8.229414,9.205396,-6.920011,-5.246958,-4.678919,-7.888295,-3.025414,-5.269558,-6.781676,-4.034435,-7.590381,-7.152537,-7.842129,-6.339567,-7.045843,-0.712706,7.268304,-1.434316,7.437268,5.850709,0.529562,4.826716,-3.623663,-2.266608,-4.323391,2.818289,-1.009021,-5.365483,2.345300,-2.533672,-7.612362,-0.129180,-8.006918,3.386931,2.748390,6.038401,2.371779,6.981763,2.161071,-0.230801,-1.884844,-4.017315,-1.069308,1.872658,7.451140,3.105045,-8.386995,-5.749523,-7.657328,8.820914,-3.237982,-1.687413,2.633052,-8.302214,-8.064046,2.059647,-6.701422,6.813943,-7.313968,5.707704,-4.659000,-6.669344,-7.627740,8.734382,-8.004112,-5.462078,-6.469133,-5.505311,-9.148209,-4.366674,-8.433212,6.087087,2.308613,3.661456,-9.031708,-9.805614,4.295520,9.370516,0.465463,-2.040247,3.535376,-1.386016,-4.978103,-4.272694,7.909199,1.931378,-5.461751,4.135039,3.596773,5.287141,2.881635,5.174067,-1.108567,-0.100599,9.307417,-5.166624,7.790374,-2.055547,4.314474,6.288210,2.874814,-6.323627,1.964475,-0.203369,-1.347175,-4.528530,7.907873,-6.904705,0.447491,3.873347,-4.170624,0.923393,-0.025504,4.899706,-9.560033,3.070499,1.542529,9.450233,7.592792,4.507417,-1.746512,5.892582,9.543802,5.298789,-0.530312,-2.427451,-0.772956,-3.511788,9.922927,6.199913,-5.231325,-3.891746,-1.957830,9.667827,2.979358,-5.175973,-8.819837,5.573628,0.612963,-5.644633,7.546298,-3.330824,9.812271,-1.623313,-9.581162,-1.648677,-9.863758,-0.283692,2.266037,-1.054577,9.817553,-2.589691,-8.047832,5.513561,-2.246407,2.725981,-2.236870,-7.624894,4.411796,5.191611,-0.713745,-7.180686,-9.059894,7.807881,-2.852854,-7.023603,-0.329837,-3.033760,-1.291824,1.851871,5.545270,-7.964996,-8.659543,8.361411,9.000239,-2.793854,7.861049,9.786526,8.870438,4.333850,-7.538337,8.082368,-5.295792,-5.911347,-0.184597,2.434838,-6.537534,8.507380,-9.651552,-4.111102,5.981871,8.871901,-8.886565,-6.136458,-9.954597,8.637690,3.266129,0.277900,-6.952152,-8.913299,8.411508,7.974313,6.552680,5.762913,8.037753,-5.569078,-2.787022,6.623781,-2.612060,-4.254267,2.463758,2.865214,6.714664,-4.827125,-4.526010,-3.178235,5.773291,-1.955814,-2.504011,-3.925567,2.504973,3.768340,6.621884,-0.653561,-6.764070,-8.523922,3.286240,6.206633,-7.549692,-7.918210,-0.224393,1.414274,-1.010902,4.135602,0.356467,3.183576,-0.467094,-1.355125,1.058998,1.259246,6.827388,-1.647423,9.810946,3.535087,9.894676,9.547415,-7.838354,7.833191,-8.861747,-0.070125,8.513682,-6.374314,-4.856813,5.660080,-1.651847,4.659417,-5.624850,-2.494375,7.722555,5.336155,4.889513,4.531001,6.664732,8.153706,8.004222,2.499224,6.792758,-4.015383,-9.575012,8.203328,-9.584836,4.781772,-1.140663,-6.524527,1.116690,5.264173,-9.455537,8.648957,9.684127,9.830844,-9.061708,6.265560,5.286143,4.458786,4.263688,-5.062659,6.466191,-7.063113,6.777554,-2.282923,2.672989,5.758110,-2.587012,4.085436,7.637911,-0.285955,-4.138790,1.128411,6.716407,6.192882,-4.055618,-0.758024,6.212611,4.250865,2.555328,-3.450332,1.800629,9.351217,-1.580648,-5.607440,0.568031,3.328580,-7.211272,4.882551,1.724801,5.392744,-4.123627,6.468303,-8.139041,-0.190477,-0.537164,-1.751757,9.477665,2.093184,4.004112,7.606260,-2.172232,-5.782066,-2.206901,-1.457818,-0.239595,0.009102,8.385038,7.211858,4.967387,-2.703778,-8.471204,-2.547381,-9.089964,1.567222,9.245820,-9.859551,1.168172,-5.141991,8.518180,1.380412,-6.562362,-3.037206,1.199148,-1.718702,-9.540764,0.546134,4.575052,-0.598497,5.606970,8.030064,-6.519212,7.835058,-5.378040,1.600890,-6.604932,-4.534698,7.953274,0.351974,-7.295208,-6.865991,-7.351677,6.374762,6.839798,6.078828,7.754366,3.739528,-3.766880,1.230517,-9.071371,-9.190540,2.973349,-9.575805,-4.913716,6.726854,9.113045,8.780076,3.316020,2.778481,-0.818878,-1.720858,-6.386571,5.570123,-7.766582,9.356799,-1.562771,7.520726,-0.816442,-6.358459,4.308204,6.308326,2.216555,-0.090367,5.997673,1.751969,-6.292506,0.836450,1.080888,-9.960081,8.189061,4.870215,6.903438,5.801280,-9.173934,-1.707617,-1.084734,-5.040031,-5.123402,-5.676455,-1.433746,4.149789,1.670127,4.841595,-5.094885,-6.637152,-9.201446,9.451011,5.368030,1.152599,-4.267861,7.251771,-5.537136,3.358435,6.443947,-9.495799,7.289193,-1.815549,1.719739,-8.863700,0.113341,0.711406,-7.909325,-2.905157,-2.155436,2.739327,2.573079,3.158866,-4.709656,5.563226,-3.742672,8.982008,1.648494,8.361264,-9.827799,-0.499146,-3.660968,4.417357,-2.598552,-1.509372,6.616009,-0.744684,7.918322,-8.702292,-1.331673,0.724933,-5.488020,-9.379269,-0.161901,-8.108504,1.335845,8.396166,-9.446886,-2.022992,-6.445154,7.491459,-9.686541,-9.520440,0.232374,1.631552,-7.301316,2.042375,-2.359621,9.735748,1.376191,2.755821,-8.258167,-7.251573,9.576050,-5.248199,-3.786363,9.588033,6.789752,-8.932234,5.910227,-3.628747,-0.325412,-3.848248,2.748158,6.175758,9.693545,-2.081288,5.879229,-5.376141,0.467887,-8.638395,2.080909,3.531644,-1.602017,9.755674,7.875980,1.880879,5.612481,-7.090072,0.809248,9.521592,-8.899385,4.210707,4.371716,-1.070726,-0.880849,-4.353396,3.116554,-4.887677,0.254017,2.629045,8.136930,-3.113012,-1.311793,3.822114,-1.049653,-1.016900,-3.859742,6.624408,0.970983,9.678341,-9.965854,2.437017,2.180882,8.978714,-4.898806,5.987929,-1.102011,-6.524435,6.346521,-8.233193,2.710641,-5.589192,-3.994213,3.900807,-5.929801,1.615456,-4.587589,-7.583059,-9.882099,-6.582423,-9.649769,-0.254079,3.456616,1.500792,4.683419,-5.518491,-7.986635,-3.473151,-7.536531,-5.591121,-8.144704,-1.567137,0.664619,-3.069320,-6.393192,-3.017757,4.874773,9.160307,1.334853,1.944394,9.221692,5.687801,-5.908453,-6.989233,7.630008,2.410429,0.681366,-0.010769,-9.685570,-5.680186,8.428461,0.572297,-9.036606,8.203429,6.036516,-9.411391,9.068234,-4.406365,9.431440,-5.044881,-4.174308,4.803356,8.797292,-0.440122,-3.707579,1.697232,6.788376,-8.454462,5.472277,2.069181,-5.055904,4.904513,-4.755954,-5.245623,5.157909,-7.665459,-7.288688,8.661847,-0.375803,-8.842200,-5.793201,-9.693518,-9.300582,1.401002,1.713301,0.033276,-7.755854,7.647170,-1.205326], dtype = "float64")#candidate|5216|(840,)|const|float64
call_5215 = relay.TupleGetItem(func_4610_call(relay.reshape(const_5216.astype('float64'), [14, 4, 15]), relay.reshape(const_5216.astype('float32'), [14, 4, 15]), ), 2)
call_5217 = relay.TupleGetItem(func_4614_call(relay.reshape(const_5216.astype('float64'), [14, 4, 15]), relay.reshape(const_5216.astype('float32'), [14, 4, 15]), ), 2)
func_2999_call = mod.get_global_var('func_2999')
func_3000_call = mutated_mod.get_global_var('func_3000')
call_5218 = relay.TupleGetItem(func_2999_call(), 0)
call_5219 = relay.TupleGetItem(func_3000_call(), 0)
uop_5223 = relay.log(call_5215.astype('float32')) # shape=(14, 4, 15)
uop_5225 = relay.log(call_5217.astype('float32')) # shape=(14, 4, 15)
output = relay.Tuple([bop_5211,const_5216,call_5218,uop_5223,])
output2 = relay.Tuple([bop_5211,const_5216,call_5219,uop_5225,])
func_5229 = relay.Function([var_5209,var_5210,], output)
mod['func_5229'] = func_5229
mod = relay.transform.InferType()(mod)
mutated_mod['func_5229'] = func_5229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5229_call = mutated_mod.get_global_var('func_5229')
var_5231 = relay.var("var_5231", dtype = "uint64", shape = (9, 12, 12))#candidate|5231|(9, 12, 12)|var|uint64
var_5232 = relay.var("var_5232", dtype = "uint64", shape = (9, 12, 12))#candidate|5232|(9, 12, 12)|var|uint64
call_5230 = func_5229_call(var_5231,var_5232,)
output = call_5230
func_5233 = relay.Function([var_5231,var_5232,], output)
mutated_mod['func_5233'] = func_5233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1944_call = mod.get_global_var('func_1944')
func_1946_call = mutated_mod.get_global_var('func_1946')
call_5268 = relay.TupleGetItem(func_1944_call(), 0)
call_5269 = relay.TupleGetItem(func_1946_call(), 0)
func_2143_call = mod.get_global_var('func_2143')
func_2144_call = mutated_mod.get_global_var('func_2144')
call_5281 = func_2143_call()
call_5282 = func_2143_call()
func_33_call = mod.get_global_var('func_33')
func_36_call = mutated_mod.get_global_var('func_36')
var_5307 = relay.var("var_5307", dtype = "int16", shape = (1200,))#candidate|5307|(1200,)|var|int16
call_5306 = relay.TupleGetItem(func_33_call(relay.reshape(var_5307.astype('int16'), [15, 8, 10]), relay.reshape(var_5307.astype('int16'), [15, 8, 10]), ), 0)
call_5308 = relay.TupleGetItem(func_36_call(relay.reshape(var_5307.astype('int16'), [15, 8, 10]), relay.reshape(var_5307.astype('int16'), [15, 8, 10]), ), 0)
output = relay.Tuple([call_5268,call_5281,call_5306,var_5307,])
output2 = relay.Tuple([call_5269,call_5282,call_5308,var_5307,])
func_5321 = relay.Function([var_5307,], output)
mod['func_5321'] = func_5321
mod = relay.transform.InferType()(mod)
var_5322 = relay.var("var_5322", dtype = "int16", shape = (1200,))#candidate|5322|(1200,)|var|int16
output = func_5321(var_5322)
func_5323 = relay.Function([var_5322], output)
mutated_mod['func_5323'] = func_5323
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5357 = relay.var("var_5357", dtype = "int8", shape = (16, 9, 16))#candidate|5357|(16, 9, 16)|var|int8
const_5358 = relay.const([[[-3,6,10,1,-2,-5,-5,4,-10,7,-5,-10,4,-3,-6,3],[-6,7,6,6,-4,8,1,-5,7,4,-6,10,-6,-2,-2,2],[-3,-5,-6,6,4,-1,6,-6,9,-6,4,-4,-8,3,-3,-9],[-3,-5,7,-10,5,-6,7,-3,-3,3,4,-8,-6,-2,5,5],[-10,-8,4,-8,7,-8,-7,5,10,7,-7,-6,-5,4,-4,9],[-1,-10,3,4,5,6,-2,2,-9,6,6,-1,-2,3,7,-9],[9,3,-9,-3,8,-6,2,-4,9,-1,6,7,8,-4,-2,-3],[-2,4,-5,4,10,-6,10,-5,4,3,7,-5,-2,10,-4,6],[1,-7,-8,-2,3,-1,9,-1,2,-10,5,-4,8,10,8,6]],[[-5,8,6,-2,-7,9,10,9,-3,1,-6,-5,-10,4,3,9],[-5,-3,-4,-9,9,9,7,9,6,-9,6,9,-3,4,-7,3],[-8,4,-3,-7,10,-10,-3,-8,-1,-3,5,3,-9,3,9,-7],[-4,3,1,-8,5,9,-10,-6,5,10,-3,9,1,7,10,9],[2,-9,-1,5,6,-1,-2,9,-8,9,-1,5,-2,2,-4,-6],[-2,-3,-2,6,-4,-6,5,4,-2,7,5,7,-4,-9,-9,-9],[10,1,-2,-1,5,-3,-3,-6,-1,-10,6,-4,-6,9,8,4],[9,9,4,6,-9,2,7,7,-2,6,6,-8,-3,-6,6,8],[-7,5,-8,1,-3,7,2,7,5,-3,5,1,-10,-8,1,2]],[[-4,-7,1,8,-2,1,1,9,-3,-6,4,6,-8,-2,2,-5],[10,-9,-4,2,-3,10,-3,1,1,-6,-7,-3,-9,-2,-7,-7],[10,10,2,10,7,1,-10,7,10,-8,-6,-9,-6,-5,-9,1],[-8,-1,-3,8,-10,-9,1,-4,1,-7,-5,-1,-9,-5,7,-6],[-7,5,-10,9,2,-2,7,-4,-8,-5,-9,-3,1,7,-3,2],[3,-1,2,5,-9,-9,-5,-5,5,-7,6,-3,9,4,-4,-4],[-8,10,-5,6,-3,2,-9,10,-9,-8,-8,-2,2,9,-4,1],[-7,4,5,10,6,-6,3,10,-5,-6,9,2,-4,7,5,2],[8,-8,7,-1,-9,9,-2,-3,7,-2,9,-10,-4,-3,-3,-2]],[[10,-4,-7,-9,1,-8,6,2,5,2,9,-7,8,-3,-4,2],[5,10,-10,-8,-6,5,-10,-7,-2,-8,-2,-3,4,1,-9,9],[-10,3,7,-4,10,7,6,-4,5,-9,-7,-7,-8,-7,3,10],[5,7,7,-7,1,-6,9,7,-3,3,9,-9,10,4,3,1],[1,2,-1,6,4,-9,3,-9,2,-6,-5,8,2,3,9,-5],[-3,-10,-9,-6,-8,6,-3,-8,10,-8,9,-4,-9,8,10,8],[-2,8,3,-4,1,4,8,8,6,-5,-1,7,6,8,1,-1],[-2,-6,-7,10,2,-1,-8,10,-7,10,-6,10,4,-1,-3,8],[3,4,4,-7,8,9,-9,9,-8,5,-7,7,2,4,2,1]],[[-6,5,-9,-10,-2,-2,-10,8,9,3,8,-7,9,4,-5,-7],[1,5,-6,-6,4,1,8,-1,3,-5,5,9,-3,-3,9,-1],[4,10,-9,-8,4,-6,-9,9,2,-2,6,-10,6,9,-5,-6],[6,-9,-2,-9,-8,-9,3,-10,-2,3,6,6,7,7,-6,1],[1,-1,8,-9,5,3,6,7,6,5,-3,3,-8,2,-5,8],[-4,9,8,-10,8,5,9,-3,1,-6,-8,-2,1,-10,8,2],[-8,-6,3,-9,9,6,-5,-2,4,9,-9,10,-7,-6,-2,-9],[-1,5,8,6,8,-5,8,9,5,6,1,4,8,-2,-8,1],[5,5,9,-1,3,2,-1,-3,-9,2,7,-7,-6,7,2,-7]],[[-5,-10,-6,-3,-5,8,6,-4,-2,-4,-4,8,-9,-6,-5,8],[5,-4,9,8,2,1,1,2,4,4,6,8,9,8,6,3],[4,-2,5,-8,-10,-9,-6,4,-7,-10,10,-8,-1,-2,2,8],[-3,10,2,6,-7,-3,-6,-5,-5,7,2,-4,-4,7,10,-4],[8,10,2,-4,-3,-1,3,-5,10,2,7,-2,2,7,-9,-4],[4,8,2,-4,8,7,1,10,3,-3,9,1,7,3,10,-2],[1,-10,-4,1,8,-5,-9,-2,8,3,1,9,4,3,-7,-6],[-8,3,-1,-4,-2,7,4,4,-5,9,10,3,8,-6,4,3],[-10,-4,1,-9,-8,4,8,-4,-2,-8,-1,-6,8,3,-8,3]],[[-3,9,6,-8,-6,6,10,-6,3,7,-6,2,-5,-5,-1,10],[-9,9,9,-10,10,1,-8,-4,-3,-4,2,-3,8,1,-8,5],[-4,-5,-4,9,2,5,9,8,8,10,-5,8,-1,-5,4,8],[-4,10,-7,1,-1,9,6,1,-9,-4,4,-10,-5,-5,4,-4],[8,6,4,-7,4,4,-1,-3,-6,7,-3,6,-3,-4,6,-7],[3,-2,-1,-10,2,6,-9,-6,-8,-6,1,8,4,-10,1,5],[-1,10,3,-10,6,-10,6,3,-6,-8,2,10,-9,6,-8,-5],[9,4,9,-9,-1,-1,3,-5,-4,8,9,4,8,8,-5,8],[10,8,-5,4,5,5,3,1,-10,-5,-6,-7,-1,2,-9,9]],[[-2,1,-5,-5,4,10,-9,5,9,10,-1,8,1,-7,2,-4],[-5,4,-1,10,-9,3,1,-1,7,4,8,9,5,2,4,-2],[2,-10,-4,-8,-1,3,6,4,5,3,-3,-3,-10,4,2,6],[-1,-6,-7,8,-3,3,4,7,7,-3,4,-9,-2,10,-10,-9],[-5,3,-9,-1,1,4,-1,-5,10,-9,3,-9,-10,8,-9,8],[-1,-5,2,-5,-10,-10,-1,-9,4,-7,3,-1,-7,2,7,-10],[-3,-1,1,-9,6,-1,-8,-9,-10,9,-10,-8,-3,-5,-2,-1],[9,9,-9,-2,2,1,6,10,4,-1,4,-5,10,9,6,5],[3,7,6,6,-5,-6,9,-8,9,-9,-9,-10,-6,-10,-9,8]],[[-3,-6,6,-5,-1,3,8,2,1,10,8,8,9,6,5,1],[-1,-4,-9,8,-1,9,-2,-7,-6,2,5,10,8,-3,10,-2],[1,7,-7,1,8,9,4,-3,-3,4,5,-3,10,7,-9,2],[-6,-1,6,3,5,3,6,-10,1,6,-8,10,-4,-9,-7,-5],[3,-6,-10,-4,8,4,3,4,10,1,-10,7,7,9,10,-7],[-1,-2,9,-8,1,-3,-8,10,9,-5,2,3,1,-3,9,1],[-2,-3,-7,10,-6,6,-9,1,8,7,1,9,-3,2,6,-1],[6,-9,-6,-3,-1,-6,5,-8,-7,-3,4,-10,-8,-8,6,3],[5,5,3,4,8,4,-9,-8,-9,5,-7,-10,-7,-1,8,-5]],[[8,-4,9,-2,-10,-2,-3,7,1,3,9,5,4,1,10,6],[-5,6,8,2,-8,-9,5,1,10,-4,-1,-6,-2,6,-2,-9],[-3,-2,-3,-1,9,2,-5,-9,-10,5,1,4,-10,-7,-5,1],[1,8,-10,-7,-8,2,-3,-8,4,-4,-5,-10,1,7,-6,-3],[-2,1,10,10,8,-9,10,3,1,1,-6,-10,10,2,-6,1],[5,-9,-1,-1,10,9,9,6,-9,-7,9,1,-5,-5,7,-10],[-9,7,7,-10,-10,-8,1,1,4,5,5,3,1,2,6,-10],[10,-9,-5,-7,8,-6,-1,10,-4,9,3,3,1,-1,9,6],[-7,10,5,-9,-3,3,1,-9,8,-8,1,-4,9,1,-7,9]],[[3,-7,7,1,-2,-3,-6,2,2,9,-3,8,-10,-2,-8,-10],[2,-9,-7,8,3,-4,6,6,-8,-3,-8,7,-10,5,-1,8],[4,10,-6,-3,-2,1,-7,-9,-2,7,3,-7,2,10,-7,-7],[-4,6,-5,-2,-8,-6,9,-1,8,-2,4,4,1,1,2,3],[-5,7,-8,9,-1,-2,-10,3,2,1,-5,4,-10,-6,-3,10],[5,-9,8,10,3,-2,-6,-3,10,-6,10,3,-7,2,-7,7],[2,7,-4,-9,-1,-1,4,5,9,-9,3,9,-10,-7,5,-10],[-2,7,4,-2,-5,-3,-1,2,-2,-1,4,3,4,10,-6,6],[-5,-3,-9,7,-9,2,9,-10,-7,-3,2,5,-8,5,5,-1]],[[4,-1,-6,-6,9,5,-4,-8,-7,-3,9,-6,3,10,-3,-8],[2,10,10,-4,-6,4,5,10,-4,-4,-3,7,-2,-3,7,-3],[-3,-6,-1,-9,-9,-4,6,10,-10,-3,5,-8,9,1,3,3],[-9,10,-9,-4,3,-5,-5,-10,-9,6,3,2,-5,7,7,5],[-7,5,-5,4,-8,-8,-6,-9,-1,3,-9,7,-6,-4,-2,-10],[-6,-7,-3,-7,-4,7,5,-6,-1,2,4,5,-4,4,10,7],[8,-4,-8,5,8,-3,9,1,10,1,-3,-3,-7,-2,-2,2],[-4,-2,-9,-6,2,4,-9,-9,-6,-3,9,5,3,-5,-6,-5],[-5,-5,-6,3,-8,-9,-10,8,-1,7,4,-7,9,2,-9,6]],[[-3,-8,1,9,8,8,8,-6,-4,-8,6,5,-7,3,-3,-2],[1,9,1,1,8,9,-5,5,-9,10,-10,3,4,-7,-6,-5],[-9,8,4,9,-1,8,-3,-9,-5,10,-6,7,10,8,1,2],[8,9,-1,4,9,10,-4,-8,10,6,-2,7,-5,9,-8,7],[1,10,6,-4,7,-9,-6,9,5,-1,10,-1,3,-2,-1,9],[-7,-3,-2,-8,-4,-9,5,6,5,9,5,2,-9,1,5,1],[-8,5,-3,8,-3,8,6,6,-1,-9,-4,-6,-7,-5,4,4],[-10,1,-5,3,-7,4,6,5,6,4,4,4,-5,-4,5,-3],[9,10,-5,2,7,5,7,-9,-3,2,2,-9,-5,8,-10,-4]],[[-4,-5,-1,-9,4,-10,-4,-3,-3,-4,-2,-2,5,6,-8,6],[-9,1,9,-8,3,-3,8,-6,2,-4,5,3,5,-9,4,-6],[-8,2,-6,2,8,-8,3,7,-6,-4,-8,-4,8,7,9,-4],[-8,-6,-9,-4,4,-3,-8,4,3,6,5,-4,3,7,-3,-9],[-9,5,-3,-5,3,-6,8,6,8,-3,-3,-7,6,-10,-5,10],[-4,-2,-6,-4,4,-3,-9,-6,-2,-1,-5,3,4,-10,2,5],[-7,-5,-5,-5,8,-3,-6,8,-9,-2,9,6,7,-4,-8,-7],[7,1,10,1,3,-8,5,4,7,8,1,1,2,9,6,6],[-7,-5,2,-6,2,-3,-10,-10,-2,4,4,3,3,-7,-7,2]],[[7,-10,1,-3,10,9,2,-8,2,10,-9,4,-3,1,-4,-4],[8,2,-10,4,9,-9,-5,-7,-8,4,8,-9,1,-2,1,-5],[-10,8,-10,-7,6,-3,-2,9,-7,-7,-3,7,4,-8,-7,-4],[10,4,-2,2,-8,8,-5,-4,-2,-7,-7,10,8,-8,10,2],[4,9,-9,-4,6,-9,-3,-3,-3,-1,-7,-6,8,7,-8,8],[-5,7,-2,2,-7,8,3,-4,-10,-9,-5,-1,10,2,9,7],[-1,-9,-7,8,2,-1,-7,-3,9,5,8,-6,-6,-4,8,-8],[-6,-9,-7,-7,5,4,-3,9,1,-6,10,5,10,-8,1,-9],[-4,-1,7,10,8,-4,-2,-2,6,10,-2,9,-4,-2,6,3]],[[-2,-1,-2,3,-6,10,-9,-1,-2,1,7,6,1,-8,9,-7],[4,10,-8,6,9,3,10,-4,-6,8,7,7,-4,-4,-6,4],[8,8,8,-9,-1,4,6,-6,5,8,-10,1,-1,6,6,9],[-5,-10,-2,9,-1,7,-3,4,8,1,8,-1,6,6,9,-6],[6,-7,-4,4,-1,7,-7,-3,10,5,5,6,-5,-3,-2,9],[4,-6,2,4,-4,-9,-1,-8,-4,8,2,3,10,2,-5,-10],[6,-7,-8,4,-3,5,-5,4,9,-1,8,6,9,10,8,-3],[5,-5,-3,7,3,-10,6,-8,-8,5,2,-5,-1,3,2,6],[-5,2,-1,4,2,10,7,-4,6,10,1,7,10,-3,-7,2]]], dtype = "int8")#candidate|5358|(16, 9, 16)|const|int8
bop_5359 = relay.bitwise_and(var_5357.astype('int8'), relay.reshape(const_5358.astype('int8'), relay.shape_of(var_5357))) # shape=(16, 9, 16)
uop_5374 = relay.asinh(var_5357.astype('float32')) # shape=(16, 9, 16)
func_3914_call = mod.get_global_var('func_3914')
func_3918_call = mutated_mod.get_global_var('func_3918')
const_5377 = relay.const([-2.649622,5.623920,-0.106172,0.820843,-5.538954,0.441723,-8.603868,9.679412,-5.918402,-1.467341,-7.628856,-3.705434,-8.226707,-3.161195,6.723108,-2.510358,-5.107144,9.274404,0.367880,2.304853,-4.457540,3.933376,-3.861740,-5.804096,0.025956,-0.621396,-7.043252,-9.220537,-4.979580,-2.084455,8.810717,0.399980,-8.526209,3.834716,9.574217,8.331345,3.300812,-0.655257,7.375328,-9.894723,4.376078,-0.570700,-2.196750,8.076332,-9.682762,-5.280728,-7.109342,2.658367,9.082470,-9.952107,-3.728722,-5.611760,2.362613,6.507892,-0.012819,1.357726,0.036397,5.590371,-3.528837,-8.416104,-8.141823,7.197163,-3.730421,5.022643,6.047724,-6.566439,-8.863020,3.214929,6.880622,-8.728052,-9.675904,3.194866,-0.568283,4.193300,1.329922,9.132709,3.992682,-5.398874,8.812788,1.671652,-1.613827,-5.005534,-3.191983,-2.083412,2.798106,9.478466,-0.752044,5.235415,3.420744,-5.135314,-1.356929,-0.558703,-9.067319,7.629653,0.021070,-7.321699,-8.364026,-0.067171,-1.283000,-4.533401,2.253540,3.518904,-8.313105,-7.178030,-3.532101,2.403338,-2.230943,-2.844741,-1.689346,3.630025,-7.016859,0.270904,-7.812989,2.300781,-5.239435,-5.337483,-8.041186,-9.806182,-9.009267,-0.616573,6.514191,5.290208,-6.255498,-5.920683,9.283349,-8.143989,3.161748,-3.722616,7.637258,-8.415336,6.473068,3.510223,-5.372519,0.849467,7.666916,6.338684,1.536500,-8.159402,-6.413345,-7.057976,-4.653406,8.730749,3.996407,-9.320628,-3.849391,-7.272714,6.036809,8.590285,8.622831,4.472129,-7.868553,5.385662,5.117077,5.993020,-0.677956,-6.438563,-5.119196,-4.869914,2.966059,-5.671911,1.373731,-4.630620,6.224542,9.352925,-6.161561,6.352912,2.259047,-4.338898,-4.740214,0.136649,1.468022,-6.968812,9.000895,2.211970,9.714855], dtype = "float32")#candidate|5377|(175,)|const|float32
var_5378 = relay.var("var_5378", dtype = "float64", shape = (360,))#candidate|5378|(360,)|var|float64
call_5376 = relay.TupleGetItem(func_3914_call(relay.reshape(const_5377.astype('float32'), [175,]), relay.reshape(var_5378.astype('float64'), [5, 12, 6]), ), 0)
call_5379 = relay.TupleGetItem(func_3918_call(relay.reshape(const_5377.astype('float32'), [175,]), relay.reshape(var_5378.astype('float64'), [5, 12, 6]), ), 0)
output = relay.Tuple([bop_5359,uop_5374,call_5376,const_5377,var_5378,])
output2 = relay.Tuple([bop_5359,uop_5374,call_5379,const_5377,var_5378,])
func_5381 = relay.Function([var_5357,var_5378,], output)
mod['func_5381'] = func_5381
mod = relay.transform.InferType()(mod)
var_5382 = relay.var("var_5382", dtype = "int8", shape = (16, 9, 16))#candidate|5382|(16, 9, 16)|var|int8
var_5383 = relay.var("var_5383", dtype = "float64", shape = (360,))#candidate|5383|(360,)|var|float64
output = func_5381(var_5382,var_5383,)
func_5384 = relay.Function([var_5382,var_5383,], output)
mutated_mod['func_5384'] = func_5384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1676_call = mod.get_global_var('func_1676')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_5389 = relay.TupleGetItem(func_1676_call(), 0)
call_5390 = relay.TupleGetItem(func_1678_call(), 0)
func_4959_call = mod.get_global_var('func_4959')
func_4961_call = mutated_mod.get_global_var('func_4961')
call_5400 = func_4959_call()
call_5401 = func_4959_call()
output = relay.Tuple([call_5389,call_5400,])
output2 = relay.Tuple([call_5390,call_5401,])
func_5465 = relay.Function([], output)
mod['func_5465'] = func_5465
mod = relay.transform.InferType()(mod)
mutated_mod['func_5465'] = func_5465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5465_call = mutated_mod.get_global_var('func_5465')
call_5466 = func_5465_call()
output = call_5466
func_5467 = relay.Function([], output)
mutated_mod['func_5467'] = func_5467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3672_call = mod.get_global_var('func_3672')
func_3674_call = mutated_mod.get_global_var('func_3674')
call_5487 = relay.TupleGetItem(func_3672_call(), 0)
call_5488 = relay.TupleGetItem(func_3674_call(), 0)
func_2257_call = mod.get_global_var('func_2257')
func_2258_call = mutated_mod.get_global_var('func_2258')
call_5496 = relay.TupleGetItem(func_2257_call(), 4)
call_5497 = relay.TupleGetItem(func_2258_call(), 4)
func_4310_call = mod.get_global_var('func_4310')
func_4312_call = mutated_mod.get_global_var('func_4312')
const_5499 = relay.const([-9.796633,2.119939,2.363246,3.691301,6.155157,8.563053,-1.854669,-1.425415,-5.834342,6.357304,-2.363377,-2.030484,-3.882393,6.536540,-7.518046,6.001385,-9.342600,4.440530,0.843079,4.331884,2.876335,9.376231,-4.623794,2.250190,3.341948,7.860879,2.972146,0.961627,8.475833,2.421546,3.638924,-8.814651,7.722107,9.925042,-0.995826,5.945460,-2.716035,3.703979,-5.140062,9.122010,3.607566,4.325860,7.688509,8.118169,-7.039337,-3.000505,7.102766,6.318771,-8.850331,-2.506291,-7.672515,7.222607,-1.989381,2.077198,4.561551,-4.403003,-7.584795,4.087960,-7.223324,-1.617377,1.740997,3.690397,-9.830395,1.729070,1.422958,1.437026,5.365827,-6.472883,-4.311055,-5.272787,5.051196,-3.416470,9.673413,6.750889,-6.269365,-3.612021,-0.100980,9.412350,-6.756982,-0.206032,-9.176961,1.078321,-8.155742,7.412664,-1.576376,-3.996180,-6.685660,9.262835,-5.147582,3.753479,-7.368599,-4.383113,8.799582,1.054109,-9.628248,-9.337213,-1.956610,-4.121286,0.538206,3.689124,6.126667,2.987466,-8.409973,7.825560,6.007991,-8.453197,-5.816654,2.073601,-4.382257,-4.022900,-5.430877,7.822387,-3.749398,8.191799,6.368348,3.825966,-6.400775,-6.377196,7.679893,5.344558,-3.891463,3.830757,-5.058391,1.745469,6.892810,1.286118,-4.152527,-0.317548,-3.886701,-8.769836,-2.466569,-0.224103,1.231086,-7.902180,7.899135,8.883876,1.143212,-4.619803,5.246249,-4.673455,2.771022,-7.370947,-1.825939,3.114521,-6.991639,-3.059374,3.144016,4.723885,7.309828,-6.995730,1.958029,-5.204699,-7.030002,-4.708102,-4.714201,-3.817067,-6.619396,9.047560,-3.950374,9.168936,5.230604,9.575074,0.531237,8.415201,-5.783358,5.747507,3.604135,-2.533101,-5.298266,-7.396572,1.218971,9.137772,4.892884,-5.128171,3.169961,1.295357,5.437333,6.511617,4.886259,3.056432,-2.403103,-8.677780,2.003969,7.966642,5.862644,-3.044162,9.907636,4.714340,1.369942,-5.680098,9.479475,8.417407,-3.660646,8.474141,2.026263,-9.290046,3.464372,8.744436,3.767082,1.027290,-4.411806,-3.812035,1.412876,9.004153,0.785886,7.488308,7.247005,-8.687702,8.016908,9.493839,-5.704867,3.388176,-3.598798,-3.609590,8.161339,9.208317,-6.864000,0.754930,8.299167,-2.952375,-0.208561,0.773951,-5.878666,-0.668135,-6.760690,-7.407079,9.133023,-4.710714,-1.793677,6.052925,-3.675296,-8.878245,-5.499230,-1.728592,-2.913762,8.779557,-3.666336,-5.616751,-0.614995,1.174688,-2.692274,6.846838,3.526122,-1.800292,9.606159,7.475152,-6.493149,-5.703213,-8.990762,-9.743513,2.285439,8.071326,-8.327742,-9.823406,-8.855829,1.592248,1.979880,-4.891091,4.687739,-1.862760,1.556952,-6.931007,9.578065,-5.228359,-4.777335,-2.097337,-1.364228,2.834378,0.986979,3.565246,3.971940,9.880921,-8.380732,7.791789,-7.458957,-3.189908,-9.320501,4.450455,3.901766,4.992176,-0.575884,2.919805,1.284714,7.979903,-9.908035,4.124460,-1.347499,-5.299510,-2.933305,-2.990030,3.074226,-8.115982,3.612145,-5.384413,-3.461741,-7.124569,1.770239,9.726408,7.289703,-7.646302,-8.501987,0.035752,-9.323747,4.673887,-9.988222,5.378136,-7.120609,8.686009,0.962018,-8.468299,6.534403,-0.108842,-5.632164,7.806475,-9.416703,5.723436,1.711473,2.936656,-8.550296,8.803649,-3.399732,-7.486056,-1.009900,1.616056,3.928495,8.088056,-5.195065,-6.337778,-9.912217,-0.413707,4.672810,6.602832,8.437858,-8.574687,4.640255,-3.081524,-0.892508,-5.008726,-1.713737,-7.762283,7.033963,-4.358100,6.938368,-8.414997,-5.992479,-2.568062,-7.757165,7.476909,3.777549,2.076171,3.782495,-7.634131,-0.630908,-3.064585,-4.190149,1.390459,8.182967,-7.538070,-4.605861,-5.350161], dtype = "float32")#candidate|5499|(360,)|const|float32
call_5498 = relay.TupleGetItem(func_4310_call(relay.reshape(const_5499.astype('float32'), [15, 2, 12])), 0)
call_5500 = relay.TupleGetItem(func_4312_call(relay.reshape(const_5499.astype('float32'), [15, 2, 12])), 0)
func_4610_call = mod.get_global_var('func_4610')
func_4614_call = mutated_mod.get_global_var('func_4614')
const_5510 = relay.const([-8.288903,3.065089,0.451062,-4.811195,-3.337798,-2.590980,9.108428,6.243655,-6.360371,-9.542443,-4.887996,-3.070898,-4.961382,-9.213323,9.257576,9.674424,2.828429,4.473438,-2.001496,6.256593,6.034339,-9.472282,4.101797,8.503679,-7.059333,5.434339,-2.032700,1.021928,-2.703774,-8.943408,7.061704,4.058252,-5.417065,4.822880,1.953725,3.270229,-7.539463,0.568192,2.921225,6.505401,-0.116375,-9.051157,3.014142,-2.726138,-4.521274,0.339621,-2.147293,-5.070415,3.986913,9.745062,-3.217052,3.703385,9.216483,-3.495942,-3.013301,-8.504223,-4.140320,9.903280,-6.186692,2.359068,9.793103,-1.353915,-4.257114,-5.198118,-2.609583,-0.701533,3.499694,-8.310415,-9.546199,6.559639,-1.551558,2.521935,6.537889,-7.009816,-2.485548,-0.313970,-5.987295,-2.802083,9.680127,-2.483902,-6.141022,-3.118246,5.215172,-8.434385,5.567303,-4.610811,-3.805789,3.960864,-7.967827,0.595223,1.968026,-3.855350,9.964968,-6.582894,-7.494650,-2.766046,6.762064,-7.100674,7.924548,-0.211823,-7.549431,4.870548,3.648738,-1.558371,-4.859218,-8.064984,8.392403,-0.045549,5.243543,4.518856,9.870171,0.998791,-5.963724,3.983858,-8.272152,5.429780,-2.105528,5.103996,0.991176,-4.911865,-1.219776,6.569288,5.844915,-3.809248,3.587068,-6.081252,7.702819,3.226439,1.139245,-7.743898,4.501642,6.470577,-2.335341,0.467175,-9.710498,5.263554,-7.000043,9.859768,-2.689471,3.754530,6.887561,0.084276,7.260307,4.895452,7.130582,-4.245304,5.162406,6.124424,5.395330,1.298160,-6.060988,-9.640267,1.922170,-8.769297,1.271935,2.212590,-7.602559,2.139690,-3.373217,-8.345260,-8.711545,-1.918295,-7.917832,8.829688,-9.802646,-6.812284,-6.135561,8.338922,-7.081207,9.891641,0.776690,-0.687345,6.590257,2.439975,-3.225715,-3.374332,4.471936,-1.596666,-5.822060,8.655832,-0.244128,3.616382,-1.950904,6.837353,-1.396551,-6.938437,5.586142,3.131854,-6.208855,-1.382127,5.047210,-4.668005,8.143024,-2.060603,-4.949810,-4.770443,1.925831,9.922102,1.516825,-9.798749,-8.563025,5.540211,-3.257190,-0.824901,-5.148919,3.586726,2.277065,-9.973546,7.853010,-9.069549,-3.473832,-9.774808,-8.929520,0.929688,-9.531751,-2.823081,-0.425980,4.880959,-1.218115,1.996592,-1.145408,-7.961401,-7.715420,4.369978,-8.220311,-1.759845,-6.848072,-2.261293,-8.373812,-9.093636,-9.676404,7.076686,2.069778,0.067174,7.622547,-5.016497,0.460007,9.082310,6.081340,3.931467,5.502387,-4.147710,0.969527,-5.630857,-0.610477,-7.493300,6.961916,6.337561,-1.016248,6.738695,8.060074,-8.185411,-4.267485,2.469719,-5.205419,4.451175,-9.097964,6.483079,2.727548,4.568042,6.868118,-4.699297,-5.505269,1.727121,-7.506769,-2.221981,-5.218737,-0.619120,-0.238984,-6.987022,3.165091,-8.405363,3.516782,0.824029,-4.780685,-8.076314,-7.888640,-5.290844,-6.002759,-4.250081,-8.435495,-8.418647,3.695043,-5.046660,-7.711964,-7.447408,-1.871423,5.766900,-0.181657,-8.966188,-5.534573,-7.117000,4.418180,7.884968,-3.190769,-9.673645,-0.143522,3.117005,-0.745483,3.642539,-4.959291,-2.950097,1.650696,-9.946881,-8.857307,-0.694784,5.076619,1.063370,8.834733,-1.164603,-2.949473,6.676690,-0.039924,-8.132476,-5.013120,9.565358,2.240763,0.529346,-9.192886,4.260042,1.406992,8.145074,-0.151586,7.466569,1.889394,-4.938531,8.729247,-2.242826,-4.608314,-5.501847,-4.937503,-8.675040,2.972493,-5.277138,2.159334,-3.720583,2.738136,-1.234077,-7.448637,-3.494237,2.220578,-1.754400,-4.411256,-3.413908,2.138522,7.594097,3.422015,-5.534959,0.176452,-9.022626,-2.761825,1.972230,-3.722821,0.049420,-4.915164,-2.716218,-0.686774,-0.181248,3.955629,-7.348497,0.579081,-1.827168,1.608084,6.761448,-3.061681,3.976812,-3.776913,-5.002710,-4.110107,2.422011,4.388791,2.977419,-6.774730,-8.495316,-2.827881,3.736807,-5.185788,-2.082882,-4.408686,8.352656,3.948461,7.045701,0.084098,-7.701770,0.469810,-4.241163,6.537290,2.020780,5.776137,8.309648,-8.154688,0.543244,6.046487,-5.679619,7.265919,-4.341065,-5.184102,-3.791996,2.981625,-5.595896,1.922894,-8.402736,-9.228489,-6.092957,6.297190,3.543919,-3.491448,0.694113,1.288288,4.142277,9.187307,8.073412,7.263762,2.346011,3.049307,-7.237654,4.138321,2.444200,-5.047788,9.718733,-5.183269,4.216162,-0.694714,-1.835291,-9.524886,-1.045858,4.558128,8.425151,-3.701137,7.822039,-9.224288,-9.031159,-9.614557,5.867508,9.437898,0.487043,-3.825856,1.395650,4.308615,-0.790322,0.300331,4.124108,-8.911567,-4.293931,5.588487,-6.358622,4.912366,4.048419,0.583579,-4.272268,-0.900165,-4.093725,-9.871328,2.875003,3.410573,3.566368,-1.062882,6.141061,0.174531,0.320336,9.319876,2.147125,-2.186876,0.154697,1.932157,3.988761,7.079289,-6.356734,7.657267,6.848063,7.034640,8.179258,9.229852,8.033057,-1.013262,8.237856,-6.363800,-0.145539,-4.189447,-7.986137,1.877962,6.484729,5.588170,-9.640810,4.633895,2.095272,-2.713013,-3.326805,0.997530,6.888963,4.939606,-7.916025,7.330834,-6.583941,-4.653381,0.851577,-1.090406,-5.872092,0.822584,-1.516065,-5.393291,3.991827,7.982514,-8.274617,1.216894,-4.597409,-7.420123,6.419039,-8.756688,8.816165,-2.936981,-7.094039,9.604962,8.724110,-9.597114,0.168900,0.878588,6.816428,3.028938,-4.816174,2.470001,8.917179,4.347154,7.304843,-0.066988,-7.936248,-7.559944,-8.469369,3.920229,-1.891969,2.191781,-0.356305,-4.900156,3.753630,8.236957,8.397568,0.370735,-0.627767,8.433943,-1.042509,1.866865,-8.710625,5.945068,2.062562,-0.531760,-7.304834,-2.229241,1.519941,1.616411,-4.571986,-1.714403,5.496018,-0.056160,-2.289845,-7.072303,6.731232,2.838855,6.262535,-7.611750,2.922653,-6.758873,8.368912,-6.238083,7.771820,1.007974,-9.552469,0.698982,5.901924,7.308314,2.595802,-0.972797,2.258339,0.626775,5.805560,-1.631320,-3.372746,-1.682565,0.068760,-8.738872,-2.068054,-0.617621,8.995178,8.396325,3.197503,-1.574448,-4.293323,7.356571,-3.340399,-3.305079,4.156837,-6.474737,2.753739,8.641684,8.682082,9.745149,0.342905,-6.544422,-1.515183,-0.533001,6.152312,-5.460266,7.755781,0.893140,-4.990054,2.268434,-2.475821,-8.940237,6.896956,-5.667981,2.814313,-9.495518,2.072631,-8.480527,-3.362045,1.534084,5.513404,5.538890,-7.240556,9.809256,-8.602474,-3.207036,-2.965133,-5.714380,-4.453481,0.816539,1.153418,-4.103962,-2.673241,-1.656416,0.587710,-4.746618,7.402486,-9.718895,8.874430,4.956013,-0.264613,-3.173861,-6.824332,-6.753623,-0.844326,-5.622601,-9.259904,-9.150835,7.827768,3.671694,5.897831,-9.625060,-9.039746,-2.944576,-0.628550,4.462594,2.617359,4.985105,5.208233,-6.428852,5.435409,3.122138,5.643094,2.444357,-6.493368,-5.916803,-7.379676,-0.969608,2.212634,-1.944798,-6.800852,-1.009171,-9.594614,7.299099,-5.895648,2.767991,7.109819,3.057995,-1.648765,1.486507,7.303060,-3.721076,-0.703343,-7.705083,9.571082,8.719832,8.180797,8.641303,-7.671892,0.261765,-6.740694,-0.158553,1.163645,3.302551,-5.396125,-1.372140,-3.960109,-3.310480,2.964781,-1.949713,4.261534,2.757437,4.403814,-4.130628,4.824365,-8.881462,-5.156736,3.543828,-5.889534,-9.560098,-6.052205,9.819577,9.155881,9.167422,-1.087789,-8.860177,-0.623473,-0.307824,-7.399451,5.601232,-3.860198,-4.012382,-0.957346,-2.658273,-1.790967,-5.098130,9.004517,4.484511,4.749126,-5.489069,-4.277908,7.214544,-6.633695,-9.518007,3.465610,-7.739622,-5.194249,-3.431297,5.053077,8.651846,9.547359,-8.793732,8.146679,-7.289224,-4.855073,6.065207,0.728879,6.792436,-7.662132,-1.997267,0.521315,-9.880811,1.987610,6.954563,5.708303,-5.260751,-4.945080,-4.841000,-8.742637,-8.986717,4.280868,8.796472,-5.002033,-8.570080,2.665094,-1.885235,5.780673,-3.813644,-0.167622,5.626751,-1.306859,-2.340414,-0.611990,2.584554,0.840464,-6.104312,1.768157,2.230508,-0.974864,-0.418799,9.017510,7.297478,6.095979,2.545860,8.515741,-4.880279,5.621988,-9.917265,1.937048,-3.336089,3.214274,5.242942,4.489287,-7.381430,-7.552716,0.006136,-4.594913,-1.989028,-3.316854,4.237938,2.611940,8.759679,-9.301930,-7.552983,4.448120,5.650005,5.924576,7.978990,3.624857,5.781897,8.586912,2.131945,9.589592,9.521157,-5.325808,6.377352,-6.798852,-6.238384,-7.705273,-5.667050,3.013150,-1.250904,-6.157780,2.319601,3.044133,0.358391,1.141857,-3.992278,8.217956,-9.379407,-8.446374,8.215187,3.528718,-2.290696,-9.416037,2.981319,-8.612892,4.045480,-4.756116,-0.822094,9.782879,-4.228929,3.612316,6.550656,-5.302831], dtype = "float64")#candidate|5510|(840,)|const|float64
call_5509 = relay.TupleGetItem(func_4610_call(relay.reshape(const_5510.astype('float64'), [14, 4, 15]), relay.reshape(const_5510.astype('float32'), [14, 4, 15]), ), 2)
call_5511 = relay.TupleGetItem(func_4614_call(relay.reshape(const_5510.astype('float64'), [14, 4, 15]), relay.reshape(const_5510.astype('float32'), [14, 4, 15]), ), 2)
func_5229_call = mod.get_global_var('func_5229')
func_5233_call = mutated_mod.get_global_var('func_5233')
const_5522 = relay.const([1,-6,5,10,5,-1,8,-5,2,-5,-4,-2,-9,2,1,5,7,4,-5,7,-10,7,10,-9,4,9,-10,2,3,3,-9,-6,2,-8,4,-9,2,4,-5,-6,8,-8,6,10,-4,-3,-3,-7,7,-4,-1,-7,6,-6,-6,-10,6,5,-8,1,-9,-4,1,9,-7,1,5,-10,9,2,6,2,-1,-6,-5,10,-9,-8,6,-10,-2,2,9,8,7,3,-3,-7,-3,1,10,-2,8,3,9,8,6,-9,-1,3,7,1,-1,4,3,-2,9,-6,-3,-2,2,-4,-9,3,9,7,-2,-8,9,8,7,9,-3,-4,3,9,-3,6,-5,1,-7,-4,7,3,-3,-1,1,8,-6,10,-6,5,-1,3,-1,4,3,8,-9,9,4,-4,-2,10,-5,-5,9,-4,2,8,2,-3,9,6,-6,2,4,6,-8,-2,-5,8,9,-6,-9,-4,8,5,-1,-7,-5,7,-5,-5,-9,10,6,-2,9,-7,2,-9,-1,10,-5,-8,-8,-10,-10,-9,-4,7,-6,6,-4,-4,-4,-9,-7,-8,-7,-3,-3,-9,-7,-4,-7,10,9,-1,-7,-1,9,-8,10,9,4,4,2,-10,2,-10,4,-2,-6,-6,-7,-7,-7,-3,3,-4,-1,-2,-2,3,-6,-2,-5,-3,-7,-5,4,-3,7,7,7,6,-2,4,-1,-9,-10,-9,-5,-5,9,-9,1,3,-9,7,4,5,-2,-9,5,-3,-8,9,3,6,-5,-5,8,-4,10,4,-7,-7,9,3,5,9,8,-7,-6,-5,9,-5,9,3,-3,3,-7,8,-8,9,6,-5,8,7,4,-4,1,-9,1,2,-10,-3,-5,2,-1,-7,1,-3,-5,-4,2,3,9,6,5,-5,10,3,-10,-9,7,10,-9,6,5,2,-8,-3,-6,-7,6,9,2,3,8,-3,-1,5,-7,-3,-1,-4,-1,-5,7,-9,6,2,1,-7,9,-6,-4,10,1,6,10,10,8,-2,7,-9,-1,-10,6,1,-9,6,9,-5,-1,2,-2,7,-8,-4,-10,10,3,2,-9,-5,-4,-10,-8,3,7,-3,8,6,6,-2,4,-6,2,-6,-4,9,-3,3,7,1,3,-10,3,-8,-9,-7,-2,8,2,-7,7,8,-9,1,7,8,7,3,-8,-1,1,10,1,-7,3,3,2,-10,-2,-4,3,1,2,10,-4,8,10,-7,5,-6,-10,8,10,-2,9,3,10,1,-7,5,-3,5,1,2,7,-6,-9,-10,2,-1,-10,2,6,5,4,5,2,-9,-1,9,-3,7,-1,8,1,-6,-4,2,-2,5,6,3,9,1,5,8,-6,9,-1,1,-8,2,5,-4,-2,1,9,6,-6,-6,8,10,-10,-1,7,5,-9,9,-5,-1,2,-3,-5,-8,7,-3,-9,-10,3,-4,-5,8,-9,10,-10,9,2,-4,4,-8,-6,-7,-4,-8,2,7,-2,-3,-2,5,5,-7,-9,-2,10,3,10,3,-10,-1,2,2,-5,-4,-10,-2,-6,-10,7,-5,3,-7,1,9,10,6,1,7,-2,4,2,5,-4,-1,10,-10,-8,-7,6,10,7,-9,1,4,-6,5,4,-6,-6,9,-4,8,7,-1,-3,-10,-7,9,-2,-3,-3,6,10,-8,-10,-2,-8,-6,-6,-8,8,-1,7,-4,5,9,6,7,-9,2,-4,4,5,-6,9,-1,-4,-1,-2,-9,-2,9,4,-4,3,-4,10,-8,10,-7,-10,3,3,-2,-8,-4,-1,-8,10,-10,8,9,-2,5,1,-8,-2,-2,6,2,6,6,-10,2,8,3,6,6,-9,7,-4,-10,9,-3,-7,-10,-10,10,-3,-8,-6,9,-2,-9,7,-10,2,-9,-3,7,7,5,-4,-7,-1,7,7,9,-2,-10,-6,-2,-4,1,-5,-9,4,10,-1,4,-4,-9,-9,-10,-7,-10,3,-3,-6,6,1,-6,1,4,4,6,-2,-7,-5,2,7,7,5,-9,-2,-2,2,9,-3,7,-4,-3,8,-5,-7,7,10,-4,-1,4,9,8,2,-5,2,-2,5,-1,5,7,5,-4,7,-10,2,-2,9,-4,-7,8,3,6,-5,-2,-4,-2,5,6,5,-8,1,10,10,-3,-5,6,10,5,-8,-8,7,3,-6,-4,6,-10,4,7,3,2,-10,5,10,-9,-6,1,5,-5,-5,-3,-5,-8,-2,4,4,3,-2,-5,-8,-1,1,8,-7,8,4,-3,-2,-7,-3,-10,-6,-2,-3,1,1,-6,5,8,-6,2,-8,10,-5,6,7,6,3,2,-4,9,-8,-10,8,-4,6,8,-2,-8,5,-4,2,-8,7,10,4,9,-4,-4,6,-9,-4,8,5,-3,-10,5,-7,6,2,7,7,7,-4,-4,-8,5,-1,-10,-9,-7,1,8,4,4,-1,-3,7,-8,2,1,8,-4,9,5,6,-4,3,-5,-7,4,-7,6,6,5,7,-8,2,-4,-5,-10,1,9,7,3,-2,3,4,5,5,-10,6,7,-9,10,10,-6,-3,4,-7,-7,6,10,1,-1,-5,-9,8,-10,7,-10,1,9,-9,7,2,6,-6,-5,2,-1,9,-8,6,-4,8,-3,2,-5,4,8,4,1,10,6,4,-7,-9,-9,-2,9,9,-9,3,1,-5,-1,-2,-8,-10,6,-4,-6,9,8,-10,-1,1,9,5,-9,-8,-1,5,-7,-6,1,-6,-10,4,-6,7,3,-9,-9,-2,-7,3,3,7,-4,-2,2,-4,3,-2,-4,8,6,2,6,-8,-4,-10,10,6,-2,-1,-6,-7,-6,-10,10,8,7,-1,-3,7,9,-4,-7,-3,9,-3,10,4,1,-6,1,-6,5,-3,-4,6,8,-2,-10,-3,-8,4,8,-6,1,1,6,-2,3,-9,-6,2,-5,-8,-9,4,9,7,-5,8,3,-9,5,9,-7,-6,-3,8,3,3,-8,9,-4,-5,-1,6,-2,-4,6,-4,-4,-7,-9,5,2,-3,-4,10,-1,8,9,6,10,-6,-7,-1,-1,8,-5,9,10,10,4,-3,-6,-9,-6,8,-6,2,7,4,2,-7,6,4,7,9,5,-8,-4,8,1,6,10,-1,-1,-4,-9,-10,6,9,10,-7,-4,8,2,-8,1,2,-5,-8,-2,-1,-3,3,7,-3,4,3,-6,5,-8,5,-10,3,-4,2,-5,-4,-4,-8,-1,-9,4,10,-3,-10,-10,10,-3,-3,-4,-10,8,9,-3,4,-9,-6,4,-5,-4,10,9,2,-3,-9,-2,9,-5,3,-5,-1,-9,-9,4,2,8,-2,1,9,2,4,8,-5,10,-10,-4,-9,-7,-6,2,-1,-7,7,8,6,3,4,-1,-6,-7,-8,-7,-4,7,9,7,10,-4,3,-3,2,9,1,4,-3,-4,-2,9,-9,-5,8,8,-7,6,-4,9], dtype = "uint64")#candidate|5522|(1296,)|const|uint64
call_5521 = relay.TupleGetItem(func_5229_call(relay.reshape(const_5522.astype('uint64'), [9, 12, 12]), relay.reshape(const_5522.astype('uint64'), [9, 12, 12]), ), 3)
call_5523 = relay.TupleGetItem(func_5233_call(relay.reshape(const_5522.astype('uint64'), [9, 12, 12]), relay.reshape(const_5522.astype('uint64'), [9, 12, 12]), ), 3)
bop_5530 = relay.logical_or(call_5521.astype('bool'), relay.reshape(call_5509.astype('bool'), relay.shape_of(call_5521))) # shape=(14, 4, 15)
bop_5533 = relay.logical_or(call_5523.astype('bool'), relay.reshape(call_5511.astype('bool'), relay.shape_of(call_5523))) # shape=(14, 4, 15)
func_5465_call = mod.get_global_var('func_5465')
func_5467_call = mutated_mod.get_global_var('func_5467')
call_5548 = relay.TupleGetItem(func_5465_call(), 0)
call_5549 = relay.TupleGetItem(func_5467_call(), 0)
func_2033_call = mod.get_global_var('func_2033')
func_2035_call = mutated_mod.get_global_var('func_2035')
var_5551 = relay.var("var_5551", dtype = "float32", shape = (14,))#candidate|5551|(14,)|var|float32
call_5550 = relay.TupleGetItem(func_2033_call(relay.reshape(var_5551.astype('float32'), [2, 1, 7])), 1)
call_5552 = relay.TupleGetItem(func_2035_call(relay.reshape(var_5551.astype('float32'), [2, 1, 7])), 1)
output = relay.Tuple([call_5487,call_5496,call_5498,const_5499,const_5510,const_5522,bop_5530,call_5548,call_5550,var_5551,])
output2 = relay.Tuple([call_5488,call_5497,call_5500,const_5499,const_5510,const_5522,bop_5533,call_5549,call_5552,var_5551,])
func_5555 = relay.Function([var_5551,], output)
mod['func_5555'] = func_5555
mod = relay.transform.InferType()(mod)
mutated_mod['func_5555'] = func_5555
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5556 = relay.var("var_5556", dtype = "float32", shape = (14,))#candidate|5556|(14,)|var|float32
func_5555_call = mutated_mod.get_global_var('func_5555')
call_5557 = func_5555_call(var_5556)
output = call_5557
func_5558 = relay.Function([var_5556], output)
mutated_mod['func_5558'] = func_5558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2143_call = mod.get_global_var('func_2143')
func_2144_call = mutated_mod.get_global_var('func_2144')
call_5633 = func_2143_call()
call_5634 = func_2143_call()
func_2929_call = mod.get_global_var('func_2929')
func_2932_call = mutated_mod.get_global_var('func_2932')
const_5650 = relay.const([8.549045,-7.643373,-4.596927,9.532426,-0.289835,-1.434155,3.484125,-1.719596,8.995491,-2.123462,5.356210,7.934906,0.917159,3.772453,3.601815,-6.457241,4.794912,-5.217763,-9.183845,-2.415084,-8.548027,5.981934,6.592216,3.474489,5.808659,5.328287,-2.160415,-2.548882,-3.211610,-0.805709,-1.940450,9.851238,1.854727,8.059607,1.769576,-5.948706,7.062605,9.622337,2.497482,3.003844,-8.500275,9.878857,5.045412,-6.216259,-3.128309,6.493592,6.967196,-0.560579,-4.748704,-8.528457,2.994365,-7.400673,-4.282188,-6.793853,-0.597004,-5.215111,-6.978750,6.342962,8.963671,8.987861,-4.173536,7.700393,6.951300,-9.494576,6.770303,8.597309,-7.707899,8.066360,8.367504,-4.341029,0.032261,-5.741963,4.218837,3.287375,7.886372,-6.566787,-5.567618,-2.266666,6.058025,8.091071,5.685496,0.608996,-9.954341,4.146781,-9.038753,-8.502390,-7.359550,7.293952,-4.307887,3.393042,-5.508310,-3.590877,4.354966,-8.141076,3.995516,4.680684,1.383068,-4.358072,-0.682208,2.996131,-8.590412,-4.334868,8.748778,-7.436613,8.844217,9.083460,2.930189,-2.691425,-5.336485,8.999864,-0.989458,6.744111,1.973814,-1.794174,8.852558,3.694789,4.832902,-3.420039,9.424629,-3.047214,-1.888763,-4.014489,9.320974,-1.241880,-6.466889,-7.661917,8.022448,-0.184861,3.486826,-3.753085,-6.980762,-2.320616,2.770723,-0.013495,1.748312,7.991514,3.517353,6.073599,-5.608496,-0.848639,2.248126,-8.820127,-1.354600,-2.846688,4.145123,-2.651616,-5.583129,7.783078,-3.468871,-8.851959,-5.165412,5.763501,-7.712460,7.469766,8.030318,6.474594,-9.414209,3.013776,-6.452188,-9.281631,-2.007138,8.443306,-3.409041,-6.403691,0.922252,-7.497218,1.222878,1.175108,2.836455,-8.222652,-6.586115,5.512664,9.991481,-1.473680,-7.969203,4.058199,1.366379,2.160165,4.773185,-4.761184,7.715125,9.481790,2.519675,-3.993638,4.798445,3.938145,-8.928070,-7.839800,7.426507,3.785573,8.998529,-9.338363,7.456105,-2.309533,5.446625,4.480970,-4.727366,4.065614,0.823421,-4.707996,2.512150,4.884899,-2.083065,4.955428,-4.876518,-7.327651,-6.116900,-9.778206,-8.294708,-1.390022,-0.039741,-1.015232,-5.603100,-1.370717,9.613194,-7.415315,-7.881842,-8.563430,0.540589,-6.178895,-6.315607,-2.459088,1.975593,0.820028,9.067064,3.736975,4.210795,-3.445259,-9.031423,-8.185678,3.270167,-7.655236,-5.443917,0.422972,-4.938728,5.003498,-8.313312,9.956943,-6.721329,2.418820,9.297537,0.430791,1.268578,-9.713435,-1.927756,1.451808,-4.535478,9.914958,2.604939,-0.737201,-7.118913,-6.693949,9.987017,-7.352344,-1.856078,-9.662556,1.445842,5.597757,1.916543,-3.446008,-4.439967,-6.818169,2.742004,0.800088,-6.050375,-2.667867,7.889709,6.857343,6.304933,-3.253542,9.975774,2.212799,0.451127,9.921367,-0.994237,-9.368851,-5.119564,3.140649,6.722422,-3.779814,1.800629,-6.382294,5.994908,0.647954,-9.196370,1.140140,-6.328383,-3.580068,6.048988,1.023792,8.499186,-7.892323,-7.040395,9.286592,-9.198749,2.304574,-1.920062,-0.248572,3.886911,-5.464259,1.351953,8.539702,-6.786299,0.664113,-7.278454,-8.019318,2.501314,9.747366,-3.724995,5.887186,-2.772149,-5.264066,-3.324820,-6.142054,0.645149,7.823681,-0.989146,-4.922193,-3.276902,-7.669257,-1.185945,-7.823569,6.490346,6.194628,-3.530980,-2.358145,3.935568,-5.307641,3.959038,4.791148,7.995856,-7.139665,-7.751779,8.658447,-1.004885,6.244277,-4.184218,-0.639109,0.093685,2.542716,-7.383430,-3.296039,5.091462,-5.088959,7.908163,7.920889,-4.428033,6.707659,-7.001109,-9.563955,-8.116106,-2.156012,7.734795,1.174557,-7.198188,6.360401,-8.102958,8.988499,-2.555832,5.835640,8.470263,-5.620547,-1.989737,-9.014496,-1.566691,6.722649,-6.101721,2.458736,0.230211,-6.924899,-6.710402,-4.103208,6.963574,-8.291313,7.200453,-6.799204,-8.027749,7.628274,-2.976880,8.478810,-6.023395,5.077620,-3.225761,-0.294010,5.626297,-2.288285,-8.997426,6.867394,-7.842388,0.052194,7.144777,-4.996912,8.246460,-2.690803,-7.838437,-9.069936,-8.774384,3.467102,9.343050,-8.828575,8.294901,-4.838380,-8.051666,3.421573,1.784952,-5.108090,-0.207663,-3.367564,-8.988420,2.142975,-4.702979,5.341792,-2.049460,-1.105084,4.368434,-9.169192,8.149148,-0.519677,-8.416257,-8.759454,1.564508,-4.056968,6.831053,4.449960,5.234111,-3.239070,-0.175476,7.307018,2.631193,-6.929117,-8.706156,8.441600,3.987257,5.013962,8.529114,7.118939,2.533413,5.250517,-6.794728,-4.790557,1.857981,-8.193145,7.872136,-4.528606,8.599085,3.146256,-5.786133,5.290856,-3.479820,9.811970,-4.683756,-2.740337,3.493887,-0.257683,-7.613813,3.871068,-5.362807,-6.587606,4.837223,-4.465917,9.583948,8.755575,-7.189480,-7.933433,4.387350,-2.139368,-5.206102,3.922909,-3.516658,-8.082941,4.579624,7.533523,6.813285,2.248168,-7.120849,7.125848,3.760333,9.854587,2.775889,-4.485427,-9.104398,-5.135836,-2.280593,-7.820145,5.400873,3.708937,-4.181999,-8.649046,-3.556664,2.919129,9.827676,8.340775,7.211479,-9.860273,-6.589414,1.674025,-2.564456,1.643365,-9.756765,3.885359,-1.484624,-8.393713,4.516996,-4.860706], dtype = "float32")#candidate|5650|(504,)|const|float32
call_5649 = relay.TupleGetItem(func_2929_call(relay.reshape(const_5650.astype('float32'), [3, 14, 12])), 2)
call_5651 = relay.TupleGetItem(func_2932_call(relay.reshape(const_5650.astype('float32'), [3, 14, 12])), 2)
func_2621_call = mod.get_global_var('func_2621')
func_2622_call = mutated_mod.get_global_var('func_2622')
call_5654 = relay.TupleGetItem(func_2621_call(), 0)
call_5655 = relay.TupleGetItem(func_2622_call(), 0)
uop_5661 = relay.exp(call_5649.astype('float64')) # shape=(1200,)
uop_5663 = relay.exp(call_5651.astype('float64')) # shape=(1200,)
bop_5670 = relay.less_equal(uop_5661.astype('bool'), relay.reshape(call_5649.astype('bool'), relay.shape_of(uop_5661))) # shape=(1200,)
bop_5673 = relay.less_equal(uop_5663.astype('bool'), relay.reshape(call_5651.astype('bool'), relay.shape_of(uop_5663))) # shape=(1200,)
func_3229_call = mod.get_global_var('func_3229')
func_3230_call = mutated_mod.get_global_var('func_3230')
call_5678 = relay.TupleGetItem(func_3229_call(), 1)
call_5679 = relay.TupleGetItem(func_3230_call(), 1)
func_4727_call = mod.get_global_var('func_4727')
func_4729_call = mutated_mod.get_global_var('func_4729')
call_5698 = relay.TupleGetItem(func_4727_call(), 0)
call_5699 = relay.TupleGetItem(func_4729_call(), 0)
bop_5703 = relay.bitwise_xor(uop_5661.astype('uint16'), relay.reshape(bop_5670.astype('uint16'), relay.shape_of(uop_5661))) # shape=(1200,)
bop_5706 = relay.bitwise_xor(uop_5663.astype('uint16'), relay.reshape(bop_5673.astype('uint16'), relay.shape_of(uop_5663))) # shape=(1200,)
output = relay.Tuple([call_5633,const_5650,call_5654,call_5678,call_5698,bop_5703,])
output2 = relay.Tuple([call_5634,const_5650,call_5655,call_5679,call_5699,bop_5706,])
func_5709 = relay.Function([], output)
mod['func_5709'] = func_5709
mod = relay.transform.InferType()(mod)
output = func_5709()
func_5710 = relay.Function([], output)
mutated_mod['func_5710'] = func_5710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4560_call = mod.get_global_var('func_4560')
func_4562_call = mutated_mod.get_global_var('func_4562')
call_5772 = relay.TupleGetItem(func_4560_call(), 0)
call_5773 = relay.TupleGetItem(func_4562_call(), 0)
func_2621_call = mod.get_global_var('func_2621')
func_2622_call = mutated_mod.get_global_var('func_2622')
call_5778 = relay.TupleGetItem(func_2621_call(), 0)
call_5779 = relay.TupleGetItem(func_2622_call(), 0)
output = relay.Tuple([call_5772,call_5778,])
output2 = relay.Tuple([call_5773,call_5779,])
func_5781 = relay.Function([], output)
mod['func_5781'] = func_5781
mod = relay.transform.InferType()(mod)
mutated_mod['func_5781'] = func_5781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5781_call = mutated_mod.get_global_var('func_5781')
call_5782 = func_5781_call()
output = call_5782
func_5783 = relay.Function([], output)
mutated_mod['func_5783'] = func_5783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3229_call = mod.get_global_var('func_3229')
func_3230_call = mutated_mod.get_global_var('func_3230')
call_5792 = relay.TupleGetItem(func_3229_call(), 1)
call_5793 = relay.TupleGetItem(func_3230_call(), 1)
output = call_5792
output2 = call_5793
func_5810 = relay.Function([], output)
mod['func_5810'] = func_5810
mod = relay.transform.InferType()(mod)
mutated_mod['func_5810'] = func_5810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5810_call = mutated_mod.get_global_var('func_5810')
call_5811 = func_5810_call()
output = call_5811
func_5812 = relay.Function([], output)
mutated_mod['func_5812'] = func_5812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2443_call = mod.get_global_var('func_2443')
func_2444_call = mutated_mod.get_global_var('func_2444')
call_5877 = relay.TupleGetItem(func_2443_call(), 1)
call_5878 = relay.TupleGetItem(func_2444_call(), 1)
func_4948_call = mod.get_global_var('func_4948')
func_4950_call = mutated_mod.get_global_var('func_4950')
call_5892 = relay.TupleGetItem(func_4948_call(relay.reshape(call_5877.astype('float32'), [6, 8, 11])), 0)
call_5893 = relay.TupleGetItem(func_4950_call(relay.reshape(call_5877.astype('float32'), [6, 8, 11])), 0)
output = relay.Tuple([call_5877,call_5892,])
output2 = relay.Tuple([call_5878,call_5893,])
func_5899 = relay.Function([], output)
mod['func_5899'] = func_5899
mod = relay.transform.InferType()(mod)
mutated_mod['func_5899'] = func_5899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5899_call = mutated_mod.get_global_var('func_5899')
call_5900 = func_5899_call()
output = call_5900
func_5901 = relay.Function([], output)
mutated_mod['func_5901'] = func_5901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3048_call = mod.get_global_var('func_3048')
func_3050_call = mutated_mod.get_global_var('func_3050')
call_5938 = relay.TupleGetItem(func_3048_call(), 0)
call_5939 = relay.TupleGetItem(func_3050_call(), 0)
func_3483_call = mod.get_global_var('func_3483')
func_3484_call = mutated_mod.get_global_var('func_3484')
call_5947 = relay.TupleGetItem(func_3483_call(), 0)
call_5948 = relay.TupleGetItem(func_3484_call(), 0)
func_2690_call = mod.get_global_var('func_2690')
func_2692_call = mutated_mod.get_global_var('func_2692')
call_5952 = relay.TupleGetItem(func_2690_call(), 2)
call_5953 = relay.TupleGetItem(func_2692_call(), 2)
func_5200_call = mod.get_global_var('func_5200')
func_5203_call = mutated_mod.get_global_var('func_5203')
var_5981 = relay.var("var_5981", dtype = "float32", shape = (72,))#candidate|5981|(72,)|var|float32
call_5980 = relay.TupleGetItem(func_5200_call(relay.reshape(var_5981.astype('float32'), [72,])), 4)
call_5982 = relay.TupleGetItem(func_5203_call(relay.reshape(var_5981.astype('float32'), [72,])), 4)
bop_5983 = relay.right_shift(call_5947.astype('int16'), relay.reshape(call_5952.astype('int16'), relay.shape_of(call_5947))) # shape=(6, 8, 11)
bop_5986 = relay.right_shift(call_5948.astype('int16'), relay.reshape(call_5953.astype('int16'), relay.shape_of(call_5948))) # shape=(6, 8, 11)
output = relay.Tuple([call_5938,call_5980,var_5981,bop_5983,])
output2 = relay.Tuple([call_5939,call_5982,var_5981,bop_5986,])
func_5987 = relay.Function([var_5981,], output)
mod['func_5987'] = func_5987
mod = relay.transform.InferType()(mod)
mutated_mod['func_5987'] = func_5987
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5988 = relay.var("var_5988", dtype = "float32", shape = (72,))#candidate|5988|(72,)|var|float32
func_5987_call = mutated_mod.get_global_var('func_5987')
call_5989 = func_5987_call(var_5988)
output = call_5989
func_5990 = relay.Function([var_5988], output)
mutated_mod['func_5990'] = func_5990
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5997 = relay.var("var_5997", dtype = "float64", shape = (8, 12, 9))#candidate|5997|(8, 12, 9)|var|float64
var_5998 = relay.var("var_5998", dtype = "float64", shape = (8, 12, 9))#candidate|5998|(8, 12, 9)|var|float64
bop_5999 = relay.divide(var_5997.astype('float64'), relay.reshape(var_5998.astype('float64'), relay.shape_of(var_5997))) # shape=(8, 12, 9)
output = relay.Tuple([bop_5999,])
output2 = relay.Tuple([bop_5999,])
func_6004 = relay.Function([var_5997,var_5998,], output)
mod['func_6004'] = func_6004
mod = relay.transform.InferType()(mod)
mutated_mod['func_6004'] = func_6004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6004_call = mutated_mod.get_global_var('func_6004')
var_6006 = relay.var("var_6006", dtype = "float64", shape = (8, 12, 9))#candidate|6006|(8, 12, 9)|var|float64
var_6007 = relay.var("var_6007", dtype = "float64", shape = (8, 12, 9))#candidate|6007|(8, 12, 9)|var|float64
call_6005 = func_6004_call(var_6006,var_6007,)
output = call_6005
func_6008 = relay.Function([var_6006,var_6007,], output)
mutated_mod['func_6008'] = func_6008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4727_call = mod.get_global_var('func_4727')
func_4729_call = mutated_mod.get_global_var('func_4729')
call_6013 = relay.TupleGetItem(func_4727_call(), 0)
call_6014 = relay.TupleGetItem(func_4729_call(), 0)
func_3242_call = mod.get_global_var('func_3242')
func_3243_call = mutated_mod.get_global_var('func_3243')
call_6027 = relay.TupleGetItem(func_3242_call(), 0)
call_6028 = relay.TupleGetItem(func_3243_call(), 0)
output = relay.Tuple([call_6013,call_6027,])
output2 = relay.Tuple([call_6014,call_6028,])
func_6034 = relay.Function([], output)
mod['func_6034'] = func_6034
mod = relay.transform.InferType()(mod)
output = func_6034()
func_6035 = relay.Function([], output)
mutated_mod['func_6035'] = func_6035
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6042 = relay.var("var_6042", dtype = "int64", shape = (6, 15, 15))#candidate|6042|(6, 15, 15)|var|int64
var_6043 = relay.var("var_6043", dtype = "int64", shape = (6, 15, 15))#candidate|6043|(6, 15, 15)|var|int64
bop_6044 = relay.bitwise_or(var_6042.astype('int64'), relay.reshape(var_6043.astype('int64'), relay.shape_of(var_6042))) # shape=(6, 15, 15)
output = bop_6044
output2 = bop_6044
func_6053 = relay.Function([var_6042,var_6043,], output)
mod['func_6053'] = func_6053
mod = relay.transform.InferType()(mod)
var_6054 = relay.var("var_6054", dtype = "int64", shape = (6, 15, 15))#candidate|6054|(6, 15, 15)|var|int64
var_6055 = relay.var("var_6055", dtype = "int64", shape = (6, 15, 15))#candidate|6055|(6, 15, 15)|var|int64
output = func_6053(var_6054,var_6055,)
func_6056 = relay.Function([var_6054,var_6055,], output)
mutated_mod['func_6056'] = func_6056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1760_call = mod.get_global_var('func_1760')
func_1761_call = mutated_mod.get_global_var('func_1761')
call_6093 = relay.TupleGetItem(func_1760_call(), 0)
call_6094 = relay.TupleGetItem(func_1761_call(), 0)
output = relay.Tuple([call_6093,])
output2 = relay.Tuple([call_6094,])
func_6095 = relay.Function([], output)
mod['func_6095'] = func_6095
mod = relay.transform.InferType()(mod)
mutated_mod['func_6095'] = func_6095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6095_call = mutated_mod.get_global_var('func_6095')
call_6096 = func_6095_call()
output = call_6096
func_6097 = relay.Function([], output)
mutated_mod['func_6097'] = func_6097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4836_call = mod.get_global_var('func_4836')
func_4838_call = mutated_mod.get_global_var('func_4838')
call_6098 = relay.TupleGetItem(func_4836_call(), 4)
call_6099 = relay.TupleGetItem(func_4838_call(), 4)
output = call_6098
output2 = call_6099
func_6122 = relay.Function([], output)
mod['func_6122'] = func_6122
mod = relay.transform.InferType()(mod)
output = func_6122()
func_6123 = relay.Function([], output)
mutated_mod['func_6123'] = func_6123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3021_call = mod.get_global_var('func_3021')
func_3023_call = mutated_mod.get_global_var('func_3023')
call_6145 = relay.TupleGetItem(func_3021_call(), 0)
call_6146 = relay.TupleGetItem(func_3023_call(), 0)
func_2999_call = mod.get_global_var('func_2999')
func_3000_call = mutated_mod.get_global_var('func_3000')
call_6166 = relay.TupleGetItem(func_2999_call(), 0)
call_6167 = relay.TupleGetItem(func_3000_call(), 0)
func_4071_call = mod.get_global_var('func_4071')
func_4074_call = mutated_mod.get_global_var('func_4074')
var_6170 = relay.var("var_6170", dtype = "uint8", shape = (858,))#candidate|6170|(858,)|var|uint8
call_6169 = relay.TupleGetItem(func_4071_call(relay.reshape(call_6145.astype('float64'), [6, 8, 11]), relay.reshape(var_6170.astype('uint8'), [858,]), ), 1)
call_6171 = relay.TupleGetItem(func_4074_call(relay.reshape(call_6145.astype('float64'), [6, 8, 11]), relay.reshape(var_6170.astype('uint8'), [858,]), ), 1)
func_6004_call = mod.get_global_var('func_6004')
func_6008_call = mutated_mod.get_global_var('func_6008')
const_6174 = relay.const([[-7.466572,-6.060248,-7.077753,8.259887,-2.147021,-9.336831,-2.776576,-1.651328,-9.271228,-2.362698,-5.413815,-3.437978,-6.995536,0.478088,1.402216,9.198073,0.783651,6.992189,-0.375917,9.186913,-1.906624,-8.412354,8.997907,1.958343,4.326590,-6.362932,7.014373,6.699769,-1.702241,0.785123,0.881488,8.573909,-7.984980,-9.677526,7.240519,2.418115,-6.873867,-4.205170,-0.150055,1.363559,1.741457,-9.065957,-8.924805,7.412004,-5.051299,3.583877,0.425859,1.491315,2.076275,-7.307025,1.591791,-0.507605,8.799294,7.594380,-8.213977,5.261093,-0.441445,3.171030,-8.549237,8.439379,2.417130,-5.019370,-0.002701,-7.787774,7.246727,-5.528191,-0.069969,-0.996102,-4.268291,5.082313,3.248668,-2.322225,-4.752950,-2.260352,-7.342100,-0.307703,-1.584720,-8.838803,-4.136099,8.866601,9.143221,-3.706224,-0.596143,-0.034053,4.324051,-5.227002,-5.358967,-8.296257,-5.940917,6.752889,0.933529,-4.758222,-8.713619,-2.625835,2.001818,8.356410,0.103935,-1.879249,-0.630916,-9.059121,-3.532882,-8.065143,-0.048707,-3.567926,-2.343767,2.284475,0.855745,7.159841,1.059132,-4.173297,0.930261,3.401625,3.582710,1.691939,-6.934392,7.404217,-0.021698,-0.533881,4.667421,9.901481,-0.859357,6.898431,-2.661755,-4.009937,-7.409204,-0.348438,-3.491295,-0.259485,5.669500,9.509104,-1.483519,-4.356951,6.028408,6.980564,8.082970,-2.660432,9.210558,2.759365,-0.608450,7.635592,-8.445016,7.830649,-9.941927,9.377304,9.244118,8.110485,4.147675,-7.798441,-2.688213,2.608637,-0.025213,-3.396566,1.720201,2.358939,9.597873,-9.390235,-6.122299,-7.129660,-6.189647,-5.776414,-6.554657,9.028794,0.122853,-5.611327,1.013747,-0.536466,6.821891,0.591915,-8.030039,9.148487,-8.435818,-8.413912,1.108308,1.532697,-1.948618,9.344102,5.319397,-2.633340,-4.521120,6.035198,4.281977,6.294825,-9.821932,4.337882,5.737905,-4.061523,1.929632,-3.003095,1.894696,-4.499894,3.124016,-2.873320,-5.171342,3.440373,-7.123080,-6.611946,-2.721859,-9.168204,-1.857821,-6.284612,-2.835794,7.671651,5.884461,-9.917936,3.776705,-9.507716,-2.095476,-7.467247,3.100926,2.931921,-9.739072,8.960904,0.516306,4.851077,-6.663655,2.777694,-2.930284,-3.172438,-7.536722,-7.497623,3.795827,-9.304181,8.525105,-5.485678,8.735857,-0.768215,8.300145,-9.196169,-1.591907,-8.468718,4.638422,0.708678,0.137967,6.978570,9.251048,0.089450,-7.253089,-3.255105,-5.726693,9.907894,0.488722,4.679349,6.471862,7.286426,3.010596,-6.761316,-7.747702,-0.060639,4.933122,5.122890,3.384357,1.114422,6.747401,-6.124377,-6.602341,0.740428,1.957098,-1.293433,-7.993356,-7.983454,-5.399731,8.213410,8.733696,-1.803065,5.564737,2.561826,-1.574622,9.310072,-5.642386,-4.656045,3.202319,-5.100743,-2.027952,4.933275,5.755437,8.392246,0.207817,-7.744872,-6.118308,5.308217,-2.961540,3.572069,-7.861968,-5.703042,-1.345418,9.278422,-1.247315,-6.853614,7.641105,-4.936334,-8.998173,-7.120068,-5.277714,-7.415805,7.066520,-9.921792,-3.709968,-4.109982,-6.758904,5.588223,0.374506,-9.033249,6.733820,0.475976,0.085964,8.752916,9.389024,0.260576,-0.525529,-8.137867,7.233868,6.935992,-9.157194,-3.352406,7.268881,3.722651,8.494210,-2.064778,4.627331,8.128598,6.390177,-7.999817,-2.097412,-6.581409,9.228597,-2.382449,-6.573137,-6.597482,3.093223,3.205180,-0.229591,-4.996017,1.374513,-1.507003,-4.592318,4.640070,-4.358106,-3.601437,2.603483,6.892332,4.664582,8.150507,-8.001297,1.696077,2.448322,-4.514078,8.836025,5.839432,3.467808,6.855084,0.222817,-0.817053,-8.520588,-8.337944,3.305863,-0.377611,8.971778,-3.131298,9.055017,6.441707,3.944772,9.899845,-5.794389,2.598489,-7.716893,1.043140,0.137703,-8.885385,-6.992198,2.752916,-4.316616,2.722981,4.263737,1.903854,5.124436,2.116305,-5.550901,2.212675,6.222071,8.393946,-3.972080,2.483378,-8.416254,7.375656,-9.641339,-8.493266,3.982367,-5.205254,-0.756274,0.037170,5.767230,-0.057835,1.001322,-2.607711,-9.931654,9.210917,5.610611,-5.489915,-1.923820,-9.242229,-2.947050,2.765456,-4.925283,-9.722532,-5.657565,-6.560456,3.197783,4.416860,9.436335,6.496397,1.128520,-4.641120,-7.212282,-6.226548,-2.483428,0.512886,-5.607485,-8.413821,9.836767,4.485968,3.836227,6.411310,-2.521994,1.516298,-3.108170,5.460756,8.606829,-6.674883,-7.208034,-8.327298,-7.073772,9.078688],[0.567072,3.815405,-2.613559,-7.829370,9.406668,-7.581645,-1.741648,8.377635,2.831317,1.375232,-9.196751,-2.455551,-0.330235,4.065911,-6.734338,3.266212,8.543182,-9.114656,8.258437,2.967440,-9.981821,-7.719796,5.471997,-1.848919,-9.299396,-2.787027,5.704810,8.564637,4.838856,-7.984403,4.990793,3.221048,3.210963,8.757578,-6.272229,2.938476,-2.935116,-5.541642,3.663276,-8.199589,-9.132277,-8.181622,3.600710,6.933084,-9.677580,1.733882,-8.569734,-9.548739,-6.224189,-1.616892,-4.927914,-3.919785,-6.183613,6.150698,5.249167,2.368314,-0.079979,4.784377,-3.091535,-5.692824,2.176161,-4.271195,0.822448,5.727179,-8.045094,-0.300743,0.189998,-6.489722,7.158422,4.533953,8.252885,-1.569913,-1.713626,-9.706497,3.772946,9.479184,-5.740429,-6.759094,1.193330,7.333956,2.267598,-1.009852,-1.714764,-7.258343,-9.626034,-6.508025,3.747165,9.938432,6.731058,-6.032813,5.286198,1.422000,8.800777,7.845743,5.568175,4.315681,-8.842199,6.242197,-8.384358,3.390612,2.078814,-6.163338,-4.846350,-0.351523,6.805893,-4.466577,-5.248128,-6.327742,9.619414,-9.104710,7.819604,-7.596921,-7.704775,-0.433458,0.703711,2.621464,-2.416848,5.183562,-6.120477,-2.078366,-8.564345,-2.572858,-5.469718,6.927732,-5.294806,-9.270669,4.555090,3.205810,-7.870003,-5.136559,9.389265,-3.723282,4.303517,4.840363,9.028126,-3.318635,-7.127120,-8.609101,0.618895,7.265712,-0.463874,1.084072,-4.158397,4.886309,5.187401,-4.944143,0.923917,-8.204408,0.146386,-3.005853,7.964482,-4.001957,3.880108,-6.561340,-6.723805,-2.479460,7.540829,-9.679072,8.904082,-2.224078,7.481873,4.034480,5.531217,-3.169814,8.773378,4.306764,3.123283,6.830736,-1.138848,4.398729,2.054543,1.866004,-3.273349,-9.494269,0.255149,-3.216501,0.658635,-3.983870,9.493768,1.867980,7.314829,5.077550,6.895364,-6.554852,-9.282424,-8.832206,1.728348,-1.068067,-2.463459,8.757257,1.051616,-6.088306,-8.185287,9.923649,4.537019,-2.165092,2.744183,4.538864,-1.898578,-5.310960,-5.981953,-4.422890,2.774443,4.241720,8.890353,7.185221,-4.955859,-3.557484,-2.260359,-5.257041,-9.098633,7.356493,-1.157267,-9.144441,-9.648254,4.697584,-5.244382,-9.767471,-1.541760,2.563837,0.602644,-9.103946,-7.976524,-3.533235,-8.150831,0.451618,6.871198,-0.785786,6.306415,8.990479,7.994736,-9.005757,-4.089586,1.851342,-3.271634,7.295756,-4.817366,8.312096,-5.995593,2.992005,-3.702054,6.251336,2.630632,7.443463,8.264992,-4.323202,9.047625,-0.500429,-5.536072,-3.779800,-5.801434,-0.869909,1.885743,5.907657,1.033013,-3.815281,0.137864,8.436360,3.417354,-9.360881,3.382116,-8.561368,3.003116,5.967329,-6.461116,2.517864,0.720749,8.722479,0.469564,-0.619523,-1.226594,7.715260,-5.346606,-6.071958,7.660166,-5.986334,-0.872643,-9.705423,9.850364,2.688454,1.120611,-1.421131,-9.413026,-1.228785,8.068387,-8.761614,1.316329,5.801925,-2.698687,-7.577024,-2.591175,1.584677,2.742116,3.320202,5.250302,-9.157040,2.758758,3.699352,0.428381,0.976980,-7.293613,-6.340203,6.740871,2.680859,8.884325,-3.989670,8.718113,-9.992512,8.769542,1.817042,-9.797175,9.436096,1.787017,1.066358,-1.099844,2.083077,-6.448547,1.013953,6.046979,-3.455826,-1.769895,3.022799,-3.269154,-1.332893,8.190172,-8.934552,2.566052,5.414027,-1.666935,8.473625,1.666242,5.579809,-5.335079,-2.916012,9.062569,7.099224,8.509839,4.115728,-8.339360,9.625913,-4.193085,-3.027389,2.946954,-6.216640,-6.948509,5.385219,-8.259347,-2.329224,3.270653,-2.006049,6.992454,-1.210301,-5.025641,-4.145684,7.275383,-4.654063,3.797164,6.741270,-2.887416,-5.886595,-9.368409,6.684962,-9.468814,9.245611,-0.205989,-7.423083,1.180572,-9.752719,6.769159,3.901824,-1.766121,-5.828202,-6.626451,-8.354017,9.689125,2.345073,-7.430455,-6.646598,-1.925997,-9.056709,3.379850,-3.926131,8.995634,8.667168,0.552132,3.762964,-8.154030,8.438292,-7.906227,-0.468446,-6.675798,8.101152,-7.564535,8.887666,4.731072,6.221860,7.386341,-4.641022,-5.167924,4.925663,-9.520162,1.967305,-6.322381,2.122656,-4.495994,-6.228931,6.140362,-0.337871,2.710005,1.487822,3.034316,9.029558,-9.277781,-3.145990,3.432678,1.311541,-4.929784,6.224365,7.799896,3.295951,-5.867244,5.252858,4.216691,7.139169,0.082410,-4.062709,1.976874,9.967107,2.532245,-3.940933,2.882038,-9.575842]], dtype = "float64")#candidate|6174|(2, 432)|const|float64
call_6173 = relay.TupleGetItem(func_6004_call(relay.reshape(const_6174.astype('float64'), [8, 12, 9]), relay.reshape(const_6174.astype('float64'), [8, 12, 9]), ), 0)
call_6175 = relay.TupleGetItem(func_6008_call(relay.reshape(const_6174.astype('float64'), [8, 12, 9]), relay.reshape(const_6174.astype('float64'), [8, 12, 9]), ), 0)
output = relay.Tuple([call_6145,call_6166,call_6169,var_6170,call_6173,const_6174,])
output2 = relay.Tuple([call_6146,call_6167,call_6171,var_6170,call_6175,const_6174,])
func_6176 = relay.Function([var_6170,], output)
mod['func_6176'] = func_6176
mod = relay.transform.InferType()(mod)
var_6177 = relay.var("var_6177", dtype = "uint8", shape = (858,))#candidate|6177|(858,)|var|uint8
output = func_6176(var_6177)
func_6178 = relay.Function([var_6177], output)
mutated_mod['func_6178'] = func_6178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3802_call = mod.get_global_var('func_3802')
func_3803_call = mutated_mod.get_global_var('func_3803')
call_6244 = relay.TupleGetItem(func_3802_call(), 1)
call_6245 = relay.TupleGetItem(func_3803_call(), 1)
func_5899_call = mod.get_global_var('func_5899')
func_5901_call = mutated_mod.get_global_var('func_5901')
call_6246 = relay.TupleGetItem(func_5899_call(), 1)
call_6247 = relay.TupleGetItem(func_5901_call(), 1)
func_4133_call = mod.get_global_var('func_4133')
func_4135_call = mutated_mod.get_global_var('func_4135')
const_6253 = relay.const([9,-4,-7,2,-6,-9,4,9,-5,7,-1,8,-1,5,-5,5,-8,-6,-3,-3,7,-7,7,-10,2,-10,4,-1,3,10,6,3,-6,1,5,10,7,4,-3,6,-10,10,-6,-10,-7,-8,-8,1,8,-5,7,7,-1,9,5,-1,2,2,-2,-9,-3,-4,-8,4,8,-8,-3,10,-8,-1,-4,10,6,6,-4,-7,-3,-7,7,-6,-1,9,-9,-9,7,2,4,9,-3,8,-1,-6,7,5,5,8,-6,-9,7,4,5,5,-7,9,-1,-9,1,9,7,3,-7,-7,9,10,1,10,-9,7,-1,-7,-1,-7,10,-2,3,-10,-8,5,-10,-3,-10,-8,10,-6,2,-5,8,7,9,-6,7,-3,2,2,5,-2,10,4,5,-9,3,-2,-6,-10,2,-7,3,-4,8,-6,5,7,-10,-3,1,4,8,9,-6,-8,7,7,-7,-7,-1,7,-1,-9,-7,7,-8,4,-6,-9,3,1,7,2,-1,9,9,5,-2,2,1,-9,-8,-5,5,-9,3,8,9,2,-8,9,-8,-9,3,2,-9,-2,-4,-5,1,7,5,-6,7,2,10,5,8,-10,5,6,1,-5,5,3,-4,-3,-10,-1,6,2,-5,-6,1,5,-6,-2,-8,-3,4,10,8,7,2,-5,-1,4,6,-10,-6,2,5,10,-10,-8,-10,-2,-2,6,-7,2,-10,6,6,2,3,5,-8,3,9,4,-10,6,7,5,5,-4,6,8,7,6,-3,-8,-6,-3,-10,4,3,-1,-4,-4,8,1,-7,-7,-10,-4,6,8,-3,-6,-5,-3,2,9,-4,4,-1,5,-5,-4,-9,-8,10,-6,-6,-6,-5,-9,4,-1,-3,10,10,-3,2,-10,8,4,5,-1,-4,-1,-5,-4,-8,-9,1,-4,9,-8,7,-1,-7,4,-7,-2,-1,8,3,7,8,-4,-7,2,8,-6,7,1,-4,-5,-10,-10,7,-7,1,-4,1,-9,-6,6,-10,-2,-2,8,-10,7,-9,-10,-6,-7,-2,5,8,-4,5,-10,-4,2,7,-2,-5,4,-7,-10,-3,9,9,1,-9,4,6,-1,-6,6,4,-10,-8,-3,-9,7,2,-7,3,-8,2,-8,-6,9,-1,7,5,-2,-2,-8,-8,2,3,10,-7,8,-10,10,-5,-2,-5,2,6,3,-1,-8,-7,8,10,-8,6,-8,4,4,8,10,5,-3,7,9,-10,8,7,-9,-8,6,5,-2,-2,10,4,-3,-1,-10,-6,-10,-5,-4,-8,9,-10,-8,9,-5,8,-2,7,-1,-6,9,-1,-6,7,1,3,-9,-7,1,1,-8,3,-1,-9,-9,5,-7,-6,5,5,1,5,2,-1,7,-6,10,7,10,-4,-3,8,7,4,-9,5,-6,2,-10,8,-2,2,-8,3,-7,6,8,-9,-9,-5,2,10,10,-6,2,8,10,8,-9,5,-8,5,6,10,-6,4,7,-6,6,9,-5,4,7,3,-2,3,1,7,1,-3,-2,-5,-2,8,-2,-6,2,-4,1,-8,-8,-5,8,-8,-9,7,9,2,4,9,-5,-3,-4,-9,-4,8,-5,-3,-4,3,4,-5,-2,6,5,10,-2,-8,-1,9,-1,9,9,10,-5,-7,2,5,6,-8,9,-2,4,-5,-4,-2,3,-4,5,8,-6,-10,4,2,7,3,-1,-4,3,-10,6,-6,3,-3,-4,8,-7,-8,-4,-3,4,6,10,-2,1,-2,6,-8,-7,-7,4,-1,-6,2,-3,2,2,5,-7,-5,-1,-5,-8,-5,-6,6,-10,10,7,-7,-8,10,-6,-2,-1,3,-7,-6,3,-9,-6,8,-1,-5,10,-1,-2,10,3,2,2,-6,4,-3,-7,-6,7,-10,-10,-9,8,3,-10,-9,7,-8,5,-10,-8,-5,-5,-10,5,-3,7,-7,3,-7,5,7,-7,2,1,-10,5,5,-8,-2,-5,6,-6,-8,-5,1,1,1,-5,10,5,6,-5,7,6,-6,6,-4,7,1,-5,1,2,-3,-6,-2,3,8,9,-3,7,-5,-1,5,-10,-9,3,-2,5,10,8,-10,-10,-9,4,-1,9,-3,-6,8,9,1,-1,-4,8,-6,6,7,4,4,-6,-8,2,7,2,-3,5,2,9,-4,10,5,-6,3,-6,8,1,-1,1,-8,-3,5,-7,8,1,-6,10,10,-2,7,-9,4,-5,2,10,9,2,-3,-1,6,-1,-4,4,10,-6,-5,-2,-4,1,2,-5,-7,7,8,3,1,-8,8,10,7,-4,2,1,-4,-1,8,-9,4,8,-5,8,6,2,6,-3,7,-7,-3,4,-5,-6,-2,-9,-3,10,8,4,4,10,-8,-4,10,6,10,-1,-9,-7,1,9,10,10,7,-4,1,-10,-8,-6,4,2,-3,8,-9,3,10,4,9,-8,1,7,7,-1,-10,3,-8,-9,-5,1,1,-6,5,-10,7,3,1,7,7,-3,4,10,-1,1,7,2,5,8,-9,6,-8,3,7,9,8,1,-10,-2,-2,-6,6,-7,-7,2,-5,3,5,5,8,8,-6,7,-1,-6,3,-2,-2,-1,3,-9,10,-6,-10,7,-4,3,3,7,-1,7,-7,-3,5,9,7,-10,10,10,-6,-7,3,2,9,9,2,-4,-2,-9,-10,9,-4,4,5,-5,2,-9,1,-2,1,-8,7,6,-10,-10,-1,8,6,-3,-6,9,-10,5,-2,-10,8,9,-2,7,-8,-4,6,8,4,2,-10,1,3,-1,-5,-9,-3,-10,-3,-8,-6,2,4,3,-1,-9,-7,-1,8,-7,-3,6,7,10,5,-1,-10,-2,-2,2,9,4,-4,10,9,7,-6,-7,-10,-2,-6,-5,-7,1,-1,5,-4,10,6,-2,-7,-6,-1,-5,3,-6,-2,5,8,-9,9,-1,-4,5,-10,6,7,10,6,-10,3,-8,-7,-4,-1,7,6,-6,-10,-2,-7,8,10,-1,5,5,-7,3,-10,-2,10,2,7,8,-7,8,9,-8,-5,-7,-10,8,-9,-3,6,9,-5,1,7,9,-10,-9,-2,9,-6,8,3,7,-7,-9,8,-10,-9,4,2,1,2,-2,5,-4,2,-10,7,6,-8,8,5,8,9,-9,7,5,-9,6,2,8,-1,8,-4,2,9,7,-8,-7,8,9,7,-7,-3,-2,-2,-7], dtype = "int16")#candidate|6253|(1200,)|const|int16
call_6252 = relay.TupleGetItem(func_4133_call(relay.reshape(const_6253.astype('int16'), [1200,])), 0)
call_6254 = relay.TupleGetItem(func_4135_call(relay.reshape(const_6253.astype('int16'), [1200,])), 0)
func_5077_call = mod.get_global_var('func_5077')
func_5078_call = mutated_mod.get_global_var('func_5078')
call_6260 = func_5077_call()
call_6261 = func_5077_call()
const_6266 = relay.const([[[-9.241616,8.997648],[9.807554,1.059273],[-3.992267,1.609945]],[[4.641504,-0.330006],[6.758048,6.793346],[-7.357601,-3.564109]],[[6.000913,-7.066309],[-1.323484,6.739095],[4.306759,6.179328]],[[4.304954,-4.130120],[-7.347234,-4.173297],[6.998592,7.048529]],[[4.756676,-1.448481],[3.635701,0.404923],[-9.758938,9.942993]],[[9.614806,3.278254],[8.903286,0.674823],[7.678748,2.401210]],[[2.582607,4.187448],[-1.453987,4.769215],[-2.090513,0.467691]],[[9.231421,-8.349047],[5.476485,-1.781245],[-4.382069,1.239346]],[[-1.218570,1.377661],[-4.829503,8.691459],[-7.103608,-5.628190]],[[7.931500,-6.057347],[-7.547315,8.550384],[-6.040485,2.379524]],[[0.936114,0.223490],[3.411901,-5.542686],[6.979006,7.498823]],[[-1.215981,-8.994266],[-0.721100,8.400942],[-5.195067,0.811474]]], dtype = "float32")#candidate|6266|(12, 3, 2)|const|float32
bop_6267 = relay.bitwise_xor(call_6244.astype('int32'), relay.reshape(const_6266.astype('int32'), relay.shape_of(call_6244))) # shape=(12, 3, 2)
bop_6270 = relay.bitwise_xor(call_6245.astype('int32'), relay.reshape(const_6266.astype('int32'), relay.shape_of(call_6245))) # shape=(12, 3, 2)
func_2854_call = mod.get_global_var('func_2854')
func_2859_call = mutated_mod.get_global_var('func_2859')
var_6280 = relay.var("var_6280", dtype = "float64", shape = (36, 10))#candidate|6280|(36, 10)|var|float64
var_6281 = relay.var("var_6281", dtype = "float32", shape = (1680,))#candidate|6281|(1680,)|var|float32
var_6282 = relay.var("var_6282", dtype = "float32", shape = (1, 175))#candidate|6282|(1, 175)|var|float32
call_6279 = relay.TupleGetItem(func_2854_call(relay.reshape(var_6280.astype('float64'), [5, 12, 6]), relay.reshape(var_6281.astype('float32'), [1680,]), relay.reshape(var_6282.astype('float32'), [175,]), ), 3)
call_6283 = relay.TupleGetItem(func_2859_call(relay.reshape(var_6280.astype('float64'), [5, 12, 6]), relay.reshape(var_6281.astype('float32'), [1680,]), relay.reshape(var_6282.astype('float32'), [175,]), ), 3)
uop_6292 = relay.cos(var_6282.astype('float32')) # shape=(1, 175)
bop_6295 = relay.floor_divide(uop_6292.astype('float32'), relay.reshape(var_6282.astype('float32'), relay.shape_of(uop_6292))) # shape=(1, 175)
func_3585_call = mod.get_global_var('func_3585')
func_3587_call = mutated_mod.get_global_var('func_3587')
call_6305 = relay.TupleGetItem(func_3585_call(), 0)
call_6306 = relay.TupleGetItem(func_3587_call(), 0)
output = relay.Tuple([call_6246,call_6252,const_6253,call_6260,bop_6267,call_6279,var_6280,var_6281,bop_6295,call_6305,])
output2 = relay.Tuple([call_6247,call_6254,const_6253,call_6261,bop_6270,call_6283,var_6280,var_6281,bop_6295,call_6306,])
func_6308 = relay.Function([var_6280,var_6281,var_6282,], output)
mod['func_6308'] = func_6308
mod = relay.transform.InferType()(mod)
var_6309 = relay.var("var_6309", dtype = "float64", shape = (36, 10))#candidate|6309|(36, 10)|var|float64
var_6310 = relay.var("var_6310", dtype = "float32", shape = (1680,))#candidate|6310|(1680,)|var|float32
var_6311 = relay.var("var_6311", dtype = "float32", shape = (1, 175))#candidate|6311|(1, 175)|var|float32
output = func_6308(var_6309,var_6310,var_6311,)
func_6312 = relay.Function([var_6309,var_6310,var_6311,], output)
mutated_mod['func_6312'] = func_6312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5077_call = mod.get_global_var('func_5077')
func_5078_call = mutated_mod.get_global_var('func_5078')
call_6328 = func_5077_call()
call_6329 = func_5077_call()
output = relay.Tuple([call_6328,])
output2 = relay.Tuple([call_6329,])
func_6334 = relay.Function([], output)
mod['func_6334'] = func_6334
mod = relay.transform.InferType()(mod)
output = func_6334()
func_6335 = relay.Function([], output)
mutated_mod['func_6335'] = func_6335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6122_call = mod.get_global_var('func_6122')
func_6123_call = mutated_mod.get_global_var('func_6123')
call_6360 = func_6122_call()
call_6361 = func_6122_call()
output = call_6360
output2 = call_6361
func_6368 = relay.Function([], output)
mod['func_6368'] = func_6368
mod = relay.transform.InferType()(mod)
output = func_6368()
func_6369 = relay.Function([], output)
mutated_mod['func_6369'] = func_6369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4959_call = mod.get_global_var('func_4959')
func_4961_call = mutated_mod.get_global_var('func_4961')
call_6373 = func_4959_call()
call_6374 = func_4959_call()
func_4310_call = mod.get_global_var('func_4310')
func_4312_call = mutated_mod.get_global_var('func_4312')
var_6396 = relay.var("var_6396", dtype = "float32", shape = (6, 60))#candidate|6396|(6, 60)|var|float32
call_6395 = relay.TupleGetItem(func_4310_call(relay.reshape(var_6396.astype('float32'), [15, 2, 12])), 0)
call_6397 = relay.TupleGetItem(func_4312_call(relay.reshape(var_6396.astype('float32'), [15, 2, 12])), 0)
bop_6399 = relay.equal(call_6395.astype('bool'), relay.reshape(var_6396.astype('bool'), relay.shape_of(call_6395))) # shape=(15, 2, 12)
bop_6402 = relay.equal(call_6397.astype('bool'), relay.reshape(var_6396.astype('bool'), relay.shape_of(call_6397))) # shape=(15, 2, 12)
func_2181_call = mod.get_global_var('func_2181')
func_2183_call = mutated_mod.get_global_var('func_2183')
call_6406 = relay.TupleGetItem(func_2181_call(), 0)
call_6407 = relay.TupleGetItem(func_2183_call(), 0)
func_6053_call = mod.get_global_var('func_6053')
func_6056_call = mutated_mod.get_global_var('func_6056')
var_6418 = relay.var("var_6418", dtype = "int64", shape = (1350,))#candidate|6418|(1350,)|var|int64
call_6417 = func_6053_call(relay.reshape(var_6418.astype('int64'), [6, 15, 15]), relay.reshape(var_6418.astype('int64'), [6, 15, 15]), )
call_6419 = func_6053_call(relay.reshape(var_6418.astype('int64'), [6, 15, 15]), relay.reshape(var_6418.astype('int64'), [6, 15, 15]), )
output = relay.Tuple([call_6373,bop_6399,call_6406,call_6417,var_6418,])
output2 = relay.Tuple([call_6374,bop_6402,call_6407,call_6419,var_6418,])
func_6420 = relay.Function([var_6396,var_6418,], output)
mod['func_6420'] = func_6420
mod = relay.transform.InferType()(mod)
mutated_mod['func_6420'] = func_6420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6420_call = mutated_mod.get_global_var('func_6420')
var_6422 = relay.var("var_6422", dtype = "float32", shape = (6, 60))#candidate|6422|(6, 60)|var|float32
var_6423 = relay.var("var_6423", dtype = "int64", shape = (1350,))#candidate|6423|(1350,)|var|int64
call_6421 = func_6420_call(var_6422,var_6423,)
output = call_6421
func_6424 = relay.Function([var_6422,var_6423,], output)
mutated_mod['func_6424'] = func_6424
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6460 = relay.var("var_6460", dtype = "uint32", shape = (6, 1, 7))#candidate|6460|(6, 1, 7)|var|uint32
var_6461 = relay.var("var_6461", dtype = "uint32", shape = (6, 12, 7))#candidate|6461|(6, 12, 7)|var|uint32
bop_6462 = relay.bitwise_or(var_6460.astype('uint32'), var_6461.astype('uint32')) # shape=(6, 12, 7)
output = bop_6462
output2 = bop_6462
func_6466 = relay.Function([var_6460,var_6461,], output)
mod['func_6466'] = func_6466
mod = relay.transform.InferType()(mod)
var_6467 = relay.var("var_6467", dtype = "uint32", shape = (6, 1, 7))#candidate|6467|(6, 1, 7)|var|uint32
var_6468 = relay.var("var_6468", dtype = "uint32", shape = (6, 12, 7))#candidate|6468|(6, 12, 7)|var|uint32
output = func_6466(var_6467,var_6468,)
func_6469 = relay.Function([var_6467,var_6468,], output)
mutated_mod['func_6469'] = func_6469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2764_call = mod.get_global_var('func_2764')
func_2765_call = mutated_mod.get_global_var('func_2765')
call_6500 = relay.TupleGetItem(func_2764_call(), 0)
call_6501 = relay.TupleGetItem(func_2765_call(), 0)
output = call_6500
output2 = call_6501
func_6520 = relay.Function([], output)
mod['func_6520'] = func_6520
mod = relay.transform.InferType()(mod)
output = func_6520()
func_6521 = relay.Function([], output)
mutated_mod['func_6521'] = func_6521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1944_call = mod.get_global_var('func_1944')
func_1946_call = mutated_mod.get_global_var('func_1946')
call_6576 = relay.TupleGetItem(func_1944_call(), 0)
call_6577 = relay.TupleGetItem(func_1946_call(), 0)
func_4277_call = mod.get_global_var('func_4277')
func_4279_call = mutated_mod.get_global_var('func_4279')
call_6586 = relay.TupleGetItem(func_4277_call(), 0)
call_6587 = relay.TupleGetItem(func_4279_call(), 0)
output = relay.Tuple([call_6576,call_6586,])
output2 = relay.Tuple([call_6577,call_6587,])
func_6592 = relay.Function([], output)
mod['func_6592'] = func_6592
mod = relay.transform.InferType()(mod)
output = func_6592()
func_6593 = relay.Function([], output)
mutated_mod['func_6593'] = func_6593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3802_call = mod.get_global_var('func_3802')
func_3803_call = mutated_mod.get_global_var('func_3803')
call_6656 = relay.TupleGetItem(func_3802_call(), 0)
call_6657 = relay.TupleGetItem(func_3803_call(), 0)
output = relay.Tuple([call_6656,])
output2 = relay.Tuple([call_6657,])
func_6664 = relay.Function([], output)
mod['func_6664'] = func_6664
mod = relay.transform.InferType()(mod)
mutated_mod['func_6664'] = func_6664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6664_call = mutated_mod.get_global_var('func_6664')
call_6665 = func_6664_call()
output = call_6665
func_6666 = relay.Function([], output)
mutated_mod['func_6666'] = func_6666
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6675 = relay.var("var_6675", dtype = "int8", shape = ())#candidate|6675|()|var|int8
const_6676 = relay.const([[-9],[5],[7],[-3],[8]], dtype = "int8")#candidate|6676|(5, 1)|const|int8
bop_6677 = relay.equal(var_6675.astype('bool'), const_6676.astype('bool')) # shape=(5, 1)
output = bop_6677
output2 = bop_6677
func_6686 = relay.Function([var_6675,], output)
mod['func_6686'] = func_6686
mod = relay.transform.InferType()(mod)
mutated_mod['func_6686'] = func_6686
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6687 = relay.var("var_6687", dtype = "int8", shape = ())#candidate|6687|()|var|int8
func_6686_call = mutated_mod.get_global_var('func_6686')
call_6688 = func_6686_call(var_6687)
output = call_6688
func_6689 = relay.Function([var_6687], output)
mutated_mod['func_6689'] = func_6689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3585_call = mod.get_global_var('func_3585')
func_3587_call = mutated_mod.get_global_var('func_3587')
call_6710 = relay.TupleGetItem(func_3585_call(), 2)
call_6711 = relay.TupleGetItem(func_3587_call(), 2)
func_6664_call = mod.get_global_var('func_6664')
func_6666_call = mutated_mod.get_global_var('func_6666')
call_6712 = relay.TupleGetItem(func_6664_call(), 0)
call_6713 = relay.TupleGetItem(func_6666_call(), 0)
func_6334_call = mod.get_global_var('func_6334')
func_6335_call = mutated_mod.get_global_var('func_6335')
call_6716 = relay.TupleGetItem(func_6334_call(), 0)
call_6717 = relay.TupleGetItem(func_6335_call(), 0)
output = relay.Tuple([call_6710,call_6712,call_6716,])
output2 = relay.Tuple([call_6711,call_6713,call_6717,])
func_6718 = relay.Function([], output)
mod['func_6718'] = func_6718
mod = relay.transform.InferType()(mod)
mutated_mod['func_6718'] = func_6718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6718_call = mutated_mod.get_global_var('func_6718')
call_6719 = func_6718_call()
output = call_6719
func_6720 = relay.Function([], output)
mutated_mod['func_6720'] = func_6720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5899_call = mod.get_global_var('func_5899')
func_5901_call = mutated_mod.get_global_var('func_5901')
call_6772 = relay.TupleGetItem(func_5899_call(), 0)
call_6773 = relay.TupleGetItem(func_5901_call(), 0)
func_2753_call = mod.get_global_var('func_2753')
func_2756_call = mutated_mod.get_global_var('func_2756')
const_6833 = relay.const([-4.903503,5.006894,-4.185973,-4.131553,0.811220,2.792599,-4.821627,-7.195265,1.619998,9.695414,1.771436,7.198252,5.332042,7.766582,-6.552156,-0.205239,8.411104,4.976567,5.096976,-1.084037,9.596931,2.304881,3.029044,1.657395,-5.508902,-8.340669,-5.989844,0.433135,5.646337,-4.151686,-4.132500,-9.665000,-5.602485,1.018814,6.303519,-1.026821,9.163385,8.273576,5.180103,-5.386941,4.704626,-2.695936,-5.868055,-4.403146,-0.994953,0.017546,8.425342,-2.468847,9.582072,-4.475581,1.824703,0.751394,-2.868026,7.359237,7.523762,7.906916,-7.683132,0.339228,7.197801,-4.302446,-9.224384,-7.730729,-1.628999,-5.362088,-9.514212,-5.179503,5.710889,5.692527,-8.955085,-2.768814,-1.576638,1.226804,3.693359,0.251260,-5.109483,-1.687663,4.390828,-8.932172,5.243129,-5.600603,4.250374,9.384799,-7.672093,-9.781985,5.712371,0.067086,1.456528,-8.877379,0.610691,2.999173,-6.505112,-7.680379,4.836003,1.391339,7.381697,-1.781833,-7.680132,-9.315101,-4.372964,-5.183501,8.387737,3.695640,-1.379754,4.771342,1.990264,7.160600,-1.790382,-4.857980,-9.301292,-4.153709,0.229991,1.220369,-4.795018,-2.970007,-4.672083,-9.340873,-8.666653,-4.979716,1.549715,-7.371505,7.685861,-8.125181,-2.357519,0.134029,-4.066703,-7.151263,-6.350534,-6.203622,9.033581,-6.698907,5.892291,0.378771,-6.996425,-0.644023,9.939539,8.013699,-7.922310,-6.375363,-7.565105,9.426111,3.257271,-2.307314,3.065844,-2.907804,5.741323,7.737510,8.358564,9.230441,-2.317238,-2.492287,-9.138573,-9.923183,2.043737,6.178012,-0.687450,3.103021,8.829737,-8.795174,-0.549646,1.216645,5.442624,-2.835541,-7.331886,-2.602345,0.805345,-3.291654,-0.583240,-5.115575,-3.046020,9.489480,-8.921608,-9.112641,-7.949800,7.357590,-9.765987], dtype = "float32")#candidate|6833|(175,)|const|float32
call_6832 = relay.TupleGetItem(func_2753_call(relay.reshape(const_6833.astype('float32'), [175,])), 4)
call_6834 = relay.TupleGetItem(func_2756_call(relay.reshape(const_6833.astype('float32'), [175,])), 4)
func_2257_call = mod.get_global_var('func_2257')
func_2258_call = mutated_mod.get_global_var('func_2258')
call_6845 = relay.TupleGetItem(func_2257_call(), 0)
call_6846 = relay.TupleGetItem(func_2258_call(), 0)
output = relay.Tuple([call_6772,call_6832,const_6833,call_6845,])
output2 = relay.Tuple([call_6773,call_6834,const_6833,call_6846,])
func_6850 = relay.Function([], output)
mod['func_6850'] = func_6850
mod = relay.transform.InferType()(mod)
output = func_6850()
func_6851 = relay.Function([], output)
mutated_mod['func_6851'] = func_6851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3190_call = mod.get_global_var('func_3190')
func_3191_call = mutated_mod.get_global_var('func_3191')
call_6908 = func_3190_call()
call_6909 = func_3190_call()
var_6914 = relay.var("var_6914", dtype = "float32", shape = (14, 10, 12))#candidate|6914|(14, 10, 12)|var|float32
bop_6915 = relay.multiply(call_6908.astype('int32'), relay.reshape(var_6914.astype('int32'), relay.shape_of(call_6908))) # shape=(14, 10, 12)
bop_6918 = relay.multiply(call_6909.astype('int32'), relay.reshape(var_6914.astype('int32'), relay.shape_of(call_6909))) # shape=(14, 10, 12)
func_5555_call = mod.get_global_var('func_5555')
func_5558_call = mutated_mod.get_global_var('func_5558')
const_6923 = relay.const([-4.832356,-7.159274,3.137985,-5.975942,7.653865,-1.488376,-2.332194,5.113245,-7.930400,7.566636,-3.329863,-0.605841,5.495905,-7.308978], dtype = "float32")#candidate|6923|(14,)|const|float32
call_6922 = relay.TupleGetItem(func_5555_call(relay.reshape(const_6923.astype('float32'), [14,])), 6)
call_6924 = relay.TupleGetItem(func_5558_call(relay.reshape(const_6923.astype('float32'), [14,])), 6)
func_6420_call = mod.get_global_var('func_6420')
func_6424_call = mutated_mod.get_global_var('func_6424')
const_6937 = relay.const([7.513478,3.789393,-5.975951,4.687691,3.943223,3.438944,-4.738334,-0.032128,0.299364,3.469709,-0.243588,1.269595,-1.667970,6.753016,9.327195,-5.861376,5.124935,7.942790,6.117260,7.121482,-8.745049,4.592009,-9.618362,7.324769,-8.987583,-5.854021,9.740541,-6.926847,1.996858,2.161847,-2.428281,4.428250,0.889276,6.313488,-7.582662,5.515992,-6.152862,6.897621,-8.916629,-8.344815,-3.538034,0.275401,4.963375,7.599578,-1.418256,6.285978,-9.549107,-1.188455,-8.702334,-0.462129,-1.590642,8.639892,-1.549577,8.270683,1.620222,-4.685225,4.115917,8.957247,8.940929,9.067997,7.288802,-8.175236,-3.514979,-5.419311,-2.017621,1.301099,-7.775064,4.418905,1.779724,-0.497518,7.053008,-4.643226,-4.764694,8.964014,-1.340606,5.865598,2.014357,7.645805,7.876174,-6.832529,-4.086138,-1.078412,-1.544627,-7.166758,1.290744,-2.620192,2.461199,3.294632,-8.477745,2.757933,1.474582,1.085875,-6.066785,-4.876227,-5.896344,4.255687,-0.467277,0.704383,-9.540595,5.094490,-1.808184,-7.310628,-6.636387,-2.755597,-4.639775,-6.377282,-0.028471,-5.817197,-6.266523,-5.826927,-0.439536,-9.933355,-1.554970,0.607223,4.515335,-6.375407,3.203246,8.231582,-7.835055,-4.823168,6.306602,-7.327053,-5.078742,-1.264162,-7.542180,5.070755,-2.023323,6.396466,-5.360447,9.113271,1.559096,4.177641,-8.664517,2.057798,-8.571816,0.545331,-2.840968,-5.179933,1.750384,5.712597,2.915788,-8.779117,-0.187188,-4.008494,-3.514507,-8.572290,3.841522,-9.727972,-1.946718,-7.059376,-8.518643,-7.876910,-6.971170,9.263184,5.874636,1.377448,-2.197893,0.554150,9.353191,1.264200,9.802139,-6.256427,8.415223,2.637331,-2.713674,6.070839,3.995607,8.941633,-1.323147,8.908307,0.471160,-1.445722,-5.734728,7.566091,-9.885334,-8.538488,-0.738632,-3.233682,9.671142,-7.912590,-0.747361,-9.004740,0.001168,3.924465,2.725491,-1.085964,5.034063,-8.006175,-3.222867,1.122781,-3.847507,-9.598678,-7.660735,-4.079591,-0.104332,6.161310,-3.116416,0.007922,2.370649,4.509112,7.703523,-6.756954,7.644923,4.299436,-6.692459,-7.662551,-3.865658,2.191213,9.581109,-8.452302,-0.735631,-0.416738,-4.375689,5.629830,-8.600693,-3.377710,-2.997119,-6.899635,7.942263,6.020018,1.973935,-2.437412,-9.511856,-2.162881,6.699741,-4.591464,4.075597,9.498984,-0.064713,6.546554,2.860861,-3.641564,-8.396411,3.868296,-3.170143,2.804536,-8.442454,4.754087,-3.237097,7.846917,0.816791,9.564650,-2.252375,-0.018065,6.921145,-0.414381,8.679945,-4.229367,5.758397,1.899814,-5.697792,2.961453,-1.752972,-2.139347,3.272757,-9.026829,7.015435,3.634062,-9.217790,-3.830005,8.131831,1.932806,5.371636,6.890243,2.612700,3.905198,4.175894,5.325829,4.479362,-4.761004,7.562529,4.924570,8.261485,-7.236463,-9.731096,2.740972,2.344984,-7.393286,7.994624,-8.858357,-1.695226,-6.231131,-2.010404,4.969871,7.021321,-0.743223,4.780014,5.513996,-6.825975,-9.906822,-4.777501,6.463422,-7.768000,2.107949,8.100579,7.914659,8.343806,6.843232,9.806096,9.693080,1.909992,9.465898,-4.652552,7.683356,-1.420257,1.478009,9.687419,1.469035,4.310287,1.249967,-2.537301,-5.500587,4.563095,9.401146,4.707469,8.584812,3.725123,7.014821,-5.928977,-1.199767,-0.707284,5.013205,-0.830782,-6.851647,6.809822,-6.508870,-7.261547,7.870478,4.199851,-2.729406,-6.266424,4.825540,-5.497975,8.298486,5.596541,4.712888,4.750323,9.323712,9.302401,2.459834,-6.555607,-6.814836,9.557991,-8.661177,5.916641,7.926941,-9.432353,0.074449,8.452426,0.415547,-9.107701,-8.743782,-3.843389,-5.375433,6.101795,-6.398487,9.241886,-5.550996,8.359877,6.314280], dtype = "float32")#candidate|6937|(360,)|const|float32
const_6938 = relay.const([[-8,3,-4,7,9,-9,5,7,-1,-8],[5,-1,-2,-2,3,-5,4,-2,10,-8],[-7,1,-8,-3,-9,5,9,-8,-9,7],[4,-10,-10,7,-6,-1,1,-4,-10,-7],[7,4,-10,-8,3,-10,7,-7,4,9],[8,-2,1,7,2,2,-8,7,1,6],[1,10,5,7,1,9,7,10,5,1],[1,-7,4,-6,9,6,7,-2,-3,-10],[-6,-6,10,2,3,-3,1,-5,3,-7],[-5,-6,2,3,-8,2,3,8,-5,-9],[6,-5,1,1,3,-10,-4,1,4,-1],[-8,-6,-10,4,-7,-4,-4,-1,10,3],[-1,-4,-1,10,2,10,4,-2,-2,-2],[9,3,6,10,-3,1,-8,-8,-1,-4],[10,2,-10,10,1,3,7,-5,8,-7],[10,7,-5,7,-5,-9,-7,-1,-5,10],[-1,10,-7,-1,2,-7,7,10,-1,6],[-10,-1,7,-5,-2,-10,6,-1,5,-9],[1,9,10,-10,8,4,-10,-6,-8,-1],[6,3,1,6,-7,3,10,6,3,8],[-1,-1,1,9,-10,10,-2,-7,-9,3],[9,6,9,-7,9,6,-10,-2,-6,-10],[3,-2,1,2,-4,5,-10,-3,2,-1],[-9,-10,4,10,7,4,-10,-9,-8,2],[-5,-5,8,3,-2,-3,-3,-10,7,7],[-1,-5,9,-3,-2,-9,2,1,-4,1],[1,8,7,1,9,-9,8,3,-6,2],[-1,-7,5,-2,4,-6,7,1,2,-9],[7,-3,-2,10,-3,9,3,9,-6,8],[6,9,8,9,-9,2,6,10,-2,-5],[-5,10,-2,8,10,10,-2,9,-8,-1],[-7,-2,8,9,2,-4,-10,-5,-3,-10],[8,1,10,1,8,-4,5,-8,-8,5],[-2,-9,5,-5,-8,3,7,-8,-4,3],[-1,7,-3,-10,-1,-4,-4,-5,8,9],[-5,6,4,6,-4,-10,-8,-2,-1,3],[-7,-6,10,2,-1,8,3,7,9,-5],[-4,10,3,2,-4,7,2,4,3,3],[-7,2,-6,-7,-4,-10,9,-10,-1,6],[9,-7,-7,4,7,7,-10,-3,-8,5],[-5,10,-6,6,-5,3,8,-5,-10,-8],[-6,-2,4,5,8,-1,5,-6,-2,-8],[-7,-8,-10,-3,-2,9,7,-4,-7,-10],[9,7,-5,-2,-5,3,-1,10,-6,4],[-5,-7,2,-1,10,-1,5,10,-1,8],[-5,2,3,-7,-5,8,4,2,7,-5],[9,6,4,-5,-10,-2,3,1,6,-7],[-1,-2,-8,-2,-2,-2,3,-6,-3,3],[-5,10,-9,-3,1,7,-5,-8,5,-8],[7,9,-7,8,-7,5,5,9,-6,-10],[-2,-8,8,-10,6,-10,-9,2,4,-7],[-10,-3,6,3,-4,-9,-2,3,-5,-2],[2,-5,-1,-8,8,7,6,4,-2,5],[10,2,3,1,-10,-2,-5,5,7,-2],[-9,-4,9,-10,-7,-8,-1,10,-8,5],[-3,4,5,1,-5,6,4,-10,1,5],[-4,-6,5,-10,-6,5,-1,5,-8,-7],[-3,-6,4,9,5,3,9,4,-7,9],[7,-3,2,-4,8,5,4,-8,9,-4],[-3,2,8,8,-10,1,2,6,3,6],[1,5,-7,4,2,10,6,-7,-10,2],[-3,-7,-6,-9,-3,2,-8,-9,-10,1],[-10,-7,-5,-3,-1,-4,5,-9,6,-1],[5,-5,10,8,-7,-4,-1,3,9,-2],[-8,-5,8,5,-4,-3,10,1,-1,2],[9,-5,10,8,-4,10,-5,-7,10,8],[-10,2,10,2,2,9,1,-2,2,10],[10,-7,6,-9,8,2,-10,-8,6,2],[-5,1,-5,-8,-5,-10,-8,-10,-1,-3],[-10,-6,7,-1,-3,5,5,5,9,6],[2,8,3,6,-9,-2,4,-9,2,-8],[-4,7,8,-1,5,-10,-5,9,-6,-3],[-6,4,-5,-2,5,-3,2,-2,2,-7],[1,4,-4,4,-1,-5,-4,-8,-3,5],[10,-9,-10,3,4,-8,5,-1,-8,9],[5,-6,-2,-7,3,-3,2,7,4,-5],[-10,-5,7,-6,-2,2,-8,6,3,2],[-9,-10,8,-4,-9,-1,10,-6,2,1],[8,3,2,-5,-7,10,4,7,-9,-4],[-10,9,-3,-8,-10,2,2,3,7,8],[5,-7,10,-10,-5,-9,-1,4,5,10],[-10,-3,-8,-6,-4,-6,-2,7,9,3],[2,-8,2,7,-5,-5,9,-7,4,-1],[-6,9,-2,-2,-4,4,6,-10,-5,6],[-6,-4,8,-4,-3,-5,2,8,10,4],[4,-1,9,7,-10,3,-5,-3,-10,-9],[1,-3,8,6,3,2,-5,6,-6,-7],[9,2,-1,-8,1,-6,-9,-5,2,5],[-9,-1,-1,8,3,4,9,5,-3,1],[-8,6,5,6,-1,3,7,-4,-2,-8],[10,-6,-9,9,3,8,6,-1,-5,10],[-8,-8,6,5,-4,4,6,3,10,9],[-1,-7,3,9,2,6,10,-5,5,8],[-5,-5,4,-8,9,10,-4,-8,2,7],[-7,-6,-6,-7,4,-10,8,8,3,-6],[3,6,-2,6,-4,-2,5,-9,-10,4],[10,1,-1,-9,6,9,-3,1,-9,-1],[-2,-3,-10,10,7,-6,-7,-4,-7,-3],[2,6,-6,3,4,8,9,-2,4,-1],[-5,-7,-3,3,5,6,-7,-5,9,-10],[-1,8,-10,9,4,2,-8,-6,-1,2],[4,-5,10,5,7,-2,-4,8,-3,-5],[-10,10,9,8,2,7,-6,8,4,5],[9,-10,10,-6,-9,-1,1,7,-7,9],[3,-7,10,-8,9,8,1,-2,7,5],[10,-5,9,-10,-6,-6,-6,-1,8,-3],[-1,6,8,-4,-5,-3,6,5,-1,-10],[3,8,-8,-8,-6,-3,1,-2,5,-5],[6,-5,-5,8,3,-3,-5,-6,7,9],[-4,-4,-2,-5,2,-9,-8,-3,-5,1],[8,-6,4,-3,-7,-6,-7,-9,7,-7],[-6,9,1,8,-10,7,10,8,7,-5],[-6,-9,-1,1,2,7,4,-1,8,2],[8,-6,3,2,-7,-8,10,-7,6,1],[6,8,-5,-7,-8,-1,-8,-5,-2,5],[-6,4,10,6,-1,-6,4,7,2,-2],[-2,-7,1,3,10,5,-1,-9,2,9],[-2,-10,-6,6,10,-8,-3,3,8,-9],[6,-4,5,-9,1,-2,-10,9,-1,4],[5,4,-9,-1,-4,7,6,-6,7,10],[3,10,8,1,-6,-9,-7,8,9,-4],[10,3,-5,7,-6,9,-10,-5,10,-8],[-1,7,1,5,-5,-4,-10,-10,-8,6],[-5,5,6,6,4,-4,10,-4,-9,2],[7,8,5,-4,-5,8,7,-7,-1,-9],[-6,1,-6,-8,3,-8,6,-10,4,-5],[-6,10,6,6,-10,-6,10,2,-2,1],[-8,8,5,-8,-3,9,-6,5,-8,-1],[8,3,-5,-5,3,4,7,9,1,-2],[-8,8,-1,8,-1,-6,-4,-8,3,-8],[9,2,-4,-7,-8,-3,-1,-2,1,-10],[9,-3,6,-2,5,9,-1,-2,-4,2],[-10,-8,-6,-3,-10,-1,-10,2,8,-9],[5,8,1,-3,-1,-4,-1,-3,-5,-6],[-9,6,3,-7,3,5,6,-5,3,1]], dtype = "int64")#candidate|6938|(135, 10)|const|int64
call_6936 = relay.TupleGetItem(func_6420_call(relay.reshape(const_6937.astype('float32'), [6, 60]), relay.reshape(const_6938.astype('int64'), [1350,]), ), 0)
call_6939 = relay.TupleGetItem(func_6424_call(relay.reshape(const_6937.astype('float32'), [6, 60]), relay.reshape(const_6938.astype('int64'), [1350,]), ), 0)
func_4727_call = mod.get_global_var('func_4727')
func_4729_call = mutated_mod.get_global_var('func_4729')
call_6951 = relay.TupleGetItem(func_4727_call(), 0)
call_6952 = relay.TupleGetItem(func_4729_call(), 0)
var_6961 = relay.var("var_6961", dtype = "int32", shape = (14, 10, 12))#candidate|6961|(14, 10, 12)|var|int32
bop_6962 = relay.not_equal(bop_6915.astype('bool'), relay.reshape(var_6961.astype('bool'), relay.shape_of(bop_6915))) # shape=(14, 10, 12)
bop_6965 = relay.not_equal(bop_6918.astype('bool'), relay.reshape(var_6961.astype('bool'), relay.shape_of(bop_6918))) # shape=(14, 10, 12)
output = relay.Tuple([call_6922,const_6923,call_6936,const_6937,const_6938,call_6951,bop_6962,])
output2 = relay.Tuple([call_6924,const_6923,call_6939,const_6937,const_6938,call_6952,bop_6965,])
func_6969 = relay.Function([var_6914,var_6961,], output)
mod['func_6969'] = func_6969
mod = relay.transform.InferType()(mod)
var_6970 = relay.var("var_6970", dtype = "float32", shape = (14, 10, 12))#candidate|6970|(14, 10, 12)|var|float32
var_6971 = relay.var("var_6971", dtype = "int32", shape = (14, 10, 12))#candidate|6971|(14, 10, 12)|var|int32
output = func_6969(var_6970,var_6971,)
func_6972 = relay.Function([var_6970,var_6971,], output)
mutated_mod['func_6972'] = func_6972
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6974 = relay.const([[[1.043848,-6.115915,-3.364623,9.319153,3.558485,-1.551818,-9.083411],[1.047121,-5.348885,-9.682136,-8.323427,-4.751989,-6.227993,5.738001]],[[-0.368321,8.682648,6.493379,-6.457440,5.303297,7.956060,8.083319],[9.537387,1.527385,-5.357775,7.396293,2.417402,5.662952,-6.498576]],[[-7.422853,-9.920826,-5.732625,-4.786732,2.351011,2.166201,-4.431213],[-4.601845,1.682647,2.512563,-2.766163,-2.182734,-4.780159,7.298294]],[[0.441575,-1.509056,-3.576832,-0.463138,-0.908244,-3.109455,1.442075],[-9.693511,-1.442407,5.925747,0.884150,2.190446,-3.760155,7.721829]],[[0.121098,2.522646,-9.068309,-7.225551,-2.457270,5.227348,-8.960241],[-6.095392,7.063470,0.796687,0.753850,5.633668,-1.176723,-3.155358]],[[-9.818369,0.802538,1.548936,-4.800123,-3.344827,-0.621153,2.817079],[-8.524847,4.715457,3.726627,9.941239,7.998306,1.738511,3.945470]]], dtype = "float32")#candidate|6974|(6, 2, 7)|const|float32
uop_6975 = relay.cos(const_6974.astype('float32')) # shape=(6, 2, 7)
const_6980 = relay.const([[[6.263080,-3.458385,6.047548,-8.911786,3.761278,2.123953,-0.120146],[6.980072,3.317858,-1.231212,1.224811,-8.649383,7.814650,-8.424216]],[[0.019269,6.217990,-0.272424,-0.836425,-8.661088,5.673824,-5.273860],[0.051243,1.000033,-5.953855,2.109337,-4.780707,-8.500494,5.605261]],[[-2.244643,9.220936,8.309285,8.167098,9.201806,5.757459,-9.679397],[8.688640,2.793488,1.570123,2.774555,3.120019,-0.849001,4.960771]],[[-2.212639,-3.148949,7.144568,-5.940089,-5.920273,-6.902625,8.192342],[-7.574794,-2.472022,-3.485107,-4.129641,-0.385608,-9.415089,-2.792206]],[[-5.521708,6.520811,-4.382017,7.161908,-8.031561,-6.730007,5.266792],[-0.431251,-7.868629,-5.615965,-3.065296,-1.870492,-2.757296,-6.473000]],[[-7.180020,5.679154,1.319776,-7.891088,-2.000995,1.727127,8.372547],[-1.269729,-1.416655,-5.711806,1.226154,-8.051948,8.489683,-2.393615]]], dtype = "float32")#candidate|6980|(6, 2, 7)|const|float32
bop_6981 = relay.floor_mod(uop_6975.astype('float64'), relay.reshape(const_6980.astype('float64'), relay.shape_of(uop_6975))) # shape=(6, 2, 7)
bop_6985 = relay.add(uop_6975.astype('uint16'), relay.reshape(const_6980.astype('uint16'), relay.shape_of(uop_6975))) # shape=(6, 2, 7)
func_6334_call = mod.get_global_var('func_6334')
func_6335_call = mutated_mod.get_global_var('func_6335')
call_7003 = relay.TupleGetItem(func_6334_call(), 0)
call_7004 = relay.TupleGetItem(func_6335_call(), 0)
output = relay.Tuple([bop_6981,bop_6985,call_7003,])
output2 = relay.Tuple([bop_6981,bop_6985,call_7004,])
func_7005 = relay.Function([], output)
mod['func_7005'] = func_7005
mod = relay.transform.InferType()(mod)
output = func_7005()
func_7006 = relay.Function([], output)
mutated_mod['func_7006'] = func_7006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3021_call = mod.get_global_var('func_3021')
func_3023_call = mutated_mod.get_global_var('func_3023')
call_7072 = relay.TupleGetItem(func_3021_call(), 0)
call_7073 = relay.TupleGetItem(func_3023_call(), 0)
output = relay.Tuple([call_7072,])
output2 = relay.Tuple([call_7073,])
func_7074 = relay.Function([], output)
mod['func_7074'] = func_7074
mod = relay.transform.InferType()(mod)
output = func_7074()
func_7075 = relay.Function([], output)
mutated_mod['func_7075'] = func_7075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4560_call = mod.get_global_var('func_4560')
func_4562_call = mutated_mod.get_global_var('func_4562')
call_7083 = relay.TupleGetItem(func_4560_call(), 0)
call_7084 = relay.TupleGetItem(func_4562_call(), 0)
output = call_7083
output2 = call_7084
func_7095 = relay.Function([], output)
mod['func_7095'] = func_7095
mod = relay.transform.InferType()(mod)
mutated_mod['func_7095'] = func_7095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7095_call = mutated_mod.get_global_var('func_7095')
call_7096 = func_7095_call()
output = call_7096
func_7097 = relay.Function([], output)
mutated_mod['func_7097'] = func_7097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5709_call = mod.get_global_var('func_5709')
func_5710_call = mutated_mod.get_global_var('func_5710')
call_7101 = relay.TupleGetItem(func_5709_call(), 0)
call_7102 = relay.TupleGetItem(func_5710_call(), 0)
func_1635_call = mod.get_global_var('func_1635')
func_1636_call = mutated_mod.get_global_var('func_1636')
call_7113 = func_1635_call()
call_7114 = func_1635_call()
output = relay.Tuple([call_7101,call_7113,])
output2 = relay.Tuple([call_7102,call_7114,])
func_7128 = relay.Function([], output)
mod['func_7128'] = func_7128
mod = relay.transform.InferType()(mod)
output = func_7128()
func_7129 = relay.Function([], output)
mutated_mod['func_7129'] = func_7129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3515_call = mod.get_global_var('func_3515')
func_3516_call = mutated_mod.get_global_var('func_3516')
call_7141 = func_3515_call()
call_7142 = func_3515_call()
uop_7143 = relay.acos(call_7141.astype('float32')) # shape=(6, 8, 11)
uop_7145 = relay.acos(call_7142.astype('float32')) # shape=(6, 8, 11)
output = uop_7143
output2 = uop_7145
func_7147 = relay.Function([], output)
mod['func_7147'] = func_7147
mod = relay.transform.InferType()(mod)
output = func_7147()
func_7148 = relay.Function([], output)
mutated_mod['func_7148'] = func_7148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4727_call = mod.get_global_var('func_4727')
func_4729_call = mutated_mod.get_global_var('func_4729')
call_7155 = relay.TupleGetItem(func_4727_call(), 0)
call_7156 = relay.TupleGetItem(func_4729_call(), 0)
output = call_7155
output2 = call_7156
func_7157 = relay.Function([], output)
mod['func_7157'] = func_7157
mod = relay.transform.InferType()(mod)
mutated_mod['func_7157'] = func_7157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7157_call = mutated_mod.get_global_var('func_7157')
call_7158 = func_7157_call()
output = call_7158
func_7159 = relay.Function([], output)
mutated_mod['func_7159'] = func_7159
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7160 = relay.var("var_7160", dtype = "float32", shape = (7, 6, 6))#candidate|7160|(7, 6, 6)|var|float32
uop_7161 = relay.sinh(var_7160.astype('float32')) # shape=(7, 6, 6)
func_6686_call = mod.get_global_var('func_6686')
func_6689_call = mutated_mod.get_global_var('func_6689')
const_7180 = relay.const(7, dtype = "int8")#candidate|7180|()|const|int8
call_7179 = func_6686_call(relay.reshape(const_7180.astype('int8'), []))
call_7181 = func_6686_call(relay.reshape(const_7180.astype('int8'), []))
func_4310_call = mod.get_global_var('func_4310')
func_4312_call = mutated_mod.get_global_var('func_4312')
var_7194 = relay.var("var_7194", dtype = "float32", shape = (6, 60))#candidate|7194|(6, 60)|var|float32
call_7193 = relay.TupleGetItem(func_4310_call(relay.reshape(var_7194.astype('float32'), [15, 2, 12])), 0)
call_7195 = relay.TupleGetItem(func_4312_call(relay.reshape(var_7194.astype('float32'), [15, 2, 12])), 0)
bop_7212 = relay.mod(uop_7161.astype('float32'), const_7180.astype('float32')) # shape=(7, 6, 6)
output = relay.Tuple([call_7179,call_7193,var_7194,bop_7212,])
output2 = relay.Tuple([call_7181,call_7195,var_7194,bop_7212,])
func_7222 = relay.Function([var_7160,var_7194,], output)
mod['func_7222'] = func_7222
mod = relay.transform.InferType()(mod)
mutated_mod['func_7222'] = func_7222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7222_call = mutated_mod.get_global_var('func_7222')
var_7224 = relay.var("var_7224", dtype = "float32", shape = (7, 6, 6))#candidate|7224|(7, 6, 6)|var|float32
var_7225 = relay.var("var_7225", dtype = "float32", shape = (6, 60))#candidate|7225|(6, 60)|var|float32
call_7223 = func_7222_call(var_7224,var_7225,)
output = call_7223
func_7226 = relay.Function([var_7224,var_7225,], output)
mutated_mod['func_7226'] = func_7226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2261_call = mod.get_global_var('func_2261')
func_2263_call = mutated_mod.get_global_var('func_2263')
call_7269 = func_2261_call()
call_7270 = func_2261_call()
func_5810_call = mod.get_global_var('func_5810')
func_5812_call = mutated_mod.get_global_var('func_5812')
call_7296 = func_5810_call()
call_7297 = func_5810_call()
func_324_call = mod.get_global_var('func_324')
func_327_call = mutated_mod.get_global_var('func_327')
var_7301 = relay.var("var_7301", dtype = "float32", shape = (35, 5))#candidate|7301|(35, 5)|var|float32
call_7300 = relay.TupleGetItem(func_324_call(relay.reshape(var_7301.astype('float32'), [5, 5, 7])), 2)
call_7302 = relay.TupleGetItem(func_327_call(relay.reshape(var_7301.astype('float32'), [5, 5, 7])), 2)
output = relay.Tuple([call_7269,call_7296,call_7300,var_7301,])
output2 = relay.Tuple([call_7270,call_7297,call_7302,var_7301,])
func_7312 = relay.Function([var_7301,], output)
mod['func_7312'] = func_7312
mod = relay.transform.InferType()(mod)
mutated_mod['func_7312'] = func_7312
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7313 = relay.var("var_7313", dtype = "float32", shape = (35, 5))#candidate|7313|(35, 5)|var|float32
func_7312_call = mutated_mod.get_global_var('func_7312')
call_7314 = func_7312_call(var_7313)
output = call_7314
func_7315 = relay.Function([var_7313], output)
mutated_mod['func_7315'] = func_7315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1716_call = mod.get_global_var('func_1716')
func_1717_call = mutated_mod.get_global_var('func_1717')
call_7333 = func_1716_call()
call_7334 = func_1716_call()
func_6053_call = mod.get_global_var('func_6053')
func_6056_call = mutated_mod.get_global_var('func_6056')
const_7349 = relay.const([5,-10,5,9,-1,-2,-7,7,2,5,-2,4,-5,9,8,10,7,10,-10,-7,-8,-5,4,8,-5,2,9,7,10,2,2,-1,2,5,2,6,-9,-6,4,8,6,9,5,-7,-2,3,3,-6,-7,8,3,9,4,4,9,9,2,-1,6,4,-9,5,-4,6,4,-3,9,-8,7,-2,5,-4,-3,-6,4,-10,-10,4,8,5,5,6,10,-8,-5,7,-4,-7,-7,8,6,4,-3,-7,-10,10,10,1,1,9,10,5,7,2,8,5,8,-9,-10,1,-1,-7,-8,-3,10,4,-7,5,-5,-10,-7,-7,6,7,2,-10,-8,4,-7,-4,8,-6,-8,-1,-8,-6,-5,3,6,-1,-7,-1,-8,-2,1,-2,5,-4,-9,-8,7,5,4,5,-5,10,9,-8,6,4,7,6,5,8,6,-2,-7,-5,4,-5,-10,2,8,-6,1,4,7,-3,2,10,-5,-1,1,5,7,4,-7,-7,-6,1,-5,9,-7,-6,-2,-4,-9,1,-2,5,8,-7,4,2,-6,-1,-10,-3,-1,-3,-7,1,-6,8,-3,-7,2,8,7,8,-6,4,-9,2,-10,-2,6,5,-10,-9,-7,3,-2,5,-4,-5,-2,-6,-8,1,-7,-6,-10,4,5,-2,4,10,-8,-7,8,1,-1,-10,-7,-8,6,7,7,4,9,-4,1,8,1,-2,-7,8,1,-8,1,-3,10,-2,3,8,-2,-4,-6,-4,8,-5,-6,3,-3,6,-7,-2,8,3,-10,5,3,6,-2,8,6,-6,-6,-10,2,-6,6,7,2,7,-2,5,-4,5,-3,7,-6,-2,4,5,9,-4,-7,-10,10,10,-2,7,6,-1,7,-8,2,7,-1,1,-4,-8,-5,-10,8,9,5,-7,2,-1,7,-3,-9,-7,5,-2,-3,9,-9,-7,1,8,-5,-10,-4,-3,-10,1,7,10,6,-10,-2,-10,-10,-7,-4,10,9,-4,2,-5,-6,-2,4,6,5,2,-6,8,9,8,10,3,-9,2,6,6,4,6,1,10,9,1,4,1,5,-9,9,-4,-8,-2,6,8,-7,7,-8,1,-1,-1,6,-10,-1,-5,10,-1,-10,3,-2,-3,7,6,-1,1,3,-8,-5,-7,-9,9,6,6,-6,9,3,-8,3,6,-10,7,10,-10,6,-3,4,2,3,-5,10,8,7,4,7,6,-8,3,-8,2,4,9,-7,-9,1,-1,7,4,3,-6,9,-2,-4,-2,-9,6,-10,-3,-6,-9,-4,7,10,-7,-1,-7,-6,-7,5,-5,-6,8,-8,4,3,2,-6,1,2,10,3,-8,-6,1,4,6,9,-5,6,2,7,-5,4,-8,5,4,3,7,4,-1,-6,-8,10,3,-7,3,10,6,5,-2,9,-8,-7,4,-3,-2,1,-3,3,6,2,3,-1,-5,10,7,-3,-6,10,-4,6,-1,3,-9,-1,-10,6,2,-2,-2,-4,4,3,-10,1,-5,9,3,1,2,-6,-2,6,8,1,-10,2,-6,7,10,-1,4,-1,6,8,-4,10,7,-10,-4,8,7,10,-4,1,-5,-9,4,6,3,-8,10,-1,-4,5,-3,1,-4,-5,-10,-4,-1,-3,-4,7,-5,-4,-2,6,-7,3,-6,10,-9,-8,-1,1,-5,1,5,7,-2,7,-6,-2,-5,-3,-1,-3,-7,-9,-5,-2,-7,10,-10,4,-7,-6,5,8,-2,5,1,6,-8,6,-7,4,3,6,2,-3,-10,-4,6,-8,-10,-2,8,-8,-2,2,5,3,-1,-1,-8,1,-5,6,-6,10,5,8,-1,-4,3,2,1,7,-6,-4,-5,6,-4,1,-7,6,4,-7,-10,-8,6,-10,7,8,6,-8,1,-10,6,-4,4,-5,4,3,-3,-7,-1,6,6,1,-10,-2,-3,-5,-8,10,-9,-10,6,-6,-4,-8,2,3,9,-10,3,9,8,2,1,8,6,-2,1,3,-3,-10,-8,2,7,6,8,5,-9,4,1,-9,-9,-1,-9,4,9,6,7,7,-4,3,10,9,-6,-9,-4,4,-1,2,3,-1,-9,2,-9,-1,1,6,-3,1,8,6,2,5,-7,3,-4,4,3,3,-4,6,8,7,7,-3,-9,8,9,3,2,-9,10,4,-9,7,1,7,5,3,1,6,-4,-1,10,10,10,10,3,7,-1,3,8,-3,7,5,-1,10,-7,-8,-5,-9,-8,-8,3,10,10,7,-7,-10,-8,2,6,-7,-3,8,-5,-4,7,3,5,-5,-9,2,-7,-2,-5,-6,-6,-4,8,-6,10,-4,-2,-9,10,-2,8,-9,-6,10,3,2,9,-8,-1,-7,-6,8,-8,5,-2,-1,10,-7,-8,8,3,3,-8,-8,-9,10,6,1,6,3,4,-8,3,1,-2,-5,8,8,2,7,-1,-7,6,2,-6,1,1,4,-7,-5,1,6,1,7,2,-5,10,1,-1,-9,-7,7,-10,-2,-6,-7,-1,8,9,-5,9,5,3,-7,-8,-3,7,-5,-3,-5,7,5,5,10,-9,8,-7,9,-10,6,3,4,-9,6,-7,-10,2,-2,9,4,7,5,-4,3,1,3,1,3,-8,4,1,-10,9,4,4,-3,-8,4,-5,8,-8,-9,8,-1,-2,-4,8,7,-7,-3,-9,-1,-7,10,2,9,9,-1,9,-5,-6,5,2,9,-5,10,1,2,6,1,10,-10,-7,5,-2,8,-9,1,-6,-1,-5,4,4,-3,8,8,3,6,-8,5,-3,-9,-5,-6,-1,2,9,1,2,4,7,7,-10,7,7,-2,-4,-5,-1,9,-9,9,9,-3,-3,10,-9,-9,1,10,7,-10,-3,1,-7,8,-1,8,-7,10,10,-8,-8,-9,-3,1,-1,3,8,-7,-2,1,-2,-5,9,-6,9,9,3,10,-7,7,2,3,2,4,-5,-9,-3,-5,-4,-3,-9,2,-2,-9,3,-8,-4,4,-1,9,-3,-4,-7,-3,1,3,10,-3,10,-1,8,8,10,-7,10,6,6,-10,-8,3,-10,-1,-4,3,8,6,3,7,6,2,-10,9,-6,-9,3,4,-8,4,-3,7,10,7,-7,-5,-8,3,5,6,-3,8,4,-1,-8,6,3,3,7,7,4,-1,10,2,5,7,-10,-4,-6,9,-2,-7,8,-6,-10,1,4,-8,-5,10,-8,-6,3,-5,6,6,10,-3,-3,-5,4,9,-9,4,7,2,2,-4,-9,-5,2,3,3,2,6,1,5,-8,4,6,4,7,-5,1,9,-1,7,2,-1,-8,-4,-5,-8,1,2,3,5,-4,-10,-8,-4,9,4,-3,-8,10,-9,-8,7,-1,7,9,-4,6,-1,-1,3,6,1,-10,10,10,-6,-8,-10,-4,-3,-10,-7,10,-1,2,-3,1,8,5,-3,9,5,-4,6,-3,2,-7,10,-6,-10,-6,9,-1,1,6,2,3,5,-4,5,2,-1,-6,-8,-3,-5,3,6,-2,1,1,5,3,-3,-3,-2,-6,5,3,6,-2,-7,-4,1,2,-6,-5,8,3,3,-10,2,-10,-9,2,1], dtype = "int64")#candidate|7349|(1350,)|const|int64
call_7348 = func_6053_call(relay.reshape(const_7349.astype('int64'), [6, 15, 15]), relay.reshape(const_7349.astype('int64'), [6, 15, 15]), )
call_7350 = func_6053_call(relay.reshape(const_7349.astype('int64'), [6, 15, 15]), relay.reshape(const_7349.astype('int64'), [6, 15, 15]), )
output = relay.Tuple([call_7333,call_7348,const_7349,])
output2 = relay.Tuple([call_7334,call_7350,const_7349,])
func_7379 = relay.Function([], output)
mod['func_7379'] = func_7379
mod = relay.transform.InferType()(mod)
mutated_mod['func_7379'] = func_7379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7379_call = mutated_mod.get_global_var('func_7379')
call_7380 = func_7379_call()
output = call_7380
func_7381 = relay.Function([], output)
mutated_mod['func_7381'] = func_7381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4860_call = mod.get_global_var('func_4860')
func_4861_call = mutated_mod.get_global_var('func_4861')
call_7397 = relay.TupleGetItem(func_4860_call(), 0)
call_7398 = relay.TupleGetItem(func_4861_call(), 0)
func_6053_call = mod.get_global_var('func_6053')
func_6056_call = mutated_mod.get_global_var('func_6056')
const_7415 = relay.const([[-8],[-5],[4],[1],[4],[-8],[10],[-8],[6],[-7],[-6],[2],[-7],[-5],[-8],[-8],[-3],[-3],[-4],[-6],[-8],[5],[-4],[6],[-10],[5],[-9],[8],[-1],[9],[-1],[-6],[-2],[3],[3],[-4],[-6],[10],[-1],[-2],[-3],[-9],[-5],[8],[-1],[5],[-6],[8],[2],[-3],[1],[-8],[8],[10],[6],[2],[-8],[-2],[7],[1],[7],[-2],[1],[-2],[-1],[7],[-4],[-10],[-3],[-4],[4],[-8],[9],[7],[10],[-6],[6],[-3],[-9],[-9],[9],[4],[-9],[8],[7],[-10],[-9],[5],[-10],[6],[2],[8],[-3],[2],[-5],[-4],[-7],[8],[5],[9],[-9],[4],[9],[10],[4],[9],[9],[2],[8],[3],[7],[8],[8],[-1],[3],[6],[10],[1],[-1],[-7],[6],[-1],[-3],[6],[10],[-7],[-9],[-2],[-10],[-9],[-6],[-6],[-6],[6],[-8],[4],[-10],[1],[-9],[7],[8],[-8],[-8],[1],[5],[2],[4],[-8],[4],[10],[8],[10],[-1],[1],[9],[1],[5],[-4],[10],[-2],[5],[8],[1],[2],[9],[-9],[-5],[5],[9],[-6],[-8],[-4],[4],[4],[3],[-3],[-2],[-10],[7],[8],[3],[5],[4],[4],[5],[-2],[4],[-6],[3],[-6],[-7],[-7],[-8],[-2],[10],[-2],[-7],[10],[4],[5],[-1],[4],[2],[-6],[9],[-3],[9],[-7],[-8],[3],[-7],[8],[-10],[5],[2],[7],[8],[1],[-3],[-7],[10],[-1],[10],[7],[5],[4],[5],[-7],[-2],[-2],[6],[-10],[-3],[4],[-9],[-8],[-9],[-8],[-7],[6],[7],[7],[4],[10],[8],[-10],[1],[7],[-10],[-10],[2],[-8],[7],[1],[-2],[-7],[7],[-2],[7],[6],[-4],[-10],[-8],[-9],[-1],[-9],[-6],[-3],[2],[-8],[-1],[3],[10],[8],[7],[-5],[-2],[-4],[-5],[1],[1],[-7],[7],[-10],[6],[-3],[-5],[-6],[2],[-4],[-9],[8],[5],[4],[-6],[-4],[-2],[-3],[-4],[8],[-3],[8],[7],[-4],[-9],[-10],[7],[-2],[1],[-10],[10],[5],[8],[-1],[-5],[2],[-1],[-7],[-6],[9],[-7],[-6],[8],[-7],[-5],[-9],[5],[-6],[-4],[-3],[7],[-6],[-6],[7],[3],[-9],[-7],[-5],[4],[-6],[-10],[-3],[9],[-6],[-4],[3],[-6],[10],[-3],[6],[-4],[-6],[-2],[8],[6],[-7],[10],[-1],[-9],[3],[10],[7],[-6],[-8],[3],[-5],[-10],[10],[4],[2],[-3],[-6],[10],[2],[-8],[3],[3],[-4],[4],[-8],[-7],[-5],[-5],[-3],[-4],[-1],[-3],[-10],[6],[-10],[-6],[-2],[2],[10],[9],[4],[2],[-3],[4],[-8],[-10],[-5],[-5],[5],[6],[-8],[10],[-5],[-8],[-10],[-2],[3],[4],[3],[-3],[-8],[9],[5],[10],[-7],[-9],[1],[7],[-4],[1],[-1],[8],[9],[1],[10],[4],[-4],[-3],[8],[1],[10],[-2],[-1],[-8],[-5],[-9],[-4],[-2],[7],[-6],[7],[6],[2],[2],[-1],[-7],[5],[5],[-10],[1],[2],[4],[6],[-10],[1],[-1],[3],[-2],[7],[4],[9],[2],[-3],[-9],[9],[-8],[1],[8],[10],[-2],[3],[1],[-3],[10],[-5],[9],[-8],[-9],[5],[3],[10],[-7],[-5],[-8],[-3],[8],[-4],[-2],[2],[-4],[-6],[2],[-3],[4],[6],[3],[1],[7],[-5],[3],[-3],[-3],[-9],[-1],[-7],[-7],[-9],[9],[-9],[1],[-2],[-3],[4],[-7],[3],[6],[2],[-3],[4],[-2],[-1],[6],[-10],[-4],[-9],[4],[1],[2],[-5],[6],[-10],[6],[-4],[3],[-4],[-9],[-5],[-7],[-9],[2],[9],[-9],[3],[-8],[10],[-8],[8],[2],[-2],[-8],[-1],[-3],[3],[9],[-4],[1],[-9],[6],[2],[10],[-9],[4],[-2],[-7],[-3],[-3],[3],[9],[8],[9],[-1],[7],[-3],[-1],[6],[6],[-10],[1],[9],[8],[-5],[4],[-9],[-6],[-5],[8],[7],[5],[8],[-4],[-9],[-10],[-1],[3],[-10],[-1],[4],[-3],[-2],[-9],[-5],[-10],[-4],[-2],[-3],[9],[-9],[1],[1],[-9],[6],[8],[-7],[10],[-1],[4],[-8],[8],[-3],[6],[-9],[10],[-3],[7],[4],[9],[-5],[-10],[9],[4],[1],[-7],[6],[2],[-6],[-5],[-3],[-2],[-5],[-4],[-2],[-1],[-1],[3],[-2],[-1],[-7],[-3],[4],[2],[6],[-4],[4],[5],[4],[10],[-2],[4],[3],[5],[-6],[-10],[7],[-4],[3],[-10],[3],[5],[-1],[-7],[-2],[10],[8],[-9],[-3],[8],[-3],[10],[6],[-10],[10],[-5],[3],[2],[-4],[6],[6],[2],[-9],[-6],[-9],[2],[5],[-1],[-8],[9],[10],[-4],[-5],[6],[3],[-7],[-7],[-4],[-4],[-1],[-7],[5],[8],[4],[-7],[-5],[8],[-10],[4],[-2],[8],[-10],[10],[5],[6],[-5],[2],[-6],[5],[4],[4],[9],[-9],[-5],[-2],[3],[-8],[-9],[7],[-2],[-2],[6],[6],[2],[-4],[3],[8],[-2],[-8],[-1],[5],[4],[-7],[4],[7],[-4],[3],[-4],[-4],[10],[5],[-7],[-3],[9],[5],[-4],[5],[8],[1],[5],[7],[8],[3],[-9],[-8],[-4],[10],[5],[8],[7],[-7],[-6],[6],[-6],[5],[6],[3],[2],[-6],[3],[-9],[9],[6],[-7],[10],[-2],[2],[9],[3],[9],[-7],[9],[-9],[-7],[3],[-10],[-7],[-6],[-3],[-1],[-6],[7],[-10],[-9],[2],[-10],[1],[8],[-2],[6],[7],[10],[5],[8],[10],[10],[-10],[-3],[5],[-3],[8],[-3],[-3],[-10],[8],[-10],[1],[10],[7],[-3],[-5],[2],[-2],[-8],[-7],[-2],[-6],[-5],[-10],[4],[10],[-4],[6],[-7],[9],[-10],[5],[-4],[7],[3],[-4],[-2],[-4],[9],[-3],[-1],[-9],[-1],[8],[-7],[-10],[-5],[-1],[1],[10],[-5],[-1],[-9],[3],[8],[-3],[6],[-3],[-6],[-7],[-1],[-2],[-1],[3],[2],[-7],[2],[-1],[4],[8],[-9],[-2],[-4],[3],[7],[-3],[-6],[-5],[9],[-2],[3],[-7],[9],[7],[1],[7],[8],[-4],[-6],[2],[-7],[-4],[-1],[2],[6],[2],[-3],[-6],[6],[-10],[-1],[-6],[8],[-1],[7],[10],[10],[8],[10],[5],[6],[-5],[4],[-3],[-5],[9],[10],[4],[7],[2],[1],[-9],[3],[-6],[9],[-9],[7],[-2],[-5],[3],[-8],[5],[10],[-5],[9],[5],[7],[-2],[-1],[-5],[8],[-3],[-6],[-7],[-4],[1],[5],[-9],[9],[5],[1],[-7],[4],[-1],[6],[5],[-8],[8],[-7],[-6],[-7],[2],[-5],[8],[5],[2],[-3],[-6],[-8],[2],[-3],[-7],[-7],[-6],[10],[-7],[9],[9],[-10],[-9],[-2],[1],[-2],[4],[4],[-4],[-5],[7],[-6],[8],[4],[-2],[-5],[-8],[10],[10],[-2],[9],[9],[-6],[9],[1],[10],[6],[10],[-1],[9],[9],[6],[1],[-7],[-8],[-5],[5],[-2],[9],[10],[5],[-8],[6],[-7],[2],[10],[-2],[-9],[2],[5],[6],[-9],[-3],[1],[-2],[10],[9],[-10],[-5],[1],[3],[-7],[10],[9],[3],[-2],[-1],[8],[-3],[4],[10],[-5],[-3],[5],[2],[-5],[9],[-1],[9],[1],[-3],[9],[-7],[7],[-7],[-7],[6],[-5],[7],[-9],[6],[-3],[6],[-6],[-3],[7],[9],[9],[4],[-5],[-7],[-8],[-4],[-4],[-3],[-9],[6],[7],[-7],[9],[7],[5],[3],[-1],[-10],[-9],[-9],[-1],[-2],[-4],[-7],[7],[7],[7],[5],[4],[-3],[10],[-3],[-4],[9],[9],[2],[1],[-5],[8],[-9],[7],[-7],[2],[2],[7],[-4],[-3],[10],[-9],[3],[-5],[8],[-7],[-2],[-6],[2],[-1],[-2],[2],[-6],[9],[-6],[7],[10],[-2],[-4],[7],[6],[6],[1],[-1],[9],[-1],[-4],[3],[1],[-9],[4],[4],[-10],[6],[5],[7],[-7],[9],[4],[10],[-1],[-4],[-5],[-4],[1],[-5],[9],[-9],[-8],[-4],[-8],[4],[1],[3],[5],[-1],[-4],[3],[4],[-6],[-3],[7],[2],[3],[-3],[-3],[-8],[-4],[2],[6],[-1],[-6],[-4],[6],[8],[-2],[-5],[-3],[7],[5],[2],[10],[-6],[-9],[-4],[-6],[4],[3],[10],[-7],[-1],[9],[9],[1],[7],[7],[5],[-7],[4],[9],[-3],[-6],[-4],[-6],[-8],[3],[3],[5],[6],[-8],[-3],[2],[4],[1],[7],[9],[-5],[-6],[4],[5],[6],[-3],[-2],[1],[-4],[10],[-7],[9],[4],[-1],[-10],[-1],[-5],[-5],[-1],[-5],[8],[8],[-4],[-9],[1],[8],[-4],[1],[-9],[-8],[-3],[5],[6],[-1],[8],[-7],[-3],[10],[5],[8],[1],[-6],[-4],[-10],[7],[1],[7],[-2],[-6],[1],[8],[-2],[-3],[8],[4],[-6],[1],[7],[-6],[10],[4],[-7],[-7],[-3],[1],[-7],[-4],[-8],[5],[-6],[2],[-1],[3],[10],[-6],[-7],[2],[-1],[-3],[2],[-2],[1],[-1],[-4],[-6],[5],[-4]], dtype = "int64")#candidate|7415|(1350, 1)|const|int64
call_7414 = func_6053_call(relay.reshape(const_7415.astype('int64'), [6, 15, 15]), relay.reshape(const_7415.astype('int64'), [6, 15, 15]), )
call_7416 = func_6053_call(relay.reshape(const_7415.astype('int64'), [6, 15, 15]), relay.reshape(const_7415.astype('int64'), [6, 15, 15]), )
output = relay.Tuple([call_7397,call_7414,const_7415,])
output2 = relay.Tuple([call_7398,call_7416,const_7415,])
func_7439 = relay.Function([], output)
mod['func_7439'] = func_7439
mod = relay.transform.InferType()(mod)
output = func_7439()
func_7440 = relay.Function([], output)
mutated_mod['func_7440'] = func_7440
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7457 = relay.var("var_7457", dtype = "float32", shape = (12, 9, 11))#candidate|7457|(12, 9, 11)|var|float32
uop_7458 = relay.tan(var_7457.astype('float32')) # shape=(12, 9, 11)
func_7005_call = mod.get_global_var('func_7005')
func_7006_call = mutated_mod.get_global_var('func_7006')
call_7464 = relay.TupleGetItem(func_7005_call(), 0)
call_7465 = relay.TupleGetItem(func_7006_call(), 0)
uop_7468 = relay.atanh(uop_7458.astype('float64')) # shape=(12, 9, 11)
func_5381_call = mod.get_global_var('func_5381')
func_5384_call = mutated_mod.get_global_var('func_5384')
var_7477 = relay.var("var_7477", dtype = "int8", shape = (2304,))#candidate|7477|(2304,)|var|int8
const_7478 = relay.const([7.731661,7.518469,7.024263,4.326172,9.724984,-1.903157,5.778247,-0.799385,-9.790882,7.913634,-4.532200,-0.306569,8.816567,7.352818,7.427779,7.110800,8.263188,-0.097896,-2.582399,-0.198931,8.221448,-8.929269,7.286163,2.976408,-4.665711,9.194634,2.336668,5.894061,1.548052,-8.211442,6.248149,9.715531,-7.216974,4.637584,-2.151641,-8.002263,8.646630,-2.011512,-1.927454,-0.804181,4.408911,5.041555,-9.835852,2.220587,6.356186,-2.156172,3.572857,3.170550,4.773954,3.643755,-2.832932,-7.125485,-7.187186,-5.138528,-2.787176,9.998008,0.996754,-6.821194,-1.159748,0.653556,1.745275,-8.517642,-3.376879,-7.285027,-7.632360,7.541474,-2.079343,-5.524680,-8.314872,1.947501,-7.897159,-8.182148,9.529744,5.420519,1.158697,1.161538,-4.092175,0.228610,0.879131,3.631294,0.051725,3.509159,-4.287787,2.274161,-1.025922,2.861233,5.610957,-4.793195,-3.203766,-0.052217,8.120999,7.367515,3.806973,-0.666259,-8.298536,5.600905,-1.587295,5.266941,-6.940852,3.129117,8.346264,6.772601,8.871258,9.075983,7.845860,3.493747,8.874578,5.458388,8.312558,-2.706837,7.891328,-1.632773,-4.698045,-1.177513,-0.857587,0.261591,-1.109015,-1.706152,6.145061,3.539434,-1.761651,5.151028,0.833619,-7.323373,-9.292712,7.572955,-2.808931,5.277370,5.096870,-6.238542,7.736937,-5.680646,-1.808851,4.218953,-0.580917,4.810101,2.112450,2.031142,0.368382,-9.423463,-8.916378,0.834275,2.792426,1.421541,-0.684085,-4.527414,0.841367,8.852947,4.493872,4.812129,8.729398,-3.323899,5.360176,-9.406998,-6.319017,-6.935084,-9.915714,0.725611,-1.294914,-4.309189,-4.297229,9.040264,6.697486,-4.188546,6.302119,0.100910,-0.884556,-9.874140,7.925035,-2.228665,0.318052,-0.798600,-0.614840,4.572764,-5.754142,4.434365,-5.461450,-8.169267,9.730239,-8.146167,1.022966,0.043328,-2.815043,7.696426,-5.394981,4.971992,7.605098,0.871093,0.049430,-4.468143,8.609396,3.431417,-1.172997,4.770027,-4.191186,6.756687,9.162421,1.732093,-0.574322,5.766569,-5.687702,-4.083185,-6.630053,9.835711,-1.461986,5.480532,7.408272,7.277812,6.692601,5.394561,-7.807593,9.723922,7.657131,3.039634,2.567990,6.627188,1.525747,8.899124,2.837967,-0.052910,8.009761,9.309565,-1.874155,-5.649505,-5.911405,5.267382,-5.424297,-4.226664,0.838541,6.692955,0.582872,-0.663454,-8.173489,-4.905188,-4.764883,8.704869,7.599971,-0.415823,7.951520,0.516796,-2.994790,6.710020,0.352360,-8.705174,4.762780,9.596489,-8.625710,-1.667953,-0.925784,0.706784,8.721431,-3.460741,1.120808,-9.072193,2.521840,-5.711382,-7.665109,3.894902,-5.972129,-1.039109,3.242487,-7.200114,9.044470,2.529079,7.070885,-4.437198,7.884206,3.958843,2.420492,-9.385345,4.760312,-6.478198,-5.695247,0.200644,8.078520,-5.837735,-4.203659,9.930692,7.527200,6.815122,8.621952,1.691435,-5.753613,2.283269,-8.018105,-5.060477,6.708172,8.446554,-7.108106,-3.542977,-2.485376,5.579968,7.779205,-6.950828,5.631121,6.953367,2.862411,0.267762,-3.940826,3.407530,-7.316604,-7.611174,-4.838025,7.516984,8.915653,9.868368,4.821056,-1.912803,6.205681,3.050754,-2.719914,9.637113,-0.363233,5.926528,1.238902,5.228794,-1.525121,4.834804,-1.470530,-0.198344,-0.091151,3.492236,-5.909966,-2.731792,6.898124,-5.605836,4.460868,3.031972,-8.980145,-5.149415,-7.722544,-9.965558,0.260501,1.459567,-8.928215,6.955101,2.146805,-7.472410,-4.200929,4.147761,2.013093,4.718121,2.223647,-9.312373,6.176267,-9.212147,-9.058539,0.570177,-3.194128,9.586142,-3.921902,-5.575800,-3.252896,7.640235,6.851398,-7.487204,-5.121821,1.870076,-1.754693,7.956119], dtype = "float64")#candidate|7478|(360,)|const|float64
call_7476 = relay.TupleGetItem(func_5381_call(relay.reshape(var_7477.astype('int8'), [16, 9, 16]), relay.reshape(const_7478.astype('float64'), [360,]), ), 0)
call_7479 = relay.TupleGetItem(func_5384_call(relay.reshape(var_7477.astype('int8'), [16, 9, 16]), relay.reshape(const_7478.astype('float64'), [360,]), ), 0)
uop_7490 = relay.log10(uop_7468.astype('float32')) # shape=(12, 9, 11)
bop_7503 = relay.bitwise_and(uop_7468.astype('int16'), relay.reshape(var_7457.astype('int16'), relay.shape_of(uop_7468))) # shape=(12, 9, 11)
bop_7506 = relay.bitwise_or(uop_7468.astype('uint64'), relay.reshape(uop_7490.astype('uint64'), relay.shape_of(uop_7468))) # shape=(12, 9, 11)
output = relay.Tuple([call_7464,call_7476,var_7477,const_7478,bop_7503,bop_7506,])
output2 = relay.Tuple([call_7465,call_7479,var_7477,const_7478,bop_7503,bop_7506,])
func_7510 = relay.Function([var_7457,var_7477,], output)
mod['func_7510'] = func_7510
mod = relay.transform.InferType()(mod)
var_7511 = relay.var("var_7511", dtype = "float32", shape = (12, 9, 11))#candidate|7511|(12, 9, 11)|var|float32
var_7512 = relay.var("var_7512", dtype = "int8", shape = (2304,))#candidate|7512|(2304,)|var|int8
output = func_7510(var_7511,var_7512,)
func_7513 = relay.Function([var_7511,var_7512,], output)
mutated_mod['func_7513'] = func_7513
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7518 = relay.var("var_7518", dtype = "int16", shape = (9, 8, 13))#candidate|7518|(9, 8, 13)|var|int16
var_7519 = relay.var("var_7519", dtype = "int16", shape = (9, 8, 13))#candidate|7519|(9, 8, 13)|var|int16
bop_7520 = relay.add(var_7518.astype('int16'), relay.reshape(var_7519.astype('int16'), relay.shape_of(var_7518))) # shape=(9, 8, 13)
func_4948_call = mod.get_global_var('func_4948')
func_4950_call = mutated_mod.get_global_var('func_4950')
const_7528 = relay.const([-2.002471,8.973093,-4.757317,5.670554,-4.122773,3.426371,-5.428818,-7.528730,9.913947,-0.352064,-3.063806,1.509686,6.913433,-0.496395,3.131093,4.112827,5.563526,-1.500262,8.832833,-9.878282,3.446134,-6.314678,-6.728258,9.985323,-7.805720,1.696915,9.728324,0.213452,3.497610,9.683278,9.319359,-8.145810,-9.567270,-9.682938,-7.232616,2.869334,-4.736421,5.448022,-6.097797,7.789449,-2.481304,2.381279,6.603481,-5.145151,-7.011493,8.743113,8.461664,-6.111336,-0.994167,1.797508,9.518095,4.423543,-1.699939,0.910722,5.669188,6.333651,7.159429,6.035477,-8.575599,3.617573,-3.419057,-9.488339,-8.164718,4.202031,-3.045836,-4.244263,3.513711,4.048445,-1.639250,-6.560310,4.869452,-1.968677,-5.883902,4.754491,3.032399,0.064563,-2.933629,9.163683,-3.115158,4.455690,-7.950903,4.087773,1.216426,1.973308,0.529240,3.017615,-0.942550,7.869516,-0.810882,9.744102,-9.355464,9.455426,-2.358705,1.962918,8.081789,6.505526,-1.444771,1.777723,-6.301061,-6.092619,-9.963281,-2.561584,2.598496,5.359108,1.831217,9.938487,0.845986,-3.900303,-5.288265,-0.149740,-3.952431,6.990876,-1.286058,0.200506,3.176602,-4.365080,2.332227,-7.634188,7.204845,-2.388509,-5.045255,-1.037548,-3.561267,-5.977238,-8.433821,-1.191540,-7.931973,-9.085414,-9.053959,6.451146,8.410121,7.910136,0.660121,5.471126,1.155873,5.645802,7.802945,1.568762,-5.143330,-0.251665,9.981482,3.749555,-7.847129,-5.198328,2.131447,1.913508,-0.828355,-7.090326,-6.328466,-1.153525,5.665344,-0.154168,5.425480,9.132080,8.933836,-2.800960,-7.588584,-1.057186,0.564749,-5.249145,2.768372,9.273514,-9.080960,0.518681,4.297836,3.185177,9.810690,-9.775589,9.111402,-1.727875,9.036261,4.194093,-4.559413,6.451669,3.846218,4.961304,4.115533,-2.922938,-4.663458,-0.541785,3.109223,-8.284656,8.801377,5.625060,-6.604469,5.230058,-9.601207,-9.023736,3.043364,0.824373,3.455765,0.340383,7.332610,-1.147394,8.919656,-0.115361,-6.008531,0.809620,4.070015,8.813724,-9.410203,6.223736,0.277510,1.902898,0.335400,0.094652,5.480352,9.367780,-4.715228,-1.273698,6.580860,-0.794750,-4.549223,2.413197,-5.720177,7.678227,-3.110215,-1.877068,-8.415108,-3.898598,-8.476330,-0.184678,-0.969865,-7.835383,-5.408096,-0.920667,5.978118,5.144111,-4.228676,8.923924,4.730561,1.989044,-5.416267,-8.582703,0.296578,-8.686575,-9.975527,-4.093849,3.447284,-3.528534,7.977208,9.571179,3.511677,-6.437528,1.652321,9.370093,4.232567,-4.465197,-9.497959,-5.108663,3.321181,6.443645,-1.871262,-5.090143,-0.389403,7.179414,9.739601,8.810803,7.577633,-3.230663,3.178556,-3.640625,-3.004866,-4.213964,9.551496,2.933822,-9.605158,-5.636366,-5.459583,-7.639470,1.776951,-4.927565,-3.615102,-1.994047,-1.919533,-8.519351,-1.052649,-9.564896,-4.536547,4.080647,7.047568,-4.502827,4.026118,-4.368581,-9.982971,-8.335203,-1.045153,-2.267526,-3.386808,3.483472,-5.011185,3.831213,-8.652091,2.463182,-8.380193,-3.459045,9.965478,0.033186,7.977311,-7.704501,-9.856421,-0.379633,-3.122209,6.998484,6.253543,9.844736,5.614284,-1.085752,-5.881626,-8.361660,-5.716786,-9.739936,9.635266,-0.397007,-1.390715,-4.552349,3.871069,6.205150,-6.891218,7.651501,6.697610,2.881499,7.985043,-2.184451,4.521734,-5.717672,4.978510,-9.479748,6.266907,-0.339286,6.213208,-3.324978,9.356469,-1.341142,1.351627,3.097122,-0.636608,5.695219,-1.247419,0.888189,-1.693795,5.504521,4.683769,-8.862628,-3.291632,-6.677330,-2.298953,-4.230445,-9.238796,4.785558,-5.443580,6.054908,5.411355,-2.491441,-0.687874,3.380043,-7.159492,7.713835,-0.683478,-0.924516,-2.227843,9.188997,2.757149,-8.534329,-0.876249,7.625059,-1.232838,-6.876973,2.152806,6.140911,-2.203078,-9.147405,8.458576,-4.377345,-5.141762,-4.420883,9.322612,3.509117,3.055912,7.582630,7.575858,8.557026,0.135997,3.044972,-6.114658,-5.672334,0.997110,6.499056,-9.474657,4.397399,-9.395811,8.678804,8.803933,9.203173,-4.721040,-9.762439,7.053480,3.848083,7.826064,-2.889003,0.701274,2.374294,1.583339,5.219558,-4.954505,-6.567710,-1.924057,2.347901,-4.706411,6.357525,9.561032,-1.605858,6.902658,5.437518,-9.412972,-8.699847,-6.698101,0.555052,3.056681,-1.656821,9.365067,-7.923253,-2.363212,7.963326,-5.482296,-1.369419,-0.100532,9.445788,-9.343508,2.438248,-0.235655,4.230388,9.665491,-9.982126,9.644568,-4.576412,-6.280298,7.742483,-9.700444,6.244019,3.363676,-3.396985,2.921049,4.602310,-1.787690,-5.367056,-0.765840,-8.832283,-8.248774,-1.499832,1.914975,-7.552043,-4.485240,-5.313480,-9.436366,5.374404,2.861540,-2.814321,7.007918,4.553020,-5.544831,-9.965996,4.226235,-0.761338,-9.514458,1.071550,3.925048,8.716959,7.214038,9.447665,1.837456,3.133622,-1.414804,6.293778,6.244897,-7.569876,7.708954,6.499619,2.234310,-5.031755,-6.065638,8.160411,-0.764413,1.792821,-0.714533,2.944016,-3.192975,9.312682,-9.927349,-7.408679,5.941235,6.042022,-7.050379,0.614828,-9.589962,0.836277,9.677847,4.840244,4.852004,-4.346345,5.796928,6.221586,-9.966160,-1.080099,-5.973855,2.342240,0.227253,-5.856774,2.084512,6.217079,1.511203,-7.025377,2.449910,-2.067100,4.802549,6.778808,3.903841,-8.916973,5.876464,-1.781817,1.103440,1.034268,4.830117,-2.235929,1.793153,-8.728748,-0.883776,1.249022], dtype = "float32")#candidate|7528|(528,)|const|float32
call_7527 = relay.TupleGetItem(func_4948_call(relay.reshape(const_7528.astype('float32'), [6, 8, 11])), 0)
call_7529 = relay.TupleGetItem(func_4950_call(relay.reshape(const_7528.astype('float32'), [6, 8, 11])), 0)
func_5381_call = mod.get_global_var('func_5381')
func_5384_call = mutated_mod.get_global_var('func_5384')
var_7531 = relay.var("var_7531", dtype = "int8", shape = (2304,))#candidate|7531|(2304,)|var|int8
var_7532 = relay.var("var_7532", dtype = "float64", shape = (360, 1))#candidate|7532|(360, 1)|var|float64
call_7530 = relay.TupleGetItem(func_5381_call(relay.reshape(var_7531.astype('int8'), [16, 9, 16]), relay.reshape(var_7532.astype('float64'), [360,]), ), 2)
call_7533 = relay.TupleGetItem(func_5384_call(relay.reshape(var_7531.astype('int8'), [16, 9, 16]), relay.reshape(var_7532.astype('float64'), [360,]), ), 2)
func_2929_call = mod.get_global_var('func_2929')
func_2932_call = mutated_mod.get_global_var('func_2932')
var_7539 = relay.var("var_7539", dtype = "float32", shape = (504,))#candidate|7539|(504,)|var|float32
call_7538 = relay.TupleGetItem(func_2929_call(relay.reshape(var_7539.astype('float32'), [3, 14, 12])), 2)
call_7540 = relay.TupleGetItem(func_2932_call(relay.reshape(var_7539.astype('float32'), [3, 14, 12])), 2)
func_1635_call = mod.get_global_var('func_1635')
func_1636_call = mutated_mod.get_global_var('func_1636')
call_7555 = func_1635_call()
call_7556 = func_1635_call()
output = relay.Tuple([bop_7520,call_7527,const_7528,call_7530,var_7531,var_7532,call_7538,var_7539,call_7555,])
output2 = relay.Tuple([bop_7520,call_7529,const_7528,call_7533,var_7531,var_7532,call_7540,var_7539,call_7556,])
func_7557 = relay.Function([var_7518,var_7519,var_7531,var_7532,var_7539,], output)
mod['func_7557'] = func_7557
mod = relay.transform.InferType()(mod)
mutated_mod['func_7557'] = func_7557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7557_call = mutated_mod.get_global_var('func_7557')
var_7559 = relay.var("var_7559", dtype = "int16", shape = (9, 8, 13))#candidate|7559|(9, 8, 13)|var|int16
var_7560 = relay.var("var_7560", dtype = "int16", shape = (9, 8, 13))#candidate|7560|(9, 8, 13)|var|int16
var_7561 = relay.var("var_7561", dtype = "int8", shape = (2304,))#candidate|7561|(2304,)|var|int8
var_7562 = relay.var("var_7562", dtype = "float64", shape = (360, 1))#candidate|7562|(360, 1)|var|float64
var_7563 = relay.var("var_7563", dtype = "float32", shape = (504,))#candidate|7563|(504,)|var|float32
call_7558 = func_7557_call(var_7559,var_7560,var_7561,var_7562,var_7563,)
output = call_7558
func_7564 = relay.Function([var_7559,var_7560,var_7561,var_7562,var_7563,], output)
mutated_mod['func_7564'] = func_7564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5810_call = mod.get_global_var('func_5810')
func_5812_call = mutated_mod.get_global_var('func_5812')
call_7586 = func_5810_call()
call_7587 = func_5810_call()
output = call_7586
output2 = call_7587
func_7591 = relay.Function([], output)
mod['func_7591'] = func_7591
mod = relay.transform.InferType()(mod)
output = func_7591()
func_7592 = relay.Function([], output)
mutated_mod['func_7592'] = func_7592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2608_call = mod.get_global_var('func_2608')
func_2610_call = mutated_mod.get_global_var('func_2610')
call_7602 = relay.TupleGetItem(func_2608_call(), 0)
call_7603 = relay.TupleGetItem(func_2610_call(), 0)
func_5555_call = mod.get_global_var('func_5555')
func_5558_call = mutated_mod.get_global_var('func_5558')
var_7610 = relay.var("var_7610", dtype = "float32", shape = (14,))#candidate|7610|(14,)|var|float32
call_7609 = relay.TupleGetItem(func_5555_call(relay.reshape(var_7610.astype('float32'), [14,])), 4)
call_7611 = relay.TupleGetItem(func_5558_call(relay.reshape(var_7610.astype('float32'), [14,])), 4)
func_6053_call = mod.get_global_var('func_6053')
func_6056_call = mutated_mod.get_global_var('func_6056')
var_7616 = relay.var("var_7616", dtype = "int64", shape = (1, 1350))#candidate|7616|(1, 1350)|var|int64
call_7615 = func_6053_call(relay.reshape(var_7616.astype('int64'), [6, 15, 15]), relay.reshape(var_7616.astype('int64'), [6, 15, 15]), )
call_7617 = func_6053_call(relay.reshape(var_7616.astype('int64'), [6, 15, 15]), relay.reshape(var_7616.astype('int64'), [6, 15, 15]), )
func_4727_call = mod.get_global_var('func_4727')
func_4729_call = mutated_mod.get_global_var('func_4729')
call_7635 = relay.TupleGetItem(func_4727_call(), 0)
call_7636 = relay.TupleGetItem(func_4729_call(), 0)
output = relay.Tuple([call_7602,call_7609,var_7610,call_7615,var_7616,call_7635,])
output2 = relay.Tuple([call_7603,call_7611,var_7610,call_7617,var_7616,call_7636,])
func_7654 = relay.Function([var_7610,var_7616,], output)
mod['func_7654'] = func_7654
mod = relay.transform.InferType()(mod)
var_7655 = relay.var("var_7655", dtype = "float32", shape = (14,))#candidate|7655|(14,)|var|float32
var_7656 = relay.var("var_7656", dtype = "int64", shape = (1, 1350))#candidate|7656|(1, 1350)|var|int64
output = func_7654(var_7655,var_7656,)
func_7657 = relay.Function([var_7655,var_7656,], output)
mutated_mod['func_7657'] = func_7657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6095_call = mod.get_global_var('func_6095')
func_6097_call = mutated_mod.get_global_var('func_6097')
call_7672 = relay.TupleGetItem(func_6095_call(), 0)
call_7673 = relay.TupleGetItem(func_6097_call(), 0)
output = call_7672
output2 = call_7673
func_7680 = relay.Function([], output)
mod['func_7680'] = func_7680
mod = relay.transform.InferType()(mod)
output = func_7680()
func_7681 = relay.Function([], output)
mutated_mod['func_7681'] = func_7681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2143_call = mod.get_global_var('func_2143')
func_2144_call = mutated_mod.get_global_var('func_2144')
call_7707 = func_2143_call()
call_7708 = func_2143_call()
output = call_7707
output2 = call_7708
func_7753 = relay.Function([], output)
mod['func_7753'] = func_7753
mod = relay.transform.InferType()(mod)
output = func_7753()
func_7754 = relay.Function([], output)
mutated_mod['func_7754'] = func_7754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2257_call = mod.get_global_var('func_2257')
func_2258_call = mutated_mod.get_global_var('func_2258')
call_7770 = relay.TupleGetItem(func_2257_call(), 3)
call_7771 = relay.TupleGetItem(func_2258_call(), 3)
output = call_7770
output2 = call_7771
func_7784 = relay.Function([], output)
mod['func_7784'] = func_7784
mod = relay.transform.InferType()(mod)
mutated_mod['func_7784'] = func_7784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7784_call = mutated_mod.get_global_var('func_7784')
call_7785 = func_7784_call()
output = call_7785
func_7786 = relay.Function([], output)
mutated_mod['func_7786'] = func_7786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6850_call = mod.get_global_var('func_6850')
func_6851_call = mutated_mod.get_global_var('func_6851')
call_7848 = relay.TupleGetItem(func_6850_call(), 3)
call_7849 = relay.TupleGetItem(func_6851_call(), 3)
func_5321_call = mod.get_global_var('func_5321')
func_5323_call = mutated_mod.get_global_var('func_5323')
const_7857 = relay.const([9,-1,2,-2,1,-5,-7,8,-1,-1,-7,1,5,1,3,4,1,2,5,4,-4,-4,1,-10,5,1,8,6,-4,-5,-5,9,-4,-1,-5,-4,6,-1,2,-3,3,-10,6,6,-3,4,-2,5,-4,-7,-1,-9,1,-6,-1,1,-1,-7,-7,6,6,7,5,-3,10,9,1,8,9,-6,-3,4,-7,4,4,3,1,5,6,4,-10,-7,2,6,1,2,8,-1,-5,-1,4,8,-6,1,2,7,-10,-6,10,-6,1,-5,1,8,-1,-6,2,10,6,-1,-7,-2,-1,-3,-8,1,4,2,4,-3,6,-9,1,10,1,6,10,-6,6,-3,6,-6,2,8,-8,2,-8,4,-10,-7,-8,8,-2,-2,-4,5,-2,2,8,1,-1,-10,4,10,-2,7,-1,1,-1,-2,-9,7,-7,-5,-9,3,-9,-8,-10,-1,5,-2,2,10,6,8,-8,-7,6,-3,8,4,10,-4,-2,1,-10,-4,6,-6,7,-10,-1,-3,6,-1,-2,4,8,-10,-1,-8,6,5,-7,6,9,10,-10,-6,-6,3,-3,-10,2,-3,-1,-6,-4,-10,-4,-4,2,-2,4,-9,6,-10,8,3,-8,-5,-7,7,-3,-4,-3,1,-4,-8,-2,1,-8,8,9,-7,8,-9,2,8,-4,4,3,-3,-8,-5,7,-8,-7,2,-10,6,-1,-2,-10,10,-5,1,10,6,2,-8,-7,5,-5,-1,-6,-10,9,-9,6,-5,4,10,-8,1,8,-1,6,-9,3,-5,-7,5,8,-7,5,-7,7,-2,4,7,1,-6,-3,9,7,6,-10,1,7,4,9,-1,-7,-1,4,-4,7,-5,7,8,-7,-7,5,5,-6,-4,-8,-1,-7,7,-4,8,1,2,7,-1,4,9,7,-1,-3,-10,-9,-8,-5,8,6,-1,-1,-6,-2,-1,8,-8,-6,-8,4,-9,-8,1,-2,5,7,6,10,6,-10,10,9,-2,7,-3,9,7,-7,-3,7,8,7,-4,7,-10,-1,6,10,-4,-10,-1,-8,-6,-7,3,-10,-10,6,-3,7,1,-4,7,-7,-3,9,5,10,-2,2,-1,-8,-7,-8,-7,-4,3,7,1,1,10,6,5,7,-3,5,-9,-8,7,-9,-10,-5,8,-1,6,3,-1,-1,6,-6,-5,6,3,-2,-7,7,3,-10,-5,-2,-2,9,5,-2,6,-2,10,-8,-10,-5,1,-6,-3,-5,-7,9,3,5,-8,9,-8,6,8,2,4,7,-9,-2,-1,-1,6,-8,-10,7,1,-1,-8,8,2,-6,-7,-4,7,-1,2,7,-3,-7,9,8,-1,-10,7,4,7,-6,2,5,5,-8,-7,7,1,3,-7,1,-4,-6,10,-2,8,5,9,9,-3,1,3,2,-1,3,7,-7,-6,2,2,5,2,-10,-8,-5,8,-3,-3,3,1,3,10,9,-2,2,-6,4,6,1,4,7,3,3,4,-1,3,-2,-3,-9,-3,10,9,-9,9,9,7,7,3,-5,5,-3,-9,1,8,-8,-4,-2,2,8,-3,-7,10,-10,2,-3,1,-7,-10,4,-2,-1,-1,-9,-4,8,-3,-8,7,-7,3,-9,-5,5,-7,-5,1,7,-9,-7,-5,-10,10,-3,-8,-9,10,5,4,-3,7,4,-2,-10,-7,-3,3,-3,5,-1,6,-4,-8,4,-7,7,-2,1,-9,-6,9,-3,7,7,-1,5,-8,4,9,10,-4,9,-7,4,3,-6,-1,5,2,2,-10,-1,-7,6,2,2,-4,-5,-3,-7,-9,9,10,2,7,5,10,-10,10,2,2,1,-7,7,3,6,-8,6,2,2,-9,-1,-5,-5,-4,9,1,4,-6,7,6,3,-10,-4,6,-4,-4,-5,5,-6,-9,9,-6,-7,3,-2,-9,4,6,4,5,9,6,-8,4,-1,10,-4,-2,-7,-6,5,5,-7,-9,-5,10,4,7,-6,-8,5,-7,-4,-9,4,-1,-1,10,9,8,4,5,-3,-3,-5,-7,1,-1,-1,-8,-6,-3,5,-4,5,-6,1,8,-8,-4,-2,-5,-5,7,-9,-10,-4,-3,-8,-3,10,-3,-5,-6,4,5,-2,-10,-9,2,2,4,-5,-6,5,-6,-1,7,-10,8,-6,9,-5,7,-5,-3,-9,4,-3,6,8,-2,-9,-4,3,-2,-4,7,9,5,-10,-3,-5,-4,-5,-6,-4,-3,-7,-3,-8,-9,5,4,-7,2,-9,-8,-9,-5,-7,-1,-1,-2,-1,1,10,-6,4,-3,-10,10,-9,6,-5,4,3,-10,10,-3,9,-4,1,-7,1,8,4,-3,-6,-1,-9,10,-2,6,-4,-5,-2,1,-9,8,8,-1,4,5,4,-3,-3,-5,-5,7,10,2,8,-5,2,9,1,-6,6,5,9,3,2,7,10,7,-5,-10,-2,2,-10,6,10,4,-3,-6,-8,-6,-6,8,-6,-6,1,4,2,-9,-4,2,9,10,7,-6,-4,7,-3,5,-9,-10,8,-6,-9,-1,-10,-9,-8,-10,-6,2,-9,9,4,-3,7,-5,-5,-5,8,7,8,-6,6,1,-6,-1,2,7,6,-8,3,-9,-6,5,10,-1,-10,5,7,-8,-1,-6,-9,-8,2,1,9,4,-2,-9,-10,1,9,6,3,7,-2,-6,5,-7,10,-4,8,6,6,-4,-6,-8,2,1,7,9,10,-10,7,-3,5,-6,5,5,-7,-10,6,10,-2,-1,-8,6,-6,-2,-4,-10,4,4,-9,-3,-9,-1,-10,3,3,-9,-6,6,1,-5,-7,-8,2,-10,-2,-9,-5,6,-3,-7,2,-7,1,8,-3,1,-9,-9,-8,4,-4,-10,3,-6,4,-5,1,3,-5,-6,-6,-8,-3,-8,8,2,2,2,-10,6,-4,-10,-4,9,-6,8,1,8,3,-8,7,4,3,-7,-8,9,-5,-9,2,8,2,-3,-2,-8,7,7,-5,3,10,-3,2,-2,-8,6,8,9,10,4,3,6,-5,5,-7,-8,-8,-5,10,9,-8,-10,-9,-8,-3,10,4,5,10,-9,-8,-3,-9,-9,6,9,-5,2,-9,2,5,-7,7,-10,4,3,8,10,-4,6,-9,4,5,-9,-10,-4,2,-8,3,-7,7,9,-5,5,-10,-9,-8,-4,-1,-5,5,-10,3,9,5,-5,5,10,-4,9,-5,-4,1,6], dtype = "int16")#candidate|7857|(1200,)|const|int16
call_7856 = relay.TupleGetItem(func_5321_call(relay.reshape(const_7857.astype('int16'), [1200,])), 2)
call_7858 = relay.TupleGetItem(func_5323_call(relay.reshape(const_7857.astype('int16'), [1200,])), 2)
func_2480_call = mod.get_global_var('func_2480')
func_2482_call = mutated_mod.get_global_var('func_2482')
call_7907 = func_2480_call()
call_7908 = func_2480_call()
var_7916 = relay.var("var_7916", dtype = "int16", shape = (1200,))#candidate|7916|(1200,)|var|int16
bop_7917 = relay.mod(const_7857.astype('float64'), relay.reshape(var_7916.astype('float64'), relay.shape_of(const_7857))) # shape=(1200,)
output = relay.Tuple([call_7848,call_7856,call_7907,bop_7917,])
output2 = relay.Tuple([call_7849,call_7858,call_7908,bop_7917,])
func_7920 = relay.Function([var_7916,], output)
mod['func_7920'] = func_7920
mod = relay.transform.InferType()(mod)
mutated_mod['func_7920'] = func_7920
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7921 = relay.var("var_7921", dtype = "int16", shape = (1200,))#candidate|7921|(1200,)|var|int16
func_7920_call = mutated_mod.get_global_var('func_7920')
call_7922 = func_7920_call(var_7921)
output = call_7922
func_7923 = relay.Function([var_7921], output)
mutated_mod['func_7923'] = func_7923
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7954 = relay.const([[[7,3,-1,1,6,4],[8,3,-3,10,2,10],[4,-2,-3,8,-10,-5],[4,4,1,-6,-5,-3]],[[-1,-4,10,10,-2,-1],[-3,-8,-2,5,-8,-7],[-7,9,4,-2,-6,-10],[2,2,-4,-10,2,1]],[[10,1,7,8,1,-7],[9,3,-8,4,3,-4],[9,-6,-4,6,-5,4],[4,-5,9,-1,-3,-6]],[[7,1,-5,9,-10,8],[1,10,10,-7,5,-9],[-6,-5,-7,10,-10,-4],[-5,-1,-7,1,-3,-6]],[[-4,-7,-5,-5,7,7],[-10,5,-7,7,3,9],[6,-10,2,4,-6,-4],[5,9,-7,5,-5,-7]],[[1,-6,-1,4,6,10],[9,3,3,6,7,10],[-4,-3,-7,-1,6,5],[-4,-9,-3,10,1,7]],[[1,1,-1,-5,-8,-3],[-1,-3,2,8,-7,8],[-6,-1,-2,-10,-4,-2],[-4,9,7,4,4,7]],[[-7,4,2,3,-8,4],[5,-2,6,3,1,1],[1,6,-7,3,-7,-8],[-7,-6,5,5,-3,10]],[[-1,1,-4,1,-2,-3],[1,-2,3,7,1,4],[-3,-8,8,-8,-3,-4],[-5,-4,-4,-7,3,3]],[[-9,5,-6,-6,10,5],[-3,8,6,-3,-6,10],[-4,-3,4,4,-10,3],[-9,-5,4,8,5,-3]],[[5,3,-1,-1,8,3],[-2,7,-5,6,-1,3],[-2,-3,7,9,-10,-5],[-5,-9,10,7,6,-4]],[[6,4,-10,3,10,-9],[1,-2,10,5,4,10],[-3,-6,1,-3,9,-6],[-6,10,-6,6,-9,-8]],[[6,6,-7,-1,-3,3],[-4,-3,-4,3,10,10],[4,-3,4,6,7,9],[-8,6,7,5,6,6]]], dtype = "uint8")#candidate|7954|(13, 4, 6)|const|uint8
const_7955 = relay.const([[[9,10,-10,8,-7,2],[9,7,1,-9,7,9],[7,-10,-8,-6,10,-10],[-2,-8,3,8,-3,-1]],[[5,5,9,-7,-7,3],[-5,-2,-6,7,-3,7],[-7,5,2,-4,6,-10],[-7,-1,3,10,4,4]],[[6,-10,-8,-4,-3,-7],[-5,-3,-4,7,-9,6],[4,-1,9,10,1,-6],[-6,6,-9,6,7,6]],[[4,5,-4,7,-8,-6],[-8,-6,-6,-9,-3,4],[1,-10,1,10,-9,-1],[5,-1,-8,3,5,6]],[[2,-6,10,8,1,-10],[4,-8,-4,-8,-6,-5],[5,-2,-5,-4,4,3],[9,7,-1,-2,6,10]],[[10,-2,-8,-5,-3,5],[-7,-9,6,-7,3,-7],[-9,-9,-1,-7,-8,9],[6,-9,1,8,-1,-9]],[[9,4,-7,6,9,5],[6,-3,2,10,-6,-6],[-3,4,-3,2,6,6],[8,3,9,9,9,10]],[[4,7,9,8,10,-7],[-3,-5,-7,-6,2,2],[7,-7,-5,-8,-8,-10],[2,8,-10,-5,6,-3]],[[2,7,9,7,3,2],[2,-9,-7,-7,9,-1],[2,9,7,-10,1,6],[7,6,9,9,8,-2]],[[-9,3,6,-4,-9,8],[-6,8,-6,-9,-6,-6],[-3,-6,3,7,9,-9],[-4,-5,7,-3,-4,2]],[[3,-6,8,-6,4,-3],[2,-8,-10,5,-9,10],[-6,9,-2,-1,-4,-8],[6,5,-5,-7,-8,5]],[[-4,-5,3,-1,6,8],[-4,-7,-5,-3,6,-10],[-8,-8,-6,8,7,6],[-7,-8,8,-5,6,-3]],[[6,3,5,4,2,10],[7,9,9,4,2,-3],[10,5,9,-7,5,8],[3,1,-4,-5,-1,4]]], dtype = "uint8")#candidate|7955|(13, 4, 6)|const|uint8
bop_7956 = relay.logical_xor(const_7954.astype('uint8'), relay.reshape(const_7955.astype('uint8'), relay.shape_of(const_7954))) # shape=(13, 4, 6)
bop_7964 = relay.floor_mod(const_7955.astype('float64'), relay.reshape(const_7954.astype('float64'), relay.shape_of(const_7955))) # shape=(13, 4, 6)
output = relay.Tuple([bop_7956,bop_7964,])
output2 = relay.Tuple([bop_7956,bop_7964,])
func_7976 = relay.Function([], output)
mod['func_7976'] = func_7976
mod = relay.transform.InferType()(mod)
output = func_7976()
func_7977 = relay.Function([], output)
mutated_mod['func_7977'] = func_7977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7784_call = mod.get_global_var('func_7784')
func_7786_call = mutated_mod.get_global_var('func_7786')
call_8021 = func_7784_call()
call_8022 = func_7784_call()
func_1944_call = mod.get_global_var('func_1944')
func_1946_call = mutated_mod.get_global_var('func_1946')
call_8077 = relay.TupleGetItem(func_1944_call(), 0)
call_8078 = relay.TupleGetItem(func_1946_call(), 0)
func_6466_call = mod.get_global_var('func_6466')
func_6469_call = mutated_mod.get_global_var('func_6469')
const_8089 = relay.const([-5,-2,-9,4,3,8,10,7,-3,3,6,-4,3,-7,1,-2,10,7,-7,3,-7,-4,-10,10,-4,3,-4,6,4,8,-5,2,-6,-7,1,5,-3,-9,-9,-8,-10,2], dtype = "uint32")#candidate|8089|(42,)|const|uint32
var_8090 = relay.var("var_8090", dtype = "uint32", shape = (504,))#candidate|8090|(504,)|var|uint32
call_8088 = func_6466_call(relay.reshape(const_8089.astype('uint32'), [6, 1, 7]), relay.reshape(var_8090.astype('uint32'), [6, 12, 7]), )
call_8091 = func_6466_call(relay.reshape(const_8089.astype('uint32'), [6, 1, 7]), relay.reshape(var_8090.astype('uint32'), [6, 12, 7]), )
output = relay.Tuple([call_8021,call_8077,call_8088,const_8089,var_8090,])
output2 = relay.Tuple([call_8022,call_8078,call_8091,const_8089,var_8090,])
func_8098 = relay.Function([var_8090,], output)
mod['func_8098'] = func_8098
mod = relay.transform.InferType()(mod)
var_8099 = relay.var("var_8099", dtype = "uint32", shape = (504,))#candidate|8099|(504,)|var|uint32
output = func_8098(var_8099)
func_8100 = relay.Function([var_8099], output)
mutated_mod['func_8100'] = func_8100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3258_call = mod.get_global_var('func_3258')
func_3259_call = mutated_mod.get_global_var('func_3259')
call_8104 = relay.TupleGetItem(func_3258_call(), 0)
call_8105 = relay.TupleGetItem(func_3259_call(), 0)
uop_8112 = relay.log(call_8104.astype('float32')) # shape=(6, 8, 11)
uop_8114 = relay.log(call_8105.astype('float32')) # shape=(6, 8, 11)
func_5381_call = mod.get_global_var('func_5381')
func_5384_call = mutated_mod.get_global_var('func_5384')
const_8117 = relay.const([-7,5,10,9,-8,6,-9,-7,4,-3,5,9,9,4,-9,1,-6,5,10,5,-6,-3,1,8,-10,-10,6,-4,9,1,1,-5,8,6,-5,8,-2,-8,1,-10,-7,-5,-10,-8,-6,-9,2,-5,-8,-8,2,6,-7,10,-10,-10,-1,-10,3,-1,6,8,-6,8,-6,8,-2,-3,-9,-8,3,8,10,-6,5,-4,7,-8,-6,8,-3,-9,1,6,7,10,10,6,5,3,-9,-10,-8,1,5,4,-6,-4,9,8,2,9,-8,-1,7,5,-10,2,5,10,3,-9,10,-7,-3,-6,4,6,2,-7,3,7,-8,1,-4,-5,-6,-7,10,-7,8,-8,1,-6,-3,-4,-6,-10,-9,10,-2,10,1,-6,9,4,7,2,7,-2,1,-7,-4,3,-5,-7,-10,-5,-2,2,4,-1,-7,10,-10,-4,-8,-10,-5,-6,-8,7,9,8,7,-5,7,4,10,10,8,-5,-3,9,-9,-10,1,6,-3,3,6,1,-5,-9,-8,-9,1,3,8,-5,10,-6,3,10,6,-6,-1,-8,-9,-3,4,-5,5,-10,-1,-2,10,-1,1,1,-5,2,3,2,4,2,7,-4,3,-5,-9,-5,-6,4,-8,-7,-3,8,-8,1,-8,-4,8,7,-2,-8,-1,3,-9,-9,3,9,6,3,8,7,-7,-2,9,-6,4,-5,9,6,-5,5,10,4,-1,-9,-9,6,-9,10,-8,10,-2,-8,-1,9,9,1,-7,-5,-2,-9,1,8,2,8,6,-3,-3,1,5,-9,3,-2,-7,-1,1,1,-5,-4,6,-8,-1,3,2,-7,4,-1,-6,-9,2,-1,2,-7,-10,6,2,-8,-7,-7,5,-5,-10,5,-9,-10,-6,4,-4,7,-1,-9,10,-5,8,-7,-6,1,-9,1,-5,-1,-3,-1,5,10,-2,8,-8,-9,7,-1,-8,-8,-3,9,1,8,-6,-10,6,8,2,-10,-10,-9,4,-9,-4,-1,5,4,-9,-9,-9,7,-2,-3,-10,-5,1,9,-3,10,-5,-6,-1,8,3,5,8,-9,-7,-5,7,-1,-3,6,7,7,6,-4,-6,-7,10,10,3,8,-4,-1,4,-1,-10,-5,4,-1,-5,-5,5,-9,3,-3,-3,-10,-4,7,-3,-5,7,2,-1,-10,-7,-9,-9,7,2,-10,-1,-9,3,4,-6,9,-8,7,-5,10,-3,4,9,-6,1,3,8,8,-10,7,1,3,8,-3,-4,5,-9,-1,-10,9,-3,-5,4,2,8,-2,-7,2,-3,-10,-5,-8,4,5,4,-7,-6,-8,8,4,9,-6,-3,2,3,-6,-7,-7,4,4,5,5,-4,2,4,9,-6,-10,5,-4,5,9,4,10,-9,6,-6,7,-7,-1,7,-4,4,1,-5,-10,-6,-10,-6,-10,7,-8,8,-2,-6,-6,2,5,4,-7,-4,-7,7,-3,-2,-7,9,-3,-3,-4,9,-2,-1,-10,7,-2,-4,1,10,4,5,2,-9,2,1,2,9,-4,-5,3,-2,2,6,9,7,10,7,7,7,1,-7,-2,7,7,2,5,-5,-2,-10,8,8,-9,-8,-2,-6,-6,6,-1,6,6,-8,-2,7,5,-8,-3,1,-3,8,5,-10,1,1,-10,2,4,8,2,-3,1,1,8,-9,10,-8,-5,8,-4,-10,5,-2,-9,-5,6,-9,9,-2,-2,10,10,9,-6,-9,-5,7,-10,-6,-9,-1,1,1,-2,7,-6,3,6,-9,-8,-3,9,2,-8,8,3,2,1,-2,-8,6,9,-10,-3,5,7,-4,-9,6,7,5,-7,-2,10,-3,6,-2,9,9,-9,3,4,6,6,-9,8,-2,10,-5,-9,-9,-8,-9,-3,8,3,-1,1,-10,-9,-9,-4,-4,-7,7,7,-1,8,-1,10,-4,3,10,1,2,-1,-9,-3,9,1,-6,-3,3,-8,-4,-6,-1,-2,-4,3,2,-6,-6,3,-9,-5,-5,1,-2,2,9,-2,6,1,8,-3,-7,1,-10,-3,1,5,6,1,6,2,1,6,-10,5,-3,8,1,-5,6,-1,6,10,-1,10,6,5,-7,-3,7,7,-8,2,-4,10,7,-6,7,-4,9,-10,-5,-10,-5,1,3,-4,3,-2,-2,-9,-8,-1,1,5,-7,-2,-9,5,7,6,2,-5,-5,-1,3,-8,-5,6,-4,5,-8,-4,-1,-3,-4,2,-10,-2,8,-1,-3,10,8,3,8,3,-7,5,7,10,-8,9,1,-2,-5,8,4,8,-5,-3,-9,1,5,-5,5,-6,-8,-2,8,-6,10,5,-5,3,-3,2,-3,9,-10,-2,10,1,-7,-6,8,-10,-9,2,7,3,2,-2,-10,-4,-5,-7,-8,-4,-3,10,6,2,6,-9,-9,-10,10,7,3,2,10,5,-8,-3,-1,4,4,5,8,-2,10,8,-4,-10,8,4,-1,-8,-8,-2,5,-10,-2,10,3,-6,3,-3,-3,-1,6,1,-4,8,1,5,-6,6,10,-7,-7,5,1,5,2,-4,-3,6,5,3,4,5,-3,-9,6,-7,10,-3,2,4,-5,-10,5,-10,-10,8,1,5,6,-8,-9,-5,8,10,5,-2,2,1,-6,8,5,1,1,1,-9,10,-3,6,3,9,-2,10,-3,-3,-3,-6,-9,6,10,-9,-6,6,4,-1,2,6,-3,9,-9,-6,5,1,-10,6,-4,-10,4,2,-9,-4,6,-4,6,6,6,-8,-5,-7,-7,6,7,-4,1,-8,8,9,2,3,-7,-3,-3,5,1,-5,-4,2,7,4,-1,-6,6,4,-1,6,-8,-4,-2,-2,-1,-3,-10,-10,-2,-4,-9,-5,8,-1,-8,10,9,-10,-4,-8,-1,-2,8,7,8,-5,2,10,-1,2,1,7,5,-3,-2,-4,1,-6,-9,9,4,2,7,-9,-4,-10,-10,-5,6,4,8,-1,-5,8,-9,1,4,-3,-7,9,-3,6,-6,10,8,10,-5,5,-7,6,-1,-3,-2,3,-1,1,-1,-7,8,7,-3,-4,-7,8,1,3,-1,-4,-5,2,-9,-9,-10,5,6,-5,-10,-7,7,4,1,7,-4,-5,-10,-4,-2,9,-9,-1,10,-4,-5,9,10,8,-9,-5,8,1,-9,-6,7,-4,-2,1,-10,-2,10,7,-3,1,-1,-8,-8,-8,-5,7,-10,8,5,1,8,10,-5,8,-3,-3,-7,5,9,10,8,5,10,7,7,-1,-3,1,-10,-7,9,-9,-8,-10,8,2,9,3,5,7,9,-6,-2,2,7,-5,7,1,-8,4,-2,1,6,-3,3,-2,9,-9,-5,3,8,8,-3,3,-1,7,-5,-5,4,3,-9,4,-3,8,-1,1,10,5,10,7,6,3,4,-2,7,8,10,-3,-2,-10,4,2,-1,-9,4,-2,-10,2,2,-2,9,4,-9,-10,-8,4,4,-7,-3,-7,2,9,-4,-6,5,7,8,-3,6,10,6,7,-9,8,-1,-3,4,-3,-3,9,6,3,-5,5,-2,9,-10,-1,-9,3,3,10,-7,10,-3,1,-4,5,5,-3,6,6,-8,-5,7,6,-5,1,-1,-4,-9,4,-3,3,1,-4,9,3,8,-4,-5,7,5,1,-7,10,4,-9,5,5,-1,-4,-1,-8,4,-4,-10,-10,8,-1,-8,3,5,1,6,-7,-6,-7,-6,6,5,-1,-2,2,-2,-5,5,4,-1,-1,2,-6,-7,-3,-10,-6,-10,1,-8,4,-5,-2,-8,-2,3,8,9,4,-8,10,-8,2,3,-2,6,1,-6,4,1,-2,9,-10,3,6,-10,9,5,8,5,-9,5,-4,4,2,6,-8,4,-3,1,-10,8,-1,-9,8,-6,-6,-8,-3,-10,6,10,1,3,3,-5,-8,-10,-5,5,-4,-2,-5,3,-1,-2,-9,2,-6,-7,-10,2,5,-7,3,-6,7,7,6,-8,3,5,-2,-3,1,-9,-2,9,3,10,9,4,3,6,1,10,5,7,10,8,-10,2,-10,-1,-8,10,8,1,-5,-5,-2,10,10,-9,-7,-4,5,-9,9,-9,-3,-4,3,4,-4,-4,-4,6,-2,-6,3,8,-8,-3,6,-5,1,2,7,-1,5,-9,-2,4,-1,4,2,2,-8,-10,8,-5,-7,6,3,4,5,-10,10,2,6,-5,-10,10,-5,4,6,-4,-8,-6,8,-10,7,1,-6,1,8,2,-5,8,3,-3,3,3,-10,2,-2,10,-2,7,3,-10,3,1,-4,-10,-2,9,4,5,-2,-1,-1,4,-3,3,-8,-7,5,-1,-8,10,-5,5,1,-3,-7,7,-5,-3,-1,-4,-7,2,-10,3,-3,10,-1,9,-5,7,7,1,-5,10,-9,7,-5,10,-1,5,-7,3,-10,-2,-5,8,-10,-3,1,5,8,-6,10,-10,10,-4,-2,6,9,8,4,-3,-5,3,10,8,9,-10,-1,-7,-6,1,-8,-2,5,-1,8,-7,-2,10,8,9,3,6,10,6,-6,5,-4,-1,9,-7,-7,1,-5,-3,-9,10,-4,8,2,3,1,-4,-5,3,8,-2,-4,-6,3,4,4,6,2,3,5,4,3,10,-2,5,-3,-4,-7,-8,10,4,7,9,3,-3,-9,6,-4,2,-9,3,2,-1,-8,1,2,-9,7,-8,1,9,-10,-1,-1,-8,10,4,-9,-4,7,-4,-3,10,2,-10,-9,4,-4,-4,10,7,3,3,-8,8,4,-6,4,7,-2,-10,6,2,1,-4,8,-2,-5,-1,-3,10,-3,-2,-10,5,-6,7,-9,3,-7,-2,8,-3,8,-8,5,8,-4,-4,-1,-8,-4,-10,-8,-4,10,7,9,-3,-6,-7,6,-10,6,-5,-5,-4,2,3,-7,-4,-2,-4,-2,9,5,10,3,-2,-4,-6,1,-7,5,2,6,8,-6,-10,-9,-6,-6,8,4,8,6,-6,-7,-2,10,6,-10,7,-7,2,-7,10,5,-3,-7,-9,-7,2,6,6,-7,-6,-5,3,-2,-9,5,2,-9,-1,6,-1,-6,6,-6,10,5,2,-10,3,10,-1,-3,-5,10,9,7,-10,3,-5,-8,-4,-2,2,-1,-4,-7,4,-9,-2,-6,-6,1,5,2,10,-6,3,-3,2,10,-3,-4,-8,-7,-2,3,5,4,5,10,5,2,-6,3,-8,-7,-1,-7,3,-1,-6,-5,-8,1,-6,-1,-8,9,9,-5,4,-8,-10,5,-1,-10,-3,-10,-5,-6,-1,-2,-1,5,2,9,-2,2,-5,7,3,5,-6,9,-5,2,2,-6,-6,5,3,-5,-10,-8,4,-3,7,-7,2,-4,-10,2,2,-7,1,10,5,-2,4,1,7,9,1,-9,-1,-9,-9,5,1,4,3,7,-9,6,-8,3,3,1,5,7,3,7,7,5,-3,9,3,5,-4,7,-1,9,-10,6,-2,-3,8,-9,1,10,-3,9,4,9,-6,10,-5,-1,-1,2,1,8,-5,-4,-1,10,3,1,3,3,-4,-9,4,-6,7,8,-7,-5,5,9,-4,-3,6,2,4,1,2,1,-7,1,-8,2,-7,-6,-6,8,5,7,-5,-3,8,-1,3,6,-8,6,6,-9,-4,-3,3,-2,-5,10,-2,1,8,-2,-3,-2,7,-8,5,4,-4,2,2,-6,7,-9,10,10,-3,8,3,8,10,-3,-5,6,5,9,-4,-4,-2,1,-4,-7,-5,2,6,8,-8,-1,-9,4,-5,-1,7,-1,10,-10,-2,1,3,5,-7,-3,5,10,1,8,-5,6,-6,-3,-6,5,2,-5,-1,-4,7,-5,-1,6,7,7,-3,-7,9,-9,5,-5,10,-3,2,1,-5,2,1,8,-2,-1,-10,-7,-10,-4,-10,3,-8,-3,6,-2,2,6,1,-3,-3,-1,-5,-9,-5,-10,-1,7,1,-2,5,9,7,3,1,5,2,-6,2,-10,8,2,-4,9,-8,-4,4,-4,-9,2,-3,-6,1,-2,7,2,1,-3,4,2,-4,6,-10,-2,7,2,1,5,-10,-6,8,-10,-3,-5,8,8,-6,1,-5,6,9,2,-6,1,-5,-10,-7,3,7,7,-5,-7,-9,6,5,6,10,1,6,-1], dtype = "int8")#candidate|8117|(2304,)|const|int8
const_8118 = relay.const([8.548775,8.296020,3.715221,6.673357,3.067610,-7.572586,6.781730,7.627149,-3.436481,-4.778958,1.663960,-5.130850,1.933572,3.304657,2.310882,7.863459,-7.104108,-2.895683,7.368887,4.349568,-3.692738,-3.718730,6.719025,2.359229,-6.309679,-1.332916,5.490173,-9.615780,4.637490,8.777403,-9.778988,7.329920,2.611970,-4.794426,7.511111,-7.520564,5.329521,6.676337,-3.674768,-0.632526,-7.717379,-5.215827,-0.858773,8.465398,4.534268,-0.639619,0.216187,-9.171913,8.259076,3.599400,-6.343015,8.439722,2.612836,-0.977795,2.701206,-1.036351,6.928687,0.318891,-0.638985,1.560506,-7.012338,0.723678,8.707070,-1.594049,-7.562976,4.897454,2.488667,0.642450,9.703330,2.671010,-4.066086,8.970815,-2.470166,3.372680,6.308229,-1.537260,7.718189,1.131615,5.666587,9.568229,2.374743,-3.032362,8.000786,8.757842,4.084867,6.426134,3.354107,1.998996,-2.738881,-2.553259,9.283013,0.081891,-0.811659,4.450375,-7.755120,7.813702,4.665370,3.095607,6.965776,-5.701990,5.170147,4.234432,-0.669503,-0.147037,8.164982,-5.175068,-7.213792,7.809000,-4.039888,-3.130477,-3.803634,-1.092313,-3.830013,-4.923307,6.953080,-9.193725,8.276601,0.641241,0.444588,-8.768348,-4.428544,1.458277,-3.665448,3.484374,-2.460182,3.396924,0.973904,-1.084549,3.898748,-6.147051,4.054813,3.793470,-3.374087,-8.671717,0.796747,-9.445617,1.569246,-8.159165,9.152446,-2.321612,9.662692,-2.482988,-4.002119,-0.388318,5.935076,-4.735233,-8.606103,5.499216,-5.158470,-5.658918,-6.736284,0.364555,-8.037211,8.847993,2.884863,1.376380,-9.816861,7.027604,6.739388,-2.947223,-3.394059,4.633282,5.228277,5.109882,1.517272,7.758262,7.907441,9.550970,-3.187542,1.353326,7.715894,-4.633311,-0.005771,-6.220734,-8.507305,-0.008667,0.948465,1.060868,1.846709,-2.925034,-0.159940,-2.013851,-2.337499,3.425611,3.054869,-0.241095,-0.001934,-5.712039,-2.111725,-2.711228,7.820115,-0.114011,-2.296937,7.027255,-7.068389,-7.445641,5.535986,-4.816528,1.624640,-1.912827,-2.998878,1.559312,-4.596635,7.853936,-3.819029,7.262194,5.669434,-9.219106,9.211945,8.759653,6.683661,-5.112752,-5.171783,-0.682912,-9.989906,-2.594309,6.693404,9.105468,5.757602,-5.408154,-4.813420,-9.858316,9.695050,-1.795601,-4.289550,5.987570,1.653640,2.180086,-5.114853,2.910572,-6.006118,-6.926846,7.463328,9.641010,-5.554002,-0.434004,7.308353,-5.764773,2.913410,1.300220,-5.465427,5.596135,-9.239859,-2.608366,-7.137505,-8.895021,3.154872,-1.979115,-6.075959,-8.101515,-2.117706,-1.135263,2.085267,-2.278363,7.972239,-6.578649,-0.899785,5.423479,-3.291372,-5.339218,-7.627417,-7.244688,6.624143,-5.188257,-6.107350,-5.027605,-0.420673,7.001291,-1.234151,-9.755670,8.716587,0.699346,4.555028,9.524886,-8.201941,-2.098517,-4.313609,2.795111,-0.115028,9.916060,-7.220992,6.606648,-4.330773,-0.658566,-8.611260,-2.681236,5.269275,-4.217931,3.090649,9.105335,0.581557,-3.168076,-4.924842,8.816093,5.915589,7.024588,-5.178242,-5.138562,6.866170,6.386217,-6.918144,-5.404625,-7.968894,-6.843044,-1.290270,1.060780,2.041490,0.131164,4.973348,-2.983575,9.193087,-5.647428,-7.624725,1.612697,6.590602,-2.842322,-6.722364,-5.870751,9.078603,-9.811474,-4.335799,0.460271,9.547980,7.789905,3.604204,-7.404596,3.812410,-9.781323,7.021771,-3.150909,4.199919,-7.677924,4.678423,-4.540159,1.292074,-6.842926,-8.852628,-9.728409,-6.832756,1.038294,3.383987,-6.841754,-5.690651,7.891472,-2.749940,6.143143,-8.972554,-6.685726,-1.849838,-8.973752,4.471127,0.089444,-9.334449,-0.588223,0.051416,-9.724201,0.883765,5.077725,7.615156,6.703851], dtype = "float64")#candidate|8118|(360,)|const|float64
call_8116 = relay.TupleGetItem(func_5381_call(relay.reshape(const_8117.astype('int8'), [16, 9, 16]), relay.reshape(const_8118.astype('float64'), [360,]), ), 2)
call_8119 = relay.TupleGetItem(func_5384_call(relay.reshape(const_8117.astype('int8'), [16, 9, 16]), relay.reshape(const_8118.astype('float64'), [360,]), ), 2)
output = relay.Tuple([uop_8112,call_8116,const_8117,const_8118,])
output2 = relay.Tuple([uop_8114,call_8119,const_8117,const_8118,])
func_8129 = relay.Function([], output)
mod['func_8129'] = func_8129
mod = relay.transform.InferType()(mod)
output = func_8129()
func_8130 = relay.Function([], output)
mutated_mod['func_8130'] = func_8130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7976_call = mod.get_global_var('func_7976')
func_7977_call = mutated_mod.get_global_var('func_7977')
call_8166 = relay.TupleGetItem(func_7976_call(), 0)
call_8167 = relay.TupleGetItem(func_7977_call(), 0)
uop_8192 = relay.exp(call_8166.astype('float32')) # shape=(13, 4, 6)
uop_8194 = relay.exp(call_8167.astype('float32')) # shape=(13, 4, 6)
uop_8203 = relay.log10(call_8166.astype('float64')) # shape=(13, 4, 6)
uop_8205 = relay.log10(call_8167.astype('float64')) # shape=(13, 4, 6)
uop_8206 = relay.acos(uop_8203.astype('float32')) # shape=(13, 4, 6)
uop_8208 = relay.acos(uop_8205.astype('float32')) # shape=(13, 4, 6)
output = relay.Tuple([uop_8192,uop_8206,])
output2 = relay.Tuple([uop_8194,uop_8208,])
func_8209 = relay.Function([], output)
mod['func_8209'] = func_8209
mod = relay.transform.InferType()(mod)
output = func_8209()
func_8210 = relay.Function([], output)
mutated_mod['func_8210'] = func_8210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7379_call = mod.get_global_var('func_7379')
func_7381_call = mutated_mod.get_global_var('func_7381')
call_8232 = relay.TupleGetItem(func_7379_call(), 1)
call_8233 = relay.TupleGetItem(func_7381_call(), 1)
output = call_8232
output2 = call_8233
func_8238 = relay.Function([], output)
mod['func_8238'] = func_8238
mod = relay.transform.InferType()(mod)
output = func_8238()
func_8239 = relay.Function([], output)
mutated_mod['func_8239'] = func_8239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7753_call = mod.get_global_var('func_7753')
func_7754_call = mutated_mod.get_global_var('func_7754')
call_8324 = func_7753_call()
call_8325 = func_7753_call()
output = call_8324
output2 = call_8325
func_8358 = relay.Function([], output)
mod['func_8358'] = func_8358
mod = relay.transform.InferType()(mod)
output = func_8358()
func_8359 = relay.Function([], output)
mutated_mod['func_8359'] = func_8359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5781_call = mod.get_global_var('func_5781')
func_5783_call = mutated_mod.get_global_var('func_5783')
call_8363 = relay.TupleGetItem(func_5781_call(), 1)
call_8364 = relay.TupleGetItem(func_5783_call(), 1)
func_3802_call = mod.get_global_var('func_3802')
func_3803_call = mutated_mod.get_global_var('func_3803')
call_8376 = relay.TupleGetItem(func_3802_call(), 2)
call_8377 = relay.TupleGetItem(func_3803_call(), 2)
output = relay.Tuple([call_8363,call_8376,])
output2 = relay.Tuple([call_8364,call_8377,])
func_8379 = relay.Function([], output)
mod['func_8379'] = func_8379
mod = relay.transform.InferType()(mod)
output = func_8379()
func_8380 = relay.Function([], output)
mutated_mod['func_8380'] = func_8380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1944_call = mod.get_global_var('func_1944')
func_1946_call = mutated_mod.get_global_var('func_1946')
call_8413 = relay.TupleGetItem(func_1944_call(), 0)
call_8414 = relay.TupleGetItem(func_1946_call(), 0)
output = relay.Tuple([call_8413,])
output2 = relay.Tuple([call_8414,])
func_8424 = relay.Function([], output)
mod['func_8424'] = func_8424
mod = relay.transform.InferType()(mod)
output = func_8424()
func_8425 = relay.Function([], output)
mutated_mod['func_8425'] = func_8425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2261_call = mod.get_global_var('func_2261')
func_2263_call = mutated_mod.get_global_var('func_2263')
call_8446 = func_2261_call()
call_8447 = func_2261_call()
func_6969_call = mod.get_global_var('func_6969')
func_6972_call = mutated_mod.get_global_var('func_6972')
const_8450 = relay.const([-7.505505,-1.475286,-4.004624,5.966054,7.662807,-2.087687,2.746580,9.474856,-3.591426,-2.287566,-4.055118,-8.618467,1.003066,-7.454359,8.946282,-9.514809,4.206641,4.525331,7.701501,-8.422313,5.072096,0.377792,-8.134481,-1.900748,7.296182,-8.649898,9.039789,-9.358570,2.660049,7.824236,-3.835106,-7.960229,-2.027007,-5.627591,-9.540739,-8.407910,4.722188,7.240219,-8.708580,-4.607174,-9.273892,-4.647051,-8.249924,8.587907,4.738804,-9.484185,-5.125724,5.210084,7.424098,-7.931489,8.129873,9.530419,4.368023,-3.320758,-8.084580,9.440378,2.368291,-9.702438,-5.866462,2.512592,-1.015007,-8.985204,-4.913814,9.042460,2.147737,9.398484,5.005643,4.343005,5.054361,-3.752819,-9.768623,3.077932,6.132521,6.080241,4.802024,-6.071315,8.715936,-2.543576,-7.006953,3.687627,6.574668,-6.722176,2.208395,0.337304,6.459928,3.448057,1.692835,8.577751,-0.226466,6.018615,5.660102,-0.972023,-9.597115,-8.406667,-3.745204,-9.311014,2.633640,-6.268717,-1.925706,8.861571,-9.829443,0.689022,7.031824,-7.312983,-7.292127,0.467681,5.643608,-0.822171,-4.592006,9.391651,-5.777227,5.302075,-2.895444,-7.778209,3.783848,3.677874,-5.315473,-6.648470,8.661606,-2.393481,-5.989397,-9.695770,5.311739,7.497431,7.002849,-2.694315,-6.505084,7.733694,-2.041277,1.543027,-9.433997,1.848640,0.589565,-4.893274,-8.060665,-8.792669,3.603951,2.198200,8.978981,-8.309961,8.121195,-6.606585,-8.592788,-6.624901,-3.139694,6.327749,-2.820142,8.607880,-9.804236,7.909893,-9.247803,8.407982,-1.788842,-6.474319,6.524508,-3.186541,-4.604335,-1.302854,3.935749,5.072025,-1.734717,-1.806849,5.246513,-6.129307,4.295184,-7.013898,-9.034814,0.255681,-2.444559,-7.678980,6.206818,-4.538874,-7.127514,-4.851355,-8.098122,5.036622,-2.146508,3.252922,4.191446,2.588935,0.642940,2.497582,6.094757,-1.624360,-1.874787,6.223312,-8.280473,1.506733,-6.726406,-8.527983,1.970933,6.906081,2.233397,4.045414,3.718892,4.230921,9.319435,-4.717081,-1.431784,-0.966504,3.393498,-7.005859,-0.538373,-2.170505,9.983511,5.066753,-7.993573,7.613219,3.475806,1.241869,4.292491,-4.985503,3.147385,-7.273721,7.962111,-8.320476,-3.164714,-9.071056,3.025591,-2.450072,7.305008,9.364051,-2.736271,7.344447,-8.823879,-5.205943,-2.643258,-6.493877,8.382660,8.172238,9.368617,-4.683906,-8.997786,-3.078190,3.996923,-3.984871,-9.897844,6.858040,-0.099276,0.881924,9.916256,7.717112,-6.306291,3.332936,-1.919885,-6.830379,-7.247103,2.254028,-3.658019,-7.632971,-0.864250,-0.236455,7.867027,-7.652488,7.817148,-2.945051,2.033628,-3.247517,9.356299,-5.122810,-4.489754,3.625886,7.078405,2.103721,9.743485,8.253478,-2.393382,-3.968686,0.428840,-6.781805,-1.451832,3.204643,-3.725777,7.154136,3.905774,2.087808,3.884504,5.616323,7.075751,-8.797887,-6.905694,4.278104,2.763031,-7.212341,-9.250760,9.137309,4.773865,-3.374545,-6.455714,1.466107,2.675849,3.370806,-2.580927,7.975052,0.105728,-5.778045,-9.478667,8.225797,8.592619,-0.128862,-4.026991,2.544043,8.284884,3.158356,6.812299,6.368097,0.001139,7.652720,2.890537,2.001659,-9.688096,0.617418,3.862898,4.477628,-9.534917,-4.824307,6.443449,0.375293,-0.032011,8.908962,0.171384,-1.020369,8.095593,-4.013002,6.133896,-8.084311,0.442483,-6.225949,-3.978656,-7.450567,4.728101,2.906799,-3.601256,1.782456,4.792188,-5.523117,-0.235231,2.921339,9.481812,-9.291054,8.266757,-7.781605,-5.232572,-7.742922,-1.319680,-5.239324,5.787329,0.603512,-4.500247,-5.150630,5.350428,-2.457563,-2.838726,7.235413,-1.590931,-2.143908,-5.236360,-3.027769,4.761531,6.891914,9.718113,6.107710,7.148808,-7.220303,-1.592373,3.999686,-1.471703,6.349335,5.041547,-5.758136,-4.137490,-8.541240,9.613894,-7.243169,3.081103,3.028596,0.489828,4.575030,7.083290,-3.769808,1.685844,3.614898,3.950500,-3.291995,9.631932,-2.648550,5.555060,1.043085,-1.794174,3.159627,3.996100,-1.604205,5.046140,-9.495682,-4.527945,-7.922841,-2.786751,5.017033,-8.872671,9.906021,-7.252872,-3.922967,-3.421869,-2.432997,0.566113,-5.666225,-1.225035,9.971147,-3.038853,-4.381392,-4.840530,-9.994347,-2.937648,-3.522632,8.758616,2.225559,-0.111256,4.204630,9.317391,4.997120,1.670069,0.821916,-3.615965,-0.699401,-7.873067,6.473123,5.246984,-5.625714,1.502045,3.917511,-8.421816,-9.997215,-9.733541,7.528307,-9.764809,-8.571801,-5.415795,8.410645,-1.376271,0.758130,1.507645,5.169967,5.755068,-1.436895,-7.720065,3.961966,-2.232341,7.496326,-0.578814,-4.801931,2.012780,-7.990634,8.085683,0.407794,8.740324,-6.608694,3.478958,-6.339506,7.892039,-2.150238,-3.554038,-3.236555,0.194318,7.379032,-5.593717,-5.848166,-9.355469,9.845552,4.371463,5.653362,-2.137486,1.063939,0.711018,-1.175455,-5.036049,-2.947594,-0.784500,-5.865521,5.195065,5.261916,8.566752,1.552755,7.980865,2.107914,7.573424,3.679323,2.668247,-6.134653,-7.027428,7.654386,9.869370,1.088672,7.000340,3.633118,5.904588,-6.104896,2.013099,-8.022728,5.908704,5.216992,-7.226595,-0.868814,1.749339,-0.013899,0.267837,-5.935493,-7.848065,-6.780136,5.503422,-5.868529,0.881879,-5.892193,-8.453984,5.698519,-3.791709,6.086659,4.064770,-7.911422,-1.852851,0.253667,9.416352,-1.326780,0.148025,6.794062,-6.510750,-5.781292,-0.077466,-0.316081,0.351568,-4.163745,-6.485779,7.280590,4.123658,-5.138219,-8.774587,6.163079,-4.752814,8.446371,1.138357,-6.689154,-0.776554,0.133567,9.239903,-5.276683,3.957946,6.017875,-6.312157,9.444083,-3.967367,0.343244,5.598286,-4.070968,-2.178196,-6.897371,-9.867779,7.168040,6.694272,-7.399017,6.804225,0.834866,4.301520,-4.388078,7.483027,-0.425719,-6.988169,6.577008,-0.743628,2.146814,5.014186,-7.836385,-1.751932,3.523882,-6.594761,2.728092,-9.130284,-5.520493,3.062840,8.377473,7.612025,-0.832555,8.120512,1.159833,-0.765900,-3.639127,-9.755318,8.932218,-0.951771,-0.159709,-5.834552,-3.443652,8.127292,9.826477,-3.723156,3.717206,-0.782431,4.415215,4.266720,8.762463,2.581121,-5.747891,7.253709,-5.465040,-5.121923,-0.545150,-4.592633,7.432962,-1.526881,-7.868379,9.990309,-3.164432,-7.681494,6.888799,-9.384600,7.141491,-3.537215,-6.810364,6.094334,5.755336,0.283972,1.836988,8.605851,4.304692,0.718517,-5.635999,-9.338003,-5.284223,-8.401275,-6.413839,-0.749930,-0.738532,0.384864,-4.252624,3.207738,-2.988153,-6.927163,6.132197,-1.551490,1.287297,-0.230936,-8.268534,-9.124665,5.027984,-6.309797,9.505851,1.817123,5.286549,-5.652604,-7.293800,-5.439432,9.410831,-0.897459,-2.716003,9.906975,-9.362988,4.227547,-1.582906,3.916891,-2.082216,-8.062488,-4.682296,6.720046,-0.384102,-9.975878,6.713451,-7.444061,0.003113,1.381622,1.816667,6.830500,8.740717,3.067369,-6.888584,0.337052,-7.840295,-2.888200,-1.474779,7.320901,-2.464659,6.366699,-1.852700,-0.224324,-5.755309,5.642482,-0.379497,9.959664,1.099850,-7.490371,1.867817,-8.463148,9.292137,-2.648754,-2.570999,-3.597793,6.257264,-1.379845,0.542013,9.066787,5.919607,-3.704516,7.250006,1.996781,-1.023456,-5.847848,3.275280,2.464848,-3.963407,-5.308039,6.501532,6.536661,-9.056093,-0.068977,-6.695572,7.296789,-1.501207,4.928075,0.190778,-6.554811,-7.616022,9.382475,9.397173,-8.722915,3.195287,-5.266791,-3.941622,6.637516,-4.313893,-5.795246,-2.190536,-4.625097,0.956552,-1.240906,-5.388928,-9.111799,-3.252859,-4.854169,1.230089,5.578280,-0.783008,1.990924,8.231051,6.390154,6.438191,-6.560434,-9.102257,-3.247384,-0.094261,-9.893846,-9.835576,-0.816527,8.914945,-0.052762,3.407558,2.744760,-8.020040,-8.759634,1.594115,5.226269,-6.588023,-9.446592,-1.792817,-5.386722,-4.390910,9.321883,-3.848760,8.328016,-7.959089,-5.035219,3.687594,0.638869,-7.374387,6.779827,-6.561088,-6.325351,-4.517622,2.987585,-8.192813,5.106659,-6.386836,9.571855,-5.579876,-5.260350,-5.937022,6.492767,-9.138531,2.904326,-4.905084,2.981476,6.994993,3.113110,-0.538821,-9.328909,8.998758,0.898298,-6.591361,-1.272817,6.427848,-6.215674,5.693305,3.819391,-9.628678,-6.120105,5.857847,0.210306,-2.125547,-0.294429,9.188120,6.284412,4.299764,5.550406,4.474355,-3.162694,-2.807928,-2.315703,-9.865546,-0.403792,4.491817,-9.557439,-7.948979,0.322593,-5.330450,6.154145,3.449125,-6.679488,-4.349234,-3.881565,4.398355,-4.068315,7.232507,8.339314,6.772476,2.604575,5.467846,0.095843,4.220875,-6.550854,5.332567,-8.814362,-4.662481,0.328273,-6.331721,-0.929259,-2.438454,6.479141,4.816560,-4.525726,-1.757097,9.866081,1.448303,7.437919,-9.766820,-2.934594,-7.510144,-4.398982,-3.948345,4.168553,6.721553,-9.783006,-6.211971,-8.196904,7.015345,-6.841933,-1.548209,3.802660,4.472823,-6.511635,-6.713388,6.562173,0.009316,1.701442,0.264416,-7.263220,-6.999088,-1.524474,0.572466,-7.713903,1.554688,-6.834425,7.295359,5.294960,8.632370,-2.538801,5.094768,-0.260796,0.877602,-4.688225,-1.531663,3.907390,8.399528,4.048546,-3.286940,9.540343,0.088741,5.103179,2.241748,6.850458,8.533915,-5.268475,9.872905,7.265956,-3.913481,2.044089,4.499546,4.860819,-0.142946,5.375051,9.643438,2.311974,-6.570278,1.046891,5.686686,-0.433855,-0.142200,0.368222,8.440982,-3.464980,-3.841558,-9.888153,-6.540929,7.205863,3.515197,-0.763085,5.431083,8.857369,-0.638494,-1.310483,0.870813,-0.890458,3.043494,2.521589,8.698123,8.417654,1.545016,7.475400,6.196820,-8.878725,2.328211,0.439740,-0.855857,-1.455803,4.926532,8.462491,-6.671807,-2.217206,5.193522,-6.700658,6.533372,5.501723,-6.424959,3.360636,1.091351,-1.835870,-3.119793,9.761523,-4.250885,3.863751,-7.618854,-7.153968,8.790538,2.124695,-8.710252,9.990521,6.278355,-8.228598,9.233988,2.851683,1.419877,3.727015,-9.104183,9.147912,-2.788243,-1.038907,0.672563,3.087982,-7.394844,2.564153,9.582587,-0.186177,6.657441,-3.151224,-7.936345,8.527093,4.647927,4.908808,-3.465166,-7.786539,-4.578063,0.713594,9.246989,-5.843564,7.485604,-8.600696,-6.301749,9.623246,9.072602,-2.053164,-0.929624,9.071276,-5.474342,8.217850,0.951543,8.679130,-7.550629,8.547882,-9.730034,0.181535,-1.503584,-8.821527,4.957627,-4.122945,9.754551,-5.534208,2.637791,8.915995,8.992808,-1.816143,-2.542727,-6.739432,-0.551953,-7.811894,0.465138,7.604898,1.634921,-1.867446,5.163778,3.526398,1.432789,-8.447044,3.011559,-9.246464,-2.344790,-6.474946,-3.420783,-8.078087,-3.456971,9.100807,-0.804291,8.528963,-3.106146,-9.228789,5.290662,-7.986735,-6.297324,3.802423,-4.388760,-1.750179,-1.051928,2.578699,7.641601,5.407294,-2.391062,7.936453,7.229433,-0.128093,-1.924183,-0.314423,-5.432688,-9.971154,5.757361,7.307788,7.011464,6.085237,-5.697966,-6.332247,-4.144917,4.444369,7.131258,7.884745,-7.451898,-2.382981,2.646292,-8.668921,-2.996450,-1.143723,-7.264731,8.431034,4.216782,2.608688,-3.718695,9.883535,7.435342,7.392929,9.668973,-4.632536,8.844513,-7.510198,5.014906,-6.881971,2.400306,6.491719,-4.970477,7.164277,2.451102,2.379254,-9.803573,-1.316311,-0.397376,-0.460898,4.681950,5.852834,-4.617695,4.474257,-0.913643,0.762602,-2.877079,9.622569,6.834326,-8.559215,7.157141,-3.464977,-4.275184,5.018615,3.603401,-9.174001,-2.677408,9.534141,9.599610,-8.646088,-5.095049,1.450960,3.048637,-3.166806,7.032257,8.607766,-6.121952,-8.322154,6.248472,6.530525,-7.492459,6.173436,7.437896,8.403374,4.900196,-0.870131,2.768080,-9.398398,-2.837531,8.118353,2.945397,-1.842938,1.863933,-7.465458,5.043233,4.314743,9.145439,-2.618601,2.738002,9.324946,-2.984132,-1.069420,9.248049,-6.814112,7.616354,1.604793,-9.936656,9.389950,-1.401675,-3.055211,0.834285,9.231709,-6.682177,-3.668805,0.497065,-3.220647,0.099538,9.964394,9.755783,6.030760,-9.725663,9.450362,-0.092946,-4.097830,-3.097033,-8.838018,-6.104541,-3.100674,-5.565659,-6.360920,-2.713466,0.382468,5.233021,-3.243502,-1.373613,-8.160790,-4.974891,5.961929,-9.115117,-5.342067,7.833922,-0.102192,-1.431966,-9.066878,8.719570,9.436447,-5.892141,-3.991989,0.583861,-3.542326,-0.066929,-1.262093,8.114914,2.910410,0.090753,-2.285248,4.132905,-3.751253,-9.763771,-9.287506,7.165628,1.663473,-3.180836,-1.394931,4.193213,8.541365,3.909768,-4.147299,2.088436,-6.998019,0.464911,1.848378,3.364699,3.571960,9.288881,-1.606665,2.448757,-1.108450,4.826250,1.220491,7.507376,-8.443388,0.482654,9.117144,-5.557527,3.339345,0.840336,-2.128085,7.188917,-6.820114,6.220677,2.481668,-8.633914,-9.166571,-1.509894,-1.870028,-8.864490,-2.103990,-0.361087,0.484029,7.510598,-0.133728,6.424367,-4.738156,-8.982325,4.191545,6.007709,-8.486862,-2.512201,8.135043,6.627204,2.955831,-4.868815,3.713025,6.659065,1.134078,1.947583,0.687538,7.885630,1.998635,-3.126058,2.287129,-2.769231,-0.542304,4.007218,4.424350,5.309261,-6.929142,6.065244,-3.786143,-3.816107,6.171081,-1.624017,2.834748,-5.682775,4.618801,5.290358,-2.596215,3.333140,4.993473,-3.371509,4.848454,8.520007,8.668799,8.161482,0.791076,-0.836902,6.205523,-5.281102,-2.850647,-2.592018,6.058593,-3.042023,2.512897,-0.649732,-5.842757,5.033720,2.594020,-8.203321,1.844019,-8.502269,4.914266,-2.106621,0.484567,9.863799,7.657096,-6.306968,-7.761184,8.997961,-5.624399,-1.861658,-4.434114,-6.376365,-9.609895,6.821104,-4.376283,-4.006317,-0.478791,-0.886397,4.970984,9.422846,9.747114,-6.379160,-2.493359,8.338547,1.363457,-7.495200,-6.610551,3.139463,1.298532,-7.255101,7.602926,5.125806,7.062770,0.168755,-6.411711,-6.938215,-9.204443,5.388104,-8.256355,3.254472,-2.358130,6.357413,-9.047063,8.298297,5.033995,4.288503,-2.251096,-3.194794,9.323311,4.517130,-1.317486,6.438823,-4.352442,-4.091788,-7.599818,-3.959424,0.460573,0.226150,0.938595,2.779877,-6.141352,8.433550,3.343092,8.317324,5.228381,-2.235873,-6.865326,0.747460,-2.994691,9.417754,8.326176,0.746470,1.892322,6.944055,1.440165,-9.336405,3.007714,6.758997,5.218060,6.824650,8.078347,3.941554,-0.446724,-8.785797,-9.499756,9.247551,4.293815,-7.660756,5.505966,3.722704,-6.841232,-3.208321,2.958996,-2.915939,-7.970149,-1.266549,-1.360710,0.896142,-4.947298,1.682398,0.766550,-2.845622,-4.221656,-1.075513,-9.959050,-5.489531,8.243293,1.015453,-9.077558,6.867196,3.005267,-0.479654,7.967164,-3.101589,1.610600,-1.457518,-0.388005,-6.383814,8.195221,-9.062839,-7.877671,-6.653118,-6.993000,5.589536,-3.370373,9.264401,-6.171521,6.560275,-1.790448,6.527652,5.608857,-4.772336,-0.451595,-8.381427,9.411219,-6.178580,-1.756462,1.620174,-0.017845,3.199493,-2.724828,-5.486264,2.374537,-2.696855,-2.804658,0.828722,-4.194345,1.477539,-5.525758,-9.595281,5.450124,-7.273832,-9.757817,-1.481027,-5.187628,9.481757,-1.160334,4.875022,0.748256,7.799785,4.081454,0.626544,8.259896,-1.504967,1.535763,7.277137,6.241279,-4.696737,-9.853422,-8.778034,-6.373006,9.978236,-5.765954,-5.834872,-5.757811,5.863756,5.960450,6.437697,1.765991,-9.554538,5.818596,1.492142,0.150103,-3.637748,-1.575832,-6.976615,-5.059523,-6.317661,-9.702849,-0.935807,-6.664058,-4.049737,-4.824759,-1.903171,-8.732593,-6.000454,2.719741,-6.478363,0.959346,-7.843715,-1.357019,5.157672,-8.924302,5.450516,-2.836339,5.996566,4.188205,-0.843265,-4.270737,5.535743,-8.268212,-4.219318,-1.787118,-2.523533,9.692238,1.586635,-0.886702,-8.966719,-4.725130,1.500179,1.708453,-3.057602,5.504467,-9.785534,7.324992,-5.666697,-7.071080,2.784693,5.980718,-3.761600,-7.097293,-2.929854,-6.622673,2.199327,-4.003094,-8.752255,-9.461056,-6.598878,7.026266,6.904122,0.528528,-3.488216,-8.696073,-5.880725,-2.446798,-8.737469,-0.996029,5.636386,0.041613,-2.775202,7.404681,2.095652,3.525472,1.018218,-5.807082,5.145068,-4.710710,6.565572,-2.827391,2.248511,4.547795,0.487408,-1.789177,-4.521325,-3.567432,-7.167362,8.912528,3.045459,0.583513,-8.337566,7.063912,6.285109,6.215170,-8.617337,-7.149009,-7.638427,6.609247,-4.753312,-0.460080,7.524317,9.544843,6.834153,9.774702,6.052673,7.079252,-3.264014,4.343647,5.164137,3.300737,-6.828473,2.585918,7.369050,4.526195,-6.556713,-2.382083,-8.910721,6.542859,9.674461,-6.280780,-5.629941,-4.939636,-4.208687,-8.190110,-7.964659,1.273763,-9.738065,-6.247966,3.781433,1.099292,1.315557,0.855733,2.012087,7.703487,8.018947,1.334675,-0.459901,-2.339456,0.773226,-4.517158,-8.344857,2.081142,-9.734721,-9.613980,5.939569,9.491068,-7.501911,-6.740691,-8.997203,-5.729069,7.017895,0.816939,5.006672,-8.084516,-4.206474,-2.243737,-4.886821,1.433117,2.345978,-4.940688,7.560991,-5.834583,-6.962142,5.863930,-5.517764,-1.765984,2.398902,8.968499,5.330253,-7.000442,-8.614911,3.276900,-6.243638,7.593761,-6.805597,-3.028568,-2.847681,8.412660,6.962163,2.525972,-0.836399,7.752283,6.230386,-2.233635,-4.276109,-3.250958,-4.462149,4.938204,3.029626,-2.814961,-8.140395,4.846797,5.131151], dtype = "float32")#candidate|8450|(1680,)|const|float32
call_8449 = relay.TupleGetItem(func_6969_call(relay.reshape(const_8450.astype('float32'), [14, 10, 12]), relay.reshape(const_8450.astype('int32'), [14, 10, 12]), ), 2)
call_8451 = relay.TupleGetItem(func_6972_call(relay.reshape(const_8450.astype('float32'), [14, 10, 12]), relay.reshape(const_8450.astype('int32'), [14, 10, 12]), ), 2)
output = relay.Tuple([call_8446,call_8449,const_8450,])
output2 = relay.Tuple([call_8447,call_8451,const_8450,])
func_8476 = relay.Function([], output)
mod['func_8476'] = func_8476
mod = relay.transform.InferType()(mod)
output = func_8476()
func_8477 = relay.Function([], output)
mutated_mod['func_8477'] = func_8477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3242_call = mod.get_global_var('func_3242')
func_3243_call = mutated_mod.get_global_var('func_3243')
call_8495 = relay.TupleGetItem(func_3242_call(), 0)
call_8496 = relay.TupleGetItem(func_3243_call(), 0)
func_7157_call = mod.get_global_var('func_7157')
func_7159_call = mutated_mod.get_global_var('func_7159')
call_8509 = func_7157_call()
call_8510 = func_7157_call()
output = relay.Tuple([call_8495,call_8509,])
output2 = relay.Tuple([call_8496,call_8510,])
func_8554 = relay.Function([], output)
mod['func_8554'] = func_8554
mod = relay.transform.InferType()(mod)
mutated_mod['func_8554'] = func_8554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8554_call = mutated_mod.get_global_var('func_8554')
call_8555 = func_8554_call()
output = call_8555
func_8556 = relay.Function([], output)
mutated_mod['func_8556'] = func_8556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7379_call = mod.get_global_var('func_7379')
func_7381_call = mutated_mod.get_global_var('func_7381')
call_8580 = relay.TupleGetItem(func_7379_call(), 1)
call_8581 = relay.TupleGetItem(func_7381_call(), 1)
uop_8600 = relay.sigmoid(call_8580.astype('float32')) # shape=(6, 15, 15)
uop_8602 = relay.sigmoid(call_8581.astype('float32')) # shape=(6, 15, 15)
output = relay.Tuple([uop_8600,])
output2 = relay.Tuple([uop_8602,])
func_8610 = relay.Function([], output)
mod['func_8610'] = func_8610
mod = relay.transform.InferType()(mod)
output = func_8610()
func_8611 = relay.Function([], output)
mutated_mod['func_8611'] = func_8611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3585_call = mod.get_global_var('func_3585')
func_3587_call = mutated_mod.get_global_var('func_3587')
call_8612 = relay.TupleGetItem(func_3585_call(), 2)
call_8613 = relay.TupleGetItem(func_3587_call(), 2)
output = call_8612
output2 = call_8613
func_8621 = relay.Function([], output)
mod['func_8621'] = func_8621
mod = relay.transform.InferType()(mod)
mutated_mod['func_8621'] = func_8621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8621_call = mutated_mod.get_global_var('func_8621')
call_8622 = func_8621_call()
output = call_8622
func_8623 = relay.Function([], output)
mutated_mod['func_8623'] = func_8623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7128_call = mod.get_global_var('func_7128')
func_7129_call = mutated_mod.get_global_var('func_7129')
call_8624 = relay.TupleGetItem(func_7128_call(), 1)
call_8625 = relay.TupleGetItem(func_7129_call(), 1)
output = call_8624
output2 = call_8625
func_8626 = relay.Function([], output)
mod['func_8626'] = func_8626
mod = relay.transform.InferType()(mod)
output = func_8626()
func_8627 = relay.Function([], output)
mutated_mod['func_8627'] = func_8627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2143_call = mod.get_global_var('func_2143')
func_2144_call = mutated_mod.get_global_var('func_2144')
call_8673 = func_2143_call()
call_8674 = func_2143_call()
func_3036_call = mod.get_global_var('func_3036')
func_3038_call = mutated_mod.get_global_var('func_3038')
call_8675 = relay.TupleGetItem(func_3036_call(), 0)
call_8676 = relay.TupleGetItem(func_3038_call(), 0)
func_6466_call = mod.get_global_var('func_6466')
func_6469_call = mutated_mod.get_global_var('func_6469')
const_8703 = relay.const([9,6,-8,2,-1,4,-8,-1,-5,-8,-8,4,9,5,2,-3,-3,-5,-9,-4,-5,-2,-9,3,-3,-9,-2,-10,-4,2,-4,-1,7,-1,4,-7,-6,-10,-1,10,-6,6], dtype = "uint32")#candidate|8703|(42,)|const|uint32
const_8704 = relay.const([8,-3,7,7,-6,3,-1,3,-4,6,-5,-10,4,6,-3,8,8,4,-1,-1,-5,6,-1,-3,-9,10,-9,-9,-6,3,-3,3,-4,-7,9,-2,4,10,9,2,-6,2,-5,-8,-5,2,-4,9,3,-1,-6,5,-4,-5,10,-3,-2,-2,9,7,3,-1,-4,4,-10,8,-1,8,-9,10,-2,8,9,8,9,1,-5,-8,-7,-6,9,-3,-10,6,3,1,-9,7,8,-8,-3,9,-5,6,-1,-7,8,-3,-8,-10,-4,-6,9,-5,-1,1,3,-3,-1,10,-3,4,-4,2,5,5,-10,-4,-6,-5,1,-2,-8,-5,-4,-10,-2,8,1,-10,-9,-6,7,9,1,10,-10,8,-7,-6,10,8,8,7,-6,-6,3,-8,-5,4,1,-8,6,8,3,-6,9,4,-10,9,-2,-4,10,-7,-9,9,-5,-10,6,-8,-3,1,-8,1,8,5,6,4,1,9,2,-7,-6,2,6,-1,4,-3,7,-10,4,4,5,4,-9,6,-2,10,2,1,2,9,4,-8,-5,-7,-4,-9,-8,4,5,-9,-5,-6,-3,-6,-7,-10,-8,3,7,-4,-10,9,-7,7,5,10,7,6,1,6,7,-2,-4,-10,-6,1,7,-3,-7,6,-8,-3,-2,-4,10,-4,6,2,10,3,6,1,-8,-10,5,-8,-4,-8,9,-1,4,6,1,3,1,5,-2,5,-1,8,2,-10,6,-7,4,5,-5,-9,2,8,-8,3,9,1,-4,9,4,6,-1,-8,-1,2,-6,2,1,-1,3,8,-5,-6,-9,-7,-6,6,6,-2,-6,4,-3,2,-6,-2,1,5,-10,-5,5,3,-6,9,-2,-2,-3,-4,5,-10,-1,2,-2,-5,7,3,-3,5,5,1,5,10,10,-6,-10,-5,-9,-10,-5,3,-7,6,-3,9,-5,9,-4,7,3,-8,-10,-1,-4,-9,-9,1,-9,8,-7,1,-9,-1,-9,8,4,4,-1,-2,-7,-3,5,4,2,7,-9,1,-1,1,-3,-2,5,10,1,2,-4,6,-1,-5,-2,-2,3,9,6,-5,-10,-5,-3,2,6,3,1,9,-2,2,-7,7,10,5,7,-4,-7,2,1,-5,10,-6,9,-2,10,-5,10,10,-7,5,-4,-10,9,10,-10,8,-3,2,10,3,9,8,1,1,-2,3,-9,-7,-7,-8,-2,-8,1,-8,-5,10,10,-5,-7,-8,-5,4,-6,-10,-8,1,-7,4,10,-8,5,-6,7,6,8,-4,7,-6,-1,-7,7,8,8,1,-5,10,8,-5,-9,-10,6,-1,3,7,4,-10,5,-4,-3,-10,7,-10], dtype = "uint32")#candidate|8704|(504,)|const|uint32
call_8702 = func_6466_call(relay.reshape(const_8703.astype('uint32'), [6, 1, 7]), relay.reshape(const_8704.astype('uint32'), [6, 12, 7]), )
call_8705 = func_6466_call(relay.reshape(const_8703.astype('uint32'), [6, 1, 7]), relay.reshape(const_8704.astype('uint32'), [6, 12, 7]), )
output = relay.Tuple([call_8673,call_8675,call_8702,const_8703,const_8704,])
output2 = relay.Tuple([call_8674,call_8676,call_8705,const_8703,const_8704,])
func_8706 = relay.Function([], output)
mod['func_8706'] = func_8706
mod = relay.transform.InferType()(mod)
output = func_8706()
func_8707 = relay.Function([], output)
mutated_mod['func_8707'] = func_8707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7439_call = mod.get_global_var('func_7439')
func_7440_call = mutated_mod.get_global_var('func_7440')
call_8741 = relay.TupleGetItem(func_7439_call(), 2)
call_8742 = relay.TupleGetItem(func_7440_call(), 2)
output = relay.Tuple([call_8741,])
output2 = relay.Tuple([call_8742,])
func_8743 = relay.Function([], output)
mod['func_8743'] = func_8743
mod = relay.transform.InferType()(mod)
output = func_8743()
func_8744 = relay.Function([], output)
mutated_mod['func_8744'] = func_8744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1635_call = mod.get_global_var('func_1635')
func_1636_call = mutated_mod.get_global_var('func_1636')
call_8786 = func_1635_call()
call_8787 = func_1635_call()
func_4277_call = mod.get_global_var('func_4277')
func_4279_call = mutated_mod.get_global_var('func_4279')
call_8819 = relay.TupleGetItem(func_4277_call(), 1)
call_8820 = relay.TupleGetItem(func_4279_call(), 1)
func_7784_call = mod.get_global_var('func_7784')
func_7786_call = mutated_mod.get_global_var('func_7786')
call_8823 = func_7784_call()
call_8824 = func_7784_call()
uop_8833 = relay.atan(call_8823.astype('float32')) # shape=(1200,)
uop_8835 = relay.atan(call_8824.astype('float32')) # shape=(1200,)
output = relay.Tuple([call_8786,call_8819,uop_8833,])
output2 = relay.Tuple([call_8787,call_8820,uop_8835,])
func_8853 = relay.Function([], output)
mod['func_8853'] = func_8853
mod = relay.transform.InferType()(mod)
mutated_mod['func_8853'] = func_8853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8853_call = mutated_mod.get_global_var('func_8853')
call_8854 = func_8853_call()
output = call_8854
func_8855 = relay.Function([], output)
mutated_mod['func_8855'] = func_8855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2443_call = mod.get_global_var('func_2443')
func_2444_call = mutated_mod.get_global_var('func_2444')
call_8896 = relay.TupleGetItem(func_2443_call(), 0)
call_8897 = relay.TupleGetItem(func_2444_call(), 0)
func_6334_call = mod.get_global_var('func_6334')
func_6335_call = mutated_mod.get_global_var('func_6335')
call_8900 = relay.TupleGetItem(func_6334_call(), 0)
call_8901 = relay.TupleGetItem(func_6335_call(), 0)
output = relay.Tuple([call_8896,call_8900,])
output2 = relay.Tuple([call_8897,call_8901,])
func_8903 = relay.Function([], output)
mod['func_8903'] = func_8903
mod = relay.transform.InferType()(mod)
mutated_mod['func_8903'] = func_8903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8903_call = mutated_mod.get_global_var('func_8903')
call_8904 = func_8903_call()
output = call_8904
func_8905 = relay.Function([], output)
mutated_mod['func_8905'] = func_8905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7095_call = mod.get_global_var('func_7095')
func_7097_call = mutated_mod.get_global_var('func_7097')
call_8946 = func_7095_call()
call_8947 = func_7095_call()
func_5810_call = mod.get_global_var('func_5810')
func_5812_call = mutated_mod.get_global_var('func_5812')
call_9003 = func_5810_call()
call_9004 = func_5810_call()
func_3759_call = mod.get_global_var('func_3759')
func_3762_call = mutated_mod.get_global_var('func_3762')
call_9013 = relay.TupleGetItem(func_3759_call(relay.reshape(call_9003.astype('uint64'), [6, 8, 11])), 1)
call_9014 = relay.TupleGetItem(func_3762_call(relay.reshape(call_9003.astype('uint64'), [6, 8, 11])), 1)
output = relay.Tuple([call_8946,call_9003,call_9013,])
output2 = relay.Tuple([call_8947,call_9004,call_9014,])
func_9019 = relay.Function([], output)
mod['func_9019'] = func_9019
mod = relay.transform.InferType()(mod)
mutated_mod['func_9019'] = func_9019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9019_call = mutated_mod.get_global_var('func_9019')
call_9020 = func_9019_call()
output = call_9020
func_9021 = relay.Function([], output)
mutated_mod['func_9021'] = func_9021
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9039 = relay.var("var_9039", dtype = "int64", shape = ())#candidate|9039|()|var|int64
var_9040 = relay.var("var_9040", dtype = "int64", shape = (2, 15, 10))#candidate|9040|(2, 15, 10)|var|int64
bop_9041 = relay.equal(var_9039.astype('bool'), var_9040.astype('bool')) # shape=(2, 15, 10)
func_4727_call = mod.get_global_var('func_4727')
func_4729_call = mutated_mod.get_global_var('func_4729')
call_9046 = relay.TupleGetItem(func_4727_call(), 0)
call_9047 = relay.TupleGetItem(func_4729_call(), 0)
func_5709_call = mod.get_global_var('func_5709')
func_5710_call = mutated_mod.get_global_var('func_5710')
call_9064 = relay.TupleGetItem(func_5709_call(), 3)
call_9065 = relay.TupleGetItem(func_5710_call(), 3)
output = relay.Tuple([bop_9041,call_9046,call_9064,])
output2 = relay.Tuple([bop_9041,call_9047,call_9065,])
func_9069 = relay.Function([var_9039,var_9040,], output)
mod['func_9069'] = func_9069
mod = relay.transform.InferType()(mod)
mutated_mod['func_9069'] = func_9069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9069_call = mutated_mod.get_global_var('func_9069')
var_9071 = relay.var("var_9071", dtype = "int64", shape = ())#candidate|9071|()|var|int64
var_9072 = relay.var("var_9072", dtype = "int64", shape = (2, 15, 10))#candidate|9072|(2, 15, 10)|var|int64
call_9070 = func_9069_call(var_9071,var_9072,)
output = call_9070
func_9073 = relay.Function([var_9071,var_9072,], output)
mutated_mod['func_9073'] = func_9073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3970_call = mod.get_global_var('func_3970')
func_3972_call = mutated_mod.get_global_var('func_3972')
call_9094 = relay.TupleGetItem(func_3970_call(), 1)
call_9095 = relay.TupleGetItem(func_3972_call(), 1)
uop_9096 = relay.cosh(call_9094.astype('float32')) # shape=(1248,)
uop_9098 = relay.cosh(call_9095.astype('float32')) # shape=(1248,)
func_1760_call = mod.get_global_var('func_1760')
func_1761_call = mutated_mod.get_global_var('func_1761')
call_9110 = relay.TupleGetItem(func_1760_call(), 0)
call_9111 = relay.TupleGetItem(func_1761_call(), 0)
output = relay.Tuple([uop_9096,call_9110,])
output2 = relay.Tuple([uop_9098,call_9111,])
func_9133 = relay.Function([], output)
mod['func_9133'] = func_9133
mod = relay.transform.InferType()(mod)
output = func_9133()
func_9134 = relay.Function([], output)
mutated_mod['func_9134'] = func_9134
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9160 = relay.var("var_9160", dtype = "float32", shape = (7, 15, 9))#candidate|9160|(7, 15, 9)|var|float32
uop_9161 = relay.log10(var_9160.astype('float32')) # shape=(7, 15, 9)
uop_9167 = relay.sinh(var_9160.astype('float64')) # shape=(7, 15, 9)
output = relay.Tuple([uop_9161,uop_9167,])
output2 = relay.Tuple([uop_9161,uop_9167,])
func_9173 = relay.Function([var_9160,], output)
mod['func_9173'] = func_9173
mod = relay.transform.InferType()(mod)
var_9174 = relay.var("var_9174", dtype = "float32", shape = (7, 15, 9))#candidate|9174|(7, 15, 9)|var|float32
output = func_9173(var_9174)
func_9175 = relay.Function([var_9174], output)
mutated_mod['func_9175'] = func_9175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6850_call = mod.get_global_var('func_6850')
func_6851_call = mutated_mod.get_global_var('func_6851')
call_9188 = relay.TupleGetItem(func_6850_call(), 0)
call_9189 = relay.TupleGetItem(func_6851_call(), 0)
output = relay.Tuple([call_9188,])
output2 = relay.Tuple([call_9189,])
func_9210 = relay.Function([], output)
mod['func_9210'] = func_9210
mod = relay.transform.InferType()(mod)
mutated_mod['func_9210'] = func_9210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9210_call = mutated_mod.get_global_var('func_9210')
call_9211 = func_9210_call()
output = call_9211
func_9212 = relay.Function([], output)
mutated_mod['func_9212'] = func_9212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7095_call = mod.get_global_var('func_7095')
func_7097_call = mutated_mod.get_global_var('func_7097')
call_9220 = func_7095_call()
call_9221 = func_7095_call()
func_8853_call = mod.get_global_var('func_8853')
func_8855_call = mutated_mod.get_global_var('func_8855')
call_9226 = relay.TupleGetItem(func_8853_call(), 1)
call_9227 = relay.TupleGetItem(func_8855_call(), 1)
output = relay.Tuple([call_9220,call_9226,])
output2 = relay.Tuple([call_9221,call_9227,])
func_9232 = relay.Function([], output)
mod['func_9232'] = func_9232
mod = relay.transform.InferType()(mod)
mutated_mod['func_9232'] = func_9232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9232_call = mutated_mod.get_global_var('func_9232')
call_9233 = func_9232_call()
output = call_9233
func_9234 = relay.Function([], output)
mutated_mod['func_9234'] = func_9234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3229_call = mod.get_global_var('func_3229')
func_3230_call = mutated_mod.get_global_var('func_3230')
call_9246 = relay.TupleGetItem(func_3229_call(), 1)
call_9247 = relay.TupleGetItem(func_3230_call(), 1)
output = relay.Tuple([call_9246,])
output2 = relay.Tuple([call_9247,])
func_9283 = relay.Function([], output)
mod['func_9283'] = func_9283
mod = relay.transform.InferType()(mod)
mutated_mod['func_9283'] = func_9283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9283_call = mutated_mod.get_global_var('func_9283')
call_9284 = func_9283_call()
output = call_9284
func_9285 = relay.Function([], output)
mutated_mod['func_9285'] = func_9285
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9305 = relay.var("var_9305", dtype = "float32", shape = (12, 5, 16))#candidate|9305|(12, 5, 16)|var|float32
uop_9306 = relay.acos(var_9305.astype('float32')) # shape=(12, 5, 16)
func_4133_call = mod.get_global_var('func_4133')
func_4135_call = mutated_mod.get_global_var('func_4135')
const_9309 = relay.const([[-9,5],[10,-10],[-5,10],[9,1],[2,2],[-6,9],[-2,-4],[10,-10],[-5,-5],[-2,-7],[-5,1],[8,-5],[-9,2],[-7,-5],[-7,7],[4,-6],[-4,-1],[5,3],[7,-3],[7,-3],[6,4],[-8,4],[9,-1],[-9,-2],[-10,-9],[-3,7],[6,2],[8,10],[3,-7],[2,-6],[-1,3],[-6,4],[10,-2],[-6,10],[9,-5],[-9,8],[8,3],[-7,2],[6,9],[-2,9],[-6,4],[10,-4],[-8,-5],[-4,1],[10,-4],[2,6],[-3,9],[8,9],[1,-8],[7,-1],[2,4],[-10,-8],[8,7],[7,-8],[-10,8],[-7,4],[10,10],[-5,-4],[6,1],[-4,6],[10,-2],[9,-9],[-6,-7],[-6,2],[4,-3],[2,3],[7,6],[4,3],[-7,3],[4,-5],[3,-5],[4,2],[1,6],[-3,1],[-5,-1],[-9,5],[9,4],[-3,4],[-4,2],[-8,7],[-10,-3],[1,4],[3,7],[10,-1],[-1,2],[5,-10],[7,-8],[-6,6],[-7,-10],[-7,6],[-2,3],[8,-2],[-9,3],[-2,-5],[-4,-6],[6,-6],[-5,1],[3,-1],[2,-8],[9,9],[6,-4],[-6,-7],[-1,-3],[-7,2],[-7,3],[2,-6],[9,7],[6,8],[10,8],[2,-10],[-8,-4],[2,-6],[-8,-1],[-2,-5],[1,-1],[-7,-8],[-2,5],[-2,10],[8,7],[-7,10],[-2,4],[-6,-7],[10,-5],[-6,6],[-9,-5],[-7,-3],[7,6],[-4,9],[-9,-10],[-3,-3],[4,2],[9,9],[8,-1],[6,-2],[5,-9],[6,5],[-3,2],[3,-3],[-1,6],[-2,10],[-6,6],[4,-7],[8,7],[5,1],[8,-6],[-9,5],[-3,-2],[5,-6],[4,3],[2,8],[-7,5],[-9,-10],[10,-6],[-6,-8],[4,-5],[-3,-8],[-2,6],[2,-3],[-1,8],[5,-4],[7,-3],[-3,-1],[3,3],[-6,-5],[-5,-2],[7,5],[2,-7],[-3,-3],[3,3],[-6,-4],[-10,-5],[2,-5],[-2,-2],[-10,8],[-2,10],[-8,-6],[-6,-8],[3,1],[10,10],[-7,7],[-9,10],[-7,3],[5,-5],[-6,-3],[-1,-7],[4,-10],[4,-6],[-4,-10],[-5,-4],[9,2],[-3,-7],[1,3],[3,-6],[8,5],[5,-2],[-6,2],[1,6],[5,3],[6,-7],[10,-8],[-2,3],[-10,1],[-2,4],[3,1],[-4,-5],[-4,9],[10,6],[-7,-4],[9,-6],[-8,2],[-10,-9],[-2,9],[9,7],[4,-3],[1,6],[-4,-5],[-10,9],[10,1],[8,2],[-2,8],[-5,-3],[10,-5],[5,-8],[-2,9],[-6,1],[10,5],[-3,1],[-6,-5],[5,-3],[-5,-7],[10,9],[-10,5],[9,-3],[9,10],[-3,-5],[10,-3],[9,-2],[-4,7],[8,-5],[8,-6],[5,7],[-5,6],[-6,6],[-3,4],[5,-10],[-7,-3],[5,-3],[10,-8],[-7,1],[-2,10],[7,5],[-7,4],[5,2],[-1,8],[7,-8],[1,1],[1,-3],[-10,10],[-1,9],[-5,1],[-9,3],[10,-5],[-5,3],[9,7],[8,4],[3,5],[-10,-3],[9,5],[8,7],[1,6],[-7,1],[5,-7],[-8,-8],[6,2],[-10,-2],[-10,5],[5,10],[6,-2],[-7,8],[-3,-2],[7,-9],[-7,-10],[7,-4],[-7,8],[2,9],[-4,-8],[6,-2],[10,-9],[5,-9],[-10,-7],[-1,7],[-1,3],[1,-1],[5,-7],[-7,1],[2,-4],[7,-9],[-6,-5],[1,-6],[-6,-8],[-3,3],[10,8],[-8,5],[-8,-7],[6,-5],[6,9],[1,-10],[6,-6],[-8,-4],[1,-8],[-2,9],[5,8],[-3,4],[-2,-7],[-8,-2],[6,3],[8,-4],[1,8],[-4,7],[6,-1],[-8,-10],[-7,3],[-3,-10],[-4,-5],[-10,1],[-1,-9],[7,-6],[-1,2],[1,-10],[-9,2],[10,3],[6,-6],[6,-10],[-6,2],[4,6],[3,5],[-2,-10],[7,-4],[-7,9],[-4,-10],[2,-5],[-8,4],[5,7],[2,1],[4,4],[7,-8],[-7,-8],[4,1],[-5,-6],[5,4],[2,7],[-3,7],[-2,-1],[-10,-5],[-8,8],[-8,-9],[7,-7],[7,-4],[3,4],[-2,3],[3,4],[3,-10],[2,-2],[-7,5],[-8,8],[-4,-6],[-4,2],[3,-1],[-7,4],[8,-10],[4,-1],[5,-6],[-8,8],[-9,-8],[-7,10],[-6,-10],[9,5],[-8,8],[-9,2],[6,-6],[-4,-8],[-1,7],[-7,-9],[1,-7],[3,-8],[9,2],[4,1],[-4,4],[-3,5],[9,3],[-1,10],[-2,-2],[9,6],[5,-5],[2,9],[-4,7],[5,5],[-4,-1],[-1,-4],[-10,-7],[-6,6],[-1,-10],[-6,2],[-2,-1],[-1,-3],[5,9],[-7,-10],[-1,7],[-2,-9],[-3,-7],[-8,2],[7,8],[-8,-4],[-7,10],[10,-2],[-6,10],[-1,10],[-10,4],[5,-9],[-7,-2],[-8,-9],[-1,-10],[8,-4],[10,-10],[-5,-4],[7,-2],[-1,-5],[-7,-5],[-3,-9],[-3,7],[-2,6],[7,2],[8,8],[1,-8],[-10,-3],[9,-2],[-4,9],[4,9],[-9,8],[2,-9],[-4,-8],[6,9],[8,-4],[2,1],[1,-3],[6,-10],[8,-10],[-6,1],[-7,-6],[4,2],[9,-10],[4,-7],[9,-9],[-2,9],[-5,-10],[-1,10],[9,-2],[3,-6],[-10,5],[6,-8],[-2,10],[-3,3],[10,-8],[4,7],[-4,-8],[-3,-1],[-1,-6],[8,1],[-10,-3],[-2,1],[-10,10],[-7,-1],[8,-9],[-6,-5],[-9,-3],[4,7],[7,-6],[-6,8],[6,-2],[-7,-5],[4,7],[6,-6],[-2,2],[-3,1],[-8,-8],[2,10],[5,10],[-7,-6],[-10,-1],[-4,1],[-6,-3],[3,10],[1,-6],[5,2],[8,-10],[8,7],[1,-4],[5,-3],[2,3],[-10,-7],[-2,-3],[-6,6],[8,10],[4,-3],[5,9],[5,-4],[-10,2],[-1,-10],[-9,1],[9,-1],[5,-2],[-1,5],[-2,-8],[8,6],[9,7],[-7,7],[3,1],[-7,-10],[6,-3],[-9,-2],[3,-10],[10,-1],[3,2],[-9,4],[-7,6],[1,-6],[10,-3],[8,-9],[-5,-3],[4,5],[2,-5],[-6,-2],[8,-9],[-8,4],[-6,6],[-4,4],[6,4],[3,-7],[-9,-7],[3,-8],[-9,-8],[1,6],[2,-1],[9,-6],[5,6],[1,5],[8,-5],[-3,-4],[1,1],[5,-1],[-9,3],[-8,-4],[-9,2],[-6,10],[-9,4],[9,4],[9,3],[-3,3],[7,-10],[5,9],[-4,5],[-10,-3],[1,2],[-7,-1],[-4,-2],[-9,8],[3,10],[-2,5],[1,-8],[-5,1],[10,6],[-2,6],[1,2],[7,7],[-6,9],[7,-7],[-3,1],[-8,4],[8,7],[-6,5],[-3,9],[-4,9],[5,-1],[-3,1],[3,-2],[8,3],[5,-7],[5,10],[10,-9],[8,-6],[7,5],[6,-5],[-2,4],[-4,-6],[-6,-2],[7,-10],[-5,-1],[6,-8],[-7,-4],[1,-3]], dtype = "int16")#candidate|9309|(600, 2)|const|int16
call_9308 = relay.TupleGetItem(func_4133_call(relay.reshape(const_9309.astype('int16'), [1200,])), 2)
call_9310 = relay.TupleGetItem(func_4135_call(relay.reshape(const_9309.astype('int16'), [1200,])), 2)
uop_9313 = relay.cosh(uop_9306.astype('float32')) # shape=(12, 5, 16)
func_5781_call = mod.get_global_var('func_5781')
func_5783_call = mutated_mod.get_global_var('func_5783')
call_9315 = relay.TupleGetItem(func_5781_call(), 0)
call_9316 = relay.TupleGetItem(func_5783_call(), 0)
func_5987_call = mod.get_global_var('func_5987')
func_5990_call = mutated_mod.get_global_var('func_5990')
var_9327 = relay.var("var_9327", dtype = "float32", shape = (18, 4))#candidate|9327|(18, 4)|var|float32
call_9326 = relay.TupleGetItem(func_5987_call(relay.reshape(var_9327.astype('float32'), [72,])), 0)
call_9328 = relay.TupleGetItem(func_5990_call(relay.reshape(var_9327.astype('float32'), [72,])), 0)
output = relay.Tuple([call_9308,const_9309,uop_9313,call_9315,call_9326,var_9327,])
output2 = relay.Tuple([call_9310,const_9309,uop_9313,call_9316,call_9328,var_9327,])
func_9329 = relay.Function([var_9305,var_9327,], output)
mod['func_9329'] = func_9329
mod = relay.transform.InferType()(mod)
var_9330 = relay.var("var_9330", dtype = "float32", shape = (12, 5, 16))#candidate|9330|(12, 5, 16)|var|float32
var_9331 = relay.var("var_9331", dtype = "float32", shape = (18, 4))#candidate|9331|(18, 4)|var|float32
output = func_9329(var_9330,var_9331,)
func_9332 = relay.Function([var_9330,var_9331,], output)
mutated_mod['func_9332'] = func_9332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7379_call = mod.get_global_var('func_7379')
func_7381_call = mutated_mod.get_global_var('func_7381')
call_9334 = relay.TupleGetItem(func_7379_call(), 1)
call_9335 = relay.TupleGetItem(func_7381_call(), 1)
var_9336 = relay.var("var_9336", dtype = "int64", shape = (6, 15, 15))#candidate|9336|(6, 15, 15)|var|int64
bop_9337 = relay.logical_xor(call_9334.astype('uint8'), relay.reshape(var_9336.astype('uint8'), relay.shape_of(call_9334))) # shape=(6, 15, 15)
bop_9340 = relay.logical_xor(call_9335.astype('uint8'), relay.reshape(var_9336.astype('uint8'), relay.shape_of(call_9335))) # shape=(6, 15, 15)
func_7128_call = mod.get_global_var('func_7128')
func_7129_call = mutated_mod.get_global_var('func_7129')
call_9341 = relay.TupleGetItem(func_7128_call(), 0)
call_9342 = relay.TupleGetItem(func_7129_call(), 0)
output = relay.Tuple([bop_9337,call_9341,])
output2 = relay.Tuple([bop_9340,call_9342,])
func_9344 = relay.Function([var_9336,], output)
mod['func_9344'] = func_9344
mod = relay.transform.InferType()(mod)
var_9345 = relay.var("var_9345", dtype = "int64", shape = (6, 15, 15))#candidate|9345|(6, 15, 15)|var|int64
output = func_9344(var_9345)
func_9346 = relay.Function([var_9345], output)
mutated_mod['func_9346'] = func_9346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6034_call = mod.get_global_var('func_6034')
func_6035_call = mutated_mod.get_global_var('func_6035')
call_9348 = relay.TupleGetItem(func_6034_call(), 1)
call_9349 = relay.TupleGetItem(func_6035_call(), 1)
func_6718_call = mod.get_global_var('func_6718')
func_6720_call = mutated_mod.get_global_var('func_6720')
call_9350 = relay.TupleGetItem(func_6718_call(), 0)
call_9351 = relay.TupleGetItem(func_6720_call(), 0)
func_2033_call = mod.get_global_var('func_2033')
func_2035_call = mutated_mod.get_global_var('func_2035')
const_9361 = relay.const([6.682931,0.532847,3.168629,-5.128232,7.547132,2.148350,1.528243,-8.439722,-1.697057,3.350483,-1.322993,-6.908920,-0.413792,1.303766], dtype = "float32")#candidate|9361|(14,)|const|float32
call_9360 = relay.TupleGetItem(func_2033_call(relay.reshape(const_9361.astype('float32'), [2, 1, 7])), 0)
call_9362 = relay.TupleGetItem(func_2035_call(relay.reshape(const_9361.astype('float32'), [2, 1, 7])), 0)
func_7654_call = mod.get_global_var('func_7654')
func_7657_call = mutated_mod.get_global_var('func_7657')
const_9371 = relay.const([9,-8,-1,10,-1,-8,-7,-3,-2,3,8,-1,-8,6,-7,-1,10,-5,-4,-4,5,9,-6,5,5,-4,-9,-2,5,6,4,10,-9,-6,10,-9,-2,7,3,8,3,-5,-6,-1,4,4,-7,1,-9,-8,-8,6,-7,8,6,-10,-9,-1,-1,-7,-2,-2,-7,-4,1,-9,-8,9,-7,-7,-4,-2,-1,7,7,-6,6,7,-10,-2,-4,-10,-4,-10,-5,-6,4,-1,2,7,-1,-10,9,-2,10,-2,5,-9,-10,-1,-5,-5,6,-6,-5,10,5,4,-9,5,-8,-6,-10,1,-5,6,-1,9,-8,-8,7,10,9,-6,-8,-10,9,-9,-4,-8,5,6,-8,5,-1,10,10,10,1,10,6,-8,-9,-3,-9,9,-6,2,-4,-1,-10,3,-10,-9,-8,2,2,-10,-7,1,5,-2,7,-6,-10,5,7,-10,-2,9,10,5,-1,3,9,6,6,-6,1,-5,8,-1,-10,1,-1,-2,-2,-5,4,-1,-1,-9,-4,-1,5,-7,6,8,-2,7,-1,-4,-8,8,-8,6,-5,-8,8,-7,5,-7,-4,8,8,-9,4,4,4,-3,10,-4,2,5,1,-4,7,-9,10,7,3,-7,-1,9,10,10,1,4,-5,-5,2,-5,5,-10,-3,1,4,7,6,3,-9,-5,-8,-6,-9,-9,2,-9,-2,-2,-7,3,10,9,7,3,6,6,8,-6,5,-9,1,-6,9,8,-10,9,2,-7,1,-4,-9,-2,-6,-7,6,-8,3,2,1,-10,-2,2,-9,4,10,-1,-2,-7,5,-9,-9,10,2,-6,1,-7,-6,-8,7,-9,3,7,4,4,-9,10,10,2,1,7,5,-4,3,10,-5,-9,8,4,4,-3,8,9,-3,-2,-8,-8,-4,-5,-6,9,3,-10,7,-5,1,-2,-1,-9,-3,-1,-3,-5,1,6,-7,9,-4,-3,2,-2,5,-3,6,-3,4,-1,4,6,7,3,6,6,-10,2,6,-6,-7,-7,1,-3,5,4,9,-5,1,-2,9,-8,6,2,4,-3,6,-6,-2,-2,3,6,-7,10,-8,-4,2,-5,-3,-10,-4,-10,5,-7,-6,-3,6,-3,-2,-10,7,9,-5,-10,3,5,-3,10,-2,-4,-6,7,10,-7,-5,5,1,3,-8,6,3,1,-8,-3,-7,-1,5,7,10,-8,-10,-6,6,-9,-2,-8,-6,-10,-9,7,9,-9,5,-8,9,-9,8,2,-7,-8,3,6,4,-6,-9,9,2,-4,5,4,-7,-4,10,-9,-4,6,3,-9,-7,2,-1,-6,10,-9,-2,-8,8,8,-8,3,-3,1,2,-7,-6,-5,-9,-9,-2,3,-1,-5,-2,7,9,2,-10,2,-3,-8,-7,6,-5,6,-3,-1,7,-5,10,-9,-1,-3,-1,10,-1,5,-3,-3,-7,-6,-7,7,5,-4,-4,-6,-1,-6,3,10,-8,3,5,-2,6,-3,6,-6,1,-8,3,10,2,-10,-3,8,-3,-3,-8,3,2,6,5,1,-3,9,-2,2,6,-6,10,2,-6,6,-1,-7,-4,-3,4,-2,-4,3,-1,-7,-6,-10,8,4,9,9,8,5,8,10,5,-8,-5,2,-7,7,-1,-2,8,-4,-5,-9,8,6,5,7,-7,6,8,-2,-6,-10,5,-7,-9,10,-3,-8,2,-6,-7,-6,9,-10,9,-6,8,-5,10,-6,4,-3,-4,9,-3,4,9,8,-1,9,-8,-6,-10,1,-4,7,4,6,-10,-5,-1,7,-8,-1,3,8,2,-10,-6,2,-2,7,-8,-6,-9,3,2,1,-5,1,-10,-9,-5,-7,-4,1,8,3,-3,6,2,2,-9,5,5,2,-7,10,-2,4,-5,-1,5,1,-3,-9,-6,10,-4,-9,-3,4,2,3,-2,7,4,-2,-3,8,-2,10,10,3,-7,4,-3,-1,6,-8,-2,6,4,6,5,-3,3,-2,3,10,10,-1,6,-8,7,9,-1,-5,6,-2,5,5,7,4,5,-4,-10,5,-9,6,-9,5,-1,4,-4,-8,10,-9,-1,10,7,-10,-9,2,-10,-3,-5,-8,1,-6,8,3,7,8,-5,3,-2,-8,10,8,8,6,10,-10,7,5,9,-7,10,-4,4,8,10,7,-7,9,-6,1,-10,6,-6,-7,9,-1,9,-5,-3,-3,2,-5,4,-6,-9,-6,-7,-10,-1,10,-1,8,-4,-5,9,-10,-7,-10,8,-3,5,8,4,-9,-5,7,-9,7,10,-10,1,10,6,-1,7,3,-7,-6,-1,6,-3,3,9,-5,2,-10,9,1,9,2,-7,-10,8,-5,-10,-8,-7,-2,8,5,-5,3,4,-9,-5,9,-8,8,4,6,8,6,4,10,-7,2,-2,4,-8,-9,6,6,-6,9,-10,5,-10,1,-10,5,-10,9,-3,-7,8,5,3,-7,8,10,-4,5,-7,7,9,-7,1,8,1,-7,1,-4,-3,-3,8,8,2,5,10,-7,5,8,9,2,-3,-8,10,9,4,4,-7,3,4,9,9,-4,1,2,8,-10,4,-5,2,8,6,-8,-4,2,-9,3,10,-6,-9,-1,-4,-8,-2,5,-5,-2,6,-3,2,-2,8,-1,-5,9,7,1,-2,-2,-1,10,3,-6,1,1,7,-4,-1,5,-4,-9,6,-2,8,5,-2,-5,7,4,-3,1,10,-6,2,6,10,7,-3,6,-3,-1,8,-10,7,2,10,-9,3,-1,1,-1,3,4,-6,-9,3,-6,6,-5,3,-1,3,3,-7,10,-6,-8,-10,-6,5,9,-7,-9,4,-6,-1,10,-8,1,1,-5,6,-5,6,-5,1,10,-1,-1,-3,10,7,-10,-2,2,4,-10,3,-7,9,1,-7,7,8,-1,-6,-4,2,8,7,-9,9,1,5,10,-1,-3,2,6,-8,10,9,-7,-2,-7,6,9,-5,9,10,3,2,10,4,1,-5,7,9,-7,10,-7,9,-4,-8,-4,4,-2,3,-8,9,10,4,-8,-3,1,8,-10,8,1,6,-6,5,7,-3,-7,-8,-6,6,5,-10,3,-8,5,6,2,3,4,-8,-8,-10,3,5,2,5,3,6,3,8,8,6,-7,7,-9,-4,8,-3,2,10,1,1,-3,9,-1,-4,10,8,-10,-9,-2,7,7,-10,-8,-2,10,-3,10,-6,9,-9,-1,6,-4,10,8,-5,-7,-5,-7,-6,-2,-7,2,-3,-7,-10,9,-2,3,-8,-1,-7,8,-5,-10,-2,-1,3,4,2,10,2,10,-4,-7,-3,5,-7,3,-2,5,3,4,-9,6,2,5,-7,7,7,4,-2,-1,6,1,5,1,-1,-6,3,-4,-7,-10,-4,-4,1,-3,8,2,-6,-1,8,-10,7,1,-9,-5,-4,9,-2,-10,-2,7,-7,-6,-1,-5,-9,10,-5,5,8,10,-7,-9,-3,-3,2,-9,-7,1,1,9,-4,-7,-3,-3,-4,-2,-2,-1,2,2,-2,-4,-7,8,-2,10,-7,-5,1,9,8,8,4,7,-1,-9,-1,3,9,-5,-8,7,2,-6,-7,-10,-6,-7,8,-6,2,-2,-10,8], dtype = "int64")#candidate|9371|(1350,)|const|int64
call_9370 = relay.TupleGetItem(func_7654_call(relay.reshape(call_9360.astype('float32'), [14,]), relay.reshape(const_9371.astype('int64'), [1, 1350]), ), 3)
call_9372 = relay.TupleGetItem(func_7657_call(relay.reshape(call_9360.astype('float32'), [14,]), relay.reshape(const_9371.astype('int64'), [1, 1350]), ), 3)
output = relay.Tuple([call_9348,call_9350,call_9360,const_9361,call_9370,const_9371,])
output2 = relay.Tuple([call_9349,call_9351,call_9362,const_9361,call_9372,const_9371,])
func_9377 = relay.Function([], output)
mod['func_9377'] = func_9377
mod = relay.transform.InferType()(mod)
mutated_mod['func_9377'] = func_9377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9377_call = mutated_mod.get_global_var('func_9377')
call_9378 = func_9377_call()
output = call_9378
func_9379 = relay.Function([], output)
mutated_mod['func_9379'] = func_9379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7074_call = mod.get_global_var('func_7074')
func_7075_call = mutated_mod.get_global_var('func_7075')
call_9493 = relay.TupleGetItem(func_7074_call(), 0)
call_9494 = relay.TupleGetItem(func_7075_call(), 0)
uop_9506 = relay.log2(call_9493.astype('float32')) # shape=(6, 8, 11)
uop_9508 = relay.log2(call_9494.astype('float32')) # shape=(6, 8, 11)
func_6053_call = mod.get_global_var('func_6053')
func_6056_call = mutated_mod.get_global_var('func_6056')
var_9514 = relay.var("var_9514", dtype = "int64", shape = (1350,))#candidate|9514|(1350,)|var|int64
call_9513 = func_6053_call(relay.reshape(var_9514.astype('int64'), [6, 15, 15]), relay.reshape(var_9514.astype('int64'), [6, 15, 15]), )
call_9515 = func_6053_call(relay.reshape(var_9514.astype('int64'), [6, 15, 15]), relay.reshape(var_9514.astype('int64'), [6, 15, 15]), )
output = relay.Tuple([uop_9506,call_9513,var_9514,])
output2 = relay.Tuple([uop_9508,call_9515,var_9514,])
func_9516 = relay.Function([var_9514,], output)
mod['func_9516'] = func_9516
mod = relay.transform.InferType()(mod)
mutated_mod['func_9516'] = func_9516
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9517 = relay.var("var_9517", dtype = "int64", shape = (1350,))#candidate|9517|(1350,)|var|int64
func_9516_call = mutated_mod.get_global_var('func_9516')
call_9518 = func_9516_call(var_9517)
output = call_9518
func_9519 = relay.Function([var_9517], output)
mutated_mod['func_9519'] = func_9519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7439_call = mod.get_global_var('func_7439')
func_7440_call = mutated_mod.get_global_var('func_7440')
call_9644 = relay.TupleGetItem(func_7439_call(), 0)
call_9645 = relay.TupleGetItem(func_7440_call(), 0)
func_6334_call = mod.get_global_var('func_6334')
func_6335_call = mutated_mod.get_global_var('func_6335')
call_9665 = relay.TupleGetItem(func_6334_call(), 0)
call_9666 = relay.TupleGetItem(func_6335_call(), 0)
output = relay.Tuple([call_9644,call_9665,])
output2 = relay.Tuple([call_9645,call_9666,])
func_9671 = relay.Function([], output)
mod['func_9671'] = func_9671
mod = relay.transform.InferType()(mod)
output = func_9671()
func_9672 = relay.Function([], output)
mutated_mod['func_9672'] = func_9672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1944_call = mod.get_global_var('func_1944')
func_1946_call = mutated_mod.get_global_var('func_1946')
call_9676 = relay.TupleGetItem(func_1944_call(), 0)
call_9677 = relay.TupleGetItem(func_1946_call(), 0)
output = call_9676
output2 = call_9677
func_9679 = relay.Function([], output)
mod['func_9679'] = func_9679
mod = relay.transform.InferType()(mod)
mutated_mod['func_9679'] = func_9679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9679_call = mutated_mod.get_global_var('func_9679')
call_9680 = func_9679_call()
output = call_9680
func_9681 = relay.Function([], output)
mutated_mod['func_9681'] = func_9681
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9698 = relay.var("var_9698", dtype = "int32", shape = (8, 4, 14))#candidate|9698|(8, 4, 14)|var|int32
const_9699 = relay.const([[[-8,-3,-3,-5,4,-6,8,3,4,3,7,-8,-4,9],[-7,7,-6,-4,-7,1,-2,10,-2,-5,6,10,8,8],[-10,8,-6,1,-7,-2,3,-6,4,-8,10,-3,-1,-8],[2,-1,-6,8,-7,-5,5,9,-3,-4,4,1,7,-8]],[[6,-9,3,3,-2,1,-1,4,-4,-3,-9,-3,-2,6],[-8,-10,-2,5,9,-5,8,-8,4,6,-4,-6,7,-7],[4,8,8,6,-7,5,8,6,-10,6,8,-4,10,-9],[-1,-8,10,7,-6,-5,-6,8,2,2,10,-6,2,3]],[[9,-1,-8,5,8,3,-7,-4,1,-6,6,3,-10,4],[-8,-3,9,-9,-4,-5,8,-6,-8,-7,2,2,-5,-4],[5,-4,9,1,-3,4,-7,-2,7,-2,-8,-6,2,8],[2,-2,-4,-1,4,-2,4,-6,5,10,8,8,8,-6]],[[-1,-10,10,1,8,6,6,1,-4,-3,-7,-4,2,10],[-8,-2,1,-4,-2,5,-7,-2,-1,-2,-1,7,-7,-2],[-2,9,-9,9,-3,-2,-7,6,10,-8,-2,7,7,-3],[4,3,10,-8,-5,10,1,4,9,-6,2,1,6,9]],[[-1,-8,-10,10,3,10,6,-7,-1,5,-2,8,-4,-10],[-6,-4,3,-9,10,-4,9,2,-3,-10,-9,4,-7,7],[-3,4,6,-6,9,-4,7,4,10,-9,5,7,8,7],[-8,-1,-3,-10,-4,-10,4,-3,-9,-6,5,4,-9,-5]],[[-4,4,-9,3,-1,-3,-9,-9,-4,-3,1,4,7,9],[-8,-2,-9,4,-1,-1,8,-9,-6,2,-3,5,-6,-2],[-4,6,-7,6,-5,5,-5,-2,2,-4,2,-10,-2,-8],[1,-1,3,9,-6,-6,-5,-10,-9,5,-4,10,4,-10]],[[3,5,2,-1,3,-4,6,1,3,10,-4,3,-6,3],[-5,8,-2,3,9,8,-5,1,4,-3,-5,-9,9,-6],[-9,5,-3,1,6,-1,10,-6,-2,8,-9,5,3,-3],[-7,9,10,-9,9,-2,6,9,-1,-2,-2,-10,-1,-8]],[[-10,1,2,5,-6,-6,-4,9,2,-7,4,7,-10,-10],[-4,9,9,-3,-10,2,-5,-10,-9,-1,8,3,5,-10],[8,10,-6,8,-9,-6,-1,6,9,5,4,8,-3,-3],[-10,5,-1,-2,4,-4,-2,3,-9,9,4,5,-1,-7]]], dtype = "int32")#candidate|9699|(8, 4, 14)|const|int32
bop_9700 = relay.less_equal(var_9698.astype('bool'), relay.reshape(const_9699.astype('bool'), relay.shape_of(var_9698))) # shape=(8, 4, 14)
output = bop_9700
output2 = bop_9700
func_9705 = relay.Function([var_9698,], output)
mod['func_9705'] = func_9705
mod = relay.transform.InferType()(mod)
mutated_mod['func_9705'] = func_9705
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9706 = relay.var("var_9706", dtype = "int32", shape = (8, 4, 14))#candidate|9706|(8, 4, 14)|var|int32
func_9705_call = mutated_mod.get_global_var('func_9705')
call_9707 = func_9705_call(var_9706)
output = call_9707
func_9708 = relay.Function([var_9706], output)
mutated_mod['func_9708'] = func_9708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2143_call = mod.get_global_var('func_2143')
func_2144_call = mutated_mod.get_global_var('func_2144')
call_9731 = func_2143_call()
call_9732 = func_2143_call()
output = call_9731
output2 = call_9732
func_9737 = relay.Function([], output)
mod['func_9737'] = func_9737
mod = relay.transform.InferType()(mod)
output = func_9737()
func_9738 = relay.Function([], output)
mutated_mod['func_9738'] = func_9738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5810_call = mod.get_global_var('func_5810')
func_5812_call = mutated_mod.get_global_var('func_5812')
call_9739 = func_5810_call()
call_9740 = func_5810_call()
func_9069_call = mod.get_global_var('func_9069')
func_9073_call = mutated_mod.get_global_var('func_9073')
var_9745 = relay.var("var_9745", dtype = "int64", shape = ())#candidate|9745|()|var|int64
var_9746 = relay.var("var_9746", dtype = "int64", shape = (300,))#candidate|9746|(300,)|var|int64
call_9744 = relay.TupleGetItem(func_9069_call(relay.reshape(var_9745.astype('int64'), []), relay.reshape(var_9746.astype('int64'), [2, 15, 10]), ), 2)
call_9747 = relay.TupleGetItem(func_9073_call(relay.reshape(var_9745.astype('int64'), []), relay.reshape(var_9746.astype('int64'), [2, 15, 10]), ), 2)
func_5555_call = mod.get_global_var('func_5555')
func_5558_call = mutated_mod.get_global_var('func_5558')
const_9751 = relay.const([6.215753,-8.513919,-9.692946,-3.133586,9.180285,6.359044,6.303614,2.709238,-3.923844,-5.688090,-7.919985,5.610794,6.216879,8.633198], dtype = "float32")#candidate|9751|(14,)|const|float32
call_9750 = relay.TupleGetItem(func_5555_call(relay.reshape(const_9751.astype('float32'), [14,])), 7)
call_9752 = relay.TupleGetItem(func_5558_call(relay.reshape(const_9751.astype('float32'), [14,])), 7)
output = relay.Tuple([call_9739,call_9744,var_9745,var_9746,call_9750,const_9751,])
output2 = relay.Tuple([call_9740,call_9747,var_9745,var_9746,call_9752,const_9751,])
func_9766 = relay.Function([var_9745,var_9746,], output)
mod['func_9766'] = func_9766
mod = relay.transform.InferType()(mod)
var_9767 = relay.var("var_9767", dtype = "int64", shape = ())#candidate|9767|()|var|int64
var_9768 = relay.var("var_9768", dtype = "int64", shape = (300,))#candidate|9768|(300,)|var|int64
output = func_9766(var_9767,var_9768,)
func_9769 = relay.Function([var_9767,var_9768,], output)
mutated_mod['func_9769'] = func_9769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2443_call = mod.get_global_var('func_2443')
func_2444_call = mutated_mod.get_global_var('func_2444')
call_9776 = relay.TupleGetItem(func_2443_call(), 1)
call_9777 = relay.TupleGetItem(func_2444_call(), 1)
output = call_9776
output2 = call_9777
func_9780 = relay.Function([], output)
mod['func_9780'] = func_9780
mod = relay.transform.InferType()(mod)
mutated_mod['func_9780'] = func_9780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9780_call = mutated_mod.get_global_var('func_9780')
call_9781 = func_9780_call()
output = call_9781
func_9782 = relay.Function([], output)
mutated_mod['func_9782'] = func_9782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4836_call = mod.get_global_var('func_4836')
func_4838_call = mutated_mod.get_global_var('func_4838')
call_9848 = relay.TupleGetItem(func_4836_call(), 3)
call_9849 = relay.TupleGetItem(func_4838_call(), 3)
func_8209_call = mod.get_global_var('func_8209')
func_8210_call = mutated_mod.get_global_var('func_8210')
call_9850 = relay.TupleGetItem(func_8209_call(), 1)
call_9851 = relay.TupleGetItem(func_8210_call(), 1)
output = relay.Tuple([call_9848,call_9850,])
output2 = relay.Tuple([call_9849,call_9851,])
func_9866 = relay.Function([], output)
mod['func_9866'] = func_9866
mod = relay.transform.InferType()(mod)
output = func_9866()
func_9867 = relay.Function([], output)
mutated_mod['func_9867'] = func_9867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3802_call = mod.get_global_var('func_3802')
func_3803_call = mutated_mod.get_global_var('func_3803')
call_9902 = relay.TupleGetItem(func_3802_call(), 2)
call_9903 = relay.TupleGetItem(func_3803_call(), 2)
output = call_9902
output2 = call_9903
func_9906 = relay.Function([], output)
mod['func_9906'] = func_9906
mod = relay.transform.InferType()(mod)
output = func_9906()
func_9907 = relay.Function([], output)
mutated_mod['func_9907'] = func_9907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3970_call = mod.get_global_var('func_3970')
func_3972_call = mutated_mod.get_global_var('func_3972')
call_9923 = relay.TupleGetItem(func_3970_call(), 0)
call_9924 = relay.TupleGetItem(func_3972_call(), 0)
func_3036_call = mod.get_global_var('func_3036')
func_3038_call = mutated_mod.get_global_var('func_3038')
call_9963 = relay.TupleGetItem(func_3036_call(), 0)
call_9964 = relay.TupleGetItem(func_3038_call(), 0)
func_7557_call = mod.get_global_var('func_7557')
func_7564_call = mutated_mod.get_global_var('func_7564')
var_9971 = relay.var("var_9971", dtype = "int16", shape = (936,))#candidate|9971|(936,)|var|int16
var_9972 = relay.var("var_9972", dtype = "int8", shape = (2304,))#candidate|9972|(2304,)|var|int8
var_9973 = relay.var("var_9973", dtype = "float64", shape = (180, 2))#candidate|9973|(180, 2)|var|float64
const_9974 = relay.const([[5.096354,6.003292,3.927934,6.644722,2.064532,3.563925,1.187162,4.709174,9.331971,-4.125973,-5.091788,-7.747857,-9.233562,2.525096,-1.809654,6.766884,-6.043259,-0.876212,-9.464560,-0.389193,-0.580475,-0.189654,-2.995129,7.207435,7.379604,-3.062176,4.069193,6.983391,-3.779960,-8.774568,6.888655,-6.735415,5.859360,8.638146,-3.675626,8.729190,5.070035,-1.595896,0.545242,-1.480241,-0.041146,4.440783,4.584955,4.252087,8.333656,-8.723072,3.168460,-0.507610,-1.877609,7.061132,-9.225704,2.753359,-4.445807,8.159080,1.421214,-6.331100,-7.286785,5.219597,-3.719836,7.215977,6.907393,-9.164746,-4.725398,3.347188,2.004910,-7.076146,1.204123,2.833061,8.106588,4.271736,-3.215432,-9.343300,8.409659,-3.267306,3.365871,6.102373,-9.540156,1.038016,5.319594,8.561917,4.165917,-3.928666,2.416542,-2.892033],[-7.942320,1.991064,3.921107,-3.239266,-1.413056,7.220376,-0.257903,-8.824012,-3.567897,-7.697081,-5.830828,-2.523976,7.378727,-9.827871,7.501901,2.481827,-6.070429,-0.488748,9.485555,8.527646,-0.837173,3.300859,2.298243,6.174125,4.942138,6.734005,8.481644,-6.301118,-5.672038,4.259299,0.139262,-5.587420,6.318210,-0.911565,5.890927,-0.620310,-5.871763,-5.024777,1.308716,5.844844,5.479761,-9.495636,1.200013,8.139714,5.145971,8.093842,-0.305827,6.344950,-2.128871,-7.981953,9.127952,9.578888,-8.899088,6.009140,2.298446,-2.459104,-1.318796,0.747476,5.509234,0.476535,9.993601,-8.111224,-2.029244,-9.638900,6.418813,-4.404925,3.631047,-5.792161,-4.627320,-3.341925,-7.414730,-1.384316,4.999335,-2.794892,6.635929,-5.768043,-9.886525,-5.487904,-4.014728,-1.510881,9.679422,-2.514871,-0.934058,-6.591325],[-6.559505,2.303180,3.614991,5.400381,3.978102,-9.533930,-4.583068,-7.221992,8.907306,0.588675,2.108449,4.365313,7.665982,1.546268,-3.106745,-5.550710,-2.754033,1.893335,1.318165,2.052698,6.235508,1.033769,-4.602183,-5.838532,-3.136290,8.223304,5.391565,-8.315853,-5.346715,5.452551,9.702383,2.132821,2.088708,-8.838895,-0.996333,9.153905,9.680160,2.011096,-2.835532,0.691535,7.716160,-6.604740,4.624562,4.097025,2.564448,-7.025874,-7.796757,-3.094863,-5.529294,3.270187,-4.376736,-5.384861,9.327076,5.618061,-6.364676,5.957678,5.034235,-6.879638,-7.745912,-8.671671,-4.193278,1.269635,4.084875,-8.845595,-7.707553,-3.969627,7.044853,-7.874937,-3.514548,-2.424765,-4.248641,-6.024827,-8.998696,-6.953774,6.217460,-5.241375,8.551352,-8.492573,9.332932,-3.374645,-7.947215,6.777208,-2.996487,5.026612],[9.207432,7.015485,4.787967,-2.370440,-7.726847,-2.107620,0.551521,-6.325206,-5.324774,7.230269,9.384535,9.484083,-1.930439,2.394430,-5.647557,5.349377,8.836399,7.373557,3.236487,-8.399165,-5.690038,6.536292,0.326576,-7.548528,-7.654755,1.864096,-7.031252,-5.390915,5.209452,0.690008,-8.988488,-6.091909,7.950517,-8.865381,8.407771,-5.617202,3.544516,4.890679,4.801765,5.826864,-9.315399,-7.979287,2.534795,4.058670,-2.129759,6.831144,-5.633929,-3.800200,8.683473,-6.985927,8.588185,2.275885,-6.891668,4.178161,-1.930760,5.343323,-7.053656,2.391657,-7.066766,-8.818678,2.729352,9.963044,8.679965,0.131468,-5.492698,4.058633,1.568614,8.297427,-7.626225,8.300935,1.558335,3.154479,-3.929385,7.682882,6.147662,-8.996335,3.696677,-3.858730,5.983350,-5.375830,0.307101,-7.719508,-3.039953,-6.243005],[-7.261930,1.829802,5.794057,0.991977,-2.196473,-1.210330,3.648200,-9.733653,7.846359,5.500275,5.262666,-3.329871,-6.919656,7.589699,-8.724206,9.467654,6.921548,-0.265255,4.312740,4.201375,4.175024,3.617720,-5.279819,8.636245,3.874855,-6.683210,-2.183042,4.636832,6.093087,6.828997,1.330589,0.921828,-5.501428,9.998688,4.509584,2.911240,-9.526301,7.957828,-9.482016,-6.910449,-5.414707,-0.873986,-8.920162,5.666581,-6.295522,5.247955,6.467699,4.267770,1.035041,5.993766,3.578493,9.417581,8.562108,-5.946399,4.001531,0.996438,7.666203,3.570405,-6.903293,-7.848837,8.417794,-5.854178,-0.619428,-4.458487,-5.184542,-1.341295,-1.107677,7.832904,3.417572,-5.813409,3.849147,-2.419939,7.025785,-4.075030,-6.227420,5.619623,-6.324990,-3.381568,5.429462,-1.983734,-9.766137,4.148681,-0.672795,-5.614164],[-3.536197,6.297889,0.157260,-4.013324,5.648310,-5.390254,7.962573,6.732430,2.709891,-7.802875,2.842723,-0.760437,-6.166112,-7.977603,-0.496663,-6.265869,8.754234,-8.005233,6.665283,-9.263893,9.712950,-0.684296,-7.792883,0.467424,4.395531,-8.793457,-9.908363,-8.343556,-6.835874,-4.719707,8.492020,7.723213,-3.540378,2.520324,-3.523043,-7.161227,-8.517712,9.894656,-8.688110,-1.730336,-8.266292,-8.479395,9.705511,6.534249,-1.814134,8.290383,-3.367752,-3.394783,-8.824218,-5.799296,5.222544,5.232388,1.989464,-6.388442,2.597487,7.111295,4.804333,-7.631525,-7.809204,-2.495797,6.661034,2.177254,-0.865613,-0.021176,3.578027,-4.861655,1.903989,9.537157,-5.230710,0.239064,-1.402296,6.621920,-8.494163,5.473462,-3.763970,5.119667,9.165917,0.364728,5.760305,-3.748872,2.236418,4.045185,-3.231157,5.516072]], dtype = "float32")#candidate|9974|(6, 84)|const|float32
call_9970 = relay.TupleGetItem(func_7557_call(relay.reshape(var_9971.astype('int16'), [9, 8, 13]), relay.reshape(var_9971.astype('int16'), [9, 8, 13]), relay.reshape(var_9972.astype('int8'), [2304,]), relay.reshape(var_9973.astype('float64'), [360, 1]), relay.reshape(const_9974.astype('float32'), [504,]), ), 7)
call_9975 = relay.TupleGetItem(func_7564_call(relay.reshape(var_9971.astype('int16'), [9, 8, 13]), relay.reshape(var_9971.astype('int16'), [9, 8, 13]), relay.reshape(var_9972.astype('int8'), [2304,]), relay.reshape(var_9973.astype('float64'), [360, 1]), relay.reshape(const_9974.astype('float32'), [504,]), ), 7)
output = relay.Tuple([call_9923,call_9963,call_9970,var_9971,var_9972,var_9973,const_9974,])
output2 = relay.Tuple([call_9924,call_9964,call_9975,var_9971,var_9972,var_9973,const_9974,])
func_9976 = relay.Function([var_9971,var_9972,var_9973,], output)
mod['func_9976'] = func_9976
mod = relay.transform.InferType()(mod)
var_9977 = relay.var("var_9977", dtype = "int16", shape = (936,))#candidate|9977|(936,)|var|int16
var_9978 = relay.var("var_9978", dtype = "int8", shape = (2304,))#candidate|9978|(2304,)|var|int8
var_9979 = relay.var("var_9979", dtype = "float64", shape = (180, 2))#candidate|9979|(180, 2)|var|float64
output = func_9976(var_9977,var_9978,var_9979,)
func_9980 = relay.Function([var_9977,var_9978,var_9979,], output)
mutated_mod['func_9980'] = func_9980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1635_call = mod.get_global_var('func_1635')
func_1636_call = mutated_mod.get_global_var('func_1636')
call_9994 = func_1635_call()
call_9995 = func_1635_call()
output = call_9994
output2 = call_9995
func_9996 = relay.Function([], output)
mod['func_9996'] = func_9996
mod = relay.transform.InferType()(mod)
mutated_mod['func_9996'] = func_9996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9996_call = mutated_mod.get_global_var('func_9996')
call_9997 = func_9996_call()
output = call_9997
func_9998 = relay.Function([], output)
mutated_mod['func_9998'] = func_9998
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10015 = relay.var("var_10015", dtype = "uint64", shape = ())#candidate|10015|()|var|uint64
var_10016 = relay.var("var_10016", dtype = "uint64", shape = (12, 1, 1))#candidate|10016|(12, 1, 1)|var|uint64
bop_10017 = relay.less_equal(var_10015.astype('bool'), var_10016.astype('bool')) # shape=(12, 1, 1)
bop_10031 = relay.multiply(var_10016.astype('int16'), relay.reshape(bop_10017.astype('int16'), relay.shape_of(var_10016))) # shape=(12, 1, 1)
output = relay.Tuple([bop_10031,])
output2 = relay.Tuple([bop_10031,])
F = relay.Function([var_10015,var_10016,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_10015,var_10016,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
	relay.transform.InferType(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')
input_10015= np.array(7, dtype='uint64')
module1.set_input('var_10015', input_10015)
input_10016= np.array([[[4]],[[-3]],[[1]],[[6]],[[1]],[[-4]],[[8]],[[-2]],[[7]],[[8]],[[-9]],[[-6]]], dtype='uint64')
module1.set_input('var_10016', input_10016)
module1.set_input(**params)
module1.run()
res2 = intrp2.evaluate()(input_10015, input_10016, )
res3 = intrp3.evaluate()(input_10015, input_10016, )
res4 = intrp4.evaluate()(input_10015, input_10016, )
res2 = vmobj_to_list(res2)
res3 = vmobj_to_list(res3)
res4 = vmobj_to_list(res4)
res1_0 = module1.get_output(0).asnumpy()
res2_0 = res2[0].asnumpy()
res3_0 = res3[0].asnumpy()
res4_0 = res4[0].asnumpy()
np.testing.assert_allclose(res1_0 ,res2_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_0 ,res3_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_0 ,res4_0, atol=1e-3, rtol=1e-3)
(res1_0 == res2_0).all()
(res1_0 == res3_0).all()
(res1_0 == res4_0).all()
module5.set_input('var_10015', input_10015)
module5.set_input('var_10016', input_10016)
module5.set_input(**params)
module5.run()
res6 = intrp6.evaluate()(input_10015, input_10016, )
res7 = intrp7.evaluate()(input_10015, input_10016, )
res8 = intrp8.evaluate()(input_10015, input_10016, )
res6 = vmobj_to_list(res6)
res7 = vmobj_to_list(res7)
res8 = vmobj_to_list(res8)
res5_0 = module5.get_output(0).asnumpy()
res6_0 = res6[0].asnumpy()
res7_0 = res7[0].asnumpy()
res8_0 = res8[0].asnumpy()
np.testing.assert_allclose(res5_0 ,res6_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_0 ,res7_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_0 ,res8_0, atol=1e-3, rtol=1e-3)
(res5_0 == res6_0).all()
(res5_0 == res7_0).all()
(res5_0 == res8_0).all()
module9.set_input('var_10015', input_10015)
module9.set_input('var_10016', input_10016)
module9.set_input(**params)
module9.run()
res10 = intrp10.evaluate()(input_10015, input_10016, )
res11 = intrp11.evaluate()(input_10015, input_10016, )
res12 = intrp12.evaluate()(input_10015, input_10016, )
res10 = vmobj_to_list(res10)
res11 = vmobj_to_list(res11)
res12 = vmobj_to_list(res12)
res9_0 = module9.get_output(0).asnumpy()
res10_0 = res10[0].asnumpy()
res11_0 = res11[0].asnumpy()
res12_0 = res12[0].asnumpy()
np.testing.assert_allclose(res9_0 ,res10_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_0 ,res11_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_0 ,res12_0, atol=1e-3, rtol=1e-3)
(res9_0 == res10_0).all()
(res9_0 == res11_0).all()
(res9_0 == res12_0).all()
module13.set_input('var_10015', input_10015)
module13.set_input('var_10016', input_10016)
module13.set_input(**params)
module13.run()
res14 = intrp14.evaluate()(input_10015, input_10016, )
res15 = intrp15.evaluate()(input_10015, input_10016, )
res16 = intrp16.evaluate()(input_10015, input_10016, )
res14 = vmobj_to_list(res14)
res15 = vmobj_to_list(res15)
res16 = vmobj_to_list(res16)
res13_0 = module13.get_output(0).asnumpy()
res14_0 = res14[0].asnumpy()
res15_0 = res15[0].asnumpy()
res16_0 = res16[0].asnumpy()
np.testing.assert_allclose(res13_0 ,res14_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_0 ,res15_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_0 ,res16_0, atol=1e-3, rtol=1e-3)
(res13_0 == res14_0).all()
(res13_0 == res15_0).all()
(res13_0 == res16_0).all()
module17.set_input('var_10015', input_10015)
module17.set_input('var_10016', input_10016)
module17.set_input(**params)
module17.run()
res18 = intrp18.evaluate()(input_10015, input_10016, )
res19 = intrp19.evaluate()(input_10015, input_10016, )
res20 = intrp20.evaluate()(input_10015, input_10016, )
res18 = vmobj_to_list(res18)
res19 = vmobj_to_list(res19)
res20 = vmobj_to_list(res20)
res17_0 = module17.get_output(0).asnumpy()
res18_0 = res18[0].asnumpy()
res19_0 = res19[0].asnumpy()
res20_0 = res20[0].asnumpy()
np.testing.assert_allclose(res17_0 ,res18_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_0 ,res19_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_0 ,res20_0, atol=1e-3, rtol=1e-3)
(res17_0 == res18_0).all()
(res17_0 == res19_0).all()
(res17_0 == res20_0).all()
module21.set_input('var_10015', input_10015)
module21.set_input('var_10016', input_10016)
module21.set_input(**params)
module21.run()
res22 = intrp22.evaluate()(input_10015, input_10016, )
res23 = intrp23.evaluate()(input_10015, input_10016, )
res24 = intrp24.evaluate()(input_10015, input_10016, )
res22 = vmobj_to_list(res22)
res23 = vmobj_to_list(res23)
res24 = vmobj_to_list(res24)
res21_0 = module21.get_output(0).asnumpy()
res22_0 = res22[0].asnumpy()
res23_0 = res23[0].asnumpy()
res24_0 = res24[0].asnumpy()
np.testing.assert_allclose(res21_0 ,res22_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_0 ,res23_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_0 ,res24_0, atol=1e-3, rtol=1e-3)
(res21_0 == res22_0).all()
(res21_0 == res23_0).all()
(res21_0 == res24_0).all()

'''55: TVMFuncCall
54: _ZNSt17_Function_handlerIFvN3tvm7runtime7TVM
53: tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}::operator()(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*) const
52: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, tvm::runtime::String const&)
51: tvm::relay::backend::ExecutorCodegen::Codegen(tvm::IRModule, tvm::relay::Function const&, tvm::runtime::String)
50: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::GraphExecutorCodegenModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
49: tvm::relay::backend::GraphExecutorCodegen::Codegen(tvm::IRModule, tvm::relay::Function, tvm::runtime::String)
48: tvm::transform::Pass::operator()(tvm::IRModule) const
47: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
46: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
45: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
44: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
43: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(tvm::runtime::String const&, std::function<void (tvm::BaseFunc)>, tvm::VirtualDevice)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(tvm::runtime::String const&, std::function<void (tvm::BaseFunc)>, tvm::VirtualDevice)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
42: tvm::relay::tec::LowerTE(tvm::IRModule const&, tvm::runtime::String const&, std::function<void (tvm::BaseFunc)>, tvm::VirtualDevice)
41: tvm::transform::Pass::operator()(tvm::IRModule) const
40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
39: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
38: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::BaseFunc)>, tvm::VirtualDevice)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::BaseFunc)>, tvm::VirtualDevice)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
37: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
36: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
35: _ZZN3tvm5relay11ExprFunctorIFNS_9RelayEx
34: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
33: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
32: _ZN3tvm5relay9transform22Devic
31: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
28: _ZZN3tvm5relay11ExprFunctorIFNS_9RelayEx
27: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::TupleNode const*)
26: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
25: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
24: _ZZN3tvm5relay11ExprFunctorIFNS_9RelayEx
23: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::TupleNode const*)
22: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
21: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
20: _ZZN3tvm5relay11ExprFunctorIFNS_9RelayEx
19: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
18: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
17: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
16: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
15: _ZZN3tvm5relay11ExprFunctorIFNS_9RelayEx
14: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
13: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
12: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::Span, tvm::Target)
11: tvm::relay::tec::TECompilerImpl::Lower(tvm::relay::tec::CCacheKey const&, tvm::runtime::String)
10: tvm::relay::tec::TECompilerImpl::LowerInternal(tvm::relay::tec::CCacheKey const&, std::function<tvm::runtime::String (tvm::runtime::String)>)
9: tvm::relay::tec::PrimFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
8: tvm::relay::tec::ScheduleBuilder::Create(tvm::relay::Function const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
7: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
6: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
5: _ZZN3tvm5relay11ExprFunctorIFNS_7runtime
4: tvm::relay::tec::ScheduleBuilder::VisitExpr_(tvm::relay::CallNode const*)
3: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
2: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
1: _ZZN3tvm5relay11ExprFunctorIFNS_7runtime
0: tvm::relay::tec::ScheduleBuilder::VisitExpr_(tvm::relay::ConstantNode const*)

'''