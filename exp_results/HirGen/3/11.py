import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
def vmobj_to_list(o, dtype="float32"):
    if isinstance(o, tvm.nd.NDArray):
        return [o]
    elif isinstance(o, tvm.runtime.container.ADT):
        result = []
        for f in o:
            result.extend(vmobj_to_list(f, dtype))
        return result
    else:
        return o


mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_250 = relay.var("var_250", dtype = "float64", shape = (15, 3, 4))#candidate|250|(15, 3, 4)|var|float64
uop_251 = relay.acosh(var_250.astype('float64')) # shape=(15, 3, 4)
uop_256 = relay.exp(uop_251.astype('float32')) # shape=(15, 3, 4)
var_267 = relay.var("var_267", dtype = "float64", shape = (15, 3, 4))#candidate|267|(15, 3, 4)|var|float64
bop_268 = relay.logical_or(uop_251.astype('bool'), relay.reshape(var_267.astype('bool'), relay.shape_of(uop_251))) # shape=(15, 3, 4)
uop_273 = relay.cosh(uop_251.astype('float32')) # shape=(15, 3, 4)
uop_280 = relay.sinh(uop_273.astype('float64')) # shape=(15, 3, 4)
bop_298 = relay.logical_and(uop_273.astype('bool'), relay.reshape(uop_256.astype('bool'), relay.shape_of(uop_273))) # shape=(15, 3, 4)
output = relay.Tuple([bop_268,uop_280,bop_298,])
output2 = relay.Tuple([bop_268,uop_280,bop_298,])
func_311 = relay.Function([var_250,var_267,], output)
mod['func_311'] = func_311
mod = relay.transform.InferType()(mod)
var_312 = relay.var("var_312", dtype = "float64", shape = (15, 3, 4))#candidate|312|(15, 3, 4)|var|float64
var_313 = relay.var("var_313", dtype = "float64", shape = (15, 3, 4))#candidate|313|(15, 3, 4)|var|float64
output = func_311(var_312,var_313,)
func_314 = relay.Function([var_312,var_313,], output)
mutated_mod['func_314'] = func_314
mutated_mod = relay.transform.InferType()(mutated_mod)
var_627 = relay.var("var_627", dtype = "float32", shape = (8, 8, 15))#candidate|627|(8, 8, 15)|var|float32
var_628 = relay.var("var_628", dtype = "float32", shape = (8, 8, 15))#candidate|628|(8, 8, 15)|var|float32
bop_629 = relay.mod(var_627.astype('float32'), relay.reshape(var_628.astype('float32'), relay.shape_of(var_627))) # shape=(8, 8, 15)
func_311_call = mod.get_global_var('func_311')
func_314_call = mutated_mod.get_global_var('func_314')
var_641 = relay.var("var_641", dtype = "float64", shape = (180,))#candidate|641|(180,)|var|float64
call_640 = relay.TupleGetItem(func_311_call(relay.reshape(var_641.astype('float64'), [15, 3, 4]), relay.reshape(var_641.astype('float64'), [15, 3, 4]), ), 0)
call_642 = relay.TupleGetItem(func_314_call(relay.reshape(var_641.astype('float64'), [15, 3, 4]), relay.reshape(var_641.astype('float64'), [15, 3, 4]), ), 0)
func_311_call = mod.get_global_var('func_311')
func_314_call = mutated_mod.get_global_var('func_314')
call_643 = relay.TupleGetItem(func_311_call(relay.reshape(call_640.astype('float64'), [15, 3, 4]), relay.reshape(call_640.astype('float64'), [15, 3, 4]), ), 2)
call_644 = relay.TupleGetItem(func_314_call(relay.reshape(call_640.astype('float64'), [15, 3, 4]), relay.reshape(call_640.astype('float64'), [15, 3, 4]), ), 2)
var_646 = relay.var("var_646", dtype = "float32", shape = (8, 8, 15))#candidate|646|(8, 8, 15)|var|float32
bop_647 = relay.not_equal(bop_629.astype('bool'), relay.reshape(var_646.astype('bool'), relay.shape_of(bop_629))) # shape=(8, 8, 15)
func_311_call = mod.get_global_var('func_311')
func_314_call = mutated_mod.get_global_var('func_314')
call_650 = relay.TupleGetItem(func_311_call(relay.reshape(var_641.astype('float64'), [15, 3, 4]), relay.reshape(call_643.astype('float64'), [15, 3, 4]), ), 1)
call_651 = relay.TupleGetItem(func_314_call(relay.reshape(var_641.astype('float64'), [15, 3, 4]), relay.reshape(call_643.astype('float64'), [15, 3, 4]), ), 1)
func_311_call = mod.get_global_var('func_311')
func_314_call = mutated_mod.get_global_var('func_314')
call_675 = relay.TupleGetItem(func_311_call(relay.reshape(call_643.astype('float64'), [15, 3, 4]), relay.reshape(call_640.astype('float64'), [15, 3, 4]), ), 0)
call_676 = relay.TupleGetItem(func_314_call(relay.reshape(call_643.astype('float64'), [15, 3, 4]), relay.reshape(call_640.astype('float64'), [15, 3, 4]), ), 0)
func_311_call = mod.get_global_var('func_311')
func_314_call = mutated_mod.get_global_var('func_314')
call_687 = relay.TupleGetItem(func_311_call(relay.reshape(var_641.astype('float64'), [15, 3, 4]), relay.reshape(call_640.astype('float64'), [15, 3, 4]), ), 1)
call_688 = relay.TupleGetItem(func_314_call(relay.reshape(var_641.astype('float64'), [15, 3, 4]), relay.reshape(call_640.astype('float64'), [15, 3, 4]), ), 1)
uop_690 = relay.sinh(bop_647.astype('float64')) # shape=(8, 8, 15)
func_311_call = mod.get_global_var('func_311')
func_314_call = mutated_mod.get_global_var('func_314')
call_700 = relay.TupleGetItem(func_311_call(relay.reshape(call_650.astype('float64'), [15, 3, 4]), relay.reshape(call_640.astype('float64'), [15, 3, 4]), ), 1)
call_701 = relay.TupleGetItem(func_314_call(relay.reshape(call_650.astype('float64'), [15, 3, 4]), relay.reshape(call_640.astype('float64'), [15, 3, 4]), ), 1)
uop_704 = relay.log10(uop_690.astype('float64')) # shape=(8, 8, 15)
func_311_call = mod.get_global_var('func_311')
func_314_call = mutated_mod.get_global_var('func_314')
call_709 = relay.TupleGetItem(func_311_call(relay.reshape(call_650.astype('float64'), [15, 3, 4]), relay.reshape(call_687.astype('float64'), [15, 3, 4]), ), 1)
call_710 = relay.TupleGetItem(func_314_call(relay.reshape(call_650.astype('float64'), [15, 3, 4]), relay.reshape(call_687.astype('float64'), [15, 3, 4]), ), 1)
output = relay.Tuple([call_640,var_641,call_643,call_650,call_675,call_687,call_700,uop_704,call_709,])
output2 = relay.Tuple([call_642,var_641,call_644,call_651,call_676,call_688,call_701,uop_704,call_710,])
func_717 = relay.Function([var_627,var_628,var_641,var_646,], output)
mod['func_717'] = func_717
mod = relay.transform.InferType()(mod)
var_718 = relay.var("var_718", dtype = "float32", shape = (8, 8, 15))#candidate|718|(8, 8, 15)|var|float32
var_719 = relay.var("var_719", dtype = "float32", shape = (8, 8, 15))#candidate|719|(8, 8, 15)|var|float32
var_720 = relay.var("var_720", dtype = "float64", shape = (180,))#candidate|720|(180,)|var|float64
var_721 = relay.var("var_721", dtype = "float32", shape = (8, 8, 15))#candidate|721|(8, 8, 15)|var|float32
output = func_717(var_718,var_719,var_720,var_721,)
func_722 = relay.Function([var_718,var_719,var_720,var_721,], output)
mutated_mod['func_722'] = func_722
mutated_mod = relay.transform.InferType()(mutated_mod)
var_813 = relay.var("var_813", dtype = "float64", shape = (9, 9, 2))#candidate|813|(9, 9, 2)|var|float64
uop_814 = relay.tan(var_813.astype('float64')) # shape=(9, 9, 2)
uop_816 = relay.acosh(uop_814.astype('float32')) # shape=(9, 9, 2)
func_717_call = mod.get_global_var('func_717')
func_722_call = mutated_mod.get_global_var('func_722')
var_819 = relay.var("var_819", dtype = "float32", shape = (960,))#candidate|819|(960,)|var|float32
const_820 = relay.const([-6.803030,-4.699869,1.981662,-3.808928,-0.965932,-9.477978,3.431732,-0.905629,9.070037,-7.633628,-6.798764,0.401381,2.620370,-0.178763,5.704845,4.874786,8.182149,-3.594928,-0.529665,-4.229634,-2.608887,-9.581498,-7.126392,-2.382975,7.294698,3.339946,5.667222,3.448133,2.698072,6.208487,-5.981882,1.908429,-4.233513,7.282901,-3.038101,5.201400,-3.258909,-9.104947,7.123847,-0.512225,7.657015,-9.074773,9.292069,-8.448417,-7.045960,1.608359,-7.578030,-3.350911,3.727331,5.851809,1.671399,-0.856279,-5.115324,-3.488549,8.175498,-7.240143,-6.762922,2.674400,-7.836162,8.072430,9.546897,5.691058,3.062671,-0.901446,8.133728,-9.114168,7.877738,-5.122411,-3.353680,7.533226,-3.571003,-2.476128,-8.909072,-4.804732,5.507491,1.368817,-8.664291,-2.626713,-9.457306,-2.547799,-2.963595,-1.091008,4.141370,5.172799,-6.587094,5.220606,-9.460937,6.563024,5.633073,4.855979,8.611242,0.098255,-6.414815,1.021218,6.054264,-2.425503,3.055619,3.682172,-5.752314,-4.406359,3.665482,3.855494,5.606116,-4.291088,-3.152609,-1.394004,4.529213,7.109448,5.744654,-8.551755,0.936030,6.855192,-3.875765,1.686837,3.678793,0.214642,-4.099339,2.628854,6.751360,-6.952119,3.570199,-4.740157,9.312184,-1.876437,-3.377456,8.448227,-0.038791,-6.741464,3.389503,2.820634,1.994484,2.670262,2.597048,-8.781540,-3.089550,-8.503516,3.210500,-6.785588,-3.370349,4.831118,-0.125357,-5.304839,7.716116,1.073813,6.861254,-1.730925,2.116316,-7.767080,-8.009805,8.838595,4.538586,-6.693041,-0.673291,6.433611,-5.558974,-9.033318,0.900215,9.067064,7.841016,6.333238,8.902819,-8.557651,0.931574,7.265057,5.464074,3.305887,-0.610881,5.890943,-7.592949,4.130403,0.154091,2.128186,8.323461,-6.504406,1.420216,2.008946,4.181623,8.385296,-2.712911,-2.695430], dtype = "float64")#candidate|820|(180,)|const|float64
call_818 = relay.TupleGetItem(func_717_call(relay.reshape(var_819.astype('float32'), [8, 8, 15]), relay.reshape(var_819.astype('float32'), [8, 8, 15]), relay.reshape(const_820.astype('float64'), [180,]), relay.reshape(var_819.astype('float32'), [8, 8, 15]), ), 6)
call_821 = relay.TupleGetItem(func_722_call(relay.reshape(var_819.astype('float32'), [8, 8, 15]), relay.reshape(var_819.astype('float32'), [8, 8, 15]), relay.reshape(const_820.astype('float64'), [180,]), relay.reshape(var_819.astype('float32'), [8, 8, 15]), ), 6)
output = relay.Tuple([uop_816,call_818,var_819,const_820,])
output2 = relay.Tuple([uop_816,call_821,var_819,const_820,])
func_829 = relay.Function([var_813,var_819,], output)
mod['func_829'] = func_829
mod = relay.transform.InferType()(mod)
var_830 = relay.var("var_830", dtype = "float64", shape = (9, 9, 2))#candidate|830|(9, 9, 2)|var|float64
var_831 = relay.var("var_831", dtype = "float32", shape = (960,))#candidate|831|(960,)|var|float32
output = func_829(var_830,var_831,)
func_832 = relay.Function([var_830,var_831,], output)
mutated_mod['func_832'] = func_832
mutated_mod = relay.transform.InferType()(mutated_mod)
var_881 = relay.var("var_881", dtype = "uint8", shape = (9, 1, 10))#candidate|881|(9, 1, 10)|var|uint8
var_882 = relay.var("var_882", dtype = "uint8", shape = (9, 9, 10))#candidate|882|(9, 9, 10)|var|uint8
bop_883 = relay.bitwise_and(var_881.astype('uint8'), var_882.astype('uint8')) # shape=(9, 9, 10)
bop_892 = relay.maximum(var_881.astype('uint64'), bop_883.astype('uint64')) # shape=(9, 9, 10)
bop_895 = relay.less_equal(bop_892.astype('bool'), var_881.astype('bool')) # shape=(9, 9, 10)
output = bop_895
output2 = bop_895
func_908 = relay.Function([var_881,var_882,], output)
mod['func_908'] = func_908
mod = relay.transform.InferType()(mod)
var_909 = relay.var("var_909", dtype = "uint8", shape = (9, 1, 10))#candidate|909|(9, 1, 10)|var|uint8
var_910 = relay.var("var_910", dtype = "uint8", shape = (9, 9, 10))#candidate|910|(9, 9, 10)|var|uint8
output = func_908(var_909,var_910,)
func_911 = relay.Function([var_909,var_910,], output)
mutated_mod['func_911'] = func_911
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1000 = relay.var("var_1000", dtype = "uint32", shape = (7, 5))#candidate|1000|(7, 5)|var|uint32
var_1001 = relay.var("var_1001", dtype = "uint32", shape = (7, 5))#candidate|1001|(7, 5)|var|uint32
bop_1002 = relay.greater_equal(var_1000.astype('bool'), relay.reshape(var_1001.astype('bool'), relay.shape_of(var_1000))) # shape=(7, 5)
uop_1008 = relay.asin(bop_1002.astype('float64')) # shape=(7, 5)
output = uop_1008
output2 = uop_1008
func_1014 = relay.Function([var_1000,var_1001,], output)
mod['func_1014'] = func_1014
mod = relay.transform.InferType()(mod)
mutated_mod['func_1014'] = func_1014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1014_call = mutated_mod.get_global_var('func_1014')
var_1016 = relay.var("var_1016", dtype = "uint32", shape = (7, 5))#candidate|1016|(7, 5)|var|uint32
var_1017 = relay.var("var_1017", dtype = "uint32", shape = (7, 5))#candidate|1017|(7, 5)|var|uint32
call_1015 = func_1014_call(var_1016,var_1017,)
output = call_1015
func_1018 = relay.Function([var_1016,var_1017,], output)
mutated_mod['func_1018'] = func_1018
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1171 = relay.var("var_1171", dtype = "float64", shape = (13, 4))#candidate|1171|(13, 4)|var|float64
uop_1172 = relay.asinh(var_1171.astype('float64')) # shape=(13, 4)
func_311_call = mod.get_global_var('func_311')
func_314_call = mutated_mod.get_global_var('func_314')
var_1179 = relay.var("var_1179", dtype = "float64", shape = (180,))#candidate|1179|(180,)|var|float64
call_1178 = relay.TupleGetItem(func_311_call(relay.reshape(var_1179.astype('float64'), [15, 3, 4]), relay.reshape(var_1179.astype('float64'), [15, 3, 4]), ), 1)
call_1180 = relay.TupleGetItem(func_314_call(relay.reshape(var_1179.astype('float64'), [15, 3, 4]), relay.reshape(var_1179.astype('float64'), [15, 3, 4]), ), 1)
func_1014_call = mod.get_global_var('func_1014')
func_1018_call = mutated_mod.get_global_var('func_1018')
const_1192 = relay.const([1,6,2,2,1,8,-10,-6,4,-2,-9,9,10,7,1,-10,1,6,5,-7,-6,8,7,-5,-9,6,-5,-5,10,3,-2,-6,9,8,-1], dtype = "uint32")#candidate|1192|(35,)|const|uint32
call_1191 = func_1014_call(relay.reshape(const_1192.astype('uint32'), [7, 5]), relay.reshape(const_1192.astype('uint32'), [7, 5]), )
call_1193 = func_1014_call(relay.reshape(const_1192.astype('uint32'), [7, 5]), relay.reshape(const_1192.astype('uint32'), [7, 5]), )
func_908_call = mod.get_global_var('func_908')
func_911_call = mutated_mod.get_global_var('func_911')
var_1203 = relay.var("var_1203", dtype = "uint8", shape = (90,))#candidate|1203|(90,)|var|uint8
const_1204 = relay.const([-2,9,-1,1,9,10,1,4,1,3,3,-5,-5,-7,10,3,-6,-9,3,-10,-7,2,8,6,-9,-9,7,5,4,6,7,-5,2,-2,5,7,-4,-10,4,2,-4,-6,-4,-4,-4,-2,10,5,-9,-6,1,-6,2,-7,-9,2,9,4,-10,2,9,-6,-9,-2,10,-5,-1,5,-7,4,1,-1,5,-6,6,-2,1,-5,-8,1,4,6,8,-3,-4,-1,4,-5,-7,-7,-8,9,4,2,-10,-8,10,2,-5,-3,1,-4,-7,-5,2,9,-8,1,-4,-3,-7,-1,-7,7,7,3,-5,6,-7,-6,2,1,4,3,7,2,-9,3,7,9,1,3,-10,7,1,-6,-1,-4,-3,4,-7,5,1,-3,9,2,6,5,-6,3,10,-10,-8,-7,-3,10,7,-5,3,-7,-10,10,4,-1,-10,8,4,10,-2,3,-7,-5,-8,3,8,4,8,-3,-1,-5,-9,-2,10,-6,-8,10,-2,10,-5,3,-4,1,-3,6,-1,5,-3,2,1,-8,7,-4,4,10,10,5,2,-8,10,-7,3,10,10,-1,-10,-10,8,-7,-2,4,-2,-8,4,-7,7,5,9,8,-9,-10,8,7,8,10,1,-1,-2,-7,-2,1,10,1,-3,-9,-8,1,-1,-3,10,-8,-7,6,-8,6,-7,1,-2,7,3,-8,-4,-10,7,3,-5,2,10,1,-1,9,-5,5,5,5,-7,3,-3,-6,4,-2,2,3,2,-1,-3,10,1,7,7,-5,4,4,1,-10,3,6,-7,-9,-2,-1,3,5,5,1,2,6,6,-5,-2,-3,-10,10,5,6,2,-4,-9,10,-1,-7,10,10,3,-4,2,-8,4,10,9,-1,-3,7,-4,-5,-9,7,-4,-7,2,-2,9,-9,-9,-6,-6,1,-2,1,-5,-2,-9,-4,-7,1,-4,-6,-4,8,5,-4,-9,-10,1,-8,10,-1,-10,-3,7,6,9,-4,10,-8,4,-8,5,5,-1,-2,-4,9,7,-10,-8,-6,10,-1,2,7,-1,10,-3,2,1,-5,9,6,6,10,2,-2,-8,5,4,7,-5,3,-3,3,1,8,10,5,1,1,-5,-8,-9,2,-4,-1,5,10,1,3,-9,-1,6,6,-5,-1,-1,-3,3,-4,-4,10,8,-1,-3,-10,-5,3,1,9,8,6,10,-2,7,-1,-10,2,1,9,-10,-8,4,-6,-3,-2,-4,2,10,-8,9,-7,2,-1,5,-9,-10,1,8,-10,-4,-10,1,-4,-6,-7,4,6,-5,9,4,6,4,-10,7,-1,-2,-9,5,-3,6,5,-4,-5,5,-3,-1,7,-8,-8,-6,-4,-10,-9,-6,7,4,3,-3,9,2,1,10,-9,-2,3,-5,-4,10,1,10,2,-2,-2,-1,4,-4,7,10,4,4,-2,4,8,-1,-2,9,-5,-8,3,-9,-3,2,6,-7,-6,6,3,-3,-6,10,-7,3,-7,8,-10,-8,9,4,-4,6,3,-5,5,-5,-2,8,-3,1,10,3,8,5,-3,-5,-10,-4,-6,-9,-9,-10,1,-10,9,-6,3,-10,-1,10,-2,9,-5,-4,4,-2,10,-3,9,5,7,8,-9,10,-3,-3,5,-8,-5,-3,-6,9,6,6,5,5,3,3,4,-1,6,-4,6,-3,-4,9,1,5,9,-5,3,8,5,-7,7,-6,1,-3,-1,7,1,5,-5,-9,4,-1,-4,-10,-2,-8,6,-1,-5,6,-1,3,-1,3,-9,-10,-6,9,-2,9,-7,-5,2,-1,-10,-4,10,-2,6,-4,-10,7,5,-6,-6,-1,1,-7,3,1,-3,-6,-2,3,-6,2,-1,-1,-8,3,1,8,-1,-6,-1,8,4,8,-2,4,9,-3,-9,-9,3,-1,-8,-8,-4,-3,-5,-2,7,-5,-2,-9,6,-3,8,4,-4,6,3,-2,10,5,-8,-4,-6,6,-7,9,6,-10,2,8,8,9,-9,10,6,-7,-2,-1,-8,-6,-9,10,-7,-2,4,-6,-3,4,3,1,1,6,-9,-2,2,-3,3,10,6,10,1,2,10,-6,-2,-4,7,8,7,-2,-10,-1,10,2,3,-6,7,-10,4,9,5,2,-5,9,-2,10,7,2,3,5,-5,10,-7,-8,8], dtype = "uint8")#candidate|1204|(810,)|const|uint8
call_1202 = func_908_call(relay.reshape(var_1203.astype('uint8'), [9, 1, 10]), relay.reshape(const_1204.astype('uint8'), [9, 9, 10]), )
call_1205 = func_908_call(relay.reshape(var_1203.astype('uint8'), [9, 1, 10]), relay.reshape(const_1204.astype('uint8'), [9, 9, 10]), )
output = relay.Tuple([uop_1172,call_1178,var_1179,call_1191,const_1192,call_1202,var_1203,const_1204,])
output2 = relay.Tuple([uop_1172,call_1180,var_1179,call_1193,const_1192,call_1205,var_1203,const_1204,])
func_1207 = relay.Function([var_1171,var_1179,var_1203,], output)
mod['func_1207'] = func_1207
mod = relay.transform.InferType()(mod)
var_1208 = relay.var("var_1208", dtype = "float64", shape = (13, 4))#candidate|1208|(13, 4)|var|float64
var_1209 = relay.var("var_1209", dtype = "float64", shape = (180,))#candidate|1209|(180,)|var|float64
var_1210 = relay.var("var_1210", dtype = "uint8", shape = (90,))#candidate|1210|(90,)|var|uint8
output = func_1207(var_1208,var_1209,var_1210,)
func_1211 = relay.Function([var_1208,var_1209,var_1210,], output)
mutated_mod['func_1211'] = func_1211
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1234 = relay.var("var_1234", dtype = "float64", shape = (11, 15, 6))#candidate|1234|(11, 15, 6)|var|float64
var_1235 = relay.var("var_1235", dtype = "float64", shape = (11, 15, 6))#candidate|1235|(11, 15, 6)|var|float64
bop_1236 = relay.mod(var_1234.astype('float64'), relay.reshape(var_1235.astype('float64'), relay.shape_of(var_1234))) # shape=(11, 15, 6)
uop_1240 = relay.atan(bop_1236.astype('float32')) # shape=(11, 15, 6)
func_908_call = mod.get_global_var('func_908')
func_911_call = mutated_mod.get_global_var('func_911')
var_1243 = relay.var("var_1243", dtype = "uint8", shape = (90,))#candidate|1243|(90,)|var|uint8
var_1244 = relay.var("var_1244", dtype = "uint8", shape = (3, 270))#candidate|1244|(3, 270)|var|uint8
call_1242 = func_908_call(relay.reshape(var_1243.astype('uint8'), [9, 1, 10]), relay.reshape(var_1244.astype('uint8'), [9, 9, 10]), )
call_1245 = func_908_call(relay.reshape(var_1243.astype('uint8'), [9, 1, 10]), relay.reshape(var_1244.astype('uint8'), [9, 9, 10]), )
output = relay.Tuple([uop_1240,call_1242,var_1243,var_1244,])
output2 = relay.Tuple([uop_1240,call_1245,var_1243,var_1244,])
func_1247 = relay.Function([var_1234,var_1235,var_1243,var_1244,], output)
mod['func_1247'] = func_1247
mod = relay.transform.InferType()(mod)
var_1248 = relay.var("var_1248", dtype = "float64", shape = (11, 15, 6))#candidate|1248|(11, 15, 6)|var|float64
var_1249 = relay.var("var_1249", dtype = "float64", shape = (11, 15, 6))#candidate|1249|(11, 15, 6)|var|float64
var_1250 = relay.var("var_1250", dtype = "uint8", shape = (90,))#candidate|1250|(90,)|var|uint8
var_1251 = relay.var("var_1251", dtype = "uint8", shape = (3, 270))#candidate|1251|(3, 270)|var|uint8
output = func_1247(var_1248,var_1249,var_1250,var_1251,)
func_1252 = relay.Function([var_1248,var_1249,var_1250,var_1251,], output)
mutated_mod['func_1252'] = func_1252
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1294 = relay.var("var_1294", dtype = "int64", shape = (8, 14, 5))#candidate|1294|(8, 14, 5)|var|int64
const_1295 = relay.const([[[6,-6,1,-7,5],[2,1,-6,2,-9],[-6,6,10,4,-9],[-6,5,9,-3,8],[2,4,7,8,-3],[-6,5,2,-9,1],[-7,4,10,9,-8],[1,-7,5,-6,-3],[7,-10,9,-10,-10],[8,-8,1,-6,1],[-9,3,-7,2,-1],[-4,4,3,-6,4],[3,-3,-6,9,9],[5,-2,6,7,5]],[[-10,-6,-3,-10,1],[-4,7,5,4,-5],[-6,10,9,9,3],[1,5,10,6,6],[3,2,-7,-5,-3],[-5,1,6,3,-5],[9,10,3,1,-9],[7,-5,3,-7,5],[9,8,-7,-9,10],[-7,-9,-5,6,-2],[-3,8,-1,3,7],[2,10,-7,6,7],[9,-9,10,1,-1],[2,5,3,-1,5]],[[-4,6,-7,-1,9],[1,4,6,-3,4],[1,6,-8,-3,-5],[8,5,3,9,7],[6,5,7,7,-10],[1,-9,-9,-8,-9],[-1,4,3,2,-3],[-9,6,-10,5,10],[-10,-7,8,7,8],[-10,-5,7,-2,-1],[7,-6,1,-5,-7],[2,-5,-6,2,-10],[-1,1,5,-5,6],[-5,-3,-5,9,3]],[[-4,3,3,-2,-5],[7,-5,4,-6,-8],[-5,5,-6,-6,-10],[-10,3,2,5,1],[8,-7,-4,-4,2],[-5,7,-6,-10,-7],[-1,-7,-2,-8,-4],[-6,7,-7,4,3],[3,4,-6,2,-3],[10,-8,8,-7,7],[-7,6,-8,-5,4],[10,-4,9,5,9],[10,3,6,6,-10],[-5,-7,1,3,8]],[[1,-7,2,-6,7],[8,5,-5,-5,-6],[-5,-3,3,-8,7],[-6,-5,5,10,8],[-7,7,8,-6,-3],[9,5,-2,6,-7],[-9,-3,-9,-4,2],[-8,-8,4,9,10],[-4,1,3,-10,-5],[-3,-3,1,-7,-2],[-8,-9,-9,2,-2],[-9,-1,8,4,-2],[8,-5,4,-4,10],[-1,10,5,-4,7]],[[-9,-4,7,-4,-3],[-9,-2,3,-10,-8],[-7,-1,10,6,4],[1,10,-4,9,-7],[4,3,-2,-1,-5],[7,1,-9,-3,-6],[10,2,3,8,-4],[4,1,-4,-8,-7],[6,-5,1,8,2],[-3,-1,4,-1,-6],[5,2,1,-3,1],[-2,-6,-3,-2,3],[7,8,-2,-2,3],[7,9,-8,-3,9]],[[-2,2,7,-5,8],[-5,-3,-3,-5,8],[-4,-10,2,5,-8],[1,5,-8,-9,-3],[8,-4,-3,7,-3],[-8,10,9,-5,-1],[-9,4,6,-8,4],[3,-1,4,3,6],[8,2,3,2,-10],[-2,5,-4,-8,7],[-6,-4,9,-3,-3],[10,-2,-9,-8,2],[6,-6,1,-4,-2],[3,-3,-5,8,7]],[[-8,1,3,-4,5],[-6,3,1,-2,5],[6,-2,-6,3,6],[3,1,3,-6,-5],[-6,-1,5,-2,-7],[-2,4,5,-4,2],[-10,-3,1,-5,6],[9,2,-10,-1,3],[7,2,1,1,-6],[5,-8,-9,6,-7],[5,-6,-3,2,-9],[4,2,9,-3,-9],[3,-7,4,-1,1],[5,-3,2,7,2]]], dtype = "int64")#candidate|1295|(8, 14, 5)|const|int64
bop_1296 = relay.less(var_1294.astype('bool'), relay.reshape(const_1295.astype('bool'), relay.shape_of(var_1294))) # shape=(8, 14, 5)
output = bop_1296
output2 = bop_1296
func_1302 = relay.Function([var_1294,], output)
mod['func_1302'] = func_1302
mod = relay.transform.InferType()(mod)
var_1303 = relay.var("var_1303", dtype = "int64", shape = (8, 14, 5))#candidate|1303|(8, 14, 5)|var|int64
output = func_1302(var_1303)
func_1304 = relay.Function([var_1303], output)
mutated_mod['func_1304'] = func_1304
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1344 = relay.var("var_1344", dtype = "float32", shape = (2, 7))#candidate|1344|(2, 7)|var|float32
uop_1345 = relay.atanh(var_1344.astype('float32')) # shape=(2, 7)
output = relay.Tuple([uop_1345,])
output2 = relay.Tuple([uop_1345,])
func_1355 = relay.Function([var_1344,], output)
mod['func_1355'] = func_1355
mod = relay.transform.InferType()(mod)
mutated_mod['func_1355'] = func_1355
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1356 = relay.var("var_1356", dtype = "float32", shape = (2, 7))#candidate|1356|(2, 7)|var|float32
func_1355_call = mutated_mod.get_global_var('func_1355')
call_1357 = func_1355_call(var_1356)
output = call_1357
func_1358 = relay.Function([var_1356], output)
mutated_mod['func_1358'] = func_1358
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1410 = relay.var("var_1410", dtype = "float64", shape = (10, 12))#candidate|1410|(10, 12)|var|float64
uop_1411 = relay.atan(var_1410.astype('float64')) # shape=(10, 12)
output = relay.Tuple([uop_1411,])
output2 = relay.Tuple([uop_1411,])
func_1416 = relay.Function([var_1410,], output)
mod['func_1416'] = func_1416
mod = relay.transform.InferType()(mod)
var_1417 = relay.var("var_1417", dtype = "float64", shape = (10, 12))#candidate|1417|(10, 12)|var|float64
output = func_1416(var_1417)
func_1418 = relay.Function([var_1417], output)
mutated_mod['func_1418'] = func_1418
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1487 = relay.var("var_1487", dtype = "float64", shape = (10, 7, 9))#candidate|1487|(10, 7, 9)|var|float64
uop_1488 = relay.log(var_1487.astype('float64')) # shape=(10, 7, 9)
func_908_call = mod.get_global_var('func_908')
func_911_call = mutated_mod.get_global_var('func_911')
var_1502 = relay.var("var_1502", dtype = "uint8", shape = (90,))#candidate|1502|(90,)|var|uint8
var_1503 = relay.var("var_1503", dtype = "uint8", shape = (810,))#candidate|1503|(810,)|var|uint8
call_1501 = func_908_call(relay.reshape(var_1502.astype('uint8'), [9, 1, 10]), relay.reshape(var_1503.astype('uint8'), [9, 9, 10]), )
call_1504 = func_908_call(relay.reshape(var_1502.astype('uint8'), [9, 1, 10]), relay.reshape(var_1503.astype('uint8'), [9, 9, 10]), )
uop_1506 = relay.acos(call_1501.astype('float32')) # shape=(9, 9, 10)
uop_1508 = relay.acos(call_1504.astype('float32')) # shape=(9, 9, 10)
output = relay.Tuple([uop_1488,var_1502,var_1503,uop_1506,])
output2 = relay.Tuple([uop_1488,var_1502,var_1503,uop_1508,])
func_1510 = relay.Function([var_1487,var_1502,var_1503,], output)
mod['func_1510'] = func_1510
mod = relay.transform.InferType()(mod)
mutated_mod['func_1510'] = func_1510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1510_call = mutated_mod.get_global_var('func_1510')
var_1512 = relay.var("var_1512", dtype = "float64", shape = (10, 7, 9))#candidate|1512|(10, 7, 9)|var|float64
var_1513 = relay.var("var_1513", dtype = "uint8", shape = (90,))#candidate|1513|(90,)|var|uint8
var_1514 = relay.var("var_1514", dtype = "uint8", shape = (810,))#candidate|1514|(810,)|var|uint8
call_1511 = func_1510_call(var_1512,var_1513,var_1514,)
output = call_1511
func_1515 = relay.Function([var_1512,var_1513,var_1514,], output)
mutated_mod['func_1515'] = func_1515
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1572 = relay.var("var_1572", dtype = "float64", shape = (4, 14, 13))#candidate|1572|(4, 14, 13)|var|float64
uop_1573 = relay.cos(var_1572.astype('float64')) # shape=(4, 14, 13)
uop_1578 = relay.log10(var_1572.astype('float64')) # shape=(4, 14, 13)
var_1583 = relay.var("var_1583", dtype = "float64", shape = (4, 14, 13))#candidate|1583|(4, 14, 13)|var|float64
bop_1584 = relay.right_shift(uop_1573.astype('int8'), relay.reshape(var_1583.astype('int8'), relay.shape_of(uop_1573))) # shape=(4, 14, 13)
uop_1588 = relay.erf(bop_1584.astype('float64')) # shape=(4, 14, 13)
func_1510_call = mod.get_global_var('func_1510')
func_1515_call = mutated_mod.get_global_var('func_1515')
const_1593 = relay.const([-5.160822,7.742949,-6.038283,-0.402069,1.653586,1.805527,-2.187767,-8.371300,0.488625,9.622904,-5.697305,1.902071,5.435439,3.252579,2.653420,-0.967935,5.657779,-2.574595,-5.958915,-3.215653,-1.983591,6.936872,-1.949869,-3.044611,9.432037,8.282988,1.921261,6.862677,-1.460704,3.026981,8.215616,9.125796,1.454531,-4.130873,-6.453564,-2.526132,-0.712594,3.305845,0.402968,4.548663,-5.172845,-2.291913,4.299820,-6.496263,8.143368,8.970961,-4.249217,6.419528,-8.639479,9.828597,-6.500990,2.628626,3.226867,1.536146,-2.164374,0.739737,-7.159827,6.839596,0.585745,3.820755,4.256778,9.153354,0.844394,-2.911663,-7.951189,-7.831460,4.435811,-3.030691,9.701428,8.963158,-1.462050,-6.912830,-0.186172,-9.866524,3.384616,-2.966445,4.160740,-4.547017,-4.317134,-0.052113,4.144011,9.968243,0.497584,0.687181,-0.288019,-3.693437,-0.071905,4.163195,-8.759715,-5.250792,4.510210,2.336811,2.571518,7.663158,-2.856320,-7.719411,-7.717543,-8.810286,0.350606,-0.191789,-9.673493,-8.097614,4.690387,3.126421,-0.312933,-3.538830,2.585910,-0.779826,7.639783,-9.439067,8.235254,3.628380,2.565045,6.963282,-9.920098,-5.890875,9.210468,9.949461,-6.623246,-9.975882,-6.969879,-0.315251,-5.194325,-2.770480,-2.995949,4.321184,-6.424333,6.355273,-7.125239,-8.223551,0.227544,6.074837,-4.918048,7.946701,-1.585774,2.700862,-8.683753,-2.973755,-0.752856,4.759334,8.150047,-3.107699,0.958240,8.844470,4.904963,-3.218843,-0.018627,8.830985,-5.135502,4.120790,-3.317394,-2.281564,-5.182400,-9.066359,7.824898,7.949410,-0.941453,-4.253032,-6.717461,-7.105949,-8.730314,-5.263104,-9.845343,5.563296,-9.279483,9.480889,5.106308,-7.567278,-4.105795,-8.831583,-1.273051,3.594646,4.928684,-5.189916,6.624021,3.933954,-9.952904,8.642110,6.241871,5.942578,8.485875,9.699175,-8.515896,2.390445,-7.994798,3.742432,8.443905,3.068019,-4.363216,-0.642330,-3.665756,4.413459,6.269573,-6.467824,2.978627,9.106805,-3.038892,0.819025,-1.419063,-4.095160,-5.981695,6.650587,-1.422609,1.302291,-9.889492,-1.583757,9.727532,1.961650,-0.612844,-6.587807,-7.356567,1.266553,-1.154025,4.869265,3.584605,5.330009,0.572208,8.421582,9.813252,0.656093,5.410495,3.013752,1.390878,9.456438,-8.285135,-7.971965,8.950599,0.357627,-0.559403,-3.687822,-2.377360,-3.886571,-5.038878,0.345525,-8.822247,-6.142405,2.833132,-4.932176,-9.548454,-1.808767,3.497115,3.230056,-0.476877,-2.262722,-0.981268,-8.687774,-5.531246,-4.590976,7.575692,4.662154,-1.925628,3.296489,9.661503,1.886861,9.915797,-5.075851,-0.886771,-0.102530,-6.656580,6.331217,4.470826,-9.244259,-6.222782,8.846240,-6.335506,9.378736,-3.148856,-8.307459,5.379665,0.787997,-0.475754,9.807653,-4.988017,0.026918,3.561603,7.357096,8.739439,-0.595600,-8.324450,1.254925,-0.488955,-8.230376,0.040233,-2.501037,-2.233308,6.682786,1.245854,8.136325,-2.886034,1.606416,1.388954,6.456908,-2.213842,0.380738,2.982517,0.837322,5.520001,-5.029959,5.292967,3.328002,-8.783226,-5.692885,-7.008268,0.618128,-9.094214,-1.879124,8.286892,-0.148230,2.255768,1.136066,-5.965850,4.233682,-2.019749,-4.877944,-1.806950,5.275728,0.910979,5.225885,9.921772,-7.843872,7.018636,5.575562,-3.474114,-9.287792,0.342095,-7.362976,-3.929008,-1.569038,9.477475,-5.913708,-7.998426,4.214252,9.094380,8.702846,0.920595,4.416411,-5.148621,-8.620291,-3.744675,0.614557,-7.346311,-7.748460,6.731762,2.071477,1.750844,-2.325532,0.214408,5.596701,-9.654086,3.539570,7.477708,-5.910132,4.205177,-5.297783,6.982539,-6.487848,-6.918151,8.219104,4.771961,-3.810080,-3.314962,-6.251263,-4.282235,6.484514,3.996867,5.424851,9.447126,-7.850582,-9.671962,-7.105382,-5.707648,4.241494,6.180183,-5.385114,1.848825,-3.996449,-9.166440,2.347515,-3.662393,5.406756,1.253171,-2.977125,4.357641,7.820163,-9.468621,7.681985,-4.947893,8.850645,0.026128,-3.768046,-2.882840,4.691119,-0.993975,-7.451352,1.721384,-6.130871,-6.561708,4.416706,6.501121,1.562816,-2.957468,0.175249,0.764035,9.377847,-2.528914,9.447053,-7.350714,4.832935,6.740878,9.498194,-5.662170,2.380265,7.883289,-7.941088,9.809546,-6.161058,-5.908198,1.153753,-2.567573,3.189645,-2.967413,8.832642,7.098422,2.690432,-6.871867,5.135744,-1.365209,8.834726,2.994501,6.292383,6.259389,-3.436427,5.785422,8.168365,-8.609825,-5.944256,5.687159,7.317617,6.598585,7.265190,-6.206394,-2.903868,9.162329,-1.939573,1.614302,-3.523450,0.460648,-0.994323,-8.816273,-5.032989,-8.709519,8.911676,-2.746333,-6.441014,-6.426430,-3.459223,-0.697866,1.700525,-4.457676,-2.103064,4.226983,3.201780,-2.633537,6.337586,1.954164,5.544530,8.770721,-7.870920,-2.638319,2.105835,-5.145271,4.754230,-7.119991,7.799286,-2.586235,-8.337655,-8.911925,-5.852741,5.751070,0.629536,1.500623,3.632466,5.759928,-9.220581,-8.165870,-0.907384,8.141301,-6.686757,9.327572,6.898327,9.386462,2.470514,6.812583,-3.567178,-6.476090,9.857281,2.532003,-4.624158,-9.735310,-2.593692,-8.279678,-9.190510,-9.941450,7.883463,-6.895632,2.425154,-0.440422,7.936275,-5.629543,-9.295854,5.310883,-3.489425,-2.065286,9.384615,1.119654,-1.134295,7.431951,-3.699003,1.383511,3.276252,-3.837950,0.367693,0.604570,-2.882563,4.897794,-5.784507,-3.134684,1.694593,0.957588,-1.012055,-9.958144,-6.157932,9.310009,1.246867,-7.118471,-9.136078,7.303047,6.967025,-2.487441,-6.049518,1.431680,-8.394548,1.596715,-7.231822,-0.053978,6.138324,2.908570,-3.291263,-5.057679,1.451244,-7.290635,2.853069,-2.819106,0.717092,-5.515577,-6.045894,-6.983094,-9.025931,-8.551215,2.630961,3.069591,6.189167,-1.481939,4.144511,6.759805,-1.921623,-4.334633,0.067347,-4.000682,3.808917,-6.362382,-8.029656,-5.816426,-5.397208,-8.897890,5.700457,-5.477308,-1.715905,7.246249,-2.959656,0.813452,-7.971461,-1.380622,-2.738718,-4.814497,-2.248729,5.149751,-1.179280,4.867992,-6.648940,-2.500796,5.659519,-5.000702,6.937579,7.291399,-8.863445,-2.835199,-1.999653,-6.154585,-9.379018,-0.690966,8.674681,4.598467,3.754738,-6.444156,-8.132287,1.223173,6.409001,-7.550146,7.320392,-2.430336,-4.354579,4.973759,-0.138688,0.240670,-1.902658,3.758201,8.696443,5.019387,9.788385,-9.563791,-0.842026,2.290561,9.288028,0.747711,3.400944,-8.239146,-2.706576,-3.488985,5.106787], dtype = "float64")#candidate|1593|(630,)|const|float64
const_1594 = relay.const([-1,-7,1,-6,-6,-1,7,7,-7,-5,1,4,5,-9,7,4,-4,8,-8,10,5,4,5,-9,4,-5,5,3,3,-8,3,6,-10,5,-9,2,6,7,5,-6,-3,6,-2,9,-10,-6,8,2,-6,-7,-2,2,-5,3,-8,-1,-10,8,-7,-9,-5,-1,7,-2,10,10,8,-4,-1,-5,6,10,6,-9,-9,1,1,7,-3,1,-10,-9,-2,-3,8,4,7,-9,5,7], dtype = "uint8")#candidate|1594|(90,)|const|uint8
var_1595 = relay.var("var_1595", dtype = "uint8", shape = (810,))#candidate|1595|(810,)|var|uint8
call_1592 = relay.TupleGetItem(func_1510_call(relay.reshape(const_1593.astype('float64'), [10, 7, 9]), relay.reshape(const_1594.astype('uint8'), [90,]), relay.reshape(var_1595.astype('uint8'), [810,]), ), 2)
call_1596 = relay.TupleGetItem(func_1515_call(relay.reshape(const_1593.astype('float64'), [10, 7, 9]), relay.reshape(const_1594.astype('uint8'), [90,]), relay.reshape(var_1595.astype('uint8'), [810,]), ), 2)
func_1416_call = mod.get_global_var('func_1416')
func_1418_call = mutated_mod.get_global_var('func_1418')
const_1606 = relay.const([-7.301083,6.029737,1.920398,-9.615193,-4.291060,-7.197441,8.913905,-7.740014,5.680132,-5.084575,-8.809791,-1.858257,0.676906,2.305071,5.137667,-1.345577,-7.073798,0.707124,-4.506983,-8.922366,-8.353888,0.559109,1.715340,-8.501504,3.106640,1.242622,-6.218849,-4.098039,4.539034,-7.746765,-3.716396,-2.313510,-2.470272,-2.755812,3.335624,-4.962494,9.047478,1.361987,0.083082,2.773663,-8.138111,-8.457160,-9.042638,8.123198,-0.434804,-2.878202,-2.730976,9.161637,-1.515097,-6.621767,3.194224,-5.481521,-7.303497,0.520059,0.983506,-4.068625,6.921534,-2.455070,1.942146,9.424704,3.457589,-7.911819,-3.887813,-1.704168,5.886841,0.327759,7.170441,-6.180273,0.491092,-7.754489,-4.438574,4.309917,9.764940,-6.278235,5.671686,9.267522,4.615463,-7.504993,3.586010,3.330651,5.479541,0.584914,-6.472209,-1.938542,-4.109474,-3.014410,7.142673,-2.578883,3.876736,-0.267689,4.872976,7.592000,2.207820,-7.165866,-8.630236,-2.748692,-6.428135,0.808932,8.915965,5.355295,-7.905550,-5.081690,8.271046,-6.347680,3.460608,6.644606,-5.201121,-9.539603,-7.615885,6.011460,-0.650288,5.430155,9.018846,0.649220,-5.416313,-9.559192,-8.943256,7.303867,-7.780441,-3.682324], dtype = "float64")#candidate|1606|(120,)|const|float64
call_1605 = relay.TupleGetItem(func_1416_call(relay.reshape(const_1606.astype('float64'), [10, 12])), 0)
call_1607 = relay.TupleGetItem(func_1418_call(relay.reshape(const_1606.astype('float64'), [10, 12])), 0)
output = relay.Tuple([uop_1578,uop_1588,call_1592,const_1593,const_1594,var_1595,call_1605,const_1606,])
output2 = relay.Tuple([uop_1578,uop_1588,call_1596,const_1593,const_1594,var_1595,call_1607,const_1606,])
func_1613 = relay.Function([var_1572,var_1583,var_1595,], output)
mod['func_1613'] = func_1613
mod = relay.transform.InferType()(mod)
var_1614 = relay.var("var_1614", dtype = "float64", shape = (4, 14, 13))#candidate|1614|(4, 14, 13)|var|float64
var_1615 = relay.var("var_1615", dtype = "float64", shape = (4, 14, 13))#candidate|1615|(4, 14, 13)|var|float64
var_1616 = relay.var("var_1616", dtype = "uint8", shape = (810,))#candidate|1616|(810,)|var|uint8
output = func_1613(var_1614,var_1615,var_1616,)
func_1617 = relay.Function([var_1614,var_1615,var_1616,], output)
mutated_mod['func_1617'] = func_1617
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1722 = relay.var("var_1722", dtype = "float32", shape = (14, 15))#candidate|1722|(14, 15)|var|float32
uop_1723 = relay.atanh(var_1722.astype('float32')) # shape=(14, 15)
output = uop_1723
output2 = uop_1723
func_1725 = relay.Function([var_1722,], output)
mod['func_1725'] = func_1725
mod = relay.transform.InferType()(mod)
mutated_mod['func_1725'] = func_1725
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1726 = relay.var("var_1726", dtype = "float32", shape = (14, 15))#candidate|1726|(14, 15)|var|float32
func_1725_call = mutated_mod.get_global_var('func_1725')
call_1727 = func_1725_call(var_1726)
output = call_1727
func_1728 = relay.Function([var_1726], output)
mutated_mod['func_1728'] = func_1728
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1753 = relay.const([[[-5,1,7,-6,9,-7,4,-10,10,-1],[-9,1,3,-10,2,-4,-6,-8,-9,3],[6,6,8,8,-5,5,9,-3,1,-5],[-1,7,6,-2,10,2,5,-7,-3,-3],[4,-4,5,-5,1,9,-9,-1,2,9],[-7,9,8,-7,10,1,9,7,1,10],[4,-5,-6,9,8,-9,10,8,-5,-10],[4,-9,5,7,-9,-9,6,7,8,9],[5,-4,-9,10,-5,9,2,-2,-5,4],[-4,1,6,-4,-4,-2,-5,2,9,8],[-4,5,4,-2,4,6,-8,-10,3,-9],[-8,-7,-9,7,-3,-2,-1,-5,-4,-5],[-3,-6,8,-3,3,9,5,6,-7,2],[7,8,-2,-4,-10,-3,-10,1,-9,8],[-8,-3,4,-1,-2,10,-8,9,9,-4],[-2,1,-8,-1,-9,-8,7,4,-1,-2]],[[-7,-4,9,2,-7,-9,3,-3,4,-7],[3,2,9,1,10,-4,-4,-9,-2,-4],[-7,-1,5,-3,-8,-2,8,-2,9,-6],[9,-5,8,7,-6,10,6,-6,-5,-7],[-1,-7,2,-7,-5,1,5,-8,-1,5],[-7,-1,-8,1,-7,-8,9,1,-7,4],[3,7,-1,-3,1,10,-4,-3,9,8],[4,8,3,3,-10,-3,2,3,6,-6],[7,-7,6,-5,-3,2,-1,1,10,6],[-2,-2,-9,-8,4,-2,-9,-2,-8,-1],[-10,-10,-3,-4,4,-10,-7,9,-9,2],[2,-4,4,9,3,-5,-2,3,-6,8],[-5,4,-3,1,-1,-7,9,-5,7,9],[3,2,-8,3,-10,-4,9,10,-3,6],[-3,1,6,7,2,-3,9,-2,-10,3],[-4,-6,6,-7,-4,7,9,1,3,-1]],[[5,10,1,5,7,-1,6,5,3,3],[6,7,7,3,8,-5,-7,-9,8,-2],[-1,-5,-10,8,-4,-1,2,-8,-5,-1],[4,-8,-2,1,-8,-3,6,5,-10,-9],[6,5,-7,-9,3,-5,-5,-7,-9,-6],[-1,-7,9,-3,7,-3,2,-2,-10,-1],[-8,-9,-1,-1,5,9,-6,-3,10,-6],[-7,-9,9,-10,-10,-4,-9,-3,-9,5],[2,10,-2,-7,-6,-9,-3,4,2,3],[-4,2,9,-8,-2,2,6,-5,4,1],[6,5,-10,1,4,4,2,5,-3,-2],[3,2,8,10,-9,4,-2,-5,1,-6],[4,4,8,-9,-2,8,9,-9,-7,-10],[9,-4,-4,-3,8,1,9,-8,-7,-8],[10,-6,-7,-5,-3,5,-9,-3,7,-10],[-5,-7,-8,-3,-1,-4,8,7,7,4]],[[-7,2,-5,2,10,8,-5,-2,-7,-8],[8,9,-3,3,-8,-2,3,2,-8,3],[6,-5,-4,4,2,2,-3,5,-9,8],[5,-6,-5,-10,5,-10,3,-4,4,10],[9,5,-7,9,-1,5,6,-6,-2,-5],[10,-7,-3,-1,8,-1,5,10,8,-10],[-6,-5,-8,5,-9,-4,6,-1,-4,-5],[4,-3,4,3,-1,-1,7,9,-8,5],[5,-4,5,-1,8,3,-2,2,-8,-7],[7,-7,-5,2,-3,1,-8,-2,-2,2],[-6,1,1,-3,-8,1,-10,10,7,1],[10,-1,-6,-3,-3,-8,2,-9,1,-6],[-4,-4,7,2,-9,5,2,10,-8,-6],[-8,2,-4,-4,2,-3,9,3,-3,-10],[-7,-2,3,-6,-4,6,9,-3,10,7],[9,10,-7,-4,7,3,-2,-10,-6,8]],[[3,4,-1,-2,-6,2,-8,5,-5,-8],[-4,-6,-7,-3,-5,4,4,-9,-5,-7],[1,-6,4,-6,2,-3,8,-3,6,-9],[7,-10,-1,10,-1,9,-8,2,-8,-3],[2,-7,5,-5,-5,3,-10,-7,-5,9],[3,9,4,-7,8,3,8,-2,9,6],[-6,8,-4,-8,-1,5,6,-9,-5,-5],[6,7,-9,7,-8,3,-1,-9,7,6],[-4,-6,-6,5,9,6,-9,9,2,9],[8,6,-5,6,4,-2,4,-1,2,2],[5,9,1,-5,6,4,5,3,7,-4],[3,9,5,-8,7,8,-9,7,7,-4],[-5,-6,10,-10,1,10,-1,1,-1,1],[-10,2,-8,-9,3,9,-4,8,-8,-5],[-2,5,3,9,5,-6,1,-4,8,-5],[9,-1,-2,-8,-9,9,5,-7,2,-6]],[[6,-1,9,7,1,2,-7,-2,4,-9],[-3,6,-4,8,-1,-2,6,3,1,5],[-1,9,-10,8,10,-6,-6,1,-9,4],[3,6,-9,5,8,-9,6,8,-8,-7],[4,9,10,-1,-1,7,-1,3,2,10],[-9,1,-9,-1,-7,-7,-4,4,8,-10],[-8,-3,10,1,-8,-1,1,2,3,9],[2,3,-4,-1,-2,-3,10,1,4,3],[2,8,-8,-3,4,2,-2,5,2,10],[6,4,7,-7,7,2,-4,1,1,-2],[10,4,-9,-7,4,6,-1,10,-8,-1],[-5,-2,-1,10,1,-6,5,2,-10,6],[-8,-6,5,-7,10,-7,8,7,-2,-1],[10,3,-1,1,6,3,-4,-3,4,-1],[7,-3,-7,6,7,4,9,3,2,9],[-3,-4,-5,5,4,-6,-6,-7,7,-2]],[[-3,2,-4,1,-10,6,5,10,6,9],[-5,-2,-4,-4,2,-5,-4,6,1,6],[8,-5,-3,-4,4,8,10,10,6,-5],[2,3,9,4,7,-3,3,1,-7,-2],[10,-2,-9,-6,-8,3,-3,6,6,-3],[-9,7,6,-5,-2,-6,8,-5,-10,-1],[-2,-8,1,-10,-1,7,1,1,3,-2],[4,9,6,8,5,-4,-4,-5,-6,9],[5,-9,-1,6,8,-8,4,6,-9,5],[4,2,-2,10,-9,-5,-6,-3,-5,-10],[6,7,3,-9,-8,8,-4,1,-7,-5],[-1,-5,7,3,-8,6,8,2,-5,-6],[7,-6,-6,8,9,2,-4,-6,-6,2],[9,-5,-1,2,10,-10,2,10,4,-1],[-1,-10,1,-5,-4,-8,7,2,2,4],[2,1,-4,3,-8,1,-9,-4,7,-5]],[[10,-6,9,-5,-3,-5,4,10,8,6],[-8,-3,7,5,-1,-7,-8,-6,-2,-9],[9,-10,3,-1,-3,-5,3,6,-9,4],[-5,-9,-5,-1,-5,1,-8,8,-1,2],[-7,5,-9,10,5,-8,-6,-5,-3,5],[9,-3,-7,10,-4,-3,9,3,-10,8],[6,8,-2,-2,-1,2,-2,-7,-9,-6],[9,-6,-9,8,1,-7,-1,-10,7,-7],[-8,8,-7,-7,-4,-9,-4,3,1,5],[9,-10,6,-3,-1,-1,3,-7,6,5],[10,-5,9,10,-3,-2,4,3,2,-2],[10,2,-5,-4,-2,5,2,-6,9,-1],[-10,5,6,5,5,3,-5,9,-3,-2],[-1,-8,-8,4,-2,-2,-9,-10,6,-5],[5,8,-4,-9,-9,3,-10,5,-7,7],[-5,4,7,-10,-9,6,4,3,3,4]],[[-7,-2,-8,-6,7,6,4,9,-6,-6],[6,1,8,-10,8,-2,1,-1,-2,-5],[10,-4,-3,-8,10,4,-8,7,-10,6],[9,2,-4,2,-10,7,-10,6,4,2],[8,1,2,-1,-3,8,-4,3,-5,-6],[-1,5,-5,-5,-7,-2,-5,-10,-9,7],[7,-5,8,-1,-4,-8,-1,8,-5,5],[-2,-6,2,-3,-6,-4,-6,6,-8,8],[5,10,-10,1,3,-9,7,-1,-1,9],[-5,-4,1,-6,6,-2,10,6,2,5],[-5,2,2,-10,-10,-2,-9,5,-6,-10],[4,3,6,4,-9,5,5,-8,1,-2],[5,3,2,-4,8,1,8,6,5,1],[-10,10,4,-2,3,3,10,4,5,-8],[-3,-6,7,4,5,8,2,1,-5,10],[-9,-8,10,-10,-9,9,-9,3,-1,2]],[[2,1,9,1,-7,3,-5,-6,2,-9],[4,5,5,1,-4,-1,-4,-2,6,-8],[6,10,2,-6,10,7,5,9,-9,7],[-5,10,3,-4,-7,2,4,7,-8,2],[8,1,-1,-5,-1,2,3,7,3,-4],[4,8,-10,5,7,5,7,1,8,-6],[8,-7,9,-6,-7,-7,-8,10,9,7],[5,3,10,9,8,7,5,-5,-9,-9],[3,9,2,-9,-7,6,8,3,1,-6],[-9,-7,8,-1,4,3,-5,-9,2,-7],[-6,-10,-2,2,6,4,-2,2,-4,-7],[2,-4,-2,3,10,-10,4,-1,-4,-2],[3,-6,9,-5,10,1,-1,8,-7,7],[4,4,-7,4,9,2,6,-9,7,-7],[-7,10,3,-1,-10,8,6,-1,8,-4],[5,-9,7,5,-3,2,3,7,-1,-6]],[[7,-4,5,-5,5,10,-9,-1,8,-10],[-2,-10,-6,1,-7,8,-3,6,10,-1],[-5,4,-3,-10,-3,-3,-5,-10,-1,-8],[-7,2,-9,-8,-2,-3,-3,10,-4,-6],[-3,1,-1,8,-1,-10,-1,10,1,-10],[-8,-1,-1,-6,3,1,-8,-3,3,-3],[-8,-3,-5,2,1,-10,-4,-2,2,-10],[-10,9,5,-1,5,-3,4,3,-8,-7],[6,2,8,3,-1,-3,5,-3,5,-9],[5,-3,-7,-10,3,8,7,-7,3,3],[6,7,9,2,-3,6,2,-8,-8,-5],[-8,-2,2,-9,1,1,9,9,-9,4],[9,-7,-9,-1,3,-2,1,-5,-3,-10],[-6,2,-10,-5,-9,8,-7,10,-1,-5],[-6,-7,-10,10,9,-8,2,2,10,-10],[6,-8,6,-1,8,3,-4,1,-5,5]],[[-2,10,-2,5,-2,10,4,1,7,-6],[7,-1,10,-2,4,10,10,-3,4,2],[-4,4,-2,7,-4,-6,-2,1,-10,6],[10,-1,8,3,-1,-8,9,4,-6,3],[-4,10,-6,8,3,10,-10,4,-7,9],[-3,-5,-10,4,-10,5,-5,-9,-7,-7],[-1,-4,9,10,-6,-6,-8,9,-9,-4],[-9,-2,6,-5,8,-3,-8,1,-6,5],[-2,1,3,-7,-5,3,2,10,7,-10],[7,4,-2,-7,8,2,-5,9,5,10],[9,-5,9,10,1,10,7,7,1,-10],[6,-8,-5,8,-4,-1,2,-5,-1,8],[9,2,-4,-3,-5,-5,-7,3,-9,-3],[9,-6,-7,-3,-10,-2,9,-2,5,9],[10,-10,-8,-8,-3,-9,-4,5,-8,2],[9,6,8,-2,-3,2,6,10,-6,-10]],[[9,1,-6,5,-5,1,-10,2,5,10],[7,-3,5,-7,-4,-10,-8,-8,-9,8],[1,8,8,-9,5,3,5,-7,9,-1],[-2,-8,6,-3,-1,9,-10,-3,-8,-1],[4,-5,10,-9,-7,-4,5,-7,9,6],[-1,-10,-9,-1,-7,-9,8,10,-7,9],[-3,-1,6,-9,-10,-5,-7,3,-7,-4],[9,-7,-9,-7,8,-8,-10,9,-9,-2],[-3,-1,3,-8,-8,-7,6,-4,-1,-1],[6,9,-10,-5,-9,9,8,-4,-4,1],[5,-9,-10,-7,-3,-9,10,8,-8,-3],[1,-1,-2,10,-7,7,7,-6,8,-9],[2,9,-7,3,9,-4,-8,1,-2,-7],[2,-3,-10,7,2,7,3,7,-3,7],[8,6,10,7,8,9,10,8,-10,-9],[10,-6,4,-5,6,2,-7,10,-6,7]],[[3,-4,7,4,-9,-10,1,-4,-9,-3],[-10,9,-1,-5,7,1,-6,-6,8,-2],[5,6,6,-10,-8,2,-5,-7,1,5],[2,10,2,-2,-6,-5,-6,6,2,9],[-6,-8,-3,1,-7,-1,-4,-8,9,-5],[6,-7,-5,-6,-6,5,-7,6,9,3],[-4,6,7,4,-4,10,-1,2,-9,-10],[-3,-8,-9,-10,2,6,-8,-5,6,1],[-8,-10,10,-2,-10,4,9,-2,6,9],[-5,-5,-9,8,-10,5,-1,-7,-7,-10],[5,-10,5,5,4,-1,-10,2,1,-7],[10,-10,-7,4,8,-2,-9,7,2,7],[-7,7,-9,9,10,10,5,2,7,-7],[9,9,-10,2,-10,2,-9,5,7,-7],[-9,6,5,8,-2,-8,-6,1,-5,2],[3,-3,10,-2,1,3,-4,-5,-6,2]],[[10,9,9,4,4,-9,7,-9,9,7],[1,-9,-8,4,7,-2,-8,-5,-2,2],[4,-10,3,-9,3,10,5,-8,6,-8],[10,2,-10,6,5,-7,9,-1,1,3],[-7,5,-4,6,5,-1,-4,4,1,8],[-7,-4,-6,-7,6,-10,-2,-6,10,-4],[-5,-1,-9,5,-4,-5,-9,5,7,-2],[-1,5,-7,-10,2,3,1,8,-6,10],[-5,-9,6,-10,6,-6,-4,2,4,10],[4,-7,5,4,6,1,1,-6,6,9],[-9,2,-10,7,-4,1,-2,2,-4,1],[2,-3,-6,9,-6,5,-7,-1,1,10],[6,-3,10,8,-4,5,-4,7,7,3],[8,1,5,10,-9,-1,-2,5,-10,5],[5,7,6,1,-4,9,2,-5,1,5],[6,6,10,7,6,3,-1,3,6,3]]], dtype = "uint64")#candidate|1753|(15, 16, 10)|const|uint64
var_1754 = relay.var("var_1754", dtype = "uint64", shape = (15, 16, 10))#candidate|1754|(15, 16, 10)|var|uint64
bop_1755 = relay.subtract(const_1753.astype('uint64'), relay.reshape(var_1754.astype('uint64'), relay.shape_of(const_1753))) # shape=(15, 16, 10)
func_1014_call = mod.get_global_var('func_1014')
func_1018_call = mutated_mod.get_global_var('func_1018')
const_1767 = relay.const([4,5,-10,-1,-3,-6,-3,-7,-1,-1,-2,3,-9,-10,-7,-1,2,-10,10,-7,-10,3,2,-4,3,-5,-8,2,7,4,-4,-6,-2,9,10], dtype = "uint32")#candidate|1767|(35,)|const|uint32
call_1766 = func_1014_call(relay.reshape(const_1767.astype('uint32'), [7, 5]), relay.reshape(const_1767.astype('uint32'), [7, 5]), )
call_1768 = func_1014_call(relay.reshape(const_1767.astype('uint32'), [7, 5]), relay.reshape(const_1767.astype('uint32'), [7, 5]), )
output = relay.Tuple([bop_1755,call_1766,const_1767,])
output2 = relay.Tuple([bop_1755,call_1768,const_1767,])
func_1777 = relay.Function([var_1754,], output)
mod['func_1777'] = func_1777
mod = relay.transform.InferType()(mod)
var_1778 = relay.var("var_1778", dtype = "uint64", shape = (15, 16, 10))#candidate|1778|(15, 16, 10)|var|uint64
output = func_1777(var_1778)
func_1779 = relay.Function([var_1778], output)
mutated_mod['func_1779'] = func_1779
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1802 = relay.var("var_1802", dtype = "float64", shape = (5, 15, 7))#candidate|1802|(5, 15, 7)|var|float64
uop_1803 = relay.erf(var_1802.astype('float64')) # shape=(5, 15, 7)
func_1355_call = mod.get_global_var('func_1355')
func_1358_call = mutated_mod.get_global_var('func_1358')
var_1806 = relay.var("var_1806", dtype = "float32", shape = (14, 1))#candidate|1806|(14, 1)|var|float32
call_1805 = relay.TupleGetItem(func_1355_call(relay.reshape(var_1806.astype('float32'), [2, 7])), 0)
call_1807 = relay.TupleGetItem(func_1358_call(relay.reshape(var_1806.astype('float32'), [2, 7])), 0)
output = relay.Tuple([uop_1803,call_1805,var_1806,])
output2 = relay.Tuple([uop_1803,call_1807,var_1806,])
func_1811 = relay.Function([var_1802,var_1806,], output)
mod['func_1811'] = func_1811
mod = relay.transform.InferType()(mod)
var_1812 = relay.var("var_1812", dtype = "float64", shape = (5, 15, 7))#candidate|1812|(5, 15, 7)|var|float64
var_1813 = relay.var("var_1813", dtype = "float32", shape = (14, 1))#candidate|1813|(14, 1)|var|float32
output = func_1811(var_1812,var_1813,)
func_1814 = relay.Function([var_1812,var_1813,], output)
mutated_mod['func_1814'] = func_1814
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1862 = relay.var("var_1862", dtype = "float32", shape = (3, 16))#candidate|1862|(3, 16)|var|float32
uop_1863 = relay.exp(var_1862.astype('float32')) # shape=(3, 16)
output = uop_1863
output2 = uop_1863
func_1867 = relay.Function([var_1862,], output)
mod['func_1867'] = func_1867
mod = relay.transform.InferType()(mod)
mutated_mod['func_1867'] = func_1867
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1868 = relay.var("var_1868", dtype = "float32", shape = (3, 16))#candidate|1868|(3, 16)|var|float32
func_1867_call = mutated_mod.get_global_var('func_1867')
call_1869 = func_1867_call(var_1868)
output = call_1869
func_1870 = relay.Function([var_1868], output)
mutated_mod['func_1870'] = func_1870
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1929 = relay.var("var_1929", dtype = "float64", shape = (11, 1, 4))#candidate|1929|(11, 1, 4)|var|float64
uop_1930 = relay.exp(var_1929.astype('float64')) # shape=(11, 1, 4)
func_1302_call = mod.get_global_var('func_1302')
func_1304_call = mutated_mod.get_global_var('func_1304')
var_1935 = relay.var("var_1935", dtype = "int64", shape = (40, 14))#candidate|1935|(40, 14)|var|int64
call_1934 = func_1302_call(relay.reshape(var_1935.astype('int64'), [8, 14, 5]))
call_1936 = func_1302_call(relay.reshape(var_1935.astype('int64'), [8, 14, 5]))
func_1416_call = mod.get_global_var('func_1416')
func_1418_call = mutated_mod.get_global_var('func_1418')
const_1942 = relay.const([5.319132,-9.101283,6.086512,-8.511503,8.991399,-5.006034,3.405630,1.993975,-2.268338,-8.951222,-5.244845,5.532878,1.733775,-1.635497,1.887790,8.424100,-0.917825,-9.945016,9.232520,4.822203,-7.391656,-7.327655,2.002928,2.035240,-5.129419,1.992975,-0.750457,9.453622,-3.530479,-1.706516,8.787115,-4.701155,3.536015,1.836266,-4.867922,-7.718978,-3.536511,-1.610935,-0.567317,-7.390297,-2.963776,3.751292,-3.406088,-0.786171,1.252927,4.737810,-8.334867,-0.707086,-2.738469,-0.232214,9.735729,4.152347,-7.577234,6.837185,0.437798,2.460726,2.043028,6.480988,0.934038,-5.695529,-8.307761,-2.828622,-8.892173,3.269018,-0.047352,4.698221,-7.750223,-0.034263,-3.124501,1.650537,5.985375,3.378804,6.307470,-0.415538,-3.288296,7.459875,-8.020148,1.989637,5.565950,-5.964384,6.102308,2.751248,-6.901960,-6.452537,1.725450,5.912162,-4.653150,-8.589254,4.795576,-9.641768,5.838472,-9.707459,9.631252,-9.394214,-0.663032,0.251385,-6.589881,0.424165,-6.655759,-8.051167,8.776771,-4.766732,-8.790878,-9.067150,7.331688,-4.699006,-3.280328,2.058455,-6.507165,-2.098923,-2.804122,-3.240730,-3.142142,4.769088,9.166716,5.105609,9.694584,-5.493113,-5.542349,9.013484], dtype = "float64")#candidate|1942|(120,)|const|float64
call_1941 = relay.TupleGetItem(func_1416_call(relay.reshape(const_1942.astype('float64'), [10, 12])), 0)
call_1943 = relay.TupleGetItem(func_1418_call(relay.reshape(const_1942.astype('float64'), [10, 12])), 0)
bop_1951 = relay.bitwise_xor(uop_1930.astype('uint64'), relay.reshape(var_1929.astype('uint64'), relay.shape_of(uop_1930))) # shape=(11, 1, 4)
uop_1956 = relay.tan(bop_1951.astype('float32')) # shape=(11, 1, 4)
bop_1967 = relay.power(uop_1956.astype('float64'), relay.reshape(bop_1951.astype('float64'), relay.shape_of(uop_1956))) # shape=(11, 1, 4)
output = relay.Tuple([call_1934,var_1935,call_1941,const_1942,bop_1967,])
output2 = relay.Tuple([call_1936,var_1935,call_1943,const_1942,bop_1967,])
func_1971 = relay.Function([var_1929,var_1935,], output)
mod['func_1971'] = func_1971
mod = relay.transform.InferType()(mod)
var_1972 = relay.var("var_1972", dtype = "float64", shape = (11, 1, 4))#candidate|1972|(11, 1, 4)|var|float64
var_1973 = relay.var("var_1973", dtype = "int64", shape = (40, 14))#candidate|1973|(40, 14)|var|int64
output = func_1971(var_1972,var_1973,)
func_1974 = relay.Function([var_1972,var_1973,], output)
mutated_mod['func_1974'] = func_1974
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2030 = relay.var("var_2030", dtype = "bool", shape = (10, 3))#candidate|2030|(10, 3)|var|bool
var_2031 = relay.var("var_2031", dtype = "bool", shape = (10, 3))#candidate|2031|(10, 3)|var|bool
bop_2032 = relay.logical_or(var_2030.astype('bool'), relay.reshape(var_2031.astype('bool'), relay.shape_of(var_2030))) # shape=(10, 3)
output = relay.Tuple([bop_2032,])
output2 = relay.Tuple([bop_2032,])
func_2055 = relay.Function([var_2030,var_2031,], output)
mod['func_2055'] = func_2055
mod = relay.transform.InferType()(mod)
var_2056 = relay.var("var_2056", dtype = "bool", shape = (10, 3))#candidate|2056|(10, 3)|var|bool
var_2057 = relay.var("var_2057", dtype = "bool", shape = (10, 3))#candidate|2057|(10, 3)|var|bool
output = func_2055(var_2056,var_2057,)
func_2058 = relay.Function([var_2056,var_2057,], output)
mutated_mod['func_2058'] = func_2058
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2060 = relay.var("var_2060", dtype = "bool", shape = (2, 13, 9))#candidate|2060|(2, 13, 9)|var|bool
var_2061 = relay.var("var_2061", dtype = "bool", shape = (2, 13, 9))#candidate|2061|(2, 13, 9)|var|bool
bop_2062 = relay.logical_and(var_2060.astype('bool'), relay.reshape(var_2061.astype('bool'), relay.shape_of(var_2060))) # shape=(2, 13, 9)
func_1302_call = mod.get_global_var('func_1302')
func_1304_call = mutated_mod.get_global_var('func_1304')
const_2066 = relay.const([5,5,1,1,10,2,9,3,-6,1,-3,-7,-10,1,6,-5,5,-6,-10,4,5,3,-2,6,-1,-5,7,-9,6,9,7,4,-6,10,-7,5,10,8,8,7,10,-4,-5,6,-4,-3,10,4,-8,-3,3,-9,-8,5,10,5,-6,-6,3,-2,10,-7,5,-8,10,-9,9,-5,2,5,4,1,9,2,-1,9,10,-2,9,-7,1,-1,-4,9,8,10,-4,-3,8,6,-8,3,-1,2,-6,1,8,10,-10,-10,5,-8,8,-3,-7,-10,-4,-2,9,-8,-6,4,1,-6,5,7,3,-10,-9,9,-1,-10,3,1,7,-7,-8,-6,5,10,-7,3,-4,-3,5,8,3,3,9,8,-5,8,-5,4,8,1,1,-5,6,-10,2,-1,4,-2,1,-9,-4,2,1,9,-10,-5,6,-7,-10,7,5,-8,1,-3,10,9,-1,3,-6,3,3,-6,8,3,-2,-1,-8,7,-10,2,-4,-4,-1,-7,7,3,-6,3,4,-5,8,-3,-4,6,1,-4,8,-10,-2,7,4,3,9,-7,2,9,-7,-4,5,7,-9,-2,8,7,-8,-3,-4,-6,2,8,-5,-2,1,5,10,-1,4,6,-5,6,-9,8,5,6,5,-1,-3,5,1,-10,-2,9,-6,8,8,-7,-2,10,-6,5,2,-6,-1,1,-8,2,-3,6,8,1,9,-4,-2,8,-3,-3,-9,10,-7,1,-1,7,-5,-3,8,-10,-3,-8,7,5,9,4,9,9,6,-3,-4,-1,7,4,10,-4,6,-8,-8,-4,-2,-6,-4,-9,4,9,4,10,6,9,-8,6,5,-1,-6,-1,-3,1,3,-10,-2,8,1,-9,2,10,1,7,2,10,-1,8,9,3,-1,-10,4,-1,5,-1,-8,-8,8,4,1,10,6,-10,-9,-6,8,3,5,6,-4,7,-9,-10,10,7,-9,-5,-6,9,-10,8,-2,-1,-5,-6,-5,10,8,10,-3,9,-5,6,-3,-1,-9,-2,-1,9,-1,4,8,9,1,3,-6,5,-1,5,5,9,-4,-6,-6,-9,-10,5,9,5,1,4,-4,-9,2,-9,9,-1,-10,5,10,5,9,9,1,-7,-1,10,-4,10,-4,-10,-8,-3,6,6,-4,-7,8,10,-9,2,2,3,2,1,-4,-8,-2,3,-8,7,8,4,1,5,-5,-7,-10,2,-6,9,-5,-4,-7,6,-4,7,6,-7,-9,6,1,2,6,7,-8,3,3,-10,-4,6,-9,9,-8,4,-3,3,4,9,-1,3,3,3,-5,8,1,-9,-9,-8,7,6,2,3,-7,7,9,9,10,-7,7,6,9,8,4,-9,-8,10,-6,-8,-7,1,7,-7,-2,-3,10,-6,-3,-1,8,5,-4,-8,9,-3,2,-10,6,7,-4,8,8,-4,-6,-7,4,-2,8,-9,7,3,10,8,3,-5,-4,10,6,-2,-9,-9,-2,1], dtype = "int64")#candidate|2066|(560,)|const|int64
call_2065 = func_1302_call(relay.reshape(const_2066.astype('int64'), [8, 14, 5]))
call_2067 = func_1302_call(relay.reshape(const_2066.astype('int64'), [8, 14, 5]))
output = relay.Tuple([bop_2062,call_2065,const_2066,])
output2 = relay.Tuple([bop_2062,call_2067,const_2066,])
func_2068 = relay.Function([var_2060,var_2061,], output)
mod['func_2068'] = func_2068
mod = relay.transform.InferType()(mod)
mutated_mod['func_2068'] = func_2068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2068_call = mutated_mod.get_global_var('func_2068')
var_2070 = relay.var("var_2070", dtype = "bool", shape = (2, 13, 9))#candidate|2070|(2, 13, 9)|var|bool
var_2071 = relay.var("var_2071", dtype = "bool", shape = (2, 13, 9))#candidate|2071|(2, 13, 9)|var|bool
call_2069 = func_2068_call(var_2070,var_2071,)
output = call_2069
func_2072 = relay.Function([var_2070,var_2071,], output)
mutated_mod['func_2072'] = func_2072
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2081 = relay.var("var_2081", dtype = "int32", shape = (5, 1, 2))#candidate|2081|(5, 1, 2)|var|int32
var_2082 = relay.var("var_2082", dtype = "int32", shape = (5, 3, 2))#candidate|2082|(5, 3, 2)|var|int32
bop_2083 = relay.add(var_2081.astype('int32'), var_2082.astype('int32')) # shape=(5, 3, 2)
func_1207_call = mod.get_global_var('func_1207')
func_1211_call = mutated_mod.get_global_var('func_1211')
var_2087 = relay.var("var_2087", dtype = "float64", shape = (52,))#candidate|2087|(52,)|var|float64
const_2088 = relay.const([5.901576,5.029350,-6.376311,3.674241,5.624609,1.992242,-1.072683,-3.487592,7.119947,7.083626,-4.642756,-1.438761,1.364347,-9.666389,-4.986644,-6.859354,8.507486,-3.742088,-3.373945,-9.402487,1.385211,-9.462298,4.274045,-6.902966,9.089047,4.338602,-4.580824,1.536878,8.403643,-6.840847,-9.552322,2.322749,-4.797015,-1.849346,9.158287,-3.177197,-0.249055,-3.965379,5.271569,9.128859,-5.043756,-4.765785,-6.285257,-5.503878,8.583070,5.225024,6.837610,-2.781277,4.092306,-0.621307,3.994621,9.552043,1.076644,-0.709877,-0.974847,3.563071,-6.905398,0.709770,5.791900,-0.036251,-2.904647,2.719736,-5.213287,6.080051,-6.082751,-9.915485,-4.370865,4.282211,2.399781,-1.771187,6.145602,-0.404021,1.328715,-0.633798,0.793466,-9.692410,5.058464,8.384749,2.944851,4.308863,-8.313932,7.372131,9.459141,-3.663252,-3.854519,-3.075983,-8.362467,6.305586,-1.444750,1.757250,-0.910349,2.989927,5.885033,8.356971,1.575308,-3.687930,-0.955684,-7.444600,-6.726931,-6.411068,4.349256,7.860176,8.997261,3.368747,-2.597670,3.741721,-2.656734,-4.924714,2.444280,-3.213301,-3.173919,-4.252416,9.098989,-7.184070,9.352798,-1.156299,0.481466,3.127631,9.067181,-2.929212,3.324875,-9.543036,-0.691301,1.655747,7.208413,-2.629163,-2.665656,-9.306064,8.730187,8.355337,-7.300681,0.681987,0.297671,-0.072579,-5.328435,8.298221,5.086281,6.981302,-5.280379,3.662832,3.524526,-4.957731,7.684669,6.791224,0.536980,8.511995,-4.643989,-6.169769,5.772350,-5.718969,7.043418,8.482254,-1.408600,2.190186,5.715038,-3.405434,-8.876176,-8.832108,1.375280,0.213896,2.521757,-5.148046,4.682744,8.445346,-8.854493,-1.945042,0.183759,-0.066532,9.188651,2.829126,-2.124844,3.912321,-1.948836,-7.079383,2.429618,-6.996836,5.265806,-8.833288,6.815774,3.206234], dtype = "float64")#candidate|2088|(180,)|const|float64
var_2089 = relay.var("var_2089", dtype = "uint8", shape = (90,))#candidate|2089|(90,)|var|uint8
call_2086 = relay.TupleGetItem(func_1207_call(relay.reshape(var_2087.astype('float64'), [13, 4]), relay.reshape(const_2088.astype('float64'), [180,]), relay.reshape(var_2089.astype('uint8'), [90,]), ), 4)
call_2090 = relay.TupleGetItem(func_1211_call(relay.reshape(var_2087.astype('float64'), [13, 4]), relay.reshape(const_2088.astype('float64'), [180,]), relay.reshape(var_2089.astype('uint8'), [90,]), ), 4)
var_2095 = relay.var("var_2095", dtype = "uint32", shape = (35,))#candidate|2095|(35,)|var|uint32
bop_2096 = relay.less(call_2086.astype('bool'), relay.reshape(var_2095.astype('bool'), relay.shape_of(call_2086))) # shape=(35,)
bop_2099 = relay.less(call_2090.astype('bool'), relay.reshape(var_2095.astype('bool'), relay.shape_of(call_2090))) # shape=(35,)
func_2068_call = mod.get_global_var('func_2068')
func_2072_call = mutated_mod.get_global_var('func_2072')
var_2103 = relay.var("var_2103", dtype = "bool", shape = (234, 1))#candidate|2103|(234, 1)|var|bool
call_2102 = relay.TupleGetItem(func_2068_call(relay.reshape(var_2103.astype('bool'), [2, 13, 9]), relay.reshape(var_2103.astype('bool'), [2, 13, 9]), ), 1)
call_2104 = relay.TupleGetItem(func_2072_call(relay.reshape(var_2103.astype('bool'), [2, 13, 9]), relay.reshape(var_2103.astype('bool'), [2, 13, 9]), ), 1)
uop_2110 = relay.sqrt(bop_2096.astype('float64')) # shape=(35,)
uop_2112 = relay.sqrt(bop_2099.astype('float64')) # shape=(35,)
output = relay.Tuple([bop_2083,var_2087,const_2088,var_2089,call_2102,var_2103,uop_2110,])
output2 = relay.Tuple([bop_2083,var_2087,const_2088,var_2089,call_2104,var_2103,uop_2112,])
func_2128 = relay.Function([var_2081,var_2082,var_2087,var_2089,var_2095,var_2103,], output)
mod['func_2128'] = func_2128
mod = relay.transform.InferType()(mod)
mutated_mod['func_2128'] = func_2128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2128_call = mutated_mod.get_global_var('func_2128')
var_2130 = relay.var("var_2130", dtype = "int32", shape = (5, 1, 2))#candidate|2130|(5, 1, 2)|var|int32
var_2131 = relay.var("var_2131", dtype = "int32", shape = (5, 3, 2))#candidate|2131|(5, 3, 2)|var|int32
var_2132 = relay.var("var_2132", dtype = "float64", shape = (52,))#candidate|2132|(52,)|var|float64
var_2133 = relay.var("var_2133", dtype = "uint8", shape = (90,))#candidate|2133|(90,)|var|uint8
var_2134 = relay.var("var_2134", dtype = "uint32", shape = (35,))#candidate|2134|(35,)|var|uint32
var_2135 = relay.var("var_2135", dtype = "bool", shape = (234, 1))#candidate|2135|(234, 1)|var|bool
call_2129 = func_2128_call(var_2130,var_2131,var_2132,var_2133,var_2134,var_2135,)
output = call_2129
func_2136 = relay.Function([var_2130,var_2131,var_2132,var_2133,var_2134,var_2135,], output)
mutated_mod['func_2136'] = func_2136
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2425 = relay.var("var_2425", dtype = "float64", shape = (14, 7, 13))#candidate|2425|(14, 7, 13)|var|float64
uop_2426 = relay.cos(var_2425.astype('float64')) # shape=(14, 7, 13)
func_1416_call = mod.get_global_var('func_1416')
func_1418_call = mutated_mod.get_global_var('func_1418')
var_2439 = relay.var("var_2439", dtype = "float64", shape = (120,))#candidate|2439|(120,)|var|float64
call_2438 = relay.TupleGetItem(func_1416_call(relay.reshape(var_2439.astype('float64'), [10, 12])), 0)
call_2440 = relay.TupleGetItem(func_1418_call(relay.reshape(var_2439.astype('float64'), [10, 12])), 0)
func_908_call = mod.get_global_var('func_908')
func_911_call = mutated_mod.get_global_var('func_911')
const_2446 = relay.const([-8,2,9,-2,3,-2,4,4,6,-1,-6,2,6,-1,7,-10,10,-2,3,9,8,10,-9,-10,-4,-4,4,2,-7,4,-5,-10,6,6,-6,5,6,9,-2,4,2,8,-3,-7,3,6,-6,5,-2,1,-5,3,-2,9,-3,-1,1,10,10,-4,-9,-1,1,-6,8,-1,4,6,-6,1,8,-4,-9,-10,-2,-2,-9,7,-10,10,-10,2,-7,-1,3,-4,-2,-9,1,-2], dtype = "uint8")#candidate|2446|(90,)|const|uint8
var_2447 = relay.var("var_2447", dtype = "uint8", shape = (810,))#candidate|2447|(810,)|var|uint8
call_2445 = func_908_call(relay.reshape(const_2446.astype('uint8'), [9, 1, 10]), relay.reshape(var_2447.astype('uint8'), [9, 9, 10]), )
call_2448 = func_908_call(relay.reshape(const_2446.astype('uint8'), [9, 1, 10]), relay.reshape(var_2447.astype('uint8'), [9, 9, 10]), )
uop_2452 = relay.sinh(uop_2426.astype('float32')) # shape=(14, 7, 13)
uop_2454 = relay.sqrt(uop_2426.astype('float64')) # shape=(14, 7, 13)
bop_2458 = relay.mod(uop_2426.astype('float64'), relay.reshape(uop_2454.astype('float64'), relay.shape_of(uop_2426))) # shape=(14, 7, 13)
const_2466 = relay.const([[[-7.648688,2.033116,-6.769003,8.972540,-4.012431,4.833004,-9.160775,8.829922,2.645809,7.103115,-8.756354,5.668644,4.234477],[-3.089266,5.983698,-0.479373,-0.901187,-8.487250,-3.432001,5.750666,-3.960508,-1.556065,8.897104,2.266732,-1.733260,-9.437044],[2.417492,6.894727,0.494858,1.423464,6.604655,-0.714716,-7.317009,4.628336,-4.767688,7.595073,6.092903,2.543446,1.447647],[-8.291369,1.733144,-9.508096,-2.975994,3.120786,-9.552642,7.852766,-9.360072,8.772874,-8.719763,7.233407,3.825039,-5.804567],[-0.574023,-8.909248,-8.817887,-2.142697,4.619577,-1.826095,-4.155732,7.580259,2.235763,1.861078,-4.221401,-1.636111,1.738844],[2.938772,-1.647831,0.572468,4.394608,-0.891788,-7.536452,7.755650,-6.634996,-5.035738,8.473619,8.955692,-3.295500,-7.256379],[6.938898,9.828842,-7.276101,0.917058,-4.061980,4.506044,-7.468163,-3.938083,-5.601182,-3.701765,1.047176,-2.295387,-0.177845]],[[0.875545,-2.377798,3.104630,-2.435195,-5.885744,4.085565,5.247123,-4.154227,9.671176,3.266882,-0.596736,4.034972,-0.014747],[3.615946,7.970313,-1.474771,-6.287749,-6.930878,-6.115441,-2.430116,5.283808,-9.831460,-9.323282,-5.071233,-1.667883,3.637239],[7.977459,2.069807,7.216078,-0.628664,6.233786,-8.082098,3.225073,7.694817,3.388520,-7.292592,-0.078191,-9.991708,-7.550053],[-5.700132,-0.477858,4.244165,9.140174,5.845025,4.171864,1.092282,-9.017976,-0.127106,1.714856,7.662484,3.292423,0.933256],[-1.368445,-2.371887,-1.679850,5.054184,-0.843779,7.167544,-4.430463,0.640185,-2.702494,-0.314478,-0.965268,4.014284,-4.597504],[-9.760916,-1.614057,4.371315,9.408021,3.870581,1.323245,-6.346808,3.163421,9.741644,-1.003807,5.182733,8.318937,4.155363],[-9.179880,1.318763,5.620952,9.099778,-3.167943,7.121328,-1.503983,7.264121,3.500007,-9.866982,3.120208,-4.767748,-8.700908]],[[3.581822,7.057562,8.973885,4.078181,3.105660,-8.662962,-4.456604,2.646796,7.298167,6.948702,1.225277,-7.554555,5.462660],[3.003302,-9.014923,-1.350674,-9.987301,-9.747578,3.942246,-6.118382,1.282004,7.440334,8.344067,7.193762,3.502755,-9.408798],[5.897704,-4.469061,-4.777045,5.139335,1.674029,-7.122702,9.823811,2.977556,-1.197787,7.802089,-0.075674,-6.626234,-4.136501],[-3.587044,-8.284499,-0.204885,-9.076070,-3.460348,5.140448,9.163069,8.906920,-5.131768,-8.133844,-0.486615,7.615569,-8.902195],[-5.340312,-5.340497,-0.990984,-5.873120,6.217695,4.771117,3.893587,-8.908794,5.036125,2.251478,-1.298161,0.868267,5.041872],[3.862278,-4.469889,8.538605,-0.750864,3.763737,-6.683422,7.247315,-4.993944,1.706823,1.195474,-1.294694,2.312634,7.576127],[6.244095,5.110593,-0.530231,-2.632029,-1.546432,-8.464940,2.958418,-5.106654,2.879008,6.790044,-9.592305,-8.326325,-2.117745]],[[-2.056743,-3.394074,8.810192,-8.124578,9.775625,-7.462082,4.342072,2.614782,4.130633,6.609783,-3.468747,-9.642801,8.392762],[1.874531,-5.098011,-5.215349,8.102664,-8.989564,7.229001,7.377013,-1.511641,-2.679191,4.438187,1.868546,-6.402230,-6.787665],[4.421532,-8.784980,0.507239,-8.692113,4.066441,-1.555497,-4.308806,-8.737532,3.243873,-7.157089,5.655455,-6.034885,-1.480880],[2.520458,-2.915603,3.344451,-9.451288,-1.913316,8.359232,5.785158,-5.396365,-3.247710,8.150834,-4.075486,-4.411833,-3.130808],[7.144280,-1.378384,-3.029198,-6.376559,3.111532,-2.676369,3.616246,6.454736,-8.276652,1.958682,-8.689146,7.883516,-2.920722],[0.278828,-7.800261,-0.855291,-7.439742,1.514743,6.439803,5.794625,9.816096,-4.748115,9.503893,-4.553731,1.319902,-5.442202],[6.020557,2.938559,6.405536,-3.691322,-8.866141,0.836382,-8.321810,8.122059,-6.282245,-9.126233,-8.470493,-8.859183,7.722925]],[[7.780869,-5.726359,-2.396028,7.192738,-5.416623,-4.049216,-9.906118,3.700806,1.510187,-3.947771,8.191369,-9.524038,8.535349],[6.852256,-2.490260,-9.265038,7.121911,7.110527,-5.882298,1.503254,5.030607,0.902827,-6.455277,2.883228,-4.473010,-1.482482],[-1.065637,-1.076461,5.575189,4.265519,-6.238673,-7.457588,-5.189299,1.322801,-6.813339,1.586775,2.038330,-0.627568,-0.625650],[9.543472,8.095540,-4.259632,-0.360830,2.787245,-1.928104,1.009880,-1.330521,-4.520094,9.604530,0.398342,-5.440377,2.878938],[-5.057030,4.188529,2.400653,2.275903,-2.712130,-1.018479,-9.167094,9.028264,-9.171899,4.033219,-4.943793,-3.825885,-8.573511],[0.512002,-4.372891,-1.110670,-6.207189,8.484039,-6.317425,3.818174,9.210973,-2.271284,9.446937,-1.432601,-6.101255,0.305872],[-3.224472,4.158026,5.856499,7.025559,8.921930,-3.085121,-8.227181,-5.284724,2.918379,6.478752,4.206025,-3.172272,9.496489]],[[6.352825,9.772241,-9.128456,-3.896221,-1.773936,7.815016,9.604557,5.330323,-5.601719,-4.815888,-4.025341,-7.230420,-4.606408],[8.932559,0.296391,4.408176,3.011608,6.395599,-0.416361,8.556959,1.720493,8.668504,4.298755,3.388889,-3.254925,-0.932814],[0.910848,-2.153517,9.708003,-7.381134,9.180232,7.640188,-9.855138,-8.384081,-5.654736,3.747930,-8.106058,-1.798885,9.378804],[-2.463184,0.655779,5.072207,3.685090,-9.552591,9.120455,2.653228,4.195267,4.428374,3.264292,-1.559120,6.541639,-9.001510],[-6.482505,-0.575633,-3.600525,5.479103,7.057592,-8.202197,4.090206,8.538198,5.589036,2.650538,9.620303,6.429736,-5.996189],[-6.702933,4.157923,-6.722206,-0.713516,-7.176346,8.418769,-0.497497,-2.415728,8.818144,-7.009276,-6.384743,-9.032585,-0.260090],[0.770972,-4.997808,2.868569,8.553021,0.523792,6.013732,-0.767330,-3.930785,2.921469,2.711233,8.364083,0.467930,2.365826]],[[-9.431163,6.045533,-6.216843,-4.315608,7.630837,4.341836,-7.721715,-1.344766,-9.337128,7.718217,-2.935125,-0.363419,-4.169506],[-5.798139,2.432008,-4.937460,9.454094,-6.010854,-8.272973,4.796184,-1.309669,-0.523002,3.504437,-3.934704,-2.599094,6.438912],[6.841810,-5.030417,7.006838,2.148135,-8.964675,-9.554506,-7.655857,3.613495,9.666351,-0.259373,-4.504846,1.933707,0.355204],[7.122626,8.835470,-0.865337,-8.246066,3.317266,2.803792,-9.510797,-1.836580,-5.027484,0.462349,1.219645,-9.308130,2.817269],[-1.982334,-7.180827,-1.709819,1.857075,-1.255583,-0.482028,-6.790318,8.381401,4.012133,-4.746701,-9.617418,-5.180225,-8.160866],[9.802229,4.000288,0.089003,0.392796,8.479940,-4.841510,0.986735,-3.835792,6.207503,3.791280,-7.245456,1.460199,-9.076649],[9.855203,6.144592,-5.879672,-3.433019,3.063528,-4.024989,-4.848447,4.206162,-3.104088,8.073262,-3.094824,-9.179493,8.275036]],[[-6.262276,6.553745,7.360554,7.514474,-6.156866,5.310978,6.414880,8.950696,5.626710,2.317379,-3.655965,1.190431,-1.017310],[-0.067596,-3.999361,-7.269439,-2.951540,5.236650,-0.936219,3.092823,7.045637,-2.874875,6.845742,-8.063282,2.214692,4.437934],[9.386017,7.452352,5.339875,-2.845634,-3.810761,-2.635217,-0.756701,-7.352485,0.492896,-1.407125,-8.703956,9.140470,-0.140401],[-4.864319,-5.800692,1.884018,-8.188734,8.566719,-7.162124,0.153441,-0.512822,-4.687679,-2.582968,-8.415987,-9.299449,-4.571678],[7.685123,-1.267577,7.732690,6.568568,2.127404,1.153375,7.426382,3.117955,7.890898,-6.021400,-3.618369,-1.991903,7.421102],[-4.873393,1.121145,-0.852156,4.573949,-2.740355,2.646363,-9.699837,-6.466170,5.274270,-9.481379,-3.531488,7.678265,-4.579032],[1.935519,-3.786476,6.848885,-7.585421,3.959217,4.918525,0.883494,3.218635,9.304286,0.663560,-8.923044,9.332132,6.408967]],[[-1.884869,1.907452,7.682891,9.362420,8.028582,-3.223819,-8.421166,2.213438,-7.332608,5.226110,0.326135,6.318566,9.268884],[9.549658,4.694799,-6.770319,-1.784103,-3.890494,-0.822455,4.207534,-6.829308,5.919290,-4.620106,-1.160869,0.730160,-6.903766],[-9.509175,-5.023255,8.369506,-7.952154,-0.329668,-3.255313,-5.688853,-5.767324,7.700246,6.563694,-4.498497,-7.790519,2.090552],[1.899121,-3.640870,7.210213,-8.063290,-9.502890,-0.970277,-7.814547,6.313483,6.176470,8.666446,-5.043298,2.380891,-3.981896],[-0.808657,-7.997472,1.680291,8.420740,-5.886386,-5.899273,-3.095315,-6.925634,9.095074,2.116056,-4.802591,6.383115,2.476263],[-4.918600,1.892565,-1.550497,9.080665,1.362982,-0.357006,-6.526336,5.877521,4.543430,-3.515129,-6.123606,-7.481849,-6.311895],[-8.017905,-9.761921,-6.917448,0.656329,3.953919,5.981212,-7.431060,8.294846,9.524362,5.757483,-5.384791,-2.214463,2.762580]],[[0.060280,4.874750,-2.482638,3.985138,5.085690,4.890222,8.165512,-5.258468,1.809210,0.128573,6.603823,-4.198487,5.825139],[-2.244157,6.832290,8.593909,2.264454,1.562557,-2.656085,6.422049,-5.829324,-0.797491,1.822022,-4.430356,-1.864575,-7.204952],[1.448915,-4.786441,6.269117,-2.798090,-2.349446,1.881547,-0.061775,0.124201,0.865313,-6.826286,7.687155,9.617318,9.868322],[4.520642,8.131795,-5.858449,0.668072,-3.639898,2.799183,1.314863,-9.521309,8.739132,6.134510,0.908229,9.258862,-0.262199],[5.422881,-6.859736,-8.597650,-0.519399,0.894306,-7.972267,8.931155,1.288462,3.455158,3.376820,-1.877183,7.590753,5.607473],[-2.593221,-3.215807,-0.373593,0.714450,9.867294,-7.168234,9.931484,-4.681255,-3.518205,-7.616779,-4.941306,9.378188,5.523924],[-9.218321,1.907904,-8.923855,5.166790,8.535909,-1.587909,-2.924056,-6.204679,8.819556,-8.417923,3.095227,7.901961,-3.991924]],[[8.468915,4.880313,6.167545,3.499296,-1.161859,6.647112,6.530054,4.658546,6.610582,6.996812,-5.771099,9.221860,-5.125395],[-7.928677,1.749030,7.107617,-2.774794,4.056038,-1.849663,-3.534968,-8.500112,-3.299025,-2.355114,2.664965,3.885453,0.688173],[6.637655,-5.999765,4.461261,-4.295896,-1.024107,-7.530856,-0.108198,-3.847653,-1.506583,4.051398,-7.948026,-6.518202,3.859847],[-5.762015,-4.562730,4.823538,9.397981,1.927440,-7.999624,6.443859,4.931801,2.902084,9.458392,2.015084,-3.025128,3.035526],[-5.049611,-4.892452,0.594493,2.744104,-6.331139,-4.856625,-5.136004,3.393347,7.493810,3.121194,-1.471470,-3.746459,2.933601],[0.573701,4.712927,-5.136537,4.882054,8.152423,-9.286544,-9.650545,7.571956,-0.023305,7.467733,-1.551686,-8.154722,6.489594],[-6.636858,-1.705849,3.788672,-0.276646,-8.644719,3.595293,0.004711,3.364674,5.135954,-3.644561,-7.484203,-6.268560,-6.275746]],[[-1.147178,0.605092,8.935311,7.136556,0.626792,-1.086307,4.154240,-9.155958,-6.026367,-2.795728,9.919744,5.061911,-3.102508],[-2.983118,8.306633,-8.781564,0.744488,-1.441555,0.682027,9.139654,-9.720929,-0.742840,-0.222875,-4.619243,-6.949023,-1.376254],[-1.846274,-7.932603,6.140722,-7.589621,1.487777,-5.386855,-3.688445,-5.404682,8.379274,-0.811450,9.919796,2.993830,3.177819],[-9.858179,-8.712835,-0.292092,-6.540492,-4.534928,0.225572,4.284073,9.756962,-2.364823,-2.201860,4.923570,-5.246136,1.664947],[1.588671,4.969838,8.246512,-5.926121,7.815922,-2.538225,8.758340,4.823340,2.847680,-9.400422,7.141432,-0.005301,4.396548],[7.008705,3.940941,7.989224,8.284621,-0.808429,-6.409265,3.577760,6.816928,2.660261,-0.373383,3.452765,8.865827,-2.776789],[-9.259817,-7.262009,-9.315588,1.151762,8.250037,-1.745275,-1.210054,4.706070,-9.085760,-3.879611,-3.592560,-6.295153,-1.011117]],[[4.541212,5.396444,-4.775789,-7.896074,3.731671,-7.321652,4.591886,6.023189,9.544135,-8.602615,-2.484268,7.021275,-3.100435],[4.699070,-9.583039,-8.477791,8.390772,9.675380,-9.819443,6.543964,-9.177727,-3.149552,6.400997,-1.446923,4.323686,9.773938],[3.817266,-1.547253,-9.961401,-4.270211,-6.428552,-4.421599,1.917354,1.193356,-4.908716,7.290521,8.143411,-8.047409,-4.175924],[4.970236,7.867536,4.976483,6.053692,-1.035969,2.128368,-8.818901,5.744380,-3.398997,-1.886756,-6.049876,-9.093761,8.115375],[-3.651734,-4.123328,-9.677982,-0.807610,-4.228693,-8.802213,-4.928296,3.486088,-2.698192,2.258460,1.924034,-4.360489,4.775289],[-3.411709,-2.398341,1.932076,1.685582,6.714245,5.207887,4.273228,-2.745183,5.234882,-6.543671,-9.241030,-6.665393,-7.628192],[0.524080,1.970897,-5.268979,-0.117840,-1.387786,6.841373,3.375943,5.532759,-3.768785,-0.846524,3.621422,6.337307,3.401677]],[[-6.961629,7.877820,1.262204,9.736205,-7.119170,-7.530073,-9.851680,-3.385075,-2.298556,3.583579,3.791902,-4.439857,-2.651643],[1.100622,5.049591,3.622419,1.105759,-3.911935,-1.817280,2.971113,5.893046,1.561099,-2.645472,2.021281,-6.883112,2.004501],[9.827316,7.215304,0.402589,8.642358,8.081743,-2.473097,-3.146463,3.197848,-2.983679,8.370165,-0.701394,7.387768,-6.406035],[9.551157,3.643569,-0.867858,-9.316847,-4.131166,3.582533,-9.839316,0.116167,1.973586,-8.795297,-3.326047,8.971238,-6.987516],[-1.584893,3.185246,2.465614,8.587529,2.806133,2.385008,-8.527750,1.162765,3.285304,-6.063943,-0.166504,-4.720463,5.568033],[8.135090,-6.438105,-6.830028,6.600504,-5.801174,8.370248,-2.799188,8.554383,-1.662481,2.953146,3.060108,-2.809450,3.455079],[6.682204,1.362688,-4.970934,-8.358963,-3.900645,-8.055972,-3.928948,-9.927855,-2.315921,-0.441143,-1.380168,6.065687,-7.949252]]], dtype = "float64")#candidate|2466|(14, 7, 13)|const|float64
bop_2467 = relay.subtract(uop_2426.astype('uint64'), relay.reshape(const_2466.astype('uint64'), relay.shape_of(uop_2426))) # shape=(14, 7, 13)
var_2474 = relay.var("var_2474", dtype = "float32", shape = (14, 7, 13))#candidate|2474|(14, 7, 13)|var|float32
bop_2475 = relay.greater(uop_2452.astype('bool'), relay.reshape(var_2474.astype('bool'), relay.shape_of(uop_2452))) # shape=(14, 7, 13)
output = relay.Tuple([call_2438,var_2439,call_2445,const_2446,var_2447,bop_2458,bop_2467,bop_2475,])
output2 = relay.Tuple([call_2440,var_2439,call_2448,const_2446,var_2447,bop_2458,bop_2467,bop_2475,])
func_2482 = relay.Function([var_2425,var_2439,var_2447,var_2474,], output)
mod['func_2482'] = func_2482
mod = relay.transform.InferType()(mod)
mutated_mod['func_2482'] = func_2482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2482_call = mutated_mod.get_global_var('func_2482')
var_2484 = relay.var("var_2484", dtype = "float64", shape = (14, 7, 13))#candidate|2484|(14, 7, 13)|var|float64
var_2485 = relay.var("var_2485", dtype = "float64", shape = (120,))#candidate|2485|(120,)|var|float64
var_2486 = relay.var("var_2486", dtype = "uint8", shape = (810,))#candidate|2486|(810,)|var|uint8
var_2487 = relay.var("var_2487", dtype = "float32", shape = (14, 7, 13))#candidate|2487|(14, 7, 13)|var|float32
call_2483 = func_2482_call(var_2484,var_2485,var_2486,var_2487,)
output = call_2483
func_2488 = relay.Function([var_2484,var_2485,var_2486,var_2487,], output)
mutated_mod['func_2488'] = func_2488
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2533 = relay.var("var_2533", dtype = "float32", shape = (9, 5, 16))#candidate|2533|(9, 5, 16)|var|float32
var_2534 = relay.var("var_2534", dtype = "float32", shape = (9, 5, 16))#candidate|2534|(9, 5, 16)|var|float32
bop_2535 = relay.power(var_2533.astype('float32'), relay.reshape(var_2534.astype('float32'), relay.shape_of(var_2533))) # shape=(9, 5, 16)
uop_2541 = relay.acosh(var_2533.astype('float64')) # shape=(9, 5, 16)
const_2547 = relay.const([[[-6.972770,-8.288345,-1.042039,-9.758424,-8.444402,4.328391,3.024442,-8.054930,-3.253428,7.737368,-2.549070,-3.521537,8.028438,0.421577,-0.011966,9.679969],[-8.880382,3.559445,-0.814963,9.376747,1.777265,-4.192199,9.161062,-9.374898,-5.286074,3.423133,-3.115747,-4.968447,-9.154666,-2.863352,4.460155,7.128285],[2.468625,-7.479882,-0.110416,0.557145,-6.509248,-5.060333,-0.844250,-7.288746,-0.877428,9.194915,4.049676,-5.053187,0.895238,-3.819396,1.851107,-3.631812],[-7.418610,-6.859055,-1.391909,1.664232,-0.983387,-9.033449,-9.343927,3.999168,9.602480,9.458757,-1.518297,-7.411712,-7.901003,-1.731450,2.237543,2.194847],[-6.269831,-4.468857,0.989548,4.037331,-5.829888,-7.251977,-6.631392,5.735244,-9.528153,7.488972,4.251903,0.640576,-1.765696,5.901163,-5.183637,-2.777300]],[[-6.559465,-9.597601,-6.509340,3.052990,5.627546,8.122526,9.816843,7.269600,-0.455002,6.062491,2.443135,5.502601,-1.309991,9.432458,2.881723,7.970622],[-3.428217,1.666333,-6.804644,0.760253,-7.815217,1.864661,-1.970871,-5.117158,9.010483,-6.779998,-6.984452,4.118546,-4.284285,4.019699,-4.867986,8.946187],[-4.588244,0.144119,-0.481955,4.833727,7.684400,-2.652560,7.896359,-7.122226,-3.526623,8.541757,3.069548,-1.307021,7.058592,5.345282,-6.368678,8.697016],[-3.783464,5.675190,1.115715,0.431926,-4.496686,-0.116415,-7.804184,-9.286971,5.358397,9.495748,-9.149609,-4.997808,-4.883478,8.089218,5.718913,1.941939],[6.599057,-1.468980,9.882692,-4.724834,4.193345,-0.260398,6.282009,7.103743,-1.614391,6.419641,-0.355192,4.373509,-5.333373,4.918476,5.788222,4.395521]],[[-8.630925,1.421813,6.663735,0.316158,3.924868,4.687689,-1.447999,3.493045,6.986373,-2.724871,8.323919,-8.514014,-7.520659,5.317594,4.245354,6.734996],[-1.959366,8.364029,-8.502905,-1.678593,-9.088398,-9.835926,-4.451770,-0.494742,6.402190,0.804366,-2.320817,-3.044273,-5.853459,-0.378717,-2.166876,9.257529],[-8.427310,-8.157578,4.466753,-1.320473,-3.552434,-1.303413,3.099871,5.427083,1.206201,3.090343,-4.611539,9.992576,7.912839,-6.547020,3.004182,-1.505690],[9.704512,-7.988290,4.303786,-9.381846,3.660188,3.177525,7.765215,8.936148,4.141698,-4.543034,-3.876050,-5.784475,3.713780,6.100860,-7.699432,3.690282],[2.593872,-1.792667,-6.228090,-8.438355,-1.946953,-5.811348,-2.106797,-6.320086,-5.860450,-2.083748,-9.695835,-6.280975,0.174720,-1.318072,3.390755,6.396750]],[[3.768140,-1.933110,2.832704,-0.209840,-6.426352,0.765219,-3.098676,-6.028599,8.904356,-8.116655,-0.454270,0.942003,-8.940341,1.988013,4.710274,-7.745593],[2.208974,9.369619,-2.623125,-7.535670,-0.437724,2.341362,0.736605,-9.103183,-8.264238,0.003223,8.924379,9.382636,-6.489918,-6.565265,9.504959,6.269222],[7.392733,1.302335,-2.525023,-0.565303,-5.688641,0.895863,0.747262,-5.788658,-3.837171,-5.849899,-0.344284,-3.559380,6.388600,0.051262,7.935804,5.628875],[0.228281,-8.705620,-2.490061,-0.557143,1.253464,-0.405799,3.883669,-8.406282,-3.561677,-3.445522,-9.809656,-6.920830,1.982952,3.182709,-9.346899,8.927091],[2.098424,9.722410,-0.257412,-4.069519,6.115385,-1.526179,8.272689,5.722559,-0.963354,0.773118,-7.464212,-6.859921,3.183137,-3.527553,-1.232947,8.454771]],[[-3.665452,8.787781,-8.535602,-5.862602,-0.986284,1.152257,4.090613,-4.104722,-1.426269,7.705983,8.058088,-6.558990,0.322471,-0.058318,-4.563967,7.680763],[-7.935580,2.743941,4.886851,-7.683700,-5.986907,2.777260,-3.634592,8.147272,4.857320,1.392063,-4.065070,8.579463,7.396026,8.592169,2.385586,-9.772030],[1.327111,9.017369,9.596127,4.246341,6.953368,7.426015,-4.255994,-1.582963,7.587797,-2.559055,5.079841,8.994206,1.095055,-2.111396,-0.699629,-9.431185],[-1.878313,-7.982313,0.022045,6.904037,-2.537784,0.961036,-1.176555,9.379930,0.065163,1.643385,0.423692,9.764492,-9.368611,-9.760961,-2.060097,-5.101864],[-1.812510,-8.011878,-2.683154,-3.439986,0.944755,1.796742,3.696564,6.495692,-8.381100,2.507540,-6.176657,-2.145646,-7.121961,6.590481,7.835285,0.711471]],[[-9.678787,-2.614514,3.245389,6.825585,-0.426741,-6.020415,8.666646,-8.664359,5.208508,-0.837657,0.723006,-8.500655,5.124248,-1.669430,4.959576,-0.034179],[-2.132697,7.138490,5.932238,-9.630042,1.694323,2.864415,-2.373052,2.864651,6.244160,5.317491,-8.991201,-1.631627,2.040133,0.078288,-8.571273,-9.470858],[-4.525551,-4.187158,2.653065,3.448751,-2.860867,7.020333,-4.707181,-2.027417,-3.322345,-3.884106,9.938819,-2.561195,-6.012435,9.577497,2.334226,0.367475],[8.290204,5.740383,-9.218329,-1.794160,1.405052,6.538653,-1.095163,3.541357,-3.731259,2.467239,-6.312811,-2.340371,6.714671,8.265252,-2.578764,-7.596792],[3.831291,-5.641630,-1.017448,-0.750575,-2.287732,-2.203228,2.632679,-3.820624,9.200097,8.041711,5.832977,-1.929872,8.724975,-0.637878,-9.875984,-6.458276]],[[-6.330704,7.142273,5.068998,5.189998,-3.076486,-4.961231,9.301147,8.417962,-5.910284,9.703842,-1.596578,2.033360,2.844400,7.471881,-3.660545,4.497677],[-7.284521,-0.938113,-4.252258,-7.127497,4.150136,-3.820510,6.135155,0.105257,-8.353736,0.071451,4.044168,1.946782,-2.906626,-6.789122,-7.879723,-0.928536],[4.283535,-5.428404,-3.728285,-5.004868,2.995842,-7.336955,-1.810588,-2.167319,-7.086655,9.587087,-3.618116,0.016240,-3.094566,-0.231916,8.313704,8.178646],[8.718380,1.585501,-7.611807,8.132184,-3.565657,-3.583962,6.610592,-1.393998,7.351513,0.634511,-8.114492,-1.046323,8.118169,8.216710,6.380533,5.705585],[-4.891475,-0.283477,-6.662007,-2.891409,-0.888062,8.321221,8.255677,3.176807,2.344854,6.800576,2.034858,-5.709778,-9.526723,-6.196107,8.599774,-0.971134]],[[-9.188137,-8.478746,-0.381244,9.707174,-8.880232,-9.918016,-4.104932,-1.171496,3.273218,4.715811,7.469417,6.210902,2.020833,-4.445802,7.563108,-2.569879],[0.529462,-1.486611,5.563226,-1.854374,-8.084629,-0.844097,5.448499,-2.584218,-2.592197,2.086657,-5.976714,5.305652,-5.038896,-0.547064,-2.324143,4.984787],[4.113823,4.928656,-8.213562,-6.090338,-8.777056,3.573132,8.565201,-2.949644,-8.749834,-4.531246,-6.339138,-7.063471,7.833072,-8.785034,-9.743080,6.484884],[6.763103,-0.287598,4.067640,-6.323821,7.510695,5.925137,-7.680869,-6.893620,5.236157,4.850824,-7.256005,7.262826,-5.834053,1.973552,1.115826,-4.153320],[6.573195,-5.660143,-4.127005,1.458230,3.761116,-8.932865,-0.507337,-5.181214,9.394892,-4.441040,6.109430,0.758047,9.036889,-9.391980,-1.027793,-7.750466]],[[-2.558630,-9.771638,0.420352,-3.211453,-4.009122,-6.534565,-6.247840,-1.246936,-0.058277,6.840318,-3.192397,6.207211,-3.021462,4.674432,3.484542,-6.574079],[-3.881357,-0.127347,-9.177234,-7.653589,5.796341,-7.733767,4.976844,-0.295246,1.314770,-2.386056,-5.034600,2.325265,1.600870,0.632985,-1.030148,-4.922501],[-1.684370,5.496734,-1.156824,0.827946,-8.333193,5.264968,6.702042,-8.682586,7.274331,-7.611588,-3.894617,-7.263872,-1.502276,-7.576600,-2.645033,-0.688319],[3.479497,5.373226,8.474633,-1.507169,-5.890433,-5.326549,2.215429,-6.266655,2.400110,-5.873754,3.862409,3.681323,4.108894,-5.518453,6.554567,-9.114479],[-4.112407,-3.545086,6.838127,-9.067198,-5.783930,0.196449,2.687439,-6.446818,-4.704990,-0.966328,-4.499569,-6.000810,-8.008823,2.917115,9.237846,-7.218934]]], dtype = "float64")#candidate|2547|(9, 5, 16)|const|float64
bop_2548 = relay.equal(uop_2541.astype('bool'), relay.reshape(const_2547.astype('bool'), relay.shape_of(uop_2541))) # shape=(9, 5, 16)
uop_2560 = relay.sigmoid(var_2533.astype('float64')) # shape=(9, 5, 16)
func_1867_call = mod.get_global_var('func_1867')
func_1870_call = mutated_mod.get_global_var('func_1870')
var_2563 = relay.var("var_2563", dtype = "float32", shape = (48,))#candidate|2563|(48,)|var|float32
call_2562 = func_1867_call(relay.reshape(var_2563.astype('float32'), [3, 16]))
call_2564 = func_1867_call(relay.reshape(var_2563.astype('float32'), [3, 16]))
uop_2575 = relay.erf(const_2547.astype('float64')) # shape=(9, 5, 16)
uop_2579 = relay.rsqrt(bop_2535.astype('float64')) # shape=(9, 5, 16)
output = relay.Tuple([bop_2548,uop_2560,call_2562,var_2563,uop_2575,uop_2579,])
output2 = relay.Tuple([bop_2548,uop_2560,call_2564,var_2563,uop_2575,uop_2579,])
func_2594 = relay.Function([var_2533,var_2534,var_2563,], output)
mod['func_2594'] = func_2594
mod = relay.transform.InferType()(mod)
mutated_mod['func_2594'] = func_2594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2594_call = mutated_mod.get_global_var('func_2594')
var_2596 = relay.var("var_2596", dtype = "float32", shape = (9, 5, 16))#candidate|2596|(9, 5, 16)|var|float32
var_2597 = relay.var("var_2597", dtype = "float32", shape = (9, 5, 16))#candidate|2597|(9, 5, 16)|var|float32
var_2598 = relay.var("var_2598", dtype = "float32", shape = (48,))#candidate|2598|(48,)|var|float32
call_2595 = func_2594_call(var_2596,var_2597,var_2598,)
output = call_2595
func_2599 = relay.Function([var_2596,var_2597,var_2598,], output)
mutated_mod['func_2599'] = func_2599
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2755 = relay.var("var_2755", dtype = "float32", shape = (11, 4))#candidate|2755|(11, 4)|var|float32
uop_2756 = relay.asinh(var_2755.astype('float32')) # shape=(11, 4)
output = uop_2756
output2 = uop_2756
func_2768 = relay.Function([var_2755,], output)
mod['func_2768'] = func_2768
mod = relay.transform.InferType()(mod)
mutated_mod['func_2768'] = func_2768
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2769 = relay.var("var_2769", dtype = "float32", shape = (11, 4))#candidate|2769|(11, 4)|var|float32
func_2768_call = mutated_mod.get_global_var('func_2768')
call_2770 = func_2768_call(var_2769)
output = call_2770
func_2771 = relay.Function([var_2769], output)
mutated_mod['func_2771'] = func_2771
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2885 = relay.var("var_2885", dtype = "float64", shape = (4, 13, 6))#candidate|2885|(4, 13, 6)|var|float64
uop_2886 = relay.atanh(var_2885.astype('float64')) # shape=(4, 13, 6)
var_2892 = relay.var("var_2892", dtype = "float64", shape = (4, 13, 6))#candidate|2892|(4, 13, 6)|var|float64
bop_2893 = relay.logical_and(var_2885.astype('bool'), relay.reshape(var_2892.astype('bool'), relay.shape_of(var_2885))) # shape=(4, 13, 6)
output = relay.Tuple([uop_2886,bop_2893,])
output2 = relay.Tuple([uop_2886,bop_2893,])
func_2898 = relay.Function([var_2885,var_2892,], output)
mod['func_2898'] = func_2898
mod = relay.transform.InferType()(mod)
mutated_mod['func_2898'] = func_2898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2898_call = mutated_mod.get_global_var('func_2898')
var_2900 = relay.var("var_2900", dtype = "float64", shape = (4, 13, 6))#candidate|2900|(4, 13, 6)|var|float64
var_2901 = relay.var("var_2901", dtype = "float64", shape = (4, 13, 6))#candidate|2901|(4, 13, 6)|var|float64
call_2899 = func_2898_call(var_2900,var_2901,)
output = call_2899
func_2902 = relay.Function([var_2900,var_2901,], output)
mutated_mod['func_2902'] = func_2902
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2966 = relay.var("var_2966", dtype = "float32", shape = ())#candidate|2966|()|var|float32
var_2967 = relay.var("var_2967", dtype = "float32", shape = (11, 12))#candidate|2967|(11, 12)|var|float32
bop_2968 = relay.divide(var_2966.astype('float32'), var_2967.astype('float32')) # shape=(11, 12)
func_1971_call = mod.get_global_var('func_1971')
func_1974_call = mutated_mod.get_global_var('func_1974')
var_2983 = relay.var("var_2983", dtype = "float64", shape = (44,))#candidate|2983|(44,)|var|float64
var_2984 = relay.var("var_2984", dtype = "int64", shape = (560,))#candidate|2984|(560,)|var|int64
call_2982 = relay.TupleGetItem(func_1971_call(relay.reshape(var_2983.astype('float64'), [11, 1, 4]), relay.reshape(var_2984.astype('int64'), [40, 14]), ), 4)
call_2985 = relay.TupleGetItem(func_1974_call(relay.reshape(var_2983.astype('float64'), [11, 1, 4]), relay.reshape(var_2984.astype('int64'), [40, 14]), ), 4)
func_2128_call = mod.get_global_var('func_2128')
func_2136_call = mutated_mod.get_global_var('func_2136')
var_2989 = relay.var("var_2989", dtype = "int32", shape = (1, 10))#candidate|2989|(1, 10)|var|int32
var_2990 = relay.var("var_2990", dtype = "int32", shape = (10, 3))#candidate|2990|(10, 3)|var|int32
var_2991 = relay.var("var_2991", dtype = "float64", shape = (52,))#candidate|2991|(52,)|var|float64
const_2992 = relay.const([3,8,4,8,9,4,-10,7,-6,8,3,-6,2,6,8,-5,-7,-10,-2,-6,4,8,-6,9,-10,-1,-10,-10,6,-6,9,7,2,-10,-8,7,4,-6,-2,2,2,7,-10,-6,-4,1,4,9,5,-2,4,5,-7,-10,-5,-3,8,1,-8,2,-9,-5,-1,9,-4,1,2,-7,6,-8,-2,10,-10,7,9,-9,-4,-3,9,-5,3,-2,-9,-4,8,7,-2,9,-1,-1], dtype = "uint8")#candidate|2992|(90,)|const|uint8
var_2993 = relay.var("var_2993", dtype = "uint32", shape = (35,))#candidate|2993|(35,)|var|uint32
const_2994 = relay.const([True,False,False,True,True,False,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,True,False,True,False,False,False,True,True,False,False,False,True,False,False,False,False,False,True,False,False,True,False,True,True,True,True,False,False,False,True,True,False,True,True,False,False,True,False,True,False,False,True,True,False,True,True,False,False,False,False,False,True,False,True,False,True,False,True,True,True,False,True,True,True,False,True,True,True,True,False,True,True,False,False,True,True,True,True,True,True,True,True,True,True,False,True,False,True,False,False,False,False,True,True,False,True,False,True,False,False,False,False,True,False,False,True,True,False,False,True,True,False,False,False,True,True,False,False,False,False,False,False,True,True,True,True,False,True,False,False,True,False,False,True,False,True,False,False,True,False,True,False,False,True,True,False,False,True,False,False,True,False,False,False,True,True,True,True,True,False,True,False,False,False,True,True,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,False,False,True,False,True,False,False,False,True,False,False,False,False,False,True,True,True,True,False,True,True,False,True,True,False,True,False,False,True,False,False,True], dtype = "bool")#candidate|2994|(234,)|const|bool
call_2988 = relay.TupleGetItem(func_2128_call(relay.reshape(var_2989.astype('int32'), [5, 1, 2]), relay.reshape(var_2990.astype('int32'), [5, 3, 2]), relay.reshape(var_2991.astype('float64'), [52,]), relay.reshape(const_2992.astype('uint8'), [90,]), relay.reshape(var_2993.astype('uint32'), [35,]), relay.reshape(const_2994.astype('bool'), [234, 1]), ), 5)
call_2995 = relay.TupleGetItem(func_2136_call(relay.reshape(var_2989.astype('int32'), [5, 1, 2]), relay.reshape(var_2990.astype('int32'), [5, 3, 2]), relay.reshape(var_2991.astype('float64'), [52,]), relay.reshape(const_2992.astype('uint8'), [90,]), relay.reshape(var_2993.astype('uint32'), [35,]), relay.reshape(const_2994.astype('bool'), [234, 1]), ), 5)
uop_2998 = relay.acos(var_2983.astype('float64')) # shape=(44,)
func_1867_call = mod.get_global_var('func_1867')
func_1870_call = mutated_mod.get_global_var('func_1870')
const_3009 = relay.const([4.739979,-9.494878,-4.418318,-1.213741,-9.071750,-9.350327,9.627708,-8.203355,-5.369040,-1.299106,5.954828,-8.680227,6.316412,-9.186131,-1.697469,9.653705,3.757224,3.055276,1.692237,1.339638,2.417384,-1.310212,-7.826044,6.641645,2.478587,7.260014,-7.670340,4.663577,-8.890399,-2.694610,6.654418,-2.412703,7.646827,-0.633428,9.290763,-7.400123,8.702665,-6.490516,-5.004693,1.976948,2.200638,-5.014611,-3.504715,2.142955,8.544996,7.677230,6.169708,4.642715], dtype = "float32")#candidate|3009|(48,)|const|float32
call_3008 = func_1867_call(relay.reshape(const_3009.astype('float32'), [3, 16]))
call_3010 = func_1867_call(relay.reshape(const_3009.astype('float32'), [3, 16]))
output = relay.Tuple([bop_2968,call_2982,var_2984,call_2988,var_2989,var_2990,var_2991,const_2992,var_2993,const_2994,uop_2998,call_3008,const_3009,])
output2 = relay.Tuple([bop_2968,call_2985,var_2984,call_2995,var_2989,var_2990,var_2991,const_2992,var_2993,const_2994,uop_2998,call_3010,const_3009,])
func_3011 = relay.Function([var_2966,var_2967,var_2983,var_2984,var_2989,var_2990,var_2991,var_2993,], output)
mod['func_3011'] = func_3011
mod = relay.transform.InferType()(mod)
var_3012 = relay.var("var_3012", dtype = "float32", shape = ())#candidate|3012|()|var|float32
var_3013 = relay.var("var_3013", dtype = "float32", shape = (11, 12))#candidate|3013|(11, 12)|var|float32
var_3014 = relay.var("var_3014", dtype = "float64", shape = (44,))#candidate|3014|(44,)|var|float64
var_3015 = relay.var("var_3015", dtype = "int64", shape = (560,))#candidate|3015|(560,)|var|int64
var_3016 = relay.var("var_3016", dtype = "int32", shape = (1, 10))#candidate|3016|(1, 10)|var|int32
var_3017 = relay.var("var_3017", dtype = "int32", shape = (10, 3))#candidate|3017|(10, 3)|var|int32
var_3018 = relay.var("var_3018", dtype = "float64", shape = (52,))#candidate|3018|(52,)|var|float64
var_3019 = relay.var("var_3019", dtype = "uint32", shape = (35,))#candidate|3019|(35,)|var|uint32
output = func_3011(var_3012,var_3013,var_3014,var_3015,var_3016,var_3017,var_3018,var_3019,)
func_3020 = relay.Function([var_3012,var_3013,var_3014,var_3015,var_3016,var_3017,var_3018,var_3019,], output)
mutated_mod['func_3020'] = func_3020
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3043 = relay.var("var_3043", dtype = "int64", shape = (3, 3, 13))#candidate|3043|(3, 3, 13)|var|int64
var_3044 = relay.var("var_3044", dtype = "int64", shape = (3, 3, 13))#candidate|3044|(3, 3, 13)|var|int64
bop_3045 = relay.add(var_3043.astype('int64'), relay.reshape(var_3044.astype('int64'), relay.shape_of(var_3043))) # shape=(3, 3, 13)
bop_3053 = relay.bitwise_or(var_3044.astype('uint8'), relay.reshape(bop_3045.astype('uint8'), relay.shape_of(var_3044))) # shape=(3, 3, 13)
func_2898_call = mod.get_global_var('func_2898')
func_2902_call = mutated_mod.get_global_var('func_2902')
const_3064 = relay.const([1.881323,4.950768,-9.250844,-0.844740,9.482507,4.540216,-3.876085,5.918286,7.468256,5.436082,7.642617,-8.674838,-1.463818,-2.480333,-2.077799,-6.491714,8.348366,2.401403,6.585978,4.643291,0.557881,7.156467,0.876816,7.852872,-4.527145,-4.753455,5.888864,5.998786,-0.144237,7.695254,2.320673,-9.746007,4.470132,-8.913403,-2.196251,-2.036417,-4.104603,8.978891,-2.058402,-8.642770,-4.452571,-7.727022,1.310043,3.672621,8.797080,-5.707435,2.433682,-7.889599,-0.138233,2.529789,-0.754762,-2.208266,8.236102,7.752791,0.333688,-9.549442,-7.342666,2.691501,-5.348282,5.674087,7.627274,-6.390810,6.520849,-2.710919,2.326556,-4.498535,4.593231,-4.484657,-0.390059,-0.792374,8.994655,4.441507,5.994400,6.315270,-0.160016,8.552680,-5.013411,-5.489136,-4.218273,-4.662015,-9.551018,-3.699347,5.206551,3.477166,-2.757587,1.206354,-7.495200,4.541435,9.325748,-2.948745,-9.031581,-7.604811,1.465673,-7.891635,0.407248,-4.292972,5.283250,9.114001,5.449382,-6.003870,-5.155140,-7.992455,4.200413,-0.248624,-0.851751,-4.855815,-5.246164,-0.154570,0.919063,-7.100511,1.262550,-3.053698,7.869345,8.373887,-0.477539,-8.915123,-7.628652,-3.074279,-0.795099,-9.881998,2.789916,0.048403,3.611179,2.649552,-1.667545,7.288640,-6.820713,-2.117435,7.783994,4.379474,-8.544641,-9.090712,-0.418600,-2.722307,2.604775,9.142023,1.894482,8.698167,-2.785797,0.005900,-1.147826,-7.257812,-4.835904,-9.992039,3.447607,-2.454642,6.591894,-2.892997,1.444748,-6.683809,3.908217,5.384102,9.711633,-0.553102,5.000940,-4.112650,-2.978747,5.100336,-7.673082,2.783244,9.389884,6.749400,-9.428059,-4.406725,-4.873756,1.290480,-8.487132,-6.166845,9.902591,-5.755599,-3.299801,-8.455442,1.131483,5.160596,0.443920,5.781245,-2.614223,2.332495,-7.106547,-7.728698,-4.785810,6.836033,-3.318787,-2.218560,-7.190135,2.869945,-5.347196,5.276087,2.923422,4.777757,3.042095,7.545403,4.230616,6.304041,-9.124240,-3.655245,3.078988,5.626216,9.559501,5.085742,-0.853999,-5.375794,-6.066062,7.889445,-6.588248,-6.754499,2.865704,-5.386076,-3.733412,4.275557,1.300511,6.110825,7.959021,6.021729,4.553164,-4.665385,3.675856,-4.158390,-3.777653,8.223805,-9.414380,7.669841,4.497134,-8.095955,1.818803,-7.005300,9.146035,2.148188,-5.275226,3.391282,1.788822,-3.072504,-6.411743,-5.420799,-0.102076,4.907954,7.430148,-2.782497,-1.322805,-0.068323,-0.883347,0.907582,-4.817808,-3.501394,8.613746,-4.633439,7.558447,5.573255,3.006040,4.645598,9.318639,-0.900828,3.989442,4.902722,2.135876,1.148613,-5.630560,0.116741,9.015357,4.639936,4.489285,7.072908,-9.567676,-8.111526,-5.651191,0.651242,0.455574,-7.484702,9.606601,-6.694239,8.360817,-6.240288,-0.688153,-4.029481,-2.803662,-3.431730,-3.160715,-9.336851,-4.750611,-5.201197,-7.413389,-9.434904,-3.817360,-0.764332,-0.724549,-4.732330,-1.408661,7.616568,7.259835,-1.517838,-8.196368,9.457847,-1.594219,9.934174,4.939231,9.232139,-7.960024,1.945115,-1.564106,-3.494333,-9.983225,-4.232268,0.706004,-8.738219,-1.325204,-8.382164,5.647086,0.763286,-0.963173,8.514122,-6.194793,4.449052], dtype = "float64")#candidate|3064|(312,)|const|float64
call_3063 = relay.TupleGetItem(func_2898_call(relay.reshape(const_3064.astype('float64'), [4, 13, 6]), relay.reshape(const_3064.astype('float64'), [4, 13, 6]), ), 1)
call_3065 = relay.TupleGetItem(func_2902_call(relay.reshape(const_3064.astype('float64'), [4, 13, 6]), relay.reshape(const_3064.astype('float64'), [4, 13, 6]), ), 1)
var_3066 = relay.var("var_3066", dtype = "int64", shape = (3, 3, 13))#candidate|3066|(3, 3, 13)|var|int64
bop_3067 = relay.divide(bop_3045.astype('float64'), relay.reshape(var_3066.astype('float64'), relay.shape_of(bop_3045))) # shape=(3, 3, 13)
uop_3070 = relay.asinh(var_3043.astype('float64')) # shape=(3, 3, 13)
func_1725_call = mod.get_global_var('func_1725')
func_1728_call = mutated_mod.get_global_var('func_1728')
const_3074 = relay.const([[-6.160076,-0.053027,-9.279893,-2.382029,6.996933,-5.729680,6.429416,1.781115,-9.133322,-4.519535,2.638212,2.952684,-6.303884,0.522256,-8.706885,-7.930479,-5.041602,4.760023,-3.421219,-1.074405,-5.408523,6.235218,5.629344,-1.916737,5.693307,-7.318353,4.180353,1.231846,-8.957243,-0.259639,-3.784481,0.176923,2.400948,-2.234997,-2.624847,3.589253,6.063094,-2.708959,-7.287935,-7.498182,1.274773,-5.373471],[-4.149062,-9.276469,-7.400612,-3.620724,3.276359,0.453616,-3.932962,5.233000,2.623424,0.715075,2.248608,1.029692,-5.803100,8.153032,-6.949188,-2.234937,-3.324602,0.662851,5.288126,0.747863,9.373645,-4.112165,-7.647354,-9.866569,-6.135143,7.750246,-0.380873,4.931663,-8.771106,-8.188603,8.530184,-0.632121,-2.511352,-7.238785,0.403043,-7.905674,3.458026,-8.535418,-1.815360,9.913044,-2.444103,-9.540501],[1.272349,5.349551,6.974663,7.015848,-3.609207,-2.093320,7.231282,-6.308325,-7.872864,-0.024663,4.878347,-0.435933,0.511726,8.509924,-9.339191,-2.705783,8.277618,3.189570,-8.309350,8.289029,-0.178981,9.206799,9.418067,-0.195793,-1.450882,2.796522,1.719834,-3.103226,0.106800,-4.529382,6.771479,2.526630,-8.940096,2.600927,0.279564,9.707514,-5.170859,-4.170177,6.267833,-4.866483,5.978823,4.977830],[0.410066,1.055740,7.023091,-9.814771,2.235254,-8.964174,-3.228348,-5.025842,-0.284904,-9.660989,-9.565409,-0.733164,2.727492,7.891398,-3.137861,-4.604873,-2.683364,-8.741311,1.049343,2.867325,2.698609,2.463174,2.740570,6.277582,0.015821,3.478183,-0.182210,8.707592,-3.024740,-5.480212,-4.992252,-3.008896,3.519645,-4.057639,1.477407,3.251738,6.382999,-2.657082,-8.722976,6.387552,7.984359,5.737044],[-4.724126,-8.695177,3.498274,-6.884298,6.406342,1.032847,7.174206,8.978762,0.539761,1.470939,9.004613,9.408317,-5.059258,-7.679839,4.467883,4.474585,-1.393736,-6.565864,8.361195,0.835363,1.975610,8.616542,6.992427,5.140306,3.120377,5.175239,9.367658,-1.919588,8.116978,4.133986,-1.503006,1.514652,-0.081244,-4.883590,-0.170664,-4.994923,-7.035898,-9.818254,5.861065,-1.071584,2.164129,8.687687]], dtype = "float32")#candidate|3074|(5, 42)|const|float32
call_3073 = func_1725_call(relay.reshape(const_3074.astype('float32'), [14, 15]))
call_3075 = func_1725_call(relay.reshape(const_3074.astype('float32'), [14, 15]))
func_311_call = mod.get_global_var('func_311')
func_314_call = mutated_mod.get_global_var('func_314')
var_3104 = relay.var("var_3104", dtype = "float64", shape = (180,))#candidate|3104|(180,)|var|float64
call_3103 = relay.TupleGetItem(func_311_call(relay.reshape(var_3104.astype('float64'), [15, 3, 4]), relay.reshape(var_3104.astype('float64'), [15, 3, 4]), ), 0)
call_3105 = relay.TupleGetItem(func_314_call(relay.reshape(var_3104.astype('float64'), [15, 3, 4]), relay.reshape(var_3104.astype('float64'), [15, 3, 4]), ), 0)
output = relay.Tuple([bop_3053,call_3063,const_3064,bop_3067,uop_3070,call_3073,const_3074,call_3103,var_3104,])
output2 = relay.Tuple([bop_3053,call_3065,const_3064,bop_3067,uop_3070,call_3075,const_3074,call_3105,var_3104,])
func_3111 = relay.Function([var_3043,var_3044,var_3066,var_3104,], output)
mod['func_3111'] = func_3111
mod = relay.transform.InferType()(mod)
mutated_mod['func_3111'] = func_3111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3111_call = mutated_mod.get_global_var('func_3111')
var_3113 = relay.var("var_3113", dtype = "int64", shape = (3, 3, 13))#candidate|3113|(3, 3, 13)|var|int64
var_3114 = relay.var("var_3114", dtype = "int64", shape = (3, 3, 13))#candidate|3114|(3, 3, 13)|var|int64
var_3115 = relay.var("var_3115", dtype = "int64", shape = (3, 3, 13))#candidate|3115|(3, 3, 13)|var|int64
var_3116 = relay.var("var_3116", dtype = "float64", shape = (180,))#candidate|3116|(180,)|var|float64
call_3112 = func_3111_call(var_3113,var_3114,var_3115,var_3116,)
output = call_3112
func_3117 = relay.Function([var_3113,var_3114,var_3115,var_3116,], output)
mutated_mod['func_3117'] = func_3117
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3156 = relay.var("var_3156", dtype = "float64", shape = (2, 10, 3))#candidate|3156|(2, 10, 3)|var|float64
uop_3157 = relay.atanh(var_3156.astype('float64')) # shape=(2, 10, 3)
uop_3161 = relay.log10(uop_3157.astype('float32')) # shape=(2, 10, 3)
func_1014_call = mod.get_global_var('func_1014')
func_1018_call = mutated_mod.get_global_var('func_1018')
var_3167 = relay.var("var_3167", dtype = "uint32", shape = (35, 1))#candidate|3167|(35, 1)|var|uint32
call_3166 = func_1014_call(relay.reshape(var_3167.astype('uint32'), [7, 5]), relay.reshape(var_3167.astype('uint32'), [7, 5]), )
call_3168 = func_1014_call(relay.reshape(var_3167.astype('uint32'), [7, 5]), relay.reshape(var_3167.astype('uint32'), [7, 5]), )
output = relay.Tuple([uop_3161,call_3166,var_3167,])
output2 = relay.Tuple([uop_3161,call_3168,var_3167,])
func_3171 = relay.Function([var_3156,var_3167,], output)
mod['func_3171'] = func_3171
mod = relay.transform.InferType()(mod)
mutated_mod['func_3171'] = func_3171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3171_call = mutated_mod.get_global_var('func_3171')
var_3173 = relay.var("var_3173", dtype = "float64", shape = (2, 10, 3))#candidate|3173|(2, 10, 3)|var|float64
var_3174 = relay.var("var_3174", dtype = "uint32", shape = (35, 1))#candidate|3174|(35, 1)|var|uint32
call_3172 = func_3171_call(var_3173,var_3174,)
output = call_3172
func_3175 = relay.Function([var_3173,var_3174,], output)
mutated_mod['func_3175'] = func_3175
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3216 = relay.var("var_3216", dtype = "float64", shape = (14, 7, 16))#candidate|3216|(14, 7, 16)|var|float64
uop_3217 = relay.acosh(var_3216.astype('float64')) # shape=(14, 7, 16)
bop_3220 = relay.divide(var_3216.astype('float64'), relay.reshape(uop_3217.astype('float64'), relay.shape_of(var_3216))) # shape=(14, 7, 16)
const_3224 = relay.const([[[9.431861,2.478355,8.649372,-0.639443,-4.466839,0.968058,5.919408,4.907558,-4.698476,0.208965,-4.696030,8.621879,-1.127650,5.328155,-2.644303,9.541278],[-9.387181,-4.982343,-7.402657,-7.060070,9.224379,7.798509,8.143034,0.713873,2.693160,-3.614669,9.910178,-7.476603,3.413577,-6.772138,-8.886793,8.838638],[1.626855,5.554126,-9.780956,-8.611505,6.504019,-2.493171,-4.276886,6.122698,-9.855801,-7.742255,8.265195,6.965532,-1.178999,-4.887059,1.099824,7.666484],[0.780121,0.450915,-7.214971,-0.704246,2.315151,-0.021547,-7.972941,1.073763,9.177942,-6.027518,-8.580211,4.261943,3.985433,-5.987224,5.663290,5.675626],[-4.755073,-8.708434,1.342695,-6.798509,1.307916,-8.137492,-5.594682,-4.550848,8.656737,9.676486,1.645903,-6.052385,-2.076990,8.858668,-7.538804,9.543338],[2.497662,-3.560035,-2.550182,5.128110,4.873696,4.950254,-4.889823,-7.411120,-0.731890,6.715589,-2.820939,-6.804773,-8.888071,5.836993,6.856088,8.894731],[-5.667267,0.747223,3.922750,1.286872,-2.186234,-2.665965,-5.143830,5.122435,-4.334353,-1.271553,-0.964628,-8.049075,7.200962,-6.223786,-3.248154,1.155294]],[[2.331326,6.940728,-5.380958,2.904941,0.108704,7.406240,-1.272202,-5.491449,9.607240,-6.115103,2.696592,7.352879,-9.869218,5.328943,1.392999,1.644177],[2.841556,5.167589,4.289094,5.320639,2.681613,7.940232,9.807903,-6.582174,-5.945219,-2.610175,3.167310,-9.313105,5.503208,-7.395836,4.880347,7.088034],[-3.454991,-3.556917,-2.425018,-1.614370,-9.117828,1.218023,0.871084,-8.088943,-3.969210,-8.046181,-9.951268,5.657891,-8.058705,4.307327,-4.094710,6.031232],[3.331234,-1.753381,2.027116,7.492970,-0.423682,6.497891,0.499468,-9.980385,-6.442449,4.936954,6.549208,4.728203,6.880201,0.660473,1.946340,-5.730247],[-2.607377,-9.524307,-9.642182,8.600747,4.522618,-3.640978,1.211527,-7.079843,2.922636,-1.912052,4.139040,0.670505,-5.849867,-0.379250,7.936899,2.649765],[2.668696,6.047393,9.181458,8.230387,6.639169,2.365450,-3.437212,-9.930790,-1.487581,-8.280796,-7.871357,-8.519658,4.572367,8.203790,2.586080,-7.481949],[-1.161434,-5.951321,3.634878,-2.825396,-4.129862,1.542802,-7.492141,-9.077496,-6.208779,-6.988107,-0.516448,-4.311256,8.799802,-4.224503,-9.785104,8.120163]],[[-8.146054,-4.218863,0.571648,-5.748722,4.631951,-7.947300,-4.019507,-3.752710,-6.950110,0.409881,0.181043,-4.637656,0.066219,6.386515,3.500779,3.961992],[5.350725,9.538568,-4.848117,-9.444003,7.571480,5.804319,2.261985,9.990974,-5.415854,9.250206,-7.484547,-6.145930,-6.132802,4.890868,0.955522,-7.113538],[-3.755203,6.516880,0.532057,-9.247161,9.732366,-1.071165,0.759325,-3.159584,8.704072,7.823832,9.438914,4.913184,-7.118608,9.895773,7.940935,-8.391579],[-1.677020,2.658334,4.266573,-5.314092,2.843166,8.460809,-9.066804,6.570172,4.720265,0.538655,-5.698547,9.369934,8.820685,-7.958814,-4.042910,0.378586],[2.519548,-2.467218,-5.635438,9.368501,-6.814682,8.943347,-0.845483,-5.526967,1.738354,-0.496515,-6.792727,-0.519557,-0.545068,7.993716,6.273267,3.290754],[5.290037,3.655341,9.206313,0.884773,-1.466571,-6.558441,3.138539,-5.879425,4.410445,5.072756,-6.943937,7.468102,-9.978423,1.417575,2.521766,-6.476759],[8.805401,1.218411,-4.831964,-9.314968,3.562149,3.491699,6.098865,2.127068,-3.445217,-5.631156,6.932103,-3.323480,-3.383798,9.876836,-4.322297,-8.139340]],[[-7.156316,-5.799478,1.947886,7.383821,-8.943932,8.366106,-3.783292,-8.461245,7.098261,-0.539683,-2.297199,0.965844,-5.917305,8.300289,-9.000100,-3.195168],[2.859257,-5.202702,2.739076,7.446324,-4.772665,3.433566,0.219599,-5.728533,0.231655,0.727195,8.931624,-3.146665,-9.897042,-2.243827,-5.396702,5.103018],[-6.508392,-6.767821,6.124118,5.259372,-0.865145,-2.042947,-3.553685,4.698812,4.329615,6.417059,7.837122,4.931980,2.939080,-5.579704,-3.636719,2.636988],[3.648767,0.288582,8.789105,9.700456,0.979094,-9.748261,-3.196757,4.200626,-3.674039,-0.624820,5.250046,0.103734,5.321280,-9.573586,0.476191,-3.876600],[8.142838,7.878914,-9.982058,-0.836358,5.312798,7.100990,-4.348389,2.994453,-7.091674,-5.149145,1.010743,-4.037751,-9.710811,5.329428,3.536151,-6.302140],[1.166738,1.356577,-0.292200,7.342693,-9.447365,4.171585,-6.822907,-2.217940,-8.678453,-2.074375,-7.095412,4.325178,9.389658,8.482630,-2.282814,2.328717],[5.538021,-8.856286,-6.820351,0.244468,-8.448359,-4.172216,-9.140240,7.357859,1.763666,-7.754771,5.729200,-9.330134,-0.986727,0.817033,-8.902010,-2.839649]],[[6.733087,4.237007,7.771045,6.097450,-3.953831,-6.461431,-6.133744,1.033346,3.461921,7.528194,1.973540,5.890206,2.546951,8.994027,8.791112,-4.715131],[-7.028656,-0.568927,-1.331034,4.907743,3.809939,2.146669,-2.541010,-8.802161,5.582712,-8.014681,9.508458,-6.485804,-6.040779,-8.716070,-5.834347,-3.559690],[3.653905,-9.325567,-7.154368,-5.106842,6.176627,8.166495,-7.352327,5.446938,-8.147211,9.170465,6.088921,-6.278466,6.607861,9.647099,9.521517,-5.892685],[-7.054390,0.943146,-9.943673,1.925199,6.898085,4.736683,-3.554623,6.894245,-6.741043,-5.555335,9.774134,7.412278,-0.975926,-8.003009,3.706487,-4.794131],[0.512472,-6.837080,9.107659,6.685102,2.254761,-2.379678,6.060838,-8.862313,-8.771245,2.171089,1.530832,-7.352134,1.153452,-6.468683,3.342257,-1.460696],[-5.479349,0.280268,-1.186998,-0.306044,3.570338,4.412252,5.932975,4.847804,5.196061,2.828036,1.107705,-0.944097,-3.339343,2.841226,7.661780,-7.020859],[1.488967,4.507071,-3.964030,5.382374,-1.903594,-2.685627,-6.122931,-1.277190,-7.548030,-0.497658,7.389052,-9.236724,8.953910,-4.311540,0.418773,-4.738032]],[[-2.091136,8.095380,-1.890345,-2.046076,6.017693,-1.681527,-5.296764,8.429968,-1.701098,5.862634,-9.130758,9.591624,3.191847,-1.137516,-8.876459,8.033313],[-1.662379,2.593054,6.896718,-1.946829,-6.075467,-3.702129,0.644162,9.872866,-6.241989,3.016193,-9.337746,-3.334341,-2.730492,-1.901679,-5.430029,8.516149],[-4.438985,2.447467,7.375777,0.315857,-6.390438,-7.029113,4.790436,8.916522,-0.449307,1.010131,6.419178,3.003254,-1.469368,-8.905915,4.162698,-9.348585],[-0.760055,-6.467524,7.315787,9.117101,5.207888,4.420736,4.991161,-5.025761,0.244494,-1.273569,-5.889611,2.903261,4.958886,8.571023,9.735576,4.422922],[8.643613,2.287506,2.863592,-6.508661,9.669815,7.377758,-3.108218,-2.227299,4.429271,-2.684167,-0.896351,1.309451,7.514155,5.524358,-3.500537,-9.059375],[-5.508586,-9.161156,-0.859776,-8.601650,-6.658826,-3.308498,-1.565514,-4.758047,7.212951,4.947094,-8.921672,2.805967,4.618568,0.832219,1.774037,4.749632],[4.806347,6.925514,-9.219977,3.450393,-9.303840,5.854389,5.999044,-5.290020,-0.979929,-7.447146,-0.949970,-3.370603,-4.528125,5.756392,5.068718,4.025268]],[[-9.322862,-8.036650,7.755223,0.416084,0.821495,-3.497950,8.477927,4.670621,-5.241711,-7.104904,6.290960,-4.033046,-0.453328,-4.196284,-4.296334,4.756930],[-2.690301,7.602401,4.410239,8.975026,0.605796,7.227035,0.265650,-2.706171,7.870798,-7.569251,9.751909,-7.962880,7.823855,4.874844,5.057319,-7.653908],[-2.837469,6.850756,1.850027,-0.107977,-1.715240,4.773679,-1.423789,1.610049,-8.012389,-2.414633,-6.266317,-9.763739,1.053252,4.420502,-8.396920,5.152038],[7.907881,-4.873158,6.967930,8.888160,9.838385,1.904917,-7.301436,4.185832,1.288461,-9.133085,-7.573227,2.147305,-1.580253,-6.211778,-4.761014,2.820437],[-6.710396,-3.663810,-1.698742,1.714085,-5.052869,7.904930,6.098027,-6.396072,-4.201101,-2.303158,0.589019,9.567350,-2.142405,-2.083886,8.638233,-6.600650],[8.929049,4.879335,-0.007517,6.175828,-7.974504,5.359761,2.808687,-7.240661,-8.748809,3.686431,-4.597348,4.085877,-3.210957,7.864109,8.104771,-0.342464],[6.488956,-6.302720,-6.416450,-0.764068,-4.450033,3.816552,0.564919,-2.972484,-3.522423,6.600689,-2.098661,-4.077045,-8.630903,-4.330770,0.934336,4.141886]],[[-5.292536,7.952365,3.794021,8.341867,2.358409,-7.450577,-8.326798,9.055587,-0.310829,8.989195,1.683655,8.787047,-4.767688,-9.096616,-4.114318,-1.790045],[7.445771,-8.785554,3.800705,4.140745,-7.587812,-0.205462,-0.998140,0.191524,-5.187181,6.785614,-9.775952,-2.832004,-7.395837,5.188845,-2.678967,9.204876],[5.157568,-9.994826,-4.457397,3.997025,6.561814,7.032694,4.006598,-7.155414,-0.840527,-6.329371,8.978417,6.868943,5.672753,-5.596611,-7.381835,3.652835],[5.879643,-5.435299,9.742111,-3.762726,3.349698,-7.695772,0.765412,9.838649,-8.624014,-2.131895,-6.905781,9.356242,-5.523569,6.168923,-0.901288,-4.859483],[-0.531474,2.870660,1.034048,4.861584,1.650195,5.353794,-5.465881,-1.569584,-5.323314,-1.606614,-2.250988,-1.754397,-9.533430,6.932779,6.689036,-5.947129],[8.512271,3.995601,-6.961522,2.679725,4.514613,-3.015592,8.226288,-2.783132,0.643938,-1.432605,7.187544,8.027407,-6.543715,-2.587864,-5.920297,-8.232158],[-2.377348,-7.515750,-0.452829,-9.050840,4.029847,5.542338,-7.624740,-5.500195,0.310395,8.571355,-4.175480,-6.079523,-2.159568,-6.215870,4.685278,-9.197043]],[[-0.908114,-0.923442,-3.266258,-8.724609,5.455513,8.778305,-5.695985,-7.891408,-0.691297,-0.225409,-7.319462,-9.875758,4.495113,1.443903,0.037406,-1.450398],[5.720063,-1.819863,1.404605,6.271651,-4.449775,-7.603137,-5.950908,-7.898880,4.159237,0.358664,9.582463,-8.621563,-4.999222,-2.589900,2.281050,-1.900658],[1.283806,-8.954752,8.361717,-0.061541,-1.991071,-3.740885,7.158349,-9.907643,5.387834,-6.004786,6.075819,5.843497,-5.615302,7.359399,-8.580257,-7.807247],[-0.778890,3.359826,-2.404550,8.485102,-2.474884,-8.091230,2.768832,-3.970250,-5.384865,8.399160,5.916355,-6.452801,-8.003768,4.481716,2.468627,0.766575],[0.605198,6.262152,-2.437383,-8.334257,8.732982,-4.790423,7.233171,3.859564,4.530804,5.465349,-2.060451,-2.351542,8.712283,8.992666,-3.003217,-0.359984],[1.273481,9.736903,3.644017,1.678834,-5.039189,6.860862,-2.998145,-0.374163,0.016454,6.740963,4.936683,7.024663,8.293483,2.736250,2.942042,4.784727],[5.794101,-8.995352,4.259534,0.970007,0.355791,3.076870,-5.247166,2.023664,-5.103174,3.652969,-1.780116,-9.586800,9.527330,1.227316,-5.660689,-3.629689]],[[-9.937939,-9.367962,-4.914510,2.749799,-3.337944,6.858771,-4.005652,-2.326471,5.598184,-3.879442,-0.549158,-9.079073,-1.523403,-8.209836,-0.338988,3.610937],[0.838611,-5.336241,5.712521,5.512764,8.336906,-1.410505,0.380575,-8.676982,-5.584755,1.391656,7.258911,2.125942,0.161600,-0.472925,-2.436397,-9.596657],[2.054895,3.900373,1.407425,-4.179881,5.199556,-1.710828,-5.130147,-8.483325,-7.689094,1.624520,3.289356,5.224950,8.290463,-6.932245,1.075106,6.670991],[-1.100914,-7.865341,-9.064637,-8.303161,5.930752,-7.646581,2.401317,8.725559,-9.464530,3.907973,6.137893,7.902955,8.088951,-6.430089,-9.088092,9.406974],[-0.253165,-1.173642,8.691626,-0.296119,-1.490545,-5.220307,8.021485,9.293582,-1.489663,6.349007,8.896679,-3.798951,3.511328,-8.234115,6.122202,-6.025548],[5.080345,-5.511819,4.436114,7.957764,5.924986,6.110679,9.605709,5.933746,6.073213,6.084212,7.203815,4.145214,-3.140205,-3.803187,-2.236353,3.780019],[-3.971429,-7.848522,0.866999,2.271063,3.827375,3.145554,5.710019,-1.656515,-0.517294,9.169178,-0.279340,-5.906707,-1.625803,-2.544112,6.027183,-5.259751]],[[7.367508,2.587441,6.199449,9.102392,7.146218,2.313580,9.401247,6.664858,-6.137309,5.767400,-9.058134,4.940333,1.040439,0.214831,-1.542608,-9.786273],[-4.263056,-4.968918,-7.322638,-3.397001,-3.286220,-3.798223,2.669036,0.104561,-5.922231,-2.955569,-1.334781,-3.844917,5.393002,-3.819920,1.513038,0.989447],[-6.118003,9.226649,-2.297642,-5.295950,-6.691071,-8.528189,7.354056,2.664107,1.610098,-7.450922,2.575732,6.174539,-7.364419,-3.164759,-9.695294,1.792040],[0.196732,9.683526,-3.183796,3.157507,-1.296606,-0.284385,2.871560,8.536132,-4.389541,9.042811,-0.697601,-5.039025,-1.461085,7.444102,4.663749,-5.962856],[7.430082,-7.805540,1.274175,-5.697369,2.113835,3.293906,-2.878531,2.396290,-5.379699,4.460981,3.819211,6.236938,-9.956913,-7.799303,3.357789,3.269258],[-9.490181,-4.190307,1.826246,6.433687,-9.950552,6.274565,-8.397765,8.900606,0.047128,3.916582,-4.863474,9.937978,1.564329,-7.656525,-7.403559,-0.906617],[7.963055,-9.915761,7.531201,-8.321880,7.574398,8.258137,-0.192923,-6.175396,0.561472,3.356364,7.516147,-9.503541,-5.456220,5.542377,-9.989620,-5.784148]],[[5.850340,-4.693638,-6.288575,-3.713697,7.167730,9.950474,-3.955625,9.517084,-6.209639,3.838275,2.036148,-5.117982,7.832026,-4.327566,2.016623,9.765810],[-7.144346,-3.548022,-2.219254,-1.202823,-4.644188,-4.798508,3.063578,-0.166735,-5.370982,3.984432,7.662428,3.424805,-0.246435,6.123620,-9.332317,-6.750606],[-5.590465,-7.720115,5.668814,-3.521685,-6.612407,-5.541591,1.002215,6.138361,-1.824703,2.809786,9.836703,-6.949465,9.794507,4.984719,3.919223,-4.176745],[-5.674868,-2.666117,6.168514,1.855047,3.844027,8.351553,-8.153151,-7.483575,-6.181764,9.752519,6.550969,8.157597,1.550239,-2.657446,-8.672783,-2.040522],[8.555159,-1.562344,-0.179619,7.330095,4.916050,-6.553717,0.501805,-7.724539,-7.248101,1.903506,-2.200446,-9.542517,-9.880541,-1.402790,6.414395,3.798148],[5.810094,0.056417,-2.329674,-1.319001,-6.909604,0.615227,2.893491,1.826856,5.844811,5.307154,6.370585,1.743751,9.871333,-0.957518,6.001286,4.772072],[2.734382,-3.001092,2.203613,4.016049,1.034226,-7.314417,-1.993589,-0.696724,-9.766077,5.829353,-8.243703,2.890088,-6.302933,-1.659453,-3.447708,7.149657]],[[1.042862,8.977192,-4.892682,-4.439703,1.535408,-0.946940,-6.654561,-9.492425,5.212272,-2.804846,-6.057595,6.989223,8.078146,-3.091932,4.080445,4.874875],[0.435750,-8.877603,8.854663,9.809367,1.001707,-7.296423,4.937594,-0.773725,7.825626,-6.476751,5.592127,-6.841115,5.635154,-4.329722,-9.575264,8.683503],[-9.909644,2.265816,-2.063268,-0.898974,3.026176,6.607315,5.199667,3.201326,-3.650032,3.772633,7.243519,-0.667339,-2.052480,5.358184,-6.024219,9.390473],[-6.028608,-8.484086,4.182924,-5.241006,-0.979486,9.254416,-6.684265,-5.372204,-0.728536,-0.128039,6.134227,0.363753,6.894588,0.638372,4.972744,-2.265950],[1.351585,9.516341,5.243966,1.578684,4.987604,-9.201703,3.006980,4.934888,-9.068397,0.568868,-9.943487,7.600577,-6.355474,-8.599765,6.047394,8.998108],[2.785657,-8.213832,1.466498,-0.441711,-8.440647,-7.839994,3.949390,-6.984397,5.793819,-9.348748,-4.420636,1.567608,-8.416001,-2.365108,-1.686671,-6.736713],[-0.406324,-3.863468,8.217431,9.002334,1.317467,8.092075,6.452427,-4.812898,-8.893562,-2.899131,3.529160,5.219057,9.654354,5.546605,4.401797,-4.386065]],[[-8.979969,7.286738,7.216624,-1.606078,-7.078671,-8.325501,9.273052,-6.949849,5.639782,-3.126561,-4.322367,-4.201064,5.920092,8.939023,2.480224,7.960689],[8.682845,6.552358,8.023491,3.428895,-8.509975,5.048188,6.320463,0.463499,-0.756382,1.847341,2.156187,2.132395,9.508998,8.363670,-4.204972,5.032391],[-3.300332,-4.646684,-0.785625,6.858207,5.857975,-0.793137,0.990612,7.562775,6.785825,-4.237771,-8.801265,0.343170,1.498446,0.367655,1.342720,7.394714],[8.067413,5.610116,4.232340,-0.928245,1.703921,6.524855,-8.020684,7.071075,6.526472,-7.971780,0.599831,-9.307312,2.269030,-4.787356,-6.399182,-8.037637],[7.761238,6.403391,-3.220965,-1.032287,-9.156075,-3.480266,-1.182686,-7.269160,-9.049798,-8.185517,-3.345256,-9.953213,-4.979040,0.145589,-8.643367,-0.521580],[5.418897,-6.937838,-3.074761,-9.337978,9.767202,1.974633,-4.815946,8.886178,9.440144,-3.774612,-5.845340,1.773963,4.875655,2.507871,-7.411291,0.521428],[8.313167,4.346926,-0.738742,-9.823221,2.021747,-0.740267,8.107971,-6.162346,1.184779,8.935360,6.903834,-4.815385,5.280783,-3.305108,6.242268,5.737279]]], dtype = "float64")#candidate|3224|(14, 7, 16)|const|float64
bop_3225 = relay.bitwise_and(bop_3220.astype('int32'), relay.reshape(const_3224.astype('int32'), relay.shape_of(bop_3220))) # shape=(14, 7, 16)
bop_3231 = relay.right_shift(const_3224.astype('uint8'), relay.reshape(bop_3220.astype('uint8'), relay.shape_of(const_3224))) # shape=(14, 7, 16)
func_2898_call = mod.get_global_var('func_2898')
func_2902_call = mutated_mod.get_global_var('func_2902')
var_3237 = relay.var("var_3237", dtype = "float64", shape = (312,))#candidate|3237|(312,)|var|float64
call_3236 = relay.TupleGetItem(func_2898_call(relay.reshape(var_3237.astype('float64'), [4, 13, 6]), relay.reshape(var_3237.astype('float64'), [4, 13, 6]), ), 0)
call_3238 = relay.TupleGetItem(func_2902_call(relay.reshape(var_3237.astype('float64'), [4, 13, 6]), relay.reshape(var_3237.astype('float64'), [4, 13, 6]), ), 0)
uop_3243 = relay.asinh(var_3237.astype('float64')) # shape=(312,)
bop_3248 = relay.minimum(bop_3220.astype('uint32'), relay.reshape(bop_3225.astype('uint32'), relay.shape_of(bop_3220))) # shape=(14, 7, 16)
output = relay.Tuple([bop_3231,call_3236,uop_3243,bop_3248,])
output2 = relay.Tuple([bop_3231,call_3238,uop_3243,bop_3248,])
func_3251 = relay.Function([var_3216,var_3237,], output)
mod['func_3251'] = func_3251
mod = relay.transform.InferType()(mod)
mutated_mod['func_3251'] = func_3251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3251_call = mutated_mod.get_global_var('func_3251')
var_3253 = relay.var("var_3253", dtype = "float64", shape = (14, 7, 16))#candidate|3253|(14, 7, 16)|var|float64
var_3254 = relay.var("var_3254", dtype = "float64", shape = (312,))#candidate|3254|(312,)|var|float64
call_3252 = func_3251_call(var_3253,var_3254,)
output = call_3252
func_3255 = relay.Function([var_3253,var_3254,], output)
mutated_mod['func_3255'] = func_3255
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3316 = relay.var("var_3316", dtype = "float64", shape = (3, 2, 14))#candidate|3316|(3, 2, 14)|var|float64
var_3317 = relay.var("var_3317", dtype = "float64", shape = (3, 2, 14))#candidate|3317|(3, 2, 14)|var|float64
bop_3318 = relay.divide(var_3316.astype('float64'), relay.reshape(var_3317.astype('float64'), relay.shape_of(var_3316))) # shape=(3, 2, 14)
uop_3321 = relay.sqrt(var_3317.astype('float32')) # shape=(3, 2, 14)
uop_3324 = relay.acos(uop_3321.astype('float64')) # shape=(3, 2, 14)
func_2768_call = mod.get_global_var('func_2768')
func_2771_call = mutated_mod.get_global_var('func_2771')
var_3327 = relay.var("var_3327", dtype = "float32", shape = (44,))#candidate|3327|(44,)|var|float32
call_3326 = func_2768_call(relay.reshape(var_3327.astype('float32'), [11, 4]))
call_3328 = func_2768_call(relay.reshape(var_3327.astype('float32'), [11, 4]))
func_1811_call = mod.get_global_var('func_1811')
func_1814_call = mutated_mod.get_global_var('func_1814')
const_3336 = relay.const([-6.429628,5.429885,-8.379321,4.876546,5.459799,-5.962403,1.501648,4.697597,-8.543414,8.774167,7.621129,2.427473,8.765662,-3.001512,7.202783,2.668382,-9.275237,-8.720466,-8.895783,-5.560951,-7.273087,8.771398,3.446061,8.520869,4.144889,0.999802,-6.302766,5.884904,-6.697546,-7.567773,1.245640,1.028447,9.236955,-5.609471,5.383026,7.512153,6.935694,8.994490,0.383287,-6.078057,3.034748,0.011384,5.328819,1.175526,9.872924,5.400430,1.446447,-0.064129,-5.109650,8.872949,8.655537,8.055930,2.318025,7.142055,5.676181,4.809613,7.139159,-7.571260,7.212513,-5.549001,-5.305090,6.855968,-3.211821,-8.168715,7.557372,-8.662379,-1.114157,6.681497,3.333138,7.421650,4.857375,7.249158,8.807408,3.716420,-1.589228,2.522968,3.656428,-6.239939,-1.473083,-1.529036,-9.530963,-0.634155,-0.399637,-1.120617,-4.562059,-4.064680,-9.178782,4.870200,-0.264740,7.214879,-1.050931,3.290780,0.055479,-2.799666,-5.735154,5.261458,9.930622,6.606392,-4.363512,2.965528,2.342567,-8.368940,-5.134343,-2.312947,-9.787999,4.123753,-5.582608,-2.972965,-3.803990,-3.220681,3.116316,-0.506647,4.063302,-7.886058,3.161683,8.244512,5.190457,0.454001,6.378696,-4.477849,4.018662,-6.137428,-4.854391,6.819884,3.514548,4.562066,-4.129138,-8.973399,-6.268745,9.195951,-9.211044,-0.544019,-5.656489,0.177001,7.046842,7.377756,3.049839,6.986336,-1.774127,5.487583,-0.605055,-0.090147,-9.102188,-2.453691,5.045397,-9.928148,-0.664159,9.527110,-0.847247,-6.682875,9.081883,-0.977259,-0.229791,-8.034949,4.743718,-9.522505,9.625047,-7.040637,7.849585,-3.313211,-1.491530,1.351406,5.223117,2.099539,6.061051,-0.659346,2.000311,-5.184099,-9.145497,-8.829487,-5.011951,1.065223,7.146901,5.234305,-1.650504,3.647917,-7.484819,-8.718281,7.705183,-1.684436,9.055827,4.066972,5.669669,-4.505808,8.547940,1.817048,-0.037531,9.631556,-8.044019,-8.379186,-5.607292,1.235625,-5.628410,-9.559091,6.202403,1.730413,3.548254,3.990136,-2.726947,-3.305566,-9.384381,9.404646,-8.114613,-4.566398,1.871815,-8.631468,-2.266448,-7.323697,0.999304,7.889550,7.006371,5.969085,2.648984,-9.497008,1.425145,2.549193,-1.888463,-5.869910,0.240605,-9.259954,2.150161,-4.618530,-8.295327,3.812522,-2.393583,4.047839,5.768033,-3.690625,1.585322,-7.528245,-8.059419,5.792725,-8.598935,3.769534,-7.120995,-2.460236,-0.814603,-6.087531,9.760978,-4.403751,-9.765773,-4.559993,7.914085,-8.102224,3.993049,9.586753,6.357379,-5.663616,-2.964718,8.599249,5.357998,-1.947041,6.731693,5.343918,-3.491373,-7.765482,6.122085,-2.996936,4.830891,9.497479,0.918442,-5.021234,3.809184,-5.336705,8.607609,5.329714,9.615083,-1.418652,-6.090518,-9.002457,-3.784069,7.053208,2.250987,-6.168756,-5.585533,9.915899,-4.564711,-7.597912,-2.823716,8.134912,4.776851,3.776643,-2.439290,2.090195,3.807846,-6.164186,-8.529633,9.597219,7.005387,-3.712482,8.179601,-8.537451,-4.729625,-2.284626,1.802365,-0.670301,-9.389256,-3.019261,4.249558,9.520854,1.534578,-6.906437,6.390819,2.958522,1.220224,-0.457869,8.929462,-5.355443,-4.637688,-2.585874,-2.228599,-7.134097,-4.289688,-3.364392,-6.545418,-5.718062,6.522540,8.906538,-4.390736,6.493571,-4.108107,1.683409,-9.286405,7.920273,-2.161447,6.506104,-4.192153,9.780711,-7.195866,2.441534,0.904125,-3.156255,-8.077749,0.043378,-4.792572,9.338404,-3.447932,-2.033681,-3.011806,2.343750,8.888171,-4.110859,-0.209463,2.216081,5.358137,8.435142,-8.023046,4.110300,0.699513,-3.162792,2.427328,6.068647,-0.896638,4.783467,8.230838,6.587432,4.110404,5.260004,5.439712,-9.232167,6.242500,8.469103,8.076901,-2.050636,6.924763,-5.668485,-5.844481,-7.459827,9.798263,-9.916321,3.767875,9.836310,7.969367,-8.623341,6.599541,1.189564,1.043327,6.311275,3.860024,6.944759,-9.124554,0.646206,5.629800,3.287671,1.325291,-2.045990,1.403924,2.449458,-9.005426,7.448400,-1.263039,-9.879251,0.507035,-6.010206,2.175743,1.511340,7.788887,8.510110,-5.452264,5.528147,-4.660491,-6.103174,-8.473824,-5.035108,-6.051474,-0.742044,-4.396092,-9.901607,-8.617787,-4.410284,-5.907789,5.095259,-4.862975,5.976622,6.668765,5.335353,-8.382609,8.311106,8.680750,4.753119,3.135811,2.386544,-5.690787,6.056299,-0.523534,-5.656709,1.773578,5.295688,-8.646368,6.616373,2.518162,3.084784,-3.413814,-3.787412,-7.177060,9.643694,-3.688957,0.166068,-8.074598,7.388634,-9.227559,-0.235393,-2.916694,-2.934193,-2.345678,-2.855509,-0.245009,8.753272,9.293826,-2.144978,2.041559,9.065696,-4.384672,-2.579119,-0.091307,-6.236857,2.226448,-7.410726,-7.692531,6.694337,-3.191558,-3.156500,3.166696,-0.475538,-1.701993,0.126146,-6.925080,6.285738,6.447633,-5.263909,2.573079,8.794206,4.861962,-4.728484,-9.453324,-9.210099,-3.474730,8.372889,-1.224823,-9.462887,-1.253640,-6.582958,-4.108841,-1.118390,0.552621,6.567062,5.093137,3.485970,6.027791,-7.499925,2.361647,-4.205772,6.443395,-2.103468,4.163830,-6.547685,-3.098735,3.457814,-9.941663,-1.473431,-7.831886,1.130545,-2.133102,-5.203873,-0.501680,0.400332,6.785812,1.624359,9.682733,-5.427302,-3.771652,3.793539,0.356114,-2.036126,-6.119526,8.786741,-1.280400,-6.275144,6.694246,-1.794703,2.970647,-0.571319,-7.342069,7.153284,9.932513], dtype = "float64")#candidate|3336|(525,)|const|float64
var_3337 = relay.var("var_3337", dtype = "float32", shape = (14,))#candidate|3337|(14,)|var|float32
call_3335 = relay.TupleGetItem(func_1811_call(relay.reshape(const_3336.astype('float64'), [5, 15, 7]), relay.reshape(var_3337.astype('float32'), [14, 1]), ), 0)
call_3338 = relay.TupleGetItem(func_1814_call(relay.reshape(const_3336.astype('float64'), [5, 15, 7]), relay.reshape(var_3337.astype('float32'), [14, 1]), ), 0)
uop_3345 = relay.erf(uop_3324.astype('float32')) # shape=(3, 2, 14)
bop_3361 = relay.less_equal(uop_3345.astype('bool'), relay.reshape(uop_3321.astype('bool'), relay.shape_of(uop_3345))) # shape=(3, 2, 14)
var_3372 = relay.var("var_3372", dtype = "bool", shape = (3, 2, 14))#candidate|3372|(3, 2, 14)|var|bool
bop_3373 = relay.left_shift(bop_3361.astype('uint8'), relay.reshape(var_3372.astype('uint8'), relay.shape_of(bop_3361))) # shape=(3, 2, 14)
uop_3382 = relay.log(bop_3361.astype('float32')) # shape=(3, 2, 14)
output = relay.Tuple([bop_3318,call_3326,var_3327,call_3335,const_3336,var_3337,bop_3373,uop_3382,])
output2 = relay.Tuple([bop_3318,call_3328,var_3327,call_3338,const_3336,var_3337,bop_3373,uop_3382,])
func_3384 = relay.Function([var_3316,var_3317,var_3327,var_3337,var_3372,], output)
mod['func_3384'] = func_3384
mod = relay.transform.InferType()(mod)
var_3385 = relay.var("var_3385", dtype = "float64", shape = (3, 2, 14))#candidate|3385|(3, 2, 14)|var|float64
var_3386 = relay.var("var_3386", dtype = "float64", shape = (3, 2, 14))#candidate|3386|(3, 2, 14)|var|float64
var_3387 = relay.var("var_3387", dtype = "float32", shape = (44,))#candidate|3387|(44,)|var|float32
var_3388 = relay.var("var_3388", dtype = "float32", shape = (14,))#candidate|3388|(14,)|var|float32
var_3389 = relay.var("var_3389", dtype = "bool", shape = (3, 2, 14))#candidate|3389|(3, 2, 14)|var|bool
output = func_3384(var_3385,var_3386,var_3387,var_3388,var_3389,)
func_3390 = relay.Function([var_3385,var_3386,var_3387,var_3388,var_3389,], output)
mutated_mod['func_3390'] = func_3390
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3488 = relay.var("var_3488", dtype = "int8", shape = (12, 6, 4))#candidate|3488|(12, 6, 4)|var|int8
var_3489 = relay.var("var_3489", dtype = "int8", shape = (12, 6, 4))#candidate|3489|(12, 6, 4)|var|int8
bop_3490 = relay.subtract(var_3488.astype('int8'), relay.reshape(var_3489.astype('int8'), relay.shape_of(var_3488))) # shape=(12, 6, 4)
func_1510_call = mod.get_global_var('func_1510')
func_1515_call = mutated_mod.get_global_var('func_1515')
var_3497 = relay.var("var_3497", dtype = "float64", shape = (630,))#candidate|3497|(630,)|var|float64
var_3498 = relay.var("var_3498", dtype = "uint8", shape = (90,))#candidate|3498|(90,)|var|uint8
var_3499 = relay.var("var_3499", dtype = "uint8", shape = (810,))#candidate|3499|(810,)|var|uint8
call_3496 = relay.TupleGetItem(func_1510_call(relay.reshape(var_3497.astype('float64'), [10, 7, 9]), relay.reshape(var_3498.astype('uint8'), [90,]), relay.reshape(var_3499.astype('uint8'), [810,]), ), 3)
call_3500 = relay.TupleGetItem(func_1515_call(relay.reshape(var_3497.astype('float64'), [10, 7, 9]), relay.reshape(var_3498.astype('uint8'), [90,]), relay.reshape(var_3499.astype('uint8'), [810,]), ), 3)
func_1811_call = mod.get_global_var('func_1811')
func_1814_call = mutated_mod.get_global_var('func_1814')
const_3502 = relay.const([[-0.356478],[-3.608275],[-1.170610],[0.838036],[-5.832356],[-0.843601],[-9.741280],[6.353634],[7.939820],[9.111257],[8.754267],[-6.756844],[-1.119347],[6.316259],[1.760526],[-9.228730],[5.733490],[-4.803855],[0.843335],[6.551355],[0.495509],[-5.790221],[0.589781],[9.430891],[-4.818030],[2.392497],[3.626096],[-8.030415],[9.922378],[-7.360890],[-7.163248],[6.157481],[2.426385],[8.998735],[7.086850],[-3.946330],[5.334696],[-2.608128],[-3.899111],[5.319965],[-1.154050],[6.045289],[-2.862946],[-1.811245],[3.198525],[-1.500906],[1.526321],[7.372243],[8.896994],[-3.209486],[4.673854],[-6.565776],[7.720984],[-7.712217],[-6.038632],[2.376729],[-5.508708],[-5.556333],[-6.167659],[-8.225971],[4.742754],[5.125502],[-7.699528],[8.978282],[-1.738393],[-9.352242],[-0.465517],[-2.670519],[5.240894],[2.280892],[-1.458423],[1.628670],[6.282974],[-8.878926],[-1.355305],[2.833683],[5.952179],[-3.951045],[-3.658280],[-5.990788],[6.311837],[-5.557463],[8.424724],[-7.406442],[1.589904],[-5.894598],[-2.213537],[-1.903339],[8.637659],[6.335979],[-7.046438],[0.716052],[2.895332],[5.914066],[6.120834],[-7.324304],[1.574274],[-8.884185],[0.788983],[0.368414],[-8.338787],[4.107019],[9.565099],[6.435422],[-8.179553],[-5.194676],[6.227436],[-9.664013],[-9.845418],[-3.850644],[6.193703],[-9.238312],[-2.482465],[2.776537],[9.220747],[-1.513435],[-3.504246],[-9.576464],[-9.861994],[-9.301514],[-1.428265],[3.320040],[-2.148070],[3.109858],[4.094477],[-5.400706],[-0.313946],[6.681399],[5.595578],[0.951228],[-9.695371],[9.555749],[6.140397],[-6.823395],[0.050003],[-8.602947],[-7.389817],[5.932436],[8.400107],[1.341667],[0.452023],[-4.306140],[-5.435144],[-5.263312],[-7.959013],[8.778442],[7.060153],[-4.202020],[-0.331766],[-8.102241],[1.629328],[-3.448398],[-2.747805],[2.107127],[-0.130956],[9.716826],[-4.358371],[3.965734],[6.209500],[7.020858],[2.398258],[-7.320191],[6.298862],[6.367103],[-1.411176],[5.226545],[-7.581824],[3.170740],[0.463034],[4.804421],[1.358633],[8.760083],[-8.126052],[-9.725860],[-0.523743],[6.099388],[-7.919883],[1.803649],[-4.684343],[-6.284773],[-6.968427],[0.127172],[1.058548],[-7.718697],[0.932323],[-9.173182],[-7.789680],[-8.652320],[-2.545787],[-0.613692],[-9.663373],[2.890569],[-9.637568],[-9.344368],[8.193812],[1.698781],[-8.074070],[3.411911],[3.604772],[3.581973],[2.729380],[3.604861],[7.237407],[-6.785530],[-6.689536],[3.673277],[-7.764750],[-2.606535],[9.705705],[-0.632921],[6.175811],[-0.184425],[-5.544653],[5.564476],[9.479381],[-9.996338],[-6.668463],[-7.639522],[1.930837],[1.451336],[-2.314599],[4.829762],[4.943495],[5.667400],[-9.500518],[-7.963492],[5.087490],[-7.776984],[-6.512119],[4.746937],[-9.318300],[-4.672271],[4.796708],[-9.067789],[8.915355],[-5.462092],[-2.320997],[-4.293339],[1.455460],[-7.222449],[0.537153],[7.477084],[-1.463225],[-8.552638],[1.059356],[-5.388709],[5.522540],[-1.528817],[-4.292822],[-1.166358],[6.670904],[5.025360],[-4.656499],[6.869141],[4.866703],[6.527965],[-9.688504],[7.242823],[-3.506517],[6.088742],[9.459402],[0.168781],[-0.033457],[2.791875],[2.599926],[-1.725047],[-5.021661],[-2.654732],[-0.907602],[2.673057],[-6.156115],[-6.128939],[0.259016],[5.910282],[-5.903673],[-5.137963],[-0.766947],[-2.902499],[7.681877],[5.168288],[8.161862],[9.574654],[8.099378],[-4.568255],[-1.113187],[9.809307],[3.637427],[7.349560],[3.197225],[-8.354309],[-5.385180],[2.238425],[1.247350],[9.837342],[3.874730],[3.505318],[3.456743],[5.245012],[-2.271924],[-8.963227],[9.350476],[3.069855],[2.745063],[2.576654],[2.282084],[-9.982940],[-0.809246],[9.436677],[-1.555821],[2.787630],[5.199138],[-4.515370],[6.084404],[-5.445048],[-0.630905],[-7.775324],[-9.777325],[-6.892637],[9.269609],[3.283528],[1.176961],[-9.402435],[2.154528],[0.220657],[-4.524267],[-3.793488],[2.919925],[-2.616238],[-6.761457],[5.121810],[2.450203],[-9.441401],[7.848131],[-0.216088],[-5.536532],[-9.347360],[1.805272],[-8.514577],[-5.451119],[-2.854182],[-2.913325],[-1.421451],[-5.615461],[-2.194655],[7.876098],[1.719651],[-8.677936],[8.484755],[-3.253662],[-5.618658],[7.866240],[-2.015910],[0.398686],[6.766496],[7.365170],[-0.117356],[-3.175342],[9.530307],[-2.609608],[0.240287],[2.236585],[-3.336195],[-1.112783],[-6.985272],[7.951065],[-7.021161],[1.375603],[-0.547678],[7.728665],[-3.900222],[8.390449],[-9.062208],[6.925337],[-3.642609],[4.990117],[-2.403713],[-2.540505],[-0.855607],[-4.440312],[6.604949],[0.686187],[-0.651922],[2.727875],[0.541490],[-1.096098],[6.716420],[2.490288],[-5.467296],[4.140899],[-4.262334],[-8.008931],[-9.040135],[2.208194],[-9.072579],[6.477091],[-0.602506],[1.612152],[8.765846],[8.193715],[0.930584],[-2.454773],[7.002624],[-2.148786],[-6.451275],[9.060752],[-8.615208],[7.909110],[-4.985902],[-8.922154],[-1.102015],[4.906899],[-1.336035],[5.761097],[3.945483],[3.890675],[1.572717],[9.575883],[8.726485],[-5.286822],[3.670309],[-6.811515],[0.525893],[-5.138209],[-8.894266],[-7.220129],[-4.977775],[3.353180],[-6.766723],[-2.242581],[4.539845],[-7.796721],[3.279978],[-1.838722],[5.422060],[0.754808],[-9.010805],[2.862940],[8.501242],[4.851634],[-3.016196],[6.419389],[8.434618],[9.067886],[5.729480],[6.743052],[1.841500],[1.964889],[0.930699],[1.708238],[-5.670696],[-3.192356],[-6.346061],[8.064094],[3.618005],[-3.275675],[-7.207172],[4.633375],[-4.260131],[-8.790883],[-8.958297],[1.368225],[1.209925],[9.744810],[-4.991087],[-3.120489],[1.688034],[1.784449],[-7.493173],[6.045406],[8.487636],[3.838443],[2.127153],[-4.858501],[1.599412],[-4.267309],[-4.557560],[-7.732911],[-1.400069],[4.781694],[-3.935635],[-2.174886],[-9.426224],[-8.956764],[-2.658730],[-6.033172],[3.046280],[4.074203],[-8.635803],[-2.025682],[-5.305581],[-8.032106],[-7.758282],[5.360488],[-8.055985],[5.587255],[-2.386606],[-9.946069],[4.982379],[6.570833],[-5.728284],[-7.587670],[9.836994],[8.137122],[3.799835],[7.141016],[-0.252536],[-5.314631],[-0.720404],[4.306447],[-2.747412],[-8.734159],[-5.790872],[6.420712],[5.637125],[5.007889],[2.092767],[0.901999],[-5.199501],[-7.590689],[-3.636261],[4.128147],[9.075362],[-7.374910],[7.400863],[-6.834663]], dtype = "float64")#candidate|3502|(525, 1)|const|float64
var_3503 = relay.var("var_3503", dtype = "float32", shape = (14,))#candidate|3503|(14,)|var|float32
call_3501 = relay.TupleGetItem(func_1811_call(relay.reshape(const_3502.astype('float64'), [5, 15, 7]), relay.reshape(var_3503.astype('float32'), [14, 1]), ), 0)
call_3504 = relay.TupleGetItem(func_1814_call(relay.reshape(const_3502.astype('float64'), [5, 15, 7]), relay.reshape(var_3503.astype('float32'), [14, 1]), ), 0)
func_1613_call = mod.get_global_var('func_1613')
func_1617_call = mutated_mod.get_global_var('func_1617')
var_3510 = relay.var("var_3510", dtype = "float64", shape = (728,))#candidate|3510|(728,)|var|float64
call_3509 = relay.TupleGetItem(func_1613_call(relay.reshape(var_3510.astype('float64'), [4, 14, 13]), relay.reshape(var_3510.astype('float64'), [4, 14, 13]), relay.reshape(var_3499.astype('uint8'), [810,]), ), 0)
call_3511 = relay.TupleGetItem(func_1617_call(relay.reshape(var_3510.astype('float64'), [4, 14, 13]), relay.reshape(var_3510.astype('float64'), [4, 14, 13]), relay.reshape(var_3499.astype('uint8'), [810,]), ), 0)
bop_3520 = relay.bitwise_xor(bop_3490.astype('int64'), relay.reshape(var_3488.astype('int64'), relay.shape_of(bop_3490))) # shape=(12, 6, 4)
output = relay.Tuple([call_3496,var_3497,var_3498,var_3499,call_3501,const_3502,var_3503,call_3509,var_3510,bop_3520,])
output2 = relay.Tuple([call_3500,var_3497,var_3498,var_3499,call_3504,const_3502,var_3503,call_3511,var_3510,bop_3520,])
func_3529 = relay.Function([var_3488,var_3489,var_3497,var_3498,var_3499,var_3503,var_3510,], output)
mod['func_3529'] = func_3529
mod = relay.transform.InferType()(mod)
mutated_mod['func_3529'] = func_3529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3529_call = mutated_mod.get_global_var('func_3529')
var_3531 = relay.var("var_3531", dtype = "int8", shape = (12, 6, 4))#candidate|3531|(12, 6, 4)|var|int8
var_3532 = relay.var("var_3532", dtype = "int8", shape = (12, 6, 4))#candidate|3532|(12, 6, 4)|var|int8
var_3533 = relay.var("var_3533", dtype = "float64", shape = (630,))#candidate|3533|(630,)|var|float64
var_3534 = relay.var("var_3534", dtype = "uint8", shape = (90,))#candidate|3534|(90,)|var|uint8
var_3535 = relay.var("var_3535", dtype = "uint8", shape = (810,))#candidate|3535|(810,)|var|uint8
var_3536 = relay.var("var_3536", dtype = "float32", shape = (14,))#candidate|3536|(14,)|var|float32
var_3537 = relay.var("var_3537", dtype = "float64", shape = (728,))#candidate|3537|(728,)|var|float64
call_3530 = func_3529_call(var_3531,var_3532,var_3533,var_3534,var_3535,var_3536,var_3537,)
output = call_3530
func_3538 = relay.Function([var_3531,var_3532,var_3533,var_3534,var_3535,var_3536,var_3537,], output)
mutated_mod['func_3538'] = func_3538
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3624 = relay.const([[0.163764,-5.878137,-1.595449,1.400879,-2.581801],[7.573906,4.119941,-6.114265,5.820066,6.367026],[-9.695236,5.067713,1.576940,-5.177380,-4.419554],[-2.285685,-8.781059,-8.620475,-4.675433,3.302076],[-3.251867,9.667216,1.681088,-1.802986,-1.825763],[-1.577032,-7.011603,-4.290852,2.970468,-4.515159],[2.635625,6.304302,4.734751,-0.937826,-4.096805],[2.159270,-2.025187,-5.533692,-2.004179,1.570510],[-0.394290,2.074565,8.746910,-2.686960,-4.601940],[-3.219967,7.240755,9.814031,6.723606,8.433750],[-3.534717,8.987612,0.498339,-8.474535,-3.658980]], dtype = "float64")#candidate|3624|(11, 5)|const|float64
uop_3625 = relay.sigmoid(const_3624.astype('float64')) # shape=(11, 5)
uop_3631 = relay.sinh(uop_3625.astype('float32')) # shape=(11, 5)
output = uop_3631
output2 = uop_3631
func_3643 = relay.Function([], output)
mod['func_3643'] = func_3643
mod = relay.transform.InferType()(mod)
output = func_3643()
func_3644 = relay.Function([], output)
mutated_mod['func_3644'] = func_3644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3643_call = mod.get_global_var('func_3643')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_3679 = func_3643_call()
call_3680 = func_3643_call()
output = call_3679
output2 = call_3680
func_3685 = relay.Function([], output)
mod['func_3685'] = func_3685
mod = relay.transform.InferType()(mod)
mutated_mod['func_3685'] = func_3685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3685_call = mutated_mod.get_global_var('func_3685')
call_3686 = func_3685_call()
output = call_3686
func_3687 = relay.Function([], output)
mutated_mod['func_3687'] = func_3687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3643_call = mod.get_global_var('func_3643')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_3702 = func_3643_call()
call_3703 = func_3643_call()
func_2768_call = mod.get_global_var('func_2768')
func_2771_call = mutated_mod.get_global_var('func_2771')
var_3718 = relay.var("var_3718", dtype = "float32", shape = (44,))#candidate|3718|(44,)|var|float32
call_3717 = func_2768_call(relay.reshape(var_3718.astype('float32'), [11, 4]))
call_3719 = func_2768_call(relay.reshape(var_3718.astype('float32'), [11, 4]))
func_311_call = mod.get_global_var('func_311')
func_314_call = mutated_mod.get_global_var('func_314')
var_3748 = relay.var("var_3748", dtype = "float64", shape = (180,))#candidate|3748|(180,)|var|float64
call_3747 = relay.TupleGetItem(func_311_call(relay.reshape(var_3748.astype('float64'), [15, 3, 4]), relay.reshape(var_3748.astype('float64'), [15, 3, 4]), ), 2)
call_3749 = relay.TupleGetItem(func_314_call(relay.reshape(var_3748.astype('float64'), [15, 3, 4]), relay.reshape(var_3748.astype('float64'), [15, 3, 4]), ), 2)
output = relay.Tuple([call_3702,call_3717,var_3718,call_3747,var_3748,])
output2 = relay.Tuple([call_3703,call_3719,var_3718,call_3749,var_3748,])
func_3758 = relay.Function([var_3718,var_3748,], output)
mod['func_3758'] = func_3758
mod = relay.transform.InferType()(mod)
mutated_mod['func_3758'] = func_3758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3758_call = mutated_mod.get_global_var('func_3758')
var_3760 = relay.var("var_3760", dtype = "float32", shape = (44,))#candidate|3760|(44,)|var|float32
var_3761 = relay.var("var_3761", dtype = "float64", shape = (180,))#candidate|3761|(180,)|var|float64
call_3759 = func_3758_call(var_3760,var_3761,)
output = call_3759
func_3762 = relay.Function([var_3760,var_3761,], output)
mutated_mod['func_3762'] = func_3762
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3771 = relay.var("var_3771", dtype = "float32", shape = (4, 16, 5))#candidate|3771|(4, 16, 5)|var|float32
uop_3772 = relay.asin(var_3771.astype('float32')) # shape=(4, 16, 5)
output = uop_3772
output2 = uop_3772
func_3777 = relay.Function([var_3771,], output)
mod['func_3777'] = func_3777
mod = relay.transform.InferType()(mod)
var_3778 = relay.var("var_3778", dtype = "float32", shape = (4, 16, 5))#candidate|3778|(4, 16, 5)|var|float32
output = func_3777(var_3778)
func_3779 = relay.Function([var_3778], output)
mutated_mod['func_3779'] = func_3779
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3803 = relay.var("var_3803", dtype = "float64", shape = (10, 14, 11))#candidate|3803|(10, 14, 11)|var|float64
uop_3804 = relay.cosh(var_3803.astype('float64')) # shape=(10, 14, 11)
uop_3815 = relay.exp(var_3803.astype('float32')) # shape=(10, 14, 11)
output = relay.Tuple([uop_3804,uop_3815,])
output2 = relay.Tuple([uop_3804,uop_3815,])
func_3818 = relay.Function([var_3803,], output)
mod['func_3818'] = func_3818
mod = relay.transform.InferType()(mod)
mutated_mod['func_3818'] = func_3818
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3819 = relay.var("var_3819", dtype = "float64", shape = (10, 14, 11))#candidate|3819|(10, 14, 11)|var|float64
func_3818_call = mutated_mod.get_global_var('func_3818')
call_3820 = func_3818_call(var_3819)
output = call_3820
func_3821 = relay.Function([var_3819], output)
mutated_mod['func_3821'] = func_3821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3685_call = mod.get_global_var('func_3685')
func_3687_call = mutated_mod.get_global_var('func_3687')
call_3823 = func_3685_call()
call_3824 = func_3685_call()
uop_3828 = relay.sin(call_3823.astype('float32')) # shape=(11, 5)
uop_3830 = relay.sin(call_3824.astype('float32')) # shape=(11, 5)
func_3171_call = mod.get_global_var('func_3171')
func_3175_call = mutated_mod.get_global_var('func_3175')
var_3832 = relay.var("var_3832", dtype = "float64", shape = (60,))#candidate|3832|(60,)|var|float64
const_3833 = relay.const([[-2,-4,3,-9,2],[-2,-2,6,5,-1],[5,5,3,10,5],[-10,-5,9,6,10],[-10,5,-3,3,10],[-7,3,8,3,2],[6,-6,-8,10,3]], dtype = "uint32")#candidate|3833|(7, 5)|const|uint32
call_3831 = relay.TupleGetItem(func_3171_call(relay.reshape(var_3832.astype('float64'), [2, 10, 3]), relay.reshape(const_3833.astype('uint32'), [35, 1]), ), 0)
call_3834 = relay.TupleGetItem(func_3175_call(relay.reshape(var_3832.astype('float64'), [2, 10, 3]), relay.reshape(const_3833.astype('uint32'), [35, 1]), ), 0)
func_1777_call = mod.get_global_var('func_1777')
func_1779_call = mutated_mod.get_global_var('func_1779')
var_3836 = relay.var("var_3836", dtype = "uint64", shape = (2400,))#candidate|3836|(2400,)|var|uint64
call_3835 = relay.TupleGetItem(func_1777_call(relay.reshape(var_3836.astype('uint64'), [15, 16, 10])), 0)
call_3837 = relay.TupleGetItem(func_1779_call(relay.reshape(var_3836.astype('uint64'), [15, 16, 10])), 0)
output = relay.Tuple([uop_3828,call_3831,var_3832,const_3833,call_3835,var_3836,])
output2 = relay.Tuple([uop_3830,call_3834,var_3832,const_3833,call_3837,var_3836,])
func_3842 = relay.Function([var_3832,var_3836,], output)
mod['func_3842'] = func_3842
mod = relay.transform.InferType()(mod)
var_3843 = relay.var("var_3843", dtype = "float64", shape = (60,))#candidate|3843|(60,)|var|float64
var_3844 = relay.var("var_3844", dtype = "uint64", shape = (2400,))#candidate|3844|(2400,)|var|uint64
output = func_3842(var_3843,var_3844,)
func_3845 = relay.Function([var_3843,var_3844,], output)
mutated_mod['func_3845'] = func_3845
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3860 = relay.var("var_3860", dtype = "uint8", shape = (16, 7, 16))#candidate|3860|(16, 7, 16)|var|uint8
var_3861 = relay.var("var_3861", dtype = "uint8", shape = (16, 7, 16))#candidate|3861|(16, 7, 16)|var|uint8
bop_3862 = relay.bitwise_and(var_3860.astype('uint8'), relay.reshape(var_3861.astype('uint8'), relay.shape_of(var_3860))) # shape=(16, 7, 16)
uop_3869 = relay.log10(bop_3862.astype('float64')) # shape=(16, 7, 16)
func_3171_call = mod.get_global_var('func_3171')
func_3175_call = mutated_mod.get_global_var('func_3175')
var_3890 = relay.var("var_3890", dtype = "float64", shape = (60,))#candidate|3890|(60,)|var|float64
var_3891 = relay.var("var_3891", dtype = "uint32", shape = (35,))#candidate|3891|(35,)|var|uint32
call_3889 = relay.TupleGetItem(func_3171_call(relay.reshape(var_3890.astype('float64'), [2, 10, 3]), relay.reshape(var_3891.astype('uint32'), [35, 1]), ), 1)
call_3892 = relay.TupleGetItem(func_3175_call(relay.reshape(var_3890.astype('float64'), [2, 10, 3]), relay.reshape(var_3891.astype('uint32'), [35, 1]), ), 1)
func_2482_call = mod.get_global_var('func_2482')
func_2488_call = mutated_mod.get_global_var('func_2488')
const_3897 = relay.const([1.153094,-6.223771,7.915396,-4.612027,-0.512908,-1.512590,-6.140031,9.891685,7.366308,-0.554705,2.786176,-2.207109,2.296014,2.130662,-4.601469,1.863265,9.658490,-7.962490,6.457094,0.901496,-3.728491,7.374723,-4.045651,-7.328902,-1.259732,-2.252819,-8.966360,-4.396858,2.469435,-8.982234,9.693492,6.584326,1.009726,8.470500,-3.164945,2.686780,-2.693135,5.299832,9.643160,-8.087838,-3.894413,5.103394,-0.722781,-3.721909,0.188617,0.964750,9.417421,-9.965793,-1.163396,6.709175,-8.965912,-1.596654,4.132008,9.464256,3.025680,-1.096894,7.247925,-0.578885,-2.256987,3.544507,-9.986029,-1.639901,-6.485679,-0.679081,-4.989920,6.036755,-3.378441,4.798585,-7.830264,-0.343034,7.801386,3.729880,9.217138,-1.088660,8.101404,1.487181,-1.758293,1.540620,-5.355837,-7.330570,2.746121,-8.643870,1.100564,-0.312447,-9.791631,5.581514,4.159402,-9.474088,9.158811,-1.475385,9.306396,-3.561108,2.027970,-5.359476,5.158723,-9.184707,-7.665749,5.704303,5.920725,6.270150,-0.930168,8.793551,-2.881027,-3.387286,-8.306324,-0.288965,6.027329,5.152798,-8.191030,-3.231383,-1.881366,-6.242775,4.281069,-7.925036,6.815532,4.246019,6.891369,-9.925056,-0.829318,1.592254,9.920239,-7.387837,-2.847184,-7.289975,2.611132,-8.541228,0.295792,8.987193,-9.891919,4.880825,7.392688,-1.745778,6.037731,-1.562068,4.648767,-7.226257,5.807639,7.001423,0.014470,-0.622381,7.796476,-8.175904,-0.243316,9.966773,-6.462585,-3.502827,6.843969,-4.240137,4.894068,9.667725,-5.794956,-9.614901,-0.789261,1.980895,0.380942,7.315284,-0.695798,2.733053,7.958967,-1.345138,-9.139588,5.100059,9.649231,-2.083006,6.799804,5.644673,-5.504555,9.439083,-9.728564,-3.551987,2.258915,-0.004831,3.149093,-0.159998,-6.648665,-4.693170,7.406633,5.648409,0.535083,-3.746318,9.888658,-6.783207,4.364686,-3.862034,-2.977416,7.745776,-2.705254,-8.218874,2.806437,-4.266032,2.523312,-0.245706,2.565416,1.695755,-4.080526,6.762963,5.855778,6.992286,7.100714,-4.484336,-3.001623,4.318124,5.015892,-4.834097,-9.637711,1.543389,-6.374483,7.032509,5.034484,-6.515134,-8.420916,2.593878,-9.370549,-6.818495,-1.966699,8.765152,-6.998407,-1.331816,-6.709828,-9.634810,6.651859,-7.175388,-4.667869,0.657097,-6.088321,2.396179,8.358714,2.083170,8.500494,-1.371958,-5.454588,-0.113291,-2.435282,9.138787,9.479303,-2.546985,9.374510,-0.341972,-8.726226,1.811883,-5.476481,7.094024,4.436146,3.460929,-3.781799,-0.822359,9.360745,2.133006,4.658124,5.514576,-2.305940,-5.577216,-6.708947,0.881455,-8.277995,-6.061929,2.696203,8.717400,-4.915367,7.982796,-5.543032,0.625470,-9.677764,2.721289,3.329840,3.672817,-7.745779,3.718633,-5.268510,3.716861,1.695059,3.130642,1.039430,1.702664,1.645484,-6.274303,3.119171,-3.083459,-3.874347,9.995253,-6.251121,-2.548974,-0.644048,9.966767,-4.928010,-0.960379,-8.103650,3.552066,-0.150579,6.276698,8.905442,2.850167,-1.737643,8.921887,0.162003,-0.328174,6.422093,6.918563,7.765140,-8.741398,8.095556,4.755013,8.516891,-6.946339,-9.863673,5.443384,5.448789,-6.592970,-4.588667,9.940342,-4.407941,8.615516,-9.292988,-4.565070,-6.641045,0.126460,6.081907,5.045755,4.012438,-3.351647,-7.149963,-9.349138,-6.987755,8.381335,-0.510710,-8.907250,-4.737145,-9.183265,-8.195377,-5.420656,7.664450,0.027154,0.133030,7.061281,-1.068248,-9.828651,-2.973282,-8.545031,1.771719,0.156928,-4.659638,-8.000899,-1.082934,5.752335,8.553370,9.501124,-2.965528,4.529388,5.080456,-1.857552,-1.110673,-2.988941,1.360144,4.942374,-5.056534,-5.102891,9.451467,-1.980716,9.587805,-7.270610,2.498434,-5.806147,-9.113027,2.122793,-9.383065,7.038074,-3.294634,1.552372,3.133662,-9.980292,-8.982173,-4.993662,-4.434773,2.128360,9.514901,-5.293083,9.471829,-4.543773,1.935137,6.982692,2.852516,-2.325326,4.226193,-5.092284,7.329300,-6.149167,9.003221,0.739962,0.085534,-7.841822,-0.353853,-5.094814,4.742671,-5.278848,-5.628048,-9.293757,-7.229292,-2.639540,2.538891,-0.579764,0.282598,-4.018448,-0.794265,-9.094663,-4.714152,-3.610969,-8.458631,-3.242338,6.020843,-4.997217,-6.931352,3.353320,8.923469,-3.336212,-4.999046,1.136001,-7.014414,6.725822,1.464757,-5.116720,-7.646495,9.232223,6.386653,-2.294848,-7.936147,4.546906,3.000129,8.743400,-7.538990,3.063075,6.859425,-1.189946,-5.349196,-7.619004,-9.735988,4.557556,9.175413,4.563635,-3.835331,8.958870,-1.509154,-3.843782,1.266154,-6.832818,6.618446,6.789013,9.073083,-7.055501,1.812254,5.791982,-0.260165,-3.838920,4.284185,-3.418917,3.401515,-8.213913,-4.504147,7.355183,6.385764,9.841847,-3.498679,7.471979,6.765592,3.179797,-2.704829,-9.926065,-8.300767,-6.070868,-0.369808,2.291851,-9.744421,9.095983,-3.666323,-3.875574,-9.368910,6.722514,-6.921433,-5.971697,-8.087170,-1.834348,8.039159,1.166148,0.168633,6.425674,3.744205,2.623196,3.072502,-5.528408,-2.824566,4.380520,6.527754,5.600061,0.374210,6.875891,6.587525,-8.458254,-3.908282,-7.927234,4.752341,6.178593,9.052346,-6.900730,6.378688,-1.721017,5.923427,-8.172174,-4.449887,2.183796,-4.217294,-9.381416,-0.576417,-3.629986,-0.488553,5.521834,-4.502310,-0.248059,7.413053,-8.496780,-9.439789,-3.734333,-8.197388,-8.231283,-4.770930,-5.401083,-5.431433,2.514055,8.804721,4.245685,-9.099011,2.369870,5.306255,-2.709043,-3.883882,9.059811,-8.891218,6.798422,-6.506415,0.641578,8.679119,4.448689,-0.517917,-0.131324,-5.366462,-1.129794,-4.075527,-5.473276,2.779015,5.302365,3.751303,-5.137114,-2.597473,7.891751,8.290430,-7.669600,-1.670837,-9.138776,-6.786694,1.607018,-0.545024,2.293545,4.990076,-6.663555,2.887019,0.541505,-0.932234,-9.500445,1.743135,-7.236852,-2.070225,6.932082,-1.977166,-5.430756,-5.843173,-6.259255,4.494480,-7.521722,4.229642,0.530769,-3.595988,1.795469,4.980367,0.880681,6.047997,6.265087,-6.926744,8.536253,7.705970,8.267357,6.257340,-3.289059,-9.085796,7.508789,-7.161379,-8.394868,7.032386,7.494642,4.736126,3.768560,-3.012049,-0.946147,6.909624,-3.629849,6.441091,6.712525,5.837256,1.909850,-5.879894,4.649289,-0.912335,6.979275,2.389166,-8.363832,0.705426,-2.212960,-6.587680,4.220567,-7.223053,-0.980007,2.280562,-2.873795,-3.368100,-0.427411,-4.198612,8.186242,7.248549,1.314058,0.747023,2.997781,8.017411,4.064079,6.257442,-3.063713,-7.070797,0.663915,-9.171183,-3.652428,-6.949124,2.958720,-5.321584,5.367638,7.320940,-6.833956,-1.089190,1.470774,7.973236,6.574588,3.486331,-0.364272,2.741928,-1.920987,1.609237,-2.218624,6.430035,3.456371,-2.675408,-6.619240,0.662309,-2.264644,-2.399194,2.997450,-5.929643,-3.058017,-9.038757,8.774295,4.457029,4.906731,-9.224351,-4.430921,3.825503,2.003357,-8.113513,9.246897,0.673507,9.119765,-2.403657,1.643899,5.099306,-0.585874,4.956950,7.357023,0.942065,4.236013,-7.279743,-3.936851,4.326300,1.034320,7.042288,6.800954,2.630617,-4.012870,-2.840714,-3.368608,-6.592595,5.004474,4.289460,-5.140017,-4.697569,-5.826537,8.538022,-1.909738,1.550644,-5.111400,7.046072,8.376614,-0.447082,-8.021836,2.126002,-2.290568,0.808909,4.482064,1.770936,-6.652848,-2.397048,-2.157016,7.649253,-5.994617,6.546961,5.257975,0.924190,0.898930,-8.809894,-7.841604,-7.172216,6.688553,-5.493023,-5.766544,-8.666224,0.569325,-8.434782,-0.200385,9.809821,-1.494442,5.560715,7.946012,-3.434164,-2.518958,-7.647991,-1.014997,-8.577275,-9.973685,9.698191,-1.783593,3.311585,-0.347748,1.206107,3.784220,2.591339,0.843090,1.482993,4.343274,3.311942,5.299894,-7.423972,4.127336,6.552758,-9.675479,-1.175051,3.636935,-3.694218,4.879792,-7.568655,-5.221200,-7.830033,8.609105,-6.714831,8.583625,-8.868631,2.203535,2.751198,7.710795,8.210688,8.259123,-5.440021,7.883891,-7.146680,8.030297,-8.263959,-7.902437,6.189834,-6.306637,5.191919,-2.556990,-7.765692,-4.538709,-9.797739,4.580303,6.990720,1.631332,0.056922,8.553930,-1.340982,-5.862306,-4.426980,1.057143,-3.759683,-0.877939,-9.790111,-8.318421,-1.126925,-5.292049,-1.317287,-2.177720,-6.110390,-6.614597,4.221116,5.832944,-1.161155,-8.353428,-9.577197,-6.152155,0.851173,-9.561101,1.532146,3.327736,-3.741235,-8.296175,2.986464,-2.064395,7.994765,0.850655,-6.911367,-9.769840,-5.783973,-6.169268,-2.554349,-2.689268,9.670068,6.175237,0.566694,-6.035999,-1.037410,-1.181223,-7.669256,4.573428,5.076303,-0.213342,9.954929,-2.594398,9.461269,9.624522,-1.983933,0.560772,-5.664479,-3.591043,8.867305,4.436654,-9.155180,9.248313,6.481756,-8.957271,6.216952,-1.206785,0.912012,8.256050,1.162264,-6.157982,-6.442428,3.472381,8.168034,-2.590248,4.183223,-4.902371,9.688192,-4.729730,5.959107,-9.451048,0.774343,6.875869,8.255962,1.262632,4.057497,-3.597976,1.337159,9.806182,-6.287827,-7.618308,1.340712,1.563428,-2.823194,6.727177,-6.462067,7.922592,9.063119,-8.278169,7.432298,8.480471,1.045596,-9.980933,-3.739548,8.174472,3.354277,-0.201490,7.742172,6.475197,4.182388,3.094272,-8.470287,1.927999,9.064184,6.674668,5.539680,-8.641921,-6.765863,9.772867,-6.995234,5.202715,-2.196176,-0.909055,7.818324,-2.271723,0.277322,-7.632839,-5.497929,9.106646,6.791251,-4.398579,9.995893,-4.014807,2.287659,-7.582584,-4.220174,2.461035,7.557179,-0.885070,6.322433,7.455197,-7.927470,6.638611,6.386619,4.847084,6.618346,5.413836,-0.237145,-9.645938,-7.737471,5.601060,3.504385,2.778450,-3.671094,2.509878,-1.404359,-1.461114,4.887800,5.756376,-5.361566,2.189004,-3.283008,1.288038,-6.341453,-9.823913,-4.456491,-0.910631,-4.531416,4.253923,3.683703,7.584950,3.671019,6.317463,3.480693,-4.509699,1.870393,4.535886,-2.369087,-3.100280,-1.972110,0.574455,-9.334091,-1.230391,-0.410619,5.029134,7.571507,1.384636,3.543906,8.823900,-0.101748,-2.236511,2.830444,0.344452,-6.484005,7.584677,5.285896,-2.700206,-4.922544,-6.673886,-4.887444,-8.410934,-6.098583,-3.652620,-7.203806,-5.122142,9.276981,-5.734684,-8.300175,0.180767,2.121539,-4.059718,1.019646,-4.053296,7.480693,-0.538533,8.509477,0.222297,2.961398,4.219839,6.143840,-2.555831,-2.138566,-5.845638,-9.743217,-6.189306,-4.943267,-5.362341,9.552691,1.706135,-3.306739,-9.725135,-2.049045,3.930166,5.657539,-5.150662,8.575656,-7.606836,1.124379,-9.422087,-2.624653,-7.620116,6.128562,-9.953133,5.089004,-4.874540,-7.114303,5.774277,-4.924997,-7.956246,1.461788,4.102975,6.899021,8.061425,-9.823290,-5.332163,-2.035577,1.460007,-5.108020,-9.091544,2.341775,0.339559,0.759797,-8.774065,1.693388,2.133825,5.273171,6.886982,-8.692775,-5.127673,4.527004,1.244931,9.330130,5.826894,1.227982,9.473436,-3.967763,-4.171920,-3.061653,-0.642943,1.257490,-4.571392,-2.577015,6.974759,-8.958984,8.932592,-7.315449,7.632522,6.279412,6.850471,-4.452032,4.771519,0.026581,-9.456205,-9.607239,-0.962929,8.598875,2.792758,-4.326044,-6.269908,-0.797840,-9.206250,3.934115,-0.337828,1.451939,8.341831,-3.684575,-2.901659,-1.062451,7.039798,9.064403,-3.028496,8.178776,-3.530788,-4.694882,-2.201923,-5.757279,6.461437,1.138251,-4.663806,-5.194244,-4.953660,-3.959244,-9.089003,-1.394153,-9.679768,0.488505,-2.637243,-1.033248,9.789740,6.630690,4.886915,-8.940162,1.084536,-1.604726,-3.206835,7.842103,6.934817,-8.949058,-5.814662,-7.830992,-7.170928,3.132148,-7.602707,-5.832658,-6.269848,5.483179,6.736079,7.869529,5.589600,7.941944,-9.563234,0.623113,-1.463509,3.912914,-6.196054,6.867620,-1.016691,1.755906,-4.285441,-5.027509,7.301277,-0.650281,1.068152,-8.832505,1.168202,2.880170,-6.137167,-2.697610,-6.907018,-8.582405,1.180803,6.749660,-6.540940,-1.070228,-5.695663,-3.983832,-9.736422,7.267558,-2.966924,5.992737,0.502970,0.783840,3.836752,-9.568436,3.814125,-3.247896,0.058085,-2.434917,-8.244461,-0.188317,1.801882,-1.550041,-7.715434,-1.369519,5.727793,-6.234236,-5.217098,0.423615,2.757243,1.510053,-6.694126,5.455871,4.411825,7.168069,-9.827698,8.334509,-3.840910,-1.326590,7.210188,8.512308,-7.608803,4.450254,4.830187,-9.683100,-1.968462,-4.817065,5.896785,-1.192308,3.978898,-3.061416,-3.215205,-6.289604,2.934662,9.637055,5.947723,-1.227744,-4.112506,-2.858025,-4.043461,5.229125,-5.133020,5.537992,0.179627,-0.326488,7.826918,9.738977,-0.242066,4.287828,-4.702477,-6.966394,7.506583,8.608645,-5.346772,-2.765732,-7.476398,-2.369861,1.211233,-0.254814,7.313001,2.575421,7.344226,-0.229831,-2.367403,5.451746,-6.237619,-2.496528,-4.632444,-9.892896,6.036971,4.604331,-9.502842,-0.189671,2.929307,-7.782754,-4.438572,-2.104289,-5.670306,9.236528,-4.367338,6.259134,5.747080,-0.605772,2.987551,-2.464810,4.869087,-5.823164,8.704034,5.649340,0.868977,-2.468457,-4.147427,6.014651,0.972867,4.202901,-8.092355,8.008396,2.993893,4.085330,-9.079993], dtype = "float64")#candidate|3897|(1274,)|const|float64
const_3898 = relay.const([[6.723877,-4.506225],[-4.640925,-3.859954],[5.087701,-4.198696],[-9.494490,-8.636304],[-8.882070,-1.177313],[-8.326661,2.831929],[-7.799518,-7.196715],[-1.186851,-7.255288],[7.422277,7.484155],[2.357489,-5.254148],[1.035542,-0.252329],[-4.954744,-4.300572],[-8.884614,-5.889157],[1.097771,8.308385],[5.854150,-0.969518],[5.642367,9.261059],[7.054736,-3.199744],[-2.845741,-0.177528],[8.601191,5.089580],[8.315805,3.090372],[1.773384,-4.344603],[2.022766,-5.059923],[-6.441729,-5.257578],[4.090385,-6.369643],[-0.389963,-1.363945],[8.829076,0.704711],[9.056466,-3.420066],[-4.798401,-3.267316],[-1.260557,-5.351685],[-7.318007,-4.204877],[6.260245,-8.296676],[-6.595060,-1.613982],[5.572101,1.673522],[1.517283,-8.911955],[7.753598,1.812682],[-2.757417,3.288925],[8.650522,-8.004461],[-0.739619,-8.413452],[0.492417,7.694375],[0.757407,2.511338],[-4.962478,7.759886],[5.433788,-9.855054],[-4.467826,-8.352634],[1.024783,8.890187],[-8.573726,-3.605284],[-5.769713,-6.687895],[0.149442,5.917196],[9.254653,3.729172],[3.173933,5.331618],[-5.075766,-1.422674],[-2.657257,3.825503],[-2.577003,-9.427650],[-9.983406,-6.580619],[9.632566,1.398590],[-7.994364,3.057431],[8.427781,9.485192],[2.649754,5.137192],[-4.730293,-7.673317],[-2.812272,-6.024507],[3.980279,4.959057]], dtype = "float64")#candidate|3898|(60, 2)|const|float64
const_3899 = relay.const([[3,1,-3,-1,5,-6,7,10,-8,-9,6,7,-8,3,6,-1,9,6,-8,-3,-7,3,-8,3,5,-2,-7,-5,9,-2,-7,5,-7,-2,-2,-10,-1,-2,-6,-4,6,-2,-2,-7,4,9,2,-7,-6,6,3,6,10,2,4,7,-9,-2,7,-5,9,-2,9,2,10,3,7,-7,9,3,5,-5,2,-7,-7,7,8,8,1,-3,9,6,7,-3,3,4,-7,-2,6,-5,2,2,-5,7,10,9,-6,-7,8,-3,-5,7,-4,10,-8,7,-9,2,-9,10,-9,-1,5,9,-10,-2,-7,-7,-8,5,4,-6,8,6,6,-7,8,1,-7,-5,-3,2,-6,5,7,-7,-9,-3,2,-4,-9,3,-2,1,5,6,2,9,8,1,-3,6,3,9,-3,2,-8,9,9,9,5,1,-5,3,-6,9,-3,1,6,-1,-7,-1,10,-4,10,-3,9,10,6,-5,10,-2,-9,-10,5,4,-6,6,4,5,3,9,-3,6,-4,4,7,6,-2,-2,8,8,2,-10,-6,-10,-4,-1,-8,10,7,6,3,9,8,2,-9,10,6,8,6,1,9,-8,-8,-10,4,1,8,3,-3,-2,5,4,3,-5,1,8,9,-10,-6,-6,-6,10,-8,10,7,-6,5,8,-5,4,1,8,9,1,-8,-8,3,-8,10,-6,9,1,-5,1,-4,-6,6,6],[-3,1,-3,6,6,1,-2,-4,1,5,4,6,1,-4,-7,2,-9,-3,-1,-10,-5,-2,-10,-7,2,6,10,-6,5,9,10,4,-4,2,10,-2,-5,-1,1,-7,-2,10,7,6,-6,4,6,-5,-8,8,1,2,-6,-2,-1,-1,3,8,5,-10,8,-9,3,-7,-1,9,-6,-7,-4,-9,-7,9,-2,-10,10,10,-5,2,-10,-10,-3,2,-10,2,-7,8,-3,-4,3,-2,5,8,-10,9,-1,-3,-10,6,2,-5,-10,3,-9,6,2,-2,9,-8,-4,1,7,-10,6,8,-5,-9,3,6,-10,3,-2,10,9,-2,-4,-8,6,-8,5,2,-7,5,-2,2,-5,5,-2,-1,-10,1,8,5,-7,-8,-6,-2,-1,3,-8,-7,-1,-10,-7,3,-6,1,4,-9,8,-5,6,-7,4,2,6,7,-2,-10,10,6,8,1,5,4,5,-8,-9,-2,7,-7,3,-10,-2,2,4,9,5,-5,-10,-6,10,-10,8,-2,-3,-8,4,1,-8,8,-1,5,9,-8,1,-5,-7,10,4,2,2,4,-8,1,-8,-8,-8,-6,-5,5,8,8,3,-5,-3,-6,7,-10,5,-8,10,1,-1,6,-3,3,-1,9,1,2,-8,-9,-8,-9,2,-7,5,2,-7,3,9,1,7,3,3,1,4,8,1,-9,7,5,6,-10,-6,-4,9,3,7,-5],[3,-4,8,-1,9,1,-5,-8,4,5,2,-4,-7,8,-5,6,1,-5,10,-9,5,5,-8,1,2,3,9,5,-6,-2,8,-9,6,9,9,4,-1,1,1,-3,-2,-7,6,7,-6,5,4,4,-5,5,2,5,10,3,2,4,-4,6,-2,-4,-3,2,-10,-9,-9,10,-6,7,2,7,7,1,2,-1,-2,5,-1,-3,3,-7,-6,6,-1,10,-4,-1,-8,-10,10,9,6,5,2,10,10,10,4,2,10,1,6,-4,-4,7,8,8,-9,-1,1,-6,9,-10,3,-10,-1,8,-5,-4,-9,-5,-6,-10,5,5,5,10,-7,-8,-2,5,9,3,-8,-3,9,-3,-2,-9,6,-3,-3,-6,-3,3,3,1,3,-6,-2,-5,10,3,3,-6,-3,-10,4,-9,2,-2,-1,-9,-6,3,-5,-8,-10,-6,2,10,3,-6,-7,3,6,-4,-10,-1,-7,6,-7,-8,5,8,6,-7,-1,5,7,-7,5,1,-4,2,9,5,10,10,7,-5,7,3,4,-6,-8,-3,6,-8,6,-4,-8,8,-4,5,8,6,3,-3,-9,-5,4,2,2,2,2,3,-7,-9,-3,2,-6,7,10,-6,3,-8,9,-8,-1,-9,8,-4,6,6,2,9,8,7,9,9,-5,8,-8,-3,9,-6,5,-2,5,-10,-9,5,6,7,7,5,4,6,-10,-3]], dtype = "uint8")#candidate|3899|(3, 270)|const|uint8
call_3896 = relay.TupleGetItem(func_2482_call(relay.reshape(const_3897.astype('float64'), [14, 7, 13]), relay.reshape(const_3898.astype('float64'), [120,]), relay.reshape(const_3899.astype('uint8'), [810,]), relay.reshape(const_3897.astype('float32'), [14, 7, 13]), ), 7)
call_3900 = relay.TupleGetItem(func_2488_call(relay.reshape(const_3897.astype('float64'), [14, 7, 13]), relay.reshape(const_3898.astype('float64'), [120,]), relay.reshape(const_3899.astype('uint8'), [810,]), relay.reshape(const_3897.astype('float32'), [14, 7, 13]), ), 7)
bop_3908 = relay.equal(uop_3869.astype('bool'), relay.reshape(var_3860.astype('bool'), relay.shape_of(uop_3869))) # shape=(16, 7, 16)
func_1014_call = mod.get_global_var('func_1014')
func_1018_call = mutated_mod.get_global_var('func_1018')
call_3920 = func_1014_call(relay.reshape(var_3891.astype('uint32'), [7, 5]), relay.reshape(call_3889.astype('uint32'), [7, 5]), )
call_3921 = func_1014_call(relay.reshape(var_3891.astype('uint32'), [7, 5]), relay.reshape(call_3889.astype('uint32'), [7, 5]), )
func_1971_call = mod.get_global_var('func_1971')
func_1974_call = mutated_mod.get_global_var('func_1974')
var_3924 = relay.var("var_3924", dtype = "float64", shape = (11, 4))#candidate|3924|(11, 4)|var|float64
var_3925 = relay.var("var_3925", dtype = "int64", shape = (560,))#candidate|3925|(560,)|var|int64
call_3923 = relay.TupleGetItem(func_1971_call(relay.reshape(var_3924.astype('float64'), [11, 1, 4]), relay.reshape(var_3925.astype('int64'), [40, 14]), ), 3)
call_3926 = relay.TupleGetItem(func_1974_call(relay.reshape(var_3924.astype('float64'), [11, 1, 4]), relay.reshape(var_3925.astype('int64'), [40, 14]), ), 3)
uop_3936 = relay.erf(uop_3869.astype('float64')) # shape=(16, 7, 16)
uop_3938 = relay.acos(uop_3936.astype('float64')) # shape=(16, 7, 16)
bop_3943 = relay.floor_mod(uop_3936.astype('float64'), relay.reshape(uop_3938.astype('float64'), relay.shape_of(uop_3936))) # shape=(16, 7, 16)
func_3842_call = mod.get_global_var('func_3842')
func_3845_call = mutated_mod.get_global_var('func_3845')
const_3958 = relay.const([[9,3],[-8,-2],[-6,-6],[-8,4],[-10,5],[-1,-8],[5,-3],[-8,-4],[-8,4],[-5,-5],[-7,-5],[8,7],[4,6],[2,-2],[-5,-4],[5,-10],[6,-1],[10,-3],[-8,2],[-8,8],[10,-5],[-9,9],[-5,7],[-2,5],[2,-10],[1,-9],[-10,9],[-7,7],[-10,-10],[-3,-4],[-4,10],[-9,4],[10,-2],[-7,-2],[-2,-4],[7,-8],[4,-7],[-7,-5],[4,-6],[10,-2],[6,-1],[-5,-10],[5,5],[3,-2],[-1,8],[-2,10],[-8,-6],[-8,1],[4,-7],[-7,5],[-8,8],[4,-2],[9,-3],[-3,-4],[1,1],[10,-3],[6,-3],[-4,-8],[7,-6],[4,-5],[8,-3],[-3,1],[-10,-3],[-6,5],[6,-4],[-6,-5],[-8,5],[-10,6],[-10,-8],[7,9],[4,8],[-10,-10],[4,-7],[8,-5],[-2,8],[-3,-10],[3,-8],[-7,-8],[10,-1],[-2,5],[6,-6],[3,-9],[-2,-6],[1,-7],[-4,-7],[-5,2],[-2,6],[-3,-1],[4,-3],[9,-1],[-1,7],[5,-8],[-3,1],[-9,-3],[-7,8],[1,-1],[7,1],[8,-10],[-3,2],[-2,-6],[-5,-3],[2,-9],[3,9],[7,1],[3,-1],[-6,-9],[7,-4],[4,-4],[-8,5],[-10,-1],[2,-1],[1,4],[-1,-7],[3,5],[-9,-8],[10,-2],[-10,-10],[-3,-5],[2,-5],[-7,-7],[3,7],[-1,-5],[3,3],[-7,4],[6,-8],[-9,-6],[-1,2],[-10,-8],[4,-9],[8,-7],[-9,-6],[7,-6],[8,-2],[10,-5],[-8,1],[-9,-1],[4,8],[-5,-3],[-7,-5],[-1,-7],[-6,3],[6,-9],[7,2],[-8,-9],[-4,6],[-3,-8],[-10,-5],[3,-7],[1,-6],[-9,9],[6,-4],[-8,-9],[-1,4],[6,6],[-2,-4],[-3,5],[-2,-8],[6,1],[-1,-6],[-7,1],[-10,5],[6,1],[-2,-4],[-7,-8],[-8,3],[6,-5],[6,-7],[-8,2],[5,3],[7,-3],[10,-6],[6,7],[-10,9],[-2,-6],[8,1],[4,-4],[-1,2],[3,-8],[3,-10],[-8,3],[5,8],[8,8],[-7,-2],[4,-10],[6,-2],[-7,4],[6,7],[10,4],[3,5],[-5,-9],[-3,1],[-8,-10],[-3,5],[-7,-8],[-2,-9],[-6,-10],[-4,-2],[9,1],[-2,-7],[5,7],[2,-8],[9,-1],[2,3],[-4,6],[-7,9],[10,8],[-4,4],[-2,7],[-1,2],[10,2],[7,9],[8,9],[6,1],[-8,7],[4,3],[-2,-10],[5,6],[-9,-9],[-2,6],[-6,5],[-5,-7],[7,-6],[9,7],[-8,-6],[-10,2],[9,-6],[2,2],[10,-1],[8,-7],[5,-8],[-1,-6],[3,-5],[4,-2],[1,-7],[3,2],[-9,-6],[10,-3],[-7,7],[-5,8],[-5,-1],[-2,-4],[-5,5],[-10,-9],[7,-7],[-7,2],[-1,-3],[-4,-6],[-5,9],[-2,-10],[6,4],[10,7],[7,6],[2,9],[9,-2],[2,-3],[5,-4],[-7,-5],[-10,8],[-10,-9],[9,-4],[-3,6],[6,6],[-6,-7],[-1,1],[7,-8],[4,-7],[1,5],[1,-10],[-2,-8],[-4,6],[-5,4],[-4,-3],[-10,-10],[-9,1],[4,1],[-5,2],[9,8],[6,5],[9,-9],[-4,-5],[-5,9],[1,5],[5,-1],[-9,2],[4,-3],[-3,4],[-8,6],[3,-6],[-4,2],[4,1],[5,4],[4,2],[-5,8],[3,-10],[3,3],[-7,6],[-6,7],[8,-1],[-9,-7],[-10,-10],[-1,-3],[-10,-5],[10,1],[-9,-9],[7,-4],[5,8],[-2,-8],[3,7],[6,-8],[2,-9],[1,10],[-7,6],[-4,-1],[-8,4],[3,4],[9,9],[1,2],[-1,6],[1,4],[2,3],[10,8],[2,-2],[3,2],[7,-7],[-1,2],[10,-3],[-1,-2],[-7,-2],[9,-9],[-1,10],[6,7],[-5,2],[5,-7],[-1,7],[-9,6],[4,-7],[7,7],[-6,3],[9,5],[-4,10],[-2,-6],[9,-4],[2,8],[-9,2],[10,7],[6,-10],[-10,9],[-4,5],[7,-9],[-5,-7],[-5,7],[-2,4],[-10,-10],[1,-3],[6,6],[10,8],[-5,4],[-9,10],[-9,-10],[8,3],[-4,-4],[2,5],[9,10],[5,9],[-4,-9],[-7,9],[-6,5],[4,1],[10,5],[5,1],[-1,7],[8,5],[10,-5],[3,-3],[6,2],[-9,-9],[10,-2],[-4,-9],[6,1],[2,6],[-2,-3],[6,5],[-5,3],[1,4],[6,6],[-10,4],[-1,-10],[3,-8],[-6,1],[6,-3],[6,-6],[7,-8],[-5,10],[-9,9],[-1,6],[-4,10],[-5,1],[8,4],[-9,-1],[-10,9],[3,-1],[4,-4],[-9,-1],[-5,3],[2,3],[8,-6],[-8,3],[-5,-3],[10,1],[-4,-10],[-7,7],[2,4],[-4,7],[-4,6],[7,-10],[-10,1],[7,-7],[-8,5],[10,9],[-2,9],[2,5],[-7,8],[10,6],[-4,-3],[10,-1],[9,-4],[-8,2],[-6,5],[6,-3],[-2,-9],[-10,-4],[4,5],[-7,10],[4,6],[7,-3],[10,-8],[-9,1],[2,4],[5,-6],[5,-10],[-10,10],[-4,-8],[-8,-3],[-9,7],[2,9],[-8,-7],[1,1],[-5,-8],[-1,8],[9,-8],[7,7],[2,5],[-6,9],[-9,6],[-8,-4],[5,-1],[-4,-6],[7,2],[-5,1],[7,-3],[-4,4],[9,-1],[-6,-1],[9,-1],[-10,-8],[1,2],[-10,-7],[-1,-7],[-3,8],[2,10],[-4,-1],[2,8],[9,1],[-5,-7],[-8,-10],[-5,5],[2,1],[-3,-4],[-1,-2],[8,-8],[-5,6],[4,2],[8,-10],[-3,-2],[-8,-2],[3,8],[2,-8],[9,7],[7,-3],[-7,-2],[9,7],[-8,-8],[3,7],[-8,1],[-6,-10],[4,-10],[-3,1],[-8,-6],[-6,-2],[3,1],[9,-1],[5,-7],[-10,8],[8,-7],[1,-10],[3,-9],[-10,-5],[10,-8],[-4,-8],[-2,9],[-3,6],[-5,2],[-2,-6],[-10,-6],[-5,-3],[5,-5],[-4,-9],[7,-8],[5,2],[8,-5],[-6,-7],[-9,7],[2,-10],[-3,7],[10,-4],[3,9],[-8,5],[7,-8],[4,-9],[6,8],[8,-6],[-5,-10],[10,1],[-8,1],[-3,3],[10,-5],[7,-7],[2,3],[-3,10],[-4,2],[4,7],[-6,-9],[-7,-1],[4,-9],[-9,-5],[4,-8],[-7,-5],[-9,-6],[10,7],[2,-5],[10,5],[-1,6],[3,-1],[-7,3],[7,6],[-5,-1],[6,1],[5,8],[-1,9],[7,3],[7,8],[3,10],[1,8],[-6,1],[10,-1],[-7,10],[10,-1],[7,9],[-6,-7],[-10,10],[1,-7],[8,1],[9,3],[-9,-5],[4,-7],[10,4],[3,-4],[6,-4],[2,8],[-9,-8],[-8,-6],[5,7],[-7,-2],[-2,-2],[8,10],[2,3],[-5,-5],[-9,-5],[-5,-8],[-2,4],[1,6],[-4,10],[6,6],[-4,-3],[-1,5],[1,-8],[3,-1],[-1,4],[-10,-5],[1,-6],[3,-5],[2,-8],[-6,4],[-5,8],[-8,-2],[-3,-1],[9,7],[1,-6],[-7,3],[-9,-4],[-4,-6],[1,-8],[2,-8],[-8,-8],[-2,6],[-2,8],[-5,1],[-2,1],[-3,8],[1,-3],[-5,8],[7,-10],[-4,-4],[1,6],[-3,-10],[-1,-4],[9,10],[-7,3],[-1,5],[10,1],[-4,-2],[7,2],[6,6],[2,4],[1,1],[7,9],[-8,8],[-2,4],[3,2],[6,9],[-6,1],[-6,-3],[-9,6],[10,-3],[-2,8],[9,-9],[-10,2],[8,9],[-8,-4],[-5,3],[1,7],[-7,-2],[3,-2],[-4,7],[-5,-1],[10,-7],[-8,5],[9,-7],[-1,4],[7,6],[7,-4],[-8,-6],[-10,4],[-5,-10],[-3,8],[7,2],[10,-4],[3,-6],[-8,1],[3,-9],[-4,-7],[-5,4],[4,-9],[7,-6],[7,-5],[2,1],[6,-7],[9,4],[-10,-4],[7,-6],[2,-1],[7,8],[-9,-4],[-6,2],[9,1],[-5,3],[3,4],[-5,-1],[4,-4],[1,-6],[-6,-3],[7,4],[-3,4],[-7,5],[2,10],[-8,2],[2,4],[9,4],[-10,8],[2,-3],[-5,3],[4,2],[7,-3],[10,10],[3,-7],[-4,10],[8,3],[-1,5],[3,-10],[7,-5],[3,-1],[3,-6],[7,-3],[-4,7],[4,-4],[-8,1],[-8,-10],[-2,-1],[-3,9],[-6,-6],[-10,-4],[-1,-8],[4,-10],[-10,6],[3,-5],[3,1],[10,3],[6,-1],[-6,3],[-7,-4],[5,-3],[-4,-5],[7,3],[7,5],[5,3],[5,10],[-8,-1],[-5,8],[-9,-5],[10,-4],[-9,6],[-1,3],[-6,7],[-2,-5],[3,-7],[-2,-8],[-6,8],[2,-2],[6,-7],[8,3],[8,-7],[1,3],[7,10],[-5,-2],[1,8],[9,6],[-9,-4],[-5,-10],[9,5],[9,-1],[8,-6],[2,-5],[-8,-8],[-4,-4],[-5,9],[-5,5],[6,1],[-8,2],[6,10],[-5,-2],[-9,-10],[3,5],[10,10],[-10,-7],[-6,2],[5,-1],[-1,10],[7,9],[-2,-8],[-2,-5],[-4,-8],[-1,-3],[-7,3],[8,-2],[5,4],[-4,8],[1,3],[7,-6],[4,-5],[10,3],[2,7],[10,-10],[-1,-8],[9,-1],[2,-6],[1,-9],[-7,-1],[4,-4],[2,10],[-1,8],[5,9],[2,6],[3,4],[-3,10],[-9,7],[-6,4],[2,-1],[-4,-9],[7,-5],[-7,4],[3,5],[-10,6],[-9,-5],[-3,5],[2,-2],[-9,7],[8,-6],[3,4],[-9,-1],[-5,10],[-1,-9],[5,4],[1,6],[-7,-5],[-5,8],[2,-3],[1,2],[3,8],[-9,8],[2,-3],[-8,-3],[2,-1],[-9,-4],[-1,4],[10,-7],[-7,5],[-5,-2],[-7,-10],[-4,1],[10,-4],[1,2],[6,5],[1,7],[9,6],[8,-1],[-2,9],[1,-3],[-2,-2],[8,6],[-9,8],[-2,-9],[-10,5],[10,-3],[4,-8],[4,7],[-2,-10],[2,-4],[6,10],[8,9],[4,-6],[-7,-9],[-10,7],[2,-3],[-3,-5],[-8,6],[3,-2],[-7,9],[-4,-8],[-1,-3],[7,7],[5,4],[-3,-5],[-9,7],[-8,3],[1,-7],[-4,-5],[3,7],[9,9],[-6,-6],[-3,-1],[3,-6],[-10,-6],[-8,5],[1,10],[7,4],[-3,-2],[8,-7],[-8,-5],[10,-3],[8,-1],[-4,2],[-6,9],[-10,-1],[-8,10],[-2,8],[9,10],[3,-10],[-5,-1],[9,4],[6,1],[8,6],[9,-3],[5,9],[-5,3],[-6,-2],[4,-10],[7,-8],[-7,6],[5,3],[-10,-2],[-10,-10],[4,4],[6,1],[-9,5],[-4,6],[6,-7],[4,4],[8,10],[1,-2],[3,6],[-2,-1],[5,5],[-3,-1],[5,-9],[-9,2],[10,-5],[1,-7],[3,-6],[-8,6],[-7,5],[3,6],[-5,6],[9,-1],[-1,-2],[-6,-9],[-10,-6],[3,6],[-4,-7],[-8,-5],[-9,6],[1,9],[-6,6],[-9,4],[9,-10],[3,-2],[8,4],[-4,8],[9,3],[1,-10],[4,2],[-1,3],[-6,2],[-10,4],[4,5],[-6,3],[-4,3],[-2,-6],[-1,8],[-3,-1],[5,-8],[-8,4],[-10,-1],[-1,-2],[-5,-4],[-8,-3],[-9,10],[-1,2],[-6,2],[5,-7],[-6,-3],[-7,4],[8,8],[6,-4],[10,6],[-6,-9],[9,6],[7,10],[4,-10],[6,2],[10,9],[-1,1],[-10,-5],[7,9],[-5,-1],[10,8],[3,-4],[2,3],[6,-1],[9,-8],[-1,5],[9,4],[-1,-8],[6,-7],[-6,8],[-7,-3],[4,-9],[6,-2],[-2,-4],[3,5],[-5,-6],[-1,-10],[4,-6],[-8,5],[2,7],[-1,4],[-7,4],[-8,-5],[2,-6],[4,9],[-3,-10],[-3,-6],[-9,3],[-3,-5],[5,10],[8,8],[9,-2],[-9,3],[-7,6],[-6,-5],[5,-4],[4,9],[-9,-5],[-6,-7],[-7,8],[-2,-10],[3,-1],[6,5],[5,-2],[-1,10],[-9,6],[-6,-10],[2,8],[8,4],[-4,2],[10,-3],[-7,4],[5,-5],[-9,-10],[4,9],[-8,1],[-7,-9],[10,2],[7,7],[-2,1],[6,-2],[8,9],[1,-9],[7,7],[7,-4],[7,6],[-3,9],[3,3],[-7,4],[8,-9],[-3,10],[-10,-5],[-2,1],[7,3],[-2,5],[4,7],[-6,9],[4,3],[-8,-9],[-1,-3],[-3,2],[6,10],[-2,3],[7,-7],[1,-7],[4,2],[4,-10],[4,-7],[10,7],[-7,-3],[-1,4],[6,-9],[7,-10],[5,-3],[-5,-3],[6,6],[-9,1],[-7,6],[-1,-6],[-2,-4],[2,-10],[-7,-5],[5,1],[-9,-7],[-1,6],[-5,8],[5,-2],[10,5],[-9,-10],[-5,-1],[4,-2],[-1,1],[9,2],[2,-1],[3,-3],[1,-8],[3,9],[2,8],[3,8],[9,6],[9,-4],[-7,7],[10,6],[7,4],[-9,-8],[4,-8],[6,-1],[-5,4],[4,-4],[-7,-10],[2,8],[7,9],[-6,8],[5,-7],[1,-7],[-4,2],[-3,6],[9,4],[-3,1],[6,-7],[-9,2],[-2,-6],[-4,3],[3,5],[-4,-5],[8,-2],[-4,2],[-3,2],[-5,-7],[-3,2],[-3,5],[-10,4],[-1,7],[-10,10],[-2,-6],[1,-6],[-4,5],[-3,3],[2,5],[-8,8],[-10,9],[-3,-4],[3,-7],[-9,3],[7,9],[5,-9],[-1,10],[3,-9],[2,5],[-6,10],[10,-4],[-4,2],[-6,-1],[-4,7],[5,7],[5,3],[1,-5],[-8,8],[6,-6],[-10,-2],[-9,7],[-3,3],[2,-8],[-5,8],[-10,4],[-10,3],[-6,-8],[7,-5],[3,2],[-6,6],[4,-7],[-4,4],[8,9],[2,-7],[2,7],[3,6],[3,2],[4,5],[1,-8],[7,-8],[-1,6],[-2,4],[-6,3],[-4,-7],[-8,4],[6,-1],[-3,3],[-2,8],[1,-1],[-7,-7],[7,-4],[9,-7],[2,-1],[5,7],[-3,-10],[1,-10]], dtype = "uint64")#candidate|3958|(1200, 2)|const|uint64
call_3957 = relay.TupleGetItem(func_3842_call(relay.reshape(var_3890.astype('float64'), [60,]), relay.reshape(const_3958.astype('uint64'), [2400,]), ), 5)
call_3959 = relay.TupleGetItem(func_3845_call(relay.reshape(var_3890.astype('float64'), [60,]), relay.reshape(const_3958.astype('uint64'), [2400,]), ), 5)
uop_3966 = relay.tan(uop_3938.astype('float64')) # shape=(16, 7, 16)
bop_3975 = relay.logical_and(uop_3966.astype('bool'), relay.reshape(var_3860.astype('bool'), relay.shape_of(uop_3966))) # shape=(16, 7, 16)
func_2898_call = mod.get_global_var('func_2898')
func_2902_call = mutated_mod.get_global_var('func_2902')
const_3984 = relay.const([9.564394,1.444436,-8.528596,-3.924643,-5.748896,-0.581053,0.377943,4.445735,-0.031999,-4.578707,6.113694,5.361175,-0.684938,2.808741,1.777022,5.737619,9.847119,-1.183146,9.695623,7.525785,4.005927,0.620688,-3.058144,-8.774853,0.171461,4.863999,-6.958777,-9.604778,3.764510,-6.940877,-3.042622,-6.236164,-9.868106,6.227419,7.918892,9.839569,6.138038,1.198989,2.923649,-0.444500,-7.683006,-3.806305,-5.780723,-2.217717,-3.545941,6.086168,-1.928437,8.887197,-8.775138,-3.181866,7.913522,-3.114629,9.287938,-9.331280,8.275697,6.189775,-1.567369,-0.132521,-1.925076,-8.633159,8.711463,3.963480,4.053988,6.536612,-5.193558,-7.524104,0.657525,-1.474933,-1.481242,-9.956543,6.978282,-7.513910,4.518547,4.450453,9.930204,-4.877412,3.270943,-1.066992,-4.132403,-2.159083,6.010871,-8.877715,1.298923,2.172374,7.303934,-6.567493,4.510610,-3.612880,2.413097,9.810999,-8.114909,-0.168424,2.168306,-9.280583,-5.248085,-9.016926,7.828048,-6.394246,0.214542,8.929461,6.057140,-6.092189,-0.217130,1.883567,-0.013211,-2.131805,0.461687,-1.049531,9.728832,-3.388206,7.056234,8.649402,-4.402195,4.964888,-5.219498,-7.286859,-4.757543,-2.824250,-1.356135,2.802784,-8.915993,6.238058,-9.373722,1.635106,-3.070876,5.549861,-2.675115,2.234519,-6.247702,1.716487,2.039656,2.050083,-3.566533,-3.057851,3.981938,9.311365,0.948843,7.775918,-0.143337,2.490451,6.522063,-2.961536,9.331754,-3.068875,-6.381455,-5.895294,7.239900,-8.626268,-1.785461,-7.964103,-3.798242,1.204653,-6.077883,2.821273,1.179255,-2.554596,3.270198,7.904791,-8.875399,-9.420634,2.379799,-9.060930,-8.559103,-5.351182,6.886160,4.837324,-3.667316,8.306701,2.330522,1.499610,6.239235,3.118503,-7.470223,3.424641,-5.831364,8.300582,7.235916,6.844282,-8.199426,-8.334156,-3.610677,8.771649,-7.678940,-4.589911,3.611766,8.430796,8.492519,3.887548,3.650276,-2.406770,4.486179,1.860031,9.509431,-8.672770,-0.212172,0.458743,-5.154451,7.722251,3.646615,8.530239,3.956205,0.069872,1.515761,-8.687615,2.188405,6.917752,-8.938343,3.129154,8.470705,-9.001723,-2.845322,-8.641691,-8.622956,-6.365063,5.626103,7.883086,-1.263859,3.114460,3.869004,-7.551200,-2.208691,3.281390,-3.211718,-2.920898,8.507566,4.269401,-9.907467,-0.503975,6.896074,-2.585269,-4.719488,6.438523,-1.038919,8.996007,-0.026095,4.116371,1.220423,9.848718,1.963045,4.236376,-9.108125,8.816827,-9.979055,-2.162600,-3.515287,6.108935,-9.086957,6.064136,3.380691,-8.099756,-0.007846,5.197753,8.544411,6.863228,-4.455747,8.889020,4.201502,-0.833826,-6.205134,4.271615,0.916182,-6.627285,8.454496,5.559248,-0.984239,-7.499570,8.539438,-6.683211,-1.685271,6.930327,-5.269555,-4.498622,9.746389,9.523927,8.984004,-5.322423,1.903987,-7.847661,-0.011520,-9.802316,1.860664,8.629415,-7.839316,3.533653,3.721426,5.248137,3.844651,3.389979,-0.112518,9.430337,7.220511,0.789976,-0.612051,2.322633,3.932928,8.752107,-4.434404,7.815322,-0.702850,-3.980282,3.472006,1.374154,8.769775,-9.049924,8.907758,2.534513,6.548999,-8.168352,-3.378125,9.455720,4.697784,-0.681131], dtype = "float64")#candidate|3984|(312,)|const|float64
call_3983 = relay.TupleGetItem(func_2898_call(relay.reshape(const_3984.astype('float64'), [4, 13, 6]), relay.reshape(const_3984.astype('float64'), [4, 13, 6]), ), 0)
call_3985 = relay.TupleGetItem(func_2902_call(relay.reshape(const_3984.astype('float64'), [4, 13, 6]), relay.reshape(const_3984.astype('float64'), [4, 13, 6]), ), 0)
uop_3986 = relay.sqrt(bop_3943.astype('float64')) # shape=(16, 7, 16)
uop_3996 = relay.atanh(uop_3938.astype('float64')) # shape=(16, 7, 16)
output = relay.Tuple([call_3889,var_3890,var_3891,call_3896,const_3897,const_3898,const_3899,bop_3908,call_3920,call_3923,var_3924,var_3925,call_3957,const_3958,bop_3975,call_3983,const_3984,uop_3986,uop_3996,])
output2 = relay.Tuple([call_3892,var_3890,var_3891,call_3900,const_3897,const_3898,const_3899,bop_3908,call_3921,call_3926,var_3924,var_3925,call_3959,const_3958,bop_3975,call_3985,const_3984,uop_3986,uop_3996,])
func_4000 = relay.Function([var_3860,var_3861,var_3890,var_3891,var_3924,var_3925,], output)
mod['func_4000'] = func_4000
mod = relay.transform.InferType()(mod)
mutated_mod['func_4000'] = func_4000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4000_call = mutated_mod.get_global_var('func_4000')
var_4002 = relay.var("var_4002", dtype = "uint8", shape = (16, 7, 16))#candidate|4002|(16, 7, 16)|var|uint8
var_4003 = relay.var("var_4003", dtype = "uint8", shape = (16, 7, 16))#candidate|4003|(16, 7, 16)|var|uint8
var_4004 = relay.var("var_4004", dtype = "float64", shape = (60,))#candidate|4004|(60,)|var|float64
var_4005 = relay.var("var_4005", dtype = "uint32", shape = (35,))#candidate|4005|(35,)|var|uint32
var_4006 = relay.var("var_4006", dtype = "float64", shape = (11, 4))#candidate|4006|(11, 4)|var|float64
var_4007 = relay.var("var_4007", dtype = "int64", shape = (560,))#candidate|4007|(560,)|var|int64
call_4001 = func_4000_call(var_4002,var_4003,var_4004,var_4005,var_4006,var_4007,)
output = call_4001
func_4008 = relay.Function([var_4002,var_4003,var_4004,var_4005,var_4006,var_4007,], output)
mutated_mod['func_4008'] = func_4008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3685_call = mod.get_global_var('func_3685')
func_3687_call = mutated_mod.get_global_var('func_3687')
call_4040 = func_3685_call()
call_4041 = func_3685_call()
output = relay.Tuple([call_4040,])
output2 = relay.Tuple([call_4041,])
func_4049 = relay.Function([], output)
mod['func_4049'] = func_4049
mod = relay.transform.InferType()(mod)
output = func_4049()
func_4050 = relay.Function([], output)
mutated_mod['func_4050'] = func_4050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3643_call = mod.get_global_var('func_3643')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_4071 = func_3643_call()
call_4072 = func_3643_call()
func_3384_call = mod.get_global_var('func_3384')
func_3390_call = mutated_mod.get_global_var('func_3390')
var_4075 = relay.var("var_4075", dtype = "float64", shape = (3, 28))#candidate|4075|(3, 28)|var|float64
const_4076 = relay.const([-6.021493,8.821987,3.267695,0.717632,-0.081487,3.696104,9.530717,-3.496291,1.944043,-2.149820,-7.591452,-8.864238,3.667872,-6.890946,5.525206,4.797996,4.876668,-5.904256,3.914623,-7.834594,-7.317423,3.893303,-7.477094,-0.674364,-6.861725,9.277022,5.406969,-5.179220,-3.408760,-6.968161,-3.388484,0.095287,-4.361111,-7.088362,8.401279,2.431211,-1.237602,1.490635,-6.460186,-3.493031,8.698561,4.066765,-6.658712,1.620074], dtype = "float32")#candidate|4076|(44,)|const|float32
var_4077 = relay.var("var_4077", dtype = "float32", shape = (14,))#candidate|4077|(14,)|var|float32
call_4074 = relay.TupleGetItem(func_3384_call(relay.reshape(var_4075.astype('float64'), [3, 2, 14]), relay.reshape(var_4075.astype('float64'), [3, 2, 14]), relay.reshape(const_4076.astype('float32'), [44,]), relay.reshape(var_4077.astype('float32'), [14,]), relay.reshape(var_4075.astype('bool'), [3, 2, 14]), ), 2)
call_4078 = relay.TupleGetItem(func_3390_call(relay.reshape(var_4075.astype('float64'), [3, 2, 14]), relay.reshape(var_4075.astype('float64'), [3, 2, 14]), relay.reshape(const_4076.astype('float32'), [44,]), relay.reshape(var_4077.astype('float32'), [14,]), relay.reshape(var_4075.astype('bool'), [3, 2, 14]), ), 2)
output = relay.Tuple([call_4071,call_4074,var_4075,const_4076,var_4077,])
output2 = relay.Tuple([call_4072,call_4078,var_4075,const_4076,var_4077,])
func_4094 = relay.Function([var_4075,var_4077,], output)
mod['func_4094'] = func_4094
mod = relay.transform.InferType()(mod)
mutated_mod['func_4094'] = func_4094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4094_call = mutated_mod.get_global_var('func_4094')
var_4096 = relay.var("var_4096", dtype = "float64", shape = (3, 28))#candidate|4096|(3, 28)|var|float64
var_4097 = relay.var("var_4097", dtype = "float32", shape = (14,))#candidate|4097|(14,)|var|float32
call_4095 = func_4094_call(var_4096,var_4097,)
output = call_4095
func_4098 = relay.Function([var_4096,var_4097,], output)
mutated_mod['func_4098'] = func_4098
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3685_call = mod.get_global_var('func_3685')
func_3687_call = mutated_mod.get_global_var('func_3687')
call_4116 = func_3685_call()
call_4117 = func_3685_call()
output = relay.Tuple([call_4116,])
output2 = relay.Tuple([call_4117,])
func_4120 = relay.Function([], output)
mod['func_4120'] = func_4120
mod = relay.transform.InferType()(mod)
output = func_4120()
func_4121 = relay.Function([], output)
mutated_mod['func_4121'] = func_4121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4120_call = mod.get_global_var('func_4120')
func_4121_call = mutated_mod.get_global_var('func_4121')
call_4128 = relay.TupleGetItem(func_4120_call(), 0)
call_4129 = relay.TupleGetItem(func_4121_call(), 0)
output = call_4128
output2 = call_4129
func_4151 = relay.Function([], output)
mod['func_4151'] = func_4151
mod = relay.transform.InferType()(mod)
mutated_mod['func_4151'] = func_4151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4151_call = mutated_mod.get_global_var('func_4151')
call_4152 = func_4151_call()
output = call_4152
func_4153 = relay.Function([], output)
mutated_mod['func_4153'] = func_4153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4151_call = mod.get_global_var('func_4151')
func_4153_call = mutated_mod.get_global_var('func_4153')
call_4162 = func_4151_call()
call_4163 = func_4151_call()
var_4167 = relay.var("var_4167", dtype = "float32", shape = (11, 5))#candidate|4167|(11, 5)|var|float32
bop_4168 = relay.multiply(call_4162.astype('int8'), relay.reshape(var_4167.astype('int8'), relay.shape_of(call_4162))) # shape=(11, 5)
bop_4171 = relay.multiply(call_4163.astype('int8'), relay.reshape(var_4167.astype('int8'), relay.shape_of(call_4163))) # shape=(11, 5)
func_2898_call = mod.get_global_var('func_2898')
func_2902_call = mutated_mod.get_global_var('func_2902')
const_4175 = relay.const([-9.984347,-9.217521,-5.837607,6.727621,-5.516893,-1.475176,7.572735,-3.323544,9.509602,-6.503220,-0.115697,6.393629,4.498115,4.676569,-2.581847,-1.813068,6.041728,9.963999,-4.836383,-8.133940,-5.530235,-8.581243,-7.399015,-6.987267,-3.542919,7.679203,9.179586,-8.591196,8.946001,-5.243706,-0.842465,-7.435573,1.553002,2.461652,-4.523925,-1.122566,-6.580040,5.627685,6.137541,-1.153454,-0.131741,-3.318028,-7.148149,-5.906695,-0.181243,3.950686,2.399437,-4.017374,-0.603159,3.170237,-6.699883,4.788095,-7.827805,2.099856,-4.516198,5.540947,4.152973,5.274689,-2.442506,7.886796,-4.270586,0.260622,-7.765917,-6.822963,6.543293,-4.567079,0.485755,-6.734959,-7.200810,4.606677,-1.928477,6.637905,-1.189420,7.606752,-4.690493,8.172713,-2.938433,2.818416,3.764650,2.969794,4.305698,-8.144685,5.570013,-8.823450,-8.233558,9.424401,-4.572209,9.799463,8.946499,8.652532,2.001112,-2.516981,-3.116600,9.011562,2.498053,-9.043351,-4.465106,1.778447,-3.262410,9.491188,8.879248,9.135955,8.067895,-8.214989,0.310991,-1.304216,-7.831553,-3.809051,-6.959436,-8.418667,-6.817264,-7.715303,9.468070,6.614442,1.193867,7.186104,2.323496,-1.850397,7.207924,1.587555,9.666466,5.699416,-2.824160,-2.776867,7.821586,-7.544350,6.561195,-8.022560,-7.250316,-2.150737,-7.227271,-6.026626,-2.656963,-4.208259,5.561455,5.237269,-4.743759,-4.248398,-8.481758,1.990491,-7.032401,-0.147755,8.589521,-0.068495,-2.382817,6.602835,-4.077588,-2.013121,6.130455,-8.823077,-4.295704,7.075623,3.954345,9.007297,-8.763700,0.798091,-6.038159,-5.502689,6.688665,6.254359,-8.558208,-7.414109,-8.930910,4.364093,-6.058614,-8.325446,4.283262,9.287037,9.617118,4.419724,6.024560,-1.566634,-9.462472,7.431310,-6.958660,4.254923,-9.898516,1.940820,-2.068528,-6.858093,3.540475,4.518353,-8.237759,4.626196,9.108215,9.014570,0.551203,-1.407281,-8.496745,0.854331,-8.241242,8.345437,7.383648,4.818518,-0.582715,-7.023978,-3.902991,-6.199090,-5.934392,-4.039559,-4.819550,-4.384572,-2.583820,6.076013,6.028543,3.282737,3.136233,-2.974125,4.958660,-7.064146,9.648279,1.696451,-6.666896,-3.908147,7.898496,-5.838167,-7.397049,-1.329977,8.731606,6.294640,-6.607591,-1.848883,-2.399136,-3.960169,-9.195625,7.559997,4.196488,6.065659,-5.171993,-0.263282,3.587451,-7.246025,-7.677570,-1.156313,-5.013515,-3.594064,-6.229060,5.392892,5.217778,-8.163341,-3.639048,8.222529,4.333691,-0.974509,-1.474316,4.657165,1.866878,2.834794,-1.907789,-8.816705,1.933121,-7.549206,5.582898,-3.210457,3.941328,1.998840,-9.984507,-9.184086,7.772418,-4.362729,4.107972,5.292318,6.282726,-4.084293,-3.237432,-6.660729,8.594856,3.346653,-5.002291,5.540373,4.560186,-2.656462,2.463363,1.335825,0.907708,-6.557514,0.879710,9.871412,-2.895265,3.391609,-4.513797,2.260845,-1.225182,8.271266,-5.465584,-1.236105,9.661822,-4.110704,1.868519,2.542355,2.311559,-0.240146,-3.891539,5.265823,4.274070,8.429305,-1.813602,-4.984226,-8.904551,-1.446653,-6.475685,-7.968366,9.739884,5.828147,-6.201158,6.279672,-6.461276,-2.699245,2.683125,-9.678300,-1.154685,1.487289], dtype = "float64")#candidate|4175|(312,)|const|float64
call_4174 = relay.TupleGetItem(func_2898_call(relay.reshape(const_4175.astype('float64'), [4, 13, 6]), relay.reshape(const_4175.astype('float64'), [4, 13, 6]), ), 0)
call_4176 = relay.TupleGetItem(func_2902_call(relay.reshape(const_4175.astype('float64'), [4, 13, 6]), relay.reshape(const_4175.astype('float64'), [4, 13, 6]), ), 0)
func_717_call = mod.get_global_var('func_717')
func_722_call = mutated_mod.get_global_var('func_722')
var_4185 = relay.var("var_4185", dtype = "float32", shape = (20, 48))#candidate|4185|(20, 48)|var|float32
var_4186 = relay.var("var_4186", dtype = "float64", shape = (180,))#candidate|4186|(180,)|var|float64
call_4184 = relay.TupleGetItem(func_717_call(relay.reshape(var_4185.astype('float32'), [8, 8, 15]), relay.reshape(var_4185.astype('float32'), [8, 8, 15]), relay.reshape(var_4186.astype('float64'), [180,]), relay.reshape(var_4185.astype('float32'), [8, 8, 15]), ), 6)
call_4187 = relay.TupleGetItem(func_722_call(relay.reshape(var_4185.astype('float32'), [8, 8, 15]), relay.reshape(var_4185.astype('float32'), [8, 8, 15]), relay.reshape(var_4186.astype('float64'), [180,]), relay.reshape(var_4185.astype('float32'), [8, 8, 15]), ), 6)
func_2128_call = mod.get_global_var('func_2128')
func_2136_call = mutated_mod.get_global_var('func_2136')
const_4191 = relay.const([[-6,-8],[-2,7],[5,-6],[-8,2],[9,-1]], dtype = "int32")#candidate|4191|(5, 2)|const|int32
var_4192 = relay.var("var_4192", dtype = "int32", shape = (30,))#candidate|4192|(30,)|var|int32
var_4193 = relay.var("var_4193", dtype = "float64", shape = (26, 2))#candidate|4193|(26, 2)|var|float64
const_4194 = relay.const([9,-1,-1,-7,-4,-6,-4,9,-8,-3,2,-3,4,9,6,-5,6,-3,7,-5,1,-5,10,5,8,-9,5,-1,5,-3,10,8,-5,4,-3,4,-10,-8,-2,-2,-4,-3,2,8,-5,-2,8,-2,3,7,-5,-1,-2,9,6,6,-10,-7,-6,2,5,-8,-4,-7,6,-6,-5,-10,-7,-10,-8,-1,9,5,-2,-7,-10,1,5,4,2,-6,6,3,-3,-4,-3,-3,4,6], dtype = "uint8")#candidate|4194|(90,)|const|uint8
var_4195 = relay.var("var_4195", dtype = "uint32", shape = (35,))#candidate|4195|(35,)|var|uint32
var_4196 = relay.var("var_4196", dtype = "bool", shape = (3, 78))#candidate|4196|(3, 78)|var|bool
call_4190 = relay.TupleGetItem(func_2128_call(relay.reshape(const_4191.astype('int32'), [5, 1, 2]), relay.reshape(var_4192.astype('int32'), [5, 3, 2]), relay.reshape(var_4193.astype('float64'), [52,]), relay.reshape(const_4194.astype('uint8'), [90,]), relay.reshape(var_4195.astype('uint32'), [35,]), relay.reshape(var_4196.astype('bool'), [234, 1]), ), 0)
call_4197 = relay.TupleGetItem(func_2136_call(relay.reshape(const_4191.astype('int32'), [5, 1, 2]), relay.reshape(var_4192.astype('int32'), [5, 3, 2]), relay.reshape(var_4193.astype('float64'), [52,]), relay.reshape(const_4194.astype('uint8'), [90,]), relay.reshape(var_4195.astype('uint32'), [35,]), relay.reshape(var_4196.astype('bool'), [234, 1]), ), 0)
output = relay.Tuple([bop_4168,call_4174,const_4175,call_4184,var_4185,var_4186,call_4190,const_4191,var_4192,var_4193,const_4194,var_4195,var_4196,])
output2 = relay.Tuple([bop_4171,call_4176,const_4175,call_4187,var_4185,var_4186,call_4197,const_4191,var_4192,var_4193,const_4194,var_4195,var_4196,])
func_4198 = relay.Function([var_4167,var_4185,var_4186,var_4192,var_4193,var_4195,var_4196,], output)
mod['func_4198'] = func_4198
mod = relay.transform.InferType()(mod)
var_4199 = relay.var("var_4199", dtype = "float32", shape = (11, 5))#candidate|4199|(11, 5)|var|float32
var_4200 = relay.var("var_4200", dtype = "float32", shape = (20, 48))#candidate|4200|(20, 48)|var|float32
var_4201 = relay.var("var_4201", dtype = "float64", shape = (180,))#candidate|4201|(180,)|var|float64
var_4202 = relay.var("var_4202", dtype = "int32", shape = (30,))#candidate|4202|(30,)|var|int32
var_4203 = relay.var("var_4203", dtype = "float64", shape = (26, 2))#candidate|4203|(26, 2)|var|float64
var_4204 = relay.var("var_4204", dtype = "uint32", shape = (35,))#candidate|4204|(35,)|var|uint32
var_4205 = relay.var("var_4205", dtype = "bool", shape = (3, 78))#candidate|4205|(3, 78)|var|bool
output = func_4198(var_4199,var_4200,var_4201,var_4202,var_4203,var_4204,var_4205,)
func_4206 = relay.Function([var_4199,var_4200,var_4201,var_4202,var_4203,var_4204,var_4205,], output)
mutated_mod['func_4206'] = func_4206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3643_call = mod.get_global_var('func_3643')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_4238 = func_3643_call()
call_4239 = func_3643_call()
func_3111_call = mod.get_global_var('func_3111')
func_3117_call = mutated_mod.get_global_var('func_3117')
const_4243 = relay.const([[-4],[-6],[2],[-6],[-5],[-6],[8],[-9],[-6],[-10],[-5],[-5],[-6],[1],[-3],[-3],[-3],[3],[-10],[-2],[3],[-9],[8],[9],[-5],[4],[10],[8],[-2],[-1],[10],[-9],[4],[-10],[-10],[-1],[-10],[4],[-8],[-4],[2],[4],[9],[7],[9],[-6],[2],[5],[7],[10],[6],[4],[2],[6],[1],[-3],[-9],[-4],[-7],[2],[10],[8],[-1],[-10],[6],[10],[3],[-2],[2],[-5],[9],[5],[-4],[-6],[3],[-8],[6],[-9],[-9],[-7],[-10],[1],[-3],[-8],[-10],[-5],[10],[-6],[-2],[-7],[2],[9],[3],[5],[6],[-1],[1],[2],[4],[8],[-3],[-2],[4],[7],[-2],[-2],[-2],[-2],[-9],[-7],[1],[3],[-9],[-7],[-5],[6],[7]], dtype = "int64")#candidate|4243|(117, 1)|const|int64
const_4244 = relay.const([-6.761895,1.450221,-5.912422,3.413869,-6.940146,7.736479,-6.007202,4.327229,-8.067698,-2.082341,1.679523,-0.348770,-8.925241,6.487656,-5.034346,-2.341828,8.340228,-7.242241,-8.454060,5.880619,7.060707,-4.241016,-5.785190,-3.502840,-2.110633,-4.224397,-8.035636,2.886002,7.104724,8.658141,2.810215,-7.920431,6.709591,-0.231905,-6.893789,-7.987287,-4.930381,8.670135,-5.232549,-2.026311,7.792404,-0.716149,5.810324,-1.630397,-9.027587,0.353584,6.189790,-8.674611,-3.960717,-6.979142,-1.429545,0.951341,8.685840,3.588903,-9.712530,-8.137492,-3.232287,-7.694992,1.807012,-4.830988,-7.962232,6.046145,5.747073,-0.583246,4.439516,-5.243990,1.957811,-3.805764,3.248340,-3.943254,4.726139,6.936180,-3.142968,-0.581002,-8.095133,6.230139,-0.043797,-9.257861,3.083635,5.468223,-8.610496,-3.492928,2.581644,-5.575433,8.195024,4.247229,-1.748106,-5.205925,-4.369689,-8.257830,-3.607551,7.025100,-0.775094,-6.052170,-9.560607,-5.227514,-0.904448,-2.429741,-9.575449,-9.278796,8.749435,-5.982759,-3.452899,-4.130824,7.925822,5.789631,5.154153,-2.468203,-6.658645,8.211887,3.088493,1.772883,-1.911063,9.315748,4.561391,-3.546379,3.740629,-9.508964,-3.963033,-4.813258,7.552246,9.918463,-9.209099,-7.281939,-2.359940,0.217737,-1.880944,9.329506,-5.861320,0.890224,-4.909903,2.654002,-2.410828,2.785751,-2.310409,3.083122,9.713700,-9.198157,-0.375226,3.459394,-7.883345,-8.942048,6.302310,-8.666713,6.793458,0.644512,1.284772,9.599489,-7.287704,-2.684115,7.152065,-4.381090,-9.863619,-9.081689,-2.441354,-3.577703,8.536906,9.838734,-1.329148,-4.677232,3.772565,-4.812881,-4.062652,-8.669574,-9.192306,-5.401408,-9.288471,1.540831,2.096787,-8.244490,9.078322,3.623878,8.784339,8.167241,-2.114200,5.194572,-4.437849,-4.217223,-4.149337,9.243126], dtype = "float64")#candidate|4244|(180,)|const|float64
call_4242 = relay.TupleGetItem(func_3111_call(relay.reshape(const_4243.astype('int64'), [3, 3, 13]), relay.reshape(const_4243.astype('int64'), [3, 3, 13]), relay.reshape(const_4243.astype('int64'), [3, 3, 13]), relay.reshape(const_4244.astype('float64'), [180,]), ), 3)
call_4245 = relay.TupleGetItem(func_3117_call(relay.reshape(const_4243.astype('int64'), [3, 3, 13]), relay.reshape(const_4243.astype('int64'), [3, 3, 13]), relay.reshape(const_4243.astype('int64'), [3, 3, 13]), relay.reshape(const_4244.astype('float64'), [180,]), ), 3)
func_1014_call = mod.get_global_var('func_1014')
func_1018_call = mutated_mod.get_global_var('func_1018')
var_4250 = relay.var("var_4250", dtype = "uint32", shape = (35,))#candidate|4250|(35,)|var|uint32
call_4249 = func_1014_call(relay.reshape(var_4250.astype('uint32'), [7, 5]), relay.reshape(var_4250.astype('uint32'), [7, 5]), )
call_4251 = func_1014_call(relay.reshape(var_4250.astype('uint32'), [7, 5]), relay.reshape(var_4250.astype('uint32'), [7, 5]), )
func_1811_call = mod.get_global_var('func_1811')
func_1814_call = mutated_mod.get_global_var('func_1814')
var_4254 = relay.var("var_4254", dtype = "float64", shape = (175, 3))#candidate|4254|(175, 3)|var|float64
var_4255 = relay.var("var_4255", dtype = "float32", shape = (14,))#candidate|4255|(14,)|var|float32
call_4253 = relay.TupleGetItem(func_1811_call(relay.reshape(var_4254.astype('float64'), [5, 15, 7]), relay.reshape(var_4255.astype('float32'), [14, 1]), ), 2)
call_4256 = relay.TupleGetItem(func_1814_call(relay.reshape(var_4254.astype('float64'), [5, 15, 7]), relay.reshape(var_4255.astype('float32'), [14, 1]), ), 2)
output = relay.Tuple([call_4238,call_4242,const_4243,const_4244,call_4249,var_4250,call_4253,var_4254,var_4255,])
output2 = relay.Tuple([call_4239,call_4245,const_4243,const_4244,call_4251,var_4250,call_4256,var_4254,var_4255,])
func_4257 = relay.Function([var_4250,var_4254,var_4255,], output)
mod['func_4257'] = func_4257
mod = relay.transform.InferType()(mod)
var_4258 = relay.var("var_4258", dtype = "uint32", shape = (35,))#candidate|4258|(35,)|var|uint32
var_4259 = relay.var("var_4259", dtype = "float64", shape = (175, 3))#candidate|4259|(175, 3)|var|float64
var_4260 = relay.var("var_4260", dtype = "float32", shape = (14,))#candidate|4260|(14,)|var|float32
output = func_4257(var_4258,var_4259,var_4260,)
func_4261 = relay.Function([var_4258,var_4259,var_4260,], output)
mutated_mod['func_4261'] = func_4261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4049_call = mod.get_global_var('func_4049')
func_4050_call = mutated_mod.get_global_var('func_4050')
call_4314 = relay.TupleGetItem(func_4049_call(), 0)
call_4315 = relay.TupleGetItem(func_4050_call(), 0)
output = relay.Tuple([call_4314,])
output2 = relay.Tuple([call_4315,])
func_4318 = relay.Function([], output)
mod['func_4318'] = func_4318
mod = relay.transform.InferType()(mod)
mutated_mod['func_4318'] = func_4318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4318_call = mutated_mod.get_global_var('func_4318')
call_4319 = func_4318_call()
output = call_4319
func_4320 = relay.Function([], output)
mutated_mod['func_4320'] = func_4320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4318_call = mod.get_global_var('func_4318')
func_4320_call = mutated_mod.get_global_var('func_4320')
call_4352 = relay.TupleGetItem(func_4318_call(), 0)
call_4353 = relay.TupleGetItem(func_4320_call(), 0)
func_2594_call = mod.get_global_var('func_2594')
func_2599_call = mutated_mod.get_global_var('func_2599')
var_4358 = relay.var("var_4358", dtype = "float32", shape = (180, 4))#candidate|4358|(180, 4)|var|float32
const_4359 = relay.const([-6.243649,-7.903756,-4.705088,-0.461775,-3.056326,-6.972695,-8.902054,-3.988556,4.815247,2.871903,-0.084186,-2.206014,-0.788300,8.382672,-9.119115,-3.926347,6.558348,-7.032367,-2.636570,-6.243374,2.598063,-5.435244,-1.335971,-2.552218,7.942112,7.340605,1.889002,-9.007161,-9.820340,8.212752,2.728571,-7.599126,9.167180,9.934580,6.215103,-8.915983,-0.652467,-3.206178,-7.413867,-7.180429,3.471569,7.291358,8.544382,-3.755741,-1.773013,-5.397756,6.222881,-9.380956], dtype = "float32")#candidate|4359|(48,)|const|float32
call_4357 = relay.TupleGetItem(func_2594_call(relay.reshape(var_4358.astype('float32'), [9, 5, 16]), relay.reshape(var_4358.astype('float32'), [9, 5, 16]), relay.reshape(const_4359.astype('float32'), [48,]), ), 5)
call_4360 = relay.TupleGetItem(func_2599_call(relay.reshape(var_4358.astype('float32'), [9, 5, 16]), relay.reshape(var_4358.astype('float32'), [9, 5, 16]), relay.reshape(const_4359.astype('float32'), [48,]), ), 5)
output = relay.Tuple([call_4352,call_4357,var_4358,const_4359,])
output2 = relay.Tuple([call_4353,call_4360,var_4358,const_4359,])
func_4368 = relay.Function([var_4358,], output)
mod['func_4368'] = func_4368
mod = relay.transform.InferType()(mod)
mutated_mod['func_4368'] = func_4368
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4369 = relay.var("var_4369", dtype = "float32", shape = (180, 4))#candidate|4369|(180, 4)|var|float32
func_4368_call = mutated_mod.get_global_var('func_4368')
call_4370 = func_4368_call(var_4369)
output = call_4370
func_4371 = relay.Function([var_4369], output)
mutated_mod['func_4371'] = func_4371
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4406 = relay.const([[[False,True,True,False,False,False,False,False,False,False,True,False,True,True,False,False],[True,True,True,True,False,True,True,True,True,False,False,False,True,True,True,True],[False,False,True,True,False,False,True,False,False,True,False,False,False,False,False,True],[False,True,False,False,False,False,True,False,False,True,False,True,False,True,False,False]],[[True,False,True,True,False,True,False,False,False,False,False,False,True,True,True,True],[False,True,True,True,True,False,True,True,True,True,False,True,True,True,True,False],[True,True,False,True,False,False,True,False,False,False,False,True,True,True,False,True],[False,True,False,False,True,True,True,False,True,False,True,False,True,True,False,False]],[[False,False,True,False,False,False,False,True,False,False,False,True,True,True,True,True],[False,True,True,False,True,True,False,False,True,False,False,False,True,False,False,True],[True,True,True,True,True,True,False,False,True,True,True,False,False,False,True,False],[False,True,False,True,False,True,True,True,True,True,True,False,True,True,True,False]],[[False,False,False,True,True,False,True,False,True,True,False,True,True,True,False,True],[False,False,False,False,True,True,True,False,False,False,False,False,True,True,False,True],[True,False,True,False,True,False,False,False,True,False,False,True,False,False,False,False],[False,True,True,False,False,False,False,True,True,True,True,False,False,True,False,False]],[[False,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False],[True,True,False,False,True,False,True,False,True,False,True,False,True,True,False,True],[False,False,False,True,True,False,False,True,True,False,False,True,True,False,True,False],[True,True,False,True,True,True,True,True,True,False,True,True,True,True,False,True]],[[True,True,True,True,True,True,False,False,False,False,True,True,True,False,True,False],[True,False,True,True,True,True,False,True,True,True,False,True,False,False,False,True],[True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,False],[True,False,True,True,True,True,False,False,False,False,True,False,False,False,False,False]],[[True,False,False,False,True,True,True,False,False,True,False,True,True,False,True,False],[False,True,True,True,False,True,False,True,True,True,True,False,True,True,False,True],[False,False,True,True,False,True,True,False,False,True,True,True,True,False,False,False],[True,True,True,False,True,True,True,False,True,False,False,False,False,False,True,False]],[[True,True,True,True,False,False,True,False,True,False,False,False,False,False,False,False],[True,False,False,False,True,True,True,False,True,True,True,True,False,False,True,True],[True,False,False,True,False,True,False,True,True,False,False,True,False,False,True,True],[False,True,False,False,False,True,False,False,False,True,True,False,False,True,True,True]],[[True,True,True,False,False,True,True,True,True,True,True,True,False,False,False,False],[False,False,False,False,True,True,False,False,False,False,False,False,True,False,False,False],[True,True,False,False,False,False,True,True,True,False,False,True,True,False,False,True],[True,False,True,False,True,False,False,False,False,True,False,True,True,False,True,False]],[[True,False,False,True,False,False,False,True,False,False,True,True,True,True,False,False],[True,False,False,True,False,True,True,False,False,True,True,True,False,False,True,True],[False,False,True,False,False,True,False,False,False,True,False,True,False,False,True,True],[False,True,False,False,False,True,False,False,True,True,True,True,False,True,False,False]]], dtype = "bool")#candidate|4406|(10, 4, 16)|const|bool
var_4407 = relay.var("var_4407", dtype = "bool", shape = (10, 4, 16))#candidate|4407|(10, 4, 16)|var|bool
bop_4408 = relay.logical_or(const_4406.astype('bool'), relay.reshape(var_4407.astype('bool'), relay.shape_of(const_4406))) # shape=(10, 4, 16)
func_3777_call = mod.get_global_var('func_3777')
func_3779_call = mutated_mod.get_global_var('func_3779')
var_4416 = relay.var("var_4416", dtype = "float32", shape = (320,))#candidate|4416|(320,)|var|float32
call_4415 = func_3777_call(relay.reshape(var_4416.astype('float32'), [4, 16, 5]))
call_4417 = func_3777_call(relay.reshape(var_4416.astype('float32'), [4, 16, 5]))
output = relay.Tuple([bop_4408,call_4415,var_4416,])
output2 = relay.Tuple([bop_4408,call_4417,var_4416,])
func_4419 = relay.Function([var_4407,var_4416,], output)
mod['func_4419'] = func_4419
mod = relay.transform.InferType()(mod)
var_4420 = relay.var("var_4420", dtype = "bool", shape = (10, 4, 16))#candidate|4420|(10, 4, 16)|var|bool
var_4421 = relay.var("var_4421", dtype = "float32", shape = (320,))#candidate|4421|(320,)|var|float32
output = func_4419(var_4420,var_4421,)
func_4422 = relay.Function([var_4420,var_4421,], output)
mutated_mod['func_4422'] = func_4422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4120_call = mod.get_global_var('func_4120')
func_4121_call = mutated_mod.get_global_var('func_4121')
call_4463 = relay.TupleGetItem(func_4120_call(), 0)
call_4464 = relay.TupleGetItem(func_4121_call(), 0)
func_3643_call = mod.get_global_var('func_3643')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_4478 = func_3643_call()
call_4479 = func_3643_call()
output = relay.Tuple([call_4463,call_4478,])
output2 = relay.Tuple([call_4464,call_4479,])
func_4488 = relay.Function([], output)
mod['func_4488'] = func_4488
mod = relay.transform.InferType()(mod)
output = func_4488()
func_4489 = relay.Function([], output)
mutated_mod['func_4489'] = func_4489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4488_call = mod.get_global_var('func_4488')
func_4489_call = mutated_mod.get_global_var('func_4489')
call_4544 = relay.TupleGetItem(func_4488_call(), 0)
call_4545 = relay.TupleGetItem(func_4489_call(), 0)
func_4368_call = mod.get_global_var('func_4368')
func_4371_call = mutated_mod.get_global_var('func_4371')
const_4568 = relay.const([-3.303011,6.484952,-8.603033,-6.398460,-1.053758,-6.514581,-7.379057,-8.758019,-1.328014,0.014892,-6.785721,5.500240,-2.320337,-5.612589,-2.611514,3.889396,-1.280520,-1.671923,2.597450,6.880231,-4.718686,-5.558036,5.961368,0.881885,7.806862,8.156183,1.176370,-4.509626,-5.384700,8.827980,1.837081,8.138578,-5.630121,-7.375313,-6.084491,3.412190,-2.175450,-7.423699,1.173699,0.115053,-5.544431,-2.745362,7.589276,-8.734206,2.305466,3.180254,-2.577693,-4.221345,-9.210228,-6.748771,8.183435,0.326928,9.387560,9.881004,-2.922009,-2.844729,4.087497,-7.527707,1.630469,-1.095994,9.703543,-3.386793,7.582188,-8.879271,5.436198,-6.814006,-7.235750,-3.526381,8.676502,-0.906273,1.583560,8.648042,-7.572658,7.513994,-2.571841,-4.005004,0.576701,8.223589,-4.899218,6.157044,-7.555952,-9.963347,3.808281,9.351461,-1.737242,-1.142841,-7.015587,8.622346,-8.629676,-2.461727,-1.692797,-7.102739,7.949563,-9.978651,6.837636,-4.094365,-0.609468,-6.789881,1.922377,-3.415653,-1.231144,5.595202,-0.348637,0.918183,-1.801513,9.334973,-2.295332,-3.572762,5.059273,3.667619,-3.296398,4.619166,-8.759599,4.116609,5.006483,-5.838241,-7.689673,-4.750388,-7.593201,6.289177,3.883424,7.012894,-1.843906,-7.462102,4.651955,-7.109715,8.519264,-2.822969,-1.536941,4.229902,5.015076,0.687209,-5.508728,6.381775,1.317474,2.692126,3.912881,-2.264540,-9.763929,-9.250126,5.573945,-0.390294,-3.518606,-0.223973,-6.486382,-9.876019,3.318465,5.528542,4.796323,-0.983397,-6.374059,5.812060,0.527305,2.881249,-3.980894,1.854632,8.267900,-8.159259,-4.504696,-9.759349,9.119873,-0.804704,-3.016986,-3.274653,-2.451322,-9.232208,-6.042837,0.197202,1.976481,5.738772,-5.510130,1.994245,-0.139108,2.715656,7.543765,5.073291,-4.391675,4.431584,-6.740540,-2.002027,1.928347,3.843049,-5.678478,8.627012,4.969871,-4.550120,2.384294,4.416670,9.494179,-3.408130,-9.342142,9.779747,3.877064,0.836470,-0.466509,4.853431,-9.228535,3.885827,1.676127,1.480815,-0.849584,-3.152402,6.126520,3.151034,-7.728222,1.916385,-0.096658,0.492534,-3.933849,0.849376,-2.845021,-3.538033,2.402204,3.805621,-5.228992,0.765405,-1.482902,-9.956268,-5.074789,1.950650,7.247835,1.540381,2.210610,7.364669,-7.150770,0.170874,4.615852,6.759925,8.774390,8.692435,7.450200,-2.074882,-2.484403,-7.859321,0.447674,6.159240,-4.412962,-4.295912,0.507120,6.902857,-0.997079,-8.305645,-7.748794,-7.656243,4.532630,1.901926,-9.387830,-3.321489,-0.077113,9.841058,-7.789711,-7.591209,-1.885754,7.078232,7.576965,9.722910,9.223083,5.808857,0.548245,4.835909,-6.335833,-8.754672,5.584050,9.724114,8.659687,3.865062,-5.969507,-1.785835,-2.866535,-5.258233,8.570683,4.338009,-8.185821,-7.932150,-3.487860,-5.300701,9.727992,5.821239,9.730204,-5.604014,-8.327739,3.347136,-9.648936,1.452978,3.552444,-7.162652,5.080960,1.602581,-0.914703,8.352154,8.568628,7.274477,-2.654307,6.607210,-0.172700,-9.815302,6.859088,6.130636,-6.891349,-3.211261,-7.740944,-9.088280,-2.801790,2.579591,7.113441,7.269318,-3.244816,5.141480,-5.116480,1.499935,6.708615,6.216455,3.279620,-1.516589,3.069976,3.353862,7.238568,3.237047,8.430685,-5.451119,1.050416,7.400517,2.044057,5.900239,-4.367768,-0.619039,-2.017396,-8.143302,-8.680823,0.764596,-4.749586,2.635912,-7.294049,7.162392,-9.356647,0.615840,-2.392294,1.256919,4.644375,5.874255,3.360131,6.387921,0.837322,3.096692,-5.430142,5.558400,0.715801,-7.890605,2.396448,4.545267,-5.545099,5.883527,-2.631218,-6.264561,5.043767,7.484093,0.982357,2.318537,-8.137155,-5.952853,8.484627,4.698705,-0.186009,0.057309,-4.691634,9.363387,5.378348,6.023797,-2.968044,1.185763,9.508692,-8.063796,-7.754483,2.085087,9.129529,6.957523,9.044478,4.665994,5.578149,3.186597,-0.642470,-8.537964,0.705352,3.667888,6.020938,-5.276486,4.659409,5.499651,-1.581901,-1.552955,-9.937134,-1.319936,9.653303,8.862341,-7.964622,-6.919379,-8.503759,-4.025791,-3.903599,3.913294,1.154760,-3.356955,-0.579930,-0.713284,-5.109845,-1.393358,-4.426015,-7.118834,6.594430,-8.891180,-9.311088,-4.641421,7.710474,-3.250282,-5.121203,4.943421,0.157448,-6.859670,5.124814,-8.477390,6.210549,-2.113605,-5.745079,1.083198,3.306943,3.413421,-2.751758,-3.770131,8.975541,5.113440,-4.090842,8.707986,-2.810391,8.722044,-8.701439,6.494906,6.926570,8.529367,-8.964373,9.830419,1.719736,5.859171,-6.745187,1.854977,0.555850,9.833029,-7.090821,1.825240,-7.412482,-1.245135,8.106374,-5.506522,-8.665420,-2.839050,4.856748,-6.881854,-9.995784,-6.835287,8.096950,-8.806784,9.839578,-1.011437,-3.275226,-1.684061,-5.788111,9.310613,1.633171,-9.453810,-1.438422,-5.518432,-7.394908,-9.231584,7.987330,0.926395,-8.327028,2.930931,8.574215,6.148969,5.403727,-8.007049,8.046998,6.562163,-9.558442,-1.815891,-0.399235,-0.664016,7.196126,-3.534237,4.774276,0.780834,5.674902,7.189565,-4.876044,6.475983,4.477625,2.984153,0.129201,3.702211,6.992795,-3.575825,-6.765966,-0.259503,4.087803,-1.719083,7.350898,8.681524,-8.317606,4.089632,5.350651,2.909332,1.056379,3.162653,7.459587,-8.009561,-0.591564,6.658613,7.389796,-0.240963,-3.320626,6.281630,-2.675885,-4.617636,-4.529054,6.108235,-5.424939,-3.337038,-4.492129,7.707481,-6.732373,-0.031791,-6.750754,5.672805,3.242975,8.646428,5.828253,4.557614,9.297008,-6.417328,-1.665226,1.765015,-4.545626,-4.915685,-7.609867,8.509119,0.091158,2.588188,1.801565,9.601553,0.234740,-1.051292,0.931175,-3.018182,4.672249,-5.863217,0.412496,3.454949,4.424927,-6.246715,3.092301,-3.349387,2.000033,-3.202847,9.358632,5.290745,-7.819808,3.500869,-4.671613,-3.431377,-5.750275,5.212223,8.120576,-6.247587,-9.081413,-6.353360,-6.218914,-5.003042,-3.190229,-2.964643,-8.794638,-6.293287,5.335685,-3.248456,-6.345015,9.349938,-5.505823,-2.168610,9.252561,-4.419186,6.380331,2.666874,-9.527602,4.106520,1.025239,-5.605136,8.882305,-9.044077,-2.268032,-6.556802,-1.436517,6.214120,-4.893956,-5.227062,-2.819371,8.436913,1.210009,1.651188,-1.366944,-5.198430,-3.975673,9.492589,-3.363035,-0.306650,3.081097,1.679409,5.256677,-9.865900,-7.126223,5.426976,0.683645,-0.336806,-4.586242,-7.999312,-3.157264,-5.101340,1.617068,-2.475967,2.563822,-2.928044,-1.726002,-9.896299,7.256238,2.466334,7.994224,-9.098207,-7.076615,5.917690,0.154313,0.132693,1.293371,-1.833173,-4.433472,-6.050356,-5.127684,-7.345827,-9.943954,-7.329115,0.809259,6.288870,-0.771648,0.940668,-8.709298,9.570843,2.758654,8.708138,-0.605721,2.781602,-3.868028,8.286557,2.276436,8.301312,-5.806881,4.895200,-0.335826,0.636595,-8.973530,9.279931,7.115383,-8.655263,3.879653,3.839185,-8.600173,-4.084296,-6.820418,9.663902,9.290621,2.515090,-0.666337,3.952305,4.570742,0.697984,-4.417944,-9.761763,-3.492946,-6.161746,-7.379616,0.180661,-2.756356,-5.852330,0.245581,-1.086665,-6.822554,5.005125,-7.108223,0.957541,6.905216,-5.110245,9.499425,3.496756,5.617150,-9.534402,-6.741740,-0.788298,0.467906,0.067929,-6.971524,-0.646750,-7.917498,1.092984,-0.761605,-1.458138,-4.376846,5.867149,-5.660831,7.572723,-5.047783,0.070269,1.409353,-6.991411,-7.782135,-3.240152], dtype = "float32")#candidate|4568|(720,)|const|float32
call_4567 = relay.TupleGetItem(func_4368_call(relay.reshape(const_4568.astype('float32'), [180, 4])), 3)
call_4569 = relay.TupleGetItem(func_4371_call(relay.reshape(const_4568.astype('float32'), [180, 4])), 3)
func_908_call = mod.get_global_var('func_908')
func_911_call = mutated_mod.get_global_var('func_911')
var_4573 = relay.var("var_4573", dtype = "uint8", shape = (90,))#candidate|4573|(90,)|var|uint8
var_4574 = relay.var("var_4574", dtype = "uint8", shape = (810,))#candidate|4574|(810,)|var|uint8
call_4572 = func_908_call(relay.reshape(var_4573.astype('uint8'), [9, 1, 10]), relay.reshape(var_4574.astype('uint8'), [9, 9, 10]), )
call_4575 = func_908_call(relay.reshape(var_4573.astype('uint8'), [9, 1, 10]), relay.reshape(var_4574.astype('uint8'), [9, 9, 10]), )
output = relay.Tuple([call_4544,call_4567,const_4568,call_4572,var_4573,var_4574,])
output2 = relay.Tuple([call_4545,call_4569,const_4568,call_4575,var_4573,var_4574,])
func_4581 = relay.Function([var_4573,var_4574,], output)
mod['func_4581'] = func_4581
mod = relay.transform.InferType()(mod)
var_4582 = relay.var("var_4582", dtype = "uint8", shape = (90,))#candidate|4582|(90,)|var|uint8
var_4583 = relay.var("var_4583", dtype = "uint8", shape = (810,))#candidate|4583|(810,)|var|uint8
output = func_4581(var_4582,var_4583,)
func_4584 = relay.Function([var_4582,var_4583,], output)
mutated_mod['func_4584'] = func_4584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3685_call = mod.get_global_var('func_3685')
func_3687_call = mutated_mod.get_global_var('func_3687')
call_4592 = func_3685_call()
call_4593 = func_3685_call()
output = relay.Tuple([call_4592,])
output2 = relay.Tuple([call_4593,])
func_4599 = relay.Function([], output)
mod['func_4599'] = func_4599
mod = relay.transform.InferType()(mod)
output = func_4599()
func_4600 = relay.Function([], output)
mutated_mod['func_4600'] = func_4600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4599_call = mod.get_global_var('func_4599')
func_4600_call = mutated_mod.get_global_var('func_4600')
call_4644 = relay.TupleGetItem(func_4599_call(), 0)
call_4645 = relay.TupleGetItem(func_4600_call(), 0)
output = relay.Tuple([call_4644,])
output2 = relay.Tuple([call_4645,])
func_4649 = relay.Function([], output)
mod['func_4649'] = func_4649
mod = relay.transform.InferType()(mod)
output = func_4649()
func_4650 = relay.Function([], output)
mutated_mod['func_4650'] = func_4650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4599_call = mod.get_global_var('func_4599')
func_4600_call = mutated_mod.get_global_var('func_4600')
call_4651 = relay.TupleGetItem(func_4599_call(), 0)
call_4652 = relay.TupleGetItem(func_4600_call(), 0)
output = call_4651
output2 = call_4652
func_4659 = relay.Function([], output)
mod['func_4659'] = func_4659
mod = relay.transform.InferType()(mod)
output = func_4659()
func_4660 = relay.Function([], output)
mutated_mod['func_4660'] = func_4660
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4661 = relay.var("var_4661", dtype = "float32", shape = (10, 3, 1))#candidate|4661|(10, 3, 1)|var|float32
var_4662 = relay.var("var_4662", dtype = "float32", shape = (10, 3, 15))#candidate|4662|(10, 3, 15)|var|float32
bop_4663 = relay.minimum(var_4661.astype('float32'), var_4662.astype('float32')) # shape=(10, 3, 15)
const_4669 = relay.const([[[-8.001898,4.926395,1.660374,4.097863,3.883055,-8.448676,-3.841279],[2.303327,-9.698272,0.658028,7.642262,-9.497317,-7.768028,2.481759],[-3.469860,-6.849987,9.360676,6.454581,-3.328491,-8.814602,-0.230560]],[[-9.659126,-1.322073,6.427006,5.745177,0.226616,2.287169,-5.234763],[-1.093627,3.828635,5.963129,2.055577,-9.879806,5.323543,3.390463],[-6.551369,-8.160653,-4.357687,-9.109707,1.252890,-6.293551,2.459862]],[[-1.504432,4.318074,6.359557,8.484124,-3.144003,-2.423187,-7.055737],[5.556484,7.460600,0.281146,-5.215140,-0.175505,1.374185,2.512162],[6.377833,8.615628,-3.626735,-3.399069,-9.671037,-8.038461,-5.431713]],[[4.290894,-1.198524,-1.893175,-6.576279,3.791590,4.856830,7.742790],[-6.706965,-8.725204,4.955038,9.717225,-1.915392,-5.725095,-3.647985],[6.443273,4.273234,7.698688,-1.457884,5.813594,9.444436,7.040673]],[[4.615900,5.272587,7.423312,9.981252,-0.944600,0.950950,-5.247837],[2.113922,-3.107091,9.885018,7.188129,-7.079028,-8.117864,-2.816777],[-9.260903,-7.864980,-4.490620,6.031872,6.691018,4.517477,-6.670149]],[[-9.434302,-8.990059,7.015100,-7.062262,-4.667543,9.953462,9.515050],[-8.515106,3.881601,-8.800205,-5.911897,3.280555,-4.219376,-6.041376],[-6.590996,-4.074956,5.711444,-5.209806,-3.352417,4.912548,-0.664478]],[[4.365783,-9.603065,2.133204,-0.488854,2.972212,8.399888,4.003743],[5.384327,9.931400,-8.620387,-3.202414,-2.541528,-0.901931,-1.228635],[9.820313,-4.827906,-5.328506,-8.696701,-9.800818,0.004649,-3.130325]],[[-9.413860,6.577540,4.548498,-0.463261,-3.277726,-3.429912,3.823862],[2.812495,-1.600369,3.550768,6.326535,-1.421385,6.823111,4.890960],[-0.346225,8.403562,6.430608,8.843155,8.221697,-3.011146,-8.171579]],[[-9.167427,0.426669,6.540920,-3.513700,-3.274829,3.609600,-9.877872],[0.150159,0.806008,0.115766,-3.783930,8.700961,8.374486,4.711375],[7.838317,-7.309285,-8.416452,1.905827,-3.861497,-0.873622,-2.845168]],[[4.259595,-2.163600,-3.949862,-8.059406,5.759840,-0.952240,-6.012590],[4.726940,2.972532,-9.177591,6.140900,5.116438,-0.986290,-5.633385],[-8.015703,-2.457387,8.619744,-9.871117,5.888402,5.724537,8.333962]]], dtype = "float32")#candidate|4669|(10, 3, 7)|const|float32
bop_4670 = relay.bitwise_xor(var_4661.astype('uint32'), const_4669.astype('uint32')) # shape=(10, 3, 7)
output = relay.Tuple([bop_4663,bop_4670,])
output2 = relay.Tuple([bop_4663,bop_4670,])
F = relay.Function([var_4661,var_4662,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_4661,var_4662,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')
input_4661= np.array([[[-7.534889],[0.080163],[7.707232]],[[4.102966],[-4.245480],[-9.550063]],[[-7.524984],[9.547974],[-6.328487]],[[4.256509],[-0.732530],[-2.787695]],[[5.005901],[6.375909],[1.020344]],[[-1.600474],[5.661608],[-2.569936]],[[-9.870465],[3.296217],[-5.904369]],[[8.709797],[-3.120367],[6.342435]],[[-9.818336],[2.940526],[3.810046]],[[-1.982722],[5.028918],[-1.103025]]], dtype='float32')
module1.set_input('var_4661', input_4661)
input_4662= np.array([[[5.119076,-3.518249,-8.011189,-9.717129,-3.957355,0.026868,1.049185,4.503457,2.972264,9.626625,-0.194654,-7.579875,-6.828945,-7.447235,-9.354776],[-4.752354,9.416409,-1.413750,-2.027561,-5.996917,-5.737488,3.790188,9.291239,8.949965,0.384789,-8.155849,0.493267,-9.969315,6.663540,-1.315970],[9.842651,-8.067148,5.163405,-6.265671,3.360710,5.762582,7.394112,4.742602,4.672835,3.379702,6.126987,-3.339689,4.101582,-2.585151,-4.320241]],[[-8.673129,-3.115966,-7.718032,-1.619869,6.225378,-5.903125,8.035451,9.200434,-7.581510,-8.318710,1.674509,1.437448,-8.636275,-1.763523,9.066874],[1.886235,-1.931889,-8.364783,-9.128452,-6.138261,-8.611660,-6.510366,-2.367951,4.047421,-2.636220,-3.899134,1.999200,-1.827421,-3.115797,1.482727],[3.923641,-9.346083,-9.457331,-2.883556,9.473182,-4.223925,1.403861,3.324958,-0.447346,-1.561418,-2.966388,-8.841571,-1.112913,-6.854674,-0.016172]],[[7.578027,-9.782594,1.719334,-0.943218,2.482949,-1.393446,-1.338790,-8.173945,5.526874,-8.918530,-1.547896,6.412127,-8.287532,2.797099,-5.479921],[-5.989559,5.934282,8.695962,3.641663,-3.488083,4.849253,-8.188617,9.041429,-4.033395,4.337595,-3.880562,0.587952,6.203828,-1.824851,-7.709299],[-2.054278,-1.094434,-0.512036,-5.934631,3.129142,-9.172399,-7.023296,-4.025429,-7.907023,-5.235895,7.847152,1.664830,-1.150368,8.700180,7.042235]],[[-5.668044,-5.451430,1.421687,-1.823301,5.228726,-7.240949,8.634973,-1.060599,-5.155796,-9.539286,2.997722,-1.186508,-6.325193,1.964670,8.327209],[-4.019240,-8.642297,-0.219246,9.716715,9.817547,-2.014429,-5.085661,-8.443780,-2.749628,9.850487,-3.763633,-4.829455,3.609327,7.584144,-6.821396],[0.275112,-8.560147,-8.116321,9.113887,-8.676265,-3.640427,2.128864,-3.092693,4.558208,-6.973674,1.745249,1.115414,2.434571,-2.084496,1.343724]],[[9.473118,8.754677,-9.618006,-7.692846,7.524787,8.261099,-1.419030,8.244644,-9.618998,6.789878,0.628690,1.394999,-0.460816,-0.406224,-0.268251],[-3.502345,-7.388441,9.880701,2.975962,2.846207,-5.053960,-0.845661,3.334761,5.931989,-9.374401,-3.041153,2.522512,5.735506,7.553731,3.171839],[0.387161,2.447356,8.421933,5.351288,9.909335,-1.750482,5.231835,-4.316890,-1.119418,-6.511943,-6.782226,-5.513796,0.143220,9.523343,0.299939]],[[-6.520309,-5.888452,9.511015,-7.443316,-7.284472,5.717530,-7.732263,0.398483,0.011249,-0.333488,0.957128,-0.227043,5.944907,9.486776,-3.671943],[3.455194,2.385035,7.627947,2.499918,5.019837,0.951876,-4.244020,6.929925,-7.652299,7.271293,9.598310,8.230920,3.440450,2.948988,7.375270],[2.746919,-2.082511,3.561384,6.430491,8.173696,-5.954550,3.375632,-5.186997,8.465955,3.161133,-6.395743,1.143032,0.254708,-2.007112,6.476161]],[[-6.293907,-3.207134,1.136941,-5.413988,-2.966204,-9.800845,-7.904879,-2.776345,-3.981241,0.836144,-0.709717,-2.334390,4.500771,-1.009341,-7.038401],[-7.080681,2.297489,9.646363,-8.940962,9.729479,-9.658790,0.451582,-2.297453,5.027774,8.803602,-6.516651,-2.630481,6.791840,-0.318121,3.668268],[2.240519,-1.029709,-4.050998,-9.049994,6.882919,-5.957406,1.154446,5.869332,1.510012,-1.265979,2.668550,-1.399036,-5.428935,-8.276643,-0.375607]],[[1.622917,0.138525,-4.390513,-4.955450,-5.038705,-7.675488,2.911810,-2.672258,9.824105,8.378814,4.666759,4.126157,3.828339,5.067037,-0.213433],[8.126103,-8.259987,6.651635,7.157717,1.180784,-8.002771,-4.224812,9.926923,-4.927168,-6.635029,-9.208859,-9.803111,6.222822,8.773497,4.480893],[-1.189531,-1.267777,5.063489,5.883890,7.892831,-9.457976,6.927863,1.850977,-1.936815,9.798194,1.565089,-6.685251,9.077831,0.020289,-9.516601]],[[8.879836,-2.301195,4.255050,0.455966,-8.872827,3.092846,-8.247077,9.902175,7.668528,8.414473,-4.215695,3.945707,5.898400,-3.117891,2.954383],[6.597511,-9.073577,-4.165679,-7.123588,-4.646248,-8.963721,5.944023,-4.017876,-5.158476,-6.322519,9.133996,1.125205,4.379080,7.747850,2.265517],[2.985683,1.797525,-4.416287,0.929760,-1.573439,1.253787,-3.410081,6.540683,9.163132,-3.363009,-5.841963,-7.142713,-0.878717,-2.910020,-0.994607]],[[5.170991,-7.214298,3.080129,-9.268721,0.780514,-7.601025,-8.262739,-9.448570,-9.988048,4.515961,8.590222,-9.231860,3.445067,-4.166920,-7.212604],[-7.493598,-9.286191,9.908141,7.758191,-9.244211,-3.483475,-7.374960,3.337731,-5.186750,-1.462005,6.210191,0.818856,-4.925400,-0.551618,-9.832976],[2.188350,-7.647252,-9.277074,2.497546,-2.933490,-0.641032,-3.233884,4.112684,8.490899,7.374130,6.494968,-6.166535,-0.150945,-5.113923,2.580085]]], dtype='float32')
module1.set_input('var_4662', input_4662)
module1.set_input(**params)
module1.run()
res2 = intrp2.evaluate()(input_4661, input_4662, )
res3 = intrp3.evaluate()(input_4661, input_4662, )
res4 = intrp4.evaluate()(input_4661, input_4662, )
res2 = vmobj_to_list(res2)
res3 = vmobj_to_list(res3)
res4 = vmobj_to_list(res4)
res1_0 = module1.get_output(0).asnumpy()
res2_0 = res2[0].asnumpy()
res3_0 = res3[0].asnumpy()
res4_0 = res4[0].asnumpy()
np.testing.assert_allclose(res1_0 ,res2_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_0 ,res3_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_0 ,res4_0, atol=1e-3, rtol=1e-3)
(res1_0 == res2_0).all()
(res1_0 == res3_0).all()
(res1_0 == res4_0).all()
res1_1 = module1.get_output(1).asnumpy()
res2_1 = res2[1].asnumpy()
res3_1 = res3[1].asnumpy()
res4_1 = res4[1].asnumpy()
np.testing.assert_allclose(res1_1 ,res2_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_1 ,res3_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_1 ,res4_1, atol=1e-3, rtol=1e-3)
(res1_1 == res2_1).all()
(res1_1 == res3_1).all()
(res1_1 == res4_1).all()
module5.set_input('var_4661', input_4661)
module5.set_input('var_4662', input_4662)
module5.set_input(**params)
module5.run()
res6 = intrp6.evaluate()(input_4661, input_4662, )
res7 = intrp7.evaluate()(input_4661, input_4662, )
res8 = intrp8.evaluate()(input_4661, input_4662, )
res6 = vmobj_to_list(res6)
res7 = vmobj_to_list(res7)
res8 = vmobj_to_list(res8)
res5_0 = module5.get_output(0).asnumpy()
res6_0 = res6[0].asnumpy()
res7_0 = res7[0].asnumpy()
res8_0 = res8[0].asnumpy()
np.testing.assert_allclose(res5_0 ,res6_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_0 ,res7_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_0 ,res8_0, atol=1e-3, rtol=1e-3)
(res5_0 == res6_0).all()
(res5_0 == res7_0).all()
(res5_0 == res8_0).all()
res5_1 = module5.get_output(1).asnumpy()
res6_1 = res6[1].asnumpy()
res7_1 = res7[1].asnumpy()
res8_1 = res8[1].asnumpy()
np.testing.assert_allclose(res5_1 ,res6_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_1 ,res7_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_1 ,res8_1, atol=1e-3, rtol=1e-3)
(res5_1 == res6_1).all()
(res5_1 == res7_1).all()
(res5_1 == res8_1).all()
module9.set_input('var_4661', input_4661)
module9.set_input('var_4662', input_4662)
module9.set_input(**params)
module9.run()
res10 = intrp10.evaluate()(input_4661, input_4662, )
res11 = intrp11.evaluate()(input_4661, input_4662, )
res12 = intrp12.evaluate()(input_4661, input_4662, )
res10 = vmobj_to_list(res10)
res11 = vmobj_to_list(res11)
res12 = vmobj_to_list(res12)
res9_0 = module9.get_output(0).asnumpy()
res10_0 = res10[0].asnumpy()
res11_0 = res11[0].asnumpy()
res12_0 = res12[0].asnumpy()
np.testing.assert_allclose(res9_0 ,res10_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_0 ,res11_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_0 ,res12_0, atol=1e-3, rtol=1e-3)
(res9_0 == res10_0).all()
(res9_0 == res11_0).all()
(res9_0 == res12_0).all()
res9_1 = module9.get_output(1).asnumpy()
res10_1 = res10[1].asnumpy()
res11_1 = res11[1].asnumpy()
res12_1 = res12[1].asnumpy()
np.testing.assert_allclose(res9_1 ,res10_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_1 ,res11_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_1 ,res12_1, atol=1e-3, rtol=1e-3)
(res9_1 == res10_1).all()
(res9_1 == res11_1).all()
(res9_1 == res12_1).all()
module13.set_input('var_4661', input_4661)
module13.set_input('var_4662', input_4662)
module13.set_input(**params)
module13.run()
res14 = intrp14.evaluate()(input_4661, input_4662, )
res15 = intrp15.evaluate()(input_4661, input_4662, )
res16 = intrp16.evaluate()(input_4661, input_4662, )
res14 = vmobj_to_list(res14)
res15 = vmobj_to_list(res15)
res16 = vmobj_to_list(res16)
res13_0 = module13.get_output(0).asnumpy()
res14_0 = res14[0].asnumpy()
res15_0 = res15[0].asnumpy()
res16_0 = res16[0].asnumpy()
np.testing.assert_allclose(res13_0 ,res14_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_0 ,res15_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_0 ,res16_0, atol=1e-3, rtol=1e-3)
(res13_0 == res14_0).all()
(res13_0 == res15_0).all()
(res13_0 == res16_0).all()
res13_1 = module13.get_output(1).asnumpy()
res14_1 = res14[1].asnumpy()
res15_1 = res15[1].asnumpy()
res16_1 = res16[1].asnumpy()
np.testing.assert_allclose(res13_1 ,res14_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_1 ,res15_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_1 ,res16_1, atol=1e-3, rtol=1e-3)
(res13_1 == res14_1).all()
(res13_1 == res15_1).all()
(res13_1 == res16_1).all()
module17.set_input('var_4661', input_4661)
module17.set_input('var_4662', input_4662)
module17.set_input(**params)
module17.run()
res18 = intrp18.evaluate()(input_4661, input_4662, )
res19 = intrp19.evaluate()(input_4661, input_4662, )
res20 = intrp20.evaluate()(input_4661, input_4662, )
res18 = vmobj_to_list(res18)
res19 = vmobj_to_list(res19)
res20 = vmobj_to_list(res20)
res17_0 = module17.get_output(0).asnumpy()
res18_0 = res18[0].asnumpy()
res19_0 = res19[0].asnumpy()
res20_0 = res20[0].asnumpy()
np.testing.assert_allclose(res17_0 ,res18_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_0 ,res19_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_0 ,res20_0, atol=1e-3, rtol=1e-3)
(res17_0 == res18_0).all()
(res17_0 == res19_0).all()
(res17_0 == res20_0).all()
res17_1 = module17.get_output(1).asnumpy()
res18_1 = res18[1].asnumpy()
res19_1 = res19[1].asnumpy()
res20_1 = res20[1].asnumpy()
np.testing.assert_allclose(res17_1 ,res18_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_1 ,res19_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_1 ,res20_1, atol=1e-3, rtol=1e-3)
(res17_1 == res18_1).all()
(res17_1 == res19_1).all()
(res17_1 == res20_1).all()
module21.set_input('var_4661', input_4661)
module21.set_input('var_4662', input_4662)
module21.set_input(**params)
module21.run()
res22 = intrp22.evaluate()(input_4661, input_4662, )
res23 = intrp23.evaluate()(input_4661, input_4662, )
res24 = intrp24.evaluate()(input_4661, input_4662, )
res22 = vmobj_to_list(res22)
res23 = vmobj_to_list(res23)
res24 = vmobj_to_list(res24)
res21_0 = module21.get_output(0).asnumpy()
res22_0 = res22[0].asnumpy()
res23_0 = res23[0].asnumpy()
res24_0 = res24[0].asnumpy()
np.testing.assert_allclose(res21_0 ,res22_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_0 ,res23_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_0 ,res24_0, atol=1e-3, rtol=1e-3)
(res21_0 == res22_0).all()
(res21_0 == res23_0).all()
(res21_0 == res24_0).all()
res21_1 = module21.get_output(1).asnumpy()
res22_1 = res22[1].asnumpy()
res23_1 = res23[1].asnumpy()
res24_1 = res24[1].asnumpy()
np.testing.assert_allclose(res21_1 ,res22_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_1 ,res23_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_1 ,res24_1, atol=1e-3, rtol=1e-3)
(res21_1 == res22_1).all()
(res21_1 == res23_1).all()
(res21_1 == res24_1).all()

'''4294967288, 4294967293],

'''