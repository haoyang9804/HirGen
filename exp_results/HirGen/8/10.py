import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
def vmobj_to_list(o, dtype="float32"):
    if isinstance(o, tvm.nd.NDArray):
        return [o]
    elif isinstance(o, tvm.runtime.container.ADT):
        result = []
        for f in o:
            result.extend(vmobj_to_list(f, dtype))
        return result
    else:
        return o


mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_53 = relay.var("var_53", dtype = "uint8", shape = (12, 14, 5))#candidate|53|(12, 14, 5)|var|uint8
const_54 = relay.const([[[-5,4,-7,-3,-3],[1,8,-6,-7,-4],[3,5,4,-6,1],[-6,10,-6,-4,1],[-1,-7,-10,-8,10],[-5,-7,-8,10,-1],[-7,-1,-9,-6,-5],[2,1,-3,-2,9],[-2,-4,9,-9,-7],[1,-9,3,-7,-1],[-7,-8,-2,-1,-3],[-6,-9,5,-4,6],[-7,7,9,-4,-2],[1,-9,10,-4,-6]],[[3,4,-4,-9,-5],[2,-4,-8,3,-1],[6,-4,5,-6,5],[5,-4,2,-8,-8],[6,5,-1,4,2],[8,-9,4,-4,-10],[10,9,-4,4,1],[-7,2,-8,-2,6],[8,-5,-6,-1,-7],[9,6,-5,-8,4],[-9,-6,-10,3,-7],[-9,2,-9,3,9],[1,-1,-8,1,3],[7,4,-2,-10,-10]],[[5,9,5,8,-10],[-10,-6,1,-5,-2],[-8,10,-2,10,-9],[-8,-2,-2,9,-7],[-6,3,9,-6,8],[3,-6,-8,7,-2],[-8,1,-1,9,2],[10,-6,-7,-9,-9],[2,-1,-7,9,-6],[-2,-3,-8,-5,-4],[-4,4,9,5,6],[-3,6,-7,4,8],[-6,8,-3,-4,3],[7,4,9,3,-9]],[[8,7,7,-8,7],[3,-6,1,-7,-2],[-4,-2,-8,-2,-7],[-10,-5,10,9,5],[3,7,10,3,-6],[-10,1,9,-4,-10],[1,7,-5,10,-4],[9,-6,1,8,-3],[-8,-5,6,-10,-2],[-1,-10,-1,-5,10],[7,-9,10,8,5],[-4,-6,-3,2,3],[4,9,2,1,-10],[-7,4,9,-7,4]],[[8,-4,-7,-7,10],[3,3,8,-1,-3],[3,1,9,1,-8],[-9,-3,3,1,6],[-1,5,-2,-9,3],[-7,5,4,-7,9],[10,-4,-2,2,8],[-3,9,-2,1,4],[-5,-10,9,4,9],[-1,-3,3,-1,-9],[2,-7,1,2,3],[8,8,-10,-2,-3],[10,-1,1,10,-6],[1,2,1,-7,5]],[[-2,10,1,-7,4],[5,5,9,-9,-8],[-10,4,-8,7,-9],[-7,-7,1,7,-2],[-9,7,4,-2,4],[9,10,8,-2,5],[-9,-4,-1,4,-4],[-9,7,1,-1,-8],[4,1,-3,-3,-5],[-8,-5,1,-9,4],[-3,-8,-10,-4,1],[-7,9,10,8,1],[-6,-10,-1,-8,5],[-4,6,3,-1,6]],[[10,9,-1,3,4],[5,-3,2,-5,4],[2,-2,-10,-6,-1],[2,-6,-1,10,8],[-10,-6,9,8,-6],[-6,10,7,-3,10],[-5,-5,3,-10,2],[9,-5,6,10,-8],[6,-5,3,6,-6],[2,-1,2,5,-9],[2,-10,2,10,9],[10,-5,-4,8,-4],[8,-4,3,5,10],[4,3,-8,1,8]],[[-8,-7,-3,1,3],[-6,3,2,-7,-5],[-2,-10,4,-9,-8],[5,3,-8,3,10],[5,8,7,6,-10],[3,-10,6,-5,-9],[10,-8,7,1,-5],[7,6,-2,9,7],[8,1,4,-4,-10],[1,-8,-7,7,5],[1,-6,9,-2,-5],[-6,-10,3,-4,-5],[9,-6,-7,1,5],[9,-8,-4,2,-3]],[[-4,10,-8,2,-9],[6,-2,-6,-9,6],[3,-9,8,-5,-9],[7,-9,-9,-1,9],[-7,1,-1,-10,-4],[-2,10,7,5,10],[2,9,-6,10,-9],[-1,-6,-8,9,-7],[4,9,3,6,10],[3,-5,3,3,1],[4,10,4,9,8],[6,5,8,3,-7],[-9,-5,5,6,-1],[9,10,-7,9,-6]],[[2,-9,-9,-7,2],[-7,6,-7,-10,-8],[3,8,9,6,1],[-5,7,-10,-4,1],[2,-8,10,9,2],[10,-9,9,-4,-7],[8,-6,9,-1,4],[8,-10,4,6,7],[-3,3,5,-9,6],[4,10,-9,7,-2],[2,4,-8,1,2],[-2,-4,6,-9,-10],[4,9,3,5,-7],[-8,-6,-10,-1,-8]],[[8,-7,-9,6,1],[-2,-10,-9,10,3],[-10,6,-3,10,-9],[6,-10,-4,9,6],[-5,-5,9,8,-7],[-7,-1,-2,-1,-10],[-1,-8,1,-10,1],[10,-4,1,-8,-3],[9,1,10,6,-4],[-2,3,7,-3,6],[-5,-9,1,2,-8],[-6,2,-7,-1,-6],[9,3,1,8,9],[5,10,4,-4,3]],[[-1,9,8,-8,8],[5,5,9,-8,-7],[1,-2,7,-2,-2],[3,8,9,-7,-5],[2,-4,8,2,-10],[-2,2,-2,9,10],[-3,-7,4,-4,-2],[7,9,-10,5,-4],[10,8,1,2,5],[3,6,10,-5,-4],[5,10,3,2,1],[-2,1,4,-1,-2],[-10,-6,-7,10,-1],[7,-4,-10,7,4]]], dtype = "uint8")#candidate|54|(12, 14, 5)|const|uint8
bop_55 = relay.multiply(var_53.astype('uint8'), relay.reshape(const_54.astype('uint8'), relay.shape_of(var_53))) # shape=(12, 14, 5)
output = relay.Tuple([bop_55,])
output2 = relay.Tuple([bop_55,])
func_76 = relay.Function([var_53,], output)
mod['func_76'] = func_76
mod = relay.transform.InferType()(mod)
mutated_mod['func_76'] = func_76
mutated_mod = relay.transform.InferType()(mutated_mod)
var_77 = relay.var("var_77", dtype = "uint8", shape = (12, 14, 5))#candidate|77|(12, 14, 5)|var|uint8
func_76_call = mutated_mod.get_global_var('func_76')
call_78 = func_76_call(var_77)
output = call_78
func_79 = relay.Function([var_77], output)
mutated_mod['func_79'] = func_79
mutated_mod = relay.transform.InferType()(mutated_mod)
var_105 = relay.var("var_105", dtype = "float64", shape = ())#candidate|105|()|var|float64
const_106 = relay.const([[[-6.832414,2.954049,-3.699952,4.489009,-9.177302],[-1.958088,2.390857,-8.939458,-5.700744,7.970430],[2.604163,0.453174,5.933651,-5.474905,3.792338]],[[9.940090,-7.130768,-4.862477,7.962401,0.518913],[-9.348252,6.991929,-0.348092,-5.420323,7.538048],[-9.089597,5.715267,-5.860663,0.510548,7.252797]],[[-6.861815,-6.612882,-0.378880,1.347948,0.946116],[5.788116,6.877613,4.104329,-1.462687,-3.754851],[9.374525,-0.021128,8.870125,-4.695709,3.163960]],[[5.844233,-9.791955,3.220669,-5.266063,-4.577039],[8.444446,3.132783,-1.873967,-0.338796,-2.891882],[-0.293249,-9.505526,-0.830124,1.616770,-3.562136]],[[8.379146,-4.797968,2.055295,-7.978240,-1.638032],[2.855559,-3.740984,-1.063902,-2.059292,4.453852],[-0.062595,-2.603066,-8.649544,-3.898732,7.389666]],[[9.853226,-0.575722,-0.600315,3.788254,4.096386],[2.049208,1.496309,-2.035269,-9.599258,1.672197],[8.664677,6.566942,-9.120073,9.897139,9.273436]],[[1.854619,4.832846,-8.898317,6.029402,-5.476109],[-3.239236,-1.939059,9.292044,7.053695,4.251037],[2.340419,-4.450714,-6.850289,-6.564375,4.646152]],[[4.477191,-3.186711,-3.156598,-3.840781,-8.456992],[4.417772,2.288051,4.607532,-8.584730,-9.654893],[5.103553,-7.626488,2.540148,-6.253214,-8.976450]],[[3.668460,-9.707797,-1.328978,4.692587,-9.626597],[2.344001,-9.328753,4.098536,8.543722,-7.133538],[7.727063,7.729640,-9.116388,0.083886,0.425001]],[[-0.645219,2.982110,-0.153670,-8.988219,-8.843218],[-2.376835,-6.142254,-3.447437,-0.493867,2.127403],[-4.570471,-1.182061,-7.285647,-6.821512,1.351991]],[[-0.671804,-6.467150,-7.040890,6.598256,-5.874235],[1.320509,-8.571333,3.482835,-9.276855,-4.714435],[8.023711,-8.399053,5.490191,-3.178605,-3.125589]],[[3.991287,2.557609,-9.134117,-0.925286,-3.232263],[-8.018238,3.322666,9.608010,5.833908,-3.065844],[8.462218,-3.316858,2.137193,3.947891,1.475523]]], dtype = "float64")#candidate|106|(12, 3, 5)|const|float64
bop_107 = relay.greater(var_105.astype('bool'), const_106.astype('bool')) # shape=(12, 3, 5)
output = bop_107
output2 = bop_107
func_113 = relay.Function([var_105,], output)
mod['func_113'] = func_113
mod = relay.transform.InferType()(mod)
mutated_mod['func_113'] = func_113
mutated_mod = relay.transform.InferType()(mutated_mod)
var_114 = relay.var("var_114", dtype = "float64", shape = ())#candidate|114|()|var|float64
func_113_call = mutated_mod.get_global_var('func_113')
call_115 = func_113_call(var_114)
output = call_115
func_116 = relay.Function([var_114], output)
mutated_mod['func_116'] = func_116
mutated_mod = relay.transform.InferType()(mutated_mod)
var_128 = relay.var("var_128", dtype = "float64", shape = (1, 3, 7))#candidate|128|(1, 3, 7)|var|float64
var_129 = relay.var("var_129", dtype = "float64", shape = (14, 3, 7))#candidate|129|(14, 3, 7)|var|float64
bop_130 = relay.mod(var_128.astype('float64'), var_129.astype('float64')) # shape=(14, 3, 7)
output = bop_130
output2 = bop_130
func_139 = relay.Function([var_128,var_129,], output)
mod['func_139'] = func_139
mod = relay.transform.InferType()(mod)
var_140 = relay.var("var_140", dtype = "float64", shape = (1, 3, 7))#candidate|140|(1, 3, 7)|var|float64
var_141 = relay.var("var_141", dtype = "float64", shape = (14, 3, 7))#candidate|141|(14, 3, 7)|var|float64
output = func_139(var_140,var_141,)
func_142 = relay.Function([var_140,var_141,], output)
mutated_mod['func_142'] = func_142
mutated_mod = relay.transform.InferType()(mutated_mod)
var_149 = relay.var("var_149", dtype = "int64", shape = (2, 11))#candidate|149|(2, 11)|var|int64
var_150 = relay.var("var_150", dtype = "int64", shape = (2, 11))#candidate|150|(2, 11)|var|int64
bop_151 = relay.add(var_149.astype('int64'), relay.reshape(var_150.astype('int64'), relay.shape_of(var_149))) # shape=(2, 11)
output = relay.Tuple([bop_151,])
output2 = relay.Tuple([bop_151,])
func_161 = relay.Function([var_149,var_150,], output)
mod['func_161'] = func_161
mod = relay.transform.InferType()(mod)
var_162 = relay.var("var_162", dtype = "int64", shape = (2, 11))#candidate|162|(2, 11)|var|int64
var_163 = relay.var("var_163", dtype = "int64", shape = (2, 11))#candidate|163|(2, 11)|var|int64
output = func_161(var_162,var_163,)
func_164 = relay.Function([var_162,var_163,], output)
mutated_mod['func_164'] = func_164
mutated_mod = relay.transform.InferType()(mutated_mod)
const_290 = relay.const([[[5.704848,-0.666777,-9.532517,-5.423424,0.863947,-6.096424,-4.339696],[-8.299034,-3.654065,3.061614,6.463159,5.174907,-8.704393,-1.951903],[-2.145745,-6.228149,-1.896169,-7.826389,8.477072,7.053950,-7.996715],[0.975573,4.760838,-6.315533,-0.962513,-0.085747,-9.055364,-9.953830],[-3.976261,-8.829193,-0.506937,6.728921,4.955164,8.675656,-6.590529]],[[8.258162,1.830587,2.389103,0.117257,-4.294443,-9.419501,9.668069],[2.965565,4.849869,-9.864023,-2.809186,3.706986,-0.139714,2.812587],[7.164403,-7.937081,9.387822,7.211215,0.853366,-6.679283,0.728806],[-8.426213,2.386197,-0.906746,-0.623301,6.652162,2.563101,-5.961899],[4.089099,9.383919,5.567233,-7.133785,7.691079,6.928544,-8.297365]],[[5.744762,-1.312533,-0.141633,5.723898,4.701487,0.186518,-7.410697],[2.783860,-4.812626,-2.136147,2.869266,-9.924814,-9.113502,9.179402],[-1.500951,-1.463437,1.025208,0.060683,-1.246368,-9.128066,-2.769767],[-8.052757,-2.268440,6.676337,2.010793,0.821520,0.816788,-4.005541],[0.090712,-4.048256,1.895473,4.409889,3.487688,-4.120472,1.440447]],[[1.251245,-0.879316,-8.336445,3.172182,-9.606048,-1.291750,8.142469],[3.278609,8.111429,-0.773382,-0.097274,-7.813557,-8.530763,-8.363324],[-4.782320,-9.245639,-6.635736,8.140596,2.822931,-8.416140,9.643951],[9.337096,0.923778,-3.845795,-4.838694,-9.186468,-8.794621,-2.098635],[-1.002716,6.649211,9.194292,7.326238,1.628712,-6.051520,7.855985]]], dtype = "float32")#candidate|290|(4, 5, 7)|const|float32
var_291 = relay.var("var_291", dtype = "float32", shape = (4, 5, 7))#candidate|291|(4, 5, 7)|var|float32
bop_292 = relay.divide(const_290.astype('float32'), relay.reshape(var_291.astype('float32'), relay.shape_of(const_290))) # shape=(4, 5, 7)
func_76_call = mod.get_global_var('func_76')
func_79_call = mutated_mod.get_global_var('func_79')
const_304 = relay.const([-1,-9,3,8,-2,3,2,7,-10,-8,-10,-2,1,7,5,3,-3,7,-8,-9,6,10,3,-10,4,6,2,-5,9,6,7,10,-2,5,1,-10,-5,-5,-8,3,-4,6,-8,-9,-2,-3,-4,9,1,6,10,-1,8,7,-10,10,1,9,8,8,-5,-8,-5,7,-5,-10,-10,-1,-6,4,9,9,1,-9,8,-8,-8,1,5,1,-10,-4,3,-9,-2,-6,-9,10,7,-1,-7,-7,5,-10,6,10,-4,6,-8,10,-10,-10,3,10,-9,4,-8,-1,-9,-3,2,-2,-8,6,5,-5,-2,3,6,5,2,9,10,-5,1,-5,3,-7,-8,-6,-1,-8,-9,10,4,-1,7,-8,-10,-8,-3,3,-10,7,-5,1,-6,-1,-1,10,-8,-10,1,-4,1,3,4,-9,6,4,-9,-9,5,-1,1,-10,4,-6,9,7,9,-5,-6,7,2,-5,-6,7,-4,-8,4,4,9,5,9,10,-4,2,1,3,-3,-4,3,-2,4,2,9,7,7,8,4,3,-6,7,6,-1,-8,-10,10,10,2,-3,-7,1,-10,9,8,9,8,-1,8,3,-9,-9,-5,-5,10,-1,6,-2,-10,8,2,2,-5,-6,7,9,2,-6,-8,7,-7,-4,8,-9,6,8,7,9,3,5,5,-5,-3,-6,-2,-8,1,1,-9,-10,8,-2,-10,-8,-6,-4,-8,-8,9,-3,-8,9,-4,-1,-9,-7,-2,3,-10,4,6,7,-8,7,2,8,5,-1,8,-4,-6,-5,10,8,-8,7,4,-8,-8,10,8,-10,-7,-4,5,-1,8,7,3,9,-2,5,-8,-6,9,6,6,-10,9,8,-9,4,7,7,-9,-3,-1,-8,-1,-7,2,8,1,1,-10,-1,7,8,9,6,-10,-10,7,-1,-2,-9,-2,-2,-4,1,9,-5,-9,4,8,7,-9,10,3,-4,-2,9,1,6,-4,9,3,2,7,-2,-6,-5,-4,-10,-8,3,-9,-3,6,6,-6,-3,-9,1,-1,-2,-1,-1,-6,1,-7,-6,-9,-7,-8,-2,9,5,10,-5,10,9,6,6,1,8,4,-4,-2,-5,-7,-7,4,-2,10,7,-5,-3,6,-3,-7,-5,-4,3,4,-8,-6,-5,9,-7,7,10,10,-2,-3,5,9,-2,-3,-9,-4,7,-2,-2,-2,-9,-5,-10,4,-3,-1,10,10,-3,8,9,-10,2,1,-2,-5,1,-4,4,6,-7,-8,7,1,-1,3,-1,-6,-5,-8,-9,8,4,-2,-9,8,7,7,3,5,6,-2,1,1,5,2,4,-4,1,-7,-8,10,-10,-9,-4,-5,-2,-9,-6,-8,-2,5,-10,6,-8,-4,9,-10,-3,-2,-3,9,-7,-8,-9,-4,-5,-8,-9,-6,7,-3,-8,-7,-2,-7,-9,10,-5,7,-5,6,1,6,-8,6,6,4,-10,4,10,-9,-6,-5,9,4,4,-7,5,2,8,9,-5,8,3,-9,3,-4,-9,9,-10,4,-4,6,4,3,7,-8,6,-10,-7,-4,9,9,-6,7,-3,1,-2,9,6,-10,5,-5,-3,9,-8,-10,2,6,-8,-5,4,2,-2,1,-2,-1,6,-5,-3,-1,-9,9,-10,9,-7,-1,-10,-6,4,10,-8,-3,9,7,6,4,-7,-7,7,7,10,-5,-2,3,-10,-2,-4,-5,6,-4,10,-6,-8,-3,10,-8,-7,3,4,5,-8,2,-5,4,1,-2,3,-7,2,7,10,-2,-6,8,10,-6,4,10,-7,9,-2,10,-8,8,8,1,9,-7,-8,-7,-10,-5,-2,-4,-9,8,3,-9,-6,-2,-2,-2,-6,-8,-6,1,9,-10,2,10,6,-5,8,9,-10,-8,-4,5,-9,-2,-9,1,-10,-9,-5,-8,-10,2,-8,4,2,2,10,5,10,4,-2,-7,8,-9,-8,-5,-1,-8,8,6,-2,5,6,3,9,7,-4,6,-4,-4,1,1,-6,10,1,-3,6,4,10,-10,-7,-2,3,3,-2,-10,-6,-4,1,6,2,2,-1,-2,6,-2,10,5,2,9,-3,-9,-9,3,9,-10,1,6,2,3,-1,2,8,3,3,8,-10,-7,1,10,9,8,-4,2,-4,4,9,-5,1,-1,-9,-2,-5,9,-7,4,9,-6,8,-10,2,-8,-10,-1,8,-7,10,-7,8,-3,-4,-3,-10,-9,6,1,-1,-2,-1,-4,-7,-7,10,-6,-1], dtype = "uint8")#candidate|304|(840,)|const|uint8
call_303 = relay.TupleGetItem(func_76_call(relay.reshape(const_304.astype('uint8'), [12, 14, 5])), 0)
call_305 = relay.TupleGetItem(func_79_call(relay.reshape(const_304.astype('uint8'), [12, 14, 5])), 0)
output = relay.Tuple([bop_292,call_303,const_304,])
output2 = relay.Tuple([bop_292,call_305,const_304,])
func_308 = relay.Function([var_291,], output)
mod['func_308'] = func_308
mod = relay.transform.InferType()(mod)
mutated_mod['func_308'] = func_308
mutated_mod = relay.transform.InferType()(mutated_mod)
var_309 = relay.var("var_309", dtype = "float32", shape = (4, 5, 7))#candidate|309|(4, 5, 7)|var|float32
func_308_call = mutated_mod.get_global_var('func_308')
call_310 = func_308_call(var_309)
output = call_310
func_311 = relay.Function([var_309], output)
mutated_mod['func_311'] = func_311
mutated_mod = relay.transform.InferType()(mutated_mod)
var_428 = relay.var("var_428", dtype = "float64", shape = (14, 3, 4))#candidate|428|(14, 3, 4)|var|float64
uop_429 = relay.log2(var_428.astype('float64')) # shape=(14, 3, 4)
func_139_call = mod.get_global_var('func_139')
func_142_call = mutated_mod.get_global_var('func_142')
const_436 = relay.const([4.598484,-5.499501,3.718275,-4.909997,1.024708,-3.147726,5.948372,-5.668254,-6.286201,-0.958594,-1.492381,-8.754782,-5.271656,7.630077,-7.596956,-8.845805,7.178319,7.739550,-0.540732,6.530867,6.837853], dtype = "float64")#candidate|436|(21,)|const|float64
const_437 = relay.const([[5.713493,3.636769,4.262349,6.578507,0.454796,4.040093,-8.186584,9.829619,-1.438204,-8.567063,-8.195471,0.678053,4.587004,-9.945102,-4.807712,8.143988,-4.485932,3.074760,-4.124617,1.643864,-3.653643,7.121099,-2.378161,-8.963401,-5.992143,-9.431107,-6.197540,-5.493809,-1.249474,1.825667,-3.333404,-4.950377,-2.538917,-2.158369,-9.647967,-2.099386,0.101079,8.517721,-9.364200,-8.202656,-2.690258,1.167343,-9.725376,9.343666,-5.286173,-7.462725,2.273196,5.039701,-1.937027,-9.414697,9.861583,4.350950,2.239144,7.399202,-9.772274,-4.941065,-4.574425,2.641030,3.912641,1.492147,-8.159299,-2.127164,3.812808,4.036539,6.432287,-4.554294,-0.401781,3.285615,5.155336,2.796719,5.961679,-0.333255,6.296284,-3.060953,-3.158323,-9.281820,5.021573,-1.318955,0.152855,9.187368,-2.301407,0.703384,2.591636,-9.009374,4.225122,8.320645,5.541609,-9.733524,8.434163,9.738695,0.181267,-8.114893,-4.780247,2.749278,-0.251907,-2.344383,-7.113090,3.851529,2.558940,-7.694984,7.691783,8.156763,-5.636353,6.466001,-5.144743,3.195493,1.301384,3.270882,4.914998,6.023667,9.652726,-8.135381,7.897410,3.303590,9.000611,-4.831504,4.242476,4.365264,4.200370,-1.288253,4.369511,9.334500,6.595618,-5.290896,8.616563,6.285962,1.857105,3.872415,5.111599,8.744523,-9.069209,-9.688816,2.065115,6.976667,-1.108219,7.728096,-3.310757,-6.576688,4.500679,-2.055172,-9.695514,5.011219,9.816073,4.761687,7.697657,6.778491,-9.124507,-7.375656,2.203409,-9.025080,5.405485,5.128402,6.475173,9.379002,-2.647442,8.041003,7.861759,-6.711401,8.881063,-2.690166,0.750241,3.392950,2.099358,5.756919,1.094028,-5.096151,7.890502,-2.401548,-1.615993,2.155242,6.897021,2.024061,5.476643,2.748110,7.120877,-5.257821,4.735991,-7.132489,5.153410,1.389663,-4.155037,9.515398,5.619544,-1.232820,8.096632,-4.617131,-5.586321,-6.766273,-2.255225,4.233247,2.364858,-6.019460,7.201409,6.982146,-0.556644,5.363610,-4.313744,6.114251,3.216010,5.972509,4.749456,5.817452,-7.576411,-7.756227,-8.684662,-6.771495,2.630407,-3.248608,-6.769666,7.758270,5.659426,4.586965,2.417408,4.643655,-8.392781,4.682361,1.405407,7.350892,-7.063333,-4.286109,4.109744,-2.187733,7.175667,2.765119,-0.436306,-5.436694,-0.226672,-9.133708,-7.555887,-8.452637,-1.505218,1.959448,-3.567129,7.105146,-3.714544,3.664333,9.119286,-0.790033,9.871220,-9.150184,-4.763147,7.693783,-1.032645,-7.283563,5.297037,7.871614,-9.762400,9.062110,9.928043,-7.894435,-0.636592,-4.018268,9.445355,-0.040769,-8.302702,4.080955,-3.476485,0.744816,-9.265063,7.401095,-0.540979,7.433449,6.329660,-0.854516,-2.972053,-9.647457,-8.136639,-3.697930,8.952507,-8.668618,6.660172,-6.980333,-5.069134,-9.535695,1.050672,4.059804,-4.941575,4.887135,6.528553,-3.830940,-4.147363,8.098925,3.761366,-7.855072,-1.024131,1.881899,-3.765209,1.204060,7.026900,8.906340,-6.547156,4.648356,-7.632112,-7.214958]], dtype = "float64")#candidate|437|(1, 294)|const|float64
call_435 = func_139_call(relay.reshape(const_436.astype('float64'), [1, 3, 7]), relay.reshape(const_437.astype('float64'), [14, 3, 7]), )
call_438 = func_139_call(relay.reshape(const_436.astype('float64'), [1, 3, 7]), relay.reshape(const_437.astype('float64'), [14, 3, 7]), )
func_76_call = mod.get_global_var('func_76')
func_79_call = mutated_mod.get_global_var('func_79')
const_440 = relay.const([8,-6,10,-2,-10,3,1,2,-4,4,8,-8,8,-9,-4,-7,-2,5,-8,5,8,-9,-1,-10,-9,4,2,2,6,10,-10,2,-7,-3,6,2,-7,2,-4,-3,-7,-2,-7,-10,6,10,-6,-9,9,-9,-2,-8,-5,-7,3,4,6,-10,2,5,1,-5,8,-3,6,6,6,-8,-4,-10,4,-8,3,3,-9,5,-4,8,-6,2,4,1,2,1,-4,-3,-8,-9,9,6,10,10,4,7,1,-2,-7,-7,2,-3,10,5,8,-8,-5,5,-6,1,-2,-9,-8,-10,-4,4,-6,4,-4,3,-2,9,5,-7,8,2,6,5,-4,1,-5,-6,3,-6,-9,-8,-7,-2,-10,5,7,-10,-1,-1,3,5,-8,-6,2,-7,-10,-6,10,1,-9,10,4,-10,-8,-1,4,10,8,-10,-9,-3,-2,5,-9,3,-5,-3,-6,5,6,8,2,2,3,2,1,-10,4,-4,-4,-10,-4,7,8,8,7,-3,-2,-3,-9,7,-10,-10,2,9,4,2,-2,10,2,3,-1,-2,-5,8,-8,1,-1,4,8,-9,5,-10,2,-7,7,-6,10,3,-3,-9,-7,-10,-3,4,-2,-4,6,-3,6,-7,-4,3,-2,-9,-9,-5,1,9,-4,7,-7,10,-7,-4,-5,-9,-3,-2,1,10,-2,-10,-2,6,1,-1,-6,-2,6,-7,-6,-9,-1,5,-2,3,2,6,-10,2,-8,10,6,7,7,-2,-2,-5,1,4,7,-7,1,-4,8,4,9,-9,5,8,2,8,-2,-7,-3,8,10,-8,1,-4,8,-2,-2,-3,-7,-1,-2,2,-4,-8,-2,6,2,-5,-7,-1,-8,1,3,9,6,10,-10,3,5,-10,8,1,3,-2,-6,5,-5,4,-2,-10,4,8,6,8,3,-8,-8,-2,4,1,-8,-4,3,-2,10,5,4,9,-7,1,7,-2,8,-7,-9,-2,5,9,-5,-4,3,-10,5,6,6,-3,-7,-9,-8,-7,5,3,7,-9,-10,-9,4,-9,1,-2,-5,2,-9,-6,9,5,3,3,9,4,7,-4,5,2,1,2,1,9,-7,1,8,-10,-6,-1,-7,4,-10,-4,2,-8,-4,-2,-4,-6,-5,7,-3,-4,-1,1,2,1,6,7,-5,-4,5,3,6,-2,-4,-6,-7,-5,-9,-6,4,5,5,7,-6,9,6,5,-1,4,-8,-4,5,3,6,7,9,7,3,-5,4,10,-6,-3,-2,4,-1,4,8,2,-9,3,8,-1,5,-9,10,10,-6,4,-1,-9,9,-8,1,2,-8,7,4,-8,5,-9,-9,-10,-1,3,5,4,-7,10,4,-9,8,8,-5,-10,-4,-5,7,7,10,-1,4,-8,2,1,1,-8,-6,-10,5,-1,-10,-3,2,8,-2,6,6,8,-1,4,9,-2,8,-5,-3,-3,3,-3,-6,6,1,7,-5,7,-6,-9,-3,-9,4,-6,-10,-1,3,-7,-4,-10,-6,-4,1,-6,-2,-1,7,-8,6,7,10,-1,1,-5,-3,-2,9,-10,7,9,-3,4,2,3,3,4,-10,-8,4,-8,6,8,5,-10,-3,10,9,10,-6,-9,-2,2,-9,3,-4,2,2,-9,-7,-9,-8,-8,5,-8,10,-7,2,4,-2,7,-9,-9,-9,8,-7,-8,-8,-2,6,-1,9,1,-1,-3,4,-10,8,-4,8,-7,-10,10,3,10,-1,-10,-1,2,-5,-5,-6,2,4,5,9,-9,-6,7,-10,-3,-10,-1,-3,4,-1,-5,-6,5,2,-4,-1,-9,1,-10,-5,-9,-5,5,-5,-6,-8,5,7,-3,-9,9,9,9,-4,-10,2,-3,2,-7,-8,5,-1,9,-10,6,-9,-1,10,10,-7,-4,-10,7,8,-10,4,-10,8,4,2,-7,-2,-1,8,-10,-10,5,-3,3,-8,-8,8,9,9,-4,-3,2,-1,10,4,6,4,5,6,1,-1,-6,8,7,-1,8,5,-9,-5,-8,1,-5,5,-4,-8,-5,-5,9,6,-1,-8,1,3,10,1,8,-9,-8,-3,-7,9,-1,1,-8,-6,4,-1,5,-6,-3,10,10,-6,-6,-1,1,3,6,2,2,6,1,-2,-1,-3,7,8,5,-6,-3,3,8,-6,3,10,-3,3,2,-2,6,-9,-9,10,1,4,-4,-7,-7,9,-8,-5,-5,-7,-6,2,-6,-6,-10,-8,4,-6,-1,3,6,7,-10], dtype = "uint8")#candidate|440|(840,)|const|uint8
call_439 = relay.TupleGetItem(func_76_call(relay.reshape(const_440.astype('uint8'), [12, 14, 5])), 0)
call_441 = relay.TupleGetItem(func_79_call(relay.reshape(const_440.astype('uint8'), [12, 14, 5])), 0)
func_308_call = mod.get_global_var('func_308')
func_311_call = mutated_mod.get_global_var('func_311')
const_443 = relay.const([-8.071591,-3.049942,6.780995,-5.963531,-6.752592,0.047372,3.184232,3.768821,-9.427592,-3.124598,8.100108,1.620753,-7.148187,5.402243,-6.838467,1.637902,4.665481,3.974717,6.707770,6.321450,-6.586771,8.995597,-6.899473,1.168975,-7.062484,6.131421,1.718639,-8.841645,6.725564,4.953339,-3.967084,-2.758073,-7.250038,-9.032816,8.032979,2.676007,-5.254183,0.872956,-2.661521,8.475187,6.220835,-4.661988,4.956835,-5.411475,-0.178336,-4.216830,-3.611402,8.835263,2.756769,-6.461931,5.526016,-3.671009,-9.485020,-8.628568,-4.225597,0.862452,-8.064030,-9.990708,2.975844,-5.815203,-3.492383,-4.378878,4.311134,-5.032698,9.278751,1.609099,-8.481295,8.431572,-3.855991,0.604376,4.910923,-1.548145,-9.910315,-6.486059,5.556533,-9.908791,9.462718,-2.038005,-7.945582,0.145478,8.577966,-8.004801,8.833462,-6.866629,-3.629515,-0.858604,-3.938269,8.603152,-6.513208,-1.552188,6.646415,1.290343,7.130914,1.581507,-2.354630,-9.393495,-1.008894,-3.184476,-2.804348,2.056289,-8.749504,-5.832458,-6.747090,-1.376409,5.796410,-5.455309,1.514919,-6.839563,7.504960,-3.499291,-6.744490,5.714198,0.006903,-6.669188,-6.033924,-0.928195,-3.993135,9.560861,4.230172,9.662707,9.715853,4.732450,4.751153,4.646295,1.050119,5.029073,-5.870291,-4.348109,-0.434296,7.705108,-0.626449,0.427826,2.684720,8.184586,-2.294639,1.198236,-1.515668,-8.975558,-7.377166,-9.558194], dtype = "float32")#candidate|443|(140,)|const|float32
call_442 = relay.TupleGetItem(func_308_call(relay.reshape(const_443.astype('float32'), [4, 5, 7])), 2)
call_444 = relay.TupleGetItem(func_311_call(relay.reshape(const_443.astype('float32'), [4, 5, 7])), 2)
uop_447 = relay.cosh(uop_429.astype('float64')) # shape=(14, 3, 4)
uop_456 = relay.log10(uop_447.astype('float32')) # shape=(14, 3, 4)
bop_463 = relay.logical_or(uop_456.astype('bool'), relay.reshape(uop_429.astype('bool'), relay.shape_of(uop_456))) # shape=(14, 3, 4)
bop_471 = relay.logical_xor(bop_463.astype('int64'), relay.reshape(uop_447.astype('int64'), relay.shape_of(bop_463))) # shape=(14, 3, 4)
bop_483 = relay.divide(bop_471.astype('float64'), relay.reshape(uop_447.astype('float64'), relay.shape_of(bop_471))) # shape=(14, 3, 4)
output = relay.Tuple([call_435,const_436,const_437,call_439,const_440,call_442,const_443,bop_483,])
output2 = relay.Tuple([call_438,const_436,const_437,call_441,const_440,call_444,const_443,bop_483,])
func_489 = relay.Function([var_428,], output)
mod['func_489'] = func_489
mod = relay.transform.InferType()(mod)
var_490 = relay.var("var_490", dtype = "float64", shape = (14, 3, 4))#candidate|490|(14, 3, 4)|var|float64
output = func_489(var_490)
func_491 = relay.Function([var_490], output)
mutated_mod['func_491'] = func_491
mutated_mod = relay.transform.InferType()(mutated_mod)
var_753 = relay.var("var_753", dtype = "int16", shape = ())#candidate|753|()|var|int16
var_754 = relay.var("var_754", dtype = "int16", shape = (10, 7, 2))#candidate|754|(10, 7, 2)|var|int16
bop_755 = relay.right_shift(var_753.astype('int16'), var_754.astype('int16')) # shape=(10, 7, 2)
output = bop_755
output2 = bop_755
func_760 = relay.Function([var_753,var_754,], output)
mod['func_760'] = func_760
mod = relay.transform.InferType()(mod)
mutated_mod['func_760'] = func_760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_760_call = mutated_mod.get_global_var('func_760')
var_762 = relay.var("var_762", dtype = "int16", shape = ())#candidate|762|()|var|int16
var_763 = relay.var("var_763", dtype = "int16", shape = (10, 7, 2))#candidate|763|(10, 7, 2)|var|int16
call_761 = func_760_call(var_762,var_763,)
output = call_761
func_764 = relay.Function([var_762,var_763,], output)
mutated_mod['func_764'] = func_764
mutated_mod = relay.transform.InferType()(mutated_mod)
var_861 = relay.var("var_861", dtype = "int64", shape = (6, 14, 2))#candidate|861|(6, 14, 2)|var|int64
var_862 = relay.var("var_862", dtype = "int64", shape = (6, 14, 2))#candidate|862|(6, 14, 2)|var|int64
bop_863 = relay.bitwise_and(var_861.astype('int64'), relay.reshape(var_862.astype('int64'), relay.shape_of(var_861))) # shape=(6, 14, 2)
bop_873 = relay.subtract(var_862.astype('float32'), relay.reshape(bop_863.astype('float32'), relay.shape_of(var_862))) # shape=(6, 14, 2)
func_139_call = mod.get_global_var('func_139')
func_142_call = mutated_mod.get_global_var('func_142')
const_884 = relay.const([[1.032095],[-8.328977],[-1.570537],[7.251490],[-7.000720],[-5.251600],[-9.172493],[6.408054],[4.158574],[-9.582279],[9.066461],[-6.944907],[8.953017],[9.912361],[-9.692316],[6.751437],[-5.720601],[3.585352],[-9.773646],[4.481481],[-1.880254]], dtype = "float64")#candidate|884|(21, 1)|const|float64
const_885 = relay.const([[-9.263644,7.592293,-3.120416,8.719016,3.891112,1.434929,-7.340109,-9.663219,-8.366973,1.392031,-5.794701,4.945494,7.657508,8.483378,-5.572149,8.554103,-2.030997,-5.566833,9.056512,3.412999,-4.325677,-0.462446,0.634413,5.489035,-6.824985,-5.707246,5.090150,1.301843,-7.373547,-5.986874,-7.420072,6.956739,9.089043,3.522933,-1.675226,8.117620,1.732488,7.449457,-5.805313,-9.025211,-5.950423,7.162259,-9.426519,-7.479994,5.926108,0.384528,-7.257146,7.203343,-3.548248,-0.852176,9.396716,7.194768,4.344133,9.855725,-3.999970,0.165180,-9.828291,-6.885204,0.935325,-7.117567,-6.651063,-8.931659,-6.687421,-0.057410,-4.226082,8.789331,-8.928495,-7.568780,-6.524866,-6.100088,2.724856,0.652811,-9.484588,1.243707,-4.620103,5.775982,9.080596,8.787680,2.934833,0.640445,9.696477,2.271506,9.989744,2.675169,5.014963,-0.067930,3.126911,-7.059250,-9.829256,-5.182373,5.690183,5.414578,3.672830,7.023261,-4.119647,4.555791,7.433762,5.928851,-1.561055,-8.116934,-3.971084,6.770342,-1.199004,-7.304189,4.977131,5.870990,-2.526222,5.029680,-0.815747,-5.178778,3.042152,-3.510703,-1.380268,-2.294197,-5.465336,-2.720639,2.083305,5.652377,7.562395,-8.037496,-6.807295,-3.734143,-9.125536,-9.771786,-9.151265,0.626368,-5.034512,-2.970022,-0.750807,-6.222927,-3.993300,0.221466,-9.287359,8.624982,-6.943062,-3.814594,-2.206058,3.095016,-6.932963,1.537627,-8.808200,4.680006,-4.793658,8.756062,-1.532537,6.470854,-0.417568,-5.771777,6.254567,2.204993,-8.566411,-4.181928,-3.957188,4.915238,-7.810897,6.874924,-7.067161,0.137048,-8.226801,1.703276,-0.222454,3.410238,9.504523,9.316198,-4.529600,0.437283,-9.464694,8.642513,4.801568,-1.173826,4.674991,8.338662,-3.478868,-5.803132,0.766625,5.258271,-9.806351,7.793943,-5.966548,5.841754,4.040528,4.169056,-2.828472,-0.777275,-9.400385,4.400448,-8.448563,6.871028,-1.150311,7.112716,1.122154,5.243803,-8.570235,5.655608,-2.568600,6.023188,6.377349,9.002853,0.765979,-4.564305,-3.832525,2.637192,-4.236258,8.668941,-4.897026,-9.776091,6.403391,0.352079,-6.470807,6.212967,5.226771,-7.921653,1.996281,4.530669,5.519711,-6.527438,9.852907,-9.258844,-8.510863,-3.815586,3.896500,-1.424434,9.040754,-6.355605,9.560213,-1.474664,-2.466435,5.142347,-7.796923,-8.793499,-5.186848,-6.219116,-4.192765,9.216024,-8.272495,3.168434,3.450447,4.120625,2.082090,-0.206540,5.136950,-8.076367,-1.454067,1.941196,-6.441187,-7.096705,4.141184,-1.700136,-5.580495,-4.576144,-3.260285,-0.437352,-3.672035,-5.412958,7.670707,-3.360853,1.956378,-7.281267,-2.557510,-7.269096,2.432003,-1.340474,1.440568,-0.822284,-8.007952,1.630644,-2.087553,-7.785700,1.846175,-5.741622,-8.125295,3.978998,0.382830,5.139323,6.626467,-2.451331,-9.789745,0.920192,-6.495340,0.047740,7.831377,0.240033,-4.813199,-8.622065,-1.455946,-0.720693,3.459825,-3.250118,9.872005,-8.963062,5.539171,2.616603,2.947712,-3.026922]], dtype = "float64")#candidate|885|(1, 294)|const|float64
call_883 = func_139_call(relay.reshape(const_884.astype('float64'), [1, 3, 7]), relay.reshape(const_885.astype('float64'), [14, 3, 7]), )
call_886 = func_139_call(relay.reshape(const_884.astype('float64'), [1, 3, 7]), relay.reshape(const_885.astype('float64'), [14, 3, 7]), )
uop_892 = relay.sigmoid(const_884.astype('float64')) # shape=(21, 1)
output = relay.Tuple([bop_873,call_883,const_885,uop_892,])
output2 = relay.Tuple([bop_873,call_886,const_885,uop_892,])
func_895 = relay.Function([var_861,var_862,], output)
mod['func_895'] = func_895
mod = relay.transform.InferType()(mod)
mutated_mod['func_895'] = func_895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_895_call = mutated_mod.get_global_var('func_895')
var_897 = relay.var("var_897", dtype = "int64", shape = (6, 14, 2))#candidate|897|(6, 14, 2)|var|int64
var_898 = relay.var("var_898", dtype = "int64", shape = (6, 14, 2))#candidate|898|(6, 14, 2)|var|int64
call_896 = func_895_call(var_897,var_898,)
output = call_896
func_899 = relay.Function([var_897,var_898,], output)
mutated_mod['func_899'] = func_899
mutated_mod = relay.transform.InferType()(mutated_mod)
const_953 = relay.const([[[-2.783151,-5.257769,-0.618490],[8.418129,-6.118843,-2.897980],[-5.121568,-2.801725,3.367074],[1.250719,3.899935,-9.119227],[-1.637484,8.112811,-4.436002],[6.244241,8.789912,8.878777],[-2.520980,-1.180583,2.626880],[-1.324768,5.640508,-8.070480]],[[8.260144,-8.066919,0.534308],[0.712663,1.402113,-3.341831],[-8.424259,-0.507893,6.153072],[2.276793,-3.435514,7.482068],[5.361922,-4.622566,-0.943617],[2.965814,-9.221196,6.741077],[-7.313428,7.827301,5.787234],[7.708601,7.885946,-5.053984]],[[-7.593457,4.158423,5.232607],[-3.619506,-6.077755,6.152389],[-3.305851,-0.737125,-7.905924],[-4.143783,-3.361341,3.864261],[0.060592,2.163828,-8.109932],[-7.806488,-9.540543,-4.697735],[-8.686109,-9.521732,9.958599],[5.549024,-1.763108,-8.567278]],[[0.541295,0.805272,7.758888],[-6.162646,3.178840,1.521536],[3.454548,-3.201404,2.153099],[0.081347,-0.019520,-6.633800],[-9.502437,9.796277,8.871371],[5.892390,-4.195310,5.034349],[4.155281,7.256316,1.169298],[8.399335,-8.026656,-1.481028]],[[-0.900719,3.761107,1.130523],[-4.843303,6.059377,-8.231230],[5.157521,-3.891143,-4.610279],[8.637618,7.065372,2.818468],[-5.735306,0.790474,-9.497040],[-8.784684,8.150501,4.271995],[-5.227071,-2.420381,4.277063],[-3.524922,9.128924,8.502983]],[[-3.571830,7.145198,0.193943],[6.920729,2.512735,-1.311172],[-2.827512,-7.306900,-9.963285],[2.292694,0.104345,-0.105570],[-0.685861,-0.491123,0.012123],[-0.448826,-3.571694,4.484903],[-8.325446,5.206927,2.036476],[2.785786,4.395402,-1.425129]],[[-2.380023,-4.051910,0.318802],[-9.029732,7.525662,4.996193],[-9.711112,3.051642,-2.440336],[-8.737883,8.311189,-3.346208],[1.163795,-8.619981,-7.775952],[-8.559606,-4.670456,-8.245862],[-4.285642,-0.531433,3.641979],[-9.196917,0.237705,9.849370]],[[4.244322,-8.869018,6.245296],[7.701334,-3.866423,3.077536],[-1.156254,0.234855,-4.653181],[1.426568,7.977993,7.784850],[2.893990,-3.441817,9.822458],[-4.349501,-0.961796,3.776393],[-2.760230,-6.844846,-5.482021],[3.572589,-6.019011,-3.637032]],[[-8.317832,7.962101,2.633061],[7.456521,-6.965031,2.288704],[0.385612,-7.370742,-4.857732],[7.582338,3.926861,8.358658],[-8.111175,-4.782348,-0.381801],[2.456167,-6.683636,-6.490912],[9.913997,5.770791,7.659138],[6.982760,-6.040648,-6.206437]]], dtype = "float32")#candidate|953|(9, 8, 3)|const|float32
uop_954 = relay.sqrt(const_953.astype('float32')) # shape=(9, 8, 3)
output = relay.Tuple([uop_954,])
output2 = relay.Tuple([uop_954,])
func_956 = relay.Function([], output)
mod['func_956'] = func_956
mod = relay.transform.InferType()(mod)
mutated_mod['func_956'] = func_956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_956_call = mutated_mod.get_global_var('func_956')
call_957 = func_956_call()
output = call_957
func_958 = relay.Function([], output)
mutated_mod['func_958'] = func_958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_956_call = mod.get_global_var('func_956')
func_958_call = mutated_mod.get_global_var('func_958')
call_1003 = relay.TupleGetItem(func_956_call(), 0)
call_1004 = relay.TupleGetItem(func_958_call(), 0)
output = call_1003
output2 = call_1004
func_1009 = relay.Function([], output)
mod['func_1009'] = func_1009
mod = relay.transform.InferType()(mod)
mutated_mod['func_1009'] = func_1009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1009_call = mutated_mod.get_global_var('func_1009')
call_1010 = func_1009_call()
output = call_1010
func_1011 = relay.Function([], output)
mutated_mod['func_1011'] = func_1011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1009_call = mod.get_global_var('func_1009')
func_1011_call = mutated_mod.get_global_var('func_1011')
call_1014 = func_1009_call()
call_1015 = func_1009_call()
uop_1020 = relay.acos(call_1014.astype('float64')) # shape=(9, 8, 3)
uop_1022 = relay.acos(call_1015.astype('float64')) # shape=(9, 8, 3)
uop_1024 = relay.sigmoid(uop_1020.astype('float64')) # shape=(9, 8, 3)
uop_1026 = relay.sigmoid(uop_1022.astype('float64')) # shape=(9, 8, 3)
func_308_call = mod.get_global_var('func_308')
func_311_call = mutated_mod.get_global_var('func_311')
var_1037 = relay.var("var_1037", dtype = "float32", shape = (140,))#candidate|1037|(140,)|var|float32
call_1036 = relay.TupleGetItem(func_308_call(relay.reshape(var_1037.astype('float32'), [4, 5, 7])), 1)
call_1038 = relay.TupleGetItem(func_311_call(relay.reshape(var_1037.astype('float32'), [4, 5, 7])), 1)
bop_1040 = relay.floor_mod(uop_1024.astype('float32'), relay.reshape(uop_1020.astype('float32'), relay.shape_of(uop_1024))) # shape=(9, 8, 3)
bop_1043 = relay.floor_mod(uop_1026.astype('float32'), relay.reshape(uop_1022.astype('float32'), relay.shape_of(uop_1026))) # shape=(9, 8, 3)
func_113_call = mod.get_global_var('func_113')
func_116_call = mutated_mod.get_global_var('func_116')
const_1049 = relay.const(6.295580, dtype = "float64")#candidate|1049|()|const|float64
call_1048 = func_113_call(relay.reshape(const_1049.astype('float64'), []))
call_1050 = func_113_call(relay.reshape(const_1049.astype('float64'), []))
const_1053 = relay.const([[[-0.036293,-7.497182,-5.865170],[-7.817601,-0.276213,-8.481686],[-4.418042,-9.525787,-7.153366],[-3.682472,-0.633918,1.397561],[0.363645,1.629567,6.469754],[-7.557150,-7.772297,9.531644],[5.990191,-1.584588,2.285236],[-4.295920,1.949482,-8.819612]],[[5.516916,7.310599,6.256223],[0.803891,2.859381,-3.784381],[6.358364,7.312410,0.226071],[-4.511808,-6.590626,0.837843],[-8.630165,5.817854,-7.677741],[7.684248,-4.490771,5.855828],[8.158191,9.184813,7.182409],[1.898305,-0.746555,-7.579925]],[[1.673905,-9.575364,-6.174317],[7.474006,-0.035606,-4.907377],[3.222361,-5.222179,-8.186486],[0.826299,-5.900165,5.866467],[-8.274742,1.483585,1.074106],[8.593470,-5.275927,-7.405169],[1.483086,3.281888,2.622034],[-6.207548,1.934540,-7.830582]],[[-9.127837,-8.028436,-4.754110],[6.362664,-6.972675,-9.098537],[-3.045060,7.243489,2.403010],[6.252156,9.621780,-7.433260],[-1.876122,3.368770,6.288889],[-4.991849,-7.344508,1.551120],[-0.498427,1.481651,9.826071],[-9.973233,9.111046,-9.781073]],[[9.523570,7.250411,4.732442],[8.901634,-1.154651,1.838318],[1.567475,-7.149737,-5.973417],[-1.769117,-4.032356,-5.880721],[4.778933,1.115777,-8.332320],[-1.611668,-7.360603,-1.022357],[3.024678,4.321748,7.816098],[-4.126518,-3.922283,-3.697143]],[[-6.201277,5.920523,-7.988130],[-0.227990,-0.420608,5.084861],[8.609243,1.130833,5.412596],[2.060760,4.132907,8.661844],[-0.825528,5.050225,-8.264193],[1.568017,3.671223,8.399047],[-5.825009,5.246547,2.066102],[1.560144,-6.205777,-7.642856]],[[5.282645,9.545762,2.147487],[5.109270,-0.378715,-8.314553],[-6.023837,3.181680,0.851866],[2.349605,-3.425223,-4.647796],[6.709990,-3.946617,-5.381258],[-9.940756,2.862728,4.528250],[-5.550947,-1.697603,9.412751],[4.164766,-0.247143,9.302283]],[[8.504818,-4.000765,-6.373476],[7.752586,-7.071054,6.445411],[1.320855,-7.987955,0.232341],[0.075385,-2.831144,-0.944319],[-7.576151,8.366815,-0.165066],[-2.733371,-2.208998,2.309385],[-0.886950,-5.877474,0.510855],[8.784230,3.193006,3.643000]],[[4.953779,-3.141015,-3.578458],[-4.043777,-2.226109,7.815454],[-5.682936,-2.879382,-2.063419],[0.184585,3.619856,-6.815542],[-1.757889,9.199454,5.539627],[-7.967429,0.661494,3.885443],[-9.023309,-8.519538,2.418868],[5.172767,-9.095132,-1.023486]]], dtype = "float64")#candidate|1053|(9, 8, 3)|const|float64
bop_1054 = relay.floor_divide(uop_1024.astype('float32'), relay.reshape(const_1053.astype('float32'), relay.shape_of(uop_1024))) # shape=(9, 8, 3)
bop_1057 = relay.floor_divide(uop_1026.astype('float32'), relay.reshape(const_1053.astype('float32'), relay.shape_of(uop_1026))) # shape=(9, 8, 3)
bop_1058 = relay.right_shift(call_1014.astype('uint32'), relay.reshape(uop_1024.astype('uint32'), relay.shape_of(call_1014))) # shape=(9, 8, 3)
bop_1061 = relay.right_shift(call_1015.astype('uint32'), relay.reshape(uop_1026.astype('uint32'), relay.shape_of(call_1015))) # shape=(9, 8, 3)
bop_1079 = relay.multiply(bop_1058.astype('float64'), relay.reshape(bop_1054.astype('float64'), relay.shape_of(bop_1058))) # shape=(9, 8, 3)
bop_1082 = relay.multiply(bop_1061.astype('float64'), relay.reshape(bop_1057.astype('float64'), relay.shape_of(bop_1061))) # shape=(9, 8, 3)
func_161_call = mod.get_global_var('func_161')
func_164_call = mutated_mod.get_global_var('func_164')
var_1089 = relay.var("var_1089", dtype = "int64", shape = (22,))#candidate|1089|(22,)|var|int64
call_1088 = relay.TupleGetItem(func_161_call(relay.reshape(var_1089.astype('int64'), [2, 11]), relay.reshape(var_1089.astype('int64'), [2, 11]), ), 0)
call_1090 = relay.TupleGetItem(func_164_call(relay.reshape(var_1089.astype('int64'), [2, 11]), relay.reshape(var_1089.astype('int64'), [2, 11]), ), 0)
func_161_call = mod.get_global_var('func_161')
func_164_call = mutated_mod.get_global_var('func_164')
call_1095 = relay.TupleGetItem(func_161_call(relay.reshape(call_1088.astype('int64'), [2, 11]), relay.reshape(var_1089.astype('int64'), [2, 11]), ), 0)
call_1096 = relay.TupleGetItem(func_164_call(relay.reshape(call_1088.astype('int64'), [2, 11]), relay.reshape(var_1089.astype('int64'), [2, 11]), ), 0)
output = relay.Tuple([call_1036,var_1037,bop_1040,call_1048,const_1049,bop_1079,call_1088,var_1089,call_1095,])
output2 = relay.Tuple([call_1038,var_1037,bop_1043,call_1050,const_1049,bop_1082,call_1090,var_1089,call_1096,])
func_1110 = relay.Function([var_1037,var_1089,], output)
mod['func_1110'] = func_1110
mod = relay.transform.InferType()(mod)
var_1111 = relay.var("var_1111", dtype = "float32", shape = (140,))#candidate|1111|(140,)|var|float32
var_1112 = relay.var("var_1112", dtype = "int64", shape = (22,))#candidate|1112|(22,)|var|int64
output = func_1110(var_1111,var_1112,)
func_1113 = relay.Function([var_1111,var_1112,], output)
mutated_mod['func_1113'] = func_1113
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1120 = relay.var("var_1120", dtype = "uint16", shape = (6, 4, 2))#candidate|1120|(6, 4, 2)|var|uint16
var_1121 = relay.var("var_1121", dtype = "uint16", shape = (6, 4, 2))#candidate|1121|(6, 4, 2)|var|uint16
bop_1122 = relay.multiply(var_1120.astype('uint16'), relay.reshape(var_1121.astype('uint16'), relay.shape_of(var_1120))) # shape=(6, 4, 2)
func_895_call = mod.get_global_var('func_895')
func_899_call = mutated_mod.get_global_var('func_899')
var_1131 = relay.var("var_1131", dtype = "int64", shape = (168,))#candidate|1131|(168,)|var|int64
call_1130 = relay.TupleGetItem(func_895_call(relay.reshape(var_1131.astype('int64'), [6, 14, 2]), relay.reshape(var_1131.astype('int64'), [6, 14, 2]), ), 1)
call_1132 = relay.TupleGetItem(func_899_call(relay.reshape(var_1131.astype('int64'), [6, 14, 2]), relay.reshape(var_1131.astype('int64'), [6, 14, 2]), ), 1)
func_895_call = mod.get_global_var('func_895')
func_899_call = mutated_mod.get_global_var('func_899')
call_1133 = relay.TupleGetItem(func_895_call(relay.reshape(var_1131.astype('int64'), [6, 14, 2]), relay.reshape(var_1131.astype('int64'), [6, 14, 2]), ), 2)
call_1134 = relay.TupleGetItem(func_899_call(relay.reshape(var_1131.astype('int64'), [6, 14, 2]), relay.reshape(var_1131.astype('int64'), [6, 14, 2]), ), 2)
bop_1139 = relay.left_shift(call_1130.astype('int64'), relay.reshape(call_1133.astype('int64'), relay.shape_of(call_1130))) # shape=(14, 3, 7)
bop_1142 = relay.left_shift(call_1132.astype('int64'), relay.reshape(call_1134.astype('int64'), relay.shape_of(call_1132))) # shape=(14, 3, 7)
output = relay.Tuple([bop_1122,var_1131,bop_1139,])
output2 = relay.Tuple([bop_1122,var_1131,bop_1142,])
func_1147 = relay.Function([var_1120,var_1121,var_1131,], output)
mod['func_1147'] = func_1147
mod = relay.transform.InferType()(mod)
var_1148 = relay.var("var_1148", dtype = "uint16", shape = (6, 4, 2))#candidate|1148|(6, 4, 2)|var|uint16
var_1149 = relay.var("var_1149", dtype = "uint16", shape = (6, 4, 2))#candidate|1149|(6, 4, 2)|var|uint16
var_1150 = relay.var("var_1150", dtype = "int64", shape = (168,))#candidate|1150|(168,)|var|int64
output = func_1147(var_1148,var_1149,var_1150,)
func_1151 = relay.Function([var_1148,var_1149,var_1150,], output)
mutated_mod['func_1151'] = func_1151
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1156 = relay.var("var_1156", dtype = "float64", shape = (16, 7, 1))#candidate|1156|(16, 7, 1)|var|float64
uop_1157 = relay.rsqrt(var_1156.astype('float64')) # shape=(16, 7, 1)
var_1160 = relay.var("var_1160", dtype = "float64", shape = (16, 7, 14))#candidate|1160|(16, 7, 14)|var|float64
bop_1161 = relay.equal(uop_1157.astype('bool'), var_1160.astype('bool')) # shape=(16, 7, 14)
func_956_call = mod.get_global_var('func_956')
func_958_call = mutated_mod.get_global_var('func_958')
call_1169 = relay.TupleGetItem(func_956_call(), 0)
call_1170 = relay.TupleGetItem(func_958_call(), 0)
func_161_call = mod.get_global_var('func_161')
func_164_call = mutated_mod.get_global_var('func_164')
const_1176 = relay.const([[-2,4],[3,3],[1,-7],[-2,9],[-3,-8],[1,3],[-8,-6],[6,5],[-9,5],[-10,4],[-4,4]], dtype = "int64")#candidate|1176|(11, 2)|const|int64
call_1175 = relay.TupleGetItem(func_161_call(relay.reshape(const_1176.astype('int64'), [2, 11]), relay.reshape(const_1176.astype('int64'), [2, 11]), ), 0)
call_1177 = relay.TupleGetItem(func_164_call(relay.reshape(const_1176.astype('int64'), [2, 11]), relay.reshape(const_1176.astype('int64'), [2, 11]), ), 0)
bop_1181 = relay.minimum(bop_1161.astype('int8'), relay.reshape(var_1160.astype('int8'), relay.shape_of(bop_1161))) # shape=(16, 7, 14)
output = relay.Tuple([call_1169,call_1175,const_1176,bop_1181,])
output2 = relay.Tuple([call_1170,call_1177,const_1176,bop_1181,])
func_1197 = relay.Function([var_1156,var_1160,], output)
mod['func_1197'] = func_1197
mod = relay.transform.InferType()(mod)
var_1198 = relay.var("var_1198", dtype = "float64", shape = (16, 7, 1))#candidate|1198|(16, 7, 1)|var|float64
var_1199 = relay.var("var_1199", dtype = "float64", shape = (16, 7, 14))#candidate|1199|(16, 7, 14)|var|float64
output = func_1197(var_1198,var_1199,)
func_1200 = relay.Function([var_1198,var_1199,], output)
mutated_mod['func_1200'] = func_1200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1009_call = mod.get_global_var('func_1009')
func_1011_call = mutated_mod.get_global_var('func_1011')
call_1256 = func_1009_call()
call_1257 = func_1009_call()
func_113_call = mod.get_global_var('func_113')
func_116_call = mutated_mod.get_global_var('func_116')
var_1268 = relay.var("var_1268", dtype = "float64", shape = ())#candidate|1268|()|var|float64
call_1267 = func_113_call(relay.reshape(var_1268.astype('float64'), []))
call_1269 = func_113_call(relay.reshape(var_1268.astype('float64'), []))
bop_1271 = relay.floor_mod(call_1267.astype('float64'), var_1268.astype('float64')) # shape=(12, 3, 5)
bop_1274 = relay.floor_mod(call_1269.astype('float64'), var_1268.astype('float64')) # shape=(12, 3, 5)
bop_1275 = relay.greater_equal(bop_1271.astype('bool'), var_1268.astype('bool')) # shape=(12, 3, 5)
bop_1278 = relay.greater_equal(bop_1274.astype('bool'), var_1268.astype('bool')) # shape=(12, 3, 5)
func_76_call = mod.get_global_var('func_76')
func_79_call = mutated_mod.get_global_var('func_79')
const_1282 = relay.const([-4,-9,6,1,-6,3,-7,7,-3,3,8,4,4,2,-1,-9,5,-7,3,-7,4,6,-1,7,-10,3,8,6,7,9,-4,-4,-6,9,10,2,-6,-7,-1,-8,7,-1,-1,4,-6,7,-3,10,-3,-1,-3,-8,1,-5,-10,-3,8,-1,-2,8,-9,-9,-7,2,-6,-4,-5,-1,10,9,2,-6,-8,9,3,8,-2,6,6,9,2,4,-8,6,-2,7,-8,2,1,8,1,-7,4,2,3,5,-7,-5,-3,-4,-5,-9,-5,1,-6,-1,4,10,3,-10,-5,4,-4,-8,7,6,-4,-6,-7,4,-5,-8,5,9,-10,-8,3,-9,-8,-6,1,-10,-6,-4,3,-6,-5,9,2,9,4,7,9,6,2,-4,-5,-10,1,4,1,4,4,-5,-1,8,-4,-5,-10,-10,-5,7,-9,1,-10,7,4,-7,-7,5,-1,-5,8,7,3,2,4,-9,6,-4,-4,-10,-2,-7,1,7,4,6,4,-10,3,-6,-1,9,-5,-8,5,7,4,6,-5,5,7,-1,-7,7,-5,6,-9,5,-1,1,10,-3,2,-8,-2,-8,6,-9,2,-2,2,3,6,-3,1,-3,2,3,-3,2,-6,6,10,5,-5,9,7,-7,7,10,-4,9,6,1,-5,-9,-5,-2,-2,7,6,-5,5,7,-3,-4,-9,6,-6,-9,2,-3,4,-10,-2,6,-2,-10,4,-2,6,6,8,-3,9,-7,-9,-5,-4,1,-5,-4,7,-5,5,8,3,7,5,6,-1,4,3,-4,6,5,-2,10,4,8,5,1,9,-9,-5,8,-10,-7,-2,2,-6,-9,5,-6,5,10,-2,-7,-8,-7,5,-10,-6,10,8,7,-8,-4,6,-5,6,2,-6,-10,7,-9,1,-7,-6,6,-8,10,9,-8,4,9,-9,-7,-10,-1,-4,-9,-10,5,-3,8,6,-7,1,-2,-1,2,-4,6,8,2,10,1,10,-3,-7,-6,10,7,-1,4,-2,3,-9,-9,-10,1,6,9,-7,1,-5,4,2,-5,-2,6,-7,-1,2,5,3,-2,-9,-5,3,-8,-2,-2,-6,7,7,-4,-6,5,5,8,6,-6,-10,1,6,-2,4,3,2,-9,-5,7,10,-9,-2,2,6,-4,1,-2,5,-5,7,-10,-8,-9,-6,6,6,10,2,-5,1,7,-5,9,10,-10,10,5,2,4,-8,-3,-6,4,4,6,-1,7,1,-7,-8,9,10,7,-8,10,-1,-2,-6,5,-8,-5,-6,-4,-8,2,-1,-5,5,-4,5,10,-9,-5,1,-4,10,5,-2,7,-3,8,-9,4,7,10,-4,-1,3,5,-3,2,-8,3,7,2,8,3,-4,-5,6,6,6,-10,-1,-4,6,10,-2,-8,3,-8,-1,-10,7,-8,9,-1,-1,-5,-10,7,-2,3,-9,2,2,-5,-10,-10,8,-9,1,-3,5,-5,4,2,-10,-1,-6,3,4,1,-10,-2,8,-7,-3,3,8,-4,9,-8,3,-10,-4,-8,-10,2,-1,-10,8,-10,-10,1,-1,10,-3,1,-10,6,3,-10,-7,4,-9,-9,-4,7,1,1,5,6,-10,5,-9,1,8,-4,8,-3,2,1,10,-1,-8,-5,-4,10,-9,1,7,-9,-7,-10,-2,-9,4,2,10,4,-6,10,1,1,6,-1,7,-9,-4,-7,-3,-1,-8,10,-4,7,-5,-9,6,10,5,-6,9,7,6,10,-10,-6,-3,8,1,9,-10,-2,-10,10,-2,-8,-10,8,6,-5,10,9,-8,-3,2,-4,-2,-1,-9,-8,5,-5,10,3,3,6,-1,-7,10,5,1,6,-6,-6,10,-9,1,-2,-7,-6,-4,4,-5,-4,10,-1,-9,-6,6,3,7,10,5,-8,-10,-5,-7,10,9,-1,5,9,10,2,-7,-9,4,2,-3,4,-7,8,7,7,3,-6,-1,4,-10,5,-9,4,6,-5,-8,-4,9,8,1,-3,-5,-5,-3,8,-3,-5,-9,-10,-4,-8,5,7,4,-9,1,9,2,-2,3,2,-3,2,3,9,-6,-2,-8,2,-6,-5,6,5,-10,-5,-7,10,-2,-5,4,-6,10,-9,9,-10,-4,-4,-3,-8,-7,5,-10,5,-9,6,-4,-4,-10,-5,-6,-6,2,-1,-10,-7,2,1,10,3,-6,-5,-3,7,3,4,8,2,-3,-4,-1,-10,-4,-4,-6,-4,-6,-5,9,2,-3,-3], dtype = "uint8")#candidate|1282|(840,)|const|uint8
call_1281 = relay.TupleGetItem(func_76_call(relay.reshape(const_1282.astype('uint8'), [12, 14, 5])), 0)
call_1283 = relay.TupleGetItem(func_79_call(relay.reshape(const_1282.astype('uint8'), [12, 14, 5])), 0)
var_1286 = relay.var("var_1286", dtype = "bool", shape = (12, 3, 5))#candidate|1286|(12, 3, 5)|var|bool
bop_1287 = relay.add(bop_1275.astype('uint16'), relay.reshape(var_1286.astype('uint16'), relay.shape_of(bop_1275))) # shape=(12, 3, 5)
bop_1290 = relay.add(bop_1278.astype('uint16'), relay.reshape(var_1286.astype('uint16'), relay.shape_of(bop_1278))) # shape=(12, 3, 5)
output = relay.Tuple([call_1256,call_1281,const_1282,bop_1287,])
output2 = relay.Tuple([call_1257,call_1283,const_1282,bop_1290,])
func_1295 = relay.Function([var_1268,var_1286,], output)
mod['func_1295'] = func_1295
mod = relay.transform.InferType()(mod)
mutated_mod['func_1295'] = func_1295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1295_call = mutated_mod.get_global_var('func_1295')
var_1297 = relay.var("var_1297", dtype = "float64", shape = ())#candidate|1297|()|var|float64
var_1298 = relay.var("var_1298", dtype = "bool", shape = (12, 3, 5))#candidate|1298|(12, 3, 5)|var|bool
call_1296 = func_1295_call(var_1297,var_1298,)
output = call_1296
func_1299 = relay.Function([var_1297,var_1298,], output)
mutated_mod['func_1299'] = func_1299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1009_call = mod.get_global_var('func_1009')
func_1011_call = mutated_mod.get_global_var('func_1011')
call_1319 = func_1009_call()
call_1320 = func_1009_call()
var_1324 = relay.var("var_1324", dtype = "float32", shape = (9, 8, 3))#candidate|1324|(9, 8, 3)|var|float32
bop_1325 = relay.mod(call_1319.astype('float64'), relay.reshape(var_1324.astype('float64'), relay.shape_of(call_1319))) # shape=(9, 8, 3)
bop_1328 = relay.mod(call_1320.astype('float64'), relay.reshape(var_1324.astype('float64'), relay.shape_of(call_1320))) # shape=(9, 8, 3)
output = bop_1325
output2 = bop_1328
func_1348 = relay.Function([var_1324,], output)
mod['func_1348'] = func_1348
mod = relay.transform.InferType()(mod)
mutated_mod['func_1348'] = func_1348
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1349 = relay.var("var_1349", dtype = "float32", shape = (9, 8, 3))#candidate|1349|(9, 8, 3)|var|float32
func_1348_call = mutated_mod.get_global_var('func_1348')
call_1350 = func_1348_call(var_1349)
output = call_1350
func_1351 = relay.Function([var_1349], output)
mutated_mod['func_1351'] = func_1351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_956_call = mod.get_global_var('func_956')
func_958_call = mutated_mod.get_global_var('func_958')
call_1406 = relay.TupleGetItem(func_956_call(), 0)
call_1407 = relay.TupleGetItem(func_958_call(), 0)
output = call_1406
output2 = call_1407
func_1413 = relay.Function([], output)
mod['func_1413'] = func_1413
mod = relay.transform.InferType()(mod)
mutated_mod['func_1413'] = func_1413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1413_call = mutated_mod.get_global_var('func_1413')
call_1414 = func_1413_call()
output = call_1414
func_1415 = relay.Function([], output)
mutated_mod['func_1415'] = func_1415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_956_call = mod.get_global_var('func_956')
func_958_call = mutated_mod.get_global_var('func_958')
call_1416 = relay.TupleGetItem(func_956_call(), 0)
call_1417 = relay.TupleGetItem(func_958_call(), 0)
const_1419 = relay.const([[[9.041147,3.108399,3.301475],[-2.173457,2.918289,-8.617542],[-1.996437,-4.941365,-5.607938],[5.209339,3.370742,-1.444578],[-4.653277,-5.029671,-0.301082],[4.628238,3.282543,3.462028],[1.883985,-3.399941,-4.821259],[2.067944,6.023943,3.637026]],[[-7.598362,3.062843,1.398659],[6.444334,2.778460,5.489378],[-9.519180,9.179098,3.758895],[-5.905768,-0.603541,8.017509],[8.618658,-5.655816,4.139263],[-3.887710,-6.342095,6.498033],[3.610214,0.896568,9.943967],[2.668170,9.920347,1.494992]],[[8.637004,-5.271840,-6.824390],[9.180780,-8.750925,-2.038372],[4.391867,-9.006684,-2.239091],[9.708995,-8.885842,-1.615152],[3.520518,8.566382,2.072040],[9.205518,-4.837763,-1.277875],[6.954736,6.096271,7.070000],[0.997516,-0.344576,-8.873067]],[[-0.906531,8.791543,9.030687],[-4.674381,9.251940,0.950765],[-3.269766,0.140937,-1.968882],[4.049004,4.524358,-6.711344],[-9.098337,7.204172,8.613947],[1.027145,7.089443,-1.014408],[3.543463,4.948257,1.129447],[0.624282,1.504857,-3.295723]],[[-1.489754,-6.446001,-5.810131],[8.756070,-7.396285,-6.984081],[-1.964067,3.772706,-4.140511],[-3.718571,-1.162426,-2.845889],[7.596747,7.828579,-1.428165],[-6.878169,2.773139,7.338267],[1.545491,-5.952490,3.625770],[6.607491,5.079125,-7.557912]],[[7.490593,2.066306,-3.177817],[9.073907,4.148016,6.559785],[-6.531920,-3.575976,-5.490580],[-2.456646,-1.565421,1.160296],[8.315317,-0.269721,-7.535961],[-5.252562,9.011795,9.400417],[1.001630,2.288351,-6.458794],[-6.110192,1.728474,-4.117095]],[[-5.809844,5.110912,-4.548775],[3.114710,-8.691498,-5.492335],[-4.399086,-5.111654,-7.369806],[1.512910,-7.684191,-6.309154],[7.482641,8.209440,3.268271],[-2.274591,-1.379214,2.412434],[0.429090,-9.986256,-6.048069],[-0.578126,8.282926,-5.593381]],[[-0.715225,9.954400,6.957205],[2.225077,2.560528,8.875360],[2.538251,-8.428505,6.748859],[-1.968211,-2.708002,-1.534069],[5.506822,7.237090,0.293548],[-1.109898,-4.951493,-1.941587],[3.124348,-8.800551,6.616232],[4.000170,-6.532417,-6.189427]],[[0.886530,-9.368450,-6.518411],[-9.166310,0.984714,-8.633159],[-2.069404,-8.603697,1.157653],[-8.674744,1.501446,5.221135],[-2.894452,5.948101,-0.134777],[-2.914192,-8.161999,-9.068624],[-4.122186,-0.310611,-1.051626],[-7.368798,8.520366,8.541907]]], dtype = "float32")#candidate|1419|(9, 8, 3)|const|float32
bop_1420 = relay.maximum(call_1416.astype('int8'), relay.reshape(const_1419.astype('int8'), relay.shape_of(call_1416))) # shape=(9, 8, 3)
bop_1423 = relay.maximum(call_1417.astype('int8'), relay.reshape(const_1419.astype('int8'), relay.shape_of(call_1417))) # shape=(9, 8, 3)
output = bop_1420
output2 = bop_1423
func_1433 = relay.Function([], output)
mod['func_1433'] = func_1433
mod = relay.transform.InferType()(mod)
mutated_mod['func_1433'] = func_1433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1433_call = mutated_mod.get_global_var('func_1433')
call_1434 = func_1433_call()
output = call_1434
func_1435 = relay.Function([], output)
mutated_mod['func_1435'] = func_1435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1413_call = mod.get_global_var('func_1413')
func_1415_call = mutated_mod.get_global_var('func_1415')
call_1444 = func_1413_call()
call_1445 = func_1413_call()
output = call_1444
output2 = call_1445
func_1459 = relay.Function([], output)
mod['func_1459'] = func_1459
mod = relay.transform.InferType()(mod)
output = func_1459()
func_1460 = relay.Function([], output)
mutated_mod['func_1460'] = func_1460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1009_call = mod.get_global_var('func_1009')
func_1011_call = mutated_mod.get_global_var('func_1011')
call_1502 = func_1009_call()
call_1503 = func_1009_call()
const_1504 = relay.const([[[5.479544,-6.351243,-5.897690],[-2.354089,6.137958,-8.695016],[-7.842619,-6.948511,6.542180],[-5.094891,-3.957052,3.985636],[-3.423431,-7.064175,9.791485],[-4.486402,-9.164304,9.412720],[0.479937,-6.553586,-5.262136],[-5.065507,7.845057,0.684808]],[[-5.466870,-5.505885,-1.096773],[3.567282,-6.304712,-8.058055],[8.153652,-4.901337,8.920628],[-1.842097,-2.569755,-9.485811],[3.138356,8.403391,1.804426],[5.862291,-0.909655,4.247366],[-0.462701,6.707107,-0.823573],[-7.075659,5.956892,8.167702]],[[-5.562409,1.070384,-2.946644],[7.648185,-4.908520,-3.391642],[-3.912172,4.583612,1.015058],[1.543178,9.500551,-0.135822],[-1.859652,0.556656,-6.795561],[1.583193,6.532606,3.483926],[-1.962161,1.929854,4.335891],[-5.485334,-6.811630,9.829081]],[[-5.856157,2.165234,0.630729],[0.404697,-5.556180,3.407605],[7.236005,8.380887,5.783095],[-8.800684,5.572184,3.301282],[-6.941169,-3.430803,8.488461],[-1.400571,5.802278,-4.830838],[-0.378139,-8.080239,-1.050572],[3.436599,-4.402400,-7.561899]],[[9.590404,9.713473,8.865335],[8.059069,6.104655,-1.356595],[6.904652,-4.817885,-5.945467],[-0.163965,9.143043,3.702807],[-0.889505,2.348290,0.575796],[8.134640,3.174628,6.672411],[4.481316,-6.283921,1.858474],[8.930515,4.243379,6.101924]],[[-4.005808,-1.606890,-7.341209],[-5.371439,-8.912399,-1.013916],[4.998974,-6.798557,-2.396833],[1.382662,8.324306,-7.583494],[-7.920892,1.097159,-7.396167],[9.675114,-8.855564,-5.832490],[1.713838,-9.097028,-4.013714],[0.143075,-2.333823,-2.114070]],[[-2.117740,-2.403164,8.775891],[-6.340605,-2.652802,-0.286470],[-6.447817,-3.723183,6.092297],[2.149787,0.760426,0.273295],[-8.497331,0.719272,-9.238577],[-0.264245,-7.874224,-5.456439],[8.912695,8.209857,8.239333],[-2.217854,-3.537279,-8.510152]],[[7.272579,-6.273595,2.414016],[0.068226,8.391603,-8.572740],[-9.751304,-5.034776,3.115151],[5.920372,8.700223,9.944379],[-1.542476,-0.225929,-1.672283],[-4.149405,-9.876447,-7.621077],[-4.086535,-2.155617,-5.536921],[-9.386564,5.842367,2.146913]],[[6.587411,5.809006,-0.258687],[7.786754,3.268978,1.231640],[4.607053,0.793183,-3.736170],[2.856140,5.547656,-7.255800],[4.186553,6.355946,0.109875],[0.654986,7.188983,0.756755],[9.571233,-4.477904,-4.556961],[-1.554176,6.260051,-5.999004]]], dtype = "float32")#candidate|1504|(9, 8, 3)|const|float32
bop_1505 = relay.bitwise_or(call_1502.astype('uint8'), relay.reshape(const_1504.astype('uint8'), relay.shape_of(call_1502))) # shape=(9, 8, 3)
bop_1508 = relay.bitwise_or(call_1503.astype('uint8'), relay.reshape(const_1504.astype('uint8'), relay.shape_of(call_1503))) # shape=(9, 8, 3)
output = relay.Tuple([bop_1505,])
output2 = relay.Tuple([bop_1508,])
func_1510 = relay.Function([], output)
mod['func_1510'] = func_1510
mod = relay.transform.InferType()(mod)
mutated_mod['func_1510'] = func_1510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1510_call = mutated_mod.get_global_var('func_1510')
call_1511 = func_1510_call()
output = call_1511
func_1512 = relay.Function([], output)
mutated_mod['func_1512'] = func_1512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_956_call = mod.get_global_var('func_956')
func_958_call = mutated_mod.get_global_var('func_958')
call_1513 = relay.TupleGetItem(func_956_call(), 0)
call_1514 = relay.TupleGetItem(func_958_call(), 0)
var_1517 = relay.var("var_1517", dtype = "float32", shape = (9, 8, 3))#candidate|1517|(9, 8, 3)|var|float32
bop_1518 = relay.greater(call_1513.astype('bool'), relay.reshape(var_1517.astype('bool'), relay.shape_of(call_1513))) # shape=(9, 8, 3)
bop_1521 = relay.greater(call_1514.astype('bool'), relay.reshape(var_1517.astype('bool'), relay.shape_of(call_1514))) # shape=(9, 8, 3)
output = bop_1518
output2 = bop_1521
func_1524 = relay.Function([var_1517,], output)
mod['func_1524'] = func_1524
mod = relay.transform.InferType()(mod)
var_1525 = relay.var("var_1525", dtype = "float32", shape = (9, 8, 3))#candidate|1525|(9, 8, 3)|var|float32
output = func_1524(var_1525)
func_1526 = relay.Function([var_1525], output)
mutated_mod['func_1526'] = func_1526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_956_call = mod.get_global_var('func_956')
func_958_call = mutated_mod.get_global_var('func_958')
call_1607 = relay.TupleGetItem(func_956_call(), 0)
call_1608 = relay.TupleGetItem(func_958_call(), 0)
output = relay.Tuple([call_1607,])
output2 = relay.Tuple([call_1608,])
func_1609 = relay.Function([], output)
mod['func_1609'] = func_1609
mod = relay.transform.InferType()(mod)
output = func_1609()
func_1610 = relay.Function([], output)
mutated_mod['func_1610'] = func_1610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1009_call = mod.get_global_var('func_1009')
func_1011_call = mutated_mod.get_global_var('func_1011')
call_1614 = func_1009_call()
call_1615 = func_1009_call()
uop_1616 = relay.atan(call_1614.astype('float32')) # shape=(9, 8, 3)
uop_1618 = relay.atan(call_1615.astype('float32')) # shape=(9, 8, 3)
output = uop_1616
output2 = uop_1618
func_1619 = relay.Function([], output)
mod['func_1619'] = func_1619
mod = relay.transform.InferType()(mod)
mutated_mod['func_1619'] = func_1619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mutated_mod.get_global_var('func_1619')
call_1620 = func_1619_call()
output = call_1620
func_1621 = relay.Function([], output)
mutated_mod['func_1621'] = func_1621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1510_call = mod.get_global_var('func_1510')
func_1512_call = mutated_mod.get_global_var('func_1512')
call_1649 = relay.TupleGetItem(func_1510_call(), 0)
call_1650 = relay.TupleGetItem(func_1512_call(), 0)
uop_1653 = relay.sinh(call_1649.astype('float32')) # shape=(9, 8, 3)
uop_1655 = relay.sinh(call_1650.astype('float32')) # shape=(9, 8, 3)
uop_1659 = relay.cos(uop_1653.astype('float32')) # shape=(9, 8, 3)
uop_1661 = relay.cos(uop_1655.astype('float32')) # shape=(9, 8, 3)
func_308_call = mod.get_global_var('func_308')
func_311_call = mutated_mod.get_global_var('func_311')
const_1663 = relay.const([[4.142069,2.855361,-0.878486,-2.461419,2.314444,-5.814079,-3.980569,5.086796,-4.919718,9.758559,8.348682,-5.747001,9.945410,-3.579897,-9.955422,-9.124015,9.160325,0.760426,6.122986,7.603566,-5.228636,-4.200516,7.556173,0.183369,-9.220611,7.219918,2.524000,-2.455476],[3.731998,-6.484089,-0.312910,0.697125,-7.279032,-5.798885,-5.877666,-2.805801,4.120609,2.668082,-9.637531,-4.297373,2.515441,2.574849,0.368102,0.345628,-3.034438,-6.115114,0.339649,-2.974929,-4.449131,0.441783,4.407504,-8.699716,-9.716763,0.277194,-4.367239,-0.109432],[1.344857,-4.677071,5.441749,-5.746928,-0.860185,-6.985931,-3.143309,9.151456,1.866421,-1.765097,3.248644,2.500599,-6.035984,-3.848024,-7.610433,9.331860,-2.971167,-3.970304,6.493507,-1.930682,1.179684,0.028142,0.098151,5.254266,1.744186,0.720646,-7.947207,1.858681],[6.738973,9.687656,-0.709179,-6.186280,-4.626805,-6.891440,4.752880,4.110697,6.782303,-3.649726,-2.594555,-6.758364,1.215059,-4.322439,-3.310205,2.083968,6.881821,-5.593812,4.437859,2.783083,0.003439,0.266520,-3.667906,-2.348347,-0.128192,-0.218110,-4.334351,-6.498605],[9.172435,0.031128,-3.316666,5.572639,8.702668,8.715935,-0.451963,-0.262778,-4.647958,-1.090282,3.665439,7.082882,-9.281615,-1.262321,-4.481969,-3.688597,0.191700,0.615074,-6.259674,6.687338,-3.261737,-4.663167,6.503229,8.106328,6.565678,-2.311000,-1.531948,-9.925466]], dtype = "float32")#candidate|1663|(5, 28)|const|float32
call_1662 = relay.TupleGetItem(func_308_call(relay.reshape(const_1663.astype('float32'), [4, 5, 7])), 2)
call_1664 = relay.TupleGetItem(func_311_call(relay.reshape(const_1663.astype('float32'), [4, 5, 7])), 2)
func_1524_call = mod.get_global_var('func_1524')
func_1526_call = mutated_mod.get_global_var('func_1526')
call_1690 = func_1524_call(relay.reshape(call_1649.astype('float32'), [9, 8, 3]))
call_1691 = func_1524_call(relay.reshape(call_1649.astype('float32'), [9, 8, 3]))
func_1524_call = mod.get_global_var('func_1524')
func_1526_call = mutated_mod.get_global_var('func_1526')
call_1698 = func_1524_call(relay.reshape(call_1649.astype('float32'), [9, 8, 3]))
call_1699 = func_1524_call(relay.reshape(call_1649.astype('float32'), [9, 8, 3]))
func_1147_call = mod.get_global_var('func_1147')
func_1151_call = mutated_mod.get_global_var('func_1151')
const_1722 = relay.const([[-7,5],[8,1],[1,1],[-8,-1],[6,4],[-6,7],[1,4],[9,-8],[-4,4],[-5,1],[8,-5],[5,-1],[-7,10],[-7,3],[4,10],[3,10],[10,-1],[-10,3],[6,-2],[-4,-2],[7,-4],[1,-2],[7,8],[1,9]], dtype = "uint16")#candidate|1722|(24, 2)|const|uint16
var_1723 = relay.var("var_1723", dtype = "int64", shape = (168,))#candidate|1723|(168,)|var|int64
call_1721 = relay.TupleGetItem(func_1147_call(relay.reshape(const_1722.astype('uint16'), [6, 4, 2]), relay.reshape(const_1722.astype('uint16'), [6, 4, 2]), relay.reshape(var_1723.astype('int64'), [168,]), ), 1)
call_1724 = relay.TupleGetItem(func_1151_call(relay.reshape(const_1722.astype('uint16'), [6, 4, 2]), relay.reshape(const_1722.astype('uint16'), [6, 4, 2]), relay.reshape(var_1723.astype('int64'), [168,]), ), 1)
func_1524_call = mod.get_global_var('func_1524')
func_1526_call = mutated_mod.get_global_var('func_1526')
call_1731 = func_1524_call(relay.reshape(uop_1653.astype('float32'), [9, 8, 3]))
call_1732 = func_1524_call(relay.reshape(uop_1653.astype('float32'), [9, 8, 3]))
func_895_call = mod.get_global_var('func_895')
func_899_call = mutated_mod.get_global_var('func_899')
call_1735 = relay.TupleGetItem(func_895_call(relay.reshape(var_1723.astype('int64'), [6, 14, 2]), relay.reshape(var_1723.astype('int64'), [6, 14, 2]), ), 1)
call_1736 = relay.TupleGetItem(func_899_call(relay.reshape(var_1723.astype('int64'), [6, 14, 2]), relay.reshape(var_1723.astype('int64'), [6, 14, 2]), ), 1)
func_1009_call = mod.get_global_var('func_1009')
func_1011_call = mutated_mod.get_global_var('func_1011')
call_1745 = func_1009_call()
call_1746 = func_1009_call()
func_895_call = mod.get_global_var('func_895')
func_899_call = mutated_mod.get_global_var('func_899')
call_1751 = relay.TupleGetItem(func_895_call(relay.reshape(call_1721.astype('int64'), [6, 14, 2]), relay.reshape(var_1723.astype('int64'), [6, 14, 2]), ), 0)
call_1752 = relay.TupleGetItem(func_899_call(relay.reshape(call_1721.astype('int64'), [6, 14, 2]), relay.reshape(var_1723.astype('int64'), [6, 14, 2]), ), 0)
func_139_call = mod.get_global_var('func_139')
func_142_call = mutated_mod.get_global_var('func_142')
const_1775 = relay.const([[-1.199649],[4.244574],[9.168798],[7.168249],[-7.663672],[-1.832662],[-2.404886],[1.705026],[0.658698],[2.904256],[-2.650068],[6.275348],[-7.618651],[-6.184567],[2.682222],[-8.337911],[-2.133081],[-3.879396],[6.016817],[8.152736],[2.653296]], dtype = "float64")#candidate|1775|(21, 1)|const|float64
call_1774 = func_139_call(relay.reshape(const_1775.astype('float64'), [1, 3, 7]), relay.reshape(call_1735.astype('float64'), [14, 3, 7]), )
call_1776 = func_139_call(relay.reshape(const_1775.astype('float64'), [1, 3, 7]), relay.reshape(call_1735.astype('float64'), [14, 3, 7]), )
output = relay.Tuple([uop_1659,call_1662,const_1663,call_1690,call_1698,call_1721,const_1722,var_1723,call_1731,call_1735,call_1745,call_1751,call_1774,const_1775,])
output2 = relay.Tuple([uop_1661,call_1664,const_1663,call_1691,call_1699,call_1724,const_1722,var_1723,call_1732,call_1736,call_1746,call_1752,call_1776,const_1775,])
func_1777 = relay.Function([var_1723,], output)
mod['func_1777'] = func_1777
mod = relay.transform.InferType()(mod)
mutated_mod['func_1777'] = func_1777
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1778 = relay.var("var_1778", dtype = "int64", shape = (168,))#candidate|1778|(168,)|var|int64
func_1777_call = mutated_mod.get_global_var('func_1777')
call_1779 = func_1777_call(var_1778)
output = call_1779
func_1780 = relay.Function([var_1778], output)
mutated_mod['func_1780'] = func_1780
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1785 = relay.var("var_1785", dtype = "uint32", shape = (16, 12, 7))#candidate|1785|(16, 12, 7)|var|uint32
const_1786 = relay.const([[[-2,3,3,-10,-8,-6,-9],[3,-2,9,-7,2,2,-10],[-1,-6,-1,7,-9,-3,-1],[9,3,8,-6,-9,-5,7],[-2,2,3,-8,-6,-10,-1],[-3,4,-2,6,4,-9,7],[3,9,-10,9,-10,-8,2],[-3,-3,-7,2,7,1,10],[-4,4,-2,3,8,7,-10],[4,5,7,8,6,-7,-8],[6,-10,6,8,-1,-1,-4],[6,-3,6,-10,7,-10,7]],[[-10,6,4,4,10,-9,-4],[9,-9,2,5,-2,-4,4],[6,9,-8,-9,1,-2,9],[1,2,-1,-4,4,2,6],[-9,-10,-4,2,-4,-4,-8],[7,8,9,7,-2,5,-10],[-4,-5,-9,-1,-5,-6,-3],[5,7,-7,9,6,9,7],[-5,-3,5,3,4,-10,-6],[8,-9,1,5,2,5,10],[-5,8,-5,-9,10,8,-8],[2,7,3,3,9,-1,3]],[[-8,-10,1,-2,-10,1,-7],[-1,-9,8,3,9,3,-7],[10,10,5,2,-9,-4,-7],[6,-6,-8,-10,-9,8,-2],[-8,7,8,-8,9,-9,-4],[5,8,5,10,8,-2,4],[7,-2,2,-4,7,1,2],[4,3,-9,-1,-6,10,1],[-3,1,-1,-4,2,-3,-2],[7,-6,-1,-2,-3,-7,-6],[-5,6,-3,7,-1,7,10],[4,-8,-7,-4,5,-1,1]],[[-7,4,3,9,8,-10,-8],[-4,-8,-10,1,-1,8,-5],[2,8,2,-3,-1,-10,10],[-7,8,-7,-2,-5,6,10],[-1,6,10,7,3,6,4],[-2,10,5,3,-6,-2,-7],[-10,4,-3,-7,2,4,5],[9,10,6,-3,7,4,8],[-8,-4,-4,-10,-1,-10,2],[-10,8,8,3,5,6,9],[-9,6,5,-4,2,-6,10],[8,1,-10,-7,6,-2,-5]],[[5,8,2,9,-6,6,6],[1,-9,-9,6,9,8,5],[-6,-8,-4,-7,10,6,9],[-6,-6,-3,7,-7,-1,-10],[2,1,-4,3,5,8,3],[3,-8,1,9,8,7,-3],[-2,9,6,3,7,2,3],[-7,-4,2,-3,-5,-6,10],[-8,2,-4,5,-1,2,4],[9,-5,-8,9,10,-5,-4],[-8,4,7,-8,-7,3,-1],[5,10,-5,-10,-4,4,-3]],[[-9,-10,1,-4,10,-1,5],[4,-10,3,4,-5,-2,-5],[4,-7,-5,1,1,-6,9],[9,-9,2,-3,-9,3,-3],[-6,-5,-6,-3,-9,9,-2],[-2,-2,7,-3,1,3,5],[8,5,6,-4,10,5,4],[1,9,-6,-2,2,-3,-3],[7,-4,-4,8,-7,-2,2],[8,1,1,-1,-3,-2,-10],[10,-1,9,-1,-4,-3,-3],[-10,2,10,-7,5,10,3]],[[-3,-4,6,1,3,-10,-2],[8,10,2,-5,-5,-5,-2],[-10,-6,-10,7,8,-3,9],[5,-8,7,-10,10,-5,-10],[9,5,7,-4,4,2,9],[-2,-1,-10,-2,7,-7,-9],[-5,-3,3,6,1,-6,1],[-8,5,9,-9,-5,7,4],[2,-6,-4,-3,-9,6,9],[7,-4,-2,-7,5,1,8],[1,-2,7,9,-9,10,-3],[9,10,4,5,3,7,9]],[[-5,8,10,10,-9,9,-3],[-7,-7,8,4,-1,8,-10],[-1,4,5,5,-1,-3,4],[-8,2,1,2,7,1,-5],[-6,-3,6,-5,7,-8,-5],[-9,-4,-3,-4,8,-6,-4],[-4,8,-5,-9,8,4,3],[6,-3,-4,5,5,-4,5],[-7,8,7,-3,7,-5,-5],[-10,1,6,-2,10,10,7],[8,5,-9,7,9,10,2],[-10,-4,-5,8,-6,-4,10]],[[-4,7,8,-5,4,-5,-4],[8,-10,-2,1,-7,1,-1],[-2,6,-7,7,-6,2,-6],[5,-2,7,1,4,9,1],[5,-2,3,4,-4,3,3],[9,2,1,-7,4,8,-10],[-9,4,2,-2,7,-5,7],[10,-3,1,-3,9,-1,-7],[-3,3,-9,10,6,-8,-10],[-5,-9,8,3,9,-4,-5],[-3,3,3,-2,6,6,3],[-6,-5,9,5,9,-1,-6]],[[-7,9,5,-8,9,-1,-1],[6,10,-7,4,-10,7,6],[8,-2,-5,6,2,-8,-5],[7,-5,2,-6,10,-6,8],[-2,1,8,-4,4,-3,-4],[-9,-2,-5,-9,2,-5,-5],[7,-6,10,8,1,-3,3],[-1,-8,6,-7,7,-9,1],[-3,6,-2,8,10,-1,9],[-5,-9,9,-9,7,7,1],[-3,7,1,-6,6,4,-2],[-8,-9,5,-1,7,-9,-7]],[[-8,-10,1,9,-3,-4,10],[6,4,-7,8,5,6,1],[-6,-2,7,9,3,1,-4],[-6,4,8,-7,3,7,-5],[9,8,4,-4,-4,-8,-1],[-3,-3,-9,5,7,6,-9],[9,6,2,5,-4,9,-2],[-2,-8,-7,-8,-10,-8,6],[6,-7,-1,-4,4,1,10],[5,6,6,4,5,-2,6],[-9,-3,10,-1,-2,-4,-4],[-4,4,8,-9,-4,-8,7]],[[-3,1,7,-8,-4,8,1],[4,-6,2,10,-9,-2,1],[1,1,3,5,-6,7,-1],[-7,6,10,2,3,9,10],[-5,3,-1,10,-4,5,8],[-1,-8,3,-2,7,4,5],[-10,-7,5,2,2,-3,-7],[-10,2,-5,-2,4,1,5],[9,-1,4,-5,5,9,9],[8,8,-2,9,-1,-8,-2],[-4,6,-8,4,4,3,7],[9,-1,2,4,2,-5,-4]],[[-7,4,7,5,-9,-9,10],[-2,-5,-5,-9,8,2,9],[-2,-10,1,-10,-6,-4,-6],[7,7,5,10,8,6,3],[7,-5,6,10,3,-6,7],[-5,-6,-10,-2,5,-4,3],[1,8,-9,7,-2,5,-8],[-4,2,7,2,3,2,-9],[-10,-6,10,9,9,-5,4],[4,-2,7,8,3,3,3],[1,4,4,-2,-4,-4,-8],[3,10,4,-6,5,6,3]],[[4,-7,-9,8,-2,8,1],[10,2,1,-1,-3,5,10],[-7,-1,8,-6,2,10,4],[10,1,-5,5,4,-1,2],[6,9,4,4,9,-1,-4],[5,-1,3,8,3,-6,-7],[6,4,3,7,3,-1,3],[-5,3,5,8,-3,10,8],[-5,-2,6,4,9,-7,3],[7,10,-5,4,4,-1,-6],[5,6,1,-10,6,-6,-5],[9,1,-6,-10,1,-2,-7]],[[3,4,9,7,-8,7,-3],[10,6,-8,7,-7,6,4],[4,-10,7,7,4,6,-3],[7,-3,-3,-8,5,4,4],[-9,-7,10,-10,-3,-2,2],[-10,-8,10,6,2,4,-1],[7,-10,6,9,-7,4,9],[7,-2,6,-6,3,2,7],[-3,6,-6,8,2,-9,-8],[8,-6,9,-4,2,-1,-1],[2,-9,-6,5,-9,-5,10],[-1,4,-6,-6,2,7,-9]],[[1,-3,8,6,-7,10,-3],[9,7,-4,1,5,4,-9],[-1,1,-8,5,-6,-4,3],[9,8,-1,-9,-8,-4,2],[-10,9,9,5,4,-7,-10],[-5,4,-1,3,-7,-9,-7],[-8,1,9,-3,-1,8,-8],[-8,-6,3,9,2,8,-6],[-4,1,1,-4,-1,-9,-5],[10,1,-4,-2,-7,-3,-5],[-8,-9,4,-8,10,-3,7],[5,-8,5,-4,-8,-6,-7]]], dtype = "uint32")#candidate|1786|(16, 12, 7)|const|uint32
bop_1787 = relay.equal(var_1785.astype('bool'), relay.reshape(const_1786.astype('bool'), relay.shape_of(var_1785))) # shape=(16, 12, 7)
uop_1797 = relay.sinh(bop_1787.astype('float64')) # shape=(16, 12, 7)
func_76_call = mod.get_global_var('func_76')
func_79_call = mutated_mod.get_global_var('func_79')
var_1801 = relay.var("var_1801", dtype = "uint8", shape = (2, 420))#candidate|1801|(2, 420)|var|uint8
call_1800 = relay.TupleGetItem(func_76_call(relay.reshape(var_1801.astype('uint8'), [12, 14, 5])), 0)
call_1802 = relay.TupleGetItem(func_79_call(relay.reshape(var_1801.astype('uint8'), [12, 14, 5])), 0)
bop_1803 = relay.right_shift(uop_1797.astype('uint64'), relay.reshape(bop_1787.astype('uint64'), relay.shape_of(uop_1797))) # shape=(16, 12, 7)
output = relay.Tuple([call_1800,var_1801,bop_1803,])
output2 = relay.Tuple([call_1802,var_1801,bop_1803,])
func_1810 = relay.Function([var_1785,var_1801,], output)
mod['func_1810'] = func_1810
mod = relay.transform.InferType()(mod)
mutated_mod['func_1810'] = func_1810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1810_call = mutated_mod.get_global_var('func_1810')
var_1812 = relay.var("var_1812", dtype = "uint32", shape = (16, 12, 7))#candidate|1812|(16, 12, 7)|var|uint32
var_1813 = relay.var("var_1813", dtype = "uint8", shape = (2, 420))#candidate|1813|(2, 420)|var|uint8
call_1811 = func_1810_call(var_1812,var_1813,)
output = call_1811
func_1814 = relay.Function([var_1812,var_1813,], output)
mutated_mod['func_1814'] = func_1814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1459_call = mod.get_global_var('func_1459')
func_1460_call = mutated_mod.get_global_var('func_1460')
call_1872 = func_1459_call()
call_1873 = func_1459_call()
func_308_call = mod.get_global_var('func_308')
func_311_call = mutated_mod.get_global_var('func_311')
const_1889 = relay.const([8.755476,1.343592,4.267071,-8.686678,8.557350,8.695562,-6.206534,2.355828,-6.511414,-2.825898,6.183510,-2.328935,0.015487,4.592681,-8.488005,-9.280580,5.585013,9.304918,-1.266226,4.450750,-6.093910,-6.970181,2.796247,-3.036986,-9.989473,4.777217,3.831933,-1.819958,-4.338641,6.098195,2.578063,-4.650988,6.436734,2.641626,-9.292692,-9.831512,3.012148,5.760510,-2.031501,-7.763376,-0.651670,1.468620,7.045546,8.483752,7.778113,-4.733120,-7.044836,4.628186,-0.010743,3.173722,8.404185,7.809364,-5.371177,3.592717,-3.880201,8.452700,8.653564,-7.438423,0.801608,5.831106,-2.221689,5.666679,-6.095033,7.156911,1.515978,9.817344,-4.564681,9.109341,6.882598,8.573942,-8.925092,1.201167,0.609425,5.459646,5.415781,4.471748,-9.361850,-6.554303,8.508602,-7.008351,0.005228,6.332031,-8.910642,-5.433311,9.370414,-2.687104,3.158600,-5.009069,3.529739,3.788904,-9.612130,9.288579,5.127933,8.848177,0.419344,9.194574,-0.029451,-8.779094,1.328405,-4.593845,-0.440133,-6.985750,-9.370990,0.476519,-3.242642,-6.162654,0.821993,-9.095129,-2.613359,-9.704172,9.561912,-4.641582,-7.903545,-8.589423,7.252047,6.129198,0.333162,9.468984,-3.009448,-7.780811,5.105783,1.330759,-0.199947,7.798617,9.034421,-1.985974,3.747899,-0.462211,2.809308,0.973752,-5.598185,-4.361086,0.911337,7.457801,-5.277974,-4.088495,0.668102,5.742634,0.779733,-5.793659], dtype = "float32")#candidate|1889|(140,)|const|float32
call_1888 = relay.TupleGetItem(func_308_call(relay.reshape(const_1889.astype('float32'), [4, 5, 7])), 0)
call_1890 = relay.TupleGetItem(func_311_call(relay.reshape(const_1889.astype('float32'), [4, 5, 7])), 0)
func_1433_call = mod.get_global_var('func_1433')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_1900 = func_1433_call()
call_1901 = func_1433_call()
func_895_call = mod.get_global_var('func_895')
func_899_call = mutated_mod.get_global_var('func_899')
var_1906 = relay.var("var_1906", dtype = "int64", shape = (168,))#candidate|1906|(168,)|var|int64
call_1905 = relay.TupleGetItem(func_895_call(relay.reshape(var_1906.astype('int64'), [6, 14, 2]), relay.reshape(var_1906.astype('int64'), [6, 14, 2]), ), 2)
call_1907 = relay.TupleGetItem(func_899_call(relay.reshape(var_1906.astype('int64'), [6, 14, 2]), relay.reshape(var_1906.astype('int64'), [6, 14, 2]), ), 2)
func_308_call = mod.get_global_var('func_308')
func_311_call = mutated_mod.get_global_var('func_311')
call_1915 = relay.TupleGetItem(func_308_call(relay.reshape(call_1888.astype('float32'), [4, 5, 7])), 2)
call_1916 = relay.TupleGetItem(func_311_call(relay.reshape(call_1888.astype('float32'), [4, 5, 7])), 2)
func_1147_call = mod.get_global_var('func_1147')
func_1151_call = mutated_mod.get_global_var('func_1151')
var_1920 = relay.var("var_1920", dtype = "uint16", shape = (1, 48))#candidate|1920|(1, 48)|var|uint16
call_1919 = relay.TupleGetItem(func_1147_call(relay.reshape(var_1920.astype('uint16'), [6, 4, 2]), relay.reshape(var_1920.astype('uint16'), [6, 4, 2]), relay.reshape(var_1906.astype('int64'), [168,]), ), 2)
call_1921 = relay.TupleGetItem(func_1151_call(relay.reshape(var_1920.astype('uint16'), [6, 4, 2]), relay.reshape(var_1920.astype('uint16'), [6, 4, 2]), relay.reshape(var_1906.astype('int64'), [168,]), ), 2)
bop_1922 = relay.left_shift(call_1888.astype('uint64'), relay.reshape(const_1889.astype('uint64'), relay.shape_of(call_1888))) # shape=(4, 5, 7)
bop_1925 = relay.left_shift(call_1890.astype('uint64'), relay.reshape(const_1889.astype('uint64'), relay.shape_of(call_1890))) # shape=(4, 5, 7)
output = relay.Tuple([call_1872,call_1900,call_1905,var_1906,call_1915,call_1919,var_1920,bop_1922,])
output2 = relay.Tuple([call_1873,call_1901,call_1907,var_1906,call_1916,call_1921,var_1920,bop_1925,])
func_1929 = relay.Function([var_1906,var_1920,], output)
mod['func_1929'] = func_1929
mod = relay.transform.InferType()(mod)
var_1930 = relay.var("var_1930", dtype = "int64", shape = (168,))#candidate|1930|(168,)|var|int64
var_1931 = relay.var("var_1931", dtype = "uint16", shape = (1, 48))#candidate|1931|(1, 48)|var|uint16
output = func_1929(var_1930,var_1931,)
func_1932 = relay.Function([var_1930,var_1931,], output)
mutated_mod['func_1932'] = func_1932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_956_call = mod.get_global_var('func_956')
func_958_call = mutated_mod.get_global_var('func_958')
call_1959 = relay.TupleGetItem(func_956_call(), 0)
call_1960 = relay.TupleGetItem(func_958_call(), 0)
func_1413_call = mod.get_global_var('func_1413')
func_1415_call = mutated_mod.get_global_var('func_1415')
call_1964 = func_1413_call()
call_1965 = func_1413_call()
output = relay.Tuple([call_1959,call_1964,])
output2 = relay.Tuple([call_1960,call_1965,])
func_1966 = relay.Function([], output)
mod['func_1966'] = func_1966
mod = relay.transform.InferType()(mod)
output = func_1966()
func_1967 = relay.Function([], output)
mutated_mod['func_1967'] = func_1967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mod.get_global_var('func_1619')
func_1621_call = mutated_mod.get_global_var('func_1621')
call_1968 = func_1619_call()
call_1969 = func_1619_call()
output = call_1968
output2 = call_1969
func_1983 = relay.Function([], output)
mod['func_1983'] = func_1983
mod = relay.transform.InferType()(mod)
mutated_mod['func_1983'] = func_1983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1983_call = mutated_mod.get_global_var('func_1983')
call_1984 = func_1983_call()
output = call_1984
func_1985 = relay.Function([], output)
mutated_mod['func_1985'] = func_1985
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2035 = relay.var("var_2035", dtype = "float64", shape = (12, 2, 12))#candidate|2035|(12, 2, 12)|var|float64
uop_2036 = relay.atan(var_2035.astype('float64')) # shape=(12, 2, 12)
func_1983_call = mod.get_global_var('func_1983')
func_1985_call = mutated_mod.get_global_var('func_1985')
call_2039 = func_1983_call()
call_2040 = func_1983_call()
uop_2043 = relay.rsqrt(uop_2036.astype('float64')) # shape=(12, 2, 12)
func_1609_call = mod.get_global_var('func_1609')
func_1610_call = mutated_mod.get_global_var('func_1610')
call_2062 = relay.TupleGetItem(func_1609_call(), 0)
call_2063 = relay.TupleGetItem(func_1610_call(), 0)
func_1197_call = mod.get_global_var('func_1197')
func_1200_call = mutated_mod.get_global_var('func_1200')
var_2065 = relay.var("var_2065", dtype = "float64", shape = (112,))#candidate|2065|(112,)|var|float64
var_2066 = relay.var("var_2066", dtype = "float64", shape = (1568,))#candidate|2066|(1568,)|var|float64
call_2064 = relay.TupleGetItem(func_1197_call(relay.reshape(var_2065.astype('float64'), [16, 7, 1]), relay.reshape(var_2066.astype('float64'), [16, 7, 14]), ), 2)
call_2067 = relay.TupleGetItem(func_1200_call(relay.reshape(var_2065.astype('float64'), [16, 7, 1]), relay.reshape(var_2066.astype('float64'), [16, 7, 14]), ), 2)
output = relay.Tuple([call_2039,uop_2043,call_2062,call_2064,var_2065,var_2066,])
output2 = relay.Tuple([call_2040,uop_2043,call_2063,call_2067,var_2065,var_2066,])
func_2080 = relay.Function([var_2035,var_2065,var_2066,], output)
mod['func_2080'] = func_2080
mod = relay.transform.InferType()(mod)
var_2081 = relay.var("var_2081", dtype = "float64", shape = (12, 2, 12))#candidate|2081|(12, 2, 12)|var|float64
var_2082 = relay.var("var_2082", dtype = "float64", shape = (112,))#candidate|2082|(112,)|var|float64
var_2083 = relay.var("var_2083", dtype = "float64", shape = (1568,))#candidate|2083|(1568,)|var|float64
output = func_2080(var_2081,var_2082,var_2083,)
func_2084 = relay.Function([var_2081,var_2082,var_2083,], output)
mutated_mod['func_2084'] = func_2084
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2115 = relay.const(-4, dtype = "uint32")#candidate|2115|()|const|uint32
var_2116 = relay.var("var_2116", dtype = "uint32", shape = (16, 15, 8))#candidate|2116|(16, 15, 8)|var|uint32
bop_2117 = relay.left_shift(const_2115.astype('uint32'), var_2116.astype('uint32')) # shape=(16, 15, 8)
output = relay.Tuple([bop_2117,])
output2 = relay.Tuple([bop_2117,])
func_2121 = relay.Function([var_2116,], output)
mod['func_2121'] = func_2121
mod = relay.transform.InferType()(mod)
mutated_mod['func_2121'] = func_2121
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2122 = relay.var("var_2122", dtype = "uint32", shape = (16, 15, 8))#candidate|2122|(16, 15, 8)|var|uint32
func_2121_call = mutated_mod.get_global_var('func_2121')
call_2123 = func_2121_call(var_2122)
output = call_2123
func_2124 = relay.Function([var_2122], output)
mutated_mod['func_2124'] = func_2124
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2134 = relay.var("var_2134", dtype = "float64", shape = (16, 2, 8))#candidate|2134|(16, 2, 8)|var|float64
uop_2135 = relay.sigmoid(var_2134.astype('float64')) # shape=(16, 2, 8)
const_2137 = relay.const([[[-6.603078,7.898057,-8.622300,6.132957,-5.506350,-3.469557,8.649752,-3.795251],[0.740716,-3.247535,5.718097,8.163730,-0.185315,-3.911153,-9.621356,2.113856]],[[-3.717086,-7.551239,2.787036,-5.417228,0.638785,-5.790522,5.363763,-5.658898],[6.970707,-9.110082,-2.867559,3.497931,6.130217,3.897430,2.591240,-6.364991]],[[1.187730,-7.317480,-5.704158,1.238399,-9.430029,-0.711320,-5.978959,-7.698388],[6.805448,-8.705969,-4.058900,-1.804982,5.003016,-4.753985,-5.738626,0.689797]],[[0.543677,2.341562,-7.184261,7.226387,-7.698066,-4.149489,-5.717933,-6.876070],[0.157515,5.986164,-4.287705,-6.846830,9.062913,-7.147786,1.549746,9.851133]],[[-6.252397,6.009101,1.721196,8.218918,-7.780716,-9.478489,-6.224929,8.458118],[-9.021476,9.682833,-4.517830,-3.452573,-7.749477,-7.225813,-6.985418,-4.962069]],[[-6.809205,7.199654,-7.468029,5.515118,-6.045232,3.761332,6.223568,5.753345],[6.454680,-8.234690,-1.736558,2.379031,-9.410620,-4.347525,-1.045629,6.419589]],[[-4.379583,-4.606531,7.975598,-8.689585,-2.141823,-0.247952,-6.084144,5.639810],[-9.681795,9.054208,-7.965348,-4.620090,-1.489428,-8.919366,7.428453,6.009646]],[[-6.879744,3.802256,-7.143113,-9.593691,4.266053,-2.279988,-1.645878,-9.769619],[5.408282,5.153808,-1.562525,-9.588501,-9.764451,7.260404,-5.833975,-6.448508]],[[0.435322,-0.775342,8.437335,-7.393703,4.134788,-9.682432,-5.108164,3.801361],[-1.175096,4.313450,-1.052222,-1.318698,-7.220065,-3.236862,-4.667363,-1.091500]],[[-3.574659,2.540924,9.578566,1.036882,-8.207919,-1.786180,-3.020839,0.446719],[-5.524053,5.278731,-4.699517,8.106075,-4.381604,-5.689653,-8.173242,-7.046371]],[[1.611849,-3.211729,6.055215,-0.631436,7.142123,-1.674907,-3.306276,0.115778],[-5.409981,0.264922,-2.689672,-6.779396,-1.056874,1.265577,6.812009,-3.318818]],[[-6.140223,9.227418,-8.079198,7.094657,-3.311662,8.261398,1.504759,8.966001],[7.421575,0.307914,2.926409,-6.938856,-7.959236,1.520617,5.383949,-7.788935]],[[-4.578619,2.974395,6.345586,5.265313,-1.478800,-5.747126,4.525446,-1.552710],[-1.473406,-7.180165,6.303513,-1.961678,-7.385946,1.938081,8.188215,8.031496]],[[4.124876,-3.060255,-5.015656,-2.020675,-1.902649,-8.025553,-2.001886,-7.320481],[-3.913900,-2.234429,-0.133710,3.216297,-3.298613,-1.423680,6.509573,-0.115368]],[[3.709922,6.997872,-7.653718,-0.549038,1.265416,-5.792872,2.783362,-1.008798],[9.389003,4.396186,5.348658,-8.186294,8.049577,1.391027,6.382973,1.495127]],[[-4.347207,-7.588708,-8.264450,8.545922,8.011620,5.702815,7.240841,1.021837],[8.777680,-7.393207,3.459928,-6.242924,9.338131,5.620287,7.218965,5.320856]]], dtype = "float64")#candidate|2137|(16, 2, 8)|const|float64
bop_2138 = relay.not_equal(var_2134.astype('bool'), relay.reshape(const_2137.astype('bool'), relay.shape_of(var_2134))) # shape=(16, 2, 8)
bop_2146 = relay.divide(bop_2138.astype('float32'), relay.reshape(var_2134.astype('float32'), relay.shape_of(bop_2138))) # shape=(16, 2, 8)
uop_2150 = relay.sin(uop_2135.astype('float64')) # shape=(16, 2, 8)
bop_2153 = relay.minimum(uop_2150.astype('uint32'), relay.reshape(const_2137.astype('uint32'), relay.shape_of(uop_2150))) # shape=(16, 2, 8)
func_2121_call = mod.get_global_var('func_2121')
func_2124_call = mutated_mod.get_global_var('func_2124')
var_2167 = relay.var("var_2167", dtype = "uint32", shape = (1920,))#candidate|2167|(1920,)|var|uint32
call_2166 = relay.TupleGetItem(func_2121_call(relay.reshape(var_2167.astype('uint32'), [16, 15, 8])), 0)
call_2168 = relay.TupleGetItem(func_2124_call(relay.reshape(var_2167.astype('uint32'), [16, 15, 8])), 0)
output = relay.Tuple([bop_2146,bop_2153,call_2166,var_2167,])
output2 = relay.Tuple([bop_2146,bop_2153,call_2168,var_2167,])
func_2170 = relay.Function([var_2134,var_2167,], output)
mod['func_2170'] = func_2170
mod = relay.transform.InferType()(mod)
mutated_mod['func_2170'] = func_2170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2170_call = mutated_mod.get_global_var('func_2170')
var_2172 = relay.var("var_2172", dtype = "float64", shape = (16, 2, 8))#candidate|2172|(16, 2, 8)|var|float64
var_2173 = relay.var("var_2173", dtype = "uint32", shape = (1920,))#candidate|2173|(1920,)|var|uint32
call_2171 = func_2170_call(var_2172,var_2173,)
output = call_2171
func_2174 = relay.Function([var_2172,var_2173,], output)
mutated_mod['func_2174'] = func_2174
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2232 = relay.var("var_2232", dtype = "float32", shape = ())#candidate|2232|()|var|float32
var_2233 = relay.var("var_2233", dtype = "float32", shape = (10, 5, 4))#candidate|2233|(10, 5, 4)|var|float32
bop_2234 = relay.floor_divide(var_2232.astype('float32'), var_2233.astype('float32')) # shape=(10, 5, 4)
uop_2253 = relay.atanh(bop_2234.astype('float64')) # shape=(10, 5, 4)
func_1459_call = mod.get_global_var('func_1459')
func_1460_call = mutated_mod.get_global_var('func_1460')
call_2259 = func_1459_call()
call_2260 = func_1459_call()
var_2263 = relay.var("var_2263", dtype = "float64", shape = (10, 5, 4))#candidate|2263|(10, 5, 4)|var|float64
bop_2264 = relay.minimum(uop_2253.astype('uint8'), relay.reshape(var_2263.astype('uint8'), relay.shape_of(uop_2253))) # shape=(10, 5, 4)
func_895_call = mod.get_global_var('func_895')
func_899_call = mutated_mod.get_global_var('func_899')
const_2277 = relay.const([[7,-6,-3,7,-10,-8,7,3,6,-3,10,-8,-6,-9,-8,4,4,-4,10,-2,10,-5,1,-4,9,3,-1,-2,-10,10,5,3,5,6,-9,-10,-2,8,3,2,9,-1,-6,9,-7,-6,-2,2,8,-7,-10,-8,1,8,7,-8],[-5,9,4,-9,-7,-3,-6,8,-7,-5,-3,-9,-8,-8,9,3,5,-7,-10,-1,-3,-5,3,7,10,7,4,8,5,6,4,-7,-1,-9,3,5,-6,7,4,9,5,-7,-2,-10,1,-8,-7,-3,1,9,-3,2,-5,-1,4,-4],[6,7,-4,-2,4,9,8,10,-3,-3,-3,8,-3,-8,-8,5,6,1,-10,-5,6,-4,8,-4,-2,9,-2,-5,7,4,-8,1,-3,-3,7,7,-4,6,4,-2,6,2,-10,7,-10,3,1,1,-6,9,4,5,-7,-1,2,9]], dtype = "int64")#candidate|2277|(3, 56)|const|int64
call_2276 = relay.TupleGetItem(func_895_call(relay.reshape(const_2277.astype('int64'), [6, 14, 2]), relay.reshape(const_2277.astype('int64'), [6, 14, 2]), ), 2)
call_2278 = relay.TupleGetItem(func_899_call(relay.reshape(const_2277.astype('int64'), [6, 14, 2]), relay.reshape(const_2277.astype('int64'), [6, 14, 2]), ), 2)
output = relay.Tuple([call_2259,bop_2264,call_2276,const_2277,])
output2 = relay.Tuple([call_2260,bop_2264,call_2278,const_2277,])
func_2280 = relay.Function([var_2232,var_2233,var_2263,], output)
mod['func_2280'] = func_2280
mod = relay.transform.InferType()(mod)
var_2281 = relay.var("var_2281", dtype = "float32", shape = ())#candidate|2281|()|var|float32
var_2282 = relay.var("var_2282", dtype = "float32", shape = (10, 5, 4))#candidate|2282|(10, 5, 4)|var|float32
var_2283 = relay.var("var_2283", dtype = "float64", shape = (10, 5, 4))#candidate|2283|(10, 5, 4)|var|float64
output = func_2280(var_2281,var_2282,var_2283,)
func_2284 = relay.Function([var_2281,var_2282,var_2283,], output)
mutated_mod['func_2284'] = func_2284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mod.get_global_var('func_1619')
func_1621_call = mutated_mod.get_global_var('func_1621')
call_2302 = func_1619_call()
call_2303 = func_1619_call()
func_1197_call = mod.get_global_var('func_1197')
func_1200_call = mutated_mod.get_global_var('func_1200')
var_2305 = relay.var("var_2305", dtype = "float64", shape = (112,))#candidate|2305|(112,)|var|float64
var_2306 = relay.var("var_2306", dtype = "float64", shape = (1568,))#candidate|2306|(1568,)|var|float64
call_2304 = relay.TupleGetItem(func_1197_call(relay.reshape(var_2305.astype('float64'), [16, 7, 1]), relay.reshape(var_2306.astype('float64'), [16, 7, 14]), ), 2)
call_2307 = relay.TupleGetItem(func_1200_call(relay.reshape(var_2305.astype('float64'), [16, 7, 1]), relay.reshape(var_2306.astype('float64'), [16, 7, 14]), ), 2)
func_1983_call = mod.get_global_var('func_1983')
func_1985_call = mutated_mod.get_global_var('func_1985')
call_2317 = func_1983_call()
call_2318 = func_1983_call()
func_1459_call = mod.get_global_var('func_1459')
func_1460_call = mutated_mod.get_global_var('func_1460')
call_2336 = func_1459_call()
call_2337 = func_1459_call()
output = relay.Tuple([call_2302,call_2304,var_2305,var_2306,call_2317,call_2336,])
output2 = relay.Tuple([call_2303,call_2307,var_2305,var_2306,call_2318,call_2337,])
func_2343 = relay.Function([var_2305,var_2306,], output)
mod['func_2343'] = func_2343
mod = relay.transform.InferType()(mod)
var_2344 = relay.var("var_2344", dtype = "float64", shape = (112,))#candidate|2344|(112,)|var|float64
var_2345 = relay.var("var_2345", dtype = "float64", shape = (1568,))#candidate|2345|(1568,)|var|float64
output = func_2343(var_2344,var_2345,)
func_2346 = relay.Function([var_2344,var_2345,], output)
mutated_mod['func_2346'] = func_2346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1009_call = mod.get_global_var('func_1009')
func_1011_call = mutated_mod.get_global_var('func_1011')
call_2353 = func_1009_call()
call_2354 = func_1009_call()
output = call_2353
output2 = call_2354
func_2357 = relay.Function([], output)
mod['func_2357'] = func_2357
mod = relay.transform.InferType()(mod)
mutated_mod['func_2357'] = func_2357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2357_call = mutated_mod.get_global_var('func_2357')
call_2358 = func_2357_call()
output = call_2358
func_2359 = relay.Function([], output)
mutated_mod['func_2359'] = func_2359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_956_call = mod.get_global_var('func_956')
func_958_call = mutated_mod.get_global_var('func_958')
call_2377 = relay.TupleGetItem(func_956_call(), 0)
call_2378 = relay.TupleGetItem(func_958_call(), 0)
output = call_2377
output2 = call_2378
func_2379 = relay.Function([], output)
mod['func_2379'] = func_2379
mod = relay.transform.InferType()(mod)
mutated_mod['func_2379'] = func_2379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2379_call = mutated_mod.get_global_var('func_2379')
call_2380 = func_2379_call()
output = call_2380
func_2381 = relay.Function([], output)
mutated_mod['func_2381'] = func_2381
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2423 = relay.const([[[-6,-5,-7]],[[-4,9,5]],[[2,-10,-4]],[[-3,-9,4]]], dtype = "int8")#candidate|2423|(4, 1, 3)|const|int8
var_2424 = relay.var("var_2424", dtype = "int8", shape = (4, 3, 3))#candidate|2424|(4, 3, 3)|var|int8
bop_2425 = relay.add(const_2423.astype('int8'), var_2424.astype('int8')) # shape=(4, 3, 3)
output = relay.Tuple([bop_2425,])
output2 = relay.Tuple([bop_2425,])
func_2429 = relay.Function([var_2424,], output)
mod['func_2429'] = func_2429
mod = relay.transform.InferType()(mod)
var_2430 = relay.var("var_2430", dtype = "int8", shape = (4, 3, 3))#candidate|2430|(4, 3, 3)|var|int8
output = func_2429(var_2430)
func_2431 = relay.Function([var_2430], output)
mutated_mod['func_2431'] = func_2431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1609_call = mod.get_global_var('func_1609')
func_1610_call = mutated_mod.get_global_var('func_1610')
call_2448 = relay.TupleGetItem(func_1609_call(), 0)
call_2449 = relay.TupleGetItem(func_1610_call(), 0)
output = relay.Tuple([call_2448,])
output2 = relay.Tuple([call_2449,])
func_2461 = relay.Function([], output)
mod['func_2461'] = func_2461
mod = relay.transform.InferType()(mod)
output = func_2461()
func_2462 = relay.Function([], output)
mutated_mod['func_2462'] = func_2462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_956_call = mod.get_global_var('func_956')
func_958_call = mutated_mod.get_global_var('func_958')
call_2529 = relay.TupleGetItem(func_956_call(), 0)
call_2530 = relay.TupleGetItem(func_958_call(), 0)
output = call_2529
output2 = call_2530
func_2544 = relay.Function([], output)
mod['func_2544'] = func_2544
mod = relay.transform.InferType()(mod)
output = func_2544()
func_2545 = relay.Function([], output)
mutated_mod['func_2545'] = func_2545
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2565 = relay.const([[[6.976922,-1.764698,4.335718,6.658016,-3.284676,6.053672,-9.047853,-6.932415,-1.287227,-9.540545,7.394701,0.274913,3.539776,-3.032758],[-6.725468,-3.582849,-3.260408,0.411601,2.332032,3.513307,-1.949952,7.697378,-4.582893,2.648416,-3.775864,-2.044119,-9.817900,5.600943],[-0.422061,5.784629,-5.710969,0.392601,-2.058417,-2.710671,6.698451,2.715345,-3.554900,-0.630494,-6.734009,3.321563,8.672973,-3.964475],[1.710791,-4.856033,8.972889,-8.725232,7.876315,2.748895,-2.166445,0.973854,7.247620,-0.168316,-9.709852,-0.456948,-7.465458,2.866546],[3.435197,7.737614,3.460857,-6.218888,0.489748,-9.270915,-1.573790,-6.313958,2.527875,-7.796695,-7.782138,-3.623754,-4.908908,-9.712365],[-2.076862,-1.306620,1.316005,7.718435,7.751757,-7.914420,-4.479976,6.679762,-3.275355,-3.910840,-6.060865,-9.148119,7.953688,5.970343],[3.065841,-4.806566,7.744610,4.079618,-9.663300,0.387614,-1.626623,-9.614622,6.554589,-7.438325,0.886427,2.645464,1.964790,-4.563685],[6.356076,-6.213279,8.177632,-9.942468,-3.706845,-7.669444,-6.992072,-2.892312,6.803267,-5.068718,7.991599,-7.551173,1.745815,-1.860405],[2.011145,1.440342,-5.239880,4.694055,-2.548715,-2.464414,2.089086,5.185789,-2.816188,-6.827736,-2.176274,-9.438488,2.543742,-2.340308],[5.121215,-3.839169,9.109182,1.934054,4.087953,-6.334185,-9.331440,-5.768169,6.231903,-6.926152,-7.913024,7.084036,3.209976,-0.282464],[-6.697174,1.713701,5.736769,-0.154546,4.863255,-9.863557,-2.247043,-0.354814,1.971558,-9.657036,-0.778904,-2.823164,8.181402,2.314648]],[[-1.174168,-5.744040,-6.212698,-8.021016,3.312423,-3.178364,-8.694272,3.889554,5.537910,2.998001,3.577412,2.134688,-8.562670,-1.291333],[1.134846,-2.616297,9.576861,-6.800428,-2.062208,6.340843,8.434407,-4.963513,-2.384728,-5.162562,8.902276,-9.148100,7.846744,-0.061445],[6.143643,-5.956316,-4.306043,-1.904311,4.844898,1.223086,7.836374,0.481680,0.023911,-9.498064,3.873690,7.247455,6.716648,3.073448],[-1.105446,-7.383954,-4.362493,-6.724735,-4.428067,-1.423290,-9.932034,2.707272,-6.974946,-6.486139,8.753183,5.616216,-7.500997,4.843361],[-4.469565,-0.468303,7.047962,0.497297,5.757583,-7.139637,-7.308022,9.823973,3.072837,0.251032,8.582659,5.535809,-1.219486,-0.330586],[3.085073,-6.162650,-8.806687,-0.358571,-2.344068,-2.967209,-6.036396,0.728870,7.093188,2.588017,9.269266,0.924143,-5.309891,3.426523],[4.875310,9.014947,-1.876965,9.062795,5.528877,-3.955015,4.870376,9.939420,9.193541,-2.851681,-8.179273,2.692607,-3.830936,-1.784634],[2.690325,-7.329237,4.838494,-6.464383,2.090739,1.748077,0.719525,-0.300173,-1.570828,-7.580426,-1.387522,-4.191196,-4.839289,3.217566],[-7.768887,-3.916088,5.146240,8.093158,-2.995467,-5.565347,9.153308,-9.664294,6.762695,1.746114,6.379708,-2.984263,-0.798328,-0.045836],[-0.131229,-6.454336,7.811384,2.460061,1.649807,-2.828309,-7.414923,2.497811,-3.969293,-9.539439,4.915564,6.452919,-1.363970,-4.843377],[-4.102854,3.526334,-8.653057,-8.052176,-5.765578,6.307885,-6.190686,-0.561362,-1.753702,-3.737105,8.553342,1.026895,-4.972779,0.451191]],[[-0.892234,1.703728,-1.620616,2.954706,-6.792047,7.212878,4.565361,-8.017544,-9.677244,-2.275788,8.683488,2.668081,-1.657774,3.493632],[4.455722,5.553358,-7.632524,-1.451902,4.153695,-4.740427,3.269243,6.648783,-1.940129,-7.789134,-7.871858,4.256966,9.784259,-4.280142],[0.245901,-2.603028,4.573479,-1.916159,4.186161,-5.117335,6.776631,-8.443252,-5.669307,6.999651,-2.990158,3.763001,5.989190,-7.764772],[3.619793,-7.100955,-0.756045,4.071554,-2.724245,0.750580,7.983751,-9.506856,-9.216662,9.376421,-8.325130,4.540753,3.103226,7.984579],[-9.524363,1.818809,0.389667,-8.558545,0.415406,7.775946,-6.377766,9.096228,-1.166122,-2.078877,-7.896537,-2.487218,-0.247023,6.554592],[-2.681774,-6.646638,-9.862452,0.892840,6.183476,7.644969,4.209508,-3.927567,-9.144634,5.052283,-2.398102,3.239819,-7.404046,0.977345],[-6.621242,-9.128968,-8.680250,8.870291,-0.820109,-4.409156,-4.971692,-3.320255,-5.052646,3.142102,-7.957293,9.130837,-5.579205,-1.194695],[-2.915830,-3.597993,-7.334876,-7.295404,7.625109,-3.371725,-0.732434,-1.090500,-7.389326,-5.316393,8.684714,3.522160,7.941472,-7.997497],[-4.147311,-4.846715,2.945499,5.793783,7.539193,-3.702521,6.812065,-2.931119,6.606926,-2.032508,-9.392817,-1.167095,8.609320,0.445129],[-9.301123,-3.157058,-9.928925,-8.948812,6.326824,-3.238423,5.713992,-5.707974,1.570075,-6.636229,7.976290,-5.475209,4.413251,2.680568],[4.993255,5.735629,7.464844,-1.340205,-1.673511,0.835076,-7.119593,-5.856807,-8.576776,-6.482809,-7.887393,-1.974990,7.562543,2.719751]],[[5.948951,5.858695,9.923053,-3.097671,4.483180,8.644516,3.330765,2.888009,-7.662130,2.456290,-0.129266,-5.004038,-6.143715,-7.189165],[8.973444,9.084969,2.197393,9.109882,9.617458,3.852121,-6.934705,0.403541,0.632317,6.286146,-8.139881,-5.527766,-5.341684,1.524179],[7.000642,7.824943,5.168235,6.517838,9.424554,-3.122866,-7.195206,1.338337,-8.621236,3.056398,-4.044648,7.256474,4.320578,7.184667],[-6.390372,1.195536,4.339461,-0.110406,7.021546,3.866388,9.996257,4.208962,6.957069,-6.785253,9.323322,6.712645,4.709928,9.778147],[-5.835404,-8.047541,4.752102,-2.434502,-2.386976,-8.704697,-1.188171,3.344136,9.223189,5.613477,9.819402,-1.274108,6.340569,-6.883415],[-2.345679,-3.671009,1.330573,8.932720,-7.823500,9.371331,-0.563748,-6.261203,0.159586,-4.941590,-7.153935,4.412077,-3.403318,5.863720],[2.101865,-0.356535,7.830358,-1.837499,2.047754,0.322007,0.010819,3.319430,-4.874050,-7.441897,9.341385,-1.308905,-0.420292,2.652882],[7.239541,8.349873,0.693727,-6.241916,-2.356746,0.867893,-5.848206,4.842521,5.870258,-9.376842,-1.325803,4.590117,2.826143,4.085725],[0.852393,-2.187146,5.284721,7.949451,9.364241,9.672355,-3.242767,-8.621874,-1.834961,-0.386199,-9.529949,7.982844,8.832206,-6.961848],[2.247223,-5.882431,-5.262394,4.502415,-8.139486,-4.549880,4.431133,1.901543,-3.503297,-7.962159,0.738380,-8.166516,4.477817,-9.521045],[-5.195284,-1.071161,0.371697,-6.178044,6.374913,8.789413,-7.727544,-2.315394,-1.650341,0.945672,4.091908,1.677055,-0.937297,-0.893036]],[[9.450229,-9.693064,8.812925,5.631300,-1.985629,-6.823425,-2.324191,8.949166,-4.123653,-7.890654,-6.365157,3.148301,4.839219,-2.695236],[0.688889,-2.842038,-7.870956,-3.420957,9.753751,-9.674605,-7.840438,2.609058,-8.591586,7.464474,-4.954373,7.554423,-1.508730,-0.924416],[2.443113,2.227242,3.537291,-4.812615,8.333215,5.645770,-4.919776,-5.910200,1.860723,4.607576,-3.932198,-1.873468,-6.447888,0.453967],[-7.091512,4.273207,1.906704,-8.504512,-2.589469,-5.259963,-2.126490,-9.907830,8.380430,1.823793,-1.531153,-0.965289,4.594950,-7.280675],[9.735966,-1.470846,5.157528,8.788129,7.166521,-2.233746,-1.299964,0.072221,-3.477746,-6.932711,-7.682440,-8.960812,-6.773737,6.226609],[1.785448,-0.779049,-8.882974,9.605643,-8.548099,-0.948961,-9.119893,7.171718,4.953017,6.612587,-0.314887,9.622366,0.975734,7.551388],[-5.290834,-5.897794,-1.109989,-0.319758,7.173842,4.320607,3.758108,8.415053,-1.041788,-5.456717,7.153287,2.977301,9.125726,-0.804982],[3.090847,8.182043,3.954575,0.549314,-5.549968,-4.846868,2.822997,8.677503,9.907698,5.989690,1.342990,0.633256,4.462589,-3.876598],[3.221166,-0.352691,-2.114723,-6.050034,9.257326,-9.142051,-6.588799,5.216314,-8.306640,-1.707493,-8.711953,4.111996,7.561483,-9.211635],[3.165686,-5.638171,-0.219444,5.886398,-3.066057,-6.379395,-8.435698,9.660082,9.878775,-6.036990,0.118328,8.535204,-3.073501,1.868354],[3.861343,4.474504,-6.908233,1.058316,-6.148580,9.014837,-9.918604,-1.699065,-8.331518,0.831796,-8.807205,3.771257,-6.425611,3.566050]],[[9.252497,3.387742,6.949806,-0.660653,-7.446864,-7.250866,-4.849582,0.030527,7.514165,4.421373,2.925204,4.829928,8.412995,9.031924],[5.160964,-7.764356,8.734054,3.095380,-6.176020,-5.986555,1.417503,7.007841,-6.533899,-1.002683,-1.239975,-5.781059,1.522290,-0.860458],[-0.982749,-2.800656,-6.656026,0.161954,-8.758569,-1.799894,-2.278499,1.906184,3.548471,5.868456,9.255795,5.763921,-4.160417,1.170604],[7.342852,-3.383189,4.900447,0.077454,4.651989,1.968390,3.757441,3.327094,-0.414240,9.485261,7.624982,-0.181977,3.474269,0.436256],[7.886019,8.543740,-5.814296,-7.545195,-3.967585,7.612201,-9.965486,-4.239389,7.097334,9.486789,-0.248933,1.563071,-0.960988,3.804871],[-2.507561,6.213099,5.047095,-2.026302,-1.856802,-1.025010,4.544410,-9.108341,-9.787001,8.484718,-3.982912,-9.066906,-0.216969,2.341366],[9.011557,-7.420613,3.120392,3.315246,-0.542239,-8.707117,-8.204723,2.206563,-4.360406,-6.517625,-1.588031,-8.763969,-1.194142,-5.655650],[4.967365,1.954880,-9.097748,-6.370600,0.259096,-4.841520,6.856933,-5.476359,6.415695,5.998732,-4.438109,5.101649,-1.552797,0.872047],[-3.260521,8.551219,3.202351,-6.089066,-2.006836,7.518059,-5.689018,6.265860,-2.022464,8.282727,4.827053,-1.490053,-2.241122,5.580727],[0.673136,-1.432592,-8.525888,1.635802,-1.068585,0.969166,-1.147534,8.135794,-3.020667,0.566247,-4.819092,6.821224,5.282699,1.656947],[3.411116,-2.898985,-7.041831,-1.785183,-9.943871,-8.077280,4.197775,2.367200,8.734019,-8.936443,8.389420,-1.364235,-0.369217,-9.103120]],[[4.846362,-8.024601,-7.726211,-1.995270,9.465174,8.603292,-8.897243,-2.798219,4.955969,-0.664676,-6.451744,-8.928206,-2.968000,-7.164481],[-3.897160,-3.154753,-5.878357,-2.565514,-0.109599,0.490448,3.995744,7.357165,0.537879,1.144286,-3.791914,2.797179,-3.897300,-9.951611],[-5.951170,-9.627797,0.859933,9.891064,8.846599,-4.227728,-7.363427,5.661914,-7.506910,5.232948,-9.833998,-1.511885,-4.142441,-0.656763],[-1.918685,7.531769,0.971285,4.029822,1.365142,-8.865313,5.625574,-6.692839,0.245117,2.022804,-8.225909,0.366177,-7.217106,3.481353],[5.473681,6.103034,3.519099,-3.490080,-2.663847,1.117648,-0.930956,-6.945624,7.533893,9.845038,-5.438326,-9.984770,-2.605683,-6.223394],[-1.063472,0.975571,4.122911,9.869500,-0.520855,6.741543,4.865931,-1.033836,-4.878253,9.861733,3.834572,-9.933174,-3.782049,-2.806888],[-2.182410,8.844047,8.518554,-6.139308,6.342880,3.770402,-5.601922,5.131516,3.600081,9.846563,-8.153795,8.194546,-0.099859,-3.101343],[1.896272,3.070304,2.025562,-1.964569,9.577143,3.588931,-5.618594,-5.539232,7.404390,-0.593953,9.779321,-9.917283,7.997118,2.084909],[-0.375814,-4.260574,8.157448,5.034369,-9.460674,5.795831,5.584345,-6.205431,3.417905,-5.931970,-7.056705,4.360930,-0.277487,-6.735917],[-1.233214,2.771386,1.841568,-3.825077,5.746679,3.157407,3.233272,-5.276124,7.642765,-2.766176,5.445456,9.720375,1.515001,-0.654033],[-9.136548,7.161655,-2.387214,3.380720,-5.606474,-0.850650,-9.911350,2.249213,-9.141552,-3.902065,4.862397,-1.116548,4.191095,-1.308661]],[[6.620558,-9.769106,0.988312,-1.478705,2.140997,6.506131,0.270155,8.501484,6.273247,9.774971,-2.292152,1.074626,-3.068851,5.145735],[3.007384,-8.113615,-4.931418,7.667490,1.008069,8.145456,9.411760,-6.227297,3.722169,-5.404005,0.117613,-3.400704,3.630513,7.709290],[-9.184271,4.090373,-1.098544,-1.918317,3.488027,9.655764,0.820668,0.265614,4.249804,4.881858,0.145708,-6.520470,0.572252,1.630322],[-5.768960,-5.339880,6.722981,2.351260,6.061371,-5.345180,8.096614,7.115459,-1.282601,3.894304,9.607251,-9.142180,8.700250,0.677902],[-4.002597,2.861169,0.217505,6.310398,-4.660760,-6.549713,-3.822060,-6.072220,-3.287929,-7.711994,-1.872407,6.353805,-4.938349,-5.531615],[-6.258208,-1.421836,-5.990024,5.799316,1.236151,-6.391837,0.209388,3.887585,8.881625,3.602455,-3.891972,4.906667,-5.807967,-5.079399],[-2.952007,-9.356360,-0.960715,6.239988,-6.926657,-7.286282,8.963055,3.452554,2.936288,-8.106106,-0.295371,7.059239,0.934521,3.241669],[8.721913,-4.209928,1.305756,-9.444012,1.787079,-3.333008,-3.406990,6.943407,-3.464868,7.988209,-0.464358,-7.927680,1.585807,4.180832],[-3.601031,-5.135653,-6.965808,-5.216326,2.915004,8.886799,-8.065531,2.189230,-3.372600,3.457553,6.251742,-4.626681,-9.204399,4.945405],[-0.124739,2.065588,5.627877,-9.954235,-4.285785,5.328376,5.342355,8.390350,9.925428,8.262917,9.263436,-2.590812,7.762217,-8.138809],[5.017780,8.361588,-2.537888,9.309577,7.751604,6.807616,-2.555124,1.833478,7.898769,6.078180,8.499514,-9.794126,7.608541,-5.455348]],[[-6.733498,0.639034,-6.796735,3.707843,8.738788,-6.693663,4.022506,-7.426884,9.337254,9.953731,-8.147120,9.601901,0.129527,3.150945],[-1.011548,8.306750,-9.669999,-9.007922,-4.127724,-3.918067,-0.144427,-6.580602,-9.409414,7.059264,-8.022855,7.082142,-8.663653,6.344424],[-7.084027,-0.880098,-0.755023,8.465188,-5.852237,2.477915,-4.424961,-0.509717,-6.082236,-7.990174,-3.551968,-4.135340,-2.627662,2.851185],[-6.983709,3.527022,6.926650,5.647896,1.768788,8.250028,3.062584,-0.449464,-7.593536,-8.316710,6.033148,7.669925,9.453553,8.660062],[9.246877,-9.463559,3.353600,1.151090,0.656235,-9.279837,7.996724,1.522802,-9.277284,-1.902517,-6.051569,3.835258,8.393020,6.814292],[1.959566,3.820434,-3.975791,-8.322873,6.408885,-1.647067,9.818992,4.320442,-6.157848,2.256526,2.981374,4.851482,-1.689204,2.017367],[-6.767611,-4.365845,1.563500,-6.344107,9.157455,7.375816,-7.874104,-1.454139,-2.776946,5.016735,-6.153131,8.536909,-3.399247,6.875561],[-2.626442,7.751267,-5.769140,-7.510906,5.027109,6.353316,3.737180,3.533685,-3.215986,9.630341,7.475554,-8.744515,4.308027,4.072627],[-2.217235,2.478632,-9.317662,1.110871,-8.818614,-7.733351,7.131736,3.565318,5.727609,-6.985755,-7.602860,-6.117057,-8.836245,8.399418],[7.122758,-4.741174,0.472415,-3.088094,-1.538252,-4.686499,4.594723,-7.837583,-7.253790,9.210598,-5.096551,-7.298751,-1.071689,-1.854787],[6.039363,-2.992625,5.619348,-2.260935,-2.856628,-2.190787,6.431318,-0.255652,1.031677,6.495770,-8.106920,2.371937,-2.416270,9.347244]],[[5.920634,-1.601484,0.253740,3.361254,4.500148,1.044751,-3.930150,-0.202587,8.767773,-0.525284,5.882908,-9.464392,-0.380926,-2.044529],[2.948203,9.048586,6.713091,4.258301,0.821982,1.575231,2.920176,-7.645118,-7.335021,7.044213,0.776271,2.371049,0.054240,-9.978240],[0.436726,-8.299578,-0.947311,8.589189,3.696201,-8.309328,2.115573,3.417690,1.265279,-3.154422,-8.396198,8.029332,9.211895,-6.202252],[-8.545824,9.603376,8.628460,8.737828,7.986913,-7.855553,1.365532,1.901939,-7.055082,3.566677,6.561068,-7.698050,6.620163,8.360844],[-1.349723,2.609446,0.013932,-3.897826,8.578661,-8.407845,5.297841,5.886820,-9.632200,2.346668,-3.675081,-5.500201,8.643292,9.261950],[-5.508847,5.180188,3.365179,1.387844,8.556786,6.658540,9.624032,-8.841541,-6.304409,-1.274071,-2.257438,-3.319672,-2.958591,-3.868104],[9.457065,0.681012,0.397016,-7.143696,3.263474,6.154485,7.035792,6.048558,-1.575383,0.831463,-8.486007,6.929618,-6.560492,2.724793],[-0.039207,-4.339981,6.777280,7.471686,-4.704598,8.845742,-4.071648,8.074995,-3.782652,-7.348810,-7.129854,6.763533,3.693794,4.248050],[-1.644310,0.557946,6.063534,-2.588023,7.536878,4.088350,4.969641,0.558315,9.642983,-8.362521,-1.618749,-6.189426,-1.067111,1.867724],[1.253779,5.716560,5.773132,-2.252495,-8.461675,8.513884,9.235949,-1.704242,-6.010366,-6.835029,-1.669698,0.654625,2.818018,9.977076],[4.846091,-7.564174,9.148739,9.902844,-1.755588,3.684692,-3.730663,-2.575531,4.781518,5.571453,-6.485270,6.099442,-6.025885,2.632156]]], dtype = "float64")#candidate|2565|(10, 11, 14)|const|float64
uop_2566 = relay.sin(const_2565.astype('float64')) # shape=(10, 11, 14)
output = uop_2566
output2 = uop_2566
func_2568 = relay.Function([], output)
mod['func_2568'] = func_2568
mod = relay.transform.InferType()(mod)
mutated_mod['func_2568'] = func_2568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2568_call = mutated_mod.get_global_var('func_2568')
call_2569 = func_2568_call()
output = call_2569
func_2570 = relay.Function([], output)
mutated_mod['func_2570'] = func_2570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2544_call = mod.get_global_var('func_2544')
func_2545_call = mutated_mod.get_global_var('func_2545')
call_2575 = func_2544_call()
call_2576 = func_2544_call()
output = relay.Tuple([call_2575,])
output2 = relay.Tuple([call_2576,])
func_2584 = relay.Function([], output)
mod['func_2584'] = func_2584
mod = relay.transform.InferType()(mod)
output = func_2584()
func_2585 = relay.Function([], output)
mutated_mod['func_2585'] = func_2585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1459_call = mod.get_global_var('func_1459')
func_1460_call = mutated_mod.get_global_var('func_1460')
call_2592 = func_1459_call()
call_2593 = func_1459_call()
func_1433_call = mod.get_global_var('func_1433')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_2597 = func_1433_call()
call_2598 = func_1433_call()
func_1524_call = mod.get_global_var('func_1524')
func_1526_call = mutated_mod.get_global_var('func_1526')
call_2601 = func_1524_call(relay.reshape(call_2597.astype('float32'), [9, 8, 3]))
call_2602 = func_1524_call(relay.reshape(call_2597.astype('float32'), [9, 8, 3]))
func_2280_call = mod.get_global_var('func_2280')
func_2284_call = mutated_mod.get_global_var('func_2284')
const_2605 = relay.const(-3.382778, dtype = "float32")#candidate|2605|()|const|float32
var_2606 = relay.var("var_2606", dtype = "float32", shape = (200,))#candidate|2606|(200,)|var|float32
call_2604 = relay.TupleGetItem(func_2280_call(relay.reshape(const_2605.astype('float32'), []), relay.reshape(var_2606.astype('float32'), [10, 5, 4]), relay.reshape(var_2606.astype('float64'), [10, 5, 4]), ), 1)
call_2607 = relay.TupleGetItem(func_2284_call(relay.reshape(const_2605.astype('float32'), []), relay.reshape(var_2606.astype('float32'), [10, 5, 4]), relay.reshape(var_2606.astype('float64'), [10, 5, 4]), ), 1)
bop_2614 = relay.floor_divide(var_2606.astype('float32'), const_2605.astype('float32')) # shape=(200,)
func_1433_call = mod.get_global_var('func_1433')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_2619 = func_1433_call()
call_2620 = func_1433_call()
var_2623 = relay.var("var_2623", dtype = "float32", shape = (200,))#candidate|2623|(200,)|var|float32
bop_2624 = relay.equal(bop_2614.astype('bool'), relay.reshape(var_2623.astype('bool'), relay.shape_of(bop_2614))) # shape=(200,)
output = relay.Tuple([call_2592,call_2597,call_2601,call_2604,call_2619,bop_2624,])
output2 = relay.Tuple([call_2593,call_2598,call_2602,call_2607,call_2620,bop_2624,])
func_2633 = relay.Function([var_2606,var_2623,], output)
mod['func_2633'] = func_2633
mod = relay.transform.InferType()(mod)
mutated_mod['func_2633'] = func_2633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2633_call = mutated_mod.get_global_var('func_2633')
var_2635 = relay.var("var_2635", dtype = "float32", shape = (200,))#candidate|2635|(200,)|var|float32
var_2636 = relay.var("var_2636", dtype = "float32", shape = (200,))#candidate|2636|(200,)|var|float32
call_2634 = func_2633_call(var_2635,var_2636,)
output = call_2634
func_2637 = relay.Function([var_2635,var_2636,], output)
mutated_mod['func_2637'] = func_2637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2461_call = mod.get_global_var('func_2461')
func_2462_call = mutated_mod.get_global_var('func_2462')
call_2639 = relay.TupleGetItem(func_2461_call(), 0)
call_2640 = relay.TupleGetItem(func_2462_call(), 0)
var_2649 = relay.var("var_2649", dtype = "float32", shape = (9, 8, 3))#candidate|2649|(9, 8, 3)|var|float32
bop_2650 = relay.logical_and(call_2639.astype('bool'), relay.reshape(var_2649.astype('bool'), relay.shape_of(call_2639))) # shape=(9, 8, 3)
bop_2653 = relay.logical_and(call_2640.astype('bool'), relay.reshape(var_2649.astype('bool'), relay.shape_of(call_2640))) # shape=(9, 8, 3)
output = relay.Tuple([bop_2650,])
output2 = relay.Tuple([bop_2653,])
func_2658 = relay.Function([var_2649,], output)
mod['func_2658'] = func_2658
mod = relay.transform.InferType()(mod)
var_2659 = relay.var("var_2659", dtype = "float32", shape = (9, 8, 3))#candidate|2659|(9, 8, 3)|var|float32
output = func_2658(var_2659)
func_2660 = relay.Function([var_2659], output)
mutated_mod['func_2660'] = func_2660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2461_call = mod.get_global_var('func_2461')
func_2462_call = mutated_mod.get_global_var('func_2462')
call_2688 = relay.TupleGetItem(func_2461_call(), 0)
call_2689 = relay.TupleGetItem(func_2462_call(), 0)
func_1777_call = mod.get_global_var('func_1777')
func_1780_call = mutated_mod.get_global_var('func_1780')
const_2691 = relay.const([6,-5,-10,-7,6,-1,-7,-9,-5,-9,-2,-8,-8,-7,4,1,9,2,-6,2,-2,-8,8,-8,-4,1,-3,-10,-5,-10,-1,10,8,-9,-2,-6,-4,3,-2,4,-7,3,-7,-1,-10,-1,3,-2,5,5,4,4,-8,9,-8,-5,1,-7,2,1,8,-4,-5,-1,-10,10,8,2,-10,5,8,-3,1,-7,7,-3,-10,-5,3,-5,-2,9,-10,-7,3,-8,-3,2,-10,-5,7,-1,6,1,-4,4,-5,6,-3,-6,5,9,-7,-2,-10,-6,-6,5,5,-1,4,2,8,5,-1,8,-6,-1,-10,10,1,-8,-4,-9,8,-7,5,4,-9,5,-1,-3,-1,-10,9,-10,5,-7,2,-8,-6,-5,-6,6,-1,5,-3,-10,7,5,9,8,5,5,-9,-8,-9,8,3,3,5,7,-8,-2,5,1,-7,10], dtype = "int64")#candidate|2691|(168,)|const|int64
call_2690 = relay.TupleGetItem(func_1777_call(relay.reshape(const_2691.astype('int64'), [168,])), 8)
call_2692 = relay.TupleGetItem(func_1780_call(relay.reshape(const_2691.astype('int64'), [168,])), 8)
func_2357_call = mod.get_global_var('func_2357')
func_2359_call = mutated_mod.get_global_var('func_2359')
call_2697 = func_2357_call()
call_2698 = func_2357_call()
uop_2699 = relay.asinh(call_2688.astype('float64')) # shape=(9, 8, 3)
uop_2701 = relay.asinh(call_2689.astype('float64')) # shape=(9, 8, 3)
const_2704 = relay.const([[[-1.962485,-3.423958,0.698263],[-3.934028,4.749617,-7.659137],[-3.968004,6.790187,-6.878309],[-8.580823,-6.614635,-1.029691],[7.516870,6.924036,8.610671],[-7.495951,-2.996820,1.934923],[-8.839874,7.275296,5.659365],[-7.037911,-9.130692,-0.495923]],[[-0.052542,-1.190102,7.806129],[-5.424671,8.819227,-8.511937],[-4.706978,-6.037712,6.896184],[-4.939214,8.085728,6.825120],[5.077024,-7.749710,-2.382106],[-4.872903,-3.584769,1.638502],[-3.284482,-6.411536,2.208164],[-7.497512,5.567501,-3.005402]],[[-4.773675,-2.786925,-2.646833],[-9.679616,3.183448,-4.820305],[-0.996568,6.502443,3.314790],[-9.741373,-6.726256,8.866087],[-7.408840,-9.836809,7.656737],[-6.548587,5.431968,2.204702],[8.867131,-5.272831,7.720992],[-9.430304,4.009613,-6.770213]],[[-1.332455,-6.149307,4.680126],[-1.336410,-7.590475,9.263337],[-4.439701,6.796674,-3.168204],[7.342257,2.238487,-6.940014],[-5.312977,-3.608034,-8.128195],[0.711259,7.283778,-5.404109],[7.225150,-8.040707,9.151465],[0.914595,-4.532696,4.421382]],[[-2.455483,-7.178850,-4.864215],[-9.122445,2.073675,6.068727],[6.845132,-8.629270,-5.599099],[9.580230,9.265450,0.256975],[9.304865,-5.356999,-4.771737],[-6.859063,6.699176,-9.042263],[4.753677,-7.665392,2.053789],[0.512783,-8.839306,5.718388]],[[-9.967644,9.181010,8.055182],[-5.621434,5.950851,-9.326546],[-9.348786,-8.604477,5.089303],[-2.317149,9.380925,5.920810],[-9.388062,3.608706,-5.613470],[4.930438,1.369605,-3.478120],[-1.761644,7.055427,-1.987022],[3.332169,-7.327354,-9.828895]],[[-2.276829,7.199989,1.561525],[-5.418278,3.550838,0.769426],[-5.861268,-7.691108,3.310202],[-2.418692,3.354358,1.632751],[9.448676,-5.597392,9.127093],[8.929468,9.910242,7.278259],[7.830142,-3.271428,-0.746736],[-5.705573,4.929654,-9.390869]],[[-7.047048,-5.220281,2.579085],[6.168203,-3.355389,-8.797415],[-7.298790,8.042612,-2.501489],[-5.646853,-6.081166,-5.171322],[-5.797775,8.382302,6.295995],[-4.547316,8.888120,6.659680],[6.575557,0.025750,5.410191],[0.696388,-8.152306,9.350444]],[[0.929068,-3.321951,9.062167],[-8.386769,-8.672932,7.054686],[-9.065553,5.188149,-2.169625],[-4.192420,0.721014,6.778047],[0.337503,-5.818641,1.041251],[0.501014,7.896885,-6.543974],[-9.164391,4.978501,-4.330363],[4.364470,-8.013255,-2.052822]]], dtype = "float64")#candidate|2704|(9, 8, 3)|const|float64
bop_2705 = relay.less(uop_2699.astype('bool'), relay.reshape(const_2704.astype('bool'), relay.shape_of(uop_2699))) # shape=(9, 8, 3)
bop_2708 = relay.less(uop_2701.astype('bool'), relay.reshape(const_2704.astype('bool'), relay.shape_of(uop_2701))) # shape=(9, 8, 3)
func_2429_call = mod.get_global_var('func_2429')
func_2431_call = mutated_mod.get_global_var('func_2431')
var_2710 = relay.var("var_2710", dtype = "int8", shape = (36, 1))#candidate|2710|(36, 1)|var|int8
call_2709 = relay.TupleGetItem(func_2429_call(relay.reshape(var_2710.astype('int8'), [4, 3, 3])), 0)
call_2711 = relay.TupleGetItem(func_2431_call(relay.reshape(var_2710.astype('int8'), [4, 3, 3])), 0)
func_2568_call = mod.get_global_var('func_2568')
func_2570_call = mutated_mod.get_global_var('func_2570')
call_2721 = func_2568_call()
call_2722 = func_2568_call()
output = relay.Tuple([call_2690,const_2691,call_2697,bop_2705,call_2709,var_2710,call_2721,])
output2 = relay.Tuple([call_2692,const_2691,call_2698,bop_2708,call_2711,var_2710,call_2722,])
func_2726 = relay.Function([var_2710,], output)
mod['func_2726'] = func_2726
mod = relay.transform.InferType()(mod)
var_2727 = relay.var("var_2727", dtype = "int8", shape = (36, 1))#candidate|2727|(36, 1)|var|int8
output = func_2726(var_2727)
func_2728 = relay.Function([var_2727], output)
mutated_mod['func_2728'] = func_2728
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2740 = relay.var("var_2740", dtype = "uint64", shape = ())#candidate|2740|()|var|uint64
const_2741 = relay.const([[[4,-4,7,-5]],[[9,-8,6,9]],[[10,4,8,4]]], dtype = "uint64")#candidate|2741|(3, 1, 4)|const|uint64
bop_2742 = relay.right_shift(var_2740.astype('uint64'), const_2741.astype('uint64')) # shape=(3, 1, 4)
output = relay.Tuple([bop_2742,])
output2 = relay.Tuple([bop_2742,])
func_2745 = relay.Function([var_2740,], output)
mod['func_2745'] = func_2745
mod = relay.transform.InferType()(mod)
mutated_mod['func_2745'] = func_2745
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2746 = relay.var("var_2746", dtype = "uint64", shape = ())#candidate|2746|()|var|uint64
func_2745_call = mutated_mod.get_global_var('func_2745')
call_2747 = func_2745_call(var_2746)
output = call_2747
func_2748 = relay.Function([var_2746], output)
mutated_mod['func_2748'] = func_2748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mod.get_global_var('func_1619')
func_1621_call = mutated_mod.get_global_var('func_1621')
call_2753 = func_1619_call()
call_2754 = func_1619_call()
output = call_2753
output2 = call_2754
func_2757 = relay.Function([], output)
mod['func_2757'] = func_2757
mod = relay.transform.InferType()(mod)
mutated_mod['func_2757'] = func_2757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2757_call = mutated_mod.get_global_var('func_2757')
call_2758 = func_2757_call()
output = call_2758
func_2759 = relay.Function([], output)
mutated_mod['func_2759'] = func_2759
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2777 = relay.var("var_2777", dtype = "float32", shape = ())#candidate|2777|()|var|float32
const_2778 = relay.const([[[-3.027347,-2.771380,-1.338687,-4.142872,-5.271044,5.711002,-0.466756,2.961110,8.543207,-1.505622,-1.638879,-7.854955,-8.551868,-5.605144],[3.468231,6.260388,-5.782308,-1.912348,2.562826,4.708483,-0.912429,-5.057489,9.319126,1.443001,-4.864252,0.892054,-1.229657,-4.024130],[-3.434725,-7.163896,6.751857,2.462221,4.955603,-6.695026,9.498508,-6.529889,-4.107320,-5.234324,-1.181548,-9.513749,-1.096653,-5.225434],[1.186104,0.709185,3.095841,-3.785444,-3.769232,4.770725,4.901866,-8.121369,4.565020,-9.878254,5.353899,5.297828,-2.988457,3.551861],[2.680477,-6.097549,-1.422737,-1.132995,5.272009,-4.154813,9.173723,8.430424,4.775113,9.508644,2.657054,9.694888,-3.458866,-2.788457],[-3.234925,3.774156,6.479798,4.392385,-7.748097,-5.298363,-9.139127,6.057753,-5.015977,-5.869331,-2.774721,-4.111362,-1.553337,-9.745983],[-3.062482,2.040463,-8.103655,-6.446756,-0.900911,-4.440531,4.924523,-9.480000,8.511911,6.492291,7.187213,-3.256842,8.393689,5.118133],[-0.029588,4.067456,-7.194611,1.590439,1.481728,6.361711,6.577892,-0.236943,-7.670112,-4.954456,-2.384193,9.837389,-7.015635,9.175861]],[[-7.555900,8.140791,3.820773,2.133444,8.799833,-2.245398,-3.562249,6.959082,9.494631,-7.580422,-1.296269,-5.945847,3.620568,-3.304218],[1.681747,1.395111,-5.139467,-9.425418,5.509612,-3.344964,-0.356251,-4.358970,-2.278703,8.185341,4.762419,0.349190,-5.375601,2.721398],[8.912879,3.507971,1.138967,-5.228217,9.980241,0.107300,-9.464777,-0.003257,7.454741,1.657711,-3.021673,4.297313,-7.188211,1.145934],[-5.275848,-9.855803,8.331246,-6.868738,9.165852,-1.803652,5.140798,9.026242,8.157789,2.330417,-7.538566,-2.253918,5.183786,0.195933],[-9.627345,-8.485867,6.773787,-6.749105,1.271591,7.454474,2.294393,8.727619,-1.295116,-9.641574,-0.882721,-4.211085,-6.404193,9.581605],[-7.657590,-8.571531,-5.636973,-5.946136,1.912773,-0.383814,5.148372,6.602626,8.755368,-2.665982,-5.959263,-2.469273,-1.515160,5.679103],[0.489858,-7.909878,1.632368,5.180526,9.434626,8.862210,-4.164280,8.341466,-6.785033,9.326487,-0.219016,2.417079,-6.832869,8.773136],[-8.742529,-7.076001,-4.260006,3.678693,2.709706,7.600707,-6.031143,2.454595,-6.670260,8.842028,-8.984854,-4.735801,-8.327879,2.684217]],[[8.585194,5.587216,7.179249,-6.994541,-6.235267,-1.676037,-2.300956,-3.306973,-9.325068,0.596756,8.405708,1.955609,8.307327,-1.584262],[3.572348,5.013853,-9.560646,-9.078947,-3.703084,5.606021,9.460656,-7.255644,8.914370,-0.553019,-5.585938,-3.691649,-9.560127,4.819227],[-9.833986,3.655890,3.216954,-4.300696,1.721134,-9.730899,0.892957,-3.002921,9.233518,-2.340327,-0.588574,-8.726668,3.867121,-4.625481],[8.129950,2.116310,8.758859,1.878416,7.881542,-7.821185,0.406097,-5.666836,8.544645,1.852896,6.678920,1.678597,-9.134870,2.619663],[6.579970,-9.200345,5.922895,-2.606149,-2.870554,-1.592307,5.139027,7.288638,7.293594,-6.889199,-3.401386,8.221727,1.638517,3.686049],[-6.931789,7.743023,-2.355080,-0.658336,-0.868063,-0.774756,2.257153,-0.846732,-6.420335,3.817905,-1.174305,-4.482002,9.627395,-0.380796],[-2.308299,-6.990868,-4.827684,-4.491245,5.510954,5.324123,9.273567,1.389436,-1.972269,-0.979429,3.088312,-8.986834,0.213643,-9.947927],[-5.111891,8.360282,3.405671,6.922926,-8.000730,-1.288750,1.855154,4.728717,-4.900662,9.370277,-4.132311,7.769752,2.473176,2.637864]],[[-2.943851,3.445526,5.392542,4.638266,-5.085004,-6.288424,4.290436,3.156436,-9.167501,4.096205,8.408882,9.224831,-0.948182,8.146142],[-2.134364,-2.433434,-8.235798,5.405173,1.519779,-8.440132,-8.268824,-8.211276,-8.271584,-0.260372,-7.209607,1.079045,-7.053261,1.207796],[4.064391,-1.887950,-8.747400,-8.093704,-0.391336,-1.936807,-7.112833,2.638222,5.529062,-8.222564,2.193237,5.752389,1.171134,3.484170],[6.089395,-8.816080,4.219760,2.490209,-5.698194,7.506474,5.682308,-3.257410,-5.379724,-1.269192,3.916607,2.003194,0.046461,-6.956005],[6.752955,-3.902891,-2.210013,5.320742,4.322286,2.442532,-3.619423,-8.883643,-7.234781,-6.755113,1.422162,0.101331,5.735845,7.672239],[2.909836,3.633539,-3.139359,3.269105,7.105230,-1.334397,9.880857,-3.336577,-8.637050,-5.219538,8.716892,-2.103835,3.288459,2.711807],[-1.203513,-7.399779,-3.848073,1.484409,7.772039,5.510331,5.579719,-7.409883,-0.558784,2.698198,6.538772,5.680298,-2.811343,5.965526],[6.068694,-8.273240,-9.490962,2.201384,2.966271,9.168012,-0.286493,8.446990,-9.568919,-6.808588,-9.860972,-6.276592,6.471891,-4.358856]],[[0.158802,-1.837635,-7.670608,-6.811101,0.953273,7.381801,-3.112749,5.349123,8.321073,1.047598,-9.897479,-6.414691,1.445204,1.316033],[6.028969,-9.049448,0.525230,4.351728,2.611409,-2.369119,-4.416677,2.817439,-3.847358,2.583967,0.482693,-1.552286,-8.200557,-1.324657],[8.563121,5.931114,2.844715,9.160349,-5.084693,-5.826888,-9.373545,-3.496510,-5.407144,-8.296511,-9.054014,8.673137,-1.024262,-4.350901],[-0.353108,-5.593423,-5.579212,-1.370042,5.225409,-7.230794,0.822607,3.895136,-9.509926,-9.339766,-4.061473,2.623720,-2.786567,-6.570439],[-2.801963,7.867796,-1.767012,-5.348306,5.051846,-2.740604,-8.669936,-1.177654,-7.953495,-2.223273,7.596896,1.603270,2.772910,1.290721],[0.721308,-5.087897,-6.591565,3.732891,7.628460,9.508202,-4.021648,6.383184,-6.138366,-0.853087,4.363239,9.840302,7.872554,-7.884146],[-7.646759,-2.088577,-7.369518,5.286857,5.384813,9.161407,7.529127,4.525734,-1.667903,-9.640695,3.610836,1.766992,6.182756,8.203539],[-5.147852,0.828133,4.134918,-9.400129,-2.261709,-7.942797,-5.144683,-3.892851,-6.539174,-8.583845,-3.140406,-5.733669,3.720885,0.730192]],[[-0.006342,-4.627753,-2.261908,7.746118,4.146265,9.344731,-7.406275,9.482215,6.273603,-3.025496,-8.196432,1.209694,3.414176,-2.725003],[4.750577,-6.015359,-5.690115,-4.846176,-0.402035,1.173039,-5.709151,-6.039769,-1.459512,3.014647,2.247141,-4.998795,-4.691289,3.233344],[7.795909,6.026367,1.504862,-9.828213,-1.211545,-5.639432,4.020334,-1.472858,6.419496,-4.000652,4.447772,2.408804,3.846283,-6.801128],[5.148439,8.771104,1.450641,-9.528421,-9.025476,-8.119012,0.167068,-1.443354,-5.195928,-1.311491,6.662725,-1.963950,9.980550,7.902796],[9.813996,-7.268981,7.333492,5.274643,-9.133887,8.743338,-2.576927,3.278346,6.422346,-5.359559,0.449613,6.605549,1.517915,6.335830],[4.929864,2.561641,-5.157508,-4.362231,-2.914102,-1.486846,0.053082,7.929751,6.906418,2.389419,-1.527095,2.132874,5.976100,-3.050090],[-0.554601,6.260019,9.863888,-4.124130,-5.358446,8.244452,-2.803140,-8.992888,-1.405428,0.982368,-2.623639,-1.248836,3.777358,-6.582291],[-1.877898,3.227191,-6.221257,-3.927170,-5.822804,4.369188,2.923817,4.163491,-4.981253,4.130227,3.090477,8.843396,-2.474921,9.053760]],[[0.681313,-7.039115,-6.100907,-0.417376,-8.497101,-8.513518,4.335888,6.635745,4.485233,-8.702596,-5.900394,-0.093785,-0.483853,-3.908109],[8.881381,-0.527683,2.348341,-6.166195,3.069424,2.576390,1.402320,-6.111534,5.853614,-0.247452,-0.878640,8.523117,-7.028689,-2.262789],[1.892896,1.318587,-4.203869,4.485322,-3.122258,-3.251313,-3.279332,6.031123,0.705895,-5.651506,-2.204034,8.701071,6.646122,0.749989],[-2.636052,-5.440896,-7.314941,-6.130995,-0.866577,8.237881,4.281609,-5.646385,5.479041,-9.110638,1.636534,0.692149,6.037934,-9.450277],[5.795785,-4.888588,0.629216,7.712207,9.347496,8.700188,2.841187,-0.869097,-4.302625,-5.922636,9.701978,-0.490709,8.623573,-7.248286],[3.285773,3.421589,-0.701234,-0.578314,8.477683,-6.947402,-6.603303,-7.417766,-9.021661,-3.101132,0.007270,-1.303644,4.136452,5.024764],[-2.549557,4.564287,-2.240859,6.160653,0.331676,-3.012468,0.607956,2.586993,-3.073245,-6.737150,-3.343010,9.907668,9.606719,-7.252741],[2.856699,-7.506547,5.969403,8.064100,-7.619555,6.343424,-8.524408,-8.890190,-4.252476,6.321864,6.564355,0.647721,8.732700,0.969204]],[[-7.344504,6.966735,4.814870,9.263949,-4.306198,-9.808075,7.510172,-3.799627,-7.068209,-3.754441,-9.863995,4.935597,1.911981,8.695118],[-3.890812,3.852743,7.734718,-4.907845,-3.626204,8.336708,-8.663611,-5.005087,0.185386,9.637538,9.929109,-7.102706,-2.156512,-1.392850],[-9.921474,-3.214955,-1.324615,3.995890,-7.714217,7.936507,-3.457484,1.215768,-5.152664,-8.090676,-5.136840,5.814179,7.726060,2.153308],[-8.703508,3.749712,-1.316765,8.144888,-3.139568,-4.090671,-8.338613,2.574126,-5.223456,2.927994,-2.909068,2.804887,1.485542,3.478776],[-6.164073,-7.802532,-7.749462,-1.582505,1.888638,4.294308,-2.753572,3.511639,8.165949,1.653262,4.536495,4.927645,6.660248,5.682230],[1.138589,3.969017,2.845795,-0.972151,-0.742157,-0.886102,-2.372577,8.647245,4.387032,2.316976,3.553830,2.898298,5.112664,3.000809],[6.990504,-0.946884,1.641698,-8.847212,5.589463,-4.508921,9.409434,-8.436408,-1.275551,6.053180,-7.849745,6.737411,4.998495,-6.916298],[2.592171,6.358760,-9.234855,5.582018,-1.744629,8.885331,4.869347,4.941231,-3.554433,-6.702250,6.600776,9.750655,8.386147,4.934278]],[[6.504365,3.681191,5.645961,7.370743,-7.933702,3.644837,-5.952338,4.908482,-4.796713,2.566368,-4.844221,-5.756627,8.238556,7.270639],[-0.300568,7.210507,-6.275125,-3.518562,-8.994184,-9.118414,-5.163391,9.721087,-9.589602,-2.828515,8.401001,7.454829,-8.479636,5.700109],[7.537409,-3.197712,8.002228,2.820341,-2.006479,-4.986744,4.388401,-5.087400,-4.041440,8.622431,-7.487644,-6.526226,0.432470,4.838847],[4.863547,9.249687,8.146879,-8.519484,4.157322,-9.227918,9.062897,-7.570939,6.809735,-8.006573,-6.937275,-1.607922,-7.717374,-3.424726],[9.569790,6.166249,-3.024653,7.682079,-5.326766,0.753864,-5.905910,0.445172,-6.533146,-0.119529,-8.647748,3.369356,-2.969435,2.206611],[-8.607513,-5.897452,2.853959,-2.644963,-8.238172,2.738923,9.702540,2.869290,2.067262,9.287340,-0.914883,8.799750,4.565770,-5.508611],[7.231587,-6.639219,1.586574,8.418771,-7.086603,3.048275,7.347653,1.685449,0.950391,-3.841441,6.045855,-3.519691,-0.583077,0.274163],[-2.539650,5.459649,0.426771,-9.982226,9.496088,-4.732951,5.152778,-8.822907,-2.158237,-4.674905,-7.276006,-4.549249,-3.550480,-4.371854]]], dtype = "float32")#candidate|2778|(9, 8, 14)|const|float32
bop_2779 = relay.floor_divide(var_2777.astype('float32'), const_2778.astype('float32')) # shape=(9, 8, 14)
func_2544_call = mod.get_global_var('func_2544')
func_2545_call = mutated_mod.get_global_var('func_2545')
call_2794 = func_2544_call()
call_2795 = func_2544_call()
func_2584_call = mod.get_global_var('func_2584')
func_2585_call = mutated_mod.get_global_var('func_2585')
call_2804 = relay.TupleGetItem(func_2584_call(), 0)
call_2805 = relay.TupleGetItem(func_2585_call(), 0)
output = relay.Tuple([bop_2779,call_2794,call_2804,])
output2 = relay.Tuple([bop_2779,call_2795,call_2805,])
func_2826 = relay.Function([var_2777,], output)
mod['func_2826'] = func_2826
mod = relay.transform.InferType()(mod)
mutated_mod['func_2826'] = func_2826
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2827 = relay.var("var_2827", dtype = "float32", shape = ())#candidate|2827|()|var|float32
func_2826_call = mutated_mod.get_global_var('func_2826')
call_2828 = func_2826_call(var_2827)
output = call_2828
func_2829 = relay.Function([var_2827], output)
mutated_mod['func_2829'] = func_2829
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2831 = relay.var("var_2831", dtype = "float64", shape = ())#candidate|2831|()|var|float64
const_2832 = relay.const([[[-1.904407,-2.574102,8.000166,6.916403,-5.750026,-8.405856,-8.113033,-7.759815,-3.259690,7.792540,3.460435,1.146344,-1.251023,-7.930998,-2.757038],[7.971587,6.740400,3.102774,-8.087130,0.382660,-7.900563,-9.242000,-2.676215,-5.349658,-8.188880,5.020744,9.874853,1.573074,8.722601,4.620882],[-8.034971,3.058459,7.861137,-1.141701,3.972132,-9.747841,1.194782,7.233389,3.090349,5.211849,3.688848,3.543623,9.279636,-4.939758,-7.685179],[-2.398056,-0.131308,-4.094599,3.943209,3.881631,3.617681,-4.450382,1.366990,-5.783681,0.807750,-9.836107,-6.400095,1.707484,0.817465,6.576738],[0.022441,-9.437554,7.524527,4.585799,6.519308,5.559259,0.248618,-7.848700,0.874126,1.620132,-5.853960,9.075949,-4.823129,-1.417306,-4.084745]],[[2.602419,0.656414,-6.528984,9.888505,4.980782,-3.869786,8.604202,-7.837532,-4.739268,-8.872660,-7.994556,-3.172785,2.757046,-6.741681,-8.525738],[6.913736,5.318799,6.726317,1.409382,1.410326,3.810100,-7.467080,6.593707,-8.651963,-0.942871,-3.076835,2.736136,9.047749,3.755989,-1.553867],[-7.310483,0.566361,4.489697,3.490031,8.420170,1.725670,7.379347,8.829085,8.649446,-5.872791,-7.551526,-8.872866,4.938633,3.226933,-8.503881],[-6.929642,5.010459,-5.226732,-9.888451,-7.201154,-1.356120,2.746327,2.184653,9.141356,-8.251690,-1.359236,-7.276073,4.302459,-1.837661,-3.587311],[-7.464091,-7.314209,-6.479100,-0.246614,-8.439262,8.557861,9.323344,-6.531569,2.980408,7.640843,-0.417805,7.458631,-9.026985,-9.669609,7.996327]],[[5.521230,-9.983684,4.186511,-4.317546,7.669844,-6.623231,-1.897102,9.276632,-1.032628,-6.570954,0.274696,-7.874857,7.389684,1.208501,3.318204],[-1.843907,-5.176840,-4.577309,3.263679,-3.580826,-9.095819,9.825078,-1.859478,7.499353,-6.481836,-9.053049,-8.660234,-4.635233,2.991981,-6.995731],[-3.285299,-4.439807,5.306826,-6.603504,1.953039,0.938855,-2.786342,-6.464210,-6.817913,4.168561,4.741949,-6.976611,-5.020416,0.525822,-6.115722],[8.228195,-4.772253,8.668536,-0.096939,4.540096,-8.434689,9.104953,1.426990,1.842829,-1.019735,-5.702627,-7.851400,0.519372,8.661255,2.447692],[-4.510885,-8.058253,-9.216628,-5.765056,-0.414801,-8.135239,4.212148,9.750235,-0.122714,-1.977834,8.761440,-5.835819,3.141859,4.282393,5.149601]],[[-1.764835,7.537596,-8.896381,-4.851476,-0.177517,-6.356442,-2.633602,0.260366,4.784904,-1.031312,-2.117132,-3.682945,-8.764566,-8.176888,1.725641],[-6.491036,-6.186248,-7.693082,9.989691,8.015209,5.716151,-4.293309,2.550713,7.503526,7.542979,-1.727256,-2.560340,3.354138,-8.879959,-5.180213],[1.538779,6.591912,-5.570915,-1.256511,9.380355,9.930040,-0.882762,-2.981650,0.815393,-3.747341,0.972960,-6.727785,3.341080,-9.722260,-4.687657],[9.960603,0.187173,4.685294,1.171827,0.391228,3.536488,1.085327,0.198098,-0.804320,-4.583167,9.829373,4.461883,3.367243,5.554227,1.891781],[-2.988380,6.035966,8.082869,8.883449,8.479466,8.777878,7.116625,-4.176449,-1.484547,-0.891241,8.665414,6.580839,6.447096,7.126840,-0.011667]],[[-4.686608,-3.345651,4.244362,-7.328142,-2.446101,9.328693,0.023245,-9.569518,0.209619,-6.417017,3.083022,-9.831816,-3.952052,7.443522,-3.945720],[-5.927748,-9.229294,9.987632,7.231622,-6.619530,2.036959,4.020706,7.117728,-0.262404,2.650831,-4.053639,-8.193893,5.560294,-2.939979,-8.382482],[-1.603450,-5.891024,9.312680,-6.881724,0.323556,-8.849234,5.784996,6.841516,-2.798818,4.557920,-9.931960,-2.818713,-7.335329,-2.829076,5.993218],[-1.099895,9.525458,-6.924897,-7.990749,5.286510,-8.432195,-2.438684,-1.005797,-3.321354,1.623170,-3.118812,1.738439,-8.758260,-2.593241,-9.342083],[5.955658,8.124547,2.418974,-9.953086,7.571684,-1.896827,4.407242,2.512809,-7.020671,-2.885376,4.906126,-3.619052,-7.808810,4.855234,4.156551]],[[-9.691227,-4.875489,6.088838,6.766217,5.848559,-6.978247,-0.376740,-0.724828,3.973438,7.586601,-7.362304,-2.632397,3.870876,8.275326,3.939995],[3.581373,3.806244,8.657670,2.046514,-2.053715,6.320230,-5.194316,8.300094,5.304684,-9.364410,-8.201361,-5.878758,3.428130,4.008206,-6.925054],[4.065938,-6.944203,9.277251,3.507487,7.603908,8.908416,-0.947979,-6.390702,-7.416392,-0.315342,5.344473,9.229129,8.752550,2.968867,3.034257],[4.637591,5.387183,0.608975,-9.723333,-2.257623,6.922073,-4.337622,4.915611,5.597520,9.396678,-1.052364,-4.615327,-7.531149,-2.831522,8.203542],[2.796043,-2.229059,-2.102790,7.744478,5.388208,-0.971579,3.235628,-9.102485,-6.767459,-7.219478,-4.806292,-2.990741,-8.209788,-4.800517,-1.766387]],[[-8.347598,5.269208,6.138648,-1.099221,-3.798510,-4.749072,-7.587482,4.789390,-4.610635,-4.702046,1.914011,-4.561853,-3.892057,-8.665923,2.080378],[-0.704768,-0.247634,8.921030,8.053124,-2.530485,8.107459,6.829623,-1.723066,-5.400305,-2.758717,6.534408,7.497045,9.356484,-2.856066,4.898788],[-0.225112,0.919255,1.001533,-6.492486,3.668109,-2.461480,9.056206,-2.255761,-1.789874,7.216535,-7.445172,8.209034,-7.638048,5.353302,-2.509212],[-7.901272,-7.451104,-1.842606,-1.857407,-1.319515,9.015985,-1.363924,-1.044382,9.508024,-7.270118,0.041855,2.465311,-5.453412,1.607033,1.744605],[-1.297426,5.381637,6.913599,-6.945555,-7.001738,2.003636,3.987505,8.625540,6.036082,4.969046,0.536920,-9.802792,1.054813,-2.933402,-1.837404]],[[-9.605196,0.448471,7.972177,7.850703,7.748804,-9.701980,-0.763480,-5.590686,-7.531538,-7.256956,7.426348,-4.789119,-4.111796,6.483228,9.037053],[-4.906226,-7.283096,4.623386,4.969562,-5.463487,-8.003660,3.272900,-9.831704,-0.715588,7.188945,-9.085898,-7.115096,-6.748077,-0.266245,7.728381],[9.149693,-7.125249,-3.846463,7.893528,-9.672087,-4.493907,8.947700,5.328342,1.805294,-3.827122,-9.988925,-1.523476,8.027426,-2.227698,-5.387518],[6.693983,6.128038,3.569290,7.326842,1.254166,-8.445067,4.428339,-5.374944,-3.983881,-2.154260,-4.923424,1.420126,-4.889650,-7.292652,3.443326],[-7.673713,-2.435351,-0.105325,6.591193,0.312339,5.543193,-2.465192,4.199868,-3.935421,5.641268,-5.329525,7.889044,-7.658715,-7.144628,-9.193946]],[[9.253497,7.149225,5.085680,8.290750,2.484654,1.324779,1.910559,6.062398,-3.189443,-8.998775,8.454458,-7.965937,-6.753026,-9.243048,3.898370],[-6.693419,7.800682,-2.445559,5.097979,-0.081129,-7.019573,-1.784841,2.368748,-4.513957,7.841538,0.858505,3.523806,0.968171,-4.812145,6.028788],[3.711608,-0.037805,1.943328,0.091371,8.679971,4.486301,9.332496,0.150371,-4.751008,0.760357,-4.182769,-0.440960,-5.149373,9.380446,0.343937],[-6.419441,1.425671,9.447467,8.512732,7.051376,-7.581166,2.900825,-4.864035,6.578356,-4.273942,-7.286163,6.242001,4.244227,4.013451,9.019965],[9.066036,3.006193,-4.678168,2.619316,5.041085,-6.338993,7.834454,3.373431,-1.354351,-7.160754,7.031516,7.226740,2.123828,-4.327622,-1.882838]],[[6.342820,3.653822,-5.452797,-8.145248,-3.338637,-8.789736,1.407240,-5.085726,-2.874879,3.697117,3.696762,5.443546,-6.126011,3.999491,6.252585],[-4.176768,3.325819,0.128296,3.034648,7.753718,1.411335,2.014100,-2.154170,-4.875932,-4.743545,3.111491,-5.681284,2.663123,-4.219988,-2.268414],[-8.233102,-0.039183,-4.209248,0.480929,8.796255,5.815453,-1.607741,-5.246937,-4.194928,5.643369,-7.193038,3.586711,-2.139512,1.441534,4.643248],[-0.648729,-8.177211,-2.522598,9.171396,1.701676,-2.535303,4.171460,9.135570,1.100728,-3.190123,-2.778845,-3.051017,-6.841865,-6.152817,5.626198],[9.872815,6.873201,-8.924378,-1.549172,4.854366,9.985046,4.980828,4.013618,-4.953793,-9.201469,2.314887,8.222743,-6.123747,-3.124741,-4.205663]]], dtype = "float64")#candidate|2832|(10, 5, 15)|const|float64
bop_2833 = relay.floor_divide(var_2831.astype('float64'), const_2832.astype('float64')) # shape=(10, 5, 15)
output = bop_2833
output2 = bop_2833
func_2839 = relay.Function([var_2831,], output)
mod['func_2839'] = func_2839
mod = relay.transform.InferType()(mod)
var_2840 = relay.var("var_2840", dtype = "float64", shape = ())#candidate|2840|()|var|float64
output = func_2839(var_2840)
func_2841 = relay.Function([var_2840], output)
mutated_mod['func_2841'] = func_2841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1983_call = mod.get_global_var('func_1983')
func_1985_call = mutated_mod.get_global_var('func_1985')
call_2854 = func_1983_call()
call_2855 = func_1983_call()
output = call_2854
output2 = call_2855
func_2856 = relay.Function([], output)
mod['func_2856'] = func_2856
mod = relay.transform.InferType()(mod)
mutated_mod['func_2856'] = func_2856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2856_call = mutated_mod.get_global_var('func_2856')
call_2857 = func_2856_call()
output = call_2857
func_2858 = relay.Function([], output)
mutated_mod['func_2858'] = func_2858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_956_call = mod.get_global_var('func_956')
func_958_call = mutated_mod.get_global_var('func_958')
call_2874 = relay.TupleGetItem(func_956_call(), 0)
call_2875 = relay.TupleGetItem(func_958_call(), 0)
var_2896 = relay.var("var_2896", dtype = "float32", shape = (9, 8, 3))#candidate|2896|(9, 8, 3)|var|float32
bop_2897 = relay.logical_xor(call_2874.astype('uint64'), relay.reshape(var_2896.astype('uint64'), relay.shape_of(call_2874))) # shape=(9, 8, 3)
bop_2900 = relay.logical_xor(call_2875.astype('uint64'), relay.reshape(var_2896.astype('uint64'), relay.shape_of(call_2875))) # shape=(9, 8, 3)
uop_2917 = relay.log10(var_2896.astype('float32')) # shape=(9, 8, 3)
output = relay.Tuple([bop_2897,uop_2917,])
output2 = relay.Tuple([bop_2900,uop_2917,])
func_2945 = relay.Function([var_2896,], output)
mod['func_2945'] = func_2945
mod = relay.transform.InferType()(mod)
var_2946 = relay.var("var_2946", dtype = "float32", shape = (9, 8, 3))#candidate|2946|(9, 8, 3)|var|float32
output = func_2945(var_2946)
func_2947 = relay.Function([var_2946], output)
mutated_mod['func_2947'] = func_2947
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1983_call = mod.get_global_var('func_1983')
func_1985_call = mutated_mod.get_global_var('func_1985')
call_2949 = func_1983_call()
call_2950 = func_1983_call()
uop_2960 = relay.exp(call_2949.astype('float64')) # shape=(9, 8, 3)
uop_2962 = relay.exp(call_2950.astype('float64')) # shape=(9, 8, 3)
output = relay.Tuple([uop_2960,])
output2 = relay.Tuple([uop_2962,])
func_2972 = relay.Function([], output)
mod['func_2972'] = func_2972
mod = relay.transform.InferType()(mod)
mutated_mod['func_2972'] = func_2972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2972_call = mutated_mod.get_global_var('func_2972')
call_2973 = func_2972_call()
output = call_2973
func_2974 = relay.Function([], output)
mutated_mod['func_2974'] = func_2974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2856_call = mod.get_global_var('func_2856')
func_2858_call = mutated_mod.get_global_var('func_2858')
call_2980 = func_2856_call()
call_2981 = func_2856_call()
output = call_2980
output2 = call_2981
func_2984 = relay.Function([], output)
mod['func_2984'] = func_2984
mod = relay.transform.InferType()(mod)
output = func_2984()
func_2985 = relay.Function([], output)
mutated_mod['func_2985'] = func_2985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mod.get_global_var('func_1619')
func_1621_call = mutated_mod.get_global_var('func_1621')
call_3039 = func_1619_call()
call_3040 = func_1619_call()
func_1609_call = mod.get_global_var('func_1609')
func_1610_call = mutated_mod.get_global_var('func_1610')
call_3041 = relay.TupleGetItem(func_1609_call(), 0)
call_3042 = relay.TupleGetItem(func_1610_call(), 0)
output = relay.Tuple([call_3039,call_3041,])
output2 = relay.Tuple([call_3040,call_3042,])
func_3043 = relay.Function([], output)
mod['func_3043'] = func_3043
mod = relay.transform.InferType()(mod)
output = func_3043()
func_3044 = relay.Function([], output)
mutated_mod['func_3044'] = func_3044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2461_call = mod.get_global_var('func_2461')
func_2462_call = mutated_mod.get_global_var('func_2462')
call_3059 = relay.TupleGetItem(func_2461_call(), 0)
call_3060 = relay.TupleGetItem(func_2462_call(), 0)
output = relay.Tuple([call_3059,])
output2 = relay.Tuple([call_3060,])
func_3081 = relay.Function([], output)
mod['func_3081'] = func_3081
mod = relay.transform.InferType()(mod)
mutated_mod['func_3081'] = func_3081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3081_call = mutated_mod.get_global_var('func_3081')
call_3082 = func_3081_call()
output = call_3082
func_3083 = relay.Function([], output)
mutated_mod['func_3083'] = func_3083
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3087 = relay.var("var_3087", dtype = "float64", shape = (8, 7, 6))#candidate|3087|(8, 7, 6)|var|float64
var_3088 = relay.var("var_3088", dtype = "float64", shape = (8, 7, 6))#candidate|3088|(8, 7, 6)|var|float64
bop_3089 = relay.less_equal(var_3087.astype('bool'), relay.reshape(var_3088.astype('bool'), relay.shape_of(var_3087))) # shape=(8, 7, 6)
func_2757_call = mod.get_global_var('func_2757')
func_2759_call = mutated_mod.get_global_var('func_2759')
call_3092 = func_2757_call()
call_3093 = func_2757_call()
func_2170_call = mod.get_global_var('func_2170')
func_2174_call = mutated_mod.get_global_var('func_2174')
var_3106 = relay.var("var_3106", dtype = "float64", shape = (64, 4))#candidate|3106|(64, 4)|var|float64
var_3107 = relay.var("var_3107", dtype = "uint32", shape = (1920,))#candidate|3107|(1920,)|var|uint32
call_3105 = relay.TupleGetItem(func_2170_call(relay.reshape(var_3106.astype('float64'), [16, 2, 8]), relay.reshape(var_3107.astype('uint32'), [1920,]), ), 1)
call_3108 = relay.TupleGetItem(func_2174_call(relay.reshape(var_3106.astype('float64'), [16, 2, 8]), relay.reshape(var_3107.astype('uint32'), [1920,]), ), 1)
output = relay.Tuple([bop_3089,call_3092,call_3105,var_3106,var_3107,])
output2 = relay.Tuple([bop_3089,call_3093,call_3108,var_3106,var_3107,])
func_3118 = relay.Function([var_3087,var_3088,var_3106,var_3107,], output)
mod['func_3118'] = func_3118
mod = relay.transform.InferType()(mod)
var_3119 = relay.var("var_3119", dtype = "float64", shape = (8, 7, 6))#candidate|3119|(8, 7, 6)|var|float64
var_3120 = relay.var("var_3120", dtype = "float64", shape = (8, 7, 6))#candidate|3120|(8, 7, 6)|var|float64
var_3121 = relay.var("var_3121", dtype = "float64", shape = (64, 4))#candidate|3121|(64, 4)|var|float64
var_3122 = relay.var("var_3122", dtype = "uint32", shape = (1920,))#candidate|3122|(1920,)|var|uint32
output = func_3118(var_3119,var_3120,var_3121,var_3122,)
func_3123 = relay.Function([var_3119,var_3120,var_3121,var_3122,], output)
mutated_mod['func_3123'] = func_3123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1009_call = mod.get_global_var('func_1009')
func_1011_call = mutated_mod.get_global_var('func_1011')
call_3150 = func_1009_call()
call_3151 = func_1009_call()
var_3160 = relay.var("var_3160", dtype = "float32", shape = (9, 8, 3))#candidate|3160|(9, 8, 3)|var|float32
bop_3161 = relay.equal(call_3150.astype('bool'), relay.reshape(var_3160.astype('bool'), relay.shape_of(call_3150))) # shape=(9, 8, 3)
bop_3164 = relay.equal(call_3151.astype('bool'), relay.reshape(var_3160.astype('bool'), relay.shape_of(call_3151))) # shape=(9, 8, 3)
output = relay.Tuple([bop_3161,])
output2 = relay.Tuple([bop_3164,])
func_3179 = relay.Function([var_3160,], output)
mod['func_3179'] = func_3179
mod = relay.transform.InferType()(mod)
mutated_mod['func_3179'] = func_3179
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3180 = relay.var("var_3180", dtype = "float32", shape = (9, 8, 3))#candidate|3180|(9, 8, 3)|var|float32
func_3179_call = mutated_mod.get_global_var('func_3179')
call_3181 = func_3179_call(var_3180)
output = call_3181
func_3182 = relay.Function([var_3180], output)
mutated_mod['func_3182'] = func_3182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2544_call = mod.get_global_var('func_2544')
func_2545_call = mutated_mod.get_global_var('func_2545')
call_3279 = func_2544_call()
call_3280 = func_2544_call()
var_3316 = relay.var("var_3316", dtype = "float32", shape = (9, 8, 3))#candidate|3316|(9, 8, 3)|var|float32
bop_3317 = relay.greater_equal(call_3279.astype('bool'), relay.reshape(var_3316.astype('bool'), relay.shape_of(call_3279))) # shape=(9, 8, 3)
bop_3320 = relay.greater_equal(call_3280.astype('bool'), relay.reshape(var_3316.astype('bool'), relay.shape_of(call_3280))) # shape=(9, 8, 3)
bop_3323 = relay.minimum(var_3316.astype('int16'), relay.reshape(call_3279.astype('int16'), relay.shape_of(var_3316))) # shape=(9, 8, 3)
bop_3326 = relay.minimum(var_3316.astype('int16'), relay.reshape(call_3280.astype('int16'), relay.shape_of(var_3316))) # shape=(9, 8, 3)
func_2170_call = mod.get_global_var('func_2170')
func_2174_call = mutated_mod.get_global_var('func_2174')
const_3333 = relay.const([-3.423505,9.909046,7.110101,1.837835,-4.285753,-5.558751,9.392733,-1.542658,-6.087019,8.685536,5.121599,-8.455118,2.434480,-8.649233,7.173371,-8.254462,5.136909,3.910166,-2.216364,-6.035190,-3.281197,-6.615817,-7.562046,2.445708,-2.118673,4.269570,0.275463,2.806871,1.088213,-2.250560,3.186816,-2.828531,-1.029749,-4.008611,-3.921133,4.577122,3.591131,-8.260446,2.704726,-8.980369,4.272919,9.504542,4.625442,0.386211,-9.413291,4.557336,-3.000448,-3.145016,2.536225,3.731025,3.366722,-0.146047,-5.744327,8.532418,-2.983792,4.047706,5.312559,6.912905,7.530130,4.980495,-5.321816,-4.980567,-9.550289,1.028588,5.605863,-0.280214,4.329803,3.533337,3.027761,8.847451,-3.989672,1.354686,7.511673,-9.596853,5.878259,7.843066,-6.152785,-2.626393,-2.928265,-0.316519,-4.948856,7.253300,5.170846,9.044481,9.622787,-8.957106,2.681791,5.021139,-5.133102,-3.799257,2.672672,2.347501,0.361999,-8.864155,5.792314,9.061252,3.604276,-6.133020,3.580410,-5.605697,-8.518796,-9.103594,-0.045510,0.715896,6.709509,2.911098,3.584961,-8.169315,-1.795062,-3.013904,8.519544,-0.654104,-5.993830,1.117790,-6.531295,-5.612706,-7.100853,5.801444,-2.918803,-4.706986,-5.342160,-5.651940,-4.095384,-5.516292,-8.771909,1.944869,-4.353371,-3.678599,-3.130106,-6.556166,8.381987,2.948375,4.981923,2.773496,6.093569,1.293717,2.351191,7.021484,-2.560021,-3.601751,3.375732,-4.288803,8.191713,-1.512624,-1.031735,3.177221,-0.646443,8.933466,7.391942,3.713954,-3.216305,-4.030647,5.435333,-9.532837,6.114175,-3.486672,-9.286855,-0.095170,6.075480,6.464187,1.969137,-4.435992,8.315739,8.959324,-7.006454,-2.273935,9.025261,-0.148820,-8.285881,-0.706296,3.679579,-3.414354,3.392221,-0.511927,-8.797579,-2.140248,-8.616911,5.526094,-9.751086,-4.368689,6.773491,-3.706160,5.214129,2.101850,8.408768,2.996981,-8.827289,-2.659369,-4.268534,5.634984,-7.376410,-0.778414,-2.011387,-7.864987,-8.171886,0.681730,5.530650,-3.498578,-5.090083,5.281457,6.756058,-8.705532,-3.159422,0.749970,2.284981,2.880307,-2.337030,-6.624170,2.848181,2.081071,0.351793,-2.180243,-8.159624,8.173688,-4.833789,-9.554422,9.798913,-4.270022,6.194613,-3.778111,-9.901980,-8.114801,3.633229,1.951092,-3.692164,-9.345684,5.564442,-5.407199,4.489417,-9.662546,-2.131965,2.719568,4.324045,-8.667020,3.415273,-3.246365,-7.433451,-8.262753,9.194204,9.087025,1.599159,-3.002970,-3.420355,-2.027569,-0.315111,4.866810,-3.509560,3.894342,-0.920978,-2.550609,-9.308406,4.799246,-0.360856,6.726957,5.736493,3.412892], dtype = "float64")#candidate|3333|(256,)|const|float64
var_3334 = relay.var("var_3334", dtype = "uint32", shape = (1920,))#candidate|3334|(1920,)|var|uint32
call_3332 = relay.TupleGetItem(func_2170_call(relay.reshape(const_3333.astype('float64'), [16, 2, 8]), relay.reshape(var_3334.astype('uint32'), [1920,]), ), 2)
call_3335 = relay.TupleGetItem(func_2174_call(relay.reshape(const_3333.astype('float64'), [16, 2, 8]), relay.reshape(var_3334.astype('uint32'), [1920,]), ), 2)
output = relay.Tuple([bop_3317,bop_3323,call_3332,const_3333,var_3334,])
output2 = relay.Tuple([bop_3320,bop_3326,call_3335,const_3333,var_3334,])
func_3363 = relay.Function([var_3316,var_3334,], output)
mod['func_3363'] = func_3363
mod = relay.transform.InferType()(mod)
mutated_mod['func_3363'] = func_3363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3363_call = mutated_mod.get_global_var('func_3363')
var_3365 = relay.var("var_3365", dtype = "float32", shape = (9, 8, 3))#candidate|3365|(9, 8, 3)|var|float32
var_3366 = relay.var("var_3366", dtype = "uint32", shape = (1920,))#candidate|3366|(1920,)|var|uint32
call_3364 = func_3363_call(var_3365,var_3366,)
output = call_3364
func_3367 = relay.Function([var_3365,var_3366,], output)
mutated_mod['func_3367'] = func_3367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1413_call = mod.get_global_var('func_1413')
func_1415_call = mutated_mod.get_global_var('func_1415')
call_3444 = func_1413_call()
call_3445 = func_1413_call()
output = relay.Tuple([call_3444,])
output2 = relay.Tuple([call_3445,])
func_3446 = relay.Function([], output)
mod['func_3446'] = func_3446
mod = relay.transform.InferType()(mod)
mutated_mod['func_3446'] = func_3446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3446_call = mutated_mod.get_global_var('func_3446')
call_3447 = func_3446_call()
output = call_3447
func_3448 = relay.Function([], output)
mutated_mod['func_3448'] = func_3448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1983_call = mod.get_global_var('func_1983')
func_1985_call = mutated_mod.get_global_var('func_1985')
call_3472 = func_1983_call()
call_3473 = func_1983_call()
func_1413_call = mod.get_global_var('func_1413')
func_1415_call = mutated_mod.get_global_var('func_1415')
call_3483 = func_1413_call()
call_3484 = func_1413_call()
const_3490 = relay.const([[[-2.901056,6.117892,-1.812988],[3.483979,9.657887,9.026016],[2.070032,-1.416616,0.843089],[6.441346,6.343833,-8.570613],[-1.115183,-1.747926,-5.907434],[0.691222,3.228108,7.524607],[-9.404765,-1.095263,-0.373664],[-7.389013,1.843802,6.328955]],[[-9.224296,9.991071,-5.322041],[-2.853608,-7.380092,1.042595],[-8.001453,1.712184,3.692146],[1.184471,7.169601,0.089399],[3.995186,0.180671,-6.497344],[-8.967809,1.213131,-7.484179],[2.151104,5.979472,-3.739242],[-2.252961,5.782908,-1.822376]],[[9.767844,-2.200756,9.127630],[-4.650927,-2.167076,1.609999],[-9.654347,0.316617,3.856342],[-5.221902,-3.394387,9.441690],[-1.668839,-7.034369,6.019230],[-7.065696,-3.100962,-1.601023],[-2.927390,2.178388,-5.738171],[8.104266,-1.911464,1.999178]],[[-1.921461,-2.128026,6.949566],[9.085647,-0.956937,9.927241],[-9.288286,-2.387554,-3.130330],[-0.712521,6.903743,4.532781],[2.302951,5.236906,6.339842],[4.304082,-1.539822,5.726368],[8.548167,8.944274,-6.866512],[-5.190060,-4.451976,1.039343]],[[0.162728,2.856064,5.584392],[-8.529257,3.546779,-0.674407],[-9.992031,-7.436767,-3.206466],[-2.331572,3.363776,7.481868],[-0.336525,-2.826019,-6.862774],[-2.030758,-9.524763,-4.493991],[-2.089338,-4.118572,-2.391249],[3.084312,-5.385164,4.592628]],[[2.814318,4.527195,9.579018],[-1.712797,-1.680225,-2.023632],[-8.682719,-0.296800,-7.665632],[5.726949,0.738466,-0.114400],[-6.334658,4.107191,-6.332587],[1.283594,-1.311583,-1.198792],[1.092676,-3.990860,5.964724],[-5.846807,1.967994,-9.344467]],[[-6.996637,-1.726124,8.109200],[7.966032,-3.206725,1.811393],[-1.148335,-7.097025,6.331092],[-4.332495,1.304385,-4.701958],[-2.088148,7.451240,5.473112],[5.533019,6.336905,2.129171],[6.451157,-9.270537,9.869295],[-8.984248,6.030673,2.427989]],[[1.610928,6.350288,-5.012102],[6.356541,8.937977,-8.303009],[4.518174,-6.444407,4.917092],[1.465559,-0.189818,3.363974],[0.483743,2.773693,-6.947902],[2.122756,3.177503,7.665941],[-5.720063,-0.330805,3.670476],[-0.346578,-1.314120,7.727044]],[[2.795538,-0.272958,-7.620348],[8.612648,8.595031,-4.773630],[4.942279,1.097830,6.726448],[-6.944667,-2.427249,5.199639],[4.895435,-4.181823,-3.140435],[-9.074698,-0.766528,7.296735],[-7.145837,3.405509,-2.118631],[6.126429,9.737255,-4.999444]]], dtype = "float32")#candidate|3490|(9, 8, 3)|const|float32
bop_3491 = relay.bitwise_and(call_3483.astype('uint16'), relay.reshape(const_3490.astype('uint16'), relay.shape_of(call_3483))) # shape=(9, 8, 3)
bop_3494 = relay.bitwise_and(call_3484.astype('uint16'), relay.reshape(const_3490.astype('uint16'), relay.shape_of(call_3484))) # shape=(9, 8, 3)
output = relay.Tuple([call_3472,bop_3491,])
output2 = relay.Tuple([call_3473,bop_3494,])
func_3509 = relay.Function([], output)
mod['func_3509'] = func_3509
mod = relay.transform.InferType()(mod)
output = func_3509()
func_3510 = relay.Function([], output)
mutated_mod['func_3510'] = func_3510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3446_call = mod.get_global_var('func_3446')
func_3448_call = mutated_mod.get_global_var('func_3448')
call_3518 = relay.TupleGetItem(func_3446_call(), 0)
call_3519 = relay.TupleGetItem(func_3448_call(), 0)
func_113_call = mod.get_global_var('func_113')
func_116_call = mutated_mod.get_global_var('func_116')
const_3542 = relay.const(-4.190301, dtype = "float64")#candidate|3542|()|const|float64
call_3541 = func_113_call(relay.reshape(const_3542.astype('float64'), []))
call_3543 = func_113_call(relay.reshape(const_3542.astype('float64'), []))
output = relay.Tuple([call_3518,call_3541,const_3542,])
output2 = relay.Tuple([call_3519,call_3543,const_3542,])
func_3556 = relay.Function([], output)
mod['func_3556'] = func_3556
mod = relay.transform.InferType()(mod)
mutated_mod['func_3556'] = func_3556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3556_call = mutated_mod.get_global_var('func_3556')
call_3557 = func_3556_call()
output = call_3557
func_3558 = relay.Function([], output)
mutated_mod['func_3558'] = func_3558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2972_call = mod.get_global_var('func_2972')
func_2974_call = mutated_mod.get_global_var('func_2974')
call_3559 = relay.TupleGetItem(func_2972_call(), 0)
call_3560 = relay.TupleGetItem(func_2974_call(), 0)
func_76_call = mod.get_global_var('func_76')
func_79_call = mutated_mod.get_global_var('func_79')
const_3562 = relay.const([[9,-1,-7,-5,-3,4,2,-10,7,-8,9,-2,1,2,4,-3,4,-7,5,1,4,9,-3,7,-6,-8,2,9,-4,5,7,-10,-3,5,3,-5,1,3,2,5,4,-4,-5,-2,-6,-8,6,-5,9,5,5,-8,-4,2,8,-4,3,1,-3,-7,-9,-9,5,1,5,3,-8,10,-2,5],[-2,-4,-7,2,-5,6,-4,-8,2,-2,-7,-10,-7,-4,5,-9,-8,-1,-8,-6,4,7,-8,6,4,8,-4,-6,-9,8,-10,10,-9,-5,-5,-10,-5,-6,3,5,-1,-1,-3,4,7,-5,-8,-7,7,-6,4,-9,4,-2,-7,-4,-1,-3,-2,-6,8,6,-8,7,-6,6,-8,9,-10,8],[-7,8,-7,-2,-10,8,10,6,-6,1,-5,-1,4,6,10,-5,-8,3,-6,4,3,-5,-5,-1,5,4,3,-4,5,2,6,2,-2,1,2,-3,-9,-10,-9,-7,4,-6,-9,3,4,9,5,-6,-6,5,2,3,-6,8,-3,-2,10,-6,-10,-3,6,-4,5,8,-7,-1,10,-2,6,-4],[7,-8,5,6,-4,-10,2,1,-6,-1,9,1,6,6,3,5,-7,7,-8,7,-1,-2,3,-10,-10,9,3,-1,-3,-4,-6,-4,-1,-4,1,9,-8,-5,-4,-9,8,-6,-8,-3,-1,-5,4,-1,-10,4,-4,-5,3,3,-9,-2,10,1,4,-9,8,3,5,9,-6,-1,5,3,8,-7],[-8,-5,6,6,-7,-4,-1,9,8,-1,10,-5,8,4,1,4,-10,-8,4,-6,-9,7,7,5,-5,-10,-10,1,2,-7,-7,-4,9,-3,6,-5,-10,-4,-10,4,7,2,10,7,-9,5,-5,-2,9,-9,-5,-9,-7,-3,3,-2,-1,2,-8,-3,3,-2,7,7,9,2,-10,-8,5,4],[7,2,10,9,-3,4,10,-8,-2,-2,1,-3,-6,-2,2,-1,-1,7,9,1,10,-9,3,-7,2,-4,-5,8,9,2,-3,10,-8,-9,-5,-8,-6,-5,-4,-4,4,-1,-6,-8,-6,-6,-3,-5,3,9,-6,5,4,1,-4,4,4,7,-2,-4,-5,-9,7,1,-10,10,-7,-8,-8,-9],[-5,-10,-8,-8,2,-1,4,-5,-6,1,-9,1,-7,-9,9,7,2,-4,8,5,6,7,7,-1,2,-8,2,-7,10,5,-3,-5,4,7,3,-2,-7,-9,2,-5,1,-3,5,-3,7,6,2,7,1,8,6,-3,8,5,-9,4,8,-2,-9,-7,4,-8,-5,4,1,-7,3,-9,-1,1],[-7,-9,-2,7,7,10,7,2,7,5,-10,-4,-4,4,-9,7,-1,2,-9,-7,-3,10,8,-2,-7,-4,3,2,3,3,2,-8,6,6,-9,4,1,1,-5,4,-2,-3,-8,-2,-10,3,-7,-4,-10,-8,5,-2,7,6,6,6,-10,-1,-3,-7,10,-4,2,-9,8,3,1,-10,9,-10],[7,3,6,-6,-8,1,-5,-4,3,-9,-1,6,8,-10,-3,-1,6,-8,9,3,-8,-5,9,8,-3,7,-1,-5,9,5,-6,2,10,6,3,7,4,-4,1,7,1,7,-6,-3,8,7,-4,-7,9,6,-5,-3,4,1,9,9,-1,4,-9,-2,-4,-10,-8,-7,-2,-10,3,-3,-3,2],[4,4,6,-5,-6,1,-8,10,-9,4,9,8,9,9,-8,6,2,1,9,-4,-5,-8,-7,-8,5,-10,5,-8,-9,-8,10,3,3,4,2,-10,-5,9,-7,10,8,-8,-8,-9,3,-6,-9,-7,-4,8,-8,-4,-7,7,-7,-5,5,-8,-2,-9,-4,10,-5,8,7,-9,4,-10,-4,4],[1,6,5,-10,3,-1,-8,10,7,5,4,9,-5,1,-5,3,-4,-4,5,5,-7,2,-7,-9,10,8,-7,-4,-7,6,-9,8,7,2,9,-7,6,-10,-4,7,4,-10,2,7,-10,-1,-9,-2,-2,8,2,8,7,-10,8,4,3,-2,9,-4,2,8,6,-8,4,2,3,5,9,-10],[-3,8,10,10,-1,10,2,5,-10,8,10,2,-9,3,4,-4,10,10,-4,-1,7,-8,-1,-6,-7,7,-4,3,7,3,9,-8,-1,-9,1,10,3,-6,5,5,8,-1,2,8,-10,-3,-8,8,-9,4,8,9,-4,-6,-9,-10,5,-9,-5,-8,-8,4,4,-5,8,5,5,-5,-9,9]], dtype = "uint8")#candidate|3562|(12, 70)|const|uint8
call_3561 = relay.TupleGetItem(func_76_call(relay.reshape(const_3562.astype('uint8'), [12, 14, 5])), 0)
call_3563 = relay.TupleGetItem(func_79_call(relay.reshape(const_3562.astype('uint8'), [12, 14, 5])), 0)
bop_3567 = relay.maximum(const_3562.astype('uint8'), relay.reshape(call_3561.astype('uint8'), relay.shape_of(const_3562))) # shape=(12, 70)
bop_3570 = relay.maximum(const_3562.astype('uint8'), relay.reshape(call_3563.astype('uint8'), relay.shape_of(const_3562))) # shape=(12, 70)
func_1147_call = mod.get_global_var('func_1147')
func_1151_call = mutated_mod.get_global_var('func_1151')
const_3590 = relay.const([[-4,-10,-2,-10,10,4,8,-5,1,6,-9,1],[9,-8,9,-1,-4,9,-4,5,-2,9,10,-2],[-3,2,7,3,1,9,3,2,-10,5,9,-9],[10,-10,2,-1,10,5,7,5,1,-7,-3,2]], dtype = "uint16")#candidate|3590|(4, 12)|const|uint16
var_3591 = relay.var("var_3591", dtype = "int64", shape = (168,))#candidate|3591|(168,)|var|int64
call_3589 = relay.TupleGetItem(func_1147_call(relay.reshape(const_3590.astype('uint16'), [6, 4, 2]), relay.reshape(const_3590.astype('uint16'), [6, 4, 2]), relay.reshape(var_3591.astype('int64'), [168,]), ), 1)
call_3592 = relay.TupleGetItem(func_1151_call(relay.reshape(const_3590.astype('uint16'), [6, 4, 2]), relay.reshape(const_3590.astype('uint16'), [6, 4, 2]), relay.reshape(var_3591.astype('int64'), [168,]), ), 1)
func_2726_call = mod.get_global_var('func_2726')
func_2728_call = mutated_mod.get_global_var('func_2728')
var_3600 = relay.var("var_3600", dtype = "int8", shape = (1, 36))#candidate|3600|(1, 36)|var|int8
call_3599 = relay.TupleGetItem(func_2726_call(relay.reshape(var_3600.astype('int8'), [36, 1])), 0)
call_3601 = relay.TupleGetItem(func_2728_call(relay.reshape(var_3600.astype('int8'), [36, 1])), 0)
func_760_call = mod.get_global_var('func_760')
func_764_call = mutated_mod.get_global_var('func_764')
var_3607 = relay.var("var_3607", dtype = "int16", shape = ())#candidate|3607|()|var|int16
var_3608 = relay.var("var_3608", dtype = "int16", shape = (140,))#candidate|3608|(140,)|var|int16
call_3606 = func_760_call(relay.reshape(var_3607.astype('int16'), []), relay.reshape(var_3608.astype('int16'), [10, 7, 2]), )
call_3609 = func_760_call(relay.reshape(var_3607.astype('int16'), []), relay.reshape(var_3608.astype('int16'), [10, 7, 2]), )
func_3081_call = mod.get_global_var('func_3081')
func_3083_call = mutated_mod.get_global_var('func_3083')
call_3612 = relay.TupleGetItem(func_3081_call(), 0)
call_3613 = relay.TupleGetItem(func_3083_call(), 0)
output = relay.Tuple([call_3559,bop_3567,call_3589,const_3590,var_3591,call_3599,var_3600,call_3606,var_3607,var_3608,call_3612,])
output2 = relay.Tuple([call_3560,bop_3570,call_3592,const_3590,var_3591,call_3601,var_3600,call_3609,var_3607,var_3608,call_3613,])
func_3618 = relay.Function([var_3591,var_3600,var_3607,var_3608,], output)
mod['func_3618'] = func_3618
mod = relay.transform.InferType()(mod)
var_3619 = relay.var("var_3619", dtype = "int64", shape = (168,))#candidate|3619|(168,)|var|int64
var_3620 = relay.var("var_3620", dtype = "int8", shape = (1, 36))#candidate|3620|(1, 36)|var|int8
var_3621 = relay.var("var_3621", dtype = "int16", shape = ())#candidate|3621|()|var|int16
var_3622 = relay.var("var_3622", dtype = "int16", shape = (140,))#candidate|3622|(140,)|var|int16
output = func_3618(var_3619,var_3620,var_3621,var_3622,)
func_3623 = relay.Function([var_3619,var_3620,var_3621,var_3622,], output)
mutated_mod['func_3623'] = func_3623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mod.get_global_var('func_1619')
func_1621_call = mutated_mod.get_global_var('func_1621')
call_3659 = func_1619_call()
call_3660 = func_1619_call()
func_1147_call = mod.get_global_var('func_1147')
func_1151_call = mutated_mod.get_global_var('func_1151')
const_3671 = relay.const([[9,-10,-2,-1,4,-10,-3,4,6,8,-5,4],[-4,10,2,7,10,8,-8,4,-7,3,-9,2],[5,5,-4,3,-9,9,-7,-5,-6,10,-2,-7],[1,10,7,7,9,-1,-4,1,5,5,8,2]], dtype = "uint16")#candidate|3671|(4, 12)|const|uint16
var_3672 = relay.var("var_3672", dtype = "int64", shape = (168,))#candidate|3672|(168,)|var|int64
call_3670 = relay.TupleGetItem(func_1147_call(relay.reshape(const_3671.astype('uint16'), [6, 4, 2]), relay.reshape(const_3671.astype('uint16'), [6, 4, 2]), relay.reshape(var_3672.astype('int64'), [168,]), ), 2)
call_3673 = relay.TupleGetItem(func_1151_call(relay.reshape(const_3671.astype('uint16'), [6, 4, 2]), relay.reshape(const_3671.astype('uint16'), [6, 4, 2]), relay.reshape(var_3672.astype('int64'), [168,]), ), 2)
output = relay.Tuple([call_3659,call_3670,const_3671,var_3672,])
output2 = relay.Tuple([call_3660,call_3673,const_3671,var_3672,])
func_3680 = relay.Function([var_3672,], output)
mod['func_3680'] = func_3680
mod = relay.transform.InferType()(mod)
mutated_mod['func_3680'] = func_3680
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3681 = relay.var("var_3681", dtype = "int64", shape = (168,))#candidate|3681|(168,)|var|int64
func_3680_call = mutated_mod.get_global_var('func_3680')
call_3682 = func_3680_call(var_3681)
output = call_3682
func_3683 = relay.Function([var_3681], output)
mutated_mod['func_3683'] = func_3683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2568_call = mod.get_global_var('func_2568')
func_2570_call = mutated_mod.get_global_var('func_2570')
call_3698 = func_2568_call()
call_3699 = func_2568_call()
output = relay.Tuple([call_3698,])
output2 = relay.Tuple([call_3699,])
func_3708 = relay.Function([], output)
mod['func_3708'] = func_3708
mod = relay.transform.InferType()(mod)
mutated_mod['func_3708'] = func_3708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3708_call = mutated_mod.get_global_var('func_3708')
call_3709 = func_3708_call()
output = call_3709
func_3710 = relay.Function([], output)
mutated_mod['func_3710'] = func_3710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3043_call = mod.get_global_var('func_3043')
func_3044_call = mutated_mod.get_global_var('func_3044')
call_3763 = relay.TupleGetItem(func_3043_call(), 0)
call_3764 = relay.TupleGetItem(func_3044_call(), 0)
output = call_3763
output2 = call_3764
func_3767 = relay.Function([], output)
mod['func_3767'] = func_3767
mod = relay.transform.InferType()(mod)
output = func_3767()
func_3768 = relay.Function([], output)
mutated_mod['func_3768'] = func_3768
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3788 = relay.var("var_3788", dtype = "float32", shape = (9, 3, 4))#candidate|3788|(9, 3, 4)|var|float32
uop_3789 = relay.cosh(var_3788.astype('float32')) # shape=(9, 3, 4)
var_3793 = relay.var("var_3793", dtype = "float32", shape = (9, 3, 4))#candidate|3793|(9, 3, 4)|var|float32
bop_3794 = relay.bitwise_or(uop_3789.astype('int16'), relay.reshape(var_3793.astype('int16'), relay.shape_of(uop_3789))) # shape=(9, 3, 4)
output = bop_3794
output2 = bop_3794
func_3803 = relay.Function([var_3788,var_3793,], output)
mod['func_3803'] = func_3803
mod = relay.transform.InferType()(mod)
var_3804 = relay.var("var_3804", dtype = "float32", shape = (9, 3, 4))#candidate|3804|(9, 3, 4)|var|float32
var_3805 = relay.var("var_3805", dtype = "float32", shape = (9, 3, 4))#candidate|3805|(9, 3, 4)|var|float32
output = func_3803(var_3804,var_3805,)
func_3806 = relay.Function([var_3804,var_3805,], output)
mutated_mod['func_3806'] = func_3806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1459_call = mod.get_global_var('func_1459')
func_1460_call = mutated_mod.get_global_var('func_1460')
call_3894 = func_1459_call()
call_3895 = func_1459_call()
func_2461_call = mod.get_global_var('func_2461')
func_2462_call = mutated_mod.get_global_var('func_2462')
call_3900 = relay.TupleGetItem(func_2461_call(), 0)
call_3901 = relay.TupleGetItem(func_2462_call(), 0)
output = relay.Tuple([call_3894,call_3900,])
output2 = relay.Tuple([call_3895,call_3901,])
func_3904 = relay.Function([], output)
mod['func_3904'] = func_3904
mod = relay.transform.InferType()(mod)
output = func_3904()
func_3905 = relay.Function([], output)
mutated_mod['func_3905'] = func_3905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2568_call = mod.get_global_var('func_2568')
func_2570_call = mutated_mod.get_global_var('func_2570')
call_3920 = func_2568_call()
call_3921 = func_2568_call()
var_3922 = relay.var("var_3922", dtype = "float64", shape = (10, 11, 14))#candidate|3922|(10, 11, 14)|var|float64
bop_3923 = relay.less_equal(call_3920.astype('bool'), relay.reshape(var_3922.astype('bool'), relay.shape_of(call_3920))) # shape=(10, 11, 14)
bop_3926 = relay.less_equal(call_3921.astype('bool'), relay.reshape(var_3922.astype('bool'), relay.shape_of(call_3921))) # shape=(10, 11, 14)
func_1929_call = mod.get_global_var('func_1929')
func_1932_call = mutated_mod.get_global_var('func_1932')
var_3928 = relay.var("var_3928", dtype = "int64", shape = (168,))#candidate|3928|(168,)|var|int64
const_3929 = relay.const([[-5,7,9,8,5,-9,-5,1,2,9,-10,-6,8,8,5,-8,8,-6,7,5,1,4,-1,-4],[-1,-4,5,2,7,-1,-1,-3,-6,-5,6,-6,-8,-3,-5,9,-1,7,-3,1,8,-2,-5,-7]], dtype = "uint16")#candidate|3929|(2, 24)|const|uint16
call_3927 = relay.TupleGetItem(func_1929_call(relay.reshape(var_3928.astype('int64'), [168,]), relay.reshape(const_3929.astype('uint16'), [1, 48]), ), 5)
call_3930 = relay.TupleGetItem(func_1932_call(relay.reshape(var_3928.astype('int64'), [168,]), relay.reshape(const_3929.astype('uint16'), [1, 48]), ), 5)
var_3934 = relay.var("var_3934", dtype = "int64", shape = (14, 3, 7))#candidate|3934|(14, 3, 7)|var|int64
bop_3935 = relay.right_shift(call_3927.astype('int32'), relay.reshape(var_3934.astype('int32'), relay.shape_of(call_3927))) # shape=(14, 3, 7)
bop_3938 = relay.right_shift(call_3930.astype('int32'), relay.reshape(var_3934.astype('int32'), relay.shape_of(call_3930))) # shape=(14, 3, 7)
uop_3941 = relay.acos(call_3927.astype('float64')) # shape=(14, 3, 7)
uop_3943 = relay.acos(call_3930.astype('float64')) # shape=(14, 3, 7)
func_3509_call = mod.get_global_var('func_3509')
func_3510_call = mutated_mod.get_global_var('func_3510')
call_3946 = relay.TupleGetItem(func_3509_call(), 1)
call_3947 = relay.TupleGetItem(func_3510_call(), 1)
uop_3954 = relay.erf(uop_3941.astype('float32')) # shape=(14, 3, 7)
uop_3956 = relay.erf(uop_3943.astype('float32')) # shape=(14, 3, 7)
func_2080_call = mod.get_global_var('func_2080')
func_2084_call = mutated_mod.get_global_var('func_2084')
var_3960 = relay.var("var_3960", dtype = "float64", shape = (288,))#candidate|3960|(288,)|var|float64
const_3961 = relay.const([[-5.846234],[-5.071874],[-2.616889],[-7.457769],[-7.575117],[8.001844],[6.480332],[-2.983749],[6.363996],[5.758855],[-8.305619],[-0.500171],[0.812843],[-8.812008],[-9.861361],[-6.641805],[-4.152987],[3.122994],[7.792984],[0.986528],[7.291248],[4.353303],[6.345317],[7.758779],[-8.721925],[6.326021],[-7.614863],[8.995454],[1.586153],[8.121956],[-9.742468],[-6.978840],[5.706982],[-5.409546],[5.134595],[-6.388338],[-7.784973],[6.268997],[7.306374],[-2.956026],[7.126422],[-6.099495],[-0.290879],[1.620512],[-2.785876],[2.613031],[-8.403318],[5.743543],[4.530293],[8.837070],[-6.790845],[0.991837],[6.975293],[-0.942885],[5.925450],[-1.286125],[-7.682430],[-2.618386],[-8.720366],[-0.406916],[8.360726],[-5.038285],[2.996563],[3.082825],[3.904178],[-5.452260],[-5.948210],[-9.670090],[-0.165960],[-2.536496],[-5.587216],[8.501345],[-6.323992],[1.441416],[9.335821],[8.604573],[6.399726],[9.314798],[5.869588],[8.843990],[4.289670],[-7.304259],[-8.170865],[0.183453],[-0.279322],[-6.129365],[-6.422041],[4.322134],[-8.626530],[-5.428247],[9.401695],[-8.800318],[9.682352],[2.780552],[-2.974672],[0.794403],[-7.688931],[1.549186],[-6.517987],[-0.913562],[-6.686475],[9.422224],[-8.685132],[2.259470],[3.940735],[-1.653415],[9.936149],[5.144084],[-1.801018],[-2.818663],[-5.004749],[-8.766842]], dtype = "float64")#candidate|3961|(112, 1)|const|float64
const_3962 = relay.const([-1.143673,-4.581421,-2.000163,-0.761178,6.563705,6.260737,8.941767,5.111801,-7.130794,1.122838,8.734261,9.602966,6.784406,7.785965,6.482603,-6.211882,-4.835786,8.631702,6.788317,7.788500,8.926715,3.021376,-9.346866,-1.010602,-4.152978,-8.468050,1.804105,0.661431,5.666081,3.351555,4.501791,6.245957,1.050987,-0.207685,-2.345515,3.430004,4.476354,-1.242884,8.254797,-8.796578,-5.245860,6.052539,9.163219,-7.363261,9.579825,9.435945,4.434555,-2.097109,0.095478,5.095842,-0.015754,-4.457201,-7.513701,-1.498091,4.642013,8.769919,7.955482,1.696286,8.747179,2.438022,1.565926,9.831803,8.096109,1.119122,-8.098384,-7.822520,1.322898,-7.819603,8.340913,4.569314,-3.304547,-5.892036,-9.444965,-1.299154,2.402067,-5.723140,-3.823325,-0.064533,-3.971600,1.730099,-2.620581,0.538046,-6.184503,7.395469,-0.957363,-7.099387,7.013091,-2.117294,-0.174538,6.008251,0.340030,-1.617025,4.444936,3.292660,8.492948,2.142837,6.129331,3.195927,-3.636724,9.822878,-2.677102,5.654823,0.453439,9.924121,-5.564735,8.453985,-0.408064,-7.492395,-7.156403,7.139153,-4.238938,-3.962540,-7.887369,8.949069,-9.458202,6.347949,-1.587289,5.234008,4.833511,5.094433,6.430574,0.384798,-6.600428,-1.794938,6.176458,-7.711510,-5.048383,1.345342,9.664871,7.584968,-5.883998,-2.396780,-6.844035,-6.467130,-5.405095,7.853862,-3.422349,6.135732,-0.274318,-0.659771,-2.383182,0.051019,8.931599,5.625277,5.606618,-0.426506,6.047734,-2.490795,-2.290570,9.550831,-9.582248,1.675880,3.695619,-8.371967,-4.365894,-9.440650,3.539366,9.787935,-1.548432,2.501992,5.502540,3.927839,-4.659126,-1.152977,-9.473798,7.318563,5.918575,-7.292320,-1.715560,-0.299918,2.466659,9.183694,3.367207,9.147029,3.313578,0.352272,-4.224043,2.902483,1.477705,-4.218306,-9.144158,-4.484726,-2.729918,-9.488539,4.746707,6.221186,1.207534,-5.523003,1.330204,5.423667,-8.540759,7.104572,4.584086,-9.380250,2.134619,4.779909,-8.889570,6.290999,-7.900571,4.751881,-2.009710,-8.740018,5.549290,-4.962016,-4.394240,2.550900,2.484133,7.045065,-8.516687,3.349170,-7.597127,9.764026,-2.494759,7.302717,-3.998535,0.382899,0.730531,1.023130,-4.632817,0.673507,6.510082,5.389725,-8.235179,1.025842,-7.185811,-1.176049,9.238022,-7.177609,-0.310079,-5.634489,-8.362802,4.655544,7.740512,9.824799,7.895144,-0.359685,0.765334,7.458946,0.777769,-2.893501,8.587533,-5.817627,-7.761301,-0.884822,1.813089,-8.807894,-6.662122,3.624847,-4.668774,0.726370,-7.113287,-7.430235,-7.128184,1.224090,-8.052735,5.208666,-1.804525,1.756085,-4.078411,6.341630,-2.431713,-4.978111,1.344419,0.478536,-1.470696,3.683286,-6.484020,-3.155332,3.503567,-5.796851,-5.979096,0.343423,-7.586628,1.430036,7.233995,-2.340176,-2.091469,-2.354731,-8.916080,9.622587,9.573148,5.197797,-1.447753,-9.136550,7.724793,-5.178925,-1.266670,-7.816245,-1.166953,-1.344464,-0.490307,9.957831,8.637795,6.233992,5.397805,-3.925601,8.134407,4.595801,8.196586,-1.226167,-1.506876,-1.553330,-3.631943,3.252937,2.296861,-7.033875,-2.071649,-2.821849,-5.216247,-5.198821,3.144460,-9.407371,-7.900285,-0.071596,7.773524,0.218940,6.196789,-2.939791,-4.910251,-4.366818,4.544114,-8.338088,5.021934,1.258004,-8.800038,2.566121,-9.539903,-1.304846,5.832066,8.336911,5.188993,2.285705,-4.281311,0.134739,1.134458,-5.987763,-3.169783,0.707380,-3.711530,4.899212,-4.514691,-9.655206,-5.268907,1.982047,1.156205,-7.944618,9.851622,-8.340145,-4.382969,2.167876,8.926561,-9.800561,-1.483112,1.813629,6.025674,2.396421,-2.029555,-8.154911,-7.329536,-9.276743,-8.579858,2.014614,-4.974691,-9.157342,1.168475,5.008509,5.319787,-0.648263,1.348736,-6.759019,2.704265,-4.884906,2.572887,-5.897714,-2.870019,-3.949281,-0.684248,5.182523,8.754048,0.131064,0.781003,6.812979,-3.988106,-5.621960,-4.015683,-4.673324,-6.719526,4.542909,-7.004395,1.709623,-1.500613,7.568831,2.524945,-8.729393,-1.902391,7.622287,-3.498629,2.087086,1.736564,-6.393047,-3.699140,6.741531,9.226577,1.616535,-0.233851,-7.931784,-5.708742,3.593056,-4.236632,-8.293537,5.292199,-8.372355,-9.570449,0.972236,0.091099,0.837718,-6.545703,-5.161001,4.370158,1.761564,7.697864,5.157980,-7.164833,5.465610,-7.578504,8.655858,-3.537262,9.131029,5.048188,-9.387424,-5.250864,7.422548,-9.209583,-3.635434,5.768069,6.888379,1.610381,-0.559880,-3.472616,3.468329,4.876877,-1.228267,-9.847505,-8.631964,-2.974694,4.677764,7.112143,-7.017171,-1.372868,0.378842,-6.909642,-3.570035,3.424049,5.833588,8.417605,-2.658042,-2.112673,-0.764116,-2.674810,-9.599986,7.175873,1.833040,-2.786577,-7.806991,-4.322656,-5.106144,-8.965008,5.117694,9.440043,7.746680,1.621851,4.143280,0.640766,-4.464332,2.161078,-7.958312,-0.992800,1.995372,7.576956,-5.974064,6.290522,3.777929,3.078789,-2.700662,3.729684,1.791145,8.096695,-1.833774,-2.561026,5.305720,-6.659449,-7.771897,5.224897,2.878235,7.985375,1.922863,3.848814,8.129491,8.471894,8.260357,0.602602,7.754620,-9.382609,0.921495,-1.710837,-9.161004,3.298175,-3.588722,-0.408503,0.900931,8.698353,-8.363397,9.303313,3.282427,1.134711,-5.099750,-5.838845,-3.617758,2.222579,6.076917,-6.410571,-6.472034,3.324512,-2.899515,1.831408,9.090493,-8.497655,3.875542,2.491055,-9.890010,6.470008,-1.890602,-6.383983,-9.679032,-7.870082,-4.328697,8.724086,-0.503573,2.569988,-8.676664,5.564468,5.031849,-6.856283,8.125875,1.491403,-5.050803,-0.578220,-8.932456,2.692008,8.700861,2.351118,-5.742072,-1.584990,8.115126,-5.266731,-3.537642,2.329439,5.452738,-7.797325,-1.904259,5.723062,4.582916,4.228266,-9.164856,-4.585949,-1.073918,9.585773,0.311524,-2.441060,3.239743,-8.054521,-9.330047,5.076717,2.875442,-1.059531,-9.808621,1.428395,-9.191806,2.227198,9.336899,-4.932218,0.338406,1.294138,1.050406,7.820233,-0.913226,5.720352,-2.503563,-7.466619,-9.918267,7.458850,-3.272783,-6.423114,0.810057,-6.248101,-9.966539,-9.082880,-4.165865,-7.701389,3.837900,9.646148,4.597791,-5.380529,7.174281,-8.218204,-6.367649,-6.508438,-8.113046,3.589965,0.877225,-6.705400,-4.201349,8.861165,-5.984301,-2.993695,-9.766247,0.391882,-6.338030,2.892961,5.985739,-4.588125,1.315434,-6.771011,5.217444,6.167946,4.975740,-3.513876,-4.033879,6.619847,1.823972,0.380045,2.999588,-8.582536,-3.422615,4.615015,7.060573,6.098100,4.417879,-4.408513,1.129802,1.119354,9.282875,-0.092626,7.496709,8.878503,-1.765751,-1.757422,5.075004,1.200707,-7.013043,4.905046,-4.006689,-6.050726,0.370095,7.438785,-4.372151,5.646862,-7.170230,-7.141552,6.056208,7.806248,-4.764186,7.284558,-7.785471,5.883580,-9.953308,-9.673047,-4.146833,-5.867420,0.225517,-7.667492,-3.242154,0.455221,-6.131396,-7.388491,3.101288,3.150075,-9.364217,-1.411301,4.744989,9.586600,-7.157294,0.227840,3.680471,-3.892231,6.483340,-3.148362,0.924521,-5.591934,4.871275,2.752603,-6.549486,-5.094617,-0.870847,3.301672,7.675649,6.653476,-0.800456,-3.394489,-7.680807,-8.337481,7.768061,3.527714,0.195773,-7.912192,-4.186881,2.332391,-4.033401,1.224859,-8.776931,3.100607,-7.380075,-0.465836,5.004685,-4.777748,7.000018,7.620830,5.333772,1.263896,-4.957114,-6.004782,-4.347722,-2.567602,2.595992,6.526016,-0.609244,4.529288,2.061762,-6.416246,-5.292896,-5.193196,8.552804,3.293457,-7.719933,4.469139,-7.818559,0.037961,-0.899192,-3.683674,-7.896020,5.329235,-6.318626,3.520068,-2.657166,-1.683870,-4.565086,3.364127,-8.603641,-5.273609,5.961424,5.059309,0.613881,-8.227154,-3.854784,-5.337944,-2.069644,-2.594219,-4.124101,-5.437718,7.664703,-7.023303,0.659835,8.334114,-3.667345,-6.403962,-7.348270,0.734200,7.104151,7.771636,-3.995491,-2.199278,2.150844,7.609433,-4.810036,5.337385,-8.983534,0.870190,5.972435,8.689673,-3.408598,9.190275,-8.165734,9.245415,9.530659,9.077710,-7.872679,-5.178235,-0.047371,4.024289,-2.606446,-4.012345,-9.900905,-6.081541,5.291426,5.880772,-2.802258,-1.994494,-4.007413,-4.889459,-9.326769,4.685226,7.195242,-1.603527,-7.610305,-2.914197,-6.174843,1.945336,-9.153282,-0.648208,-8.135480,8.839939,8.478108,6.351714,9.201891,4.602325,2.647094,-0.414832,-2.720889,8.810128,7.687617,3.220841,-4.173100,-6.655474,0.102221,-8.542215,0.370608,-4.138598,1.634290,-9.081242,7.489738,-2.223730,-6.148348,9.684222,-7.471827,7.385513,-7.735182,3.722584,-5.273172,3.191480,5.097203,1.931390,0.984408,5.940661,0.913692,-8.473031,0.011207,6.021068,1.586990,-3.935432,3.103365,9.989953,0.487309,3.527498,8.431847,5.298377,-6.435553,4.664695,-2.179255,2.392369,-6.230819,-0.242102,-9.385289,9.193999,-4.549371,8.795684,-6.642496,5.888275,-2.953174,8.980526,4.396659,-1.019886,3.557393,6.926258,-6.620262,8.004474,-6.808918,-8.626715,2.977900,0.301906,8.282532,-4.621250,1.691226,1.133296,-8.916674,7.290753,1.325056,8.140478,2.685942,-8.082787,3.412095,-1.144865,2.235728,0.728545,6.014170,-6.371242,9.545911,-2.942009,-1.613752,-9.852451,-2.282559,-7.575803,8.577837,-9.875512,2.864527,-7.344435,-8.950696,-4.270272,5.898075,-9.861090,-0.269778,-5.028613,2.659531,5.364729,-3.659875,-4.142387,0.975398,3.458832,0.419828,-1.537861,-1.193144,6.130328,8.463432,0.258701,5.847374,6.130900,-4.724210,-6.601721,-4.563418,-6.417438,9.972002,9.796570,2.676901,-1.801929,-5.877643,2.935213,5.343253,8.545428,1.340580,-9.526370,7.315837,-4.556205,6.799213,4.898572,-1.633080,-6.736212,6.768024,6.262811,-7.069677,8.036348,-1.587022,-5.276657,7.191353,-2.751143,-1.131349,-1.113059,9.107943,1.023013,7.065243,-0.217027,-3.225019,8.511044,3.340149,8.504568,-2.704967,-0.325296,2.327602,5.883466,1.746149,3.263671,-4.111543,3.115986,5.298206,-7.003201,9.836270,-4.251763,8.905705,3.427479,-8.770874,2.666759,5.254790,0.294927,-4.844847,-6.016670,6.000242,9.863700,3.995731,8.580755,6.696877,0.250227,-9.346399,8.351814,3.752117,-3.676527,9.786155,4.188328,-0.752591,6.265900,8.965736,-0.104644,-5.988644,-1.321816,-2.740931,-4.213233,2.131005,-6.148884,1.546008,5.316234,1.149862,8.183897,2.104236,5.756387,5.679061,-5.331668,-0.516319,5.234603,-2.371402,-9.695569,3.197137,3.752203,-6.299084,3.293994,5.524650,1.858316,-2.068425,9.254899,8.515645,4.650701,1.472846,9.007379,-9.432879,-9.553312,-3.930815,4.626902,3.107862,-2.856546,5.056581,-3.157486,-7.040867,8.958381,-2.576038,9.035812,4.100715,-0.544834,-0.837568,4.052335,3.457467,-1.694023,-4.569217,3.790927,-2.939958,-7.203327,4.951039,-5.755040,-0.492893,5.252962,-1.972611,-4.895453,6.898951,-7.398623,-9.701896,6.114998,-9.282023,9.621378,2.387190,-4.829231,-1.383628,3.814902,8.470302,5.905687,4.409191,-8.884727,4.434205,-3.411642,-7.944761,2.357747,-7.987495,-1.403059,-9.279045,0.555567,-4.179561,6.389568,-9.294522,8.433179,-1.392114,9.681723,3.767824,3.050415,-8.085492,4.839882,-5.096932,2.711384,6.286912,8.399566,6.297073,-6.282969,6.085971,-1.126241,-0.088426,2.511552,2.690910,4.236588,5.263097,7.604601,-8.696497,-1.794314,6.756655,0.400862,2.318294,-6.000115,6.690489,-1.840045,-8.877010,0.915401,-6.190468,2.813175,0.503220,-9.549396,3.642627,2.190292,1.086243,6.766505,5.861841,9.880204,9.141423,-6.482563,-0.604261,2.927392,2.576555,-2.874651,-8.658933,7.514810,-4.394049,-3.264541,-8.622143,2.954893,4.801696,-9.051802,7.762379,0.500129,-9.526989,8.113149,-7.221289,7.929897,8.406735,-7.207094,-1.405765,-8.138581,6.207911,-5.878861,-9.285387,2.287992,-6.125947,-0.426152,-2.766540,4.155627,9.217171,3.401136,9.969892,-1.021340,-8.117714,-7.028130,-4.606023,0.081538,5.689247,1.306261,0.834098,1.510817,8.324201,4.166036,6.302271,-5.609476,-2.954722,7.962969,-5.371231,-7.624785,-9.946608,5.213684,4.421771,-6.350451,4.719273,-4.417403,2.682845,-0.567487,-8.528745,-2.881524,-7.439314,-8.473945,-3.003226,1.074218,8.994862,-7.106032,-7.524261,8.956969,-4.285153,2.200314,1.666129,7.511980,9.073593,1.546194,8.491368,-6.943839,-6.046404,-4.841319,-1.548941,-7.174376,-4.227421,5.160970,-7.271617,-4.335797,-1.435554,-6.329299,-0.729476,-8.515667,-3.512099,7.829331,7.704330,1.152695,-3.685766,3.582414,7.675330,3.471005,-3.276774,3.608397,7.434341,5.134978,4.758024,0.643983,8.161420,1.471547,-0.789322,-2.460898,-9.716113,0.273705,9.069343,6.341272,-8.542822,-8.806498,4.120710,-7.798237,-2.157201,2.390011,9.433063,0.014103,-0.129475,-0.796898,5.696675,2.032725,0.942584,-2.209560,2.476466,1.049712,-1.824899,-2.454779,1.341909,-9.662085,-5.813287,6.788607,6.773097,3.331198,-9.505801,-4.152510,-9.161480,6.757141,-0.566142,-6.149042,-2.765663,-3.860367,-3.320093,-4.708902,1.816782,9.435042,-2.664723,6.896873,4.046833,-9.593677,7.585939,6.675726,-6.385490,0.303738,-2.856584,-4.687914,8.824111,-5.259793,1.583054,-4.064611,6.206239,-8.619835,-8.853586,0.428944,-6.914375,6.434557,-8.830477,0.760703,-9.879669,-6.730112,3.584954,3.997668,4.279825,-0.175385,-7.484112,2.631440,-2.888239,-3.390418,7.457594,-1.212630,4.496584,3.719527,-0.553250,-3.509860,2.193519,8.472883,2.550596,-7.048847,-8.436516,2.877021,7.015795,5.390754,-7.047625,-9.774355,4.644229,-5.664517,2.328167,3.125104,-7.070083,-7.619838,-6.796863,-3.815098,-9.173117,-1.564779,4.898694,6.169327,-1.012064,-5.670704,-0.510595,-7.441044,8.492931,-9.912605,4.334694,-5.626915,7.333591,8.793943,7.494093,0.001571,-6.029849,-0.642895,5.619944,-8.139125,-8.837556,9.699599,-2.114827,0.761949,-3.762863,-7.035177,4.601517,3.909309,8.238703,-1.553964,6.602458,-1.299257,8.685192,9.502426,-6.962860,-9.834935,0.536337,-7.306625,2.311964,5.373859,3.545742,8.609386,6.726535,-1.525347,-1.301350,4.501569,-3.063096,0.818131,-6.443197,4.014067,9.671710,-3.025714,7.914937,-9.384609,-7.369990,-2.305053,7.366212,-2.958087,-4.009520,4.562793,2.698353,-5.655386,-1.823490,1.855077,7.953005,8.460341,-9.332593,2.789998,-2.343267,-2.026658,0.205843,7.230586,1.020371,2.657659,-7.565633,-3.300701,8.044607,0.949956,-6.248820,2.266676,4.186957,-7.349233,-5.139970,1.298400,8.369502,6.541319,-6.366942,6.716924,-8.819847,-8.288114,3.182561,-3.542197,0.663968,-7.748230,-2.927889,0.431721,7.200426,1.721770,8.975240,-0.397317,-8.674295,-9.119515,-3.287268,-9.370365,-1.657202,4.120071,5.448260,3.248051,-4.593132,7.287378,1.064793,-8.470771,-9.161039,-8.942927,3.523639,2.936568,-5.030168,-2.715981,9.051644,7.801524,3.138265,-0.408515,-3.313368,-8.872192,0.343519,7.452438,-2.892369,8.688413,4.515067,2.818982,8.629242,-6.313929,-8.861378,-1.653672,-8.117404,6.670479,3.751305,-7.528045,7.276185,-5.589565,-9.629457,9.265926,3.515457,-5.725815,-6.414091,7.460529,-2.593750,5.586012,1.671803,-3.356741,3.802393,7.657707,1.714330,-3.173491,-9.399991,-1.630959,-0.674444,-7.797148,-9.331440,-2.798488,-4.891229,-8.469340,-6.135476,7.586628,-9.279203,1.392161,0.593384,-9.659907,-5.332504,-5.333685,1.541140,-4.394616,-0.308239,4.517595,0.078170,-6.930328,-9.014057,-6.849032,-6.989856,-2.636066,8.904378,4.529339,-4.630655,-6.666568,-1.184770,-3.118782,5.920063,-2.176123,1.861928,-1.569058,6.713810,-5.846199,-8.503359,-7.892278,-7.068500,0.698483,-0.743846,-6.277740,-8.917405,-8.957978,1.441661,-2.720318,3.654384,2.142716,-7.331434,8.488345,-0.665269,7.900103,-6.152027,6.135513,-9.783458,-5.714870,5.228483,-7.690990,1.141235,3.180147,2.065942,1.535095,-1.769995,2.161645,0.468089,-3.748240,-0.844016,-4.776942,-7.730282,9.337744,-5.599919,7.312102,-3.775802,4.353589,-6.456033,8.614961,-4.327747,-2.593506,9.736251,9.671430,-5.241257,-8.881742,-3.098296,0.313128,-6.670199], dtype = "float64")#candidate|3962|(1568,)|const|float64
call_3959 = relay.TupleGetItem(func_2080_call(relay.reshape(var_3960.astype('float64'), [12, 2, 12]), relay.reshape(const_3961.astype('float64'), [112,]), relay.reshape(const_3962.astype('float64'), [1568,]), ), 3)
call_3963 = relay.TupleGetItem(func_2084_call(relay.reshape(var_3960.astype('float64'), [12, 2, 12]), relay.reshape(const_3961.astype('float64'), [112,]), relay.reshape(const_3962.astype('float64'), [1568,]), ), 3)
output = relay.Tuple([bop_3923,var_3928,const_3929,bop_3935,call_3946,uop_3954,call_3959,var_3960,const_3961,const_3962,])
output2 = relay.Tuple([bop_3926,var_3928,const_3929,bop_3938,call_3947,uop_3956,call_3963,var_3960,const_3961,const_3962,])
func_3968 = relay.Function([var_3922,var_3928,var_3934,var_3960,], output)
mod['func_3968'] = func_3968
mod = relay.transform.InferType()(mod)
mutated_mod['func_3968'] = func_3968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3968_call = mutated_mod.get_global_var('func_3968')
var_3970 = relay.var("var_3970", dtype = "float64", shape = (10, 11, 14))#candidate|3970|(10, 11, 14)|var|float64
var_3971 = relay.var("var_3971", dtype = "int64", shape = (168,))#candidate|3971|(168,)|var|int64
var_3972 = relay.var("var_3972", dtype = "int64", shape = (14, 3, 7))#candidate|3972|(14, 3, 7)|var|int64
var_3973 = relay.var("var_3973", dtype = "float64", shape = (288,))#candidate|3973|(288,)|var|float64
call_3969 = func_3968_call(var_3970,var_3971,var_3972,var_3973,)
output = call_3969
func_3974 = relay.Function([var_3970,var_3971,var_3972,var_3973,], output)
mutated_mod['func_3974'] = func_3974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mod.get_global_var('func_1619')
func_1621_call = mutated_mod.get_global_var('func_1621')
call_3994 = func_1619_call()
call_3995 = func_1619_call()
var_4010 = relay.var("var_4010", dtype = "float32", shape = (9, 8, 3))#candidate|4010|(9, 8, 3)|var|float32
bop_4011 = relay.bitwise_xor(call_3994.astype('int8'), relay.reshape(var_4010.astype('int8'), relay.shape_of(call_3994))) # shape=(9, 8, 3)
bop_4014 = relay.bitwise_xor(call_3995.astype('int8'), relay.reshape(var_4010.astype('int8'), relay.shape_of(call_3995))) # shape=(9, 8, 3)
output = bop_4011
output2 = bop_4014
func_4026 = relay.Function([var_4010,], output)
mod['func_4026'] = func_4026
mod = relay.transform.InferType()(mod)
var_4027 = relay.var("var_4027", dtype = "float32", shape = (9, 8, 3))#candidate|4027|(9, 8, 3)|var|float32
output = func_4026(var_4027)
func_4028 = relay.Function([var_4027], output)
mutated_mod['func_4028'] = func_4028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1459_call = mod.get_global_var('func_1459')
func_1460_call = mutated_mod.get_global_var('func_1460')
call_4038 = func_1459_call()
call_4039 = func_1459_call()
func_3179_call = mod.get_global_var('func_3179')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_4049 = relay.TupleGetItem(func_3179_call(relay.reshape(call_4038.astype('float32'), [9, 8, 3])), 0)
call_4050 = relay.TupleGetItem(func_3182_call(relay.reshape(call_4038.astype('float32'), [9, 8, 3])), 0)
output = relay.Tuple([call_4038,call_4049,])
output2 = relay.Tuple([call_4039,call_4050,])
func_4054 = relay.Function([], output)
mod['func_4054'] = func_4054
mod = relay.transform.InferType()(mod)
mutated_mod['func_4054'] = func_4054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4054_call = mutated_mod.get_global_var('func_4054')
call_4055 = func_4054_call()
output = call_4055
func_4056 = relay.Function([], output)
mutated_mod['func_4056'] = func_4056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3556_call = mod.get_global_var('func_3556')
func_3558_call = mutated_mod.get_global_var('func_3558')
call_4129 = relay.TupleGetItem(func_3556_call(), 1)
call_4130 = relay.TupleGetItem(func_3558_call(), 1)
uop_4135 = relay.atan(call_4129.astype('float32')) # shape=(12, 3, 5)
uop_4137 = relay.atan(call_4130.astype('float32')) # shape=(12, 3, 5)
func_895_call = mod.get_global_var('func_895')
func_899_call = mutated_mod.get_global_var('func_899')
const_4150 = relay.const([-5,-3,-10,9,10,9,-7,1,10,-1,6,4,6,1,-3,6,-9,9,3,1,-3,-5,1,-10,-3,-1,9,-4,9,2,4,-10,-6,-2,6,2,4,-10,5,-9,10,-5,3,-5,-9,-4,2,5,2,-7,-1,-10,8,9,1,-10,-7,-2,-8,-3,-4,9,-1,-6,-2,-5,-1,7,4,-3,-5,6,1,2,-4,6,10,-4,2,7,-2,-6,-5,4,-10,-4,3,-6,-7,4,1,-9,-7,-3,-4,2,3,1,-10,9,4,-2,-5,-3,-5,6,-9,9,10,5,-4,-10,-5,-7,5,-3,-9,-8,-3,7,-8,-6,-7,-2,-8,-1,-4,-1,1,3,4,-3,-1,9,1,-4,10,3,6,6,-2,8,9,6,9,-4,-5,8,-9,2,3,-7,5,-2,-5,8,-7,-5,8,-6,1,8,8,-2,2,-7,7,10], dtype = "int64")#candidate|4150|(168,)|const|int64
call_4149 = relay.TupleGetItem(func_895_call(relay.reshape(const_4150.astype('int64'), [6, 14, 2]), relay.reshape(const_4150.astype('int64'), [6, 14, 2]), ), 3)
call_4151 = relay.TupleGetItem(func_899_call(relay.reshape(const_4150.astype('int64'), [6, 14, 2]), relay.reshape(const_4150.astype('int64'), [6, 14, 2]), ), 3)
func_2343_call = mod.get_global_var('func_2343')
func_2346_call = mutated_mod.get_global_var('func_2346')
var_4153 = relay.var("var_4153", dtype = "float64", shape = (112,))#candidate|4153|(112,)|var|float64
var_4154 = relay.var("var_4154", dtype = "float64", shape = (1568,))#candidate|4154|(1568,)|var|float64
call_4152 = relay.TupleGetItem(func_2343_call(relay.reshape(var_4153.astype('float64'), [112,]), relay.reshape(var_4154.astype('float64'), [1568,]), ), 1)
call_4155 = relay.TupleGetItem(func_2346_call(relay.reshape(var_4153.astype('float64'), [112,]), relay.reshape(var_4154.astype('float64'), [1568,]), ), 1)
output = relay.Tuple([uop_4135,call_4149,const_4150,call_4152,var_4153,var_4154,])
output2 = relay.Tuple([uop_4137,call_4151,const_4150,call_4155,var_4153,var_4154,])
func_4156 = relay.Function([var_4153,var_4154,], output)
mod['func_4156'] = func_4156
mod = relay.transform.InferType()(mod)
var_4157 = relay.var("var_4157", dtype = "float64", shape = (112,))#candidate|4157|(112,)|var|float64
var_4158 = relay.var("var_4158", dtype = "float64", shape = (1568,))#candidate|4158|(1568,)|var|float64
output = func_4156(var_4157,var_4158,)
func_4159 = relay.Function([var_4157,var_4158,], output)
mutated_mod['func_4159'] = func_4159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2856_call = mod.get_global_var('func_2856')
func_2858_call = mutated_mod.get_global_var('func_2858')
call_4189 = func_2856_call()
call_4190 = func_2856_call()
func_489_call = mod.get_global_var('func_489')
func_491_call = mutated_mod.get_global_var('func_491')
var_4201 = relay.var("var_4201", dtype = "float64", shape = (168,))#candidate|4201|(168,)|var|float64
call_4200 = relay.TupleGetItem(func_489_call(relay.reshape(var_4201.astype('float64'), [14, 3, 4])), 5)
call_4202 = relay.TupleGetItem(func_491_call(relay.reshape(var_4201.astype('float64'), [14, 3, 4])), 5)
func_139_call = mod.get_global_var('func_139')
func_142_call = mutated_mod.get_global_var('func_142')
var_4223 = relay.var("var_4223", dtype = "float64", shape = (21,))#candidate|4223|(21,)|var|float64
var_4224 = relay.var("var_4224", dtype = "float64", shape = (294,))#candidate|4224|(294,)|var|float64
call_4222 = func_139_call(relay.reshape(var_4223.astype('float64'), [1, 3, 7]), relay.reshape(var_4224.astype('float64'), [14, 3, 7]), )
call_4225 = func_139_call(relay.reshape(var_4223.astype('float64'), [1, 3, 7]), relay.reshape(var_4224.astype('float64'), [14, 3, 7]), )
func_895_call = mod.get_global_var('func_895')
func_899_call = mutated_mod.get_global_var('func_899')
call_4236 = relay.TupleGetItem(func_895_call(relay.reshape(var_4201.astype('int64'), [6, 14, 2]), relay.reshape(var_4201.astype('int64'), [6, 14, 2]), ), 2)
call_4237 = relay.TupleGetItem(func_899_call(relay.reshape(var_4201.astype('int64'), [6, 14, 2]), relay.reshape(var_4201.astype('int64'), [6, 14, 2]), ), 2)
output = relay.Tuple([call_4189,call_4200,var_4201,call_4222,var_4223,var_4224,call_4236,])
output2 = relay.Tuple([call_4190,call_4202,var_4201,call_4225,var_4223,var_4224,call_4237,])
func_4238 = relay.Function([var_4201,var_4223,var_4224,], output)
mod['func_4238'] = func_4238
mod = relay.transform.InferType()(mod)
mutated_mod['func_4238'] = func_4238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4238_call = mutated_mod.get_global_var('func_4238')
var_4240 = relay.var("var_4240", dtype = "float64", shape = (168,))#candidate|4240|(168,)|var|float64
var_4241 = relay.var("var_4241", dtype = "float64", shape = (21,))#candidate|4241|(21,)|var|float64
var_4242 = relay.var("var_4242", dtype = "float64", shape = (294,))#candidate|4242|(294,)|var|float64
call_4239 = func_4238_call(var_4240,var_4241,var_4242,)
output = call_4239
func_4243 = relay.Function([var_4240,var_4241,var_4242,], output)
mutated_mod['func_4243'] = func_4243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1983_call = mod.get_global_var('func_1983')
func_1985_call = mutated_mod.get_global_var('func_1985')
call_4272 = func_1983_call()
call_4273 = func_1983_call()
const_4274 = relay.const([[[8.366518,-8.018374,7.059052],[-4.857868,7.739183,9.389298],[-6.778578,5.813744,-4.063610],[3.117698,7.252903,2.706509],[-3.394474,-5.988310,-2.580046],[0.104616,1.835959,-6.536351],[9.931416,-5.909098,-4.388685],[-7.368853,8.863039,-0.733288]],[[6.821607,6.087729,-7.155949],[3.494639,-5.570183,-3.709434],[6.374738,0.935303,2.592738],[1.880794,-6.222460,-5.094520],[1.747118,2.079014,-3.516746],[4.653674,1.414532,-7.905559],[4.810845,-2.739936,8.249561],[-0.476564,-4.066538,3.083959]],[[5.066128,3.236558,6.224220],[5.839107,-8.533194,7.594014],[-1.572697,-1.224119,-7.037982],[7.207859,-7.449790,4.407813],[-8.721507,-8.686778,4.141439],[0.847642,0.568983,-4.777012],[-1.812850,0.853764,-2.593101],[5.830139,8.462648,0.852472]],[[-0.614417,6.676654,-7.693366],[-1.294257,-5.746478,-6.967464],[4.691320,0.498862,-3.533657],[1.853228,3.139959,2.551469],[6.435914,-7.572609,5.945787],[-9.811835,8.674121,-1.054405],[7.959727,-5.522833,-7.939494],[1.126647,-6.372494,-5.830320]],[[3.662257,5.461372,-5.435962],[-6.822657,4.604641,4.323831],[-7.542488,-1.416919,0.414979],[-4.289785,-6.920910,7.863231],[1.698713,-7.091225,2.849811],[-7.688551,-9.478765,2.373749],[-6.962190,-5.727666,-5.207305],[-1.283572,-9.939542,-1.823944]],[[-2.470922,-3.257830,-1.342587],[6.824868,-0.352867,6.964691],[-9.722017,-7.976393,-5.801492],[3.838288,-9.357078,-6.009479],[9.549989,2.573507,-5.060771],[-2.001907,-9.168265,7.377960],[-3.604340,-5.544850,-0.968205],[-1.248802,7.863250,9.946993]],[[-2.181466,4.457782,-0.602507],[2.027954,-7.850699,8.207606],[1.739011,1.742685,-7.518337],[-2.145847,7.266191,-0.311080],[-5.992516,-4.032813,6.166568],[9.358899,2.928766,-9.477536],[6.315274,1.220445,8.064497],[-3.421769,-9.486353,-4.829839]],[[-9.139282,8.218707,-1.383201],[5.882776,-9.350568,-3.193159],[2.775317,9.663908,-1.327905],[-6.950126,-4.987648,-7.162134],[7.818059,-2.686953,-4.936478],[-9.771913,3.842961,6.989296],[9.615373,-6.039884,-7.373318],[-3.838558,3.051979,-1.326135]],[[7.579693,8.557145,2.579229],[2.453210,-3.810718,-6.132655],[4.367020,0.410632,1.767330],[-2.349238,5.278314,-2.691197],[0.302519,1.288696,9.582524],[6.980560,-5.364279,-9.152791],[-7.904739,-6.562303,5.343610],[4.734874,-6.706073,9.812789]]], dtype = "float32")#candidate|4274|(9, 8, 3)|const|float32
bop_4275 = relay.not_equal(call_4272.astype('bool'), relay.reshape(const_4274.astype('bool'), relay.shape_of(call_4272))) # shape=(9, 8, 3)
bop_4278 = relay.not_equal(call_4273.astype('bool'), relay.reshape(const_4274.astype('bool'), relay.shape_of(call_4273))) # shape=(9, 8, 3)
func_2568_call = mod.get_global_var('func_2568')
func_2570_call = mutated_mod.get_global_var('func_2570')
call_4280 = func_2568_call()
call_4281 = func_2568_call()
func_2984_call = mod.get_global_var('func_2984')
func_2985_call = mutated_mod.get_global_var('func_2985')
call_4282 = func_2984_call()
call_4283 = func_2984_call()
output = relay.Tuple([bop_4275,call_4280,call_4282,])
output2 = relay.Tuple([bop_4278,call_4281,call_4283,])
func_4301 = relay.Function([], output)
mod['func_4301'] = func_4301
mod = relay.transform.InferType()(mod)
mutated_mod['func_4301'] = func_4301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4301_call = mutated_mod.get_global_var('func_4301')
call_4302 = func_4301_call()
output = call_4302
func_4303 = relay.Function([], output)
mutated_mod['func_4303'] = func_4303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_956_call = mod.get_global_var('func_956')
func_958_call = mutated_mod.get_global_var('func_958')
call_4311 = relay.TupleGetItem(func_956_call(), 0)
call_4312 = relay.TupleGetItem(func_958_call(), 0)
output = relay.Tuple([call_4311,])
output2 = relay.Tuple([call_4312,])
func_4320 = relay.Function([], output)
mod['func_4320'] = func_4320
mod = relay.transform.InferType()(mod)
mutated_mod['func_4320'] = func_4320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4320_call = mutated_mod.get_global_var('func_4320')
call_4321 = func_4320_call()
output = call_4321
func_4322 = relay.Function([], output)
mutated_mod['func_4322'] = func_4322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1413_call = mod.get_global_var('func_1413')
func_1415_call = mutated_mod.get_global_var('func_1415')
call_4345 = func_1413_call()
call_4346 = func_1413_call()
var_4356 = relay.var("var_4356", dtype = "float32", shape = (9, 8, 3))#candidate|4356|(9, 8, 3)|var|float32
bop_4357 = relay.less_equal(call_4345.astype('bool'), relay.reshape(var_4356.astype('bool'), relay.shape_of(call_4345))) # shape=(9, 8, 3)
bop_4360 = relay.less_equal(call_4346.astype('bool'), relay.reshape(var_4356.astype('bool'), relay.shape_of(call_4346))) # shape=(9, 8, 3)
output = relay.Tuple([bop_4357,])
output2 = relay.Tuple([bop_4360,])
func_4373 = relay.Function([var_4356,], output)
mod['func_4373'] = func_4373
mod = relay.transform.InferType()(mod)
var_4374 = relay.var("var_4374", dtype = "float32", shape = (9, 8, 3))#candidate|4374|(9, 8, 3)|var|float32
output = func_4373(var_4374)
func_4375 = relay.Function([var_4374], output)
mutated_mod['func_4375'] = func_4375
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4392 = relay.var("var_4392", dtype = "float64", shape = (14, 7, 12))#candidate|4392|(14, 7, 12)|var|float64
uop_4393 = relay.rsqrt(var_4392.astype('float64')) # shape=(14, 7, 12)
output = relay.Tuple([uop_4393,])
output2 = relay.Tuple([uop_4393,])
func_4396 = relay.Function([var_4392,], output)
mod['func_4396'] = func_4396
mod = relay.transform.InferType()(mod)
mutated_mod['func_4396'] = func_4396
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4397 = relay.var("var_4397", dtype = "float64", shape = (14, 7, 12))#candidate|4397|(14, 7, 12)|var|float64
func_4396_call = mutated_mod.get_global_var('func_4396')
call_4398 = func_4396_call(var_4397)
output = call_4398
func_4399 = relay.Function([var_4397], output)
mutated_mod['func_4399'] = func_4399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2357_call = mod.get_global_var('func_2357')
func_2359_call = mutated_mod.get_global_var('func_2359')
call_4456 = func_2357_call()
call_4457 = func_2357_call()
output = relay.Tuple([call_4456,])
output2 = relay.Tuple([call_4457,])
func_4465 = relay.Function([], output)
mod['func_4465'] = func_4465
mod = relay.transform.InferType()(mod)
mutated_mod['func_4465'] = func_4465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4465_call = mutated_mod.get_global_var('func_4465')
call_4466 = func_4465_call()
output = call_4466
func_4467 = relay.Function([], output)
mutated_mod['func_4467'] = func_4467
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4479 = relay.var("var_4479", dtype = "float64", shape = (5, 1, 5))#candidate|4479|(5, 1, 5)|var|float64
uop_4480 = relay.asin(var_4479.astype('float64')) # shape=(5, 1, 5)
func_3179_call = mod.get_global_var('func_3179')
func_3182_call = mutated_mod.get_global_var('func_3182')
const_4500 = relay.const([[-8.612187,-8.568795,-8.570937,-2.080256,-7.146595,6.024989],[-5.737274,-0.828515,9.197179,5.977229,-7.600599,2.312900],[5.655316,4.345728,-9.462112,8.959892,9.120248,1.385184],[-3.962179,7.477708,-7.999679,-2.951762,9.487325,9.104129],[-3.104026,1.076140,3.941176,6.823563,-1.463646,-2.138339],[-1.184591,1.462793,-8.530941,0.979590,-5.891804,0.975662],[2.081703,0.089411,-6.159243,-8.361200,5.526784,8.819640],[-0.544591,4.582842,6.358896,8.273251,0.531821,-6.347792],[-7.611521,5.500918,-6.843016,5.426432,-9.943157,-0.502656],[3.200222,6.019357,4.894019,8.208301,0.567489,-6.644549],[7.425411,-4.160183,-8.796208,-7.834530,-7.609397,8.430390],[-1.417707,8.680652,-8.744000,-9.111500,-4.511322,-7.615750],[-1.133627,6.981578,1.152479,9.413978,-2.386972,2.391970],[-0.440953,9.542860,4.590862,9.348759,2.135926,-7.291613],[5.942401,9.803421,6.426110,0.911401,-2.963261,0.413685],[-7.272805,-7.334807,2.636298,9.310316,0.077625,-5.042559],[0.565827,-0.301843,-3.877401,-3.224354,9.913102,7.230525],[-1.588547,9.524485,-3.065437,-5.153270,7.157883,3.633410],[-8.506490,-4.080145,4.268639,1.404622,-6.829666,3.970622],[-2.956532,-9.615176,0.434172,-1.774967,-2.988475,-1.395872],[5.855847,6.935858,4.091487,8.661839,9.266477,3.175931],[-6.753973,-1.180482,6.009049,-6.045919,1.193195,1.108117],[-7.987320,-5.207108,5.622491,2.218856,9.972279,2.017854],[8.036310,6.781176,-2.710111,3.150587,9.504607,-8.060190],[1.693471,-0.374296,8.281600,-9.062863,-7.396924,3.719597],[3.146376,-6.081963,1.236763,-8.847721,-1.208359,-8.812405],[-0.858174,5.383594,6.030144,-1.368536,-9.024261,4.901425],[0.069353,-1.566802,8.846168,0.580609,-3.456736,0.914695],[-2.641784,8.782190,4.319826,9.593261,1.023520,3.037428],[-6.551875,-3.506636,2.450955,5.527781,8.244809,-9.873466],[1.095654,3.759602,5.934489,0.663685,-8.108417,-0.388300],[-7.371852,-1.408465,-3.560983,-3.628652,1.641653,-2.355516],[7.606058,6.645728,6.118921,9.990473,-0.682854,-8.810616],[4.959525,2.497282,-8.022162,-1.180068,6.095484,8.993159],[-6.911190,0.385437,-7.373493,-3.320803,4.224213,-4.031050],[7.612595,1.156902,-1.381104,7.861138,6.940897,-1.820406]], dtype = "float32")#candidate|4500|(36, 6)|const|float32
call_4499 = relay.TupleGetItem(func_3179_call(relay.reshape(const_4500.astype('float32'), [9, 8, 3])), 0)
call_4501 = relay.TupleGetItem(func_3182_call(relay.reshape(const_4500.astype('float32'), [9, 8, 3])), 0)
const_4502 = relay.const([[[-2.312054,-5.749456,3.373406,-4.472931,7.584715],[-2.884039,2.848479,2.869331,-8.196792,-1.327732],[1.320881,-9.900170,2.978842,5.041709,9.960303],[3.513377,0.071508,-0.008753,7.406354,2.205178],[2.879353,-6.895792,-7.698410,-4.830669,3.898933],[-6.257146,-3.837930,-9.455382,6.096878,1.717795],[-5.178046,6.158983,-1.371793,-7.131277,-3.303603],[-7.103196,-1.895930,-1.830911,-1.643945,0.066052],[3.420057,-2.737906,-3.591690,-1.436024,7.990524],[-9.484052,-1.331256,3.220678,8.616583,-4.162817],[-5.866336,6.510943,6.513197,5.401429,7.881154]],[[-5.265288,-8.700980,-5.758102,7.807376,-9.061642],[-9.671887,4.412554,-6.339555,3.046454,-4.517044],[-2.977971,-9.469948,3.657263,2.118435,2.326588],[3.980661,-0.382652,2.660632,-5.427412,3.837168],[7.580967,0.907052,-5.199892,9.241566,3.422717],[3.015780,-5.007985,-9.692376,-9.333605,-1.479442],[-6.787111,3.923618,2.781548,4.738739,6.002582],[0.493643,7.738439,3.024717,-4.494997,6.186145],[6.352782,6.791292,3.085292,5.725304,-0.340027],[5.330354,-3.589467,7.500387,4.492915,2.475551],[2.467225,0.200987,-6.137676,-1.742298,-7.284623]],[[-6.644571,-1.879965,7.915627,7.647420,5.293979],[7.824835,-2.019734,2.390844,3.771057,5.001685],[-3.075751,3.706879,9.789117,-5.697433,2.628602],[6.990008,-2.622232,8.743300,9.965720,2.798975],[-3.023464,-3.468529,-7.123084,-5.798868,-5.257371],[-4.491296,-4.164053,2.718226,2.134251,3.971635],[-9.630917,5.793108,0.467672,-0.006580,9.005736],[9.131301,-3.209180,3.138392,-0.948822,9.498198],[7.104690,6.675337,7.861869,2.917337,-7.970640],[7.026202,4.304215,-6.238420,-6.556370,-5.618911],[-2.001732,1.444899,9.477012,7.678203,8.221679]],[[-3.184002,-9.465801,-2.489818,-0.871026,8.630805],[3.469413,1.214563,9.762845,1.342881,1.000133],[1.006852,4.790058,-0.133873,2.163992,-4.524809],[-1.495036,6.618001,-5.039176,8.281129,2.351438],[-0.205813,4.944490,-0.799876,1.500571,-1.855554],[1.680049,-4.709410,2.363520,9.582278,-4.098916],[0.379525,-0.933735,6.815471,-0.343765,-9.156181],[9.832065,-4.614458,-7.324181,3.749664,-7.874319],[-7.822990,-4.746286,9.406897,-2.580325,-4.082430],[-2.061984,0.563087,9.685714,-0.721256,1.465226],[2.263333,8.765270,-0.263989,-5.842862,1.531821]],[[1.312202,-1.395630,-3.073839,4.400472,-8.820319],[2.999768,2.927427,-5.626539,8.940794,0.849816],[3.337190,-8.146079,-1.667397,-4.863016,-6.406713],[-5.523111,-8.339286,6.269330,-8.515285,9.291118],[1.239300,8.606656,4.899234,5.127109,-5.995563],[-6.789374,2.491746,-2.287052,0.392325,0.649439],[-8.394901,4.927753,-3.871643,0.934960,-1.668775],[-6.195700,1.311938,-2.304205,7.148623,-6.153766],[-0.834490,8.972828,3.874603,-4.422243,-4.181568],[-5.060210,0.387265,1.518589,8.312131,-9.451425],[8.682883,1.858865,-1.552070,-4.621255,8.257974]]], dtype = "float64")#candidate|4502|(5, 11, 5)|const|float64
bop_4503 = relay.greater_equal(uop_4480.astype('bool'), const_4502.astype('bool')) # shape=(5, 11, 5)
output = relay.Tuple([call_4499,const_4500,bop_4503,])
output2 = relay.Tuple([call_4501,const_4500,bop_4503,])
func_4508 = relay.Function([var_4479,], output)
mod['func_4508'] = func_4508
mod = relay.transform.InferType()(mod)
mutated_mod['func_4508'] = func_4508
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4509 = relay.var("var_4509", dtype = "float64", shape = (5, 1, 5))#candidate|4509|(5, 1, 5)|var|float64
func_4508_call = mutated_mod.get_global_var('func_4508')
call_4510 = func_4508_call(var_4509)
output = call_4510
func_4511 = relay.Function([var_4509], output)
mutated_mod['func_4511'] = func_4511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1433_call = mod.get_global_var('func_1433')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_4556 = func_1433_call()
call_4557 = func_1433_call()
func_1197_call = mod.get_global_var('func_1197')
func_1200_call = mutated_mod.get_global_var('func_1200')
const_4564 = relay.const([5.510536,4.251602,-2.175037,-9.944384,9.053916,8.659290,-4.069984,-8.083910,-2.887620,6.408633,-0.394287,9.847746,2.640949,-2.232721,8.438096,7.247562,2.946191,-9.054798,-4.299799,-3.424140,5.174602,2.578175,-0.684120,-2.526023,3.884315,7.434879,-3.455282,2.787635,7.332333,-3.097774,-0.672179,0.066838,-2.220655,4.381210,1.124321,-0.304909,5.671506,-9.198951,0.873733,7.278772,0.540115,-9.699000,1.986038,0.818247,6.472319,2.839860,-6.742743,0.060709,9.542381,8.054313,6.018677,0.149201,6.827766,-2.065233,-8.012205,4.465174,1.856051,5.700835,3.370646,2.728504,-7.664262,-8.989256,-2.327621,-7.877136,-3.701383,-5.164314,9.197155,7.244056,1.784005,-8.753438,2.591307,0.940482,6.396204,5.877223,-7.462361,-2.619106,3.130582,6.937336,-5.751331,3.536336,8.296292,-9.214778,-8.483168,6.655228,-0.877865,6.806948,2.497618,-1.088165,-8.061001,7.315537,-3.412804,9.393173,1.697797,5.580590,-8.489168,-8.349366,-4.928936,2.319230,-6.149663,3.755308,-6.967966,-5.288421,5.571605,-6.768296,-7.731368,-1.142008,9.221570,9.610069,-8.895661,2.914154,9.359386,-3.238090], dtype = "float64")#candidate|4564|(112,)|const|float64
var_4565 = relay.var("var_4565", dtype = "float64", shape = (1568, 1))#candidate|4565|(1568, 1)|var|float64
call_4563 = relay.TupleGetItem(func_1197_call(relay.reshape(const_4564.astype('float64'), [16, 7, 1]), relay.reshape(var_4565.astype('float64'), [16, 7, 14]), ), 0)
call_4566 = relay.TupleGetItem(func_1200_call(relay.reshape(const_4564.astype('float64'), [16, 7, 1]), relay.reshape(var_4565.astype('float64'), [16, 7, 14]), ), 0)
output = relay.Tuple([call_4556,call_4563,const_4564,var_4565,])
output2 = relay.Tuple([call_4557,call_4566,const_4564,var_4565,])
func_4567 = relay.Function([var_4565,], output)
mod['func_4567'] = func_4567
mod = relay.transform.InferType()(mod)
mutated_mod['func_4567'] = func_4567
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4568 = relay.var("var_4568", dtype = "float64", shape = (1568, 1))#candidate|4568|(1568, 1)|var|float64
func_4567_call = mutated_mod.get_global_var('func_4567')
call_4569 = func_4567_call(var_4568)
output = call_4569
func_4570 = relay.Function([var_4568], output)
mutated_mod['func_4570'] = func_4570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2757_call = mod.get_global_var('func_2757')
func_2759_call = mutated_mod.get_global_var('func_2759')
call_4592 = func_2757_call()
call_4593 = func_2757_call()
output = call_4592
output2 = call_4593
func_4609 = relay.Function([], output)
mod['func_4609'] = func_4609
mod = relay.transform.InferType()(mod)
output = func_4609()
func_4610 = relay.Function([], output)
mutated_mod['func_4610'] = func_4610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4465_call = mod.get_global_var('func_4465')
func_4467_call = mutated_mod.get_global_var('func_4467')
call_4611 = relay.TupleGetItem(func_4465_call(), 0)
call_4612 = relay.TupleGetItem(func_4467_call(), 0)
uop_4613 = relay.sin(call_4611.astype('float64')) # shape=(9, 8, 3)
uop_4615 = relay.sin(call_4612.astype('float64')) # shape=(9, 8, 3)
func_1147_call = mod.get_global_var('func_1147')
func_1151_call = mutated_mod.get_global_var('func_1151')
const_4617 = relay.const([5,-6,1,4,-7,9,6,-9,3,9,-3,7,4,2,-9,5,10,-8,3,4,1,-1,-5,3,8,-10,-4,5,-7,8,-5,9,-4,6,-9,9,-6,-8,1,-10,7,1,1,1,-2,3,2,1], dtype = "uint16")#candidate|4617|(48,)|const|uint16
var_4618 = relay.var("var_4618", dtype = "int64", shape = (168,))#candidate|4618|(168,)|var|int64
call_4616 = relay.TupleGetItem(func_1147_call(relay.reshape(const_4617.astype('uint16'), [6, 4, 2]), relay.reshape(const_4617.astype('uint16'), [6, 4, 2]), relay.reshape(var_4618.astype('int64'), [168,]), ), 2)
call_4619 = relay.TupleGetItem(func_1151_call(relay.reshape(const_4617.astype('uint16'), [6, 4, 2]), relay.reshape(const_4617.astype('uint16'), [6, 4, 2]), relay.reshape(var_4618.astype('int64'), [168,]), ), 2)
output = relay.Tuple([uop_4613,call_4616,const_4617,var_4618,])
output2 = relay.Tuple([uop_4615,call_4619,const_4617,var_4618,])
func_4630 = relay.Function([var_4618,], output)
mod['func_4630'] = func_4630
mod = relay.transform.InferType()(mod)
var_4631 = relay.var("var_4631", dtype = "int64", shape = (168,))#candidate|4631|(168,)|var|int64
output = func_4630(var_4631)
func_4632 = relay.Function([var_4631], output)
mutated_mod['func_4632'] = func_4632
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4652 = relay.const([[[10,10,7,-9,10,8,-4,-6,9,-9,4],[10,1,-4,10,7,-3,1,-3,-3,-2,-4],[9,-3,2,5,-3,8,8,5,7,9,-10],[-2,-3,-5,-5,-1,9,-3,4,-8,3,-3],[8,-1,3,-5,-10,-6,-3,8,-10,-4,-3],[-9,-5,7,3,-10,-1,5,9,-5,-8,-2],[1,-1,-10,-1,10,-1,-9,4,10,2,-5],[5,9,-4,2,2,-5,6,5,-10,7,1]],[[-2,7,-9,5,-8,-7,-2,-5,-7,10,9],[-9,3,-1,-1,-6,9,6,4,1,2,8],[1,8,10,1,-4,-4,-10,-9,9,-7,-1],[-6,4,5,-9,2,6,-7,-10,4,9,-10],[4,3,7,2,2,-2,-7,-4,10,6,6],[2,2,-9,-7,1,10,-3,-3,-2,-2,1],[1,-8,1,-9,-7,-4,-1,9,4,9,3],[1,-6,-9,9,-10,5,-5,1,-5,7,7]],[[-2,7,-6,2,-6,-5,9,-3,-6,-3,8],[-9,-2,-7,-2,8,-9,-2,1,6,10,-2],[-7,-9,5,-6,-10,1,-9,-2,1,7,-4],[6,-4,3,-4,-4,7,4,7,-6,-4,8],[5,4,-9,9,1,-9,10,10,-6,-6,8],[-6,1,2,10,1,-10,-3,-8,-10,-8,6],[10,3,-10,10,9,3,-9,7,4,5,5],[-1,-10,3,-2,5,5,-10,7,3,10,-7]],[[-10,8,-4,-8,-1,-3,-3,-9,7,9,-2],[-5,10,6,-3,-9,-9,6,2,-2,6,5],[6,-2,-8,5,9,10,7,1,10,2,1],[-1,-6,7,2,9,6,1,4,5,-5,5],[4,1,-6,-1,4,9,9,-10,-7,-9,2],[-8,-5,10,-1,-3,10,7,8,4,-2,-10],[10,1,2,-2,-9,1,-5,-5,7,-9,1],[-5,-6,1,-4,8,-2,1,9,8,-6,-4]],[[-1,5,-7,7,2,9,4,7,-10,2,-4],[-5,8,10,2,3,5,5,6,-1,5,8],[9,-7,-2,10,4,10,-9,-6,-6,-8,10],[-2,5,-5,-5,-10,-10,-5,8,10,-1,3],[-1,-4,-9,8,4,-4,-5,-9,-3,9,8],[8,9,7,8,-1,1,4,6,7,-3,-8],[1,-1,6,10,1,-1,7,10,10,-2,7],[-10,9,-4,10,1,9,6,1,3,-5,4]],[[-4,5,10,-6,-5,-1,-6,7,6,9,-1],[5,2,-5,2,-9,6,10,-3,-2,-5,-5],[7,-8,3,2,-2,-5,5,-3,9,-5,8],[-2,4,-1,6,-1,-1,8,8,-5,7,7],[10,-10,2,6,3,-10,10,5,9,-1,-8],[-2,8,-9,7,-10,-7,-6,8,-10,-7,-7],[2,-5,9,-9,4,3,9,1,-9,-3,-3],[-5,10,-1,6,6,-1,8,8,9,9,5]]], dtype = "int32")#candidate|4652|(6, 8, 11)|const|int32
var_4653 = relay.var("var_4653", dtype = "int32", shape = (6, 8, 11))#candidate|4653|(6, 8, 11)|var|int32
bop_4654 = relay.equal(const_4652.astype('bool'), relay.reshape(var_4653.astype('bool'), relay.shape_of(const_4652))) # shape=(6, 8, 11)
output = bop_4654
output2 = bop_4654
func_4661 = relay.Function([var_4653,], output)
mod['func_4661'] = func_4661
mod = relay.transform.InferType()(mod)
var_4662 = relay.var("var_4662", dtype = "int32", shape = (6, 8, 11))#candidate|4662|(6, 8, 11)|var|int32
output = func_4661(var_4662)
func_4663 = relay.Function([var_4662], output)
mutated_mod['func_4663'] = func_4663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1459_call = mod.get_global_var('func_1459')
func_1460_call = mutated_mod.get_global_var('func_1460')
call_4667 = func_1459_call()
call_4668 = func_1459_call()
output = call_4667
output2 = call_4668
func_4677 = relay.Function([], output)
mod['func_4677'] = func_4677
mod = relay.transform.InferType()(mod)
output = func_4677()
func_4678 = relay.Function([], output)
mutated_mod['func_4678'] = func_4678
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4689 = relay.var("var_4689", dtype = "int8", shape = (11, 4, 7))#candidate|4689|(11, 4, 7)|var|int8
var_4690 = relay.var("var_4690", dtype = "int8", shape = (11, 4, 7))#candidate|4690|(11, 4, 7)|var|int8
bop_4691 = relay.maximum(var_4689.astype('int8'), relay.reshape(var_4690.astype('int8'), relay.shape_of(var_4689))) # shape=(11, 4, 7)
output = bop_4691
output2 = bop_4691
func_4696 = relay.Function([var_4689,var_4690,], output)
mod['func_4696'] = func_4696
mod = relay.transform.InferType()(mod)
var_4697 = relay.var("var_4697", dtype = "int8", shape = (11, 4, 7))#candidate|4697|(11, 4, 7)|var|int8
var_4698 = relay.var("var_4698", dtype = "int8", shape = (11, 4, 7))#candidate|4698|(11, 4, 7)|var|int8
output = func_4696(var_4697,var_4698,)
func_4699 = relay.Function([var_4697,var_4698,], output)
mutated_mod['func_4699'] = func_4699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3446_call = mod.get_global_var('func_3446')
func_3448_call = mutated_mod.get_global_var('func_3448')
call_4745 = relay.TupleGetItem(func_3446_call(), 0)
call_4746 = relay.TupleGetItem(func_3448_call(), 0)
const_4755 = relay.const([[[1.630989,-2.240887,-7.517146],[8.861640,4.448535,-5.312241],[7.461677,8.706263,3.632831],[2.805485,5.442821,7.957686],[-0.624500,3.962151,-7.571879],[1.335312,1.418395,1.673455],[-7.910934,-5.055493,-9.183080],[2.940133,-6.803458,8.397815]],[[-2.990285,-5.956364,-9.000234],[5.398612,7.287220,6.323662],[7.060358,9.165196,-8.925599],[-5.540963,5.873193,-0.444481],[7.308860,-4.997330,8.137218],[-1.427168,-7.166069,1.883728],[-2.632046,7.238639,-8.639843],[3.206452,8.670353,-7.596343]],[[-6.894889,-8.487821,-1.219515],[3.954444,0.836067,8.452046],[8.518484,-3.731353,-0.164344],[-5.709988,-3.149634,7.241676],[-9.850361,-9.065530,4.003905],[-9.970137,8.866059,-7.468362],[6.079458,-1.281052,0.200995],[4.589496,7.634472,-9.409871]],[[-6.573425,-1.422607,-8.886961],[1.494444,-2.052020,9.708014],[-5.430852,0.374753,-2.530563],[2.048910,3.707486,-0.481536],[-8.985903,1.882557,7.507398],[5.385002,-3.772933,-2.374145],[7.662251,-9.626642,0.192041],[-2.649761,2.152445,-4.663303]],[[9.428504,8.944947,1.173322],[9.176225,-1.547349,7.639831],[-4.215954,2.708269,-2.427318],[4.548231,7.572185,2.462764],[9.918421,-8.558742,-0.801669],[3.809978,6.590178,-8.186180],[-8.761126,-1.642476,2.362746],[0.486038,-6.440361,-0.226259]],[[-4.677732,2.330595,8.086453],[5.092354,-2.417767,4.114378],[-5.341985,-8.849993,-8.785222],[-3.025867,-2.613692,9.665479],[-2.573313,7.645842,8.574283],[5.297763,8.846515,8.214760],[4.510248,-5.072124,-2.826667],[-3.713576,-0.181129,-6.612048]],[[-8.409668,1.851723,7.801262],[-0.375505,0.601198,3.965574],[4.442917,0.735780,4.420589],[-8.080899,4.747998,-1.111863],[-9.605300,-0.441525,2.146890],[0.378200,4.978767,-6.379149],[1.639214,-5.212532,-3.740474],[1.280017,-3.942509,-5.193749]],[[8.821944,-6.498795,9.938738],[9.646988,-9.274118,-8.947879],[-3.722039,0.033860,5.008582],[5.028395,-6.723787,3.363539],[1.357500,-3.169043,3.269376],[6.576428,6.795330,4.184549],[-4.857724,3.555807,-1.332949],[-0.593928,6.452910,-3.496311]],[[5.575733,-6.250560,0.700566],[-5.462814,-1.822229,-3.097927],[5.156710,6.000159,-3.149111],[-0.836768,1.746550,1.589582],[9.948374,-3.490500,0.303622],[9.740852,-1.565253,-5.166584],[-3.399806,-3.908740,9.430280],[-4.651132,-7.747236,-7.677471]]], dtype = "float32")#candidate|4755|(9, 8, 3)|const|float32
bop_4756 = relay.add(call_4745.astype('uint64'), relay.reshape(const_4755.astype('uint64'), relay.shape_of(call_4745))) # shape=(9, 8, 3)
bop_4759 = relay.add(call_4746.astype('uint64'), relay.reshape(const_4755.astype('uint64'), relay.shape_of(call_4746))) # shape=(9, 8, 3)
func_2658_call = mod.get_global_var('func_2658')
func_2660_call = mutated_mod.get_global_var('func_2660')
call_4764 = relay.TupleGetItem(func_2658_call(relay.reshape(const_4755.astype('float32'), [9, 8, 3])), 0)
call_4765 = relay.TupleGetItem(func_2660_call(relay.reshape(const_4755.astype('float32'), [9, 8, 3])), 0)
func_2429_call = mod.get_global_var('func_2429')
func_2431_call = mutated_mod.get_global_var('func_2431')
const_4770 = relay.const([[-1,6,1,10,-7,9,-10,-6,-5,5,-7,9],[6,4,6,-5,-1,3,-6,-8,-5,7,-7,-6],[-5,8,-7,-10,9,-5,8,-1,4,2,9,6]], dtype = "int8")#candidate|4770|(3, 12)|const|int8
call_4769 = relay.TupleGetItem(func_2429_call(relay.reshape(const_4770.astype('int8'), [4, 3, 3])), 0)
call_4771 = relay.TupleGetItem(func_2431_call(relay.reshape(const_4770.astype('int8'), [4, 3, 3])), 0)
func_1510_call = mod.get_global_var('func_1510')
func_1512_call = mutated_mod.get_global_var('func_1512')
call_4778 = relay.TupleGetItem(func_1510_call(), 0)
call_4779 = relay.TupleGetItem(func_1512_call(), 0)
output = relay.Tuple([bop_4756,call_4764,call_4769,const_4770,call_4778,])
output2 = relay.Tuple([bop_4759,call_4765,call_4771,const_4770,call_4779,])
func_4811 = relay.Function([], output)
mod['func_4811'] = func_4811
mod = relay.transform.InferType()(mod)
output = func_4811()
func_4812 = relay.Function([], output)
mutated_mod['func_4812'] = func_4812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2544_call = mod.get_global_var('func_2544')
func_2545_call = mutated_mod.get_global_var('func_2545')
call_4839 = func_2544_call()
call_4840 = func_2544_call()
func_1619_call = mod.get_global_var('func_1619')
func_1621_call = mutated_mod.get_global_var('func_1621')
call_4846 = func_1619_call()
call_4847 = func_1619_call()
output = relay.Tuple([call_4839,call_4846,])
output2 = relay.Tuple([call_4840,call_4847,])
func_4850 = relay.Function([], output)
mod['func_4850'] = func_4850
mod = relay.transform.InferType()(mod)
mutated_mod['func_4850'] = func_4850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4850_call = mutated_mod.get_global_var('func_4850')
call_4851 = func_4850_call()
output = call_4851
func_4852 = relay.Function([], output)
mutated_mod['func_4852'] = func_4852
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4859 = relay.const([[[3.474822,0.188614,-4.199772,-4.406699,5.914934,-0.352225,8.935308,8.684532],[0.938047,-4.394264,5.896205,3.778967,8.533907,-0.239333,-7.025561,-1.205315],[6.964570,-4.314838,1.110038,3.154067,9.037641,5.350893,4.978492,4.755223],[-8.122093,-6.736806,5.761558,3.286906,4.594238,-1.713574,5.736576,2.025439],[-5.724522,-5.952099,6.960993,0.026193,1.044071,7.769524,5.798948,4.536293],[-8.888806,-2.777633,-1.114677,-8.977128,2.025197,5.037967,3.975291,3.615381],[-2.421807,-9.781767,-5.091141,-3.775960,-0.676212,-3.878068,7.999649,4.962989],[6.085870,6.736086,9.633648,-2.814805,-0.285333,1.930126,-3.687189,-5.631807],[-7.561901,-2.871806,-8.159674,-6.459405,-7.798150,-3.960005,7.476792,-9.096392],[3.225213,-0.523109,4.489480,-4.494039,-7.392153,-9.381380,-7.829325,5.574242]],[[5.802773,1.864387,9.653207,-2.580693,-8.064593,0.488933,-6.288162,6.885277],[1.363266,-3.886813,-2.247906,-5.031317,-4.803601,2.092241,0.465527,8.862210],[6.030981,-3.860106,-1.274502,-3.991044,-9.602590,-2.786733,1.624828,-3.429838],[6.965878,-8.122506,9.955772,-1.955705,5.566805,1.144506,5.941496,5.624070],[5.547627,2.529678,-1.015116,2.173680,9.859340,0.390797,9.212912,1.528021],[-7.983618,-0.981580,-9.316794,8.292844,-9.213617,7.780709,6.639469,-3.696928],[-3.689716,-9.350938,-0.572926,5.956816,-9.568698,-6.494782,2.487490,-0.864793],[1.888772,1.120888,-5.787921,3.122780,6.930089,-0.430637,4.135677,-2.290824],[-6.461581,-0.097095,-0.536385,-9.715770,-3.732676,-0.513834,-2.597013,2.264637],[7.549287,2.990246,7.771359,-9.704989,4.713368,3.205155,-1.156965,2.131087]],[[3.424611,1.095116,5.942450,-5.207555,-9.140362,6.582841,5.251752,8.118948],[-8.978939,-2.602650,6.381808,-7.360052,2.606389,-0.373824,7.826518,-6.510229],[4.957791,-9.601310,8.652455,4.048904,3.659390,-9.721959,3.741216,3.734473],[5.885659,-8.854983,6.014633,4.781242,-9.306328,-6.041388,3.037743,-9.819848],[-1.570638,-6.594401,1.635547,3.299850,-9.198151,-2.101326,4.865327,5.961341],[3.633368,-2.713518,6.739130,-5.856644,2.902211,3.975001,5.138123,9.774378],[4.154320,-6.535393,4.605619,4.555824,6.150820,-9.882641,-4.547367,6.200711],[9.608066,-1.683226,-2.586560,-6.306063,0.662618,-2.617871,-4.764746,-4.613100],[1.124419,-0.800067,-5.577008,1.845912,7.695599,4.589143,5.587299,-6.294170],[-7.774848,8.113473,4.751761,-3.664933,-3.109601,1.281105,-0.124320,-4.613169]],[[-4.580440,2.726015,-6.176892,8.428622,-0.614043,8.489447,8.314060,-1.036464],[-3.659425,-3.557348,5.785755,-2.026577,-9.332014,-9.726979,3.749317,-4.682534],[-9.735404,2.888495,-1.316401,-5.999929,1.543169,3.735672,6.389447,-9.699757],[0.414355,3.089238,5.029761,-2.720034,-6.789964,-7.236825,4.073991,1.658064],[-7.650797,1.418088,6.131741,5.534362,7.549037,-8.933614,-6.864998,1.908606],[0.354661,3.241793,-9.249473,-8.615726,-4.575094,9.985982,-0.124497,8.596322],[7.081584,8.263292,0.725323,9.484959,5.083891,7.441399,-0.526593,-3.071370],[-3.451808,-5.094524,4.810559,5.939762,4.608314,-0.481485,2.160159,3.059764],[-5.759211,-2.917179,8.860443,-5.445504,9.183913,3.295506,-2.648873,6.165524],[3.138261,-7.946930,1.277793,-8.818494,-9.573451,-7.050107,7.973471,-2.347913]],[[-7.303841,6.073421,-5.610751,6.545744,6.797037,8.446477,-5.015662,-0.299711],[-2.353863,-4.234970,-1.010956,-2.677073,2.578160,8.338881,-6.771684,-8.811604],[-7.531996,7.459987,-3.487880,-8.573427,2.386153,8.928364,-5.238720,1.121390],[-4.568852,-7.485231,-4.216367,4.713298,3.544667,-4.312272,-1.177398,8.169691],[-4.230916,4.061992,3.600919,0.426385,4.316247,-8.292897,-3.896066,-8.845412],[9.358473,-0.465723,-4.911259,-8.650122,-3.852981,4.738272,3.640663,1.355630],[6.298473,-1.226898,-8.407097,6.039712,8.617396,9.952947,8.788209,-9.554347],[2.309612,3.090963,2.003314,2.949945,-4.704286,-3.271829,6.294509,-5.992354],[2.110095,4.842622,-3.891710,9.806555,-7.891684,9.469433,8.608341,9.326941],[-2.083282,-4.508768,-7.831302,7.592546,-6.171386,-6.559902,2.957111,6.542602]],[[-3.178718,-6.289792,6.517378,-1.173674,7.059033,-9.908527,6.499579,6.188525],[-9.351790,5.642581,4.870521,7.755482,2.222378,-6.187124,-4.486623,5.367836],[-1.524985,3.693593,0.912925,-2.531147,-6.722342,8.034130,-6.199566,0.317511],[-7.629197,6.526100,-9.010487,-6.403191,-6.880807,-5.597552,-5.380892,9.059621],[-1.485768,-5.250248,-5.934158,-7.584903,8.905740,3.469840,-6.216538,-5.441253],[9.464530,-4.608112,4.381759,0.914285,1.105055,-5.250409,4.991223,1.154144],[0.599683,-9.460866,-1.976741,-8.256392,-7.219012,9.521295,-8.126061,-4.447993],[6.762794,7.718358,7.736476,-0.138629,9.994854,-8.949150,9.370448,-5.965876],[1.062001,-9.704471,9.958874,-2.195792,-8.688373,-5.251887,2.655257,0.858028],[5.499685,3.883782,0.895755,-8.848029,9.461111,-1.449866,-1.850180,6.362661]],[[6.094306,7.298872,-5.547260,-9.340129,1.527699,4.920275,4.923571,9.790238],[-0.007205,3.797643,-7.155329,-8.375744,-0.740694,-9.939573,0.809622,6.016645],[-7.139869,4.955818,-3.828884,3.205656,-7.066580,-5.964041,2.013797,-8.773998],[9.696822,-6.263804,4.243800,5.141625,4.972933,-9.106459,9.268820,4.097974],[-8.424953,-7.928141,-8.695691,-3.106532,-0.322078,0.810863,-6.872254,4.735450],[6.274029,-3.513303,-4.674213,1.972742,0.017034,-2.818143,8.437663,-9.849779],[-1.928503,-3.191708,6.661774,3.702570,5.329568,6.130969,5.493612,8.264984],[-8.447517,2.204054,5.925162,-1.699929,8.548612,5.000096,-7.707607,-7.589696],[-6.798399,-4.394637,-6.652676,-6.974701,-0.024706,8.091622,-1.040689,-8.699668],[-2.960321,-9.476015,-2.538544,7.928073,1.504800,-6.195590,-7.894363,4.386227]],[[9.358501,-1.637926,2.422369,-4.024961,5.572848,8.931004,-2.521762,-0.237131],[-3.741512,8.404567,-5.807910,-3.122606,1.919687,4.003567,4.710251,9.921133],[-2.261232,-1.969238,-7.162769,0.666417,4.375663,3.436510,2.572612,-8.473624],[-9.797401,-2.378835,-0.496297,3.290696,-4.281241,-7.514137,1.059245,-9.448580],[6.283930,8.291062,3.502072,1.786821,-7.939762,7.708537,0.428384,3.256854],[7.930709,-2.838740,-7.350545,0.978746,-8.068595,-3.150236,1.594743,-0.261272],[-8.695233,-4.487903,-5.480355,-2.203994,8.720163,-4.438630,1.328656,-5.865986],[-1.344921,7.801547,-5.074984,1.324270,-7.207908,-6.583773,-7.351750,-0.781056],[4.925204,6.520810,4.834164,-1.211085,2.499602,7.387096,-7.336826,3.525781],[-8.186941,0.192333,9.969859,4.659917,-3.441159,-2.996259,-1.961357,1.640537]],[[1.786240,-5.152247,-3.343783,8.797386,2.693188,2.176229,2.861786,-9.679161],[7.252214,-9.365109,-0.350637,-2.278009,-5.813234,-9.929891,9.566748,-8.498751],[-9.859485,4.013156,4.945440,-0.686302,3.700890,-8.481893,-8.266016,-2.546719],[-2.061562,-2.299322,5.228860,4.962733,7.388951,-7.523830,-6.590562,-8.410402],[6.676013,4.812593,-5.315599,-9.210026,1.733085,-6.387277,7.931162,1.074782],[-9.671880,0.497135,-6.227081,1.485734,-3.559440,9.809833,-7.096444,5.061883],[9.682933,-8.174280,-7.119506,-2.083234,7.911506,0.248531,9.210563,-3.385061],[-3.674344,4.177594,-1.834524,7.806830,2.388982,5.642166,-1.295109,3.169918],[-3.748418,1.068454,-0.684264,-3.811417,1.169935,9.016591,2.807332,-3.264643],[9.579751,-5.500200,-6.768530,-2.843248,-8.332106,1.217713,-7.778536,1.055673]],[[-0.036288,3.558600,-2.270767,-6.839069,3.109573,-0.216868,7.422069,-9.327823],[7.367610,-1.077076,-0.874903,8.674791,3.264736,1.629434,4.949032,-8.369657],[-8.611203,2.512498,6.038616,-3.814637,3.355072,2.053496,4.798590,7.780061],[1.190000,-2.520427,-0.136368,-8.440121,-5.501838,4.401910,-8.112878,6.182266],[3.235130,6.310298,-9.376027,7.658247,7.230430,-9.686307,-1.546378,9.175528],[6.843969,-5.754765,8.323090,9.588215,-4.064548,8.367863,-3.447302,0.197141],[3.810106,4.391519,-9.280361,6.156873,2.750424,-6.538101,9.208733,9.252656],[0.216219,-0.965899,3.201255,-1.805458,-7.331745,-9.510274,-2.660615,-9.514416],[8.527223,4.036163,-5.617271,9.929601,-9.852405,-2.859563,3.270971,1.876874],[6.333876,4.574783,8.063353,-3.089698,4.904704,5.989215,0.414810,-9.127763]],[[3.515621,-3.427579,-0.632525,8.358243,-0.893716,5.584376,-1.321450,-9.162016],[-4.617217,-0.150227,-2.405914,-9.829468,6.147070,7.629365,1.222966,4.383646],[-4.219109,0.122780,1.825200,8.318440,-9.937663,8.196648,3.738954,-7.572419],[3.797297,-5.534153,3.839699,-3.795725,-7.923695,9.651635,5.780772,-3.740034],[9.599119,-0.264362,-0.604999,-7.149763,-8.552127,8.646980,9.822093,-7.209269],[-3.706007,-7.269414,2.108050,2.212295,7.971667,2.830880,5.038223,-3.204961],[1.508228,-3.420443,-9.926571,-0.477353,-5.835110,8.550225,6.644430,7.116836],[-9.122073,-9.194775,-6.365629,1.054223,-3.364197,-4.247778,-0.634381,-7.935722],[1.960882,5.369714,4.016893,1.327881,-1.182296,-8.877112,-2.881670,4.456058],[1.096910,-3.590374,1.521977,1.345058,-8.903666,-2.011704,-3.859207,4.993704]],[[1.120534,-3.950249,-4.958546,-1.084854,-5.408020,3.099251,-0.668997,4.218168],[-3.382930,6.515944,9.500531,9.156632,-2.881099,-1.319145,6.800129,1.006446],[-6.263768,7.735589,3.705644,7.986430,-7.446677,-4.883968,-2.054086,1.405179],[5.129353,-6.237916,2.921488,-8.057248,6.372320,3.099413,-0.502031,5.213187],[-2.739048,-8.757791,5.694143,0.106992,-1.662173,-7.610587,5.364800,1.142031],[1.583515,1.589606,3.079871,-8.320483,-6.006615,9.015184,-0.012326,2.904273],[-0.573004,-0.582298,-0.154195,9.626804,9.513635,7.698209,7.538612,8.269270],[-5.319297,-2.203194,6.282698,2.421736,-3.262044,-6.707593,1.023474,6.656161],[5.655084,7.259831,8.394951,-7.478682,5.394448,1.670279,-8.670910,6.753513],[9.544792,8.948015,-6.406360,-7.034714,9.599860,-7.500891,-0.218625,-8.401017]]], dtype = "float32")#candidate|4859|(12, 10, 8)|const|float32
const_4860 = relay.const([[[5.004775,8.084572,-9.110509,7.968327,2.878207,-6.992176,3.698764,-8.106730],[-8.626496,8.020939,1.031607,-1.633794,1.575626,9.995631,-0.425308,-4.886893],[6.942221,-0.970717,-0.989197,9.413585,9.930976,-9.580675,0.677985,3.875878],[5.157868,-6.657039,-5.475826,-6.242957,-4.963762,5.882164,0.197596,-6.490330],[1.745175,-5.382862,9.120949,-0.975458,2.631685,3.354310,5.661568,3.679369],[1.800296,-8.740959,-2.048417,1.433395,-8.118161,1.222452,-8.979201,5.129443],[-3.581482,3.306749,0.541420,3.122510,-1.933493,-2.776450,5.965860,1.185913],[9.220606,-9.039017,-6.210200,-7.589312,5.635910,-1.454881,-9.338245,9.187239],[7.487482,-9.841282,-2.329089,-6.489284,-7.489087,3.389050,-0.660776,-3.319800],[-4.976910,0.737639,-5.403349,1.584925,3.275815,-4.198846,4.604406,9.695187]],[[-3.826603,-7.777123,4.450922,-7.369527,6.635683,5.038995,-5.888485,6.957434],[4.582855,3.275403,6.736997,9.230059,0.205915,-1.793543,5.655410,7.246113],[4.291556,4.897343,-6.221969,-6.743486,2.059093,8.196732,4.962252,-5.616319],[0.116097,-4.134892,-6.924573,-1.290504,2.217563,6.481951,-2.838630,0.189764],[-7.918333,-2.156634,-2.368599,-0.860972,-2.570494,2.397637,-4.822799,-8.130312],[8.526661,-9.347316,-9.334255,6.616200,8.361222,2.592856,-9.266673,4.868091],[6.714707,6.661691,-2.249725,6.795396,-7.405637,-1.342450,-7.661840,-7.595366],[-6.097913,8.764309,8.258910,-7.824318,5.599000,-0.278400,-8.272187,-9.454182],[9.828564,1.711349,1.826334,3.155597,9.440717,0.503850,-7.647402,-6.007751],[-8.739969,-0.892568,-8.607498,5.178841,-9.556196,1.631713,5.248938,-6.511593]],[[-1.865458,6.617252,-9.731729,5.316311,-2.691513,2.561757,-1.984354,5.318511],[8.032785,0.969569,9.013855,-9.964280,-7.815709,-4.353882,2.136366,0.704551],[8.276973,-4.618437,1.307416,1.875503,-5.673018,-5.998939,-9.712846,3.161812],[9.476500,-6.144866,7.481289,-1.350502,-7.123677,-5.444734,1.865325,7.755017],[-2.729710,-0.723775,5.926657,5.641900,-6.701844,2.924888,-1.087581,9.198485],[6.128388,-4.009980,-4.782969,-9.483289,0.339834,-6.403937,-0.327763,6.337536],[9.777864,-7.191307,-6.688851,-7.918970,-9.113302,3.545037,1.605291,-1.867382],[-8.106169,1.068036,-6.418145,-3.734016,-7.769722,-0.409654,-6.521475,9.047444],[-1.671618,1.897966,-4.317470,1.731011,9.693510,6.453518,7.809562,9.432349],[-6.683211,-4.639243,-5.216222,-4.151229,-8.220171,-2.002148,7.554316,-1.819947]],[[0.425574,-9.295571,-9.501951,-5.358936,-1.028412,-7.769432,-7.384120,-2.003471],[-5.515807,9.338273,7.728961,-7.208868,-5.478269,-4.915383,-5.106098,6.386052],[-9.250617,6.566004,-3.244070,-7.428566,9.522788,-8.418711,-3.842107,-6.941432],[-7.744686,-1.831512,-2.764716,6.534204,0.090262,-5.182707,-3.187981,4.611906],[5.063619,5.118241,3.668886,-7.547197,-3.628354,-2.855706,9.908580,-4.048238],[-2.736817,0.959303,8.455602,2.349365,4.178961,-4.235671,-7.294057,-4.533161],[4.418097,5.497239,-6.670503,3.336439,-2.868821,8.220473,0.265478,3.922638],[-8.407686,-5.551014,3.720667,-3.470904,2.308968,9.838079,4.678879,1.728969],[9.763554,4.729725,-7.137650,1.868973,-7.202429,8.272842,-6.406014,0.965771],[6.255047,-7.570194,9.179897,7.879721,3.293731,-0.889207,7.424107,6.188419]],[[-2.447506,-5.462157,-0.523987,-2.055851,-6.912060,-5.368495,-1.721077,-1.880008],[0.014393,2.615411,1.764796,6.939997,8.986466,9.279812,6.474059,9.505585],[2.894715,-3.786634,2.304845,-2.098080,-4.682823,-2.893603,-2.378983,2.248206],[6.495256,7.839792,9.791845,-7.232351,-1.984494,9.716128,-3.038230,-8.937532],[-8.252084,8.682651,2.504526,-8.513867,-0.466641,-6.536168,1.098984,-9.340274],[-1.669009,2.789939,-3.090042,-0.256218,-1.793946,-8.868283,4.222836,-5.176265],[-4.746194,3.069434,-5.000574,3.631922,0.764309,9.288742,2.891958,1.743825],[0.077031,-3.099940,-9.234274,8.372819,-2.892952,-3.489373,-4.371254,-8.454260],[-0.198934,-7.162242,3.186411,-7.316244,9.345268,6.313702,4.699054,4.689158],[6.092321,5.278940,-8.273954,-8.295509,-8.191328,-6.524574,-8.709499,1.084839]],[[3.357603,3.600530,-1.590531,7.571843,8.320849,-9.607444,3.102339,-0.853121],[0.269903,3.497502,-0.564048,6.985751,-2.862857,4.581587,-8.471370,7.679746],[-9.968986,-6.074966,-1.740599,-7.622083,-9.142829,0.319478,-2.346135,-4.752580],[1.868835,-9.223196,-3.052102,-4.894991,3.364444,0.564120,0.066336,3.236693],[2.420628,-3.135504,8.907558,3.266842,5.285233,-6.120696,-2.759767,-9.841721],[-0.282308,8.920910,-4.006065,5.774004,5.715104,3.790799,6.360106,-7.474048],[-3.742289,6.898200,-3.823196,0.307942,3.015915,4.042461,-3.882114,2.665454],[-2.280727,0.125100,-9.694310,9.138612,3.718657,-0.301048,3.798246,6.155729],[1.591897,-1.224833,-5.741323,-3.181964,5.227834,1.151751,1.871257,-2.709299],[-3.411388,-6.393903,-9.825317,-6.648823,-3.844195,-1.518261,-9.475330,6.977127]],[[-6.513398,8.044895,8.335931,-3.065659,6.731527,-5.350372,-4.128251,4.759439],[9.839665,-4.229498,2.085906,4.377024,2.285453,6.883790,-7.318708,-4.957041],[-3.011929,8.294920,9.831512,-6.159423,5.717926,9.687635,7.886588,-7.131994],[-3.776233,-4.342080,-9.573980,7.573468,-2.081633,6.145454,3.059710,6.417039],[5.119142,3.878999,3.336553,9.752022,-0.341901,-3.486714,7.195412,-5.998348],[1.591579,3.062148,8.342043,-7.854083,-3.628700,-1.334501,3.917931,3.302921],[-8.554144,7.223479,8.888709,-6.720360,4.821139,0.503765,-5.665643,-5.089640],[9.231243,5.478376,-3.087166,-8.209801,8.569267,-7.118923,-6.321229,7.840900],[-8.650115,-9.458707,1.517914,9.412090,-2.232971,-7.147856,6.020756,-5.095049],[-7.601919,9.445352,7.826026,4.420519,-6.098514,1.941801,-5.778168,6.520495]],[[0.617657,-3.058158,-5.328675,3.377401,-0.618624,5.449588,-1.408016,-8.698640],[1.968962,6.624480,6.913475,2.996384,-0.625226,9.355099,6.755621,8.403745],[-5.733401,-1.718094,-4.535504,8.538301,0.255170,-8.847300,4.654411,-3.411324],[-4.640244,8.932370,5.228784,9.210913,-8.422949,-2.089922,0.280969,-3.590138],[8.891755,-4.176407,7.228476,-3.854826,5.031945,-2.001970,-2.109954,6.354387],[4.570449,-9.352667,-9.720077,-8.124437,-2.533043,-4.753927,6.715598,-2.407338],[3.135859,-2.346034,-6.977188,2.340683,5.833191,-6.302520,7.171682,-4.283142],[1.098815,2.630642,-4.952211,-2.026204,-8.858239,-5.591542,3.070874,-1.934486],[2.957217,5.218500,1.772666,2.438710,5.723995,-5.375481,-4.961379,1.870444],[-8.218499,1.908035,-4.754730,5.393363,-5.929005,-6.100686,-3.082340,3.380739]],[[0.555529,-0.472553,6.521332,5.476828,9.504550,0.965656,-6.128864,2.195158],[0.164425,5.993086,-7.776795,-3.186973,-1.123733,0.919225,6.528878,1.468166],[9.346674,-5.657407,4.395999,6.295420,7.416904,-4.161327,2.732213,-9.465948],[-5.462836,4.017707,2.364052,-8.408088,-0.296151,-0.901697,-3.899894,2.451013],[8.416916,-0.158004,6.154304,-5.637971,0.381472,0.388062,-0.938481,1.013492],[2.453397,-8.668815,2.884815,2.992766,-3.108819,5.836626,0.243366,-4.823497],[-0.019158,2.818308,3.887582,7.199629,9.491782,8.111792,-9.392620,-9.255063],[3.050305,-1.212724,9.452606,0.797570,-0.694291,-6.186772,4.998895,-9.997105],[-9.950082,1.353399,7.751757,-6.476203,5.085956,0.978524,-3.288753,-6.471638],[-1.805432,-4.865768,-1.108680,6.410721,7.052163,-6.643075,-0.339909,-6.991514]],[[-7.748659,-4.256293,-1.245842,-9.722513,2.487493,-5.720755,-2.937912,1.704152],[9.029313,-4.351484,7.397102,-9.409034,-9.919834,9.861561,-2.906348,9.897468],[-8.218283,-0.169198,-9.626960,-2.972452,-5.910180,1.020646,1.414007,3.921570],[3.686013,-3.317138,8.911948,0.453364,2.007237,4.144797,-7.683032,4.646071],[-3.234103,-1.247188,-7.085631,-7.328574,0.496566,4.831682,2.333741,6.130296],[9.085498,7.770523,6.977173,-7.768590,-6.884842,-6.090803,-4.427880,8.692863],[0.486442,4.082381,-4.845258,3.882468,0.942672,4.191086,5.120284,9.499023],[-4.567962,-5.253288,9.654104,0.970216,-8.049113,1.020753,9.356473,3.526557],[-0.128556,-5.869676,4.026486,-4.299824,6.940892,7.047098,-8.129825,8.096549],[6.287848,-3.618416,-1.565630,-7.511909,9.181326,4.943462,-6.971524,-0.654268]],[[1.541016,-4.847124,-4.821034,1.223741,-0.515661,-5.210073,-8.709349,3.855144],[3.491253,-8.286042,4.835485,-6.132306,-7.490489,4.790340,1.581036,7.309725],[8.774575,3.775852,-4.767857,1.178971,2.415802,-5.994218,8.431888,7.666042],[0.991426,-9.176197,1.871740,-6.096622,-0.028494,-8.853741,8.001096,-4.031939],[5.532241,-5.020297,-7.265834,-8.197481,1.179570,3.219048,1.571215,-1.750554],[2.888532,4.531984,6.124505,-0.121415,-4.014369,2.883825,4.938796,-8.323665],[5.844284,-0.453080,-7.967928,9.445488,9.069223,-4.272104,-2.913147,-4.883766],[7.977603,-5.222116,7.475898,-8.925575,3.567470,0.943695,1.420861,-0.305730],[-8.468319,-7.849075,7.559066,-4.216579,2.643418,3.812399,1.713801,1.590364],[-6.457406,-8.331076,-4.169904,9.278363,-1.577891,-4.989731,-9.065203,3.892961]],[[-4.055481,9.974758,9.747251,-8.450395,-1.568049,-6.853453,4.169548,-7.209737],[1.763547,3.244784,7.322626,-0.612850,2.365035,7.592463,0.579203,-4.905803],[-1.478284,8.553272,-9.778970,-4.198223,-6.590027,-3.468206,-2.550648,0.232920],[0.924383,-5.406157,2.432224,3.642813,6.528802,-6.381735,9.756239,-1.902648],[-0.025237,5.133466,-9.665574,0.620790,4.338292,-5.495561,-1.704255,4.256931],[0.380325,-1.462876,-8.208768,8.987604,-2.147361,-4.001418,0.450999,3.487950],[2.650215,-7.624621,0.038719,-2.155149,1.402521,-2.919614,-9.501922,-3.462087],[6.112667,-7.798552,-9.700834,-6.578591,0.892794,-1.899289,1.183833,-3.407132],[-2.692794,-6.593088,-1.761209,-0.974148,-3.254182,1.419875,0.422263,-0.009914],[-9.320764,-3.269543,-5.799302,4.177399,-0.914992,-6.692263,0.424699,-4.289843]]], dtype = "float32")#candidate|4860|(12, 10, 8)|const|float32
bop_4861 = relay.mod(const_4859.astype('float32'), relay.reshape(const_4860.astype('float32'), relay.shape_of(const_4859))) # shape=(12, 10, 8)
bop_4866 = relay.bitwise_xor(bop_4861.astype('int8'), relay.reshape(const_4859.astype('int8'), relay.shape_of(bop_4861))) # shape=(12, 10, 8)
const_4878 = relay.const([[[-3.316869,-8.039215,6.822101,3.673863,0.055057,-0.152872,-2.214950,-0.680591],[1.163920,-5.690142,-1.799068,8.697298,-0.293437,-0.522025,1.888359,-4.486044],[-7.559454,-9.713465,-4.825027,-6.053059,6.047525,4.458819,4.512199,-9.007175],[1.167212,6.673065,5.137582,-9.143983,-1.011599,-5.771773,-7.860546,-9.261262],[0.822389,-7.622447,-6.576815,-9.778177,1.865501,5.028617,4.675406,8.334788],[-9.467740,-8.781449,3.452537,8.133281,6.321944,2.799745,-5.745694,-4.056061],[-9.206304,-8.365137,-5.833337,-0.974951,-7.333213,-7.239938,-6.710856,-6.532487],[8.766310,-1.803371,2.056423,-5.711352,8.326741,-6.907044,8.723317,-7.461248],[9.108994,-1.416880,7.546018,3.979526,-1.997234,5.569843,9.689808,-7.659491],[-6.190588,0.585198,-0.910329,-5.377150,0.072914,-5.688508,6.041149,3.022101]],[[3.775637,-8.873635,-8.975501,-0.193822,-4.544250,1.838660,8.149617,-9.570156],[-6.097852,-0.085399,4.442178,7.911009,0.134089,-9.294397,-2.021014,-1.389433],[5.467354,-1.351502,-4.360351,1.807556,-6.948126,4.489574,-6.262148,8.486580],[1.228258,6.943432,-2.856514,-2.464348,-0.642687,-0.294136,-2.041408,-5.393460],[-6.217752,9.895664,8.214092,8.581746,-1.237518,-8.679895,-8.479678,7.343029],[9.135067,-8.920483,6.222725,0.725492,7.975903,-6.403977,-3.600581,-7.893751],[5.361211,-6.240250,-0.250124,-3.319373,-1.489266,8.335739,-1.548435,-5.143048],[8.632367,5.483396,2.757326,3.595446,4.643756,-2.600302,-8.424102,-2.267195],[7.621891,0.912224,-7.922878,-3.406900,-9.055996,9.089185,-1.419819,-9.159656],[-6.007001,7.329043,-3.627991,8.643969,-4.576963,-8.784887,-7.831952,9.590371]],[[9.114757,9.794610,-6.174175,-5.066338,3.116028,-7.787952,0.210559,6.642504],[-5.829348,-9.202905,7.475076,-1.003845,5.535184,6.103204,3.884990,2.793315],[0.007002,-9.615574,-1.991423,-5.694667,-2.621190,-0.850462,9.495535,-3.866066],[-3.116973,-5.418222,-4.679726,1.348234,7.881934,1.596633,5.880371,0.898305],[0.973898,9.553629,-6.040158,7.772484,-9.534838,0.407753,3.877717,5.316598],[-0.267364,-5.135713,8.008656,-4.241288,-2.302486,3.857791,2.892652,-9.112275],[5.672380,-7.914258,5.616528,-3.529516,2.754120,3.924685,5.699683,-6.138902],[-4.299679,-4.688506,3.418573,3.316552,-4.919085,9.672329,0.874161,-3.076104],[2.641332,6.840836,-1.687479,-0.766533,1.608526,1.840862,4.649985,-0.516311],[-0.813337,8.894685,7.242274,5.317500,1.248872,2.993063,-0.819305,1.170022]],[[7.235583,-0.465769,6.823361,1.004650,-9.933274,3.370556,1.084109,5.804168],[1.904811,8.877922,8.761626,-6.562780,4.570995,-5.214880,-4.167252,-1.916651],[-8.040426,3.111172,4.671541,-9.338734,3.952639,4.794239,6.242222,-2.058690],[3.874957,4.514984,-9.158072,-2.664828,-9.006042,1.121503,-6.280342,-2.586050],[-3.514761,-2.366885,-3.084300,7.299078,6.072839,-3.733589,-8.425942,1.544801],[-6.866940,-8.869966,-7.079812,3.344691,9.908734,8.866752,-5.714627,-2.240253],[-0.541774,-0.381162,4.941560,-9.243518,7.145348,7.563711,-0.376956,5.451462],[-4.933952,0.119273,-9.778517,2.796391,-5.232718,-2.832695,-9.361390,7.820236],[1.360097,4.731045,-5.752963,0.917426,8.852991,2.253800,8.302882,-9.911086],[-3.769638,2.367631,-0.984742,4.146296,2.220121,6.322912,-3.483904,-5.995831]],[[1.635058,3.271047,-2.619110,1.349486,9.929293,0.556463,4.197190,-0.755898],[7.834203,2.900553,-9.531499,-4.889336,-9.175848,5.814828,8.628075,-0.125125],[-2.767044,-2.149610,1.039062,-2.378975,-5.594615,0.984924,1.056553,5.701479],[9.682726,6.085569,5.125919,-7.764745,1.427468,4.667076,8.527203,5.046681],[4.069250,-2.086430,5.544629,2.024009,-4.802113,-8.926394,4.966653,8.030014],[-2.619424,-5.297450,-1.944409,2.340390,4.299187,-4.689372,-1.231040,-8.368951],[0.344974,-0.406748,4.819641,-9.483088,8.896297,9.629893,1.262109,2.833877],[2.918098,9.798281,-4.833685,-5.071629,9.119264,7.477083,-8.455853,2.828709],[-0.749052,9.103712,-8.317585,-3.103265,-8.558836,-8.528248,-4.910349,6.117215],[4.231711,3.040295,6.953610,5.103927,1.908171,-0.104731,-9.716571,8.179223]],[[-6.664993,-4.609093,6.247120,-6.759280,7.196981,0.009549,-7.842046,3.240923],[1.301903,-5.533034,-2.566322,-4.783361,-4.546605,-3.170954,-3.348516,2.100195],[-1.573146,9.016794,-4.924468,5.734432,-1.905706,8.185268,8.577328,0.489168],[-5.831616,3.193816,8.842968,-5.310736,-2.708109,7.306489,-4.630429,8.420957],[-9.495886,-9.444443,-7.323417,-1.249152,-6.291973,-1.964817,3.193731,3.244451],[3.254545,-5.945615,-0.368471,-0.906366,1.099283,3.386532,-6.015055,-5.060163],[-7.676942,-9.453294,-7.088646,7.510172,-8.087971,-8.733239,1.921117,1.003750],[-5.326532,-5.393351,-8.041302,-8.235946,-2.634446,-5.410500,-2.667887,8.078035],[2.711152,-1.983196,0.074779,8.751092,6.868608,0.802449,3.706935,9.267965],[-1.587364,-9.165844,-1.088813,1.714588,-2.279928,4.511108,-2.232159,2.860623]],[[-5.821919,-0.142905,-8.372083,-9.361001,8.245907,-3.639142,-0.841792,7.945177],[5.794274,-1.768898,-5.878600,-1.804927,8.271626,0.646136,2.439197,6.175482],[-3.055212,8.925593,5.244000,-1.502578,9.415848,6.550248,-3.023251,-6.069255],[-7.191361,1.941018,-5.303047,-8.716113,-4.562691,-4.938475,-7.582865,8.075724],[0.892113,3.588530,-7.974258,1.667643,3.463639,-2.801600,7.899666,1.553076],[2.303270,-2.328451,1.347722,8.574700,1.094489,4.906909,1.936162,-9.321610],[9.765238,-0.360684,-9.419259,6.756047,-6.966209,2.918182,-8.343233,-3.015426],[-9.251821,-7.843191,5.060290,8.101103,6.373431,-9.079878,3.478531,9.654090],[6.078923,7.703982,8.134817,3.007423,-1.190906,-6.467065,3.975825,-6.854324],[7.308376,1.746919,-9.429781,3.009646,4.157900,-4.411487,5.890665,9.633062]],[[9.734834,-5.803635,8.335050,6.476009,-2.869619,3.460724,-8.221386,1.935471],[-1.493767,-9.143709,9.052842,-6.741231,8.215421,-8.454825,-7.270385,0.064706],[-4.694561,-2.394817,0.436497,1.610081,7.526296,-2.413307,-5.722551,-3.672889],[-0.051479,5.752177,-5.376181,7.665407,-7.956478,-2.090608,0.733004,4.601163],[4.751484,-6.712640,0.127108,2.065674,-7.670544,-1.830642,4.388127,3.147053],[2.814388,-6.839463,-6.188762,9.725668,2.760395,5.928672,-1.188794,-2.856708],[-5.361295,-6.089569,-8.714098,8.761437,2.603735,0.115857,-9.307143,7.434671],[8.097381,5.126962,6.311903,-1.799267,5.436464,4.556912,-3.068355,0.375750],[-7.013761,-7.363571,0.533480,7.012685,8.339354,-9.201944,5.070964,7.127053],[4.859733,-0.963975,-0.227528,0.543906,-7.146950,5.312963,-1.417018,-1.107729]],[[-1.258698,7.257223,-8.434798,4.516925,8.824518,3.577144,3.436426,6.663555],[0.564811,7.679285,-5.769639,6.418197,8.916445,-6.057704,-5.511404,7.943234],[8.810273,-5.885166,8.884951,-1.428077,1.104104,-7.792449,-9.345795,6.846818],[8.086952,7.229114,0.652861,4.538165,6.748961,-0.803267,-2.970627,5.465426],[-8.936972,2.312306,0.483684,-9.906724,2.823766,6.042387,-3.100660,6.869306],[3.287283,-9.940684,-6.015238,3.611576,4.383123,2.987128,9.172327,6.185009],[-4.475969,-5.083892,-5.785654,9.754770,8.158087,-6.144235,4.775578,8.969083],[-8.021730,-8.720454,3.146127,5.667221,3.152509,-4.808481,6.670128,3.922513],[-7.919740,2.022439,-1.827568,-0.330434,6.883720,-0.291024,9.025645,5.441159],[5.867290,-5.850992,7.908964,8.657478,-5.027489,-3.396879,1.126425,9.367018]],[[4.545311,2.668100,7.296517,5.913246,-2.173146,-1.213663,7.634290,1.763904],[6.992197,-0.516573,9.026580,7.918844,8.668687,9.693860,6.934681,1.548568],[2.875558,6.709610,-2.528724,1.023154,-8.011290,-2.284170,2.161797,-1.950485],[1.242730,-6.425323,-6.327680,-6.848168,7.324953,-3.646082,1.338646,9.387231],[-5.761112,4.998909,3.968670,5.547081,-0.053675,3.483059,-5.557643,-6.740704],[-5.749966,-7.533481,3.209591,8.805797,5.395549,4.372158,5.712573,3.515587],[9.255143,-0.493086,-6.748574,-5.258445,-3.790336,-9.922766,4.639721,-7.967971],[7.789621,-8.559680,-2.085178,6.098175,-0.815627,-5.934133,9.567622,4.524121],[-2.758985,9.235161,-2.406772,-8.631204,-5.631714,5.141533,4.131952,6.068334],[-4.192998,5.571651,1.697457,-4.218519,-0.823124,1.958739,3.821392,-9.582788]],[[4.309369,-5.139154,-1.624595,-0.489118,1.969528,-1.585511,4.952979,-1.157067],[-2.607800,-9.203186,-9.397182,7.530750,4.124530,4.561635,5.758406,6.606137],[4.881591,-6.052887,-6.975969,-3.496625,-1.322825,-6.467213,9.618901,-9.344813],[7.276002,8.209539,0.794362,-5.762459,-9.902417,8.777834,0.701519,-2.779370],[-3.664663,-2.138563,7.915879,0.874470,-4.368050,1.261260,-4.525542,9.751125],[2.229909,7.631613,2.141188,1.010589,0.672479,7.057428,0.329475,-2.307877],[0.479795,-2.430170,8.502230,-5.840877,-3.233133,5.938999,2.470933,-7.913686],[-3.406067,-8.892897,7.204854,0.453750,-6.239890,2.685237,-0.092837,-1.683915],[1.424342,-0.813333,-4.474226,-1.517920,-6.356733,9.735071,-6.432509,-7.950744],[2.282476,-0.001282,6.466910,-6.460742,-4.323394,3.310930,0.539593,-6.265901]],[[2.599400,5.043560,-5.775076,-9.596210,-9.632981,-2.362356,7.887750,9.640070],[4.397329,7.617475,0.560909,9.290596,0.397551,-6.808228,-3.495654,7.415747],[5.962897,9.399563,-4.929681,-9.271886,7.827744,3.787713,-0.957526,4.319629],[-4.099199,-6.164846,-2.721648,-6.810749,-7.336618,-2.000030,7.390412,-9.377258],[2.262751,-9.486710,4.060527,-3.556777,-1.606688,5.699663,-9.733085,-8.947653],[9.725707,-2.173596,-4.931791,-9.819046,5.928987,3.504521,-6.358365,9.233001],[8.215195,-0.177732,-3.260712,0.379922,-0.782536,5.611022,-6.904173,-8.176015],[-8.265096,8.690147,3.173249,-9.529860,6.574345,9.130987,8.366432,5.315477],[0.882176,-9.898587,-2.982984,-9.785802,-2.171333,6.242714,9.468245,8.775014],[-0.576515,3.793414,-1.776589,-2.072558,1.647032,7.021152,-5.995911,-3.682075]]], dtype = "float32")#candidate|4878|(12, 10, 8)|const|float32
bop_4879 = relay.right_shift(const_4860.astype('int32'), relay.reshape(const_4878.astype('int32'), relay.shape_of(const_4860))) # shape=(12, 10, 8)
func_760_call = mod.get_global_var('func_760')
func_764_call = mutated_mod.get_global_var('func_764')
const_4884 = relay.const(-10, dtype = "int16")#candidate|4884|()|const|int16
const_4885 = relay.const([6,2,2,7,-7,-3,1,-3,-2,-2,7,4,6,3,-2,5,-4,-7,3,4,-2,-9,2,-1,4,1,-3,-9,-3,-5,9,-5,7,9,-6,1,9,1,3,6,-5,-3,3,7,4,-5,4,-4,-3,-2,-6,-7,7,8,9,-9,4,3,4,5,4,1,-1,-10,9,-3,8,-4,7,-5,8,1,6,9,-5,-9,6,6,6,2,-9,10,5,2,-6,10,-1,-7,-8,8,-3,-2,-9,-8,6,8,-7,3,-4,5,2,-5,-10,-9,-9,10,5,10,-10,-9,-10,-4,-9,8,3,-5,-1,-7,5,9,-4,7,-1,-5,7,1,-3,4,-3,-7,-10,-1,-5,1,-2,-5,9,6,-10,3], dtype = "int16")#candidate|4885|(140,)|const|int16
call_4883 = func_760_call(relay.reshape(const_4884.astype('int16'), []), relay.reshape(const_4885.astype('int16'), [10, 7, 2]), )
call_4886 = func_760_call(relay.reshape(const_4884.astype('int16'), []), relay.reshape(const_4885.astype('int16'), [10, 7, 2]), )
var_4895 = relay.var("var_4895", dtype = "int8", shape = (12, 10, 8))#candidate|4895|(12, 10, 8)|var|int8
bop_4896 = relay.bitwise_or(bop_4866.astype('uint16'), relay.reshape(var_4895.astype('uint16'), relay.shape_of(bop_4866))) # shape=(12, 10, 8)
func_76_call = mod.get_global_var('func_76')
func_79_call = mutated_mod.get_global_var('func_79')
var_4900 = relay.var("var_4900", dtype = "uint8", shape = (840,))#candidate|4900|(840,)|var|uint8
call_4899 = relay.TupleGetItem(func_76_call(relay.reshape(var_4900.astype('uint8'), [12, 14, 5])), 0)
call_4901 = relay.TupleGetItem(func_79_call(relay.reshape(var_4900.astype('uint8'), [12, 14, 5])), 0)
uop_4908 = relay.exp(var_4895.astype('float32')) # shape=(12, 10, 8)
output = relay.Tuple([bop_4879,call_4883,const_4884,const_4885,bop_4896,call_4899,var_4900,uop_4908,])
output2 = relay.Tuple([bop_4879,call_4886,const_4884,const_4885,bop_4896,call_4901,var_4900,uop_4908,])
func_4915 = relay.Function([var_4895,var_4900,], output)
mod['func_4915'] = func_4915
mod = relay.transform.InferType()(mod)
var_4916 = relay.var("var_4916", dtype = "int8", shape = (12, 10, 8))#candidate|4916|(12, 10, 8)|var|int8
var_4917 = relay.var("var_4917", dtype = "uint8", shape = (840,))#candidate|4917|(840,)|var|uint8
output = func_4915(var_4916,var_4917,)
func_4918 = relay.Function([var_4916,var_4917,], output)
mutated_mod['func_4918'] = func_4918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3043_call = mod.get_global_var('func_3043')
func_3044_call = mutated_mod.get_global_var('func_3044')
call_4943 = relay.TupleGetItem(func_3043_call(), 1)
call_4944 = relay.TupleGetItem(func_3044_call(), 1)
func_4696_call = mod.get_global_var('func_4696')
func_4699_call = mutated_mod.get_global_var('func_4699')
var_4955 = relay.var("var_4955", dtype = "int8", shape = (154, 2))#candidate|4955|(154, 2)|var|int8
call_4954 = func_4696_call(relay.reshape(var_4955.astype('int8'), [11, 4, 7]), relay.reshape(var_4955.astype('int8'), [11, 4, 7]), )
call_4956 = func_4696_call(relay.reshape(var_4955.astype('int8'), [11, 4, 7]), relay.reshape(var_4955.astype('int8'), [11, 4, 7]), )
uop_4957 = relay.log10(var_4955.astype('float32')) # shape=(154, 2)
func_4661_call = mod.get_global_var('func_4661')
func_4663_call = mutated_mod.get_global_var('func_4663')
var_4960 = relay.var("var_4960", dtype = "int32", shape = (4, 132))#candidate|4960|(4, 132)|var|int32
call_4959 = func_4661_call(relay.reshape(var_4960.astype('int32'), [6, 8, 11]))
call_4961 = func_4661_call(relay.reshape(var_4960.astype('int32'), [6, 8, 11]))
output = relay.Tuple([call_4943,call_4954,uop_4957,call_4959,var_4960,])
output2 = relay.Tuple([call_4944,call_4956,uop_4957,call_4961,var_4960,])
func_4964 = relay.Function([var_4955,var_4960,], output)
mod['func_4964'] = func_4964
mod = relay.transform.InferType()(mod)
mutated_mod['func_4964'] = func_4964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4964_call = mutated_mod.get_global_var('func_4964')
var_4966 = relay.var("var_4966", dtype = "int8", shape = (154, 2))#candidate|4966|(154, 2)|var|int8
var_4967 = relay.var("var_4967", dtype = "int32", shape = (4, 132))#candidate|4967|(4, 132)|var|int32
call_4965 = func_4964_call(var_4966,var_4967,)
output = call_4965
func_4968 = relay.Function([var_4966,var_4967,], output)
mutated_mod['func_4968'] = func_4968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1966_call = mod.get_global_var('func_1966')
func_1967_call = mutated_mod.get_global_var('func_1967')
call_5004 = relay.TupleGetItem(func_1966_call(), 1)
call_5005 = relay.TupleGetItem(func_1967_call(), 1)
output = call_5004
output2 = call_5005
func_5007 = relay.Function([], output)
mod['func_5007'] = func_5007
mod = relay.transform.InferType()(mod)
mutated_mod['func_5007'] = func_5007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5007_call = mutated_mod.get_global_var('func_5007')
call_5008 = func_5007_call()
output = call_5008
func_5009 = relay.Function([], output)
mutated_mod['func_5009'] = func_5009
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5056 = relay.var("var_5056", dtype = "uint8", shape = ())#candidate|5056|()|var|uint8
const_5057 = relay.const([[[3,7,-4,-3,6,7,5,-8,-3,10,9,-2],[8,-7,8,-8,-3,-4,-5,-9,10,9,-1,8],[-7,1,4,4,5,-10,-1,3,-5,-2,-3,3],[10,-3,-8,-5,1,8,-1,-7,4,-9,-8,-2],[1,-5,-6,10,-2,-6,-3,-3,9,10,-6,8],[8,6,2,-1,1,-9,-6,-2,3,-7,1,3],[-3,-9,3,8,5,-9,3,1,-6,10,1,-10],[-10,-3,9,10,-2,-1,-8,-8,7,1,-7,-4],[5,5,-6,2,-2,-6,2,2,-6,-1,-6,-7],[-4,2,5,6,-10,7,8,3,-6,-10,4,4],[-9,-4,2,7,-4,-9,5,-10,-8,10,-6,-5],[-1,-1,-9,6,-10,10,-6,9,-5,8,6,4],[4,-10,-6,-3,2,-3,8,8,10,9,-6,-5]],[[-9,-1,-2,10,1,-6,-7,-4,-2,-9,-4,8],[6,1,8,-4,-10,1,-2,-8,1,9,-3,-6],[-8,5,3,-10,-5,-10,7,-7,1,-1,-8,-5],[4,-4,7,-4,-4,-8,6,-5,-9,1,3,6],[-7,6,-7,2,-6,-10,8,-7,5,-1,-3,10],[-3,1,1,9,-4,1,9,7,-2,6,3,2],[1,8,2,-8,-1,3,6,-9,-1,4,-6,3],[9,7,5,9,7,-9,-5,3,8,7,-10,-6],[9,-8,2,4,-5,1,-2,-7,8,-7,-5,-9],[8,6,-6,-8,-4,-1,-10,-8,-6,6,-9,-9],[10,-2,-6,-7,10,-2,-8,9,-7,-8,5,-3],[-5,1,3,-3,-3,8,-5,-6,8,1,-8,-8],[1,3,2,-9,8,-10,-7,6,7,3,-8,-9]],[[7,-2,10,-2,-6,9,5,-4,7,4,7,5],[-3,-10,-7,7,6,-3,-1,-9,1,4,7,7],[-4,-7,-2,-6,3,7,-4,-6,-6,-7,3,4],[6,-10,-8,7,9,-2,6,-9,6,1,-2,10],[-7,3,-5,-5,-6,3,1,3,-4,2,-7,-1],[9,-10,-10,-7,9,8,-10,6,6,-8,-1,-9],[-10,-7,4,-7,-9,-1,9,-5,-1,-2,-3,-5],[-10,-8,-5,-6,-9,-1,8,-3,-7,7,4,4],[-2,-6,-7,-8,3,-7,-4,-5,-3,-6,-6,-9],[5,9,-7,-7,-3,6,4,-8,1,-7,-6,7],[-1,-2,4,-10,-9,-2,-3,-7,-4,8,-8,-6],[2,3,-8,-9,7,-5,-7,4,1,-2,7,-3],[-2,-8,9,-9,-7,-9,7,3,-3,7,-1,-8]],[[6,-9,9,3,-4,4,-3,4,-9,5,5,2],[-4,8,1,-10,-5,-10,-2,10,4,-1,8,8],[-10,-5,-3,-1,-7,4,6,-7,-2,7,-1,-2],[-10,-3,10,-6,-6,-3,8,-6,6,5,4,3],[10,-10,9,-8,-8,-5,-4,-7,4,1,-8,8],[-9,-6,-6,8,10,-9,-1,8,-9,8,-6,6],[-6,1,-4,-10,4,3,-6,8,-1,7,-5,1],[-7,-7,-3,2,-8,7,-4,4,-2,7,-9,4],[-1,2,-3,10,-2,-5,-8,8,2,9,-2,-1],[3,2,3,2,6,-2,6,1,8,7,-4,3],[2,-9,8,-9,-8,-3,-7,-6,10,4,-9,8],[-2,3,-9,10,-2,-6,-9,-3,5,9,-2,5],[-5,8,3,-1,-10,-8,3,-2,9,7,-4,6]],[[-6,-1,3,8,2,-10,-3,-9,7,6,7,5],[8,5,-2,-9,-9,-7,-6,-8,5,5,-1,3],[-4,-6,-6,9,6,-6,-7,7,7,8,-10,-4],[-4,-5,5,-1,-6,2,-1,-6,6,-5,6,1],[-7,7,-3,4,-9,-2,-6,3,-3,4,7,1],[1,-8,-10,-2,-8,-8,-9,-10,-1,5,7,-9],[-5,4,-2,-5,3,-2,4,1,5,3,-2,-4],[-5,-2,7,5,-6,-3,-6,-3,-6,1,1,2],[-1,-9,7,-8,4,-9,5,4,4,2,-10,8],[-10,-5,-3,4,-1,-9,-10,-5,8,7,7,-5],[-9,-1,-1,-4,-10,-1,-4,-6,-10,5,3,4],[3,7,1,1,10,-10,2,2,-10,4,-10,1],[7,-9,6,-4,-5,9,2,7,-1,-2,10,5]],[[-9,-8,-1,-8,-6,9,-10,-1,3,-10,-9,8],[5,-2,-4,-9,-6,-1,-5,-5,3,1,8,-10],[-3,7,-1,-1,-5,-3,10,1,6,-2,10,-10],[-1,8,-6,-10,1,2,-2,-10,7,-5,5,2],[-9,-2,2,-2,6,2,-10,-10,2,5,-4,1],[8,8,-6,-5,-7,-4,1,-1,7,9,-6,10],[-3,-3,2,8,-2,3,9,2,7,4,-3,-4],[-8,10,4,-3,-7,-3,10,8,10,-1,3,6],[1,-7,6,-7,-6,2,6,-8,2,1,5,-6],[-5,5,-2,8,-4,10,-8,-6,-3,-6,-4,4],[-8,-9,-6,-7,4,9,-6,9,-1,9,5,6],[6,9,-8,7,5,8,-3,-4,-8,2,1,-3],[-10,4,10,3,3,5,4,5,7,3,-8,-6]],[[-2,-2,2,9,-8,7,-4,3,4,-7,9,8],[-7,4,9,-4,10,8,-3,-4,-10,10,-5,1],[10,-8,2,-5,-8,-6,10,-2,8,-2,4,4],[9,10,-7,-1,-9,-8,-6,9,1,-3,-7,-1],[4,6,9,4,3,2,-4,-9,-4,5,-9,6],[-2,-10,5,-4,5,8,9,4,7,2,-8,6],[9,4,8,7,-2,-8,6,-7,-1,7,-7,2],[4,7,6,-6,7,-10,-1,-8,3,9,10,-2],[-10,-3,-9,-3,10,7,-3,10,4,-6,8,-7],[10,10,-1,-2,-9,-8,-9,-3,10,4,2,5],[3,-10,-7,-10,2,-8,-2,4,3,-2,-4,1],[3,-9,-7,-1,-8,-1,-8,4,3,-3,-2,8],[10,10,-3,9,-4,2,-3,-4,-6,7,-10,-3]]], dtype = "uint8")#candidate|5057|(7, 13, 12)|const|uint8
bop_5058 = relay.equal(var_5056.astype('bool'), const_5057.astype('bool')) # shape=(7, 13, 12)
output = bop_5058
output2 = bop_5058
func_5069 = relay.Function([var_5056,], output)
mod['func_5069'] = func_5069
mod = relay.transform.InferType()(mod)
var_5070 = relay.var("var_5070", dtype = "uint8", shape = ())#candidate|5070|()|var|uint8
output = func_5069(var_5070)
func_5071 = relay.Function([var_5070], output)
mutated_mod['func_5071'] = func_5071
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5073 = relay.var("var_5073", dtype = "float64", shape = (16, 9))#candidate|5073|(16, 9)|var|float64
uop_5074 = relay.atanh(var_5073.astype('float64')) # shape=(16, 9)
func_2170_call = mod.get_global_var('func_2170')
func_2174_call = mutated_mod.get_global_var('func_2174')
const_5080 = relay.const([-3.865517,-1.161675,5.118180,-9.629781,4.663318,-6.147170,1.342268,0.486720,-1.266034,-4.901743,1.105862,5.136237,3.800239,0.170312,7.971933,9.094158,3.687253,7.975323,1.656011,3.475138,-8.577262,4.732742,3.654795,7.868961,8.141294,-1.772808,7.107471,5.096525,-7.839823,7.479093,5.965412,3.992273,-6.477071,4.196082,7.389146,-6.145089,-7.593074,5.634661,1.429190,3.032519,0.749540,7.990653,-3.045604,2.015380,8.683564,-6.425511,-4.489100,0.528598,5.758864,-3.695721,-9.541694,-5.166495,-0.649682,-4.109401,9.824951,-4.690982,3.556283,7.835387,-3.961701,-4.925935,6.007320,-2.967134,-8.571666,-1.885482,2.182341,-7.968871,4.754389,-9.089913,6.023485,8.929089,6.718680,3.715656,-7.488511,-5.287287,5.489176,-1.002708,9.433354,-1.436191,5.549034,9.828679,7.758166,-7.721613,2.677121,8.403923,2.368935,5.048075,-2.043766,2.881601,8.351061,-3.914923,-2.670156,6.652531,8.817632,5.239241,-6.647709,9.886925,1.603939,-5.559553,2.093971,0.279775,5.539273,6.971405,3.949640,-2.764612,-1.709968,3.979519,2.700482,-4.244461,7.054994,6.553966,2.822133,5.001554,-1.319154,0.778951,7.937428,-8.553351,4.975887,8.660996,-9.010017,0.078698,-3.686289,4.188148,7.458165,-5.431460,-8.871558,-3.546164,5.812785,-3.881362,1.671714,3.250953,-8.721951,4.481320,6.614253,-0.237529,-0.250278,-7.677841,-8.385985,9.826140,8.957368,-9.298634,5.333382,1.028734,0.108614,5.304445,8.632646,4.003142,-7.932299,1.778255,4.439366,-5.855719,2.573675,-8.817533,-2.261499,4.531945,-3.676627,8.033266,-1.986661,-7.501449,-3.576476,3.960253,-0.906688,1.810950,8.004294,-2.830984,-3.994283,1.554556,2.285415,-9.753507,9.219978,0.253470,6.986685,4.918301,-8.399944,4.635174,3.265550,-4.903027,-8.513717,6.774344,4.913228,-8.258488,-3.750637,8.368415,-6.035749,5.573594,-9.222855,6.722800,-7.132015,4.481961,-8.097243,7.745556,9.561274,9.839549,-0.159103,-4.777932,-7.790997,8.347732,-7.138787,-1.771015,-6.993197,-9.072037,-1.207468,5.038137,-0.293817,1.977112,6.205458,5.090130,6.054801,-2.921113,7.421595,8.877768,-2.591259,-1.182542,7.850394,5.153460,-4.709079,-7.879728,7.147999,9.749507,9.625969,-8.980164,-5.020576,5.125166,-4.187385,8.830805,-4.803641,1.118610,0.408646,8.770831,-8.347365,2.399095,-7.939514,0.212036,3.893267,-7.841583,-8.084869,8.831960,-8.275044,-1.265540,9.708606,-3.725012,-5.555839,-9.492977,7.117961,-7.113228,-9.189508,-1.571164,-3.496056,-8.391986,4.809587,-4.524573,7.556525,-7.604542,-7.960931,-7.034598,-1.309218,-3.028385], dtype = "float64")#candidate|5080|(256,)|const|float64
var_5081 = relay.var("var_5081", dtype = "uint32", shape = (480, 4))#candidate|5081|(480, 4)|var|uint32
call_5079 = relay.TupleGetItem(func_2170_call(relay.reshape(const_5080.astype('float64'), [16, 2, 8]), relay.reshape(var_5081.astype('uint32'), [1920,]), ), 0)
call_5082 = relay.TupleGetItem(func_2174_call(relay.reshape(const_5080.astype('float64'), [16, 2, 8]), relay.reshape(var_5081.astype('uint32'), [1920,]), ), 0)
func_2856_call = mod.get_global_var('func_2856')
func_2858_call = mutated_mod.get_global_var('func_2858')
call_5084 = func_2856_call()
call_5085 = func_2856_call()
func_4609_call = mod.get_global_var('func_4609')
func_4610_call = mutated_mod.get_global_var('func_4610')
call_5086 = func_4609_call()
call_5087 = func_4609_call()
output = relay.Tuple([uop_5074,call_5079,const_5080,var_5081,call_5084,call_5086,])
output2 = relay.Tuple([uop_5074,call_5082,const_5080,var_5081,call_5085,call_5087,])
func_5089 = relay.Function([var_5073,var_5081,], output)
mod['func_5089'] = func_5089
mod = relay.transform.InferType()(mod)
var_5090 = relay.var("var_5090", dtype = "float64", shape = (16, 9))#candidate|5090|(16, 9)|var|float64
var_5091 = relay.var("var_5091", dtype = "uint32", shape = (480, 4))#candidate|5091|(480, 4)|var|uint32
output = func_5089(var_5090,var_5091,)
func_5092 = relay.Function([var_5090,var_5091,], output)
mutated_mod['func_5092'] = func_5092
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5116 = relay.var("var_5116", dtype = "float64", shape = (7, 2))#candidate|5116|(7, 2)|var|float64
uop_5117 = relay.exp(var_5116.astype('float64')) # shape=(7, 2)
output = uop_5117
output2 = uop_5117
func_5119 = relay.Function([var_5116,], output)
mod['func_5119'] = func_5119
mod = relay.transform.InferType()(mod)
mutated_mod['func_5119'] = func_5119
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5120 = relay.var("var_5120", dtype = "float64", shape = (7, 2))#candidate|5120|(7, 2)|var|float64
func_5119_call = mutated_mod.get_global_var('func_5119')
call_5121 = func_5119_call(var_5120)
output = call_5121
func_5122 = relay.Function([var_5120], output)
mutated_mod['func_5122'] = func_5122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4811_call = mod.get_global_var('func_4811')
func_4812_call = mutated_mod.get_global_var('func_4812')
call_5134 = relay.TupleGetItem(func_4811_call(), 4)
call_5135 = relay.TupleGetItem(func_4812_call(), 4)
func_5119_call = mod.get_global_var('func_5119')
func_5122_call = mutated_mod.get_global_var('func_5122')
var_5139 = relay.var("var_5139", dtype = "float64", shape = (14,))#candidate|5139|(14,)|var|float64
call_5138 = func_5119_call(relay.reshape(var_5139.astype('float64'), [7, 2]))
call_5140 = func_5119_call(relay.reshape(var_5139.astype('float64'), [7, 2]))
output = relay.Tuple([call_5134,call_5138,var_5139,])
output2 = relay.Tuple([call_5135,call_5140,var_5139,])
func_5142 = relay.Function([var_5139,], output)
mod['func_5142'] = func_5142
mod = relay.transform.InferType()(mod)
var_5143 = relay.var("var_5143", dtype = "float64", shape = (14,))#candidate|5143|(14,)|var|float64
output = func_5142(var_5143)
func_5144 = relay.Function([var_5143], output)
mutated_mod['func_5144'] = func_5144
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5160 = relay.var("var_5160", dtype = "int16", shape = (2, 1, 16))#candidate|5160|(2, 1, 16)|var|int16
var_5161 = relay.var("var_5161", dtype = "int16", shape = (2, 15, 16))#candidate|5161|(2, 15, 16)|var|int16
bop_5162 = relay.greater_equal(var_5160.astype('bool'), var_5161.astype('bool')) # shape=(2, 15, 16)
output = bop_5162
output2 = bop_5162
func_5165 = relay.Function([var_5160,var_5161,], output)
mod['func_5165'] = func_5165
mod = relay.transform.InferType()(mod)
mutated_mod['func_5165'] = func_5165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5165_call = mutated_mod.get_global_var('func_5165')
var_5167 = relay.var("var_5167", dtype = "int16", shape = (2, 1, 16))#candidate|5167|(2, 1, 16)|var|int16
var_5168 = relay.var("var_5168", dtype = "int16", shape = (2, 15, 16))#candidate|5168|(2, 15, 16)|var|int16
call_5166 = func_5165_call(var_5167,var_5168,)
output = call_5166
func_5169 = relay.Function([var_5167,var_5168,], output)
mutated_mod['func_5169'] = func_5169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1966_call = mod.get_global_var('func_1966')
func_1967_call = mutated_mod.get_global_var('func_1967')
call_5195 = relay.TupleGetItem(func_1966_call(), 1)
call_5196 = relay.TupleGetItem(func_1967_call(), 1)
output = relay.Tuple([call_5195,])
output2 = relay.Tuple([call_5196,])
func_5207 = relay.Function([], output)
mod['func_5207'] = func_5207
mod = relay.transform.InferType()(mod)
mutated_mod['func_5207'] = func_5207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5207_call = mutated_mod.get_global_var('func_5207')
call_5208 = func_5207_call()
output = call_5208
func_5209 = relay.Function([], output)
mutated_mod['func_5209'] = func_5209
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5210 = relay.const(7.070199, dtype = "float64")#candidate|5210|()|const|float64
const_5211 = relay.const([[[4.203113,-9.253571,-4.302244,8.630540,4.395300,2.592758,-6.236322,3.168627,3.685683,3.091501,-6.599819,-4.186733,8.495743],[-3.156110,-5.060360,-4.226850,-2.203448,7.564809,4.255050,4.281894,8.752573,-5.302476,-8.792391,5.023146,4.884173,-4.160434],[3.630269,-5.102614,-6.695564,9.078737,1.112810,-4.766958,-7.902183,-7.320698,1.604819,-7.901051,-2.641465,-7.583244,5.728504],[-5.555406,-8.462930,-6.980190,5.232135,-9.449002,2.781863,1.093013,6.852003,-4.770214,2.158427,-6.230664,6.320487,1.659376],[1.667789,-4.105788,4.439701,6.245988,5.869835,0.768513,3.078365,-3.333274,2.650255,5.601273,-5.526567,-4.179445,-1.913978],[-2.378967,-8.515309,9.075952,7.103660,-7.241373,7.771102,-2.100383,2.860235,5.613896,6.019058,-6.218507,7.454391,3.640558],[9.538064,3.390146,-4.146584,2.851005,7.285788,3.157715,-7.012837,-8.326694,1.749625,-4.127050,-0.794596,9.279366,-2.761161]],[[0.966453,8.749098,8.287295,-6.446795,-3.386115,-8.200987,3.585655,6.346547,-4.863781,-7.393228,1.540027,6.922992,9.938427],[2.493277,0.190562,-4.029328,-5.506753,5.595839,-9.126106,-5.834346,6.100198,8.037134,8.888592,8.009153,-3.112775,-5.123862],[5.969735,-6.463269,1.041460,-1.523167,2.089772,4.213406,-6.215301,6.695304,8.721319,-8.069430,-9.176210,9.642852,-6.799201],[0.384432,8.684712,-6.007576,1.744785,3.268402,-6.774667,0.934359,-7.544867,3.083236,6.266165,5.374753,1.120144,1.591600],[3.567890,3.751422,8.474032,6.444079,-1.652898,-0.914477,-2.385846,-0.540981,4.782202,-5.210168,9.863220,-6.702811,-1.927186],[2.177083,0.138327,7.174696,8.074618,-9.479208,4.204470,7.274299,8.228112,2.934074,8.766287,3.840338,1.305254,-5.746555],[6.246808,3.729396,6.499676,4.142317,-9.009326,3.885122,4.399282,-4.829579,8.673390,-7.430864,4.754184,-4.277664,-5.496105]],[[5.119983,9.789379,-3.315591,7.821028,-1.654885,-4.387661,8.686148,-1.008249,-0.341528,6.702990,-2.299138,8.690527,4.214302],[-5.970212,9.728253,1.548344,-7.831079,0.051564,-1.988249,1.441161,6.498302,-9.461947,-4.299736,7.259564,9.548173,8.794164],[-8.950833,-3.190187,-4.678491,2.775806,4.616643,-4.076357,-7.998581,-1.563460,-3.078905,4.551440,5.535680,2.934135,3.611813],[3.894300,1.197873,-9.315462,7.891886,3.743521,-6.685399,9.026270,-5.541906,7.723430,0.105212,9.617930,0.062973,8.998808],[-5.400470,-6.882843,-1.740471,-3.599943,8.295689,0.683397,-4.529532,-7.991444,1.204742,-0.183499,0.662315,-2.475384,-3.579084],[9.306466,2.903867,-8.115646,3.410358,8.398594,-3.528716,4.610740,-6.703708,-3.608775,5.560054,9.542420,0.579228,-6.081343],[-8.353841,7.634875,-6.118377,-6.593440,-0.433824,-0.721387,-1.483796,5.893756,5.462074,-8.902866,9.466601,-1.457032,0.659311]],[[4.010568,-7.295535,0.830159,5.594706,3.493550,0.667899,7.144497,-9.240821,8.755318,1.518460,-9.476572,2.379579,-6.335058],[1.331952,-1.007261,9.573130,2.454212,2.307918,-0.138478,-9.459893,3.469155,8.858462,6.455693,-8.387987,-9.545805,1.911610],[-9.074777,4.165696,7.254025,-2.066734,4.996695,1.094154,4.912997,-4.776764,5.171104,3.542950,-4.776628,0.220932,-8.431269],[0.650356,6.684121,4.712458,2.644282,6.339979,-4.790639,-9.348011,3.067591,-5.624418,3.878904,-8.925618,4.687143,5.760535],[-5.556667,3.042650,-8.658639,-7.377144,3.741831,0.781918,-2.677978,6.504232,-0.794084,8.084745,-1.464978,-1.971262,-3.588408],[-1.600033,-4.960861,7.555547,7.448745,-5.474370,2.327874,6.995668,-7.037072,-6.385595,5.305658,2.031038,7.515303,0.580951],[1.034543,1.307929,-2.097330,0.443195,5.190729,-3.321140,-0.032333,-8.005443,7.233350,-8.486528,2.129913,-8.544098,2.185426]],[[-4.726935,-0.881039,-3.690158,-4.113811,9.513882,4.545233,4.128866,-9.362723,8.669549,-0.510365,-9.371329,-9.495559,-2.106350],[3.087951,-9.946827,-3.395788,-3.689685,6.655238,-5.523140,-8.123846,-3.976720,0.552695,6.893043,7.720214,-6.680599,-5.766015],[0.372922,4.485255,-3.625870,4.045542,6.241558,-6.585199,-1.203394,-9.251916,6.329269,2.642485,2.837827,4.828880,-5.532303],[8.089944,5.358248,6.609697,-7.543798,-1.342510,-7.261224,-0.435956,3.415673,3.274939,-9.925927,9.714836,-2.444008,8.092835],[9.539151,-9.617294,-4.809320,-3.916785,-5.080471,-3.601373,-6.450864,0.017153,-6.499978,1.343218,-2.330856,-0.840561,-1.718841],[-2.603201,-6.300569,-3.069064,8.425290,0.639447,8.447607,5.275645,1.780589,-8.681665,-1.637734,-4.615792,0.981879,-6.999504],[-4.106694,-0.021199,-1.505465,-2.444058,0.971701,-2.096854,4.258952,-9.911734,0.747117,-4.259389,7.233873,8.885134,2.257947]],[[7.551981,8.289073,-9.300265,-0.976223,-7.066786,-3.802222,6.633278,-5.129949,-5.779585,8.495335,-6.366905,-5.040965,6.272452],[8.154821,3.072527,8.149192,-3.607592,-7.827988,-0.358747,9.273900,-9.908488,5.661825,4.639009,4.961862,-1.440518,-2.156274],[-6.602415,2.877378,3.761244,-5.996853,5.641069,9.315715,-6.743737,5.553458,-9.289515,4.325301,-6.217882,-0.245102,-6.084467],[1.106352,-4.378956,9.351704,-0.580811,-3.811522,-0.295938,-7.644753,-3.113536,1.006908,0.308307,-1.755269,9.573242,-0.971620],[-7.005345,-9.207025,2.887705,8.797474,1.530572,-1.056157,-6.323949,8.158575,8.837727,-1.460292,7.698223,-5.832109,-3.462794],[-5.097923,-7.382943,8.338433,0.492909,-5.202715,9.564138,-9.420215,-8.486750,-3.790011,-9.085682,2.641646,3.517696,0.323325],[3.478261,-1.180950,-1.734336,-0.029261,9.589920,-2.340891,3.457714,3.081756,-3.649475,5.413656,-6.599152,1.878160,-5.961569]],[[-7.022997,2.382151,-7.138667,6.364208,-0.374895,-6.620224,9.360646,9.600933,-0.774492,-5.596287,9.250706,-6.956862,2.055459],[1.805472,4.900788,-5.500012,8.585037,2.837843,-1.369942,-6.421325,8.998594,3.847990,5.700044,-1.116009,7.968227,4.098610],[2.722822,-8.955115,7.315381,-0.632817,5.551646,-5.931498,-6.233329,-6.398522,4.919811,7.650723,9.231115,0.619965,6.428868],[3.700814,-9.379257,-5.489674,-3.790841,-1.625876,-1.616514,-0.691442,2.590313,-8.608713,-5.863384,9.877974,-6.650002,-1.884579],[4.786507,-5.913460,4.985955,-4.744338,-5.920142,-7.779075,7.529772,-4.231860,7.145643,8.331171,-4.419861,-7.432264,-0.353114],[-8.807560,-8.031955,1.849969,-3.700526,0.510035,9.806728,8.848889,-6.828659,-9.102358,-6.509758,4.880693,7.194855,1.371353],[-2.786785,-9.134529,6.201490,5.343899,-3.771434,7.769947,-5.585503,-6.924601,-7.561628,-7.856388,8.776256,-4.965808,6.652976]],[[9.298536,-8.639884,-9.083782,-3.473300,-0.658429,2.238480,-9.611895,-5.669250,-2.814195,-9.042990,-3.970438,-5.416827,1.306527],[8.910830,-9.176379,6.780203,5.933828,-5.481712,-7.224050,-4.555749,-2.924696,0.154956,7.651890,-3.590784,-0.301094,1.957387],[-4.040028,7.499755,9.554493,9.334803,-4.126238,-8.499228,8.613322,7.417448,7.503013,-0.400817,-2.735281,-3.384054,0.106104],[2.822226,1.359409,-6.012275,1.515811,5.293693,-8.542635,-9.883646,4.301626,-4.325050,5.980120,8.517317,9.273196,-8.183462],[3.681708,-8.267191,0.596097,-5.492756,-1.355841,-9.623031,8.723973,-7.491526,0.356106,-8.418408,8.503961,2.451521,-2.705890],[-3.935588,-9.693717,5.371318,6.792042,-5.656549,-6.845640,-7.151914,5.049809,-5.230556,-6.888828,-9.828139,8.621112,9.047861],[4.416556,3.209199,1.527989,3.981049,-4.740049,1.024073,-9.983734,-0.232628,-5.002836,8.349388,-6.958293,-1.746804,7.198279]],[[-3.306763,2.284342,9.833781,-9.779945,3.765495,-3.955915,5.665417,4.386184,1.810637,-0.653743,-1.941106,-1.929821,-0.397179],[1.456486,6.911132,4.419776,2.574627,7.667298,7.821960,6.512175,3.599361,4.157747,-2.896934,1.895288,0.733567,-6.602900],[0.015420,8.874131,5.557144,-4.544929,1.989079,-7.730557,2.572768,-4.323995,1.071555,8.035601,8.661620,4.486833,4.587946],[9.094727,-8.949099,3.680379,-0.991622,9.437988,0.961040,7.416471,1.261798,-1.064930,6.120173,7.747404,-1.057381,-2.783487],[4.031604,-9.534594,-9.043041,1.088592,8.911244,-8.225436,-7.268211,8.955169,-9.886419,-5.911914,-0.134350,-6.237968,5.870624],[-3.604818,-8.746428,-8.460810,-8.713084,-9.468858,-6.684726,2.109007,-0.410915,-8.993926,9.114500,4.748831,-2.293520,0.574932],[-9.006304,-2.534543,8.200600,2.519446,3.183182,3.652364,-9.195098,4.671372,-8.953205,-1.632519,-9.433949,8.782447,-4.689922]],[[4.972586,-3.134554,2.649284,-3.868160,5.336127,-0.159674,6.281685,-2.519246,5.186049,6.136080,8.758790,2.889172,-2.145476],[-7.832707,4.936122,-1.686685,3.923510,4.777501,9.387180,6.834441,7.208408,-2.014731,7.691960,-2.171346,2.530230,4.406021],[6.606498,5.042498,6.524227,4.722570,-8.189139,8.807927,-9.117442,3.839389,0.844867,-7.696563,-1.190338,5.753299,9.999777],[5.582008,4.165449,-9.038600,1.029349,3.919716,9.614984,-1.419197,-4.236534,-7.458285,-3.465203,3.290056,-2.968619,4.486740],[-5.698703,-7.556249,-6.353524,-6.462418,9.020200,-7.717365,-8.299875,6.400683,-1.085314,-5.946178,3.910689,2.526298,-9.495967],[9.789837,1.098194,2.138474,-0.166056,8.982962,7.940650,-9.724262,-6.811053,-4.184787,-7.736721,6.462296,3.302072,-8.229636],[-7.002647,-1.849517,-9.759089,3.558882,-9.064748,9.732583,-2.938622,1.894535,-5.887343,-7.844328,-4.710675,-5.763647,-3.650391]],[[7.184148,0.197996,0.700764,-6.580845,-2.202689,4.883737,-9.773721,-8.051478,-7.375896,-1.568736,5.809360,-4.268958,-9.867448],[-0.995027,7.785798,-6.773474,-3.158561,-1.258938,0.413203,5.073703,3.570809,5.561262,2.703288,2.962178,-8.132727,1.963060],[3.586128,-4.221270,9.407923,-0.433961,5.215645,8.845975,-7.673418,9.212185,-6.322456,3.259783,-4.978627,1.969618,-7.397624],[5.637666,2.123155,-8.711219,-0.387508,-1.118854,7.779383,9.844159,4.055669,-1.057723,-1.791593,2.500364,9.832118,5.608084],[6.433731,9.824300,3.201334,-9.243103,0.089024,2.666699,7.775390,4.603885,-9.787051,-0.644980,-9.221133,9.683000,-9.320229],[5.963038,5.904055,2.782454,-0.131502,0.702280,-0.009809,-6.754827,-9.827443,6.105808,2.532103,5.833982,5.316024,7.565250],[-0.357569,7.057928,9.413502,-4.873476,2.522748,1.239547,-4.843907,8.196415,-3.642241,7.982024,-9.955540,9.379482,8.523346]],[[5.272448,-7.409227,-6.066309,-9.015905,7.432469,1.694574,-5.639986,-0.995281,-4.151456,-8.161751,8.299827,3.526724,-3.682071],[9.705755,5.099176,-8.101539,-6.825338,1.709992,9.249640,-3.788650,7.475679,0.195000,-2.934276,7.241503,-6.073056,-7.468793],[-9.898781,-5.303334,0.146485,-8.671290,1.041211,-6.517493,3.890921,-9.206727,4.523530,-3.560240,-7.498084,-7.470223,3.892328],[2.397620,-1.794638,2.030710,8.030776,0.970473,6.809239,8.115687,-8.134541,-5.532877,1.150244,-7.443332,6.555637,5.238519],[-7.814688,-9.524340,2.019353,-0.965903,-4.103786,6.900408,6.271512,-2.164537,-6.229732,5.379729,2.626787,4.768895,4.570087],[0.244738,-5.066110,-5.730296,1.187520,-1.976860,0.176644,-9.105400,-8.719277,9.157442,-4.631981,-2.160534,-1.034692,4.512768],[-8.824582,-7.198275,-2.132414,-3.644652,7.550402,-0.765321,-2.952710,5.514359,8.690920,1.289920,1.349231,5.395205,-2.446749]]], dtype = "float64")#candidate|5211|(12, 7, 13)|const|float64
bop_5212 = relay.power(const_5210.astype('float64'), const_5211.astype('float64')) # shape=(12, 7, 13)
bop_5233 = relay.logical_xor(const_5210.astype('int64'), bop_5212.astype('int64')) # shape=(12, 7, 13)
output = relay.Tuple([bop_5233,])
output2 = relay.Tuple([bop_5233,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')
module1.set_input(**params)
module1.run()
res2 = intrp2.evaluate()()
res3 = intrp3.evaluate()()
res4 = intrp4.evaluate()()
res2 = vmobj_to_list(res2)
res3 = vmobj_to_list(res3)
res4 = vmobj_to_list(res4)
res1_0 = module1.get_output(0).asnumpy()
res2_0 = res2[0].asnumpy()
res3_0 = res3[0].asnumpy()
res4_0 = res4[0].asnumpy()
np.testing.assert_allclose(res1_0 ,res2_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_0 ,res3_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_0 ,res4_0, atol=1e-3, rtol=1e-3)
(res1_0 == res2_0).all()
(res1_0 == res3_0).all()
(res1_0 == res4_0).all()
module5.set_input(**params)
module5.run()
res6 = intrp6.evaluate()()
res7 = intrp7.evaluate()()
res8 = intrp8.evaluate()()
res6 = vmobj_to_list(res6)
res7 = vmobj_to_list(res7)
res8 = vmobj_to_list(res8)
res5_0 = module5.get_output(0).asnumpy()
res6_0 = res6[0].asnumpy()
res7_0 = res7[0].asnumpy()
res8_0 = res8[0].asnumpy()
np.testing.assert_allclose(res5_0 ,res6_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_0 ,res7_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_0 ,res8_0, atol=1e-3, rtol=1e-3)
(res5_0 == res6_0).all()
(res5_0 == res7_0).all()
(res5_0 == res8_0).all()
module9.set_input(**params)
module9.run()
res10 = intrp10.evaluate()()
res11 = intrp11.evaluate()()
res12 = intrp12.evaluate()()
res10 = vmobj_to_list(res10)
res11 = vmobj_to_list(res11)
res12 = vmobj_to_list(res12)
res9_0 = module9.get_output(0).asnumpy()
res10_0 = res10[0].asnumpy()
res11_0 = res11[0].asnumpy()
res12_0 = res12[0].asnumpy()
np.testing.assert_allclose(res9_0 ,res10_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_0 ,res11_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_0 ,res12_0, atol=1e-3, rtol=1e-3)
(res9_0 == res10_0).all()
(res9_0 == res11_0).all()
(res9_0 == res12_0).all()
module13.set_input(**params)
module13.run()
res14 = intrp14.evaluate()()
res15 = intrp15.evaluate()()
res16 = intrp16.evaluate()()
res14 = vmobj_to_list(res14)
res15 = vmobj_to_list(res15)
res16 = vmobj_to_list(res16)
res13_0 = module13.get_output(0).asnumpy()
res14_0 = res14[0].asnumpy()
res15_0 = res15[0].asnumpy()
res16_0 = res16[0].asnumpy()
np.testing.assert_allclose(res13_0 ,res14_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_0 ,res15_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_0 ,res16_0, atol=1e-3, rtol=1e-3)
(res13_0 == res14_0).all()
(res13_0 == res15_0).all()
(res13_0 == res16_0).all()
module17.set_input(**params)
module17.run()
res18 = intrp18.evaluate()()
res19 = intrp19.evaluate()()
res20 = intrp20.evaluate()()
res18 = vmobj_to_list(res18)
res19 = vmobj_to_list(res19)
res20 = vmobj_to_list(res20)
res17_0 = module17.get_output(0).asnumpy()
res18_0 = res18[0].asnumpy()
res19_0 = res19[0].asnumpy()
res20_0 = res20[0].asnumpy()
np.testing.assert_allclose(res17_0 ,res18_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_0 ,res19_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_0 ,res20_0, atol=1e-3, rtol=1e-3)
(res17_0 == res18_0).all()
(res17_0 == res19_0).all()
(res17_0 == res20_0).all()
module21.set_input(**params)
module21.run()
res22 = intrp22.evaluate()()
res23 = intrp23.evaluate()()
res24 = intrp24.evaluate()()
res22 = vmobj_to_list(res22)
res23 = vmobj_to_list(res23)
res24 = vmobj_to_list(res24)
res21_0 = module21.get_output(0).asnumpy()
res22_0 = res22[0].asnumpy()
res23_0 = res23[0].asnumpy()
res24_0 = res24[0].asnumpy()
np.testing.assert_allclose(res21_0 ,res22_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_0 ,res23_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_0 ,res24_0, atol=1e-3, rtol=1e-3)
(res21_0 == res22_0).all()
(res21_0 == res23_0).all()
(res21_0 == res24_0).all()

'''16464671],

'''