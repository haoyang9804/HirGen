import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
def vmobj_to_list(o, dtype="float32"):
    if isinstance(o, tvm.nd.NDArray):
        return [o]
    elif isinstance(o, tvm.runtime.container.ADT):
        result = []
        for f in o:
            result.extend(vmobj_to_list(f, dtype))
        return result
    else:
        return o


mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_89 = relay.const([[[5,5,-4,-2],[6,9,7,-7],[-8,-4,4,-9],[3,-1,4,10],[-1,7,-10,6],[4,-3,-9,-3],[9,8,-3,8],[4,-8,-7,8],[-3,-3,5,-1],[7,9,-6,5]],[[-4,-1,-1,-3],[-8,-3,-9,-5],[7,9,7,2],[6,10,-6,9],[7,6,-9,-2],[10,-2,-8,3],[-4,9,4,5],[-5,-2,-1,10],[1,7,5,-6],[7,-3,-6,-2]],[[1,-4,-5,5],[-6,-10,9,9],[5,9,5,4],[5,9,-6,-4],[6,-9,8,2],[10,3,3,-9],[-7,-8,-4,-6],[-10,2,8,2],[-3,7,-7,-7],[3,6,3,-4]],[[-6,5,-7,-10],[-8,2,8,1],[4,-5,9,8],[4,-7,3,-7],[6,-8,-5,-9],[-1,-10,-4,10],[-1,9,-7,-3],[2,7,-3,-4],[-8,-1,1,7],[-10,10,-10,-4]],[[-5,2,-1,-2],[4,10,-4,4],[7,7,7,9],[-1,-3,-9,-1],[-9,6,-7,-5],[-8,6,-7,5],[8,-1,6,-4],[1,5,4,6],[-10,-5,1,-5],[3,2,-4,6]],[[-7,-8,-9,9],[10,1,1,-7],[-10,-7,2,-3],[-3,-9,-1,8],[-3,2,-9,-1],[-4,-10,2,7],[4,4,-8,-3],[1,8,8,-10],[4,-1,3,-9],[8,4,-1,-1]],[[-7,-10,-3,5],[-6,6,1,-5],[9,8,-9,9],[-8,-7,-5,3],[3,-8,8,-10],[8,-10,-3,-4],[10,2,-8,-9],[5,-5,-4,6],[-2,4,8,4],[-2,-5,-9,5]],[[2,3,10,8],[7,10,2,1],[-10,3,8,4],[-4,-5,1,-4],[-9,6,-8,7],[-10,9,2,-5],[4,10,9,-4],[-4,-8,8,9],[9,-9,2,4],[-4,3,2,8]],[[-7,-10,2,-1],[-4,3,-1,1],[8,6,-7,-1],[1,7,-1,1],[-1,8,6,2],[-6,-4,-5,-4],[-5,6,-1,3],[10,-7,-4,3],[-1,1,-8,-7],[-5,-1,6,-7]],[[8,-4,-10,-2],[6,-3,10,-8],[-5,-10,3,9],[-10,2,8,8],[-5,-6,7,5],[-9,-8,4,-4],[6,-4,-1,8],[-5,-9,10,-10],[10,-9,-6,-2],[3,-8,5,-8]]], dtype = "int8")#candidate|89|(10, 10, 4)|const|int8
var_90 = relay.var("var_90", dtype = "int8", shape = (10, 10, 4))#candidate|90|(10, 10, 4)|var|int8
bop_91 = relay.maximum(const_89.astype('int8'), relay.reshape(var_90.astype('int8'), relay.shape_of(const_89))) # shape=(10, 10, 4)
output = bop_91
output2 = bop_91
func_112 = relay.Function([var_90,], output)
mod['func_112'] = func_112
mod = relay.transform.InferType()(mod)
mutated_mod['func_112'] = func_112
mutated_mod = relay.transform.InferType()(mutated_mod)
var_113 = relay.var("var_113", dtype = "int8", shape = (10, 10, 4))#candidate|113|(10, 10, 4)|var|int8
func_112_call = mutated_mod.get_global_var('func_112')
call_114 = func_112_call(var_113)
output = call_114
func_115 = relay.Function([var_113], output)
mutated_mod['func_115'] = func_115
mutated_mod = relay.transform.InferType()(mutated_mod)
const_258 = relay.constdtype = "float64")#candidate|258|(14, 9, 15)|const|float64
uop_259 = relay.cos(const_258.astype('float64')) # shape=(14, 9, 15)
func_112_call = mod.get_global_var('func_112')
func_115_call = mutated_mod.get_global_var('func_115')
var_278 = relay.var("var_278", dtype = "int8", shape = (400,))#candidate|278|(400,)|var|int8
call_277 = func_112_call(relay.reshape(var_278.astype('int8'), [10, 10, 4]))
call_279 = func_112_call(relay.reshape(var_278.astype('int8'), [10, 10, 4]))
func_112_call = mod.get_global_var('func_112')
func_115_call = mutated_mod.get_global_var('func_115')
call_281 = func_112_call(relay.reshape(call_277.astype('int8'), [10, 10, 4]))
call_282 = func_112_call(relay.reshape(call_277.astype('int8'), [10, 10, 4]))
func_112_call = mod.get_global_var('func_112')
func_115_call = mutated_mod.get_global_var('func_115')
call_285 = func_112_call(relay.reshape(call_281.astype('int8'), [10, 10, 4]))
call_286 = func_112_call(relay.reshape(call_281.astype('int8'), [10, 10, 4]))
func_112_call = mod.get_global_var('func_112')
func_115_call = mutated_mod.get_global_var('func_115')
call_287 = func_112_call(relay.reshape(call_281.astype('int8'), [10, 10, 4]))
call_288 = func_112_call(relay.reshape(call_281.astype('int8'), [10, 10, 4]))
bop_292 = relay.right_shift(uop_259.astype('int32'), relay.reshape(const_258.astype('int32'), relay.shape_of(uop_259))) # shape=(14, 9, 15)
const_299 = relay.const([[[-10,8,-1,10,-1,-1,3,-3,-6,-3,-9,8,4,-2,4],[-2,7,2,2,-6,-2,-9,-1,-8,-1,5,-3,-9,-3,-3],[-8,-9,-7,-3,-2,-2,-7,3,-3,7,3,3,5,4,-4],[-4,4,-7,6,-1,-10,5,4,-5,1,1,4,-2,10,8],[5,-6,9,1,3,4,-5,-1,8,-5,10,5,-4,4,2],[-7,5,-7,9,10,10,-7,4,7,6,3,10,9,-2,9],[6,-3,3,5,-8,6,-10,4,-3,-6,-4,6,-6,9,9],[-3,6,-7,-4,1,-9,9,-9,3,-5,-2,9,-3,4,-4],[10,9,-3,-4,-1,10,-1,-1,-3,2,-5,-9,4,-3,5]],[[-3,-5,2,-1,7,-1,-5,-6,-3,-3,9,3,4,1,6],[-5,3,-3,7,3,-9,-1,-9,1,7,8,1,5,9,-5],[4,-5,-9,1,-4,10,-9,8,-7,9,-2,-10,-8,-8,-3],[-1,-2,-1,7,-7,-6,-6,7,2,-4,9,-10,9,-4,-5],[2,3,4,-5,5,4,8,-6,-8,10,-1,-8,-8,9,7],[-10,-3,5,6,-2,1,-4,-8,5,-1,7,-3,-5,3,-4],[9,1,6,3,3,5,-1,-2,-1,4,3,-6,-8,7,6],[-6,-7,8,1,7,7,10,5,7,-1,10,6,-10,8,10],[1,10,10,-3,-1,7,-4,-6,-10,-5,-5,5,-4,8,2]],[[-7,-1,-3,6,4,-8,-5,-7,-1,5,-10,-4,4,9,1],[7,8,-6,-8,9,-10,-2,-9,-8,-8,8,-7,-2,-2,2],[-4,-1,6,-5,8,8,-9,4,9,-8,-9,4,1,-5,-9],[-4,6,7,-3,-8,-6,-10,7,3,-8,-5,-7,2,-7,9],[-4,10,8,-3,2,1,-10,-3,7,-4,-4,3,-8,-9,2],[2,3,-7,3,-2,-3,-3,8,-9,1,-1,2,8,10,6],[7,9,4,-1,-8,-2,-9,-4,-10,-1,10,-7,7,4,-7],[9,-10,6,-4,1,-1,3,-7,-7,3,9,10,-6,3,4],[10,-4,4,6,-6,-10,-9,8,-1,4,-3,-7,-9,9,3]],[[-4,9,-3,7,-10,6,3,-2,-3,6,-9,8,-1,9,1],[-3,2,2,-4,-9,-5,4,-2,6,1,1,-10,-4,-8,-3],[4,5,-10,5,7,8,-9,-7,-9,6,-7,-8,8,10,-6],[6,-8,7,-9,2,4,-7,10,-4,10,-9,-7,-6,10,8],[10,7,4,-6,6,-8,-7,5,-2,8,-9,1,-5,-8,4],[2,-1,-3,-3,-9,-8,9,-5,-5,-3,8,-4,-5,-5,-4],[2,-4,5,9,6,-6,6,-10,-10,-7,9,-5,4,2,5],[-2,-1,10,-4,3,1,-4,5,-8,-10,7,2,-4,4,-10],[1,-5,-8,8,8,-4,1,5,-4,2,-10,5,3,-10,5]],[[-5,2,9,-9,-6,10,-3,7,-8,3,-7,9,6,-1,-8],[-8,1,4,-2,6,-9,7,7,10,-7,5,7,-5,-5,-9],[3,7,7,-5,-4,6,-9,-5,-9,2,-9,1,1,9,4],[-1,3,-2,-1,1,10,-1,2,-5,-3,8,-8,-10,-5,-6],[-6,8,7,2,-9,-5,2,-7,-2,-7,3,-8,4,-9,8],[-10,4,-6,9,9,2,-8,10,9,10,-6,1,4,-4,6],[8,-6,5,-3,3,2,-6,10,-6,7,-6,8,6,3,-5],[-2,5,5,-4,-2,-10,10,7,-3,10,-8,2,-4,-8,-10],[5,7,-2,10,1,-10,-8,-9,4,-7,-10,3,-9,-2,-5]],[[1,6,2,10,-5,5,4,-10,10,2,10,-2,-6,1,9],[10,-10,10,6,5,1,-9,-7,7,-10,-5,-1,-3,-10,-4],[-2,1,-3,-3,10,-2,-10,-7,7,4,-3,10,-8,10,1],[8,-2,-5,-1,6,8,6,9,5,-7,7,-8,3,-2,-5],[-9,-6,6,-6,2,2,-1,8,-2,-8,-9,-9,2,6,-7],[8,-8,6,8,2,-5,-9,-3,-6,9,-5,9,-9,6,-6],[6,10,10,7,10,-9,-6,-1,7,-5,3,7,6,4,1],[6,6,3,-1,-4,-2,4,-1,-8,-2,7,2,9,1,-9],[-3,-2,-10,7,-9,-10,3,-10,9,-5,10,-10,7,10,3]],[[10,6,-7,1,8,4,-3,-4,-5,1,-7,3,5,5,8],[7,-3,10,-1,-3,-10,-9,-8,-6,-7,7,7,-9,2,8],[-1,-5,-1,-6,5,3,8,8,6,-3,2,5,9,-4,8],[-8,8,-5,10,1,-1,-3,-6,-7,7,-5,9,10,4,9],[-5,-2,4,-4,-7,10,-9,8,-5,10,-4,-1,-5,-3,5],[10,10,-5,-9,9,-5,-5,1,2,8,-8,-8,-7,9,1],[-1,6,-5,6,-1,4,-3,10,4,-1,-7,7,9,-8,4],[-4,4,-8,10,-7,-10,-5,-1,8,9,10,-8,1,10,6],[3,-9,-10,6,-1,-9,5,4,10,-1,-3,5,5,1,-7]],[[1,8,5,-7,6,-5,10,10,5,-8,-9,7,-4,-1,-10],[-3,6,-3,7,-5,9,-9,-1,-5,-1,3,5,7,4,6],[4,-5,9,5,-7,1,10,6,-1,10,-5,-5,2,-2,7],[10,-5,6,-2,-10,-1,6,-2,-5,-5,-6,-7,-1,-2,7],[8,5,-4,-7,-3,-9,9,8,-10,-6,-7,5,5,6,6],[-9,3,-10,-4,-5,-6,-1,-2,6,-1,6,5,5,5,7],[7,8,9,-8,6,2,-10,7,-2,-3,-5,5,8,8,-3],[7,-1,1,4,3,-5,-2,-7,-8,-1,-4,-7,4,8,1],[9,1,-4,9,4,-9,-6,7,-9,-4,3,7,-6,-7,7]],[[6,-5,-7,1,-8,10,5,10,1,4,-2,-1,9,3,2],[4,-5,6,10,8,10,5,3,-5,7,-8,-8,-9,8,1],[-2,-9,3,-9,-1,-1,4,-8,3,1,-5,-10,-10,8,-3],[-2,-3,1,6,-1,6,2,7,-7,5,2,-7,-3,-1,6],[1,8,9,-1,9,4,3,-7,5,-1,-6,-10,-5,-1,-3],[2,-7,7,-10,-10,10,8,3,-4,-3,-1,-9,-1,4,-5],[-9,3,7,-1,-10,-10,9,4,5,-10,-4,-7,-2,9,10],[-4,-1,6,-7,-9,-10,-7,-8,10,-10,4,-3,-9,9,10],[-4,-8,-1,6,-1,-5,5,3,5,-9,-6,-9,3,-4,7]],[[-10,8,5,2,7,6,8,6,-5,5,-5,6,-9,-1,-9],[-7,-9,-7,-4,6,6,-5,-3,6,-3,-1,-3,2,6,-7],[4,-4,-8,-7,-3,4,-5,4,4,-8,-4,-5,8,10,-3],[-10,10,-9,-6,9,-9,9,-5,-4,4,6,-2,4,8,-5],[1,-7,-9,9,1,3,2,6,6,8,3,-7,-3,-7,6],[-2,-5,-10,-5,10,-7,-8,6,8,-5,1,8,-4,-2,4],[1,7,-4,2,5,7,-4,3,-10,-1,5,4,-1,-6,7],[1,7,6,8,-3,8,5,5,-4,-8,2,7,9,-2,1],[7,9,-3,-7,1,-1,10,-2,5,9,-9,9,7,-5,4]],[[-10,7,7,4,-8,4,3,9,-8,-1,10,-10,-7,-4,7],[8,1,7,-5,1,-6,-7,8,6,2,5,-7,-8,1,7],[-4,-5,2,2,-3,-5,10,7,9,6,-1,3,5,4,-7],[-3,-8,5,-10,-7,4,1,-5,-3,-4,-6,-1,2,-4,1],[-7,-2,5,-5,6,10,-6,-3,-3,-5,-7,-9,2,4,8],[-7,2,-2,-7,-3,-8,3,8,-5,4,8,-3,-2,10,2],[1,-5,-9,1,-3,-10,-9,-7,1,-10,3,10,4,-2,-6],[-6,-4,-2,-7,10,7,-3,5,5,-3,4,-2,-4,4,5],[-10,1,-10,-6,5,-9,8,-1,3,8,3,-5,-6,-3,7]],[[-4,-9,-3,-7,-7,5,-5,1,3,-5,3,-4,-5,9,3],[-6,-5,10,-5,6,-9,10,-3,3,-5,8,-6,-6,5,1],[-3,4,1,5,1,7,-2,8,-8,-1,9,2,-6,-6,-4],[-10,3,5,8,-1,-3,2,7,-1,1,1,5,-5,2,3],[-10,2,-9,-1,-9,9,-3,7,1,7,2,-1,-9,-10,-10],[6,-8,-5,-7,5,9,10,-4,-1,7,-6,6,-7,-6,6],[4,7,-4,10,-9,9,-6,9,6,-5,-10,3,10,10,9],[-3,-2,4,5,7,-8,3,5,-3,3,-5,1,-6,-8,-9],[4,9,-4,-2,-8,2,-5,-9,6,3,-2,-10,-6,3,5]],[[-10,-6,7,-5,-7,-9,-10,-6,7,3,-1,8,-9,10,-8],[-6,5,9,-9,4,9,7,-8,-8,-4,6,-7,7,-1,-8],[1,7,-5,2,3,2,-7,-1,3,-1,2,2,-6,-7,-7],[5,-10,-6,3,9,-1,-7,-1,5,-10,10,-8,3,-3,-10],[-7,8,1,4,-1,-9,-3,3,5,-7,6,8,2,-9,-4],[-7,4,-2,-9,-9,9,-5,2,-8,5,3,5,-9,-3,-3],[-5,-9,6,-6,-6,-5,2,-9,7,-3,-5,8,-8,-6,-5],[-7,9,-3,-7,-10,-3,10,-7,10,-8,-8,9,-4,5,7],[1,2,2,-5,-2,4,9,3,-4,-2,5,-9,8,-3,-5]],[[2,-6,8,-8,9,-7,7,8,4,2,8,5,-4,-3,7],[7,6,4,5,6,-3,-8,10,2,-2,1,-2,9,1,-2],[2,8,7,1,-3,8,9,-8,-6,5,5,-9,-4,4,2],[4,7,1,3,6,6,-3,1,-8,-2,-4,10,-3,-2,2],[2,8,-9,3,-1,-9,4,4,5,-2,-4,3,8,10,2],[-5,-9,6,-4,-1,2,3,-4,-3,10,6,-2,10,7,-3],[2,-5,-3,-9,2,3,2,1,-5,-6,10,1,-3,3,10],[10,3,5,8,2,-7,-5,-3,6,-1,-2,-4,-2,-3,8],[-10,-9,6,9,-1,-6,-8,-7,9,8,4,10,5,9,-10]]], dtype = "int32")#candidate|299|(14, 9, 15)|const|int32
bop_300 = relay.subtract(bop_292.astype('uint64'), relay.reshape(const_299.astype('uint64'), relay.shape_of(bop_292))) # shape=(14, 9, 15)
bop_303 = relay.floor_mod(uop_259.astype('float64'), relay.reshape(bop_292.astype('float64'), relay.shape_of(uop_259))) # shape=(14, 9, 15)
output = relay.Tuple([call_277,var_278,call_281,call_285,call_287,bop_300,bop_303,])
output2 = relay.Tuple([call_279,var_278,call_282,call_286,call_288,bop_300,bop_303,])
func_311 = relay.Function([var_278,], output)
mod['func_311'] = func_311
mod = relay.transform.InferType()(mod)
var_312 = relay.var("var_312", dtype = "int8", shape = (400,))#candidate|312|(400,)|var|int8
output = func_311(var_312)
func_313 = relay.Function([var_312], output)
mutated_mod['func_313'] = func_313
mutated_mod = relay.transform.InferType()(mutated_mod)
var_790 = relay.var("var_790", dtype = "float32", shape = (6, 4, 13))#candidate|790|(6, 4, 13)|var|float32
uop_791 = relay.sqrt(var_790.astype('float32')) # shape=(6, 4, 13)
func_112_call = mod.get_global_var('func_112')
func_115_call = mutated_mod.get_global_var('func_115')
const_795 = relay.const([7,-3,2,5,4,-5,-3,-1,-10,7,5,3,-1,-1,4,10,-1,6,-1,-9,8,-5,5,-2,-6,4,-2,-5,7,-7,10,-4,8,-4,-2,-1,9,1,-3,2,3,-3,4,-5,-4,3,10,6,-9,5,5,4,-6,-9,-10,-10,-6,8,-1,-10,7,-2,3,5,8,7,-7,-7,-8,4,7,2,7,3,3,6,9,7,3,5,-1,5,3,-3,-10,10,-10,-3,2,-6,3,5,7,-5,-3,4,-3,3,2,-1,-4,-2,-5,1,2,2,-1,-7,-8,-1,-3,6,3,-5,7,1,-9,6,-9,9,8,7,8,-6,-8,-7,1,8,3,2,1,3,-6,2,-8,7,4,-3,-9,9,7,8,-1,5,4,-6,-1,-5,-8,2,-9,1,-2,6,-7,-9,-10,4,5,-5,-9,4,-10,6,-7,3,7,9,-10,1,9,2,6,3,9,10,9,-7,2,-6,-2,-7,2,-8,-3,8,10,-3,9,-10,4,-4,6,1,-5,-7,5,-5,9,7,-4,-6,-8,1,-5,-4,2,1,9,6,-10,-10,8,-9,-9,-1,-3,7,5,9,-10,-8,-2,10,2,7,2,4,3,9,2,-4,8,-8,-9,5,-9,4,4,3,2,8,7,6,-9,-3,6,8,9,8,-5,9,-8,5,7,-9,-10,-2,1,9,2,1,-9,3,6,-8,-6,5,2,-5,-2,7,-1,10,-9,-2,-1,9,3,-10,3,10,-6,3,-6,6,-3,9,4,-8,6,-1,4,-9,-4,-7,-8,8,1,4,2,-5,-3,-2,2,7,9,-9,2,1,-6,4,-5,-9,-8,4,-3,8,3,-2,-8,-5,10,2,-1,-9,3,-2,-8,7,-4,-7,-1,-2,2,9,4,9,-9,8,-7,-6,2,9,9,-5,6,-7,-4,-1,-4,8,-6,5,-1,-5,10,7,9,2,-1,-8,-9,-3,-7,-1,5,-10,8,6,8,6,-3,10,10,-10,8,-7,5,2,-6,-3,-2,-2,8,-10,9,4,2,4,3,2,-1,10,2,-10,-5,-9,-5,9], dtype = "int8")#candidate|795|(400,)|const|int8
call_794 = func_112_call(relay.reshape(const_795.astype('int8'), [10, 10, 4]))
call_796 = func_112_call(relay.reshape(const_795.astype('int8'), [10, 10, 4]))
bop_800 = relay.not_equal(uop_791.astype('bool'), relay.reshape(var_790.astype('bool'), relay.shape_of(uop_791))) # shape=(6, 4, 13)
uop_813 = relay.cos(uop_791.astype('float32')) # shape=(6, 4, 13)
func_311_call = mod.get_global_var('func_311')
func_313_call = mutated_mod.get_global_var('func_313')
call_817 = relay.TupleGetItem(func_311_call(relay.reshape(const_795.astype('int8'), [400,])), 4)
call_818 = relay.TupleGetItem(func_313_call(relay.reshape(const_795.astype('int8'), [400,])), 4)
output = relay.Tuple([call_794,const_795,bop_800,uop_813,call_817,])
output2 = relay.Tuple([call_796,const_795,bop_800,uop_813,call_818,])
func_823 = relay.Function([var_790,], output)
mod['func_823'] = func_823
mod = relay.transform.InferType()(mod)
mutated_mod['func_823'] = func_823
mutated_mod = relay.transform.InferType()(mutated_mod)
var_824 = relay.var("var_824", dtype = "float32", shape = (6, 4, 13))#candidate|824|(6, 4, 13)|var|float32
func_823_call = mutated_mod.get_global_var('func_823')
call_825 = func_823_call(var_824)
output = call_825
func_826 = relay.Function([var_824], output)
mutated_mod['func_826'] = func_826
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1175 = relay.var("var_1175", dtype = "float64", shape = (3, 15, 8))#candidate|1175|(3, 15, 8)|var|float64
uop_1176 = relay.asinh(var_1175.astype('float64')) # shape=(3, 15, 8)
func_311_call = mod.get_global_var('func_311')
func_313_call = mutated_mod.get_global_var('func_313')
var_1182 = relay.var("var_1182", dtype = "int8", shape = (400,))#candidate|1182|(400,)|var|int8
call_1181 = relay.TupleGetItem(func_311_call(relay.reshape(var_1182.astype('int8'), [400,])), 4)
call_1183 = relay.TupleGetItem(func_313_call(relay.reshape(var_1182.astype('int8'), [400,])), 4)
output = relay.Tuple([uop_1176,call_1181,var_1182,])
output2 = relay.Tuple([uop_1176,call_1183,var_1182,])
func_1204 = relay.Function([var_1175,var_1182,], output)
mod['func_1204'] = func_1204
mod = relay.transform.InferType()(mod)
var_1205 = relay.var("var_1205", dtype = "float64", shape = (3, 15, 8))#candidate|1205|(3, 15, 8)|var|float64
var_1206 = relay.var("var_1206", dtype = "int8", shape = (400,))#candidate|1206|(400,)|var|int8
output = func_1204(var_1205,var_1206,)
func_1207 = relay.Function([var_1205,var_1206,], output)
mutated_mod['func_1207'] = func_1207
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1276 = relay.var("var_1276", dtype = "float32", shape = (7, 11, 6))#candidate|1276|(7, 11, 6)|var|float32
const_1277 = relay.const([[[-1.638246,6.251436,-1.436426,4.161689,4.209265,0.255031],[-6.303771,2.607023,-7.282405,4.154104,2.616623,-0.670600],[7.659174,6.349905,0.834302,4.774387,8.111875,-1.080721],[6.825878,0.453965,9.747859,1.918192,4.187659,0.120665],[-7.059662,-3.781031,6.125459,1.203972,-5.559849,-9.375361],[8.316804,9.938525,-7.822662,-2.878357,8.123557,0.248987],[3.912008,7.076456,7.238464,-0.410460,0.415209,8.407927],[-7.577388,4.673206,3.961883,-7.859730,-6.809297,5.339802],[2.445062,-6.626643,-2.686893,9.291958,-5.128399,-6.449885],[5.212028,9.191784,8.729568,2.511444,9.619662,-7.463925],[1.026811,3.964806,7.131576,-9.521626,2.445670,9.044430]],[[-1.249085,3.338814,8.823582,-0.475201,-5.060897,2.914419],[-4.490071,9.502190,-0.855579,-7.782491,-8.530291,8.853038],[1.551679,-0.195625,-3.904010,-8.313235,-3.257229,3.498147],[2.004851,-6.802141,4.974670,2.026809,9.754481,-3.145493],[8.146884,8.095719,-0.374061,0.441940,-2.202613,-5.332571],[3.504555,-0.406034,-0.925341,-7.613346,2.769193,-7.319365],[-6.763269,4.288996,-5.798329,8.730144,-5.970985,-6.088858],[1.521663,-1.280764,1.600305,-6.870535,3.275028,7.302127],[-9.842089,2.903346,-3.591137,4.284882,-8.098957,-9.155905],[-0.426930,-3.694299,-4.835028,3.316951,-6.034017,-9.091083],[0.508484,-6.630552,3.409624,-7.053112,7.835574,9.775015]],[[0.339035,3.636580,0.112725,8.125858,5.072980,7.404639],[-9.471007,-2.179844,-3.377581,-6.765049,2.437287,9.077275],[-6.276701,1.704977,0.239115,-2.573479,6.230474,-3.916852],[4.977559,-8.347183,8.877561,4.264065,-9.880480,-2.563315],[-2.789951,-6.078807,-9.492781,-4.812484,-9.686329,-5.777976],[-9.958217,-7.423198,-9.445184,5.494437,-1.941403,1.569729],[7.240782,5.748405,-0.943340,-2.253290,2.420095,-2.172836],[-0.985305,-3.846294,-0.335260,4.572810,5.159383,-5.447248],[-7.352545,-4.918489,4.541172,5.055281,-8.049103,1.136152],[-9.899428,0.949238,-2.316014,6.532423,-4.811449,8.053313],[9.351026,5.547274,8.567945,-7.408276,1.088345,-5.321774]],[[-1.711147,0.314915,1.280691,8.573286,5.726981,1.746407],[9.687837,-4.224194,-5.189520,-8.078414,-4.903859,5.694716],[-0.578781,-2.907979,-5.343184,-0.996916,-2.926409,3.507459],[-4.561311,9.839701,8.527253,-8.022421,-5.174018,-6.211023],[-2.411669,-7.896881,-5.211820,-9.009510,9.067772,7.301692],[-3.995138,2.193811,7.434398,-3.437497,3.075535,6.619536],[-9.340703,3.950236,5.863443,9.157726,1.781152,-9.790608],[4.259904,-7.492643,0.476876,-9.946901,9.101899,-1.526891],[-3.937877,0.738122,6.418304,-5.183183,-6.002855,-5.705534],[0.199114,4.071283,2.587303,1.739366,1.289430,4.707271],[4.878445,-8.567722,0.102273,9.662438,3.142631,-2.837918]],[[-8.338182,-8.897454,-3.941203,-9.330066,-6.866626,-6.640296],[8.486032,1.568718,5.359427,-3.510251,-5.581772,-5.444422],[9.285875,-4.223760,-8.382796,6.987894,8.921064,7.253041],[-7.007495,-5.843298,4.770001,-5.519497,-1.088703,5.083577],[5.987228,-4.777653,-7.359790,4.857742,-9.766074,-2.338866],[-2.592985,5.623057,4.818904,-5.377942,-3.668005,8.767588],[9.482780,6.149486,8.722900,-8.887337,-5.668914,-5.053882],[9.277986,-1.101004,8.285690,-9.230282,0.581685,-1.006006],[-4.260305,-8.982202,8.090087,-8.361107,-6.294644,-8.286541],[7.011112,-2.658152,6.411071,-7.380158,-7.386436,-5.459837],[-4.633426,-3.619752,6.127299,-0.991754,3.949592,-4.147498]],[[-1.118804,0.798995,-0.899985,-9.394924,-1.226390,7.049106],[-5.404041,-6.791633,3.288605,-4.596593,3.305540,1.929947],[0.617495,-9.110741,-3.966419,7.434746,-5.841756,5.841640],[-9.749196,-6.965571,-4.032773,-0.563291,3.512837,-6.006523],[-0.795819,-2.296981,6.698048,-2.651975,-5.777140,4.409855],[2.984325,4.486165,0.075211,9.691874,0.156423,5.334413],[8.245786,-1.963174,-4.630105,3.409687,7.287535,6.225243],[7.256870,-4.811924,-9.868864,9.957651,-8.123151,6.123787],[2.062324,-7.664158,-1.955104,7.558126,7.402404,2.130604],[-0.273133,-5.613815,-5.302265,-8.696770,9.713258,0.024422],[-4.883910,-4.649125,-2.378380,-0.763451,-5.608804,-9.389365]],[[-1.199433,-1.125189,1.310916,-8.355699,4.133092,4.444384],[-3.205789,5.355971,-2.763798,8.173690,8.120420,-1.490047],[-6.662566,-0.160479,6.896229,8.886603,-1.243482,5.176615],[2.636086,0.606191,4.737226,6.794290,-9.577115,9.035084],[8.046915,4.779097,-6.166778,-4.221042,-5.114553,4.595855],[6.905996,-4.283014,1.550549,8.622262,2.395494,3.135999],[-7.726216,-2.711852,5.248005,4.105261,-4.976148,-6.495949],[-0.083169,2.752543,9.812017,-6.890656,-0.452982,-5.436749],[1.385744,-5.078775,-7.603890,7.263529,-8.412715,6.686582],[8.925296,3.454266,2.132989,0.800503,-2.143255,-8.177703],[6.526280,5.341244,9.772827,5.671077,1.074016,0.018507]]], dtype = "float32")#candidate|1277|(7, 11, 6)|const|float32
bop_1278 = relay.divide(var_1276.astype('float32'), relay.reshape(const_1277.astype('float32'), relay.shape_of(var_1276))) # shape=(7, 11, 6)
bop_1295 = relay.maximum(const_1277.astype('float64'), relay.reshape(var_1276.astype('float64'), relay.shape_of(const_1277))) # shape=(7, 11, 6)
func_1204_call = mod.get_global_var('func_1204')
func_1207_call = mutated_mod.get_global_var('func_1207')
const_1302 = relay.const([-0.451819,6.896406,7.130730,-3.699126,6.545090,7.320055,-1.440721,3.905431,8.263583,9.812539,2.072408,9.281953,8.477086,-9.550258,-9.496579,9.441979,-0.745072,8.550526,3.921750,8.269872,-4.341647,-2.374817,-3.109754,2.374189,4.797145,-4.911714,3.161085,-6.429880,3.469847,0.270771,7.747232,-4.620107,6.960710,0.265776,-8.796237,-1.905266,5.754853,4.751387,-2.126471,1.462985,-8.893501,-0.600002,8.785344,-3.114442,-0.300513,-3.698137,-1.880866,0.337466,-4.768775,4.859427,-6.204687,-2.596878,-4.914115,5.277234,-9.012370,-7.925840,6.983928,-9.594356,8.510979,7.279033,-0.259582,1.605145,-5.131466,-1.778110,6.519383,8.475029,1.901259,3.685977,-9.583945,5.684215,7.868104,4.822626,-8.607239,0.088831,-0.788977,7.501068,-6.176291,-6.985464,-9.497441,-2.740055,-9.591237,7.703696,8.278107,1.857730,5.876105,-1.741767,-8.114970,3.115577,8.356232,-5.653465,3.797072,-5.207966,5.197409,1.528564,8.097627,4.039731,9.155956,-6.165933,-0.518594,-9.073006,-7.532091,-4.430121,-4.018619,5.383219,9.445303,-9.508487,-5.708431,-8.414166,4.970880,0.565447,8.783407,-5.130102,7.980849,8.065314,-8.686024,9.571090,-5.147651,4.595439,-3.166636,-4.277020,-8.336962,-3.577516,7.983714,-5.283629,-5.254243,-9.485356,4.082582,9.895694,0.973664,-7.205106,-9.945305,-7.223525,3.451350,-2.656736,-1.947124,8.041779,0.173926,8.305709,9.616609,5.376764,7.959249,9.434425,-2.349189,0.834899,-1.150956,1.251597,-0.441288,8.322825,9.126205,9.380212,5.310668,-7.487958,-5.799965,9.996671,-1.846738,-7.768618,-5.082134,-7.652951,-1.948491,-4.313203,4.541890,3.025841,1.140702,9.313612,-6.508874,2.290998,-8.141475,-9.982137,2.693551,-7.250427,-4.010597,-6.398532,-0.346937,4.467022,-5.231210,6.772271,2.806504,4.088628,-6.714315,1.674266,0.812458,-4.337931,1.090434,7.831215,-0.880458,-8.556240,-1.242651,-4.443131,2.119192,7.036644,8.111323,1.819250,7.252475,-9.207680,2.080968,2.421869,-3.828669,-6.294009,-4.958442,-8.283712,5.060707,-6.023752,5.016447,8.689573,-1.725663,9.328006,1.806378,2.491168,3.515006,-9.045942,8.091253,-0.822448,7.049793,3.431759,-0.017007,9.591009,-7.784718,2.013573,-7.656819,-7.897660,3.906632,-8.979009,-1.708686,4.053653,9.585864,4.125636,2.206407,-4.155022,-1.315740,2.773423,-7.731620,1.132716,-6.989636,-5.341511,4.304810,6.547577,-9.176500,8.216903,9.291531,4.305825,4.318133,-0.961431,-2.142007,3.292510,-7.094006,7.860073,7.192914,-4.289444,5.166048,-1.201309,3.866188,5.746569,-4.033420,5.964046,6.773006,-9.966473,9.853658,-2.840410,-8.449925,-7.521661,-4.564918,6.296838,-4.320385,1.913076,-9.695909,-1.131174,7.799069,-3.628023,3.917510,-6.921696,-8.038063,6.737801,3.739193,7.502135,3.103976,-3.090241,4.181348,-4.384571,4.079291,3.812262,5.531781,-4.908022,5.896719,-6.668125,-2.131003,3.021639,-5.539858,-1.745740,-1.434351,8.867803,7.492458,1.000134,4.430537,0.013311,0.388767,-6.684351,-4.101592,-3.154447,7.412731,-3.747352,7.118182,-7.836263,-5.030228,6.704265,-5.029059,0.387649,-1.449639,-1.252162,-9.781696,4.982595,-2.394962,-5.693267,-1.405565,-9.932081,-5.455883,9.063952,5.883919,1.760519,-9.768941,-3.552891,7.970719,-9.543019,6.491190,7.996101,-4.723687,3.511009,-6.589263,-6.929443,-0.885809,8.458377,7.714017,-5.237625,-6.566520,4.874604,-2.148789,-7.500590,6.127221,-3.061619,1.101718,-1.529331,-0.420576,6.811745,1.424507,6.942098,-2.810396,-1.432180,5.083120,-1.322757,-5.249455,-1.239179,-1.291563,-1.864549,1.374597,-2.243842,-4.042820,3.323961,-3.088518,-8.721595,-3.979935,-1.207491], dtype = "float64")#candidate|1302|(360,)|const|float64
var_1303 = relay.var("var_1303", dtype = "int8", shape = (400,))#candidate|1303|(400,)|var|int8
call_1301 = relay.TupleGetItem(func_1204_call(relay.reshape(const_1302.astype('float64'), [3, 15, 8]), relay.reshape(var_1303.astype('int8'), [400,]), ), 1)
call_1304 = relay.TupleGetItem(func_1207_call(relay.reshape(const_1302.astype('float64'), [3, 15, 8]), relay.reshape(var_1303.astype('int8'), [400,]), ), 1)
output = relay.Tuple([bop_1278,bop_1295,call_1301,const_1302,var_1303,])
output2 = relay.Tuple([bop_1278,bop_1295,call_1304,const_1302,var_1303,])
func_1310 = relay.Function([var_1276,var_1303,], output)
mod['func_1310'] = func_1310
mod = relay.transform.InferType()(mod)
var_1311 = relay.var("var_1311", dtype = "float32", shape = (7, 11, 6))#candidate|1311|(7, 11, 6)|var|float32
var_1312 = relay.var("var_1312", dtype = "int8", shape = (400,))#candidate|1312|(400,)|var|int8
output = func_1310(var_1311,var_1312,)
func_1313 = relay.Function([var_1311,var_1312,], output)
mutated_mod['func_1313'] = func_1313
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1523 = relay.var("var_1523", dtype = "float32", shape = (16, 9, 11))#candidate|1523|(16, 9, 11)|var|float32
uop_1524 = relay.log10(var_1523.astype('float32')) # shape=(16, 9, 11)
uop_1526 = relay.sin(var_1523.astype('float32')) # shape=(16, 9, 11)
output = relay.Tuple([uop_1524,uop_1526,])
output2 = relay.Tuple([uop_1524,uop_1526,])
func_1532 = relay.Function([var_1523,], output)
mod['func_1532'] = func_1532
mod = relay.transform.InferType()(mod)
var_1533 = relay.var("var_1533", dtype = "float32", shape = (16, 9, 11))#candidate|1533|(16, 9, 11)|var|float32
output = func_1532(var_1533)
func_1534 = relay.Function([var_1533], output)
mutated_mod['func_1534'] = func_1534
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1554 = relay.var("var_1554", dtype = "float64", shape = (13, 6, 14))#candidate|1554|(13, 6, 14)|var|float64
var_1555 = relay.var("var_1555", dtype = "float64", shape = (13, 6, 14))#candidate|1555|(13, 6, 14)|var|float64
bop_1556 = relay.greater(var_1554.astype('bool'), relay.reshape(var_1555.astype('bool'), relay.shape_of(var_1554))) # shape=(13, 6, 14)
output = bop_1556
output2 = bop_1556
func_1572 = relay.Function([var_1554,var_1555,], output)
mod['func_1572'] = func_1572
mod = relay.transform.InferType()(mod)
var_1573 = relay.var("var_1573", dtype = "float64", shape = (13, 6, 14))#candidate|1573|(13, 6, 14)|var|float64
var_1574 = relay.var("var_1574", dtype = "float64", shape = (13, 6, 14))#candidate|1574|(13, 6, 14)|var|float64
output = func_1572(var_1573,var_1574,)
func_1575 = relay.Function([var_1573,var_1574,], output)
mutated_mod['func_1575'] = func_1575
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1708 = relay.var("var_1708", dtype = "uint8", shape = ())#candidate|1708|()|var|uint8
var_1709 = relay.var("var_1709", dtype = "uint8", shape = (9, 9, 10))#candidate|1709|(9, 9, 10)|var|uint8
bop_1710 = relay.maximum(var_1708.astype('uint8'), var_1709.astype('uint8')) # shape=(9, 9, 10)
output = bop_1710
output2 = bop_1710
func_1723 = relay.Function([var_1708,var_1709,], output)
mod['func_1723'] = func_1723
mod = relay.transform.InferType()(mod)
var_1724 = relay.var("var_1724", dtype = "uint8", shape = ())#candidate|1724|()|var|uint8
var_1725 = relay.var("var_1725", dtype = "uint8", shape = (9, 9, 10))#candidate|1725|(9, 9, 10)|var|uint8
output = func_1723(var_1724,var_1725,)
func_1726 = relay.Function([var_1724,var_1725,], output)
mutated_mod['func_1726'] = func_1726
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2453 = relay.var("var_2453", dtype = "float32", shape = (11, 12, 8))#candidate|2453|(11, 12, 8)|var|float32
uop_2454 = relay.atanh(var_2453.astype('float32')) # shape=(11, 12, 8)
func_112_call = mod.get_global_var('func_112')
func_115_call = mutated_mod.get_global_var('func_115')
var_2457 = relay.var("var_2457", dtype = "int8", shape = (2, 200))#candidate|2457|(2, 200)|var|int8
call_2456 = func_112_call(relay.reshape(var_2457.astype('int8'), [10, 10, 4]))
call_2458 = func_112_call(relay.reshape(var_2457.astype('int8'), [10, 10, 4]))
output = relay.Tuple([uop_2454,call_2456,var_2457,])
output2 = relay.Tuple([uop_2454,call_2458,var_2457,])
func_2459 = relay.Function([var_2453,var_2457,], output)
mod['func_2459'] = func_2459
mod = relay.transform.InferType()(mod)
mutated_mod['func_2459'] = func_2459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2459_call = mutated_mod.get_global_var('func_2459')
var_2461 = relay.var("var_2461", dtype = "float32", shape = (11, 12, 8))#candidate|2461|(11, 12, 8)|var|float32
var_2462 = relay.var("var_2462", dtype = "int8", shape = (2, 200))#candidate|2462|(2, 200)|var|int8
call_2460 = func_2459_call(var_2461,var_2462,)
output = call_2460
func_2463 = relay.Function([var_2461,var_2462,], output)
mutated_mod['func_2463'] = func_2463
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2788 = relay.var("var_2788", dtype = "float32", shape = (1, 1, 5))#candidate|2788|(1, 1, 5)|var|float32
uop_2789 = relay.acos(var_2788.astype('float32')) # shape=(1, 1, 5)
func_311_call = mod.get_global_var('func_311')
func_313_call = mutated_mod.get_global_var('func_313')
var_2801 = relay.var("var_2801", dtype = "int8", shape = (400,))#candidate|2801|(400,)|var|int8
call_2800 = relay.TupleGetItem(func_311_call(relay.reshape(var_2801.astype('int8'), [400,])), 2)
call_2802 = relay.TupleGetItem(func_313_call(relay.reshape(var_2801.astype('int8'), [400,])), 2)
uop_2830 = relay.cosh(call_2800.astype('float64')) # shape=(10, 10, 4)
uop_2832 = relay.cosh(call_2802.astype('float64')) # shape=(10, 10, 4)
func_1723_call = mod.get_global_var('func_1723')
func_1726_call = mutated_mod.get_global_var('func_1726')
const_2838 = relay.const(5, dtype = "uint8")#candidate|2838|()|const|uint8
const_2839 = relay.const([10,6,6,-10,-7,4,4,5,2,6,10,-10,-3,-10,-10,8,8,5,-8,-4,8,2,-1,-7,7,-7,-1,-9,-3,5,-1,3,-7,-5,5,-9,9,-5,8,-3,5,-3,9,1,2,5,-8,-3,7,9,-9,-5,2,9,1,-7,6,-3,4,6,9,-1,10,-2,-4,-8,-1,-3,10,3,6,8,-1,-6,4,-3,3,-9,-8,9,2,-6,8,-6,-1,-10,10,-10,8,10,-10,-6,-8,6,-6,9,2,-2,5,9,-10,5,-10,5,-3,-1,-7,-3,-9,-1,6,6,-3,8,-8,-4,-9,-10,-3,6,-7,6,1,-9,2,9,9,-4,4,2,1,2,-4,7,-7,-5,10,-10,-5,-5,-10,3,-8,4,10,-5,4,1,10,-7,-2,1,6,-5,4,-5,2,6,8,-5,-7,-1,6,1,1,2,10,5,7,-4,10,5,-9,6,-2,6,-9,-2,-9,2,-1,-3,-10,-7,-10,9,-2,4,7,9,-10,1,-1,8,-6,-10,-7,-9,3,5,9,-3,-8,4,-8,-5,9,-10,10,10,10,-4,5,3,9,1,-2,1,-3,7,10,-10,9,9,7,5,1,4,3,6,-7,-2,-3,-1,1,-8,2,-10,-7,10,10,1,7,7,-3,3,-2,-1,9,-1,-1,-1,-6,-6,2,7,5,1,-1,3,-3,-6,-1,-10,-8,-3,10,4,9,-9,7,-10,1,-4,4,-8,2,-4,8,7,6,5,-6,-4,-8,-5,-8,-7,8,3,7,-3,-7,3,-2,1,10,8,8,10,-6,1,2,4,9,4,-1,6,5,-3,-2,8,4,-10,9,-8,-7,-10,-7,8,2,-4,10,-2,3,-1,2,9,-5,-8,-10,-1,5,3,6,10,7,2,5,-2,9,-5,5,7,-2,-6,1,-7,-9,-8,6,-2,5,-8,-9,-1,6,-1,8,10,-5,10,4,-2,-10,7,-2,8,-4,-8,-7,-1,-2,3,-2,-2,1,-3,-1,-9,7,8,-4,5,-5,1,1,-6,-6,-5,-1,-5,10,9,-5,6,-4,-1,3,6,-8,-9,-1,-4,-3,5,-7,-8,10,-2,-6,7,5,8,-4,7,1,1,-10,-9,3,8,-8,-8,-4,5,1,1,10,5,4,-7,7,-9,2,-1,-3,6,-3,-10,-9,8,9,-7,9,-4,-3,9,9,-8,-5,-8,7,-10,2,-9,6,-10,-9,3,-8,-2,-8,-2,9,7,-8,2,1,-6,-1,4,6,-2,1,-4,2,10,9,4,4,3,6,-7,-7,-8,10,6,5,1,-3,5,-3,3,8,1,1,-4,-9,-2,8,5,-1,3,10,4,-3,9,5,-9,1,7,-3,-7,-3,-9,10,-8,6,8,9,7,10,-7,8,-8,-5,-1,7,9,8,1,-3,-8,4,2,6,5,-7,-9,-8,6,-3,2,-6,9,10,-1,-3,-9,-4,10,2,6,-10,6,3,1,-8,7,3,-7,8,-5,6,-7,7,-10,5,-10,-2,-2,8,-2,-8,2,7,-6,9,7,5,8,1,3,-6,10,-1,3,-6,10,6,-5,3,-7,3,2,7,-2,-9,-4,-9,-5,7,-2,2,6,3,-10,-5,1,-8,7,-2,-4,3,-8,-2,-3,-10,3,6,-2,3,5,7,-9,6,2,5,1,-6,2,-1,-1,1,-2,3,6,-4,-5,7,-9,10,-3,1,-6,-2,-7,5,-3,-9,-3,-9,-8,2,-5,7,-5,7,-5,1,-5,10,-5,1,-1,-3,5,-5,-4,-6,9,-4,4,2,2,-9,-8,1,3,-3,2,-1,7,-10,5,9,3,8,-7,-5,8,5,4,-1,-8,1,10,9,-10,-8,6,10,-5,7,1,-10,-7,-4,3,-7,-10,4,-2,9,3,6,-9,3,7,5,-3,6,1,2,-5,-8,-9,9,7,-5,7,4,-10,-9,4,-4,10,8,9,-9,8,1,10,-1,8,-9,-1,-3,7,-7,-8,9,-2,1,-4,-8,-8,10,-1,-6,8,3,6,10,10,8,2,-7,-4,-8,1,-3,-4,-8,5,-3,-7,4,-4,1,-6,1,-6,-2,9,1,5,8,6,-4,7,-5,6,2,-4,4,-1,7,5,8,-7,-3,-2,2,6,8,-7,-10,10], dtype = "uint8")#candidate|2839|(810,)|const|uint8
call_2837 = func_1723_call(relay.reshape(const_2838.astype('uint8'), []), relay.reshape(const_2839.astype('uint8'), [9, 9, 10]), )
call_2840 = func_1723_call(relay.reshape(const_2838.astype('uint8'), []), relay.reshape(const_2839.astype('uint8'), [9, 9, 10]), )
uop_2848 = relay.cos(uop_2789.astype('float64')) # shape=(1, 1, 5)
func_1310_call = mod.get_global_var('func_1310')
func_1313_call = mutated_mod.get_global_var('func_1313')
var_2852 = relay.var("var_2852", dtype = "float32", shape = (462,))#candidate|2852|(462,)|var|float32
call_2851 = relay.TupleGetItem(func_1310_call(relay.reshape(var_2852.astype('float32'), [7, 11, 6]), relay.reshape(uop_2830.astype('int8'), [400,]), ), 2)
call_2853 = relay.TupleGetItem(func_1313_call(relay.reshape(var_2852.astype('float32'), [7, 11, 6]), relay.reshape(uop_2830.astype('int8'), [400,]), ), 2)
output = relay.Tuple([var_2801,uop_2830,call_2837,const_2838,const_2839,uop_2848,call_2851,var_2852,])
output2 = relay.Tuple([var_2801,uop_2832,call_2840,const_2838,const_2839,uop_2848,call_2853,var_2852,])
func_2875 = relay.Function([var_2788,var_2801,var_2852,], output)
mod['func_2875'] = func_2875
mod = relay.transform.InferType()(mod)
mutated_mod['func_2875'] = func_2875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2875_call = mutated_mod.get_global_var('func_2875')
var_2877 = relay.var("var_2877", dtype = "float32", shape = (1, 1, 5))#candidate|2877|(1, 1, 5)|var|float32
var_2878 = relay.var("var_2878", dtype = "int8", shape = (400,))#candidate|2878|(400,)|var|int8
var_2879 = relay.var("var_2879", dtype = "float32", shape = (462,))#candidate|2879|(462,)|var|float32
call_2876 = func_2875_call(var_2877,var_2878,var_2879,)
output = call_2876
func_2880 = relay.Function([var_2877,var_2878,var_2879,], output)
mutated_mod['func_2880'] = func_2880
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2944 = relay.var("var_2944", dtype = "int32", shape = ())#candidate|2944|()|var|int32
const_2945 = relay.const([[[-9,-1],[5,-7],[9,8],[3,-3],[-5,9],[-6,-2],[-8,-9],[-2,9],[9,-2]]], dtype = "int32")#candidate|2945|(1, 9, 2)|const|int32
bop_2946 = relay.logical_xor(var_2944.astype('int32'), const_2945.astype('int32')) # shape=(1, 9, 2)
output = bop_2946
output2 = bop_2946
func_2957 = relay.Function([var_2944,], output)
mod['func_2957'] = func_2957
mod = relay.transform.InferType()(mod)
mutated_mod['func_2957'] = func_2957
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2958 = relay.var("var_2958", dtype = "int32", shape = ())#candidate|2958|()|var|int32
func_2957_call = mutated_mod.get_global_var('func_2957')
call_2959 = func_2957_call(var_2958)
output = call_2959
func_2960 = relay.Function([var_2958], output)
mutated_mod['func_2960'] = func_2960
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2967 = relay.var("var_2967", dtype = "bool", shape = (6, 2, 4))#candidate|2967|(6, 2, 4)|var|bool
var_2968 = relay.var("var_2968", dtype = "bool", shape = (6, 2, 4))#candidate|2968|(6, 2, 4)|var|bool
bop_2969 = relay.logical_and(var_2967.astype('bool'), relay.reshape(var_2968.astype('bool'), relay.shape_of(var_2967))) # shape=(6, 2, 4)
output = bop_2969
output2 = bop_2969
func_2973 = relay.Function([var_2967,var_2968,], output)
mod['func_2973'] = func_2973
mod = relay.transform.InferType()(mod)
mutated_mod['func_2973'] = func_2973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2973_call = mutated_mod.get_global_var('func_2973')
var_2975 = relay.var("var_2975", dtype = "bool", shape = (6, 2, 4))#candidate|2975|(6, 2, 4)|var|bool
var_2976 = relay.var("var_2976", dtype = "bool", shape = (6, 2, 4))#candidate|2976|(6, 2, 4)|var|bool
call_2974 = func_2973_call(var_2975,var_2976,)
output = call_2974
func_2977 = relay.Function([var_2975,var_2976,], output)
mutated_mod['func_2977'] = func_2977
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3365 = relay.var("var_3365", dtype = "int32", shape = ())#candidate|3365|()|var|int32
var_3366 = relay.var("var_3366", dtype = "int32", shape = (2, 15, 10))#candidate|3366|(2, 15, 10)|var|int32
bop_3367 = relay.logical_xor(var_3365.astype('int32'), var_3366.astype('int32')) # shape=(2, 15, 10)
output = relay.Tuple([bop_3367,])
output2 = relay.Tuple([bop_3367,])
func_3370 = relay.Function([var_3365,var_3366,], output)
mod['func_3370'] = func_3370
mod = relay.transform.InferType()(mod)
var_3371 = relay.var("var_3371", dtype = "int32", shape = ())#candidate|3371|()|var|int32
var_3372 = relay.var("var_3372", dtype = "int32", shape = (2, 15, 10))#candidate|3372|(2, 15, 10)|var|int32
output = func_3370(var_3371,var_3372,)
func_3373 = relay.Function([var_3371,var_3372,], output)
mutated_mod['func_3373'] = func_3373
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3443 = relay.var("var_3443", dtype = "float64", shape = (14, 10, 13))#candidate|3443|(14, 10, 13)|var|float64
uop_3444 = relay.atan(var_3443.astype('float64')) # shape=(14, 10, 13)
const_3458 = relay.const([[[1.195814,-6.638972,0.946751,4.686849,4.418107,-3.130164,-3.454114,-6.698340,4.919482,-6.666524,5.081434,4.807054,-3.546245],[-7.951055,4.456258,-4.353449,5.342421,-3.041521,1.890313,-3.282511,9.537265,0.225905,-0.505615,9.307219,-9.989071,7.492347],[6.460161,2.920403,6.116588,6.791903,8.593471,2.325211,-1.034778,-6.317320,-1.743908,-4.036723,1.064530,5.498731,-7.149892],[9.860137,6.081331,-0.366278,-0.035212,-9.556742,7.011873,-8.812157,7.489309,0.922487,8.928266,4.100958,3.994100,-7.456184],[-7.124036,-9.540374,-4.613790,1.721720,-9.818204,-7.375023,3.768250,-4.226770,-1.805174,-2.226836,8.589745,8.293818,2.262484],[-1.749880,9.712795,4.915698,-4.506016,-6.466778,5.231193,-0.056325,7.892802,-0.037627,7.450502,8.865595,-7.596692,1.692438],[-6.875047,-1.457660,-1.796516,-7.779867,7.823434,1.307068,5.031711,-2.488349,5.893730,2.068466,-8.855869,3.659107,-3.637717],[2.677230,-0.045923,-2.248546,-0.429708,-1.448473,1.728495,-3.109981,-0.592028,2.722592,8.791039,5.591044,-2.308966,9.801730],[-7.646570,6.849826,9.686750,3.668864,3.645096,-9.435248,1.190471,-1.929194,9.063077,6.096109,-2.312712,-8.620385,9.145052],[-1.986600,-2.852216,-1.365395,0.212979,2.258387,-8.644339,-0.829612,2.254554,5.895471,-0.025500,1.357843,-5.831311,8.835776]],[[4.867383,-9.219765,8.897605,6.570888,-4.988699,4.637551,8.550693,1.563072,5.023474,2.374470,-2.540018,8.793446,7.676850],[9.368640,-4.343736,-4.573579,-6.434377,-4.933752,-9.012883,4.361108,3.130682,-8.372469,7.735780,-5.956667,1.192371,6.412859],[2.529700,-7.290538,-5.399950,-8.855380,4.165806,-3.879738,-7.885619,5.477710,-9.095829,3.177788,8.140084,-8.181553,4.232454],[-4.411470,1.611670,0.315384,-4.677552,0.032776,4.178597,6.701108,-6.054087,-2.521743,-8.154748,7.747578,-5.015587,-0.436303],[-4.552941,-1.368397,-8.695758,5.392517,8.175494,-0.294899,-3.783429,-6.453674,3.684581,-4.208648,1.504316,-9.341341,1.097168],[2.548719,4.753263,6.613613,-3.013002,2.046661,-6.311384,-7.559100,3.189483,-7.547466,-9.577417,1.701255,-6.678566,-5.348331],[-0.268897,-8.963072,-9.484355,2.239080,0.070529,-4.868707,0.453928,-9.323115,-8.779054,1.943147,9.899002,9.381424,-5.661725],[-4.985542,8.893187,-6.681613,3.253691,6.535249,-0.879170,4.838557,4.101969,-2.495789,-0.026137,1.855055,7.151793,-0.046216],[-0.643248,2.972344,6.479459,1.422718,-4.874389,-9.055490,-8.497011,7.386837,7.121128,2.990920,-3.223882,0.746257,-3.959103],[0.009960,3.570892,4.925460,-1.050997,-3.783597,-8.085570,-5.508432,4.113844,-5.262807,-7.808048,5.540243,2.498542,-7.653724]],[[-2.335908,-0.020174,-8.794261,-4.289423,7.772088,9.834006,-6.006146,6.133745,-7.899735,2.425027,9.520204,2.594659,-1.500882],[8.229444,0.724411,1.485954,4.472302,1.188951,-9.389159,9.014086,1.364167,6.241584,-2.377900,-5.030761,-9.089340,-6.885144],[5.460580,0.122933,-0.068388,3.906451,-9.018773,1.117234,-0.757617,-4.661679,3.411363,0.198033,-4.625380,-7.441352,8.730625],[0.153929,5.028527,4.273166,-5.489283,-4.996606,3.405807,-9.205250,-0.754584,3.125366,-5.419436,8.809837,6.847654,-4.523207],[6.039021,-9.161392,4.150202,-2.363876,-5.665667,-2.310706,-0.949329,5.805741,-9.836368,-7.458200,-7.282962,-6.610224,2.144543],[-6.321806,-6.288177,-4.800870,1.019787,-0.231100,4.399048,4.797639,4.212807,-8.332191,-4.206858,1.050973,8.799396,-1.881028],[-5.308288,5.842251,-3.062581,-6.662040,-7.861250,3.369126,-0.987193,2.775191,-5.862219,9.835226,-2.240669,-9.675842,2.409034],[2.065523,9.587037,-7.351598,-4.966938,3.654351,6.578356,6.713902,-0.631820,-1.651586,0.393970,-5.433467,-9.423655,0.210917],[7.848896,-9.186941,6.558937,-3.335779,9.936223,-5.065944,-3.716835,-8.948054,-1.439197,0.167938,-3.391033,7.682517,5.330013],[-2.174287,7.239214,-3.132386,6.630169,6.664795,3.955851,2.655537,2.229419,-6.199566,8.123745,9.900781,1.979584,-9.825955]],[[-0.888975,2.688668,-6.895855,-0.747363,2.529546,-4.250623,1.331912,7.659637,0.506503,9.616899,1.323495,-5.796652,-7.910189],[-3.042789,9.599603,-5.674751,-1.183602,4.590597,3.930344,-5.549175,8.352079,0.341592,-3.427794,0.574854,0.184539,-6.193059],[-9.872557,0.326159,5.936351,-6.332702,-2.014791,-0.132839,-7.010899,9.207398,5.272610,-1.318751,1.280148,0.255720,2.150801],[2.145671,8.427763,6.600765,6.692229,6.683675,-6.205847,4.110161,-3.450418,3.292885,4.302985,-5.405620,-2.013665,5.116702],[-2.701992,1.828669,5.458838,-9.782267,5.839719,1.839281,-5.360727,2.571910,-9.353392,0.365037,-9.381686,-1.381136,-4.199252],[0.183254,4.804930,-0.442914,6.806057,5.232388,-3.027007,-2.575727,6.095370,-9.240320,-6.875830,-3.008059,-7.826950,0.468845],[-9.173487,5.065317,-2.428726,2.130882,0.027555,4.036246,-7.615103,-5.463688,-2.252755,-5.546557,-1.706483,5.967391,-7.972484],[0.466173,3.174763,7.196821,-3.845935,-1.668896,7.123862,6.525831,1.673831,-2.667545,4.489030,4.555548,1.877362,-3.091404],[-4.223833,-1.594205,7.743467,-4.107200,-3.659437,3.858864,-0.838682,5.673006,7.045758,-2.405250,5.441770,-8.586750,2.227253],[-1.825939,6.868739,-8.250698,-7.822030,-3.664917,9.871947,-5.071787,6.220679,-6.579549,-5.733091,6.327990,-2.275530,-3.302744]],[[-7.289523,2.775794,-1.125443,-0.830639,-7.391773,-5.108451,8.318536,-7.571640,4.715582,-1.409219,-3.853182,-4.017625,-9.947020],[2.113075,3.493152,-1.394417,-3.199593,-0.764575,9.211376,1.370960,7.784736,-9.484154,-8.886428,4.948983,-9.305428,-4.166616],[5.913892,7.110048,8.139563,-1.168014,-3.953192,-3.725331,-4.724581,-2.291321,-8.740719,6.313370,7.352118,-3.934476,6.333577],[3.557911,-8.509880,-6.072228,-8.240756,9.452468,-2.789631,-5.057321,4.135143,-0.231177,5.926742,3.979853,-2.795026,-4.884397],[6.359576,9.781807,-4.332650,-9.838164,1.848120,-0.687954,-7.249456,1.387744,-1.400231,7.455253,-6.642916,3.503858,-6.543669],[5.217818,-5.716150,-4.053448,0.058887,-6.625669,-0.931864,-0.015045,5.151030,0.713559,-4.924364,0.530057,2.128338,-0.256553],[-8.952863,1.558158,5.792182,0.226878,-5.277692,2.008789,5.634874,-2.365761,-0.905740,5.958640,2.280332,2.476282,6.116401],[-0.905651,0.540245,7.597646,6.950280,9.766576,7.560264,-1.808547,-3.196448,5.936655,7.412837,-4.915072,-5.823544,1.004178],[-2.792344,-1.104113,6.587430,-4.659136,9.430128,-6.886406,6.531670,6.070636,-1.838665,-8.882394,5.513966,6.256036,0.011290],[-9.739788,9.391805,-4.839347,-0.555425,-9.124343,6.455091,0.096749,-9.785196,8.876257,0.159345,-5.708662,-1.401426,-3.401624]],[[7.513725,-8.445328,6.195800,-6.665340,3.067200,3.993546,9.645773,0.806172,-8.204407,-3.990344,7.137932,-7.471630,-3.648562],[-5.424786,-3.153965,0.754816,-3.498454,-9.620214,-4.773288,2.528277,9.165957,-7.884961,-4.664963,-3.928985,-5.357745,9.137636],[-3.555987,-0.631903,-6.565699,-6.618570,7.136526,-9.907623,4.323538,-4.193862,-6.491463,1.910670,-7.193712,-8.889624,-8.986219],[0.962081,6.780326,-5.511023,0.807499,8.083980,9.603874,-1.594165,9.925438,3.867172,6.685522,-6.791154,9.116595,-0.026699],[0.685029,-7.737184,1.311740,-4.496195,-3.931556,-8.909631,9.907556,8.789944,1.541073,-2.685651,2.337864,-2.516757,3.525691],[-9.276955,-9.381280,-9.280127,2.443334,7.769469,-3.767126,-0.957637,-7.948221,-0.422593,-3.467573,2.532202,4.178684,-1.421529],[7.946841,-2.083548,6.037159,9.496212,1.247807,-7.062318,-2.699445,6.221099,1.119943,2.656129,-4.063293,-8.933466,0.535440],[9.852973,1.502065,9.353032,-4.830886,0.480943,-0.195153,4.846878,-8.290959,6.048658,-2.996306,6.189538,-8.169595,3.467903],[9.938879,0.385201,5.115685,6.661774,-6.681540,1.555295,-1.880480,-4.851160,8.560564,-6.707457,7.639541,-4.279545,-4.549134],[-8.548314,-8.681475,-3.948133,8.712013,1.459062,-0.110012,5.042078,3.344747,7.764647,9.156863,9.743219,5.205881,-5.173706]],[[0.928783,-1.337746,-2.717774,-5.405435,5.689442,-0.597539,-2.977033,0.771678,8.041176,6.745521,-3.983097,-3.292665,-0.584701],[-8.148867,-1.651774,1.804037,-2.921513,8.098907,-8.925043,3.319647,-5.536875,-8.920864,2.744731,0.059237,-9.263501,-0.350619],[8.901449,-9.367199,-8.342977,-3.526020,2.886441,-7.683018,8.622743,-0.998362,7.958011,1.536520,-6.673242,-8.999261,-1.498168],[-1.695308,-3.942762,2.896464,1.443102,1.141434,-0.810544,-7.859133,3.383089,8.237508,7.506140,-5.580470,-9.608085,-9.910205],[0.381232,-0.992083,7.612429,-1.900287,4.806491,1.550046,3.870700,-3.172702,-5.731216,1.642643,7.052893,7.604796,9.768282],[4.354628,2.696837,-6.596394,-1.462819,-1.925639,5.920326,0.372801,-0.830145,5.683090,-8.140531,-3.246699,2.051716,-3.726289],[-9.226995,2.434365,-7.668170,9.818045,-8.958209,-2.075225,1.784384,-2.386018,-2.642385,5.533363,6.393700,-4.796017,7.399803],[-6.030280,6.920406,2.295790,-6.652211,9.799970,-0.615473,2.307055,-9.561134,8.096744,-3.423908,-1.890164,-2.501287,-5.747286],[-4.066485,0.604631,2.791164,-4.759781,-7.260081,-8.453529,-4.266763,7.315512,5.945788,-9.294767,1.490199,2.981728,0.932250],[-4.770546,1.835616,3.104349,4.316814,3.288318,0.592633,9.368846,-8.564139,-0.224417,1.531414,4.358842,-2.664525,-1.602604]],[[2.859500,-8.026485,1.461866,-2.438113,2.624403,8.717022,-3.364986,8.430789,-7.625319,-0.550243,-5.165905,-4.597443,-5.381024],[-3.862338,1.824907,-4.534181,-7.130723,2.434475,4.167753,2.599396,-4.540577,-1.915220,9.261524,-1.464230,-8.363382,-3.751920],[3.693619,4.935704,-6.065600,6.298655,-7.101015,2.631035,-9.593357,0.998056,-0.201761,-6.740993,0.162879,-0.003353,-9.886035],[-4.892682,3.578367,7.077824,4.780672,-6.148575,0.194334,8.206461,-8.383950,-6.031792,-9.694778,-7.366927,-2.786853,9.355819],[5.435565,3.487303,-2.273470,1.568762,-2.795304,-3.836872,3.454253,-2.566006,-7.720413,-8.028898,-2.804465,7.101291,-7.820185],[1.673797,-7.433286,-5.589661,-5.882202,4.213156,-1.103160,-5.325077,-7.376971,-2.624241,-8.262311,-0.167634,7.323745,3.241696],[3.436918,-8.277461,-9.437685,3.135556,-1.613364,9.210282,6.481516,2.985314,0.968438,-0.583871,-7.157626,8.252150,4.834023],[-0.175293,-6.769098,-3.369579,-6.120993,-1.712327,9.807922,-9.433737,4.680806,-8.269425,-3.614119,-8.671348,-5.574447,8.137988],[-3.078897,3.016321,-7.035432,-1.945500,8.955797,9.291872,6.544333,-7.514617,3.569414,-2.737460,-4.791512,4.044235,-2.293438],[-6.693283,-2.680592,9.409606,-0.216584,8.636669,-4.902016,-5.534344,-7.520300,-1.544795,1.469132,-2.457603,5.918693,9.401826]],[[-1.339803,-7.569139,1.574663,8.509643,8.699796,-2.969579,1.273845,-9.157748,9.094047,9.960765,-6.097310,4.457928,-1.684523],[-6.546302,-8.235052,-3.173356,-5.487889,6.467066,9.879792,-2.053529,3.925745,5.316609,-3.322871,5.239566,-7.911729,1.157167],[-8.185807,-9.054429,2.972538,-3.224557,-4.618944,-3.192640,3.441740,-0.087914,-8.894207,7.993433,7.259366,-6.953809,2.128372],[7.425693,-9.552029,-5.152502,3.904105,4.433148,-9.824257,-8.493545,-0.279763,3.337979,-2.628055,1.947390,-5.938520,9.947776],[2.937616,8.766082,9.865750,-2.579118,-1.238970,-2.024304,8.970822,-4.301179,2.229632,-8.856215,8.515816,3.148160,-9.267982],[-9.377799,-2.815632,-3.033604,4.807854,-6.321882,8.862604,-1.599253,6.196998,3.649248,-9.933750,-9.036769,7.402563,-7.589665],[3.223766,-9.386144,-4.762740,-5.508066,-2.049014,-0.457831,6.085843,-0.465381,8.033679,-2.149534,9.631249,1.238257,7.753775],[0.509012,-1.565556,0.195061,-6.460721,0.725395,-9.810244,4.298250,0.956698,-6.823291,-9.349638,2.915356,7.934930,-7.930527],[8.460123,-7.350067,-0.971089,3.982452,2.816960,-1.765606,5.387035,-5.007800,6.752928,-8.287261,2.200604,6.168798,-0.871868],[5.378468,-1.883077,-7.295857,7.550244,-3.017579,7.238017,3.629820,-6.759011,-9.608821,6.291866,4.004106,-7.066667,7.635787]],[[-5.388775,8.496055,0.117548,-1.191495,-2.869335,-8.591928,-8.337659,4.133293,-7.281851,-4.768475,-5.116772,-3.145944,-1.976910],[6.286105,-8.457126,-8.950565,4.900605,4.548793,6.538367,2.488623,-7.563891,1.247504,-8.577741,-7.547055,9.469071,-6.650356],[4.014573,-1.727158,-5.363275,-2.717667,-2.794222,-9.522302,-9.930850,7.730275,7.763383,-9.402017,-9.569743,-2.480101,-2.365938],[7.214098,-1.061778,-8.442135,8.789314,6.564461,-0.799190,-9.589497,-0.250696,-2.909683,-4.976892,-0.370831,-7.486663,0.331948],[9.504881,-2.840600,9.137353,3.803824,8.913561,6.995051,-5.121206,-1.443611,8.311267,-1.467471,5.091827,-4.497803,-1.242206],[-2.070422,7.205172,1.074881,3.635627,0.370397,6.124651,-6.153304,-1.493295,1.000221,-8.503655,4.200103,-9.156014,-3.234251],[-6.864436,0.114995,8.996290,-2.063654,-2.996413,2.927013,5.758336,-5.034448,-2.060256,8.857014,-1.828157,9.904978,-1.673423],[-0.412983,-5.904811,3.496030,-0.073648,5.261533,-8.388925,-8.382910,9.769913,-0.140070,-0.569437,-7.733415,-0.127298,0.240615],[-5.379864,0.572669,1.367252,-3.666485,-7.862283,5.997596,-5.249577,5.029135,-9.829607,1.971880,7.323007,-5.364356,-3.422924],[-6.874532,-7.790323,-5.739282,3.562167,7.610438,8.153667,-7.971481,4.156882,-1.345733,0.089588,-2.761913,-5.086949,7.265190]],[[-2.399646,4.633962,-3.974754,4.264078,-3.487582,-4.069413,2.081203,-2.716427,8.889558,9.288017,-6.651646,-8.473688,4.837280],[6.573838,9.742929,9.238116,-5.255466,-8.538203,5.677235,7.767886,5.650835,1.037074,-8.032885,-4.024818,-5.146652,-6.049135],[0.691228,-5.425051,-9.462491,-5.221305,1.004355,7.983364,9.316504,-0.261028,3.747673,-1.124878,2.867736,2.795603,7.390415],[2.112234,9.729440,5.429207,3.572503,0.683405,2.809579,3.201823,-4.794255,2.884057,-6.163096,-2.721008,0.373568,5.915183],[-5.574109,-0.574365,-3.950075,6.276496,-7.258825,-8.134762,0.072206,9.577654,-7.987892,3.089475,0.192331,-0.567147,-1.239530],[8.127295,4.637935,3.451931,7.396792,7.006046,9.813217,-8.542691,2.607217,3.378001,-3.893535,-1.751287,4.306029,8.549592],[-3.991760,7.287983,-1.115173,-9.411989,1.132138,9.791070,-5.100666,-7.554572,-1.558401,4.404304,6.422445,-7.496853,2.679066],[-5.467348,-2.942030,7.625253,6.262550,0.852626,3.014051,0.567611,6.841326,1.826425,-3.850211,-3.824756,-5.920173,-7.103206],[-9.330811,-4.745211,3.962915,4.020348,-4.352308,-6.760964,2.493992,-1.824387,-4.462922,6.103212,-5.982077,9.871758,-7.171258],[4.409314,3.781299,-9.633608,-1.332030,0.496760,-0.875996,6.098180,8.102073,-9.284325,-0.187709,8.257135,1.586580,-5.077529]],[[4.090007,-5.594441,8.482508,3.352663,1.301759,5.758191,-3.356688,-5.459831,1.609398,9.722877,4.531375,6.283695,-4.341455],[-6.792390,5.927668,-1.427392,-0.001996,-2.891928,-5.962192,-4.170463,8.641104,-3.865493,-1.257663,-2.381837,-9.912965,-3.390470],[-8.255308,7.359382,-6.743886,-9.031617,5.524996,4.244498,7.375197,8.720890,8.813725,8.201819,6.020258,-4.415911,-8.045693],[0.595500,-9.866675,8.775859,7.874085,-2.050395,-2.499157,4.290895,8.078819,-7.652766,-0.618505,-9.812825,2.238555,5.286674],[1.930102,2.375922,-5.831717,1.613509,-2.894358,5.274277,9.717286,-4.817257,-4.134783,3.217158,-7.936481,-2.217011,-4.842383],[-9.573149,1.048529,-4.822588,9.461735,-4.592474,9.842688,-9.989260,-7.197857,2.876611,7.281861,-7.867861,-7.763452,7.210493],[7.331743,8.482273,4.585150,2.359381,0.702920,6.783220,8.078500,8.475531,0.383436,7.386507,8.766694,-9.141854,-6.602602],[2.077533,-7.809503,4.018569,-8.251076,5.965552,-6.467547,-6.461743,6.118443,-6.987380,-2.430174,0.577750,2.836521,0.796990],[6.555018,-4.602889,-5.314443,-0.368934,-9.648945,-6.629411,5.097495,-0.135248,7.097828,8.816034,8.340298,8.609253,7.669106],[0.091633,5.883539,-9.063548,-1.704236,-9.891518,-5.186167,-7.295538,-2.569556,3.133127,-6.625551,3.712749,0.173815,-3.592186]],[[-1.822567,-1.389380,-4.758526,3.707895,-0.472760,7.473335,-7.220453,-3.094537,-2.529058,1.281408,9.353729,-3.157243,4.317032],[8.453353,4.273418,6.181634,-9.030357,2.962422,5.759654,-3.321399,-0.487543,3.707762,-1.927378,0.632166,-6.405644,5.163898],[-1.060031,9.599052,-0.823604,-8.947520,0.648666,1.464724,9.778678,-9.469654,0.248169,-6.214366,-0.377509,-7.076018,9.741426],[-2.601592,5.724362,-5.497889,1.762285,7.791014,-7.707254,4.108227,6.225508,5.204460,-6.864238,3.770764,9.551540,9.560364],[3.629992,-5.371057,-7.215337,-5.477951,-9.756005,3.026412,8.697101,6.492690,-5.422900,9.258524,-3.490445,-9.028177,-5.967097],[-5.510807,8.680397,-2.981206,-6.475708,-2.354320,8.187059,-9.845216,4.799905,5.688197,-3.042662,-1.393696,-3.674274,-0.876971],[5.972487,6.735679,-1.398784,0.879743,1.442205,2.409372,-8.741070,-5.606665,-3.009810,7.927435,-3.511484,-5.780007,-7.689298],[6.602109,-7.231684,6.703671,-1.293409,-0.406781,-5.079798,3.088628,0.730006,7.656505,-3.175202,4.176191,-5.947876,-1.932074],[1.503527,8.621801,2.280008,-3.948762,-0.760045,4.782435,-9.235751,-9.036557,4.991791,3.232282,-1.085897,-1.495511,-6.689801],[8.064922,7.462173,-9.915266,9.216764,-7.906859,-8.980948,-9.172852,-0.036925,-1.226942,0.124669,3.432116,-1.232459,0.999160]],[[-9.536752,3.492306,8.815830,9.607383,-9.757386,-9.965047,-9.203768,-0.121390,9.432478,0.162469,8.401032,4.315254,-0.008727],[5.281705,2.381725,6.795515,2.689540,-8.321091,-2.416999,3.817817,5.511354,-1.443356,-9.967468,3.999782,8.010251,8.992463],[-2.868596,-1.948841,0.536392,0.353363,-1.395072,-4.311520,5.083029,7.111762,1.878604,-7.369629,-5.221940,-2.566356,7.582939],[-7.430041,-7.381101,9.244792,-8.262800,-2.559502,-1.156459,-3.338054,-9.730719,-7.192848,-2.318603,2.341130,-0.728709,-6.443020],[-5.439890,2.844123,-4.708053,5.740084,8.782558,7.240361,-3.924334,1.992305,7.877234,2.710854,5.838391,6.264965,5.262347],[2.648530,-6.653302,-8.746219,-0.461427,6.006848,-8.930374,8.436379,8.251808,9.909701,-0.107127,-0.733496,3.472525,-9.945972],[5.622459,-5.794201,-8.942082,-7.781845,8.334509,-8.745383,-2.594042,7.638580,-0.416382,-7.260733,4.741643,2.132997,1.679101],[-6.416864,5.212432,9.815915,-3.799991,-3.845278,4.994002,-7.546334,0.493545,-3.205099,-0.541301,-9.797507,-3.036267,-8.254169],[0.331457,-4.362213,-5.584800,4.499123,1.360577,-4.051664,-1.073479,-7.956577,-5.331154,-0.389108,5.755143,9.533803,-8.251714],[-5.592658,9.295988,8.708187,-0.599395,4.483945,-5.936155,3.299450,9.598214,5.673933,-2.848357,9.346732,-1.828732,-1.301428]]], dtype = "float64")#candidate|3458|(14, 10, 13)|const|float64
bop_3459 = relay.floor_mod(var_3443.astype('float64'), relay.reshape(const_3458.astype('float64'), relay.shape_of(var_3443))) # shape=(14, 10, 13)
output = relay.Tuple([uop_3444,bop_3459,])
output2 = relay.Tuple([uop_3444,bop_3459,])
func_3462 = relay.Function([var_3443,], output)
mod['func_3462'] = func_3462
mod = relay.transform.InferType()(mod)
var_3463 = relay.var("var_3463", dtype = "float64", shape = (14, 10, 13))#candidate|3463|(14, 10, 13)|var|float64
output = func_3462(var_3463)
func_3464 = relay.Function([var_3463], output)
mutated_mod['func_3464'] = func_3464
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3594 = relay.var("var_3594", dtype = "float32", shape = (4, 7, 1))#candidate|3594|(4, 7, 1)|var|float32
uop_3595 = relay.sinh(var_3594.astype('float32')) # shape=(4, 7, 1)
uop_3598 = relay.asin(uop_3595.astype('float64')) # shape=(4, 7, 1)
func_311_call = mod.get_global_var('func_311')
func_313_call = mutated_mod.get_global_var('func_313')
var_3601 = relay.var("var_3601", dtype = "int8", shape = (400,))#candidate|3601|(400,)|var|int8
call_3600 = relay.TupleGetItem(func_311_call(relay.reshape(var_3601.astype('int8'), [400,])), 2)
call_3602 = relay.TupleGetItem(func_313_call(relay.reshape(var_3601.astype('int8'), [400,])), 2)
func_1204_call = mod.get_global_var('func_1204')
func_1207_call = mutated_mod.get_global_var('func_1207')
var_3604 = relay.var("var_3604", dtype = "float64", shape = (360,))#candidate|3604|(360,)|var|float64
call_3603 = relay.TupleGetItem(func_1204_call(relay.reshape(var_3604.astype('float64'), [3, 15, 8]), relay.reshape(call_3600.astype('int8'), [400,]), ), 1)
call_3605 = relay.TupleGetItem(func_1207_call(relay.reshape(var_3604.astype('float64'), [3, 15, 8]), relay.reshape(call_3600.astype('int8'), [400,]), ), 1)
output = relay.Tuple([uop_3598,call_3600,var_3601,call_3603,var_3604,])
output2 = relay.Tuple([uop_3598,call_3602,var_3601,call_3605,var_3604,])
func_3609 = relay.Function([var_3594,var_3601,var_3604,], output)
mod['func_3609'] = func_3609
mod = relay.transform.InferType()(mod)
var_3610 = relay.var("var_3610", dtype = "float32", shape = (4, 7, 1))#candidate|3610|(4, 7, 1)|var|float32
var_3611 = relay.var("var_3611", dtype = "int8", shape = (400,))#candidate|3611|(400,)|var|int8
var_3612 = relay.var("var_3612", dtype = "float64", shape = (360,))#candidate|3612|(360,)|var|float64
output = func_3609(var_3610,var_3611,var_3612,)
func_3613 = relay.Function([var_3610,var_3611,var_3612,], output)
mutated_mod['func_3613'] = func_3613
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3938 = relay.var("var_3938", dtype = "int32", shape = ())#candidate|3938|()|var|int32
var_3939 = relay.var("var_3939", dtype = "int32", shape = (3, 8, 7))#candidate|3939|(3, 8, 7)|var|int32
bop_3940 = relay.right_shift(var_3938.astype('int32'), var_3939.astype('int32')) # shape=(3, 8, 7)
uop_3959 = relay.rsqrt(bop_3940.astype('float32')) # shape=(3, 8, 7)
func_2957_call = mod.get_global_var('func_2957')
func_2960_call = mutated_mod.get_global_var('func_2960')
call_3973 = func_2957_call(relay.reshape(var_3938.astype('int32'), []))
call_3974 = func_2957_call(relay.reshape(var_3938.astype('int32'), []))
func_3462_call = mod.get_global_var('func_3462')
func_3464_call = mutated_mod.get_global_var('func_3464')
var_3976 = relay.var("var_3976", dtype = "float64", shape = (1820,))#candidate|3976|(1820,)|var|float64
call_3975 = relay.TupleGetItem(func_3462_call(relay.reshape(var_3976.astype('float64'), [14, 10, 13])), 1)
call_3977 = relay.TupleGetItem(func_3464_call(relay.reshape(var_3976.astype('float64'), [14, 10, 13])), 1)
var_3983 = relay.var("var_3983", dtype = "float32", shape = (3, 8, 7))#candidate|3983|(3, 8, 7)|var|float32
bop_3984 = relay.floor_divide(uop_3959.astype('float32'), relay.reshape(var_3983.astype('float32'), relay.shape_of(uop_3959))) # shape=(3, 8, 7)
uop_3988 = relay.atan(uop_3959.astype('float32')) # shape=(3, 8, 7)
func_2973_call = mod.get_global_var('func_2973')
func_2977_call = mutated_mod.get_global_var('func_2977')
const_3999 = relay.const([[True,True,True,True,True,True,False,False,False,True,False,False],[True,False,False,True,False,True,True,True,True,True,True,False],[False,False,True,True,True,False,True,False,True,False,True,True],[True,True,True,True,True,True,False,False,False,False,True,False]], dtype = "bool")#candidate|3999|(4, 12)|const|bool
call_3998 = func_2973_call(relay.reshape(const_3999.astype('bool'), [6, 2, 4]), relay.reshape(const_3999.astype('bool'), [6, 2, 4]), )
call_4000 = func_2973_call(relay.reshape(const_3999.astype('bool'), [6, 2, 4]), relay.reshape(const_3999.astype('bool'), [6, 2, 4]), )
output = relay.Tuple([call_3973,call_3975,var_3976,bop_3984,uop_3988,call_3998,const_3999,])
output2 = relay.Tuple([call_3974,call_3977,var_3976,bop_3984,uop_3988,call_4000,const_3999,])
func_4026 = relay.Function([var_3938,var_3939,var_3976,var_3983,], output)
mod['func_4026'] = func_4026
mod = relay.transform.InferType()(mod)
var_4027 = relay.var("var_4027", dtype = "int32", shape = ())#candidate|4027|()|var|int32
var_4028 = relay.var("var_4028", dtype = "int32", shape = (3, 8, 7))#candidate|4028|(3, 8, 7)|var|int32
var_4029 = relay.var("var_4029", dtype = "float64", shape = (1820,))#candidate|4029|(1820,)|var|float64
var_4030 = relay.var("var_4030", dtype = "float32", shape = (3, 8, 7))#candidate|4030|(3, 8, 7)|var|float32
output = func_4026(var_4027,var_4028,var_4029,var_4030,)
func_4031 = relay.Function([var_4027,var_4028,var_4029,var_4030,], output)
mutated_mod['func_4031'] = func_4031
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4739 = relay.const([[[4.618067,-0.504411,-3.437671,3.045614,-3.468088,5.379461,-7.889749,0.784745,3.548136,-1.354805]],[[6.201366,1.573853,-7.037373,-4.401102,-1.624254,-7.067828,-7.721480,-3.908635,6.016218,-2.110063]],[[4.004763,6.052046,-9.224509,-1.195949,5.410153,-6.895775,3.905086,0.219450,-0.994499,-6.857122]],[[-6.083640,-3.206168,7.377665,9.541083,1.157855,-0.902281,8.438036,-4.343581,1.071874,1.747280]],[[-3.462731,6.482210,6.522481,0.933387,5.548899,8.642406,-4.465079,-7.206262,-8.195774,-7.564621]]], dtype = "float32")#candidate|4739|(5, 1, 10)|const|float32
uop_4740 = relay.sin(const_4739.astype('float32')) # shape=(5, 1, 10)
func_2459_call = mod.get_global_var('func_2459')
func_2463_call = mutated_mod.get_global_var('func_2463')
var_4747 = relay.var("var_4747", dtype = "float32", shape = (264, 4))#candidate|4747|(264, 4)|var|float32
const_4748 = relay.const([[-2,-4],[-10,2],[10,1],[-2,-9],[-8,8],[7,2],[-7,-10],[4,-9],[2,3],[-4,-5],[10,4],[5,-2],[-4,-4],[-4,-10],[-5,-4],[-8,-5],[10,-2],[2,9],[-5,5],[4,-4],[-10,3],[7,5],[-2,10],[3,2],[-5,8],[-4,-1],[-7,1],[-4,4],[-5,9],[10,3],[2,2],[1,1],[-8,3],[-5,5],[9,-7],[-2,8],[-8,1],[-1,-10],[10,-2],[-7,6],[3,9],[2,-2],[-1,5],[-2,3],[1,7],[-2,5],[-10,2],[-10,-5],[8,3],[-10,-2],[-5,-6],[-1,8],[5,-4],[-4,-7],[-5,-4],[-9,-8],[-4,6],[7,7],[-6,-9],[-2,-1],[-2,-1],[3,3],[-9,3],[-7,-5],[-3,9],[9,-1],[8,4],[-7,-6],[9,9],[5,7],[10,-4],[-2,-2],[-1,6],[6,7],[-7,4],[7,7],[7,-5],[8,8],[4,9],[-4,3],[-1,-7],[6,2],[8,-9],[6,-8],[-10,7],[7,-7],[1,8],[-6,-1],[2,3],[6,1],[-1,-7],[-6,2],[-8,-3],[-8,7],[-6,-5],[10,7],[-7,-1],[-6,-5],[5,-6],[6,7],[8,-10],[-10,-6],[-6,7],[8,-9],[8,6],[-4,-1],[-2,10],[-6,4],[6,-10],[3,-1],[8,6],[-5,1],[-6,-7],[9,-1],[-6,8],[7,8],[8,-10],[-6,1],[-10,-2],[-3,-8],[1,9],[-5,2],[1,-3],[-4,2],[9,-2],[-2,10],[1,8],[-4,-2],[4,-6],[4,-10],[8,5],[-6,-1],[-8,1],[7,5],[3,3],[-2,6],[-8,4],[-10,9],[10,9],[1,-1],[4,-1],[3,-10],[-9,-6],[8,6],[-4,-10],[-5,-4],[10,-10],[-5,2],[-1,2],[-10,10],[7,-2],[-8,3],[-1,8],[-1,-10],[8,-2],[1,4],[-8,5],[1,9],[1,-3],[10,-5],[-8,-6],[7,-9],[-7,8],[6,7],[-8,-2],[-8,-7],[10,10],[-7,-10],[9,-5],[1,-1],[-7,-4],[1,-7],[-6,10],[-9,2],[8,-1],[6,3],[7,-4],[-3,9],[-6,-5],[6,7],[-2,-5],[5,-2],[1,9],[7,5],[-1,-4],[-3,-6],[-8,5],[-2,8],[-9,-5],[-2,7],[-2,-1],[2,3],[-2,-10],[2,4],[-7,-5],[-9,-5],[6,3],[6,-1],[8,-7],[7,-4]], dtype = "int8")#candidate|4748|(200, 2)|const|int8
call_4746 = relay.TupleGetItem(func_2459_call(relay.reshape(var_4747.astype('float32'), [11, 12, 8]), relay.reshape(const_4748.astype('int8'), [2, 200]), ), 2)
call_4749 = relay.TupleGetItem(func_2463_call(relay.reshape(var_4747.astype('float32'), [11, 12, 8]), relay.reshape(const_4748.astype('int8'), [2, 200]), ), 2)
func_2957_call = mod.get_global_var('func_2957')
func_2960_call = mutated_mod.get_global_var('func_2960')
var_4754 = relay.var("var_4754", dtype = "int32", shape = ())#candidate|4754|()|var|int32
call_4753 = func_2957_call(relay.reshape(var_4754.astype('int32'), []))
call_4755 = func_2957_call(relay.reshape(var_4754.astype('int32'), []))
func_1532_call = mod.get_global_var('func_1532')
func_1534_call = mutated_mod.get_global_var('func_1534')
const_4765 = relay.const([5.662412,-9.010513,-9.230640,-8.174726,-2.377855,8.061015,3.745978,-8.122087,0.174107,-1.658240,-9.895476,-5.892214,-6.200609,2.954292,1.777936,7.406187,3.544797,7.262978,-4.043659,1.344942,3.725668,1.228009,9.999571,-4.075815,0.932346,4.413445,3.956500,8.867347,-4.224613,4.357035,9.569081,-1.941132,-3.238334,-4.136704,9.963408,4.480695,-6.465843,7.622576,-8.734583,2.409101,3.260393,6.145924,-4.756083,-9.193245,3.469245,-8.581300,-7.615814,8.123932,-1.863376,1.706548,5.978693,-3.010917,5.254846,-5.773891,9.421999,-4.288794,-4.623769,4.157918,-1.042169,-3.477827,7.313632,-1.946871,2.337957,-2.697695,0.600974,-7.501264,-0.699924,-5.707215,-3.142356,6.821623,-8.814087,-6.692697,4.796615,4.095246,-8.813945,1.458606,-2.710649,6.934124,2.755835,2.652459,-3.635731,-9.993842,-4.033623,-7.371133,5.081523,-1.181646,3.585024,-7.475299,-7.758734,-5.746079,2.884154,-4.817799,5.568346,-0.655606,5.093229,9.796744,5.525248,-4.682350,5.788967,-4.454817,-7.670864,-1.302115,-8.296421,-9.310122,0.984260,4.404996,-0.334855,-8.190933,2.908242,9.750250,8.432465,-5.397674,-1.814734,-6.540250,-2.470992,-3.605471,-1.841891,-5.721974,9.626713,3.591964,-6.766579,-2.878826,6.290190,-9.656656,4.571270,4.357259,4.119546,4.577110,0.783397,1.627260,-9.597023,-6.149528,-1.245945,1.736159,-7.824824,-0.215878,2.864660,2.866904,-4.864368,-2.442401,3.960571,-1.573405,4.249146,-1.289776,0.405082,-4.224781,3.803533,-7.332185,-6.073839,-2.189133,1.177582,1.096390,9.672299,1.700752,-6.507159,2.429640,9.241783,-9.144662,8.616766,8.627186,-2.322199,-5.252825,6.623924,-8.349243,5.280950,-1.953571,1.571132,1.669692,-2.168318,-1.552875,-1.763748,3.749924,5.329827,8.400743,-6.355247,-0.759249,-5.382290,1.240359,3.001204,8.411530,-1.776788,4.746011,1.792607,-3.168055,9.362129,2.985931,-1.443611,-0.703269,-9.175755,-5.118189,-0.018893,-6.159256,6.797014,-9.104730,1.968527,5.291552,0.447338,5.199932,-1.282192,1.222670,4.737426,5.945302,1.010697,7.258582,8.896586,-8.811990,-9.699269,4.519554,-9.149429,6.920274,2.493381,6.661110,0.426170,-1.126449,-4.056197,-5.328324,-7.034218,1.353400,6.030265,7.809185,-9.100292,-6.186621,-5.006328,6.889106,-0.673831,-9.080410,3.333667,-8.924888,0.053239,-9.748995,-7.921971,1.787888,8.732964,-4.587266,3.952785,9.571504,-1.557542,8.647494,0.712749,4.725499,4.791516,-1.414936,-7.346495,2.301996,6.052703,1.037422,-4.490715,-4.093072,-2.009009,-4.353802,-8.168737,1.926967,-3.028464,-0.584554,0.516248,7.187597,8.005996,-6.594724,-4.953391,0.542907,1.080525,-5.839930,9.488450,1.835221,6.571184,-7.256975,-7.232353,-3.757585,-4.647119,-0.814481,3.359237,-2.898520,5.790385,-7.658395,-2.209158,0.792258,-7.072779,-1.557819,-0.154489,5.073454,2.059565,-4.742874,-1.569332,-4.634649,0.664336,-0.242975,-5.288304,4.932888,0.987719,-8.762835,-5.348680,-3.237963,3.640844,-7.709588,-1.990461,8.510383,7.236262,7.334692,8.468207,-5.605902,2.810622,2.645699,1.617501,4.996918,-4.625111,0.101080,-6.898692,9.121559,-9.307768,1.058931,-5.338626,-6.232764,-3.365626,2.243873,-5.023804,-7.125215,-8.659064,5.552272,1.425179,4.644485,-3.521357,-0.524713,-1.847596,-4.363026,9.480703,7.494071,3.894343,-4.188302,-7.226273,3.828158,6.877173,-8.081322,9.866918,-1.091627,-4.515992,-4.692374,-8.745378,6.543408,-9.986671,0.204790,-9.457421,3.383626,-4.423546,8.606309,5.314559,1.967724,4.918113,7.008025,-0.044995,1.661542,6.563311,8.396542,-6.667210,-9.658304,1.317119,-5.983430,-1.131810,5.803541,1.793993,3.150054,4.304321,-2.587595,-4.520287,3.607344,3.092035,-6.575450,-3.827560,-7.593690,-0.949861,0.062137,-9.112539,6.605167,-6.323320,4.563983,-6.369478,-7.548897,-3.049372,-3.388327,-8.487047,6.891134,-4.516076,-2.641454,4.066650,5.912542,5.476082,7.289010,-0.016231,8.414504,7.853363,7.925516,9.096518,9.633841,-8.259019,2.003147,7.052208,-8.277485,-7.499161,-3.203534,4.043300,0.328586,8.935280,-4.733504,-0.699895,-8.112609,-8.880326,2.545822,8.928648,9.419501,-7.181745,3.011280,4.840140,8.358589,-0.899561,-5.952403,9.287270,8.845240,-5.635450,-0.118650,5.168893,4.384790,-4.720534,8.363512,8.420261,2.220255,6.846740,-3.792039,-7.718217,-1.610574,0.709883,-6.959236,0.579217,4.021217,9.658364,-1.826837,-2.972603,7.363882,-9.252475,2.846054,4.983133,8.135721,0.308259,-3.545304,6.097819,-8.393655,8.161079,6.625307,-1.918467,-4.533057,-7.957614,-3.411339,-9.698317,-8.299055,6.872760,7.098054,-2.765238,5.296236,-1.124948,-4.744567,2.853732,-1.077875,6.858964,7.722455,3.754551,-6.617218,-2.707642,-5.473597,-0.564152,2.323310,-8.990454,-7.809410,2.074432,-8.752307,0.306147,8.342586,-1.948065,1.281213,8.633526,1.736382,9.190985,-7.944336,1.937622,-4.275673,3.996852,1.844904,-6.067925,3.406409,0.694611,4.523463,-4.883368,2.363411,7.570734,-0.584055,3.269511,2.052082,4.048317,-8.678565,-4.246867,-5.703240,-7.646356,-4.986445,-2.191769,-8.598058,4.292200,-6.949865,-5.384552,-3.101118,0.755858,-7.840038,6.009053,7.025708,-4.708874,7.938670,-0.441807,-6.656275,4.139864,-3.131213,-7.179500,0.876796,-4.612391,3.203270,-9.181232,-8.914349,6.514239,-1.147901,-3.321509,5.559044,-8.808739,-0.155529,1.717704,3.565786,7.384862,-6.866382,3.525306,9.436002,0.486461,-0.976543,2.861036,4.359540,-0.959376,8.770514,7.291454,9.276612,8.592426,9.908267,-1.814711,3.402993,-1.654102,-9.509040,3.659871,7.904138,-6.889775,-5.273920,7.910134,-3.679870,-7.595413,-4.390798,4.666588,4.697842,2.489852,8.776786,4.301241,0.941916,-3.363688,5.986574,-1.092679,-0.057940,6.381449,-9.732711,6.654722,-2.406685,-5.008174,2.044246,-0.242223,-3.289274,2.753449,2.618051,-4.955298,-9.892136,-6.888549,-8.830286,4.144967,-4.689929,-4.333945,9.265606,0.210093,2.987694,-3.632628,5.342148,9.438258,1.329709,3.055257,1.310989,4.889039,-3.621171,-6.944427,-8.287140,-1.295439,-0.011511,8.452289,-4.859793,1.415691,-1.666401,-4.181601,-2.152771,7.434386,1.115070,-1.670498,-7.641852,-0.687675,-0.125244,-6.002588,-0.908084,2.550361,3.273406,-1.576915,7.390429,8.099263,-0.107427,-7.995752,9.079589,-9.359159,-3.662348,8.482551,-5.710734,-5.919780,-1.905203,-7.354327,1.486140,5.913972,-3.047607,-9.722394,5.604457,-9.937712,0.969899,-2.243124,-0.600534,1.990965,-9.692522,-4.200544,5.209129,4.583878,0.075327,-4.810609,8.124369,7.436458,-7.694244,1.061484,6.465706,8.492538,-8.685719,8.314785,-8.533131,-7.934853,3.141102,7.106243,6.906180,6.696909,-9.441341,4.160940,6.655551,-0.563166,-8.797549,-6.353668,0.536069,-3.046259,8.667951,-9.071615,8.078627,-9.381222,9.421456,7.973596,-0.842117,9.374318,-6.178018,-4.474849,9.235635,7.975595,9.739137,7.688276,2.810217,-4.004614,0.810666,-6.567428,1.295758,-0.275131,1.244468,8.922673,-9.166576,-8.235781,6.051371,-8.241921,2.472308,-5.998494,6.257397,5.517130,-0.332768,-9.681168,3.535974,-2.169546,1.924533,5.924343,-6.403092,2.101737,-9.944653,4.420638,-1.852322,-8.398283,-8.145342,-4.704334,5.497655,-0.350013,-3.604312,1.863684,-0.520145,-2.039624,-2.350161,-0.194126,0.979420,9.505208,0.967086,6.429764,3.307921,-6.590306,4.933997,7.897158,-1.400047,-2.874748,-0.622898,-9.573563,3.854118,0.691851,8.587011,-3.784284,2.321959,-5.506255,-5.898075,-9.169692,1.851782,4.474860,-7.010562,4.646802,4.732208,6.197941,-1.154806,-2.681998,-7.016979,2.279621,0.585700,-2.068094,-6.173257,2.963839,6.421869,-5.682903,-3.198872,6.264970,-2.734989,-8.407436,-9.604541,-4.348986,6.727988,-3.246435,-2.000502,1.318486,9.127684,-6.899502,-2.898739,-5.504768,0.427941,7.217117,4.053434,-5.011642,7.828445,0.338886,-2.864430,-6.860401,-0.363243,-5.847891,4.131121,-1.428837,4.689691,-5.631622,-2.314595,8.840234,5.911345,-3.285332,6.233701,-1.820374,7.482671,-5.903482,4.951529,3.346748,1.062730,-4.913159,-0.222147,1.502661,2.012738,9.584527,2.415108,-8.992797,1.759920,6.202846,0.321789,-7.326063,8.927904,8.020112,1.389145,-8.044070,-1.300812,5.611364,9.535163,-5.964219,-9.622333,-1.680399,8.894393,-1.472371,7.218830,5.796146,-0.582094,0.526779,1.847388,-5.784166,-5.682420,5.850358,-0.194192,3.737623,-9.043847,-6.794422,8.685484,-1.816170,6.297202,-3.952928,-3.301429,-2.250898,0.972608,-9.646208,-5.804756,0.160776,1.407333,9.743841,-5.694568,9.201784,-8.618592,8.502122,-5.160310,-9.705128,9.399050,5.558411,3.715682,-6.310747,1.337778,1.594730,2.208053,-5.937725,3.930282,-7.658658,-2.252901,-1.877867,-8.837497,7.229685,0.161287,-1.598223,-6.207022,-6.875632,7.840666,-8.393698,4.244925,-2.808958,-1.836724,6.990053,-4.522285,0.204015,3.170262,-5.118806,-4.606452,4.803568,2.885310,-4.862817,2.042232,7.326494,4.300323,2.099225,2.673052,6.262825,6.991609,-1.098372,9.648737,-7.244263,8.759216,-7.752916,-7.960367,-8.097468,8.311208,1.544886,9.101098,-1.869881,-2.158708,-5.879861,8.926322,-0.916262,-8.369438,7.777019,-6.529530,2.555063,-4.948683,5.162207,8.848698,-3.523873,-2.057946,2.629549,5.342662,-3.978446,8.911138,3.313279,5.828643,9.033960,-0.379419,1.854194,5.938415,8.696811,-5.101534,-2.767760,-2.137048,-1.293378,6.079411,-9.007220,0.868574,-5.860640,7.159217,-7.320477,1.870144,4.429410,-5.307397,4.473039,5.735747,1.802636,7.156092,3.134927,-8.395710,8.305774,2.817799,-4.922074,-3.115935,5.659250,4.866506,-2.051443,-0.044828,-6.351872,-5.429735,-5.919991,-3.318176,8.505779,7.897105,9.708957,8.422461,2.126441,0.652632,3.935945,1.436349,8.338355,-6.446144,7.689975,7.633410,2.964713,2.502030,5.596396,7.524829,-1.992218,5.730611,3.118911,-0.716742,5.929121,-9.643020,3.870379,-3.250859,-7.189306,1.866476,6.033375,-5.853275,-9.409940,-9.630429,8.864905,7.406559,-9.027764,-5.980283,6.561278,1.471520,-2.305558,9.143609,5.824792,-4.918328,0.142495,5.668204,8.963818,7.881160,-3.356442,1.982436,-0.965421,4.489113,-1.822115,-3.600058,-9.252272,-6.162435,2.449013,-7.890744,9.125079,3.807356,-5.907035,9.590581,-6.435383,-0.197204,-9.587052,-0.287920,-4.754196,-4.265375,2.346461,-4.029293,-0.642751,-3.362119,-4.292537,-5.733447,-9.847959,-9.361522,-0.332023,-5.948783,4.020968,4.262926,-6.402162,-7.913037,4.121895,5.227053,7.046754,-4.093262,5.541126,8.089219,-7.294855,2.418144,3.292455,6.078592,-2.730909,-3.917887,-7.180577,7.005973,-9.924727,3.972805,-7.349239,-2.244957,-8.103203,7.565611,-7.176182,-8.052771,-1.929764,5.354956,0.696682,-8.139704,-2.551938,4.886164,-0.579779,8.733517,-4.640762,6.161111,-4.147188,-0.337448,-9.649805,-1.149271,5.046827,6.504698,-5.745966,2.979511,-6.762402,1.099825,1.035386,0.214580,-1.427427,-0.850552,-3.559122,5.312393,0.568621,3.689105,-4.544207,-6.823222,-2.884825,0.389975,-6.896244,1.740781,-7.703350,5.975075,9.124181,-8.352466,-0.110305,7.627771,-6.940229,8.698142,-8.558076,9.333564,-4.710016,-7.604994,-7.629689,0.171911,1.829166,9.026366,-4.738875,9.458885,6.820226,8.835865,-7.028463,-4.154487,9.829000,-7.936745,8.344118,-6.187113,-1.194176,-9.453557,4.997965,5.054070,-8.538773,-3.349557,-5.596013,5.385496,1.189877,0.416918,4.966838,-4.667371,3.501602,-5.681359,2.350682,-5.912066,-5.607769,-9.524902,-1.335967,-1.872830,-8.669347,8.586051,-0.152032,-6.901685,0.560743,2.112530,-1.657939,-4.238556,-5.741764,-2.314334,1.927645,9.769911,5.109878,3.878936,-6.638907,9.705944,0.579683,6.010300,0.497331,6.499677,2.892325,1.334485,9.839804,8.433719,-6.490034,6.920657,-1.554868,2.959213,-7.426560,5.079507,-8.756488,1.660755,-7.099513,4.092183,-9.080573,-7.173759,0.516966,8.279044,1.914732,6.573018,-8.532395,-1.881960,9.170245,8.875605,-1.136959,-9.221318,0.256928,-5.572746,-2.443129,0.028249,5.627277,-2.972565,0.854804,3.330710,-9.792041,-4.240819,1.053499,3.094152,0.914172,-3.492935,-0.019619,-0.613036,-3.867941,6.407326,4.355049,1.173990,-3.770856,1.506428,-8.560213,8.473695,8.674057,8.108487,-5.836473,-6.571524,9.873081,9.062977,3.596030,3.986561,0.702016,5.159943,0.706585,2.110467,-9.380902,4.355785,6.401288,-6.533916,9.993852,0.990398,-1.307988,5.962908,-1.715606,3.114725,-6.727176,2.253211,1.420952,-1.194861,5.105010,1.393556,8.711834,-2.968566,2.787029,5.934510,8.047313,-5.912238,-3.844441,8.235526,-4.828420,8.042845,-0.448858,-7.287559,3.306623,-2.510810,-3.510594,-0.025830,9.278179,-0.095357,7.665869,7.044679,-7.986218,8.408143,2.077546,9.785374,6.791459,-5.444017,8.451647,-8.158252,-2.554786,-2.791120,-6.271027,-2.213531,5.245764,-4.806377,-5.112649,5.189515,5.624014,-2.148396,-8.488074,-7.750831,-7.220316,1.086270,-4.415769,-0.230431,-3.737355,6.975229,3.092223,-7.668793,2.073706,-0.490474,-5.367704,-7.453420,-4.477906,-9.084959,8.098716,-8.257002,-3.343927,2.302719,2.047051,0.959473,-6.526432,-6.908604,-1.432543,0.133620,9.940178,1.473573,3.434034,1.705668,-2.207586,-6.995489,4.718538,7.459960,-1.644353,-9.142467,-4.789971,-3.659754,-2.769567,5.147483,3.683650,-7.476861,-5.329968,1.449627,-2.366032,8.419898,-8.864234,-2.814898,-2.043470,6.322708,-5.333152,0.364138,0.217665,-5.524742,-0.660208,-2.889480,-4.441724,5.582223,6.327557,-9.571370,0.689993,-4.858039,-2.251819,1.929629,6.081724,5.548813,-1.917817,-8.976553,-8.985749,-7.749901,-0.759298,8.849751,7.880735,8.655289,9.386135,-1.806762,7.676102,-4.496072,0.710168,9.781082,7.179560,4.299489,4.584879,9.592612,-1.661184,-4.601223,9.448126,1.088039,-8.601339,8.592244,-4.258224,9.198065,-3.395926,7.982599,9.544312,-8.717890,-6.090702,7.739134,-5.694867,7.091525,-4.528181,1.697808,6.709562,-4.572346,-9.154469,9.939391,-1.047276,-9.109995,1.589953,-6.504921,-2.586960,6.817784,-7.208897,-3.755277,5.723441,7.548095,-3.825745,6.089421,3.373569,2.868900,3.769353,9.902647,9.833826,0.952470,9.233956,-4.921187,-1.040282,-5.093851,-3.164006,7.908172,8.927896,3.918661,-2.726098,9.499306,-8.252945,5.970092,-1.502093,4.972046,-2.701220,-8.082393,5.601420,-4.723552,-2.408494,-8.536128,1.490663,-6.758210,0.555520,-8.201070,6.938685,7.237162,3.791682,4.667236,2.258903,8.546995,6.734344,-3.770259,-4.351541,5.525896,9.130564,9.648957,0.189192,4.846043,0.388117,-7.215064,-8.693863,8.614848,-6.233105,2.124444,0.917783,-8.278285,-4.481954,1.408745,5.953407,3.238817,0.237725,2.040889,-7.122572,2.133369,8.795298,-6.195115,8.160720,9.020001,6.009517,-4.623247,8.026066,8.030176,1.778427,2.026297,4.298079,8.898038,4.807447,-5.798241,-8.510043,-6.332268,2.794161,8.168436,-6.049969,9.105094,2.834771,-8.139001,-1.369802,-3.122481,4.219256,-1.278833,-5.873060,3.374545,-9.016477,4.329698,6.567204,-1.121920,8.273709,6.359506,-8.580127,1.090154,-6.744507,7.778502,0.570727,-7.881454,3.607851,-4.702940,7.593828,9.519556,0.372185,-7.325001,-7.797635,2.295468,-6.768756,3.632079,0.220639,-1.636675,7.161661,-3.790735,3.402175,2.224303,5.255877,-5.033878,1.127146,6.982938,-0.530079,8.109415,-9.328403,-3.575716,1.941799,-2.196389,-8.708372,8.739764,-9.071601,6.827161,-9.607690,-3.738545,-5.304064,-9.514969,-9.502403,-3.819685,4.864565,-6.569567,-1.048106,-3.348376,-6.653769,8.804791,4.682694,-4.953941,-0.923436,9.189393,-5.332673,2.340004,-9.498122,-5.884236,5.958168,-3.178872,-9.569913,-2.618233,8.839301,1.314071,0.797705,6.886573,6.635631,-9.238160,0.950557,-1.029256,7.472196,-9.370437,-2.417149,6.118661,5.379783,-5.819190,-2.040907,-5.305974,-1.310790,5.348706,-9.250380,-7.256164,5.489058,-9.087796,0.691191,-5.851613,-6.159657,-1.604145,-6.994062,-8.183124,6.662175,7.319269,7.662305,-8.452573,4.410196,-7.254573,-5.605518,2.392255,1.235788,-4.686806,0.646183,-8.598922,6.974276,-5.268882,-6.901026,8.443757,1.910503,5.838465], dtype = "float32")#candidate|4765|(1584,)|const|float32
call_4764 = relay.TupleGetItem(func_1532_call(relay.reshape(const_4765.astype('float32'), [16, 9, 11])), 1)
call_4766 = relay.TupleGetItem(func_1534_call(relay.reshape(const_4765.astype('float32'), [16, 9, 11])), 1)
uop_4778 = relay.sigmoid(call_4764.astype('float32')) # shape=(16, 9, 11)
uop_4780 = relay.sigmoid(call_4766.astype('float32')) # shape=(16, 9, 11)
output = relay.Tuple([uop_4740,call_4746,var_4747,const_4748,call_4753,var_4754,const_4765,uop_4778,])
output2 = relay.Tuple([uop_4740,call_4749,var_4747,const_4748,call_4755,var_4754,const_4765,uop_4780,])
func_4788 = relay.Function([var_4747,var_4754,], output)
mod['func_4788'] = func_4788
mod = relay.transform.InferType()(mod)
var_4789 = relay.var("var_4789", dtype = "float32", shape = (264, 4))#candidate|4789|(264, 4)|var|float32
var_4790 = relay.var("var_4790", dtype = "int32", shape = ())#candidate|4790|()|var|int32
output = func_4788(var_4789,var_4790,)
func_4791 = relay.Function([var_4789,var_4790,], output)
mutated_mod['func_4791'] = func_4791
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4812 = relay.var("var_4812", dtype = "float32", shape = (7, 9, 5))#candidate|4812|(7, 9, 5)|var|float32
uop_4813 = relay.cosh(var_4812.astype('float32')) # shape=(7, 9, 5)
var_4836 = relay.var("var_4836", dtype = "float32", shape = (7, 9, 5))#candidate|4836|(7, 9, 5)|var|float32
bop_4837 = relay.logical_xor(var_4812.astype('uint64'), relay.reshape(var_4836.astype('uint64'), relay.shape_of(var_4812))) # shape=(7, 9, 5)
func_3370_call = mod.get_global_var('func_3370')
func_3373_call = mutated_mod.get_global_var('func_3373')
var_4848 = relay.var("var_4848", dtype = "int32", shape = ())#candidate|4848|()|var|int32
const_4849 = relay.const([7,-9,-5,-3,4,-4,-1,10,5,-5,3,6,-8,4,-2,-6,-2,-5,-6,9,-6,3,-9,-5,6,-3,-4,3,-7,-7,-3,8,-10,4,1,9,6,3,6,-10,-8,5,3,3,6,9,-7,-7,-9,-4,-4,-6,-5,-6,6,5,-10,-5,10,-4,-10,-8,-7,-3,-7,7,-7,10,3,-5,3,-3,2,-7,-4,1,-2,-10,-5,7,7,1,-8,-10,-8,-8,-6,-3,8,1,9,-7,-2,-1,-9,8,4,-2,4,-3,-6,3,-3,10,-6,-3,-4,7,-5,-2,-7,-10,2,3,-5,-8,9,-5,-8,2,-8,1,5,-10,6,-5,-2,6,-1,10,9,-1,7,-9,-2,9,7,-6,7,3,7,10,4,-3,-7,3,9,4,-9,-1,5,-5,-1,3,6,-5,3,-2,1,2,-6,-4,8,-3,1,1,5,8,-6,7,-6,-5,-6,-6,10,-5,-2,3,6,-8,-1,5,-5,-5,-2,3,3,-7,-2,-5,10,3,10,-3,-4,-5,1,3,3,-7,10,-4,-7,-3,-3,-5,10,-6,-4,9,1,-4,-6,-6,-5,-5,-4,-8,-10,-2,-1,8,5,-2,-3,8,8,6,-9,2,-7,8,6,2,7,10,1,7,-2,-4,3,10,-3,5,1,5,6,7,9,9,3,2,-9,-9,-2,-9,6,6,8,-3,-9,-6,2,-1,3,7,-1,-10,-9,-5,-2,4,6,9,-1,2,1,-9,1,5,9,-8,10,5,8,10,2,10,-6,-1,-1,1,1,6,7,4,5,10,-1,-7], dtype = "int32")#candidate|4849|(300,)|const|int32
call_4847 = relay.TupleGetItem(func_3370_call(relay.reshape(var_4848.astype('int32'), []), relay.reshape(const_4849.astype('int32'), [2, 15, 10]), ), 0)
call_4850 = relay.TupleGetItem(func_3373_call(relay.reshape(var_4848.astype('int32'), []), relay.reshape(const_4849.astype('int32'), [2, 15, 10]), ), 0)
var_4862 = relay.var("var_4862", dtype = "int32", shape = (2, 15, 10))#candidate|4862|(2, 15, 10)|var|int32
bop_4863 = relay.greater_equal(call_4847.astype('bool'), relay.reshape(var_4862.astype('bool'), relay.shape_of(call_4847))) # shape=(2, 15, 10)
bop_4866 = relay.greater_equal(call_4850.astype('bool'), relay.reshape(var_4862.astype('bool'), relay.shape_of(call_4850))) # shape=(2, 15, 10)
bop_4877 = relay.multiply(uop_4813.astype('uint8'), relay.reshape(var_4836.astype('uint8'), relay.shape_of(uop_4813))) # shape=(7, 9, 5)
output = relay.Tuple([bop_4837,var_4848,const_4849,bop_4863,bop_4877,])
output2 = relay.Tuple([bop_4837,var_4848,const_4849,bop_4866,bop_4877,])
func_4883 = relay.Function([var_4812,var_4836,var_4848,var_4862,], output)
mod['func_4883'] = func_4883
mod = relay.transform.InferType()(mod)
mutated_mod['func_4883'] = func_4883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4883_call = mutated_mod.get_global_var('func_4883')
var_4885 = relay.var("var_4885", dtype = "float32", shape = (7, 9, 5))#candidate|4885|(7, 9, 5)|var|float32
var_4886 = relay.var("var_4886", dtype = "float32", shape = (7, 9, 5))#candidate|4886|(7, 9, 5)|var|float32
var_4887 = relay.var("var_4887", dtype = "int32", shape = ())#candidate|4887|()|var|int32
var_4888 = relay.var("var_4888", dtype = "int32", shape = (2, 15, 10))#candidate|4888|(2, 15, 10)|var|int32
call_4884 = func_4883_call(var_4885,var_4886,var_4887,var_4888,)
output = call_4884
func_4889 = relay.Function([var_4885,var_4886,var_4887,var_4888,], output)
mutated_mod['func_4889'] = func_4889
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4976 = relay.const([[[1.351477,-3.257191,-9.750510,-6.303059,0.129200,-1.293063,0.431841,5.062416,4.124400,-5.421389],[-6.470710,-9.892566,-3.829467,-2.101060,1.414016,-2.747364,2.437467,1.572281,0.480562,-5.899769],[1.607059,-0.703939,-6.976500,-3.280288,0.770450,-5.559931,4.167608,7.812607,-5.118105,-1.493151],[-6.424920,-6.063829,-0.138868,1.314878,-4.421219,-7.654201,-8.488053,-6.181126,-1.200296,-9.614939],[6.359515,7.636502,9.227326,7.737132,-4.323652,7.553814,-8.296742,-5.683575,7.236146,-2.740245]],[[7.266261,1.792528,4.159029,-7.525396,-9.003173,2.187222,3.686611,2.310656,-4.812097,2.557711],[-5.651214,9.202741,-7.645868,8.626659,1.436956,9.299413,-5.471137,-4.981098,0.962029,0.556220],[8.314839,2.393379,-3.965718,3.208407,3.267535,1.332557,5.890646,-0.438903,7.752207,5.281521],[-8.190410,9.623015,-9.790136,-1.276534,3.416947,0.159305,1.591409,8.092822,2.194856,-8.121909],[0.493390,3.317250,-3.587595,8.639005,5.312944,-5.364620,8.649724,3.575298,9.045954,0.043834]],[[6.350346,6.172566,-1.133401,-1.820599,0.156548,-8.629282,3.368556,3.836941,-5.713051,9.413476],[5.168229,9.791174,7.468028,-4.045277,-5.717898,6.197505,4.565407,-3.686619,-1.995347,3.931706],[9.738083,-2.025611,5.013019,-6.041985,-3.878889,-8.604834,2.099884,2.451597,-4.500170,1.100189],[0.482523,-8.110971,5.467497,-6.509349,-7.073052,8.771199,-1.024889,-7.366666,5.248852,1.180035],[-1.660204,-2.349268,4.029546,-8.703343,6.914044,-1.032121,7.312059,5.722480,-4.644900,-5.072180]],[[-6.051715,-6.533339,6.569248,-8.553425,-2.588776,4.376124,7.355566,-5.853162,3.169022,-8.210551],[7.682648,3.946486,-4.899006,7.402286,8.924772,0.884129,-3.947746,-7.275965,-6.714895,-9.173945],[-7.908476,2.587032,2.839145,-5.637655,-1.012846,-6.684561,1.049668,-1.285880,-8.069273,-5.907043],[2.590384,4.373593,-4.413463,-7.292854,7.430385,4.766527,-0.979395,4.985720,-0.566034,-8.769281],[9.813085,-0.257366,-4.897268,-4.607057,2.653423,-4.829224,-6.139190,-8.103161,1.567625,7.432856]],[[3.652480,-6.761866,5.856327,-6.248165,3.197098,-3.779043,5.795187,-6.399550,-5.823898,-8.520303],[4.598873,-3.120139,3.917324,-3.808812,4.989566,4.706961,-4.554106,-5.886197,5.943074,-4.600492],[0.004343,4.454857,7.450828,1.605159,-3.826455,6.823060,-1.109796,5.132727,-0.581860,8.229637],[8.962066,8.794025,-9.485024,3.379282,-7.014602,9.723893,9.150432,-2.940027,-9.921067,-2.338520],[7.639505,-7.987130,6.990619,3.739569,-0.944963,-0.651571,6.582567,3.631451,1.273772,-9.519291]],[[-6.552541,-5.897757,-3.687010,9.694691,-9.420191,-0.489030,5.772552,8.083445,-4.820580,5.797430],[3.422561,0.160396,1.439895,8.994215,7.667477,-1.747831,7.597882,3.952296,0.246292,-2.314626],[-6.343362,1.384173,4.421443,2.848519,-1.290378,-1.359062,-1.411033,-6.798209,3.929583,-6.263521],[1.796375,-0.007966,8.705766,6.581224,-7.744151,-0.673225,-1.998063,6.785589,0.228307,9.216158],[1.098620,4.166722,1.810699,7.962628,4.844694,-1.352204,-6.946367,8.286638,-3.791246,-0.542916]],[[-5.727004,-8.640331,-7.792446,3.856713,-8.898918,9.484168,-3.045003,8.824775,0.078028,-9.486236],[-4.132721,5.191786,-5.295454,9.052683,2.266409,1.069277,-4.261837,-5.326641,3.275083,-5.761259],[5.496066,1.567830,8.279187,1.020068,0.602083,7.999658,-2.905057,-2.837231,-4.901062,-2.239339],[0.297316,5.062888,6.163393,2.560176,0.611107,-4.873609,7.350810,2.985261,-7.144607,1.747698],[-9.101395,3.253923,-5.535046,3.700546,4.187700,-6.326863,-3.604413,6.245235,-4.855548,-3.926805]],[[-7.765678,-1.489146,7.077956,-7.302815,-1.435665,0.285777,4.359991,-2.517564,8.906687,-6.021742],[7.905022,9.343560,-4.865396,7.035970,2.400828,3.283405,-7.955401,-5.076123,9.412459,7.750503],[-7.679593,-9.873237,8.438830,5.181256,2.525724,-0.211731,2.764770,-1.512731,-6.705481,-0.053080],[8.866346,9.163648,6.310961,7.211874,3.315277,-0.472705,-2.307461,4.271758,2.978010,-2.548144],[-6.866882,0.817519,-2.891154,9.700062,9.085328,4.803232,3.965018,-7.854916,-9.810657,2.643852]],[[-3.508701,5.623100,5.016072,7.327193,-6.385470,9.761216,-7.619321,-3.478340,-3.311450,5.446544],[0.208641,-7.037395,3.195742,7.574099,7.405160,9.213326,-9.744909,-1.204095,5.144627,1.122714],[1.909100,-8.047434,9.702768,-3.843080,4.212068,-5.617639,-1.690291,8.438488,9.820702,2.465071],[-2.143136,4.730430,-5.577813,-6.205739,6.920137,0.161038,-5.329785,-3.406496,-0.293621,8.996550],[-4.941891,-1.243259,-4.475995,-3.918357,-6.042386,-1.402427,0.904777,3.327744,6.054316,6.701443]],[[3.675300,0.448620,8.043619,-2.828640,9.429192,3.847773,9.616215,-8.358849,2.609517,5.878604],[9.744183,-5.025488,6.495081,-4.288278,4.604652,3.609515,-9.518097,-8.429170,-3.158971,0.929897],[-0.617411,4.961989,-0.358896,-2.873633,9.061350,7.789651,9.936194,5.394485,6.687789,-8.593295],[8.261084,-0.947782,-3.334734,4.275363,4.991549,-9.455951,5.909816,6.061893,-1.033784,-4.961101],[9.732153,-8.564481,5.650434,-0.957853,8.364462,-4.815420,-3.899138,-0.205993,0.643094,-8.272152]],[[-0.053988,8.765472,-7.913076,5.454201,-7.271914,-8.385771,9.779741,-0.902101,-3.781579,9.285184],[5.513859,7.603584,-3.655401,2.058324,3.378749,-5.872998,-5.610319,-0.578147,-6.026863,4.206898],[8.899758,3.177908,-6.103946,3.785180,-8.345190,-0.608468,-8.141455,9.360426,8.047758,4.727499],[-9.582511,-9.145772,0.912944,-0.058868,-2.134516,-6.689581,7.934177,-7.514434,7.646778,5.000599],[7.460944,-7.669763,8.014684,-2.348961,-6.249410,0.532509,-2.980265,8.848822,-5.649867,3.396818]],[[-2.785399,-0.462588,6.088266,6.479999,1.702748,-8.158096,7.073181,-6.320489,6.285627,3.871573],[-3.472715,-4.445567,0.140366,-8.665307,2.747591,-8.041682,5.618499,-7.246030,-5.208985,-0.715412],[-6.649094,-0.470484,4.790531,-7.085218,5.248937,-5.774212,-5.372269,-4.244523,-8.312019,-9.193192],[6.992183,2.826918,8.839604,9.584143,-6.432019,8.075797,4.063500,-8.538842,5.699417,3.694654],[-5.987069,-2.728085,-9.157506,-7.995693,-8.269558,0.446052,-1.841026,-5.267064,-6.187760,4.208718]],[[9.408006,5.504794,-4.438773,6.402663,-2.326513,-3.288569,-9.366746,2.024634,-9.382048,-5.563547],[-2.155598,-6.154326,-7.064220,5.577702,-1.321575,8.968378,3.310698,-2.546629,-3.409571,0.289174],[-5.044087,-7.299858,5.049161,-7.394988,1.937915,-2.695954,-3.111128,-9.729879,7.825957,0.316563],[-7.538095,-2.737113,9.437562,9.723412,-0.190542,-7.044420,2.304685,-1.844415,-2.348009,-0.744727],[9.678011,-3.545098,7.581388,-9.666310,-6.728494,-7.327665,1.407589,-0.968045,-4.667608,-1.108094]],[[5.129281,2.616259,2.439387,9.067387,-0.807133,-8.855116,-2.100356,0.304237,3.741964,-3.626532],[2.913518,9.825966,7.389240,3.349498,0.897379,2.544613,-4.536971,2.749097,-9.002003,-2.518328],[-4.240791,-2.508879,1.380728,-8.449013,0.662860,-4.270726,-4.635095,9.509815,7.821321,3.164786],[1.496095,9.400577,8.035417,7.956658,2.635257,9.386736,-8.907905,-3.386028,4.186867,8.937702],[-6.225388,-0.232024,7.063582,-9.343822,-4.903358,5.188939,-1.160546,-8.865805,-3.330544,4.748492]],[[6.515801,8.080874,-2.374789,5.007913,1.455662,4.261393,-3.545171,-6.766845,6.653428,-5.353666],[-1.109800,2.865949,8.562235,-5.673309,-4.268740,2.211690,-9.950408,8.020415,3.944902,3.758153],[8.298175,-6.871978,-7.202230,6.209637,4.329192,2.010450,-9.791865,5.241270,-2.652172,0.565181],[0.940079,-8.099722,4.123279,9.737548,-1.127980,5.938769,9.375320,9.602203,-3.847835,4.697397],[3.699389,1.799112,-2.124294,4.377120,3.425080,2.008992,0.995632,-3.789980,0.806217,2.935810]]], dtype = "float64")#candidate|4976|(15, 5, 10)|const|float64
uop_4977 = relay.asin(const_4976.astype('float64')) # shape=(15, 5, 10)
func_2459_call = mod.get_global_var('func_2459')
func_2463_call = mutated_mod.get_global_var('func_2463')
var_4982 = relay.var("var_4982", dtype = "float32", shape = (1056,))#candidate|4982|(1056,)|var|float32
var_4983 = relay.var("var_4983", dtype = "int8", shape = (200, 2))#candidate|4983|(200, 2)|var|int8
call_4981 = relay.TupleGetItem(func_2459_call(relay.reshape(var_4982.astype('float32'), [11, 12, 8]), relay.reshape(var_4983.astype('int8'), [2, 200]), ), 2)
call_4984 = relay.TupleGetItem(func_2463_call(relay.reshape(var_4982.astype('float32'), [11, 12, 8]), relay.reshape(var_4983.astype('int8'), [2, 200]), ), 2)
output = relay.Tuple([uop_4977,call_4981,var_4982,var_4983,])
output2 = relay.Tuple([uop_4977,call_4984,var_4982,var_4983,])
func_4995 = relay.Function([var_4982,var_4983,], output)
mod['func_4995'] = func_4995
mod = relay.transform.InferType()(mod)
var_4996 = relay.var("var_4996", dtype = "float32", shape = (1056,))#candidate|4996|(1056,)|var|float32
var_4997 = relay.var("var_4997", dtype = "int8", shape = (200, 2))#candidate|4997|(200, 2)|var|int8
output = func_4995(var_4996,var_4997,)
func_4998 = relay.Function([var_4996,var_4997,], output)
mutated_mod['func_4998'] = func_4998
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5157 = relay.var("var_5157", dtype = "uint64", shape = (15, 7, 1))#candidate|5157|(15, 7, 1)|var|uint64
var_5158 = relay.var("var_5158", dtype = "uint64", shape = (15, 7, 4))#candidate|5158|(15, 7, 4)|var|uint64
bop_5159 = relay.bitwise_and(var_5157.astype('uint64'), var_5158.astype('uint64')) # shape=(15, 7, 4)
func_3609_call = mod.get_global_var('func_3609')
func_3613_call = mutated_mod.get_global_var('func_3613')
const_5168 = relay.const([-7.800745,2.768775,-6.148380,9.069670,-4.846221,4.137724,-5.610834,-9.342934,-1.317712,4.905675,5.210107,7.723600,-6.814591,5.028231,-3.251697,-0.558413,-0.056010,-1.422922,9.430980,-0.776582,1.124936,-6.610681,7.268122,-6.681475,-6.212521,-7.903767,3.378452,-6.966800], dtype = "float32")#candidate|5168|(28,)|const|float32
var_5169 = relay.var("var_5169", dtype = "int8", shape = (400,))#candidate|5169|(400,)|var|int8
const_5170 = relay.const([7.048122,0.788742,-8.600056,6.186999,4.292797,7.095665,-2.721892,-2.310219,1.007062,-8.100461,-0.277679,-9.079770,-0.777586,-2.305064,6.615840,-0.378817,0.073083,9.747783,2.693722,2.730324,6.311298,5.139219,-8.521162,-1.898604,-8.965306,-3.468252,8.968737,1.729703,-6.153529,-3.701910,1.743522,9.805515,-2.057014,-9.158232,6.905843,-3.493011,-1.059807,-0.545734,2.854585,-5.721896,3.177137,4.542070,2.049368,2.253935,-6.748048,-0.475941,-4.693951,-8.136015,-3.910541,-1.474632,-0.436134,-7.880452,-9.051834,-0.747395,2.043309,8.142621,6.123827,-8.111658,1.969917,6.813694,1.236574,1.442278,8.458085,-5.969548,4.383769,3.404092,1.100538,-3.646906,-6.481831,7.235641,-8.831388,-9.344045,7.298425,-5.706884,-3.054743,-0.539848,1.632614,9.038964,7.659300,2.766135,-2.007702,3.918196,-2.630773,0.229333,-8.381617,9.667013,5.063946,-1.114956,-7.479634,9.303925,-5.925987,-5.231200,-9.152761,-7.806190,9.346277,-4.003395,-2.589862,1.438957,0.855756,9.654440,6.890138,-3.180247,7.014413,-2.597294,-5.423849,-7.710428,6.763669,-9.159767,8.264042,-3.629762,-0.410881,-3.035259,-0.646626,-7.102783,7.100310,4.504170,-2.105060,7.566789,-7.714259,2.847218,-0.503321,-1.033945,-1.269441,0.013287,3.890921,-9.509867,-6.292392,5.514727,-7.250084,-4.473417,1.165524,-2.772861,-1.419626,8.019603,1.473647,5.675999,3.447383,-8.256359,-5.449817,4.913059,7.680784,-7.751408,-3.116385,-8.382215,1.671419,-8.647037,-6.442433,-1.297498,7.054064,2.421460,-9.446592,-3.814298,-1.792716,8.764097,-7.583867,9.849450,-8.671562,0.491878,3.015616,5.326557,-7.591283,4.642554,-8.114964,7.082733,-2.083749,9.892519,4.080396,-5.311699,-7.593158,0.744035,-9.164190,-2.161064,-2.825033,3.293277,0.121402,-9.282216,5.132282,-1.010440,3.369235,9.120997,-8.174548,-1.948276,-2.290607,-8.497228,-3.162715,6.293158,-5.760409,7.805418,6.427826,-1.372143,7.002137,-6.159315,-8.749326,-5.080440,7.044498,6.782667,-1.815115,7.199426,-6.020252,9.376989,0.272836,7.452432,-4.367250,-2.034774,-7.441347,-0.007484,9.394520,-4.397257,5.241377,0.858671,-4.953549,2.592542,-8.315210,9.674894,-8.930881,2.399389,9.786912,2.393101,7.408355,4.824617,-0.613546,7.575294,-7.315435,6.750650,9.367759,-0.019975,-1.125560,-7.273252,0.812665,8.245302,4.168901,3.366879,-7.908077,-8.037073,5.041122,0.570105,-8.680621,9.127145,-4.706326,-5.813871,-3.266113,8.211952,-7.172527,5.441042,7.661909,3.402968,-2.448954,4.079692,7.884990,-9.365569,0.962336,-0.196867,0.366568,-2.489300,6.898395,1.754608,-0.330516,-9.138182,-5.010270,-4.215899,-9.302029,-7.427455,-5.255024,2.390091,-4.427723,-9.862416,8.335269,9.685916,9.129868,-7.238488,-7.358475,-9.558152,-1.577435,-1.529809,-6.166493,-0.385809,-5.729563,3.288799,-6.502369,8.334425,2.436777,-7.854612,-2.714811,0.938667,-7.994203,-7.730977,9.833261,2.256821,0.803595,-4.288890,-0.948657,7.637265,-9.675571,0.275902,8.418499,0.024946,5.067751,-5.021597,0.704923,8.995250,6.389475,-3.029199,-0.015516,4.663292,7.854212,6.786852,-6.755819,6.114595,-5.237252,-1.245810,3.781723,-2.986945,9.929145,-5.739886,-7.318922,-0.668089,-6.979081,-9.058802,-3.826348,-9.146788,6.369142,7.352472,-8.181114,-8.181276,-7.270416,1.799531,-6.750284,-4.263014,-3.620068,-6.094974,-0.066045,-5.999209,-9.650194,1.053811,-3.026391,-3.924327,4.854928,-8.768938,-3.914179,-6.312959,3.134129,-1.504392,8.661370,9.296959,-7.651092,-0.456774,0.745388,4.749036,1.003987,-4.945549,-1.608023,-5.261302,1.426782,-2.095909,8.427334,-3.988107,-0.241739,3.725288,4.597661,4.838684], dtype = "float64")#candidate|5170|(360,)|const|float64
call_5167 = relay.TupleGetItem(func_3609_call(relay.reshape(const_5168.astype('float32'), [4, 7, 1]), relay.reshape(var_5169.astype('int8'), [400,]), relay.reshape(const_5170.astype('float64'), [360,]), ), 3)
call_5171 = relay.TupleGetItem(func_3613_call(relay.reshape(const_5168.astype('float32'), [4, 7, 1]), relay.reshape(var_5169.astype('int8'), [400,]), relay.reshape(const_5170.astype('float64'), [360,]), ), 3)
output = relay.Tuple([bop_5159,call_5167,const_5168,var_5169,const_5170,])
output2 = relay.Tuple([bop_5159,call_5171,const_5168,var_5169,const_5170,])
func_5189 = relay.Function([var_5157,var_5158,var_5169,], output)
mod['func_5189'] = func_5189
mod = relay.transform.InferType()(mod)
mutated_mod['func_5189'] = func_5189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5189_call = mutated_mod.get_global_var('func_5189')
var_5191 = relay.var("var_5191", dtype = "uint64", shape = (15, 7, 1))#candidate|5191|(15, 7, 1)|var|uint64
var_5192 = relay.var("var_5192", dtype = "uint64", shape = (15, 7, 4))#candidate|5192|(15, 7, 4)|var|uint64
var_5193 = relay.var("var_5193", dtype = "int8", shape = (400,))#candidate|5193|(400,)|var|int8
call_5190 = func_5189_call(var_5191,var_5192,var_5193,)
output = call_5190
func_5194 = relay.Function([var_5191,var_5192,var_5193,], output)
mutated_mod['func_5194'] = func_5194
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5351 = relay.var("var_5351", dtype = "float32", shape = (5, 1, 16))#candidate|5351|(5, 1, 16)|var|float32
var_5352 = relay.var("var_5352", dtype = "float32", shape = (5, 13, 16))#candidate|5352|(5, 13, 16)|var|float32
bop_5353 = relay.floor_divide(var_5351.astype('float32'), var_5352.astype('float32')) # shape=(5, 13, 16)
output = relay.Tuple([bop_5353,])
output2 = relay.Tuple([bop_5353,])
func_5365 = relay.Function([var_5351,var_5352,], output)
mod['func_5365'] = func_5365
mod = relay.transform.InferType()(mod)
mutated_mod['func_5365'] = func_5365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5365_call = mutated_mod.get_global_var('func_5365')
var_5367 = relay.var("var_5367", dtype = "float32", shape = (5, 1, 16))#candidate|5367|(5, 1, 16)|var|float32
var_5368 = relay.var("var_5368", dtype = "float32", shape = (5, 13, 16))#candidate|5368|(5, 13, 16)|var|float32
call_5366 = func_5365_call(var_5367,var_5368,)
output = call_5366
func_5369 = relay.Function([var_5367,var_5368,], output)
mutated_mod['func_5369'] = func_5369
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5475 = relay.const(-5.939205, dtype = "float64")#candidate|5475|()|const|float64
var_5476 = relay.var("var_5476", dtype = "float64", shape = (11, 1, 8))#candidate|5476|(11, 1, 8)|var|float64
bop_5477 = relay.divide(const_5475.astype('float64'), var_5476.astype('float64')) # shape=(11, 1, 8)
output = relay.Tuple([bop_5477,])
output2 = relay.Tuple([bop_5477,])
func_5480 = relay.Function([var_5476,], output)
mod['func_5480'] = func_5480
mod = relay.transform.InferType()(mod)
mutated_mod['func_5480'] = func_5480
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5481 = relay.var("var_5481", dtype = "float64", shape = (11, 1, 8))#candidate|5481|(11, 1, 8)|var|float64
func_5480_call = mutated_mod.get_global_var('func_5480')
call_5482 = func_5480_call(var_5481)
output = call_5482
func_5483 = relay.Function([var_5481], output)
mutated_mod['func_5483'] = func_5483
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5687 = relay.var("var_5687", dtype = "uint64", shape = (16, 12, 2))#candidate|5687|(16, 12, 2)|var|uint64
var_5688 = relay.var("var_5688", dtype = "uint64", shape = (16, 12, 2))#candidate|5688|(16, 12, 2)|var|uint64
bop_5689 = relay.minimum(var_5687.astype('uint64'), relay.reshape(var_5688.astype('uint64'), relay.shape_of(var_5687))) # shape=(16, 12, 2)
output = relay.Tuple([bop_5689,])
output2 = relay.Tuple([bop_5689,])
func_5714 = relay.Function([var_5687,var_5688,], output)
mod['func_5714'] = func_5714
mod = relay.transform.InferType()(mod)
mutated_mod['func_5714'] = func_5714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5714_call = mutated_mod.get_global_var('func_5714')
var_5716 = relay.var("var_5716", dtype = "uint64", shape = (16, 12, 2))#candidate|5716|(16, 12, 2)|var|uint64
var_5717 = relay.var("var_5717", dtype = "uint64", shape = (16, 12, 2))#candidate|5717|(16, 12, 2)|var|uint64
call_5715 = func_5714_call(var_5716,var_5717,)
output = call_5715
func_5718 = relay.Function([var_5716,var_5717,], output)
mutated_mod['func_5718'] = func_5718
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6928 = relay.var("var_6928", dtype = "uint64", shape = ())#candidate|6928|()|var|uint64
const_6929 = relay.const([[[4,6,7,6,4,-9,5,8,-9],[9,6,8,-5,6,-6,-4,3,8],[-3,-1,6,-7,-9,6,-10,3,-4],[9,8,7,-8,-6,-2,-8,3,-4],[-9,-1,4,8,4,-1,2,8,-7],[6,8,4,-8,-7,-4,-9,-9,-3],[8,8,-3,-10,3,7,-5,-5,2],[-4,-4,1,-1,-10,1,-5,5,2],[-6,-2,-2,-9,9,1,3,-4,-6]],[[4,-5,8,-8,-4,-6,-10,1,-1],[3,2,-4,-5,-8,-4,4,-10,4],[5,-8,-4,7,9,8,-1,-10,2],[5,10,8,6,4,1,3,-2,6],[7,2,9,8,2,4,3,-3,3],[-7,-5,6,-10,3,1,-8,3,8],[1,-4,5,8,9,9,5,4,8],[8,-2,10,10,-6,7,7,-10,-2],[10,1,3,5,7,-10,1,2,8]],[[-9,-9,1,6,7,-10,-1,1,2],[-1,2,8,4,9,-5,8,-5,-8],[5,4,-2,-3,5,-4,-7,-3,4],[2,-3,3,-6,-1,-10,-7,2,8],[-6,-4,4,7,4,2,-3,5,-3],[-3,9,-10,-2,-5,10,6,-6,-6],[-10,-4,7,2,2,8,-6,-6,7],[-4,-5,-3,4,-1,-2,3,-2,-8],[-4,-10,8,2,3,8,4,-10,3]],[[-3,7,-9,1,-2,-10,-3,-1,-1],[-3,2,10,7,-2,-4,2,-5,-3],[7,8,-8,-2,-3,4,-1,-8,6],[-2,4,9,2,7,-2,2,6,-1],[-6,-3,-5,4,7,-8,10,5,-6],[1,-8,5,-1,-1,7,-1,-4,-4],[5,-4,10,5,-6,3,5,-1,-4],[-4,3,6,-7,5,-1,-2,-6,9],[2,5,4,-9,-2,3,7,5,-3]],[[2,-5,-3,5,-7,4,7,1,2],[-8,4,1,7,5,10,10,7,-10],[-6,-6,3,8,-5,-2,4,-10,-9],[6,-3,-6,8,-6,5,-7,-10,-3],[-4,5,-2,8,6,-4,3,8,4],[8,4,-9,1,-2,-9,-5,8,2],[-6,7,2,-6,-3,10,2,9,3],[5,-2,-4,3,-3,1,2,8,9],[1,5,-4,3,-3,2,-10,10,5]],[[6,3,-9,-7,-2,-8,-4,-10,5],[4,-8,2,-4,8,-8,-8,-8,-4],[-5,-8,5,-2,9,10,6,3,2],[5,-10,8,3,-2,6,10,6,-2],[5,10,8,7,-3,-7,6,2,4],[-5,7,7,-5,7,-4,2,5,-3],[-1,6,-1,-2,-6,4,-4,6,-8],[5,10,5,-2,-3,-1,1,-7,8],[3,-4,4,-10,6,-10,-9,-8,-10]],[[4,9,1,6,-2,3,10,1,7],[-1,-6,3,3,-2,2,3,-3,3],[-2,10,-1,-5,-8,-4,-2,2,-6],[-3,-8,8,-6,-5,-3,5,-7,-9],[-7,-9,1,-10,10,10,-6,5,-9],[-3,3,-5,6,2,-6,-4,-7,8],[10,-2,1,-8,-8,-10,-5,-1,-10],[-7,-8,-4,1,-7,-2,-8,-4,-3],[-6,-1,-4,-1,-3,7,1,-2,2]],[[3,-3,-4,7,9,4,-4,5,-5],[6,5,-8,-7,-6,-8,-6,-4,3],[-5,-9,10,8,-8,-1,1,-8,-9],[1,-7,-6,7,-6,-10,-8,7,-1],[3,-3,2,3,-3,10,-9,-7,-9],[-1,-4,5,6,-1,3,4,-1,8],[-10,7,-3,-5,-9,1,7,4,9],[-7,5,1,-10,-3,-1,4,-1,7],[1,8,-6,10,9,7,5,6,-2]],[[7,10,-2,-2,-4,-9,-9,-3,-10],[4,-4,-6,-4,5,-1,6,8,2],[7,-6,7,2,-6,2,3,10,2],[10,-4,-5,1,-7,-7,7,-2,-7],[-8,6,-3,4,6,-3,7,-4,8],[8,-1,8,-3,-2,-8,4,7,4],[10,-3,-1,7,-2,10,10,-9,4],[-7,-2,2,7,8,9,1,9,6],[-4,7,-3,6,-5,-4,-2,-6,9]],[[6,5,1,5,3,-8,3,1,-8],[5,8,8,-8,5,7,-3,2,-7],[2,-5,-6,-6,-6,9,3,-7,5],[-5,10,-9,3,-9,10,10,-8,8],[9,-4,-1,9,8,-5,3,-6,-9],[9,-6,9,-6,7,5,9,9,8],[-6,-6,-5,7,-2,-3,9,4,-2],[-1,-3,10,4,-1,3,-7,-8,-3],[-3,-1,7,-7,-5,4,-4,-4,3]],[[-5,5,2,-5,7,9,6,-2,8],[-10,8,5,-5,-4,4,-2,4,4],[5,4,-5,-2,6,10,5,-8,7],[2,-2,10,-8,6,-2,-10,2,-9],[-5,-9,-6,7,-1,4,-8,-2,7],[-6,-6,6,3,-7,8,-3,8,5],[1,7,7,-1,-10,-5,5,-1,-4],[-1,3,-3,5,-5,5,8,4,-9],[-9,-7,-3,5,4,9,2,-8,-9]]], dtype = "uint64")#candidate|6929|(11, 9, 9)|const|uint64
bop_6930 = relay.bitwise_xor(var_6928.astype('uint64'), const_6929.astype('uint64')) # shape=(11, 9, 9)
output = bop_6930
output2 = bop_6930
func_6934 = relay.Function([var_6928,], output)
mod['func_6934'] = func_6934
mod = relay.transform.InferType()(mod)
mutated_mod['func_6934'] = func_6934
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6935 = relay.var("var_6935", dtype = "uint64", shape = ())#candidate|6935|()|var|uint64
func_6934_call = mutated_mod.get_global_var('func_6934')
call_6936 = func_6934_call(var_6935)
output = call_6936
func_6937 = relay.Function([var_6935], output)
mutated_mod['func_6937'] = func_6937
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7040 = relay.const(-9.917170, dtype = "float32")#candidate|7040|()|const|float32
const_7041 = relay.const([[[3.883834,2.271554,-7.697535,5.810970],[-1.436456,-7.105478,7.735581,1.351020],[-4.681201,9.583683,5.215845,7.899723],[-9.206481,5.061690,1.353779,7.713767],[-8.325230,8.279804,1.765651,-5.429809],[6.889548,6.939837,0.050531,8.863251],[9.775418,-9.513132,5.916313,-9.725352],[-7.935535,-7.589839,-9.653206,-3.629953],[5.359906,5.261910,0.540533,-1.580435],[-2.680896,6.938286,8.148147,0.788129],[9.269009,4.982828,5.204116,7.730248],[-9.367375,2.557280,9.051101,8.169190],[6.611023,-0.349484,-1.706358,-5.012594],[-6.810003,7.072395,-3.825908,5.678402],[-5.321658,-5.807913,-8.080182,5.364001],[-6.513313,8.464212,3.961696,-2.551417]],[[4.425731,4.082958,8.423233,-6.199063],[7.566038,0.217779,9.412217,6.093646],[-3.627671,3.468490,9.152592,1.923388],[-7.402545,-8.870007,3.083415,-9.703054],[1.044806,-2.598234,0.573308,-0.039336],[-4.530637,5.751043,-3.079117,-7.395737],[-3.781911,3.807588,-7.578061,2.562125],[4.807989,-9.151893,-6.615083,0.591894],[-6.149610,2.191784,8.506793,-8.056193],[0.507079,5.627155,8.362523,-8.072024],[5.212638,1.243163,-6.722206,-8.377016],[-1.419945,-9.987723,-5.702558,-2.862165],[-9.046565,-1.263207,-9.216444,1.196291],[-2.663425,7.900211,-0.488228,-2.135393],[-2.068014,-8.237437,-9.343366,-7.623534],[5.629761,-8.996596,9.876221,8.088283]],[[-4.398066,9.420245,-6.821160,-0.158819],[3.869585,-9.923341,-9.852733,1.709950],[2.261681,3.886855,5.103253,-5.741032],[3.308130,-7.660901,-9.743369,-4.224710],[0.298986,5.424174,-6.170753,6.144324],[5.030742,-1.994465,-3.314064,-3.637323],[9.786893,6.305875,-1.499618,4.245013],[-5.399258,-4.213242,1.238509,1.394223],[-8.658314,4.753889,3.292697,-7.120370],[-1.882188,-9.158872,-9.180721,-9.045589],[-2.757526,-1.610880,-9.168421,-3.266553],[7.003726,0.441080,8.024831,-4.516328],[6.912474,7.393614,-9.284901,4.257671],[-9.329861,6.525099,4.444275,-1.585952],[6.554059,-1.576945,-4.039343,7.473579],[3.845373,8.084787,0.485463,-7.624768]]], dtype = "float32")#candidate|7041|(3, 16, 4)|const|float32
bop_7042 = relay.power(const_7040.astype('float32'), const_7041.astype('float32')) # shape=(3, 16, 4)
func_4788_call = mod.get_global_var('func_4788')
func_4791_call = mutated_mod.get_global_var('func_4791')
const_7052 = relay.const([2.754772,3.038489,-0.905710,-0.749475,-0.931314,-4.982286,2.421431,3.682531,-3.876534,-7.139635,-1.328193,-6.115028,7.336167,9.179551,-3.879227,0.231920,8.402455,6.774994,-7.247895,7.588163,-7.321300,-6.002213,8.483493,-1.635253,7.324216,4.417979,-2.276869,6.977302,-9.673996,9.138706,9.765826,6.569595,0.150622,-3.716406,-7.147470,-2.672813,8.069887,-4.754874,-5.742553,-9.104941,3.087903,2.481018,7.961489,1.492072,-0.461567,2.745101,5.008430,-1.396187,3.621641,-8.741187,-7.650889,-7.990344,-8.027691,-2.674601,6.000606,-6.919122,-4.612658,0.342827,-7.177845,-4.331694,6.230319,7.359988,-4.742616,5.916421,-1.093690,2.160157,-8.091225,2.561408,4.237385,7.459343,-6.634967,3.082248,-4.828840,5.490744,-2.188810,3.018524,9.658913,-6.302058,-5.604156,4.792789,-6.558324,9.125759,-4.195408,7.176438,-7.787242,0.023254,-5.500521,6.604839,7.831002,6.810507,-9.887423,0.989274,8.620150,6.823757,3.891024,7.050379,-8.211599,-7.104471,2.528901,-8.365205,-3.333976,-2.795193,-1.326661,2.796090,-1.932527,9.438277,8.239042,-0.570825,5.638014,-6.324646,-4.636005,-4.748959,-9.237055,-3.005073,-0.460014,1.846669,-3.199338,8.275289,-1.334049,-8.795319,0.930994,0.388973,-7.301933,-0.177561,-4.285252,-0.321306,-2.096997,0.757138,2.764938,-2.491004,-8.398119,-7.176120,6.255394,0.822903,1.683057,0.489161,-5.683275,5.165367,-4.409805,-4.233341,4.533475,-5.138714,7.749742,-5.651057,8.132866,-5.200272,7.177638,-5.348822,-4.416031,-3.466318,9.135954,-5.473810,-4.034062,-2.318009,3.969847,5.806623,1.851643,-4.415381,6.621135,7.668735,7.201917,-3.010202,-0.472265,-0.965447,4.128700,-8.759533,-9.367080,-4.992005,0.625021,6.885152,6.773544,0.553715,-1.655631,5.046642,-1.259620,-0.473871,-2.469346,-4.693637,0.449880,7.360671,7.113153,3.331173,-0.968918,7.745130,-3.111750,7.614020,7.847985,-0.122880,-8.274163,-6.962778,-0.004362,1.203163,7.620244,-9.629734,-4.541051,7.604381,9.783877,4.690229,-8.986945,7.019750,6.243493,-2.811598,6.516556,3.457769,-2.686189,9.844927,-4.112794,1.703923,-6.920418,1.663415,4.458094,3.696904,0.987310,0.041982,5.530324,0.718385,3.440303,8.600773,-3.187156,-3.619712,-6.998586,-0.957336,-3.113935,1.088573,1.011281,8.526214,7.097836,0.825695,1.568312,8.660068,-9.867734,-9.759857,-1.581783,-9.416402,-8.377205,-1.535805,-8.016166,3.384309,-2.079039,-4.538272,5.956282,5.295665,-0.401045,-1.930345,7.197648,-7.435431,-4.920629,8.062102,-7.960289,9.117992,-8.689209,-8.010821,-2.659555,-3.315539,-7.780015,-2.748780,-3.152601,-7.510193,6.340650,6.529835,-7.107349,-5.245837,-6.693867,-7.923501,7.574459,0.657183,6.458420,7.861509,1.988950,-7.673571,-2.565911,-7.971955,-7.409132,8.238633,6.390941,-4.499555,-4.750748,-0.300228,-5.316021,2.462686,-7.089025,-9.336464,-6.032518,-7.054870,7.079528,9.748084,1.455140,-4.612508,5.172534,3.765247,-8.250314,-7.359403,-6.897085,8.065341,8.771522,4.097098,8.995135,1.482008,7.289606,-8.816107,2.933377,-1.148428,5.352511,-3.413500,-1.905530,2.418025,-4.127072,0.614564,-7.393828,7.596505,0.699274,0.581591,-0.689742,8.881459,-1.793760,-6.608100,8.415389,9.588513,-2.928843,0.517408,9.975525,4.331283,1.157846,1.923803,-8.192132,9.019049,0.366423,-9.928149,-7.947524,6.337735,5.470762,-4.927242,-4.231111,8.093033,0.363911,3.587305,2.133742,-1.554014,2.806304,-4.246455,3.872767,9.968392,8.717850,-3.058986,6.018643,-1.829102,-1.692281,-4.843564,-5.536017,4.581883,-9.965099,3.983175,2.260424,-1.491705,3.003992,-0.797138,2.847199,7.962696,-1.036098,-9.336477,5.393913,-7.109941,8.791320,-8.719410,0.806027,5.484778,-9.416584,6.601605,6.048859,-0.616581,3.622217,2.325066,-5.914984,8.765850,-7.765353,4.929879,-2.383065,0.133480,-6.578443,-2.849119,8.271745,5.513598,-5.576119,-3.450659,2.826916,-2.474628,6.242792,0.901011,-9.412106,-7.140448,-7.952805,-3.339176,-6.096902,-8.413050,2.873920,-3.118209,-5.133372,-6.051929,-3.807030,-2.772878,5.515939,-0.029464,-2.740426,-2.406282,-1.866588,-9.361611,-1.438451,-6.365280,-2.205109,5.563456,1.476366,9.650567,-1.462115,-4.837480,-6.148110,-0.045532,4.013788,-6.395133,-8.542808,-1.785652,-7.177220,2.893422,7.582046,6.344311,-9.939467,0.173048,-7.059036,0.134699,-3.603260,5.635071,6.467387,-9.834232,0.671827,-3.284720,7.685591,-6.056766,6.603678,5.808759,3.837122,7.509732,0.098470,4.399535,5.282331,-4.052791,-4.633207,-9.181051,8.724599,-9.021664,0.263126,-0.684940,7.262545,-4.973464,-4.481875,1.292962,-8.338343,4.106624,8.651842,5.612338,-1.948209,-4.431089,-8.469662,-1.794668,6.897372,-6.115901,9.392593,-0.356858,2.295062,-4.551986,-7.590304,-8.527528,-6.357793,-4.509395,-3.294941,-6.189027,-1.860804,-5.086924,2.448211,-4.263074,1.797881,0.745362,-6.724436,-6.496619,6.209836,9.320959,-4.924617,-4.631200,-5.397019,3.359743,8.731077,0.942086,-6.363391,-1.725312,-5.273800,8.049457,1.622096,-8.499471,-1.366304,9.840975,3.293168,4.046748,-5.606757,-4.132345,-5.470721,-5.240734,2.351742,3.481418,4.387086,1.188162,6.500865,7.858922,-1.996755,-1.892378,-1.874169,-8.209159,-8.065628,-2.970491,7.744355,9.376199,-4.826964,0.522694,9.770035,0.954953,-6.393847,-4.485258,9.887255,-7.151807,-7.191312,-3.366329,5.728628,-9.997395,-8.717786,-1.606493,-2.159159,-3.730044,9.891588,-0.930556,-6.745785,0.335931,5.631112,-6.865052,-3.519750,-8.844191,4.592307,8.147123,4.970861,2.072054,-0.758354,1.398936,3.133129,7.080305,-6.141129,-6.767454,-3.389212,8.441609,3.801427,-8.707375,3.643394,-7.641570,-3.389554,4.331286,-4.668638,6.450954,-0.833839,7.349728,-1.613253,0.449772,-0.920249,-8.682743,7.270715,-0.126523,3.353082,-3.333030,3.813665,-1.545787,9.951750,4.254245,-8.518990,-1.558398,-4.240430,-4.717723,4.048578,5.693811,1.565462,-2.720810,5.501699,-2.609378,2.582940,7.543193,6.512991,-2.054019,1.414376,-7.702188,0.201676,4.948731,-4.002711,-7.280837,5.496688,-6.479179,8.421818,6.604644,1.651431,-3.239470,3.453051,-2.287520,4.576591,9.284403,-6.269955,-2.347334,-1.776809,1.386790,0.063079,-8.541478,9.781762,-1.557882,1.976362,-4.141733,2.343816,-3.943113,-7.004505,6.883018,0.887519,1.243940,0.246610,5.831920,5.821710,-0.586020,8.406970,4.469842,1.410609,4.719038,0.478974,-3.461467,-2.994867,6.135452,8.899805,-2.953395,6.604351,-7.666969,3.032569,0.526352,0.490329,-6.725580,-3.005072,8.900330,7.158114,3.840054,-7.570205,2.618735,-2.315155,-1.623464,8.126491,-9.716633,-7.111759,8.205097,8.217830,-7.246523,1.249240,2.389444,-6.639436,2.504835,5.323382,-3.746445,-3.293605,1.844420,8.340580,-3.145281,-8.284346,5.071010,-6.237172,4.362748,2.499588,-4.196762,-5.512420,0.063510,-9.425289,-8.426838,1.432750,-6.977277,-8.056609,-7.859282,7.583710,-5.922929,2.480328,-7.674329,8.583238,7.564847,8.530756,9.276789,4.970459,-3.649009,3.778637,-1.544726,9.687584,4.087325,-6.028626,8.465668,-4.891279,6.042772,-8.451499,9.426437,3.838038,-9.168908,-2.626556,-1.981755,-8.886655,-1.587601,7.506314,-0.599130,4.737399,-8.659205,3.766532,7.467569,-0.527300,-6.685146,-0.618949,-2.668696,-0.245698,-3.480693,-9.573721,0.240039,4.930442,-6.933682,-0.961023,9.189663,-1.243778,2.783328,-5.287104,-9.786442,3.398754,1.236710,-5.929925,-3.506540,-2.163131,-6.964338,4.729716,-9.199726,7.259903,-5.618732,4.938101,4.160580,0.176680,-0.903494,8.808869,-5.123840,5.226895,-3.360480,6.128902,-2.268579,7.224517,-0.405746,-3.859748,6.472168,-5.942205,7.983222,8.198750,2.105756,3.257345,-7.732896,-0.249709,-7.570225,-9.235640,-3.286587,1.849280,-4.966339,1.582563,4.453868,2.671261,6.066443,-7.662509,5.298349,2.653500,8.227576,-4.762950,8.750558,-7.179462,-8.028372,-5.356700,8.711588,-7.509382,-0.104656,-8.338501,3.559817,-7.647069,6.602802,-3.615782,-0.052839,-4.157755,-8.079755,-4.373432,9.969849,3.464474,2.894520,-4.237851,5.098131,-7.978643,-4.978378,-1.147084,-3.903139,-6.360965,7.242745,4.883329,-6.868674,7.516025,-2.868780,-7.688421,5.841891,-5.693651,5.645636,7.336546,3.596448,-1.254756,-7.224155,5.475988,9.495135,2.628606,-1.196676,6.487573,-4.425422,-2.068002,-0.635656,-5.378415,-9.698025,-4.643608,-9.741281,3.396349,-6.473092,2.910611,-3.798022,2.890093,8.927575,-5.067344,3.163993,-0.543845,0.392361,9.738735,-0.205548,9.090394,-9.481608,-1.176531,4.744315,-0.587346,-7.592952,-7.605778,-7.507493,-4.981111,-2.059675,-7.032144,-2.264800,1.013399,5.949974,1.867938,5.934542,-4.361246,4.436545,-7.068150,-8.318198,-3.157404,-3.375600,0.866786,-7.746772,-1.762209,8.956636,0.560089,-6.918988,4.324030,1.415998,0.339471,9.846611,-0.764764,-4.475562,6.752312,5.016919,1.487710,-4.875705,-2.070331,6.146842,-5.180191,1.823090,-0.541637,-3.543862,5.127273,3.168420,-7.305930,8.902792,3.614096,8.165036,-6.854028,-4.654018,2.943980,5.676973,8.391540,-4.400063,0.425947,2.937107,3.745935,3.982466,5.930348,0.212749,4.297466,-0.391013,8.542696,0.994697,-8.494282,9.828248,-2.060356,-3.826440,7.860722,3.952365,-1.515870,9.532444,2.739828,5.655791,7.833002,-7.877193,2.199645,5.805025,5.659810,-9.373231,-3.082950,2.600655,-9.718233,-7.180399,-8.081635,-7.919219,3.476516,8.739645,-2.082209,1.941985,6.907077,-4.480805,2.362544,4.608219,-8.905189,-1.992271,-8.168438,-0.860333,4.296843,-8.210865,-0.189830,8.546891,-2.937297,-5.674492,9.352997,-2.571398,-6.117269,5.017006,-4.529236,-4.897675,-3.067295,3.979543,-3.756501,-8.145269,9.365874,7.898598,8.164297,4.373917,1.817410,5.939866,2.480911,-6.346096,-8.347237,5.107878,-5.376977,-8.080031,3.398542,7.362991,7.705728,4.708732,3.079405,-8.626018,1.052436,-0.864695,-7.086249,1.096535,-1.796709,8.025136,5.548490,2.950888,-0.515617,8.852751,-8.684357,8.420515,-8.370760,-5.638139,0.579242,-6.584363,-9.488220,-6.199458,-1.334174,-4.295802,4.444601,-3.411784,7.319020,-8.392282,3.844844,5.970115,5.116631,1.634502,7.115559,1.131770,-6.249518,-1.254873,-0.257221,4.595683,-5.899077,6.730489,8.449118,0.916338,-0.808192,-9.641785,8.919231,1.145937,-6.149087,-1.284336,-6.069477,5.624510,9.892386,9.955329,-8.591826,7.272684,-0.974943,-5.772412,-7.315988,-8.216246,3.208104,-1.510254,-7.889186,0.154119,-0.315012,6.906861,0.727066,3.598344,-2.841476,5.464314,-5.685695,2.930731,3.077082,-8.283844,7.865811,-0.091774,-0.868271,0.572836,-1.375395,6.591816,-6.156924,7.963580,3.197320,7.441981,5.500757,-9.624541,7.053857,2.597225,7.618121,-3.060598,-7.013195,-9.135886], dtype = "float32")#candidate|7052|(1056,)|const|float32
call_7051 = relay.TupleGetItem(func_4788_call(relay.reshape(const_7052.astype('float32'), [264, 4]), relay.reshape(const_7040.astype('int32'), []), ), 5)
call_7053 = relay.TupleGetItem(func_4791_call(relay.reshape(const_7052.astype('float32'), [264, 4]), relay.reshape(const_7040.astype('int32'), []), ), 5)
output = relay.Tuple([bop_7042,call_7051,const_7052,])
output2 = relay.Tuple([bop_7042,call_7053,const_7052,])
func_7067 = relay.Function([], output)
mod['func_7067'] = func_7067
mod = relay.transform.InferType()(mod)
output = func_7067()
func_7068 = relay.Function([], output)
mutated_mod['func_7068'] = func_7068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7067_call = mod.get_global_var('func_7067')
func_7068_call = mutated_mod.get_global_var('func_7068')
call_7089 = relay.TupleGetItem(func_7067_call(), 0)
call_7090 = relay.TupleGetItem(func_7068_call(), 0)
output = relay.Tuple([call_7089,])
output2 = relay.Tuple([call_7090,])
func_7093 = relay.Function([], output)
mod['func_7093'] = func_7093
mod = relay.transform.InferType()(mod)
mutated_mod['func_7093'] = func_7093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7093_call = mutated_mod.get_global_var('func_7093')
call_7094 = func_7093_call()
output = call_7094
func_7095 = relay.Function([], output)
mutated_mod['func_7095'] = func_7095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7093_call = mod.get_global_var('func_7093')
func_7095_call = mutated_mod.get_global_var('func_7095')
call_7111 = relay.TupleGetItem(func_7093_call(), 0)
call_7112 = relay.TupleGetItem(func_7095_call(), 0)
output = relay.Tuple([call_7111,])
output2 = relay.Tuple([call_7112,])
func_7118 = relay.Function([], output)
mod['func_7118'] = func_7118
mod = relay.transform.InferType()(mod)
output = func_7118()
func_7119 = relay.Function([], output)
mutated_mod['func_7119'] = func_7119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7067_call = mod.get_global_var('func_7067')
func_7068_call = mutated_mod.get_global_var('func_7068')
call_7175 = relay.TupleGetItem(func_7067_call(), 2)
call_7176 = relay.TupleGetItem(func_7068_call(), 2)
func_7093_call = mod.get_global_var('func_7093')
func_7095_call = mutated_mod.get_global_var('func_7095')
call_7177 = relay.TupleGetItem(func_7093_call(), 0)
call_7178 = relay.TupleGetItem(func_7095_call(), 0)
output = relay.Tuple([call_7175,call_7177,])
output2 = relay.Tuple([call_7176,call_7178,])
func_7184 = relay.Function([], output)
mod['func_7184'] = func_7184
mod = relay.transform.InferType()(mod)
output = func_7184()
func_7185 = relay.Function([], output)
mutated_mod['func_7185'] = func_7185
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7283 = relay.var("var_7283", dtype = "bool", shape = (13, 11, 4))#candidate|7283|(13, 11, 4)|var|bool
const_7284 = relay.const([[[False,False,False,False],[True,False,False,True],[True,False,True,True],[True,True,True,True],[False,False,False,False],[False,True,False,True],[False,True,False,False],[True,False,False,True],[False,False,False,True],[True,False,False,False],[True,True,True,False]],[[True,False,True,True],[True,True,True,True],[False,False,False,False],[True,False,False,False],[False,False,False,True],[True,False,False,False],[False,True,False,True],[False,True,True,True],[False,False,True,True],[True,False,False,True],[False,False,True,False]],[[True,True,False,True],[False,False,False,True],[False,True,True,True],[False,True,False,False],[False,False,False,False],[False,True,True,False],[True,True,True,False],[False,True,False,True],[False,False,False,False],[True,True,True,True],[False,False,False,False]],[[True,True,False,False],[True,False,False,True],[True,False,True,True],[True,True,True,True],[False,True,False,False],[True,True,True,False],[False,False,False,False],[True,False,False,False],[True,False,False,False],[True,True,False,False],[True,True,True,False]],[[False,False,False,False],[True,False,True,True],[True,False,True,True],[False,True,True,True],[False,True,False,True],[False,False,False,True],[True,False,True,False],[True,True,True,False],[True,True,False,True],[True,True,False,True],[True,True,False,False]],[[True,False,True,True],[True,True,False,True],[False,False,False,True],[False,False,False,False],[True,True,False,False],[False,False,True,True],[False,True,False,True],[True,True,True,False],[True,True,True,False],[False,True,False,False],[False,False,False,False]],[[False,False,False,True],[True,False,False,True],[True,True,False,True],[True,True,False,False],[False,False,False,True],[True,True,True,True],[False,True,False,False],[False,False,True,False],[False,True,False,True],[False,False,False,True],[True,False,False,False]],[[True,False,False,True],[False,False,False,True],[True,False,True,False],[True,True,False,True],[True,True,False,True],[True,False,False,True],[False,False,False,True],[False,False,False,False],[False,False,True,True],[True,False,False,False],[False,True,False,True]],[[False,True,True,True],[False,True,False,True],[True,False,False,True],[False,False,False,True],[False,False,True,True],[True,False,False,False],[False,False,False,False],[False,True,False,False],[False,True,False,False],[False,False,False,True],[True,False,False,True]],[[True,False,False,True],[True,True,False,False],[False,False,False,False],[True,False,True,True],[True,True,True,True],[False,True,False,False],[False,False,True,True],[False,True,False,True],[True,True,True,False],[False,True,False,False],[False,False,True,True]],[[True,False,False,False],[True,True,False,True],[True,False,True,True],[False,False,False,False],[True,False,False,False],[True,True,True,False],[False,True,False,False],[False,True,True,True],[True,True,True,False],[True,True,True,False],[True,False,True,True]],[[False,True,False,True],[True,False,False,True],[True,True,True,True],[False,True,False,False],[True,True,True,False],[True,True,True,False],[False,False,False,False],[True,True,True,True],[False,True,True,True],[True,True,False,False],[False,True,False,False]],[[True,False,True,False],[True,False,False,False],[True,True,False,False],[False,False,False,True],[True,True,False,True],[True,True,True,False],[False,True,True,False],[True,True,True,False],[True,False,False,False],[False,False,True,False],[False,True,False,False]]], dtype = "bool")#candidate|7284|(13, 11, 4)|const|bool
bop_7285 = relay.logical_and(var_7283.astype('bool'), relay.reshape(const_7284.astype('bool'), relay.shape_of(var_7283))) # shape=(13, 11, 4)
func_1204_call = mod.get_global_var('func_1204')
func_1207_call = mutated_mod.get_global_var('func_1207')
var_7294 = relay.var("var_7294", dtype = "float64", shape = (1, 360))#candidate|7294|(1, 360)|var|float64
var_7295 = relay.var("var_7295", dtype = "int8", shape = (4, 100))#candidate|7295|(4, 100)|var|int8
call_7293 = relay.TupleGetItem(func_1204_call(relay.reshape(var_7294.astype('float64'), [3, 15, 8]), relay.reshape(var_7295.astype('int8'), [400,]), ), 1)
call_7296 = relay.TupleGetItem(func_1207_call(relay.reshape(var_7294.astype('float64'), [3, 15, 8]), relay.reshape(var_7295.astype('int8'), [400,]), ), 1)
func_3370_call = mod.get_global_var('func_3370')
func_3373_call = mutated_mod.get_global_var('func_3373')
var_7302 = relay.var("var_7302", dtype = "int32", shape = ())#candidate|7302|()|var|int32
var_7303 = relay.var("var_7303", dtype = "int32", shape = (300, 1))#candidate|7303|(300, 1)|var|int32
call_7301 = relay.TupleGetItem(func_3370_call(relay.reshape(var_7302.astype('int32'), []), relay.reshape(var_7303.astype('int32'), [2, 15, 10]), ), 0)
call_7304 = relay.TupleGetItem(func_3373_call(relay.reshape(var_7302.astype('int32'), []), relay.reshape(var_7303.astype('int32'), [2, 15, 10]), ), 0)
func_1310_call = mod.get_global_var('func_1310')
func_1313_call = mutated_mod.get_global_var('func_1313')
const_7311 = relay.const([-9.485986,-1.586717,5.492489,-1.529951,-6.088048,9.374253,1.040609,3.387492,-4.520107,-5.447481,-6.347458,9.274770,3.942666,-1.755828,8.106756,-8.283229,7.439383,0.194220,2.116745,-2.628027,-1.972923,-6.030334,-2.666388,-6.721140,-7.563218,-7.988524,-3.039926,-6.555005,2.885112,-8.817270,9.108123,6.600647,4.517649,9.796230,-8.815530,-6.525998,7.622617,1.292480,-2.352958,-1.501421,-4.620749,-5.320725,4.263756,-4.856629,4.316274,2.063052,8.019231,8.847602,7.238436,-7.049751,-7.399203,0.883104,8.814407,-6.532160,-2.948283,-1.805546,4.374910,4.510036,-8.171590,-6.633483,-4.212404,-9.345112,-3.605524,7.715514,-0.615461,1.348923,-4.416645,-9.547434,9.574782,-2.909833,8.354092,-6.797587,0.802623,5.960375,0.421289,0.996905,-5.674631,-0.892727,2.415367,-4.721352,3.560900,9.025965,-0.066758,3.141438,-9.682784,-2.261667,-3.205506,-3.261649,-7.838767,4.582800,4.181099,-1.974277,-4.111320,-6.638526,-7.934894,6.322979,4.039236,3.594033,-4.887822,5.852708,-5.832468,0.848784,9.801219,-8.355271,2.557712,8.076294,-7.600172,-5.792193,-9.824156,2.942291,-5.958712,-4.728760,6.421471,3.407190,-5.022964,-0.923007,-5.992699,-1.430108,8.336391,-0.442048,-2.622746,-7.491960,3.998430,-9.416211,5.987234,-0.998396,-9.538869,8.096904,-3.469036,-6.159059,-9.660583,-9.271438,-9.459936,-3.049973,6.176995,-9.350133,-8.994739,4.443735,-4.105420,-6.680490,4.977256,6.310398,4.065949,5.081349,1.733573,8.765311,-7.626335,1.156503,-2.934733,-9.585550,-3.428962,0.097703,7.480067,-5.354433,-7.637254,-3.805585,3.028872,-9.778979,-0.308266,-3.608856,0.265628,9.698478,0.642503,-2.634675,-7.697806,-5.848620,2.354892,-2.167808,-8.944541,-0.338922,0.530623,-0.621725,-4.095420,9.614665,-0.164605,2.035777,8.009927,0.632846,3.966193,-9.346327,-9.963587,-2.717572,0.900081,3.790861,5.240283,-8.943599,-9.212426,3.626796,7.258890,2.217057,-3.120901,8.130703,-1.573335,8.275200,-2.776599,4.335659,-5.159062,0.936287,-2.092419,0.158356,-8.219265,-9.911908,-7.736427,-9.947032,9.029900,0.575257,-2.047799,6.982160,3.499088,-4.503467,4.339728,-1.404527,9.315038,8.037912,-2.901364,6.720637,-5.536632,4.645836,0.129481,4.738603,-1.782989,-5.177182,8.848753,5.588275,-4.673546,9.429024,3.056475,7.128634,7.510395,2.527558,3.012224,-6.420787,-1.632920,-7.992770,9.808137,-1.125223,-0.204243,-2.819498,1.456993,-2.493361,1.434034,1.815320,-1.145961,4.605461,9.510870,1.675690,5.841189,-6.238926,-2.100342,7.945439,-4.231209,2.966407,8.713997,1.156828,8.289375,-8.461146,2.145481,7.840699,1.946495,2.231323,7.251204,3.769368,-7.025837,3.198803,6.964936,8.646460,-7.448975,-6.520225,-8.146608,-1.421767,-2.705899,7.575042,-1.591453,0.151975,4.421571,-4.237160,0.470619,-2.534725,-0.716127,-8.742588,-8.266103,8.569096,-0.084198,-5.249983,1.417032,-6.276165,-0.035471,9.222391,9.774202,-0.709247,1.921739,3.940680,-4.779866,0.538817,8.137909,-4.801284,5.642619,7.977979,-5.252600,-5.957731,-1.664424,0.097173,-0.487545,-5.240574,4.478291,5.986809,2.218717,0.616669,-8.716736,-2.364520,8.646506,1.470842,4.188397,-1.073258,3.652162,2.961345,-9.770497,-4.347886,-5.179762,-4.822439,3.949574,-9.202501,-8.562463,-7.843273,-0.497709,5.348414,-6.223140,-2.489672,4.331509,0.800996,-0.526894,-8.022123,9.566422,8.047477,4.457755,8.176500,5.816777,-9.125454,3.863206,-0.993740,8.859165,2.727350,1.014887,9.806585,3.165668,7.836971,-9.487698,-8.603053,-6.007391,5.527713,9.121255,-2.187256,-7.942109,-6.239532,8.574489,-6.520747,-7.938109,-5.346017,8.366363,-5.764883,-2.815368,-2.716181,-0.529540,-6.293995,4.880340,-8.734346,-2.217250,2.982936,9.115495,0.397833,2.363024,-7.704830,3.387833,1.939787,-6.309389,1.585127,9.567337,3.785074,-3.726184,-4.766324,7.350969,-0.203209,0.273522,0.924882,-8.004504,4.083718,-1.901378,9.709827,1.947746,-9.252720,8.924287,-1.722676,-4.749771,-0.361658,-4.170834,-5.601814,6.508493,7.789856,-7.258618,-1.085572,7.911025,-8.642881,7.621338,-7.903842,-3.229184,-2.780506,-0.938633,-0.767465,0.258628,-6.440819,5.814417,6.491677,8.369100,9.827757,9.701980,-2.063459,-2.130292,-8.508003,5.649497,-5.024270,-9.625065,3.742433,2.983891,8.830782,-2.187177,-6.297547,-7.692041,-8.093699,3.259722,3.063794,8.420611,8.021687,3.383098,8.383177,-7.372287,-6.290464,6.149436,-6.080354,-2.692788,0.116646,9.818304,-0.277870,3.908580,1.489824,0.695785,-2.712177,1.518516,-6.762765,4.618768,8.585261,0.505929,-4.248037,7.415779,2.080284,-2.458054,-3.179708,4.862825,9.498583,9.450605,0.041364,-1.338290,-9.269883], dtype = "float32")#candidate|7311|(462,)|const|float32
call_7310 = relay.TupleGetItem(func_1310_call(relay.reshape(const_7311.astype('float32'), [7, 11, 6]), relay.reshape(var_7295.astype('int8'), [400,]), ), 0)
call_7312 = relay.TupleGetItem(func_1313_call(relay.reshape(const_7311.astype('float32'), [7, 11, 6]), relay.reshape(var_7295.astype('int8'), [400,]), ), 0)
var_7313 = relay.var("var_7313", dtype = "float64", shape = (8, 360))#candidate|7313|(8, 360)|var|float64
bop_7314 = relay.bitwise_xor(var_7294.astype('uint16'), var_7313.astype('uint16')) # shape=(8, 360)
uop_7317 = relay.asinh(var_7313.astype('float32')) # shape=(8, 360)
var_7347 = relay.var("var_7347", dtype = "float32", shape = (8, 360))#candidate|7347|(8, 360)|var|float32
bop_7348 = relay.power(uop_7317.astype('float64'), relay.reshape(var_7347.astype('float64'), relay.shape_of(uop_7317))) # shape=(8, 360)
bop_7352 = relay.bitwise_or(bop_7348.astype('uint16'), relay.reshape(bop_7314.astype('uint16'), relay.shape_of(bop_7348))) # shape=(8, 360)
output = relay.Tuple([bop_7285,call_7293,var_7295,call_7301,var_7302,var_7303,call_7310,const_7311,bop_7352,])
output2 = relay.Tuple([bop_7285,call_7296,var_7295,call_7304,var_7302,var_7303,call_7312,const_7311,bop_7352,])
func_7357 = relay.Function([var_7283,var_7294,var_7295,var_7302,var_7303,var_7313,var_7347,], output)
mod['func_7357'] = func_7357
mod = relay.transform.InferType()(mod)
mutated_mod['func_7357'] = func_7357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7357_call = mutated_mod.get_global_var('func_7357')
var_7359 = relay.var("var_7359", dtype = "bool", shape = (13, 11, 4))#candidate|7359|(13, 11, 4)|var|bool
var_7360 = relay.var("var_7360", dtype = "float64", shape = (1, 360))#candidate|7360|(1, 360)|var|float64
var_7361 = relay.var("var_7361", dtype = "int8", shape = (4, 100))#candidate|7361|(4, 100)|var|int8
var_7362 = relay.var("var_7362", dtype = "int32", shape = ())#candidate|7362|()|var|int32
var_7363 = relay.var("var_7363", dtype = "int32", shape = (300, 1))#candidate|7363|(300, 1)|var|int32
var_7364 = relay.var("var_7364", dtype = "float64", shape = (8, 360))#candidate|7364|(8, 360)|var|float64
var_7365 = relay.var("var_7365", dtype = "float32", shape = (8, 360))#candidate|7365|(8, 360)|var|float32
call_7358 = func_7357_call(var_7359,var_7360,var_7361,var_7362,var_7363,var_7364,var_7365,)
output = call_7358
func_7366 = relay.Function([var_7359,var_7360,var_7361,var_7362,var_7363,var_7364,var_7365,], output)
mutated_mod['func_7366'] = func_7366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7184_call = mod.get_global_var('func_7184')
func_7185_call = mutated_mod.get_global_var('func_7185')
call_7376 = relay.TupleGetItem(func_7184_call(), 0)
call_7377 = relay.TupleGetItem(func_7185_call(), 0)
func_4995_call = mod.get_global_var('func_4995')
func_4998_call = mutated_mod.get_global_var('func_4998')
var_7382 = relay.var("var_7382", dtype = "int8", shape = (400,))#candidate|7382|(400,)|var|int8
call_7381 = relay.TupleGetItem(func_4995_call(relay.reshape(call_7376.astype('float32'), [1056,]), relay.reshape(var_7382.astype('int8'), [200, 2]), ), 3)
call_7383 = relay.TupleGetItem(func_4998_call(relay.reshape(call_7376.astype('float32'), [1056,]), relay.reshape(var_7382.astype('int8'), [200, 2]), ), 3)
func_112_call = mod.get_global_var('func_112')
func_115_call = mutated_mod.get_global_var('func_115')
call_7387 = func_112_call(relay.reshape(var_7382.astype('int8'), [10, 10, 4]))
call_7388 = func_112_call(relay.reshape(var_7382.astype('int8'), [10, 10, 4]))
output = relay.Tuple([call_7376,call_7381,var_7382,call_7387,])
output2 = relay.Tuple([call_7377,call_7383,var_7382,call_7388,])
func_7395 = relay.Function([var_7382,], output)
mod['func_7395'] = func_7395
mod = relay.transform.InferType()(mod)
var_7396 = relay.var("var_7396", dtype = "int8", shape = (400,))#candidate|7396|(400,)|var|int8
output = func_7395(var_7396)
func_7397 = relay.Function([var_7396], output)
mutated_mod['func_7397'] = func_7397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7093_call = mod.get_global_var('func_7093')
func_7095_call = mutated_mod.get_global_var('func_7095')
call_7502 = relay.TupleGetItem(func_7093_call(), 0)
call_7503 = relay.TupleGetItem(func_7095_call(), 0)
output = relay.Tuple([call_7502,])
output2 = relay.Tuple([call_7503,])
func_7513 = relay.Function([], output)
mod['func_7513'] = func_7513
mod = relay.transform.InferType()(mod)
mutated_mod['func_7513'] = func_7513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7513_call = mutated_mod.get_global_var('func_7513')
call_7514 = func_7513_call()
output = call_7514
func_7515 = relay.Function([], output)
mutated_mod['func_7515'] = func_7515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7118_call = mod.get_global_var('func_7118')
func_7119_call = mutated_mod.get_global_var('func_7119')
call_7613 = relay.TupleGetItem(func_7118_call(), 0)
call_7614 = relay.TupleGetItem(func_7119_call(), 0)
output = call_7613
output2 = call_7614
func_7617 = relay.Function([], output)
mod['func_7617'] = func_7617
mod = relay.transform.InferType()(mod)
mutated_mod['func_7617'] = func_7617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7617_call = mutated_mod.get_global_var('func_7617')
call_7618 = func_7617_call()
output = call_7618
func_7619 = relay.Function([], output)
mutated_mod['func_7619'] = func_7619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7184_call = mod.get_global_var('func_7184')
func_7185_call = mutated_mod.get_global_var('func_7185')
call_7679 = relay.TupleGetItem(func_7184_call(), 1)
call_7680 = relay.TupleGetItem(func_7185_call(), 1)
output = relay.Tuple([call_7679,])
output2 = relay.Tuple([call_7680,])
func_7681 = relay.Function([], output)
mod['func_7681'] = func_7681
mod = relay.transform.InferType()(mod)
output = func_7681()
func_7682 = relay.Function([], output)
mutated_mod['func_7682'] = func_7682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7093_call = mod.get_global_var('func_7093')
func_7095_call = mutated_mod.get_global_var('func_7095')
call_7693 = relay.TupleGetItem(func_7093_call(), 0)
call_7694 = relay.TupleGetItem(func_7095_call(), 0)
var_7708 = relay.var("var_7708", dtype = "float32", shape = (3, 16, 4))#candidate|7708|(3, 16, 4)|var|float32
bop_7709 = relay.subtract(call_7693.astype('int32'), relay.reshape(var_7708.astype('int32'), relay.shape_of(call_7693))) # shape=(3, 16, 4)
bop_7712 = relay.subtract(call_7694.astype('int32'), relay.reshape(var_7708.astype('int32'), relay.shape_of(call_7694))) # shape=(3, 16, 4)
output = relay.Tuple([bop_7709,])
output2 = relay.Tuple([bop_7712,])
func_7714 = relay.Function([var_7708,], output)
mod['func_7714'] = func_7714
mod = relay.transform.InferType()(mod)
mutated_mod['func_7714'] = func_7714
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7715 = relay.var("var_7715", dtype = "float32", shape = (3, 16, 4))#candidate|7715|(3, 16, 4)|var|float32
func_7714_call = mutated_mod.get_global_var('func_7714')
call_7716 = func_7714_call(var_7715)
output = call_7716
func_7717 = relay.Function([var_7715], output)
mutated_mod['func_7717'] = func_7717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7184_call = mod.get_global_var('func_7184')
func_7185_call = mutated_mod.get_global_var('func_7185')
call_7773 = relay.TupleGetItem(func_7184_call(), 1)
call_7774 = relay.TupleGetItem(func_7185_call(), 1)
output = relay.Tuple([call_7773,])
output2 = relay.Tuple([call_7774,])
func_7777 = relay.Function([], output)
mod['func_7777'] = func_7777
mod = relay.transform.InferType()(mod)
output = func_7777()
func_7778 = relay.Function([], output)
mutated_mod['func_7778'] = func_7778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7513_call = mod.get_global_var('func_7513')
func_7515_call = mutated_mod.get_global_var('func_7515')
call_7781 = relay.TupleGetItem(func_7513_call(), 0)
call_7782 = relay.TupleGetItem(func_7515_call(), 0)
output = call_7781
output2 = call_7782
func_7784 = relay.Function([], output)
mod['func_7784'] = func_7784
mod = relay.transform.InferType()(mod)
output = func_7784()
func_7785 = relay.Function([], output)
mutated_mod['func_7785'] = func_7785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7617_call = mod.get_global_var('func_7617')
func_7619_call = mutated_mod.get_global_var('func_7619')
call_7841 = func_7617_call()
call_7842 = func_7617_call()
func_7067_call = mod.get_global_var('func_7067')
func_7068_call = mutated_mod.get_global_var('func_7068')
call_7845 = relay.TupleGetItem(func_7067_call(), 0)
call_7846 = relay.TupleGetItem(func_7068_call(), 0)
func_7681_call = mod.get_global_var('func_7681')
func_7682_call = mutated_mod.get_global_var('func_7682')
call_7848 = relay.TupleGetItem(func_7681_call(), 0)
call_7849 = relay.TupleGetItem(func_7682_call(), 0)
func_4026_call = mod.get_global_var('func_4026')
func_4031_call = mutated_mod.get_global_var('func_4031')
var_7851 = relay.var("var_7851", dtype = "int32", shape = ())#candidate|7851|()|var|int32
const_7852 = relay.const([2,-5,9,-9,-9,2,7,1,-10,3,5,6,2,-9,6,-7,5,5,7,4,5,3,2,9,5,7,-5,8,-5,-6,-2,-1,-5,10,10,-10,-2,8,-9,7,9,5,-6,-9,9,-4,-8,-7,-9,7,-3,-8,-1,10,-3,5,-10,8,-5,-9,-4,-5,-5,-7,1,8,10,8,10,1,-4,7,-9,10,-4,8,1,10,8,-2,1,5,-6,1,1,-1,-2,-9,-3,-5,-7,5,-8,3,2,7,5,-3,4,-7,9,10,-8,2,-7,10,-10,1,10,4,-9,-5,2,7,5,-1,-4,4,7,5,3,-7,8,10,1,-2,-6,7,7,4,-10,4,3,7,-4,-3,8,1,-5,6,7,-6,-4,-1,-1,-1,-7,6,-5,-9,7,-7,1,3,-8,-1,8,10,-4,-3,5,5,-2,-1,6,-5,3,8], dtype = "int32")#candidate|7852|(168,)|const|int32
const_7853 = relay.const([[7.874354,9.445774,6.796058,-6.857751,-0.554708,3.228718,4.219881,-5.604644,3.851727,-9.338479,-9.872151,-2.304146,-9.592722,-9.301263,6.849883,-3.128273,-0.068287,-6.014119,-0.599987,3.611005,5.322276,-5.683156,-6.397708,9.468650,-0.646154,-9.427060,-5.614332,-2.175828,8.847346,8.733546,-3.652830,8.746405,9.006551,6.092029,-5.971336,-9.137158,4.180690,5.943072,0.075757,1.620562,-8.703202,4.035549,9.524279,-7.693682,-2.832049,9.475342,7.122783,5.340941,-4.852407,2.621031,-2.036820,7.500752,-6.525123,1.931171,4.007231,-4.199580,-8.726824,-6.190218,2.310001,-5.803950,-1.657522,1.066466,-8.392409,-8.045244,4.496177,-3.226142,5.045803,7.809866,-0.505972,1.133518,-2.111784,9.951993,5.708172,-8.742205,-7.541411,3.185261,-3.675399,4.072059,4.502974,6.441916,7.796313,-3.659725,6.651349,-4.007809,-2.794972,3.181613,8.128462,-8.678212,-0.425164,-6.255832,8.094400,4.631282,-6.568141,1.894361,-8.544519,-8.363447,-9.989126,-7.166471,-2.016168,1.034029,0.475216,5.678353,9.125332,5.168752,-3.992167,1.232744,4.609025,9.751308,1.806645,-9.442926,-6.230882,3.434904,4.318108,-5.511829,-6.567071,3.211348,8.021931,7.536063,-6.437079,-6.438101,-1.482975,-5.644827,5.389595,5.214619,-9.112785,-1.885353,-5.265070,1.777079,-7.513920,8.386282,5.347234,-6.430341,-2.925853,-5.909995,-3.798716,5.973805,-9.413708,0.652844,-6.173071,-2.849485,-4.659393,4.736538,-4.660940,-4.154024,-6.965069,0.364752,-9.426132,-6.944874,7.999893,8.274903,-6.343058,-8.771219,5.469024,-0.606224,-5.864261,-7.295772,6.828489,7.343155,6.328928,-6.579741,-8.497471,4.442200,3.184585,9.364366,-2.045844,1.801501,1.350414,7.540658,5.056625,-8.675166,-2.514713,-6.272923,-8.691862,1.582246,3.254615,-0.303680,-2.776338,5.314259,4.327777,-1.412930,6.756538,-4.489660,-5.588909,2.801181,5.456126,2.836526,9.076304,-1.078683,-3.028906,3.038695,3.554395,0.121607,6.697230,-9.579537,4.685537,7.824282,-8.297669,8.380028,3.275200,-1.795033,4.099486,2.445243,6.814719,-5.333693,9.478636,6.716820,0.275763,-8.740606,4.411824,-9.494439,-5.327788,-4.421609,6.762840,3.392323,-7.106413,-0.597348,1.787429,-6.887268,8.982682,-0.300295,-5.008114,5.023599,-7.767688,7.280271,-8.003089,-9.097841,4.023223,8.592099,9.606130,3.764965,-5.079284,9.102946,2.154891,-3.280703,-2.512206,-1.992616,2.029983,8.646774,7.342069,5.203222,-0.030652,-3.923612,-4.183976,-2.241018,-9.572527,-4.619630,8.332918,4.698271,4.958785,3.275914,-9.271438,5.788747,-7.300806,-5.485892,9.656619,7.869887,0.210574,3.714457,-0.317014,2.257679,7.958041,8.043376,7.180669,-8.691972,9.046361,1.067171,7.216100,3.922694,4.503267,3.346490,7.374108,-8.089549,2.880428,4.213333,7.222774,-6.052305,-4.232171,-3.309010,-2.458905,-7.247048,-8.737922,-3.113539,-9.580959,2.708726,1.208220,-8.886639,-5.264792,6.796350,-2.688770,2.143212,-8.584737,7.339336,8.920607,-1.493846,-6.423112,5.316590,-4.979253,-0.856116,1.064869,-7.812873,-2.211881,-8.889754,5.069853,-5.791042,-1.082319,-2.511617,-6.590000,0.247828,2.907501,4.008461,-8.920253,-4.023776,-5.954202,-6.842159,8.818021,-0.629897,3.182288,-9.561841,0.638506,5.341321,-0.590096,-8.590026,0.196263,-0.876132,6.247142,-4.581242,2.635947,7.828953,5.850044,7.865486,-8.585006,-8.555342,-9.252226,2.469621,-1.349237,5.272696,-6.723276,3.193827,4.797269,-1.121217,3.123427,3.065202,2.241179,1.590686,-3.863200,1.222500,-7.690350,-9.564310,-1.725909,-5.722825,-2.058259,8.939152,5.186496,-1.897007,5.952423,-6.987143,0.926571,2.574114,-9.740204,5.769522,6.305536,9.411619,5.414489,4.684773,6.002780,-8.548299,8.169958,-0.544885,-8.050604,-7.203962,7.567894,-9.564989,-8.371090,-3.582225,-9.071863,4.493160,-6.238333,-0.733098,-1.278993,-1.613425,2.654238,-5.660870,-0.600615,-7.752976,6.244173,-4.418521,3.987239,-7.455451,-4.278220,-4.686197,-5.368357,5.626356,-2.831387,-2.278636,7.012317,6.980619,4.916211,8.710683,-1.204608,-1.815315,-6.290595,6.311593,-7.606749,5.333416,-9.361509,8.683684,8.100686,2.400845,-7.693957,5.195575,-4.050308,4.928837,-8.338192,-1.061806,-1.785749,-2.431093,2.268240,-2.667303,5.313117,2.492373,2.373290,6.313274,9.795947,-8.542921,-4.875236,7.036578,-7.556001,2.160454,5.054749,-0.279415,-4.314334,8.444873,-1.032807,7.148490,8.040413,4.813597,-9.252307,-1.352328,2.507465,1.341671,-9.294511,8.248167,0.046369,8.696398,-4.994795,-2.804193,-0.024719,-0.103246,6.682367,1.639707,-3.390588,0.267597,3.038211,-5.715311,1.239818,-9.328078,-3.311890,-6.638366,-3.642348,8.847541,7.639229,-9.950979,9.138377,-5.563168,-3.080547,1.958072,-1.601935,9.895060,-4.996116,7.087331,-0.082882,6.370856,8.497019,-6.531583,2.385851,-8.748596,-9.710781,1.017397,5.103881,-8.369909,9.014689,0.120858,3.644182,3.122243,-9.262931,2.286616,-9.620729,-7.961282,-3.293146,-4.377463,-0.449780,5.059629,4.676526,-8.705103,-9.362929,-2.242713,-6.746926,-3.068208,9.199523,-2.148479,-8.696440,-7.591926,-9.086514,-4.894320,3.261665,3.658838,8.252412,-4.086438,1.926301,5.059065,-4.393446,6.102765,6.673045,-5.190161,9.712343,1.756092,-4.965268,-9.465134,-2.261770,5.855879,5.134432,4.590372,9.446387,1.263903,-2.869708,2.776004,8.449093,6.549139,-0.183205,1.945304,-6.016625,3.591084,-4.515814,-6.911238,-1.593197,-9.304525,-5.941511,-9.005038,-8.544151,-8.819014,-7.829498,3.456419,-8.486684,7.368202,-2.521592,-2.282087,0.103746,2.410495,9.656434,-1.096366,1.156599,-1.957303,-0.331084,-1.570643,-6.886570,3.416492,-5.033831,-0.836031,5.095447,3.774240,-9.530263,3.009168,9.031584,8.477894,-6.334841,-2.674336,2.540813,2.717022,8.825831,-2.516797,-1.851309,-2.693261,-0.154675,7.081856,-8.246580,2.976902,-8.187501,-8.097890,7.582034,-8.744647,7.411870,1.993502,0.533262,-9.601040,-2.030671,6.369867,-9.644199,5.902019,-5.913471,1.301716,4.083021,-9.751973,2.537149,8.061419,-7.085600,-6.798437,-5.435749,-2.444318,-0.588477,-9.553113,2.132615,0.950325,-3.569952,-8.555947,0.184122,8.896479,-9.158388,-8.807124,1.826877,-7.957020,0.201747,3.078013,7.739282,-8.640198,1.419605,-1.322587,-8.536795,-7.303884,0.119750,4.740751,-1.810036,7.960609,-8.096824,-8.276418,-0.270514,-5.680848,1.760881,6.648348,9.096653,-7.719603,6.801422,-5.154392,-9.289825,-6.569289,2.820065,-2.316649,-3.709822,8.070618,3.653324,-0.127326,-6.011040,-1.679296,8.929942,-9.010301,3.032300,7.884798,-8.790774,-7.125875,-4.532570,-9.684150,-2.522178,-1.293792,-7.595909,-8.833286,9.148419,9.941221,9.121353,-1.300316,-3.072167,3.168800,0.595112,-1.018569,-4.507152,7.472316,9.720092,6.194979,-5.315327,-4.496535,4.480520,0.127010,-2.138800,-4.571955,-9.238933,-4.720942,-0.784172,-9.356990,-3.085042,8.383424,7.273860,0.953960,-2.270889,-6.327114,-7.274159,5.519062,3.576392,8.704138,-3.161740,5.311016,-3.602912,7.476704,-7.842251,-4.061366,-1.117369,4.223571,-1.521252,-9.497008,6.239499,-2.155588,4.666517,4.436637,-0.984830,-4.089750,9.728463,6.972070,1.160947,-6.497456,-1.870016,-5.602460,-4.311360,-2.119317,6.385819,0.671617,3.499174,-2.336926,1.650316,-3.972948,-4.243746,-8.205743,-5.933060,6.740336,-1.667841,0.336357,9.466999,8.464884,-8.869887,-5.927914,-4.523178,-2.135500,7.654930,9.735787,1.822038,-1.151754,-2.316698,9.169370,-6.873609,9.997356,-8.002880,1.531984,-7.398912,1.971149,-3.242789,-7.742000,5.185248,3.805019,-6.129923,2.069917,-6.194367,3.060584,6.461305,4.365891,-1.956690,-8.364348,-4.406064,-3.995487,7.505321,2.732121,7.433396,-0.386912,-6.275292,-3.093853,-5.648458,-6.377565,6.785004,-3.827648,-0.038175,9.264934,-2.433004,6.911046,0.398745,9.923328,0.423945,4.867359,8.781493,5.171331,7.970790,-2.411084,-7.174981,-1.626144,-2.449117,-7.360759,-1.739489,1.304548,4.824064,8.881651,-1.584098,0.645301,2.247317,2.581152,0.827755,8.125159,-4.545318,-2.327433,-9.542122,-0.348596,5.755175,-6.676070,-8.272222,-8.154680,-0.139938,2.010776,4.516588,8.366353,0.613507,6.792712,8.489864,1.321815,-6.305442,-7.034001,-8.701257,0.454692,2.776255,8.833800,-3.375408,-6.554777,-1.937908,8.023907,-3.257024,-8.352794,8.586662,-1.031542,-1.063813,-4.931115,-0.236508,-8.082492,-5.927569,-9.755106,2.828524,8.711705,-7.829987,-6.877920,0.530705,-5.412616,-5.678685,4.569627,-9.416665,6.857779,6.301451,1.965939,-6.026143,-4.794724,2.457362,4.496432,0.517534,-4.214215,-2.582962,-4.088447,1.532969,4.334280,1.451349,0.779985,9.608971,1.503946,0.237883,-0.638748,-5.453139,-0.741181,2.626245,-7.565886,-3.284515,-8.572915,1.443248,4.315478,0.522850,2.733481,8.655413,-1.956662,9.497734,-1.205434,-7.292046,-9.994043,2.767950,3.571828,-5.873756,7.212352,-8.083867,3.169309,-8.326289,-3.672380,-1.091869,4.767115,4.544585,-5.684073,6.760555,9.723439,9.524413,-0.926061,-3.139370,2.040737,7.589536,7.424622,4.037194,7.826238,4.622240,3.542870,6.566776,-8.703963,9.529205,4.357569,9.379144,-9.570750,2.105193,0.560178,-2.341535,-5.348940,-4.793404,-4.915250,4.383473,8.969290,0.544749,-8.765122,8.275746,0.414471,6.635039,1.400889,3.743392,5.793673,-3.981204,-2.908747,0.980774,-2.651502,2.289006,8.748787,2.988961,8.549310,-7.886323,3.059721,-2.549537,-8.889741,-4.187482,-6.734242,6.060841,-9.404687,3.032716,9.609032,9.544704,-7.425070,-5.126367,3.103330,-9.614873,-8.746455,-3.122492,0.772833,0.377476,-7.997388,2.101762,7.979973,-8.009543,0.008338,7.460658,7.002766,-1.156031,7.794897,4.380870,-3.614012,7.016306,-3.972037,4.585741,3.441061,9.586293,-3.470375,-4.801496,-8.289912,3.439942,-0.657372,-3.590192,3.542529,2.657799,0.491856,-0.326079,5.170070,-5.834475,6.645230,8.743390,-8.796005,1.980064,0.736786,1.490440,-6.432851,2.679601,2.142448,-7.060526,0.907199,7.157647,5.193727,-2.801719,8.105430,-9.802319,-4.103336,2.531317,6.800061,8.020426,9.941232,-0.978085,4.904290,-5.369237,3.424696,-4.727554,2.469755,8.284676,0.198231,7.079300,-2.126288,9.841074,2.910969,-7.076446,5.313068,1.714263,-3.347127,9.388661,-4.924831,-8.540579,-6.168927,-2.623345,-7.107654,-5.499776,5.559130,-2.351405,-4.119655,4.880826,1.743495,-0.606327,9.037621,0.894418,2.201650,-6.501588,-0.545722,5.804564,1.541714,-2.429472,3.518136,4.956252,-9.763298,-0.628481,5.216289,-4.750727,9.008613,-2.818022,3.872800,-5.457836,-3.921358,-2.897588,1.266835,8.284159,2.124692,-4.688150,5.346838,7.827685,-4.288465,-8.624111,5.985737,-7.450304,5.807420,-8.750804,-7.384384,7.713405,4.547050,9.609830,3.812649,1.230672,2.977679,2.125258,9.079505,-4.359567,-0.663947,6.659724,-9.248946,5.581741,-5.448275,-5.336394,-0.706471,8.022774,3.945959,4.446057,-8.641977,1.152984,-3.549115,-5.698860,3.227560,2.947671,9.799686,-7.022799,-1.532244,2.905271,8.375525,6.036339,7.584720,1.421238,-6.380335,0.678214,8.140725,-9.474657,6.670869,3.371532,7.695827,-5.114478,8.559220,-8.489219,-5.757140,0.741495,2.309576,-4.158769,5.355789,5.448339,-3.382395,-2.103997,4.970912,9.139567,0.004336,-6.373435,-0.574858,5.111265,0.989575,4.847343,2.262741,4.993726,-7.339137,1.115743,0.302137,7.710340,9.210073,9.231113,-6.077230,8.236922,1.799780,-2.238188,4.522822,4.785215,-0.088533,-5.371176,7.023644,-9.894254,2.128830,-1.102038,5.381789,-4.039688,5.371296,2.916967,0.965353,-1.937569,-0.576795,-8.574268,-9.377835,-7.434260,-6.027337,2.806134,-2.615740,8.475599,0.367550,-9.539198,1.307400,-2.844362,-5.658663,-5.312045,-3.840044,-3.174933,-6.339093,-0.144234,4.470382,4.293084,-2.524279,0.377830,-8.979675,-5.947539,-9.011874,-8.026074,-9.074855,9.745623,3.214944,-7.558667,-7.958085,-3.179825,9.873274,4.673262,-2.719521,-7.655914,8.809538,5.491759,8.239047,-6.146651,0.993261,5.906003,2.344583,-3.924393,1.696815,-0.470323,-9.550274,-6.008616,-7.584857,-9.660705,-6.834927,8.065438,-2.974335,3.542464,-3.182227,-5.449712,1.997588,8.891652,-4.600524,9.179871,-5.634331,3.155548,-5.343598,-2.926307,5.354867,5.909506,-8.786518,-6.283299,-8.869426,-3.328489,2.655682,-6.348036,-4.272089,7.250498,0.464336,-7.088892,-2.312384,-0.507089,2.850897,1.993711,3.949446,-7.792460,0.132828,8.052710,3.989894,2.136172,-2.981606,2.778978,9.465954,4.573309,4.466596,1.597896,3.826699,-5.040812,-6.299388,5.590338,4.010339,6.690132,-7.455988,-0.982922,-0.520579,-6.921228,4.419049,-9.244841,-7.583482,0.953073,0.937478,-6.656174,4.281609,-1.864908,-8.307193,7.023135,5.082835,5.628901,7.075060,4.447501,6.097338,-6.512046,6.335896,5.652176,-2.591241,9.741852,3.104480,-4.085440,5.777050,8.200058,3.161560,9.832672,4.853549,-1.246030,-4.034597,5.683004,-9.788271,-9.948463,-9.319345,4.572809,-2.391079,-0.697022,-8.542405,-5.266474,9.312674,-4.015177,8.441366,-1.574246,-3.650151,6.671810,-1.908925,-2.048550,4.653165,2.514284,-0.647014,-3.954183,7.133336,6.320217,-6.682041,6.498288,5.768123,-7.284962,6.467588,8.571640,3.756660,-1.152683,5.952379,-1.406060,6.295791,-4.086237,4.537495,1.424856,-0.597208,-1.645236,-2.342749,-9.905902,1.898315,-8.818112,5.573417,-5.257500,1.060207,8.791632,0.912988,3.552911,1.029838,8.658332,-5.049092,1.587470,4.855181,6.248756,-5.501987,1.970405,-4.697428,-1.146517,7.085218,0.537437,-2.665781,-3.203047,-2.669524,-9.909355,7.411751,-6.114573,-6.471017,-8.575454,-3.044259,-4.137209,-6.928028,-3.160041,8.664564,-8.514497,-7.759189,6.202589,-7.680897,-1.302364,5.404290,-4.997811,-4.273159,2.986375,3.185415,-1.155084,8.128428,-4.481789,-5.867364,2.869445,1.279018,5.823791,5.289984,-1.798976,-7.129163,-9.183029,-5.551134,-8.257925,-3.913650,3.339138,-0.309781,9.010649,-9.326344,0.413954,-1.593051,1.141125,-3.975896,8.670583,1.260236,-6.448098,4.434599,-4.437756,7.398911,-3.947882,-9.170301,9.097709,-5.263437,-5.609646,-1.604541,4.264400,-4.120888,5.188871,7.568894,-8.323516,-8.052649,-6.564565,-6.802256,1.473464,-4.766408,2.815508,-1.580627,7.276772,3.719621,4.024889,2.258452,-8.733600,1.657807,-2.345116,1.929154,-6.838881,2.665343,1.278811,0.567947,-5.491565,-3.765488,-9.614641,-2.600441,3.844387,7.952819,-6.522289,-5.600918,8.992462,-2.980554,-0.601145,-3.634943,4.968459,-8.419423,2.613396,-5.638155,2.109618,7.310961,4.815818,1.143160,7.257194,8.064500,5.630727,6.305990,-6.131863,-4.095173,4.954454,3.959111,4.707985,6.187295,4.300630,-8.753545,-8.687677,-6.150737,8.759146,6.144657,-0.948781,-4.703890,-4.873564,-4.121601,3.424490,6.111699,-0.870099,-6.171963,-2.106603,-0.607166,1.241713,-5.806863,5.349253,4.091433,-1.201639,0.186046,0.853605,-9.873633,5.425243,-4.876172,-2.969540,5.921746,-4.139555,-3.581333,9.541547,-8.851654,1.866998,4.191533,7.651405,6.943622,9.468389,1.173129,4.699420,-5.591849,-8.850276,5.523566,-7.575938,7.178120,-2.048782,-4.546493,2.779477,-0.945136,6.453579,5.497229,-4.665867,6.644524,6.308353,8.834632,-3.086383,-8.884975,-8.156370,8.208992,-5.155764,-9.943166,-3.525581,4.520282,1.215532,-8.785660,4.012117,-4.352274,2.709890,7.378513,-8.226557,7.392743,-0.392194,4.292373,2.299241,9.814164,-4.519709,2.991916,-0.429116,-4.241609,-5.232544,7.241502,-0.448821,-8.556420,8.534374,-7.456102,-6.198222,-6.164413,5.209221,0.266543,5.780099,7.198328,-5.256473,-8.169259,1.993748,9.712740,-8.103754,2.805435,-9.047637,-4.062893,8.291605,1.070933,-8.150031,-1.750847,8.355887,-3.367013,-2.612570,-1.307590,-5.973402,-4.837868,5.252940,-0.864147,-7.190888,-7.130511,7.810228,-3.270144,-3.081762,-9.035095,9.184607,-7.891539,-8.484332,1.320167,-8.868966,-2.606111,0.210542,-5.641918,-4.726102,-7.599297,-3.344449,6.782034,3.899212,-7.940095,7.872414,-6.125047,1.419419,3.437618,5.861654,6.990230,6.053925,5.526495,-4.024728,4.028822,-2.826769,7.227320,3.857398,-4.413144,-5.900313,-3.896881,9.686508,-4.020992,6.490821,-5.827347,7.538034,9.638809,7.946762,2.930440,-9.544768,-9.425492,-3.590627,-1.747014,-6.974495,-0.524439,2.886144,-8.328432,1.800030,-1.745583,5.718117,0.371247,-5.203957,9.081882,4.611159,4.408674,9.673553,-2.562583,7.992111,4.801477,3.967066,-1.864937,-1.312158,3.644517,6.468650,8.959592,3.388697,3.675823,5.625465,2.007109,2.403570,-9.551680,9.779432,-1.805743,6.871492,-6.629590,3.030013,-6.477921,-7.857165,3.760387,5.165763,-9.751224,-6.441777,-3.818845,-4.175761,-4.656088,-8.087020,-3.201246,-6.466846,-6.468428,0.604946,-8.854177,0.687778,-0.709967,5.217636,5.639321,-7.687496,1.027983,-2.249445,-1.306004,2.889133,-9.828651,-9.913919,4.133811,-7.918548,-7.751165,6.430439,-1.245016,3.726012,-4.212009,4.621811,3.883319,2.843777,-6.334038,-1.035443,-0.620486,2.818058,0.791605,3.503175,-7.437118,-7.498518,2.589722,-1.369251,-4.428775,9.415323,-1.867799,1.172466,-9.908583,-2.471321,-9.687602,-8.384293,-5.495171,4.845621,0.934059,7.072411,-6.392897,-2.820279,6.602659,-8.767959,4.458654,-7.754157,-4.862148,5.072516,-4.260195,3.724431,4.992984,8.833344,3.083287,8.833390,5.298806,1.267656,3.678944,-1.454993,-7.547365,-5.529373,-9.428227,1.756157,-9.702311,9.618859,-8.555918,8.139447,-5.301126,6.363854,-5.255428,-4.173198,8.699994,2.090837,-3.130748,2.781275,-0.832612,-5.151777,-0.638637,8.818722,-5.933739,5.413604,2.737162,-0.052386,7.325727,-8.913277,7.872295,-2.779932,-5.753236,7.807188,1.003262,1.469810,-0.603225,-2.705188,1.777900,-0.516122,-1.282057,-5.746592,-7.933303,-5.367357,-9.178734,4.161246,7.493987,7.988911,-9.336492,-8.519851,9.507179,0.878049,3.469390,7.302267,-9.361469,7.106979,2.066242,-3.934974,-0.668198,-9.798576,5.141184,-8.152434,8.294429,-5.587344,-0.893809,7.574821,-8.971491,-2.749336,-5.872031,-6.738548,4.632556,8.643211,5.866837,-1.446786,-4.869575,9.526708,2.047222,5.445838,7.266994,-1.266140,-5.032237,3.641944,-4.140811,4.120092,0.216768,7.443355,2.398854,-6.996492,5.376614,-7.634325,9.859809,9.745136,-7.956829,4.971534,8.708393,6.245530,3.104433,-6.729393,-2.081549,-7.093302,-6.750285,-0.862752,-1.470416,-2.319988,-2.534999,-0.515535,-7.617108,-9.134209,-4.467447,-6.185613,6.657429,2.531446,4.850690,-8.143208,8.854572]], dtype = "float64")#candidate|7853|(1, 1820)|const|float64
call_7850 = relay.TupleGetItem(func_4026_call(relay.reshape(var_7851.astype('int32'), []), relay.reshape(const_7852.astype('int32'), [3, 8, 7]), relay.reshape(const_7853.astype('float64'), [1820,]), relay.reshape(const_7852.astype('float32'), [3, 8, 7]), ), 1)
call_7854 = relay.TupleGetItem(func_4031_call(relay.reshape(var_7851.astype('int32'), []), relay.reshape(const_7852.astype('int32'), [3, 8, 7]), relay.reshape(const_7853.astype('float64'), [1820,]), relay.reshape(const_7852.astype('float32'), [3, 8, 7]), ), 1)
output = relay.Tuple([call_7841,call_7845,call_7848,call_7850,var_7851,const_7852,const_7853,])
output2 = relay.Tuple([call_7842,call_7846,call_7849,call_7854,var_7851,const_7852,const_7853,])
func_7860 = relay.Function([var_7851,], output)
mod['func_7860'] = func_7860
mod = relay.transform.InferType()(mod)
mutated_mod['func_7860'] = func_7860
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7861 = relay.var("var_7861", dtype = "int32", shape = ())#candidate|7861|()|var|int32
func_7860_call = mutated_mod.get_global_var('func_7860')
call_7862 = func_7860_call(var_7861)
output = call_7862
func_7863 = relay.Function([var_7861], output)
mutated_mod['func_7863'] = func_7863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7093_call = mod.get_global_var('func_7093')
func_7095_call = mutated_mod.get_global_var('func_7095')
call_7922 = relay.TupleGetItem(func_7093_call(), 0)
call_7923 = relay.TupleGetItem(func_7095_call(), 0)
output = call_7922
output2 = call_7923
func_7930 = relay.Function([], output)
mod['func_7930'] = func_7930
mod = relay.transform.InferType()(mod)
output = func_7930()
func_7931 = relay.Function([], output)
mutated_mod['func_7931'] = func_7931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7617_call = mod.get_global_var('func_7617')
func_7619_call = mutated_mod.get_global_var('func_7619')
call_7956 = func_7617_call()
call_7957 = func_7617_call()
var_7968 = relay.var("var_7968", dtype = "float32", shape = (3, 16, 4))#candidate|7968|(3, 16, 4)|var|float32
bop_7969 = relay.bitwise_xor(call_7956.astype('int32'), relay.reshape(var_7968.astype('int32'), relay.shape_of(call_7956))) # shape=(3, 16, 4)
bop_7972 = relay.bitwise_xor(call_7957.astype('int32'), relay.reshape(var_7968.astype('int32'), relay.shape_of(call_7957))) # shape=(3, 16, 4)
output = bop_7969
output2 = bop_7972
func_7986 = relay.Function([var_7968,], output)
mod['func_7986'] = func_7986
mod = relay.transform.InferType()(mod)
var_7987 = relay.var("var_7987", dtype = "float32", shape = (3, 16, 4))#candidate|7987|(3, 16, 4)|var|float32
output = func_7986(var_7987)
func_7988 = relay.Function([var_7987], output)
mutated_mod['func_7988'] = func_7988
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8003 = relay.var("var_8003", dtype = "float64", shape = (9, 12, 10))#candidate|8003|(9, 12, 10)|var|float64
var_8004 = relay.var("var_8004", dtype = "float64", shape = (9, 12, 10))#candidate|8004|(9, 12, 10)|var|float64
bop_8005 = relay.maximum(var_8003.astype('float64'), relay.reshape(var_8004.astype('float64'), relay.shape_of(var_8003))) # shape=(9, 12, 10)
output = bop_8005
output2 = bop_8005
func_8024 = relay.Function([var_8003,var_8004,], output)
mod['func_8024'] = func_8024
mod = relay.transform.InferType()(mod)
var_8025 = relay.var("var_8025", dtype = "float64", shape = (9, 12, 10))#candidate|8025|(9, 12, 10)|var|float64
var_8026 = relay.var("var_8026", dtype = "float64", shape = (9, 12, 10))#candidate|8026|(9, 12, 10)|var|float64
output = func_8024(var_8025,var_8026,)
func_8027 = relay.Function([var_8025,var_8026,], output)
mutated_mod['func_8027'] = func_8027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7930_call = mod.get_global_var('func_7930')
func_7931_call = mutated_mod.get_global_var('func_7931')
call_8031 = func_7930_call()
call_8032 = func_7930_call()
output = relay.Tuple([call_8031,])
output2 = relay.Tuple([call_8032,])
func_8038 = relay.Function([], output)
mod['func_8038'] = func_8038
mod = relay.transform.InferType()(mod)
output = func_8038()
func_8039 = relay.Function([], output)
mutated_mod['func_8039'] = func_8039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8038_call = mod.get_global_var('func_8038')
func_8039_call = mutated_mod.get_global_var('func_8039')
call_8107 = relay.TupleGetItem(func_8038_call(), 0)
call_8108 = relay.TupleGetItem(func_8039_call(), 0)
var_8127 = relay.var("var_8127", dtype = "float32", shape = (3, 16, 4))#candidate|8127|(3, 16, 4)|var|float32
bop_8128 = relay.logical_xor(call_8107.astype('uint8'), relay.reshape(var_8127.astype('uint8'), relay.shape_of(call_8107))) # shape=(3, 16, 4)
bop_8131 = relay.logical_xor(call_8108.astype('uint8'), relay.reshape(var_8127.astype('uint8'), relay.shape_of(call_8108))) # shape=(3, 16, 4)
func_112_call = mod.get_global_var('func_112')
func_115_call = mutated_mod.get_global_var('func_115')
const_8136 = relay.const([8,5,2,7,-4,-6,3,3,-5,8,6,8,4,7,8,3,2,10,-2,5,-3,-8,-4,-4,9,-7,-10,8,2,3,7,-8,6,2,6,-7,10,-5,8,3,1,-4,-4,8,-8,-8,9,-4,3,-4,-3,9,-8,-8,-6,-4,1,-2,2,1,-1,7,-4,-2,8,7,8,-7,-4,1,-5,1,-6,-1,10,-8,-10,8,7,2,-9,9,6,-2,-10,-2,-1,-3,3,5,7,-6,-10,2,6,3,2,3,-7,-10,-9,3,7,-6,9,8,7,-4,8,-4,-9,-10,-10,-1,-7,3,-7,-7,-2,7,-4,-9,6,-8,9,-9,-1,-1,3,10,-7,9,1,8,-8,-5,7,3,-9,-10,-5,9,9,8,4,-5,1,2,-7,-5,5,-7,-6,-10,3,3,10,-3,10,2,-9,4,8,-4,-8,1,-9,-8,9,9,-9,-10,-2,7,-4,7,-5,-7,-9,-9,8,-10,8,-1,9,9,-4,-4,-1,2,1,3,2,-8,-9,-8,7,-3,8,-2,-5,5,-1,8,2,-9,9,9,-10,-2,4,-5,8,7,-3,4,-1,9,-8,2,-7,2,-3,-7,8,3,7,-6,-7,2,-2,-1,-7,-5,-9,4,-9,2,-9,-8,-6,8,10,-2,-7,-8,3,3,10,-5,-4,5,-7,-7,3,3,6,-7,-7,3,3,2,1,-6,-3,9,1,-1,10,7,3,5,1,-4,-10,4,-8,-9,-4,-1,-7,-2,-4,-7,3,10,-1,-5,-6,5,-6,9,-5,-7,7,-6,8,-1,3,9,-1,1,-1,-8,-5,-4,2,-9,4,-6,3,5,9,6,-5,9,-1,10,9,10,1,-9,7,-1,-3,2,-8,9,-5,3,-7,6,5,1,-3,9,5,8,5,5,-6,-6,-5,6,-8,-10,9,3,9,7,-7,8,4,5,5,9,-10,8,10,7,-2,2,-10,-7,-3,1,-3,-1,6,6,10,5,-10,5,-8,7,7,1,-8,-6,-5,10,-7,6,-9,-7,8,8,6,10,-8,-3,-8,-4,-5,9,9,-1,-10,-4], dtype = "int8")#candidate|8136|(400,)|const|int8
call_8135 = func_112_call(relay.reshape(const_8136.astype('int8'), [10, 10, 4]))
call_8137 = func_112_call(relay.reshape(const_8136.astype('int8'), [10, 10, 4]))
output = relay.Tuple([bop_8128,call_8135,const_8136,])
output2 = relay.Tuple([bop_8131,call_8137,const_8136,])
func_8146 = relay.Function([var_8127,], output)
mod['func_8146'] = func_8146
mod = relay.transform.InferType()(mod)
mutated_mod['func_8146'] = func_8146
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8147 = relay.var("var_8147", dtype = "float32", shape = (3, 16, 4))#candidate|8147|(3, 16, 4)|var|float32
func_8146_call = mutated_mod.get_global_var('func_8146')
call_8148 = func_8146_call(var_8147)
output = call_8148
func_8149 = relay.Function([var_8147], output)
mutated_mod['func_8149'] = func_8149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8038_call = mod.get_global_var('func_8038')
func_8039_call = mutated_mod.get_global_var('func_8039')
call_8159 = relay.TupleGetItem(func_8038_call(), 0)
call_8160 = relay.TupleGetItem(func_8039_call(), 0)
output = relay.Tuple([call_8159,])
output2 = relay.Tuple([call_8160,])
func_8171 = relay.Function([], output)
mod['func_8171'] = func_8171
mod = relay.transform.InferType()(mod)
mutated_mod['func_8171'] = func_8171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8171_call = mutated_mod.get_global_var('func_8171')
call_8172 = func_8171_call()
output = call_8172
func_8173 = relay.Function([], output)
mutated_mod['func_8173'] = func_8173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7184_call = mod.get_global_var('func_7184')
func_7185_call = mutated_mod.get_global_var('func_7185')
call_8185 = relay.TupleGetItem(func_7184_call(), 1)
call_8186 = relay.TupleGetItem(func_7185_call(), 1)
func_2957_call = mod.get_global_var('func_2957')
func_2960_call = mutated_mod.get_global_var('func_2960')
var_8247 = relay.var("var_8247", dtype = "int32", shape = ())#candidate|8247|()|var|int32
call_8246 = func_2957_call(relay.reshape(var_8247.astype('int32'), []))
call_8248 = func_2957_call(relay.reshape(var_8247.astype('int32'), []))
output = relay.Tuple([call_8185,call_8246,var_8247,])
output2 = relay.Tuple([call_8186,call_8248,var_8247,])
func_8249 = relay.Function([var_8247,], output)
mod['func_8249'] = func_8249
mod = relay.transform.InferType()(mod)
var_8250 = relay.var("var_8250", dtype = "int32", shape = ())#candidate|8250|()|var|int32
output = func_8249(var_8250)
func_8251 = relay.Function([var_8250], output)
mutated_mod['func_8251'] = func_8251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7777_call = mod.get_global_var('func_7777')
func_7778_call = mutated_mod.get_global_var('func_7778')
call_8256 = relay.TupleGetItem(func_7777_call(), 0)
call_8257 = relay.TupleGetItem(func_7778_call(), 0)
func_7395_call = mod.get_global_var('func_7395')
func_7397_call = mutated_mod.get_global_var('func_7397')
var_8263 = relay.var("var_8263", dtype = "int8", shape = (400,))#candidate|8263|(400,)|var|int8
call_8262 = relay.TupleGetItem(func_7395_call(relay.reshape(var_8263.astype('int8'), [400,])), 0)
call_8264 = relay.TupleGetItem(func_7397_call(relay.reshape(var_8263.astype('int8'), [400,])), 0)
func_3370_call = mod.get_global_var('func_3370')
func_3373_call = mutated_mod.get_global_var('func_3373')
var_8277 = relay.var("var_8277", dtype = "int32", shape = ())#candidate|8277|()|var|int32
const_8278 = relay.const([8,2,-7,-7,-5,-5,8,-5,3,7,-6,10,-9,-1,9,4,5,7,8,-8,3,-8,-5,-5,4,6,-2,-1,7,-3,5,4,-5,3,4,-6,7,7,8,4,-5,-1,7,10,-5,8,4,1,-4,-3,-6,-5,-3,-8,-6,3,3,10,8,-1,7,-5,3,8,-10,6,-10,-2,-3,5,3,1,-4,5,5,8,-5,-10,-1,-8,1,-9,-2,7,-9,5,10,9,10,-7,10,-4,-10,-5,-5,2,-4,-9,9,-2,-6,-2,6,2,5,-9,-7,-10,-7,6,10,8,-8,-10,2,-5,2,7,-9,2,-10,-9,-3,-4,7,-10,9,-9,-4,-1,-5,-5,6,-3,-10,-10,-5,7,-1,-6,-10,-3,6,-5,-5,7,5,-6,-3,-7,-5,1,-8,-8,9,7,-2,-8,4,-9,10,-10,-7,5,7,-2,8,2,4,-5,4,2,-2,-4,-6,9,8,-2,-6,-8,-10,5,6,4,-7,-4,-10,-5,-1,-3,2,4,1,-7,-4,2,-5,-1,-6,2,-3,2,-3,8,-8,10,10,9,1,-10,3,10,-1,-9,-6,-10,-7,2,3,-5,-10,-10,10,-4,7,7,-8,-8,-8,7,9,-2,-4,-8,6,-8,2,-7,-7,-5,-4,2,9,-10,6,2,-5,-4,1,-5,-7,1,1,2,-6,-2,-1,-2,-6,-9,10,-10,6,-5,7,-1,-5,4,10,-5,6,9,-4,8,-3,-4,8,1,9,-2,8,-1,-6,8,-4,4,-10,5,-2,-6,2,2,-4,-6,9,-9,1,-1,-4,5], dtype = "int32")#candidate|8278|(300,)|const|int32
call_8276 = relay.TupleGetItem(func_3370_call(relay.reshape(var_8277.astype('int32'), []), relay.reshape(const_8278.astype('int32'), [2, 15, 10]), ), 0)
call_8279 = relay.TupleGetItem(func_3373_call(relay.reshape(var_8277.astype('int32'), []), relay.reshape(const_8278.astype('int32'), [2, 15, 10]), ), 0)
output = relay.Tuple([call_8256,call_8262,var_8263,call_8276,var_8277,const_8278,])
output2 = relay.Tuple([call_8257,call_8264,var_8263,call_8279,var_8277,const_8278,])
func_8280 = relay.Function([var_8263,var_8277,], output)
mod['func_8280'] = func_8280
mod = relay.transform.InferType()(mod)
var_8281 = relay.var("var_8281", dtype = "int8", shape = (400,))#candidate|8281|(400,)|var|int8
var_8282 = relay.var("var_8282", dtype = "int32", shape = ())#candidate|8282|()|var|int32
output = func_8280(var_8281,var_8282,)
func_8283 = relay.Function([var_8281,var_8282,], output)
mutated_mod['func_8283'] = func_8283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7681_call = mod.get_global_var('func_7681')
func_7682_call = mutated_mod.get_global_var('func_7682')
call_8294 = relay.TupleGetItem(func_7681_call(), 0)
call_8295 = relay.TupleGetItem(func_7682_call(), 0)
func_1532_call = mod.get_global_var('func_1532')
func_1534_call = mutated_mod.get_global_var('func_1534')
var_8322 = relay.var("var_8322", dtype = "float32", shape = (1584,))#candidate|8322|(1584,)|var|float32
call_8321 = relay.TupleGetItem(func_1532_call(relay.reshape(var_8322.astype('float32'), [16, 9, 11])), 1)
call_8323 = relay.TupleGetItem(func_1534_call(relay.reshape(var_8322.astype('float32'), [16, 9, 11])), 1)
func_823_call = mod.get_global_var('func_823')
func_826_call = mutated_mod.get_global_var('func_826')
const_8337 = relay.const([2.848823,-4.019409,-6.507636,-5.315118,-3.457266,-6.344510,-5.975905,-8.302995,-5.813421,-6.425016,-2.716967,-1.584698,4.198489,-7.890155,3.282642,-8.740979,-1.579532,-2.816411,-1.187283,4.391052,-7.683901,-2.599382,-5.145763,7.747518,2.092958,0.762261,6.353163,9.353515,9.830234,5.274791,-2.984233,0.732617,-0.771264,0.333503,-2.846715,5.949720,-6.253340,-6.464010,-6.578257,4.545473,1.810197,4.948826,-5.678419,2.584834,0.375169,-6.699111,8.574012,-5.525118,8.433539,-6.763195,-1.197436,-0.889824,0.623041,-3.291578,4.008443,2.536459,-1.671080,7.177772,-8.160874,-6.841308,0.172065,5.151979,-8.466053,-0.078628,3.059838,-6.335115,-1.084578,-1.578741,5.753531,3.079540,-1.371303,4.393803,-7.069828,-2.512426,0.084217,-2.358245,4.745041,2.061883,7.280319,-1.777595,9.477728,4.060851,5.156216,9.848520,-0.858270,4.409189,-7.983292,0.606962,3.830371,6.452378,-7.216971,8.836005,5.705087,3.364651,-8.115992,5.426367,-6.237367,9.318282,-0.116782,-5.090135,-7.482171,2.593671,-9.260459,5.955008,-0.239533,2.519440,-0.348311,8.799083,6.795357,-0.712901,-3.952176,8.529165,-2.327458,-1.058688,-7.018680,5.544007,7.805399,9.005355,4.782851,1.710984,6.902822,-5.082926,-4.838124,7.421476,9.675010,0.214323,4.028175,-9.987581,-9.221166,-3.586484,-4.801271,9.914282,-0.042787,7.647238,7.919653,-5.017577,4.288161,-5.058053,-9.904899,-2.957991,6.152315,5.548090,-0.091377,8.190580,-2.012894,7.041746,6.348263,-5.885377,2.806424,-6.015625,9.842919,6.080847,1.409277,-3.014475,6.855616,4.360063,-2.090676,4.857370,3.567935,2.522829,-9.951735,-2.960884,4.401231,-2.467459,-2.825053,7.176609,8.552011,8.367744,-6.230916,-5.833830,-1.253291,0.614378,-7.647902,3.763287,1.258231,8.928012,-3.857702,8.487312,2.220460,-8.812040,-7.760198,8.467374,6.577198,3.138010,-8.271298,1.030370,6.285405,1.898500,-5.738640,2.140222,-5.200745,7.244712,-8.413847,-0.799721,-0.056684,-2.254045,2.775716,-5.169945,-2.190316,-2.679079,1.815609,0.357613,-4.214854,-7.366008,0.056315,-3.524713,6.906302,-7.716827,5.203303,2.046796,-6.907963,-5.094742,1.754223,-5.701513,-7.172389,-0.535485,-0.143194,9.819669,-5.676446,7.910226,3.571958,6.397596,-0.646965,6.225159,8.417656,9.960987,-2.827215,2.450687,7.606504,4.053042,-1.805086,4.353899,6.169921,-3.148885,2.940296,6.479487,7.105592,2.377644,4.914793,2.223081,6.890058,-5.214231,2.500420,8.661706,3.707609,-6.797371,-1.774484,-2.965342,-8.129624,8.390576,9.120114,4.225393,-8.249864,-0.574442,8.115097,-9.389778,-1.266396,-5.962014,-3.172628,-4.352249,-4.682675,7.042696,8.615259,-4.326433,-9.241667,4.576069,-2.048700,0.125928,1.615039,-6.498112,7.508439,4.307097,6.391695,0.389267,9.218518,0.865817,1.430571,-6.895446,6.140784,-6.957246,-0.609949,3.880764,-3.505072,7.709419,-1.003934,-8.369144,-2.626306,1.573688,7.829110,5.590737,9.450358,-1.854003,-0.701823,7.466461,9.309775,4.134835,1.248631,2.915673,5.788877,0.301859,-9.223877,-0.715817,2.902327,2.885855,-6.339999,6.469957,4.936508,-6.351531,-0.550762,0.687071,-0.152030,9.883218], dtype = "float32")#candidate|8337|(312,)|const|float32
call_8336 = relay.TupleGetItem(func_823_call(relay.reshape(const_8337.astype('float32'), [6, 4, 13])), 0)
call_8338 = relay.TupleGetItem(func_826_call(relay.reshape(const_8337.astype('float32'), [6, 4, 13])), 0)
func_7714_call = mod.get_global_var('func_7714')
func_7717_call = mutated_mod.get_global_var('func_7717')
call_8341 = relay.TupleGetItem(func_7714_call(relay.reshape(call_8294.astype('float32'), [3, 16, 4])), 0)
call_8342 = relay.TupleGetItem(func_7717_call(relay.reshape(call_8294.astype('float32'), [3, 16, 4])), 0)
output = relay.Tuple([call_8294,call_8321,var_8322,call_8336,const_8337,call_8341,])
output2 = relay.Tuple([call_8295,call_8323,var_8322,call_8338,const_8337,call_8342,])
func_8344 = relay.Function([var_8322,], output)
mod['func_8344'] = func_8344
mod = relay.transform.InferType()(mod)
mutated_mod['func_8344'] = func_8344
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8345 = relay.var("var_8345", dtype = "float32", shape = (1584,))#candidate|8345|(1584,)|var|float32
func_8344_call = mutated_mod.get_global_var('func_8344')
call_8346 = func_8344_call(var_8345)
output = call_8346
func_8347 = relay.Function([var_8345], output)
mutated_mod['func_8347'] = func_8347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7784_call = mod.get_global_var('func_7784')
func_7785_call = mutated_mod.get_global_var('func_7785')
call_8398 = func_7784_call()
call_8399 = func_7784_call()
func_7617_call = mod.get_global_var('func_7617')
func_7619_call = mutated_mod.get_global_var('func_7619')
call_8402 = func_7617_call()
call_8403 = func_7617_call()
func_7784_call = mod.get_global_var('func_7784')
func_7785_call = mutated_mod.get_global_var('func_7785')
call_8406 = func_7784_call()
call_8407 = func_7784_call()
func_2875_call = mod.get_global_var('func_2875')
func_2880_call = mutated_mod.get_global_var('func_2880')
const_8414 = relay.const([5.578012,-7.244327,3.356719,-0.111574,9.706425], dtype = "float32")#candidate|8414|(5,)|const|float32
const_8415 = relay.const([[6,-1,9,-3,-6,-9,3,2,5,-7,2,-4,5,3,-1,4,-10,-10,-4,1,8,-8,-4,-8,10,7,9,2,-5,3,-5,5,1,-4,2,7,-7,-3,-5,-1,-6,10,8,-7,-8,10,7,-9,-1,-5,2,3,5,2,6,-9,-2,8,-1,-2,7,-2,-7,5,8,1,10,-9,9,-8,-5,-7,-6,-6,2,-7,9,-3,2,4,-6,10,-10,-2,10,-4,-7,-1,-8,9,4,8,5,10,7,-9,-3,-10,8,2,2,-3,10,1,1,-9,5,-8,9,10,-6,-1,-6,1,-3,-3,8,-1,2,-8,1,5,5,6,5,-9,5,-9,-9,4,-1,6,-3,-10,8,-7,5,6,-7,-3,-10,-3,-2,-5,-1,4,8,-5,-6,7,5,6,-7,-2,-5,-9,7,10,-4,-2,-8,9,8,-8,-1,10,-10,-7,-9,3,6,-10,4,6,-7,-5,5,-10,7,7,4,5,-8,-8,3,-2,3,-6,2,-7,10,-3,-5,10,-2,2,-6,7,-1,-10],[8,7,-4,10,-5,-6,-6,-10,3,-3,-6,-8,-3,-8,-1,1,2,1,-1,3,-6,8,9,3,7,6,10,-10,10,7,8,-9,6,-8,10,10,2,10,-8,-5,8,10,7,2,8,9,7,-8,-9,-9,-10,7,-9,-5,-1,-3,2,-8,5,-8,-1,-9,-4,-1,-3,-2,-1,5,5,8,10,6,7,3,-5,-5,6,5,2,1,-8,10,-1,9,5,-3,-1,7,4,-9,10,5,9,6,-8,1,-9,7,-8,-7,4,-9,8,2,-5,10,7,1,-7,-1,5,5,5,-7,8,7,3,-8,10,-4,-5,2,2,-9,-4,8,-4,-5,-4,-3,6,6,-4,2,-6,-2,-3,-2,2,5,-4,5,-7,9,1,-4,2,8,-4,-1,-7,1,9,-4,-5,-5,4,-6,-10,-10,7,-10,4,2,-6,-8,7,-4,3,5,9,-6,10,1,7,1,-7,-10,8,-1,-6,-9,10,-9,-1,10,6,2,8,-8,-5,8,1,-5,1,-3,-6,-1,-6,-9]], dtype = "int8")#candidate|8415|(2, 200)|const|int8
const_8416 = relay.const([7.137705,-6.279517,7.378586,-5.829134,2.102374,-8.317467,-0.990583,-3.618840,3.444581,-4.561568,4.810261,-3.918765,2.610854,4.238061,-5.746197,0.697839,-0.949197,-4.783727,8.092356,2.172580,7.405111,-8.698276,-6.784025,-0.329058,0.811061,8.346887,1.341337,-2.803140,-0.152017,1.196256,-6.661080,-6.784993,-1.792350,-3.835160,-1.130266,-6.860164,-3.724107,2.164440,4.275146,-6.702190,5.901092,1.521891,-2.562857,0.982245,3.241359,2.811188,3.299863,8.878594,4.534021,7.971270,6.616630,0.575708,-2.975697,-2.058075,-3.301632,5.143176,-4.268718,-1.046989,-2.233723,2.239840,-5.304966,8.691310,6.368480,-6.000537,-5.143730,-5.396085,3.823183,0.085226,-2.295028,-0.078498,4.902218,-5.149357,-2.792176,-5.994205,-2.666301,0.016751,-1.419362,-3.130340,9.620483,-5.942738,-4.032433,6.819788,0.720166,-2.688582,-6.799892,-4.644656,-4.181444,0.491148,-3.166789,1.908546,2.661371,4.530767,1.182583,4.620698,-7.833377,-9.700718,-2.886526,2.992801,6.098657,-5.807678,-9.049541,8.257051,8.389793,8.421590,-0.205571,4.492269,4.606707,7.703261,-9.620449,5.092788,8.879394,-0.282628,3.644594,1.214403,1.313230,-1.205572,-6.245745,-6.996084,-0.045725,3.471670,-4.993762,6.267697,-0.815011,-2.551220,7.680014,5.342691,1.206134,8.910762,2.551640,8.144051,-6.439708,-4.182478,5.065076,-2.244513,9.840778,-6.565439,-3.189580,0.044055,6.042850,-9.380007,-5.670710,5.112888,8.985382,-6.215002,2.018110,4.366720,-4.491093,-0.094370,-4.252748,9.367905,1.007107,9.114769,6.434476,-3.018684,-2.018478,-5.482257,-3.821622,-6.258640,-6.447776,8.625028,1.453899,4.511698,-4.379254,6.017578,-5.059004,-7.797456,2.740530,-3.914726,4.078205,3.416790,2.274946,-5.655858,4.928792,1.101523,9.684413,8.148609,4.365329,-1.068584,-7.604769,-2.796997,2.981632,-0.303885,-4.408099,9.297631,5.329247,9.489494,-5.337231,2.815418,-6.424810,4.063201,4.101948,-8.031786,8.439193,-7.550578,3.795458,9.076276,-8.797146,6.920438,-6.962119,-3.396959,7.858030,-2.262757,5.918987,8.605230,-6.767353,9.008261,7.854105,-2.159987,2.036910,-3.005954,1.687962,5.143356,-3.748261,-3.203623,8.881631,-0.782913,-9.003497,8.777836,-6.745795,1.681720,8.998780,-8.289238,0.516392,-8.473326,-9.179643,7.221134,-6.205769,2.182900,4.995851,2.834282,-8.667689,3.042389,-0.686144,-7.237371,2.359180,9.581369,-8.384178,2.140228,-2.779304,-3.614015,-8.467510,-2.865330,-4.185601,3.160674,3.248634,4.964265,4.232942,-4.381108,8.882429,-3.211981,-6.242155,6.229384,-8.952603,-6.371229,-2.296572,1.095979,-5.455014,6.118166,7.391462,-3.444680,1.668869,-6.439901,-9.124466,-7.319398,4.827471,-4.074434,-4.894449,-7.609756,-2.908419,7.301663,-0.530924,-5.432661,-8.610701,7.204725,-3.554201,-2.249717,0.943415,-9.532305,2.049532,9.108664,-7.251218,9.885841,-1.378625,0.972690,-3.113037,9.525108,8.612110,-7.253102,-7.420478,1.258772,0.024412,-7.918988,-1.831005,1.366609,-0.394783,-1.448416,-0.016756,0.779749,4.527557,-8.661836,-7.901842,-1.910436,1.825904,2.548067,0.091544,-0.027417,7.164980,5.721060,-6.184368,2.391850,-6.763014,5.120613,1.884425,2.113076,4.050030,5.493155,4.241937,2.531697,-7.454541,-0.821500,3.187283,-3.107642,-2.287167,-0.096316,-3.954033,7.340766,4.935665,-0.516250,6.318475,2.520096,7.836715,-7.560816,5.014585,1.099351,4.194512,1.419625,-7.723048,9.864042,6.051975,0.170601,2.821180,-4.182786,7.027350,-7.128394,-5.359277,9.398943,-8.191279,8.089891,6.706156,8.360718,-1.301813,7.329746,-5.512586,6.478057,-7.305690,-7.660969,0.355995,-7.753711,1.614371,-1.095445,2.503364,8.978757,8.170610,9.748296,1.243559,7.994264,9.006793,-8.348270,4.649926,4.024204,7.937903,-0.544625,1.870609,1.119869,1.427270,-5.202335,-2.226292,-6.004379,-4.186412,-7.737771,-9.962306,-0.154754,0.702511,0.378847,-7.724524,-2.193074,-7.565051,4.748016,-0.250900,-9.973924,-2.552648,-4.501556,-9.824802,-1.747823,-6.405629,-6.482308,7.595293,-1.819202,-6.983533,8.706257,-7.826569,-7.407862,-5.248551,-1.471307,-0.898900,-3.476900,-7.744926,0.239612,3.539709,3.372349,8.976623,-6.352153,-1.681668,3.492692,5.020021,-5.239431,-1.661644,-7.244456,-7.107347,8.629861,-7.724778,1.632086,-9.184807,4.150182,-1.917207,1.605105,2.355839,-7.810640,-0.525434,-5.524078,1.123289,-5.754955,3.078905,-8.642307,6.850500,-6.453643,-3.427176,-1.558679,3.440109,-9.467332,8.969695,4.350323,-1.363712,-2.129566,8.297415,-3.802328,6.561411,-3.664872,9.753454,-6.755932,5.293539,-2.107447,-3.425789,-1.167602,9.733031,-1.768352,9.934450,5.212622,9.363940,-3.682330,-8.383628,8.265739], dtype = "float32")#candidate|8416|(462,)|const|float32
call_8413 = relay.TupleGetItem(func_2875_call(relay.reshape(const_8414.astype('float32'), [1, 1, 5]), relay.reshape(const_8415.astype('int8'), [400,]), relay.reshape(const_8416.astype('float32'), [462,]), ), 5)
call_8417 = relay.TupleGetItem(func_2880_call(relay.reshape(const_8414.astype('float32'), [1, 1, 5]), relay.reshape(const_8415.astype('int8'), [400,]), relay.reshape(const_8416.astype('float32'), [462,]), ), 5)
output = relay.Tuple([call_8398,call_8402,call_8406,call_8413,const_8414,const_8415,const_8416,])
output2 = relay.Tuple([call_8399,call_8403,call_8407,call_8417,const_8414,const_8415,const_8416,])
func_8419 = relay.Function([], output)
mod['func_8419'] = func_8419
mod = relay.transform.InferType()(mod)
output = func_8419()
func_8420 = relay.Function([], output)
mutated_mod['func_8420'] = func_8420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7118_call = mod.get_global_var('func_7118')
func_7119_call = mutated_mod.get_global_var('func_7119')
call_8424 = relay.TupleGetItem(func_7118_call(), 0)
call_8425 = relay.TupleGetItem(func_7119_call(), 0)
output = call_8424
output2 = call_8425
func_8427 = relay.Function([], output)
mod['func_8427'] = func_8427
mod = relay.transform.InferType()(mod)
mutated_mod['func_8427'] = func_8427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8427_call = mutated_mod.get_global_var('func_8427')
call_8428 = func_8427_call()
output = call_8428
func_8429 = relay.Function([], output)
mutated_mod['func_8429'] = func_8429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8038_call = mod.get_global_var('func_8038')
func_8039_call = mutated_mod.get_global_var('func_8039')
call_8480 = relay.TupleGetItem(func_8038_call(), 0)
call_8481 = relay.TupleGetItem(func_8039_call(), 0)
func_8038_call = mod.get_global_var('func_8038')
func_8039_call = mutated_mod.get_global_var('func_8039')
call_8483 = relay.TupleGetItem(func_8038_call(), 0)
call_8484 = relay.TupleGetItem(func_8039_call(), 0)
output = relay.Tuple([call_8480,call_8483,])
output2 = relay.Tuple([call_8481,call_8484,])
func_8492 = relay.Function([], output)
mod['func_8492'] = func_8492
mod = relay.transform.InferType()(mod)
output = func_8492()
func_8493 = relay.Function([], output)
mutated_mod['func_8493'] = func_8493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7681_call = mod.get_global_var('func_7681')
func_7682_call = mutated_mod.get_global_var('func_7682')
call_8508 = relay.TupleGetItem(func_7681_call(), 0)
call_8509 = relay.TupleGetItem(func_7682_call(), 0)
func_8427_call = mod.get_global_var('func_8427')
func_8429_call = mutated_mod.get_global_var('func_8429')
call_8523 = func_8427_call()
call_8524 = func_8427_call()
output = relay.Tuple([call_8508,call_8523,])
output2 = relay.Tuple([call_8509,call_8524,])
func_8548 = relay.Function([], output)
mod['func_8548'] = func_8548
mod = relay.transform.InferType()(mod)
output = func_8548()
func_8549 = relay.Function([], output)
mutated_mod['func_8549'] = func_8549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7093_call = mod.get_global_var('func_7093')
func_7095_call = mutated_mod.get_global_var('func_7095')
call_8566 = relay.TupleGetItem(func_7093_call(), 0)
call_8567 = relay.TupleGetItem(func_7095_call(), 0)
output = relay.Tuple([call_8566,])
output2 = relay.Tuple([call_8567,])
func_8568 = relay.Function([], output)
mod['func_8568'] = func_8568
mod = relay.transform.InferType()(mod)
mutated_mod['func_8568'] = func_8568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8568_call = mutated_mod.get_global_var('func_8568')
call_8569 = func_8568_call()
output = call_8569
func_8570 = relay.Function([], output)
mutated_mod['func_8570'] = func_8570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8492_call = mod.get_global_var('func_8492')
func_8493_call = mutated_mod.get_global_var('func_8493')
call_8576 = relay.TupleGetItem(func_8492_call(), 1)
call_8577 = relay.TupleGetItem(func_8493_call(), 1)
output = relay.Tuple([call_8576,])
output2 = relay.Tuple([call_8577,])
func_8578 = relay.Function([], output)
mod['func_8578'] = func_8578
mod = relay.transform.InferType()(mod)
mutated_mod['func_8578'] = func_8578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8578_call = mutated_mod.get_global_var('func_8578')
call_8579 = func_8578_call()
output = call_8579
func_8580 = relay.Function([], output)
mutated_mod['func_8580'] = func_8580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7930_call = mod.get_global_var('func_7930')
func_7931_call = mutated_mod.get_global_var('func_7931')
call_8620 = func_7930_call()
call_8621 = func_7930_call()
output = call_8620
output2 = call_8621
func_8627 = relay.Function([], output)
mod['func_8627'] = func_8627
mod = relay.transform.InferType()(mod)
output = func_8627()
func_8628 = relay.Function([], output)
mutated_mod['func_8628'] = func_8628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7513_call = mod.get_global_var('func_7513')
func_7515_call = mutated_mod.get_global_var('func_7515')
call_8792 = relay.TupleGetItem(func_7513_call(), 0)
call_8793 = relay.TupleGetItem(func_7515_call(), 0)
func_8280_call = mod.get_global_var('func_8280')
func_8283_call = mutated_mod.get_global_var('func_8283')
var_8801 = relay.var("var_8801", dtype = "int8", shape = (400,))#candidate|8801|(400,)|var|int8
var_8802 = relay.var("var_8802", dtype = "int32", shape = ())#candidate|8802|()|var|int32
call_8800 = relay.TupleGetItem(func_8280_call(relay.reshape(var_8801.astype('int8'), [400,]), relay.reshape(var_8802.astype('int32'), []), ), 2)
call_8803 = relay.TupleGetItem(func_8283_call(relay.reshape(var_8801.astype('int8'), [400,]), relay.reshape(var_8802.astype('int32'), []), ), 2)
func_2459_call = mod.get_global_var('func_2459')
func_2463_call = mutated_mod.get_global_var('func_2463')
const_8808 = relay.const([0.096766,-8.533728,1.700854,0.855826,1.426269,3.420243,5.399291,6.204314,0.456120,-1.125297,5.624089,7.119114,-8.561787,-3.023554,-6.877249,5.711225,-6.558236,8.657599,-7.127487,-4.358923,7.096820,-6.249824,-8.714987,6.911913,-6.639971,-6.592389,-0.790310,-8.232108,-3.872460,-0.605157,-6.902680,-8.523016,-1.426873,-3.626815,3.490026,-1.397241,-6.838992,6.294886,-9.956308,-6.141475,-3.281865,-6.986741,5.709934,4.759133,-9.874834,-4.297808,8.203846,0.178708,-0.946812,-2.029443,-0.409769,2.233282,7.883721,-6.693960,7.895682,8.299592,1.278591,-5.153797,-9.804580,9.257220,-0.829290,9.271138,-3.721831,9.696219,-5.205561,-0.076825,-4.141739,0.667710,-0.332809,-0.160112,6.300681,9.979921,2.210506,4.953037,6.406719,-8.930501,-7.968677,5.938017,-0.061496,7.342756,-2.292132,-1.480664,6.331804,1.917860,9.869541,-7.064334,3.057497,2.786660,1.499631,-9.609165,5.821551,-7.647364,-8.576774,2.775671,-9.988916,4.060541,-9.880362,-1.820850,9.662112,-5.518697,9.333068,8.261007,-9.114590,4.523467,2.257168,8.174370,7.874193,-6.600258,0.978360,-0.153593,3.664839,2.982960,9.569372,6.785044,7.288711,1.031536,-2.679518,9.109041,-2.634503,3.058609,-8.823697,-1.714495,-7.075886,4.325102,-9.382745,-7.059138,9.356420,-5.681269,3.144240,9.109889,2.578445,6.883926,-1.443996,-5.110306,1.149118,-8.589408,-4.480794,1.719646,-0.339677,4.608339,8.989327,-2.272958,4.462834,4.622917,-2.683566,0.691460,-8.400705,-2.618935,1.835061,8.388250,-7.028372,-5.910690,-1.222212,7.030558,-9.818528,-8.260174,-4.501055,-2.405391,7.419893,-8.029915,-2.533473,8.193549,-3.487927,7.362116,-4.036209,2.381883,6.589765,-4.129734,7.541712,-2.985026,-3.264921,6.601985,3.381599,-9.683690,-3.323011,-8.686738,-0.247389,8.448117,3.923755,-0.132883,9.006794,-7.876585,1.609137,-7.424089,3.061173,-9.112913,7.896320,-0.696137,7.296270,8.294381,-4.608831,-3.434906,2.350513,4.019976,2.804991,2.427414,8.449738,1.997961,-4.605442,-4.328603,-2.511242,9.577179,-0.971658,-3.238562,-6.996544,4.299071,5.040676,5.080251,4.685447,-9.050973,-3.923443,2.856040,3.380757,-8.882664,3.853085,6.076760,9.004720,2.583111,4.438153,4.849305,-0.394301,-9.678387,-1.755029,-0.523814,-1.983657,-9.307956,-9.272117,4.600228,-0.598877,5.740665,-8.169256,0.042442,6.269846,9.254174,-7.938747,-8.859156,-2.811295,7.555272,-7.506720,-9.804512,-6.688947,5.360163,0.759124,-3.544000,-8.766147,6.954047,0.180945,-9.860253,8.706702,9.827097,-5.740367,-2.777604,-5.406973,-7.681831,-8.653852,1.873564,3.035747,4.931761,5.143388,3.453102,-2.787691,-2.268402,7.489368,-9.850479,2.677152,4.098100,-4.753082,-6.151330,6.527756,6.136261,5.421346,-1.512601,-9.461435,8.132111,0.229539,4.401517,7.461514,7.920798,5.280880,-7.181353,2.434497,-0.049944,6.428076,-8.592092,4.260464,-2.372493,9.670310,-4.543856,5.757628,6.408097,-7.570982,-3.765818,5.449317,-4.201397,9.514718,4.362636,-2.381318,-5.043175,-6.114175,-8.640870,9.380524,-1.840351,8.786187,-3.860889,5.328943,-2.802020,-3.292682,3.186019,-1.977658,-4.567572,-1.082724,6.393734,-7.725009,2.011092,-7.503643,-0.013368,-2.266119,-2.571636,4.135014,-7.624425,1.701353,-3.547750,9.655055,5.026038,-2.666391,-1.841927,7.128495,4.316246,1.337294,-6.443527,7.154412,7.884178,6.667258,0.027454,-2.665642,4.776201,-7.409494,-7.993164,-9.667623,-7.690656,6.076532,8.095488,-9.275268,-6.913226,4.080281,0.216017,-2.529842,2.128969,4.957204,-8.076790,-7.982026,2.199418,-3.841794,6.708554,0.119777,7.136299,-4.900859,9.680354,9.830794,-2.995881,-4.858791,4.570530,7.947185,-7.496268,-6.508272,-8.614164,3.044379,3.902803,4.045198,-9.468484,-7.932057,-6.668325,-6.887638,1.453907,3.372887,5.283519,-0.256576,-9.554507,1.078324,-3.966645,-0.494670,-2.741932,-1.879854,2.379884,-8.216808,-8.198082,3.291784,5.606644,-0.204476,4.953383,7.731555,7.651060,-3.882270,9.605987,-4.214259,0.868884,-8.983123,-0.616050,8.856549,4.956835,9.608165,1.361819,-8.137884,8.205445,9.216046,-3.438814,9.885141,-5.949465,-9.969446,9.284923,6.330946,9.614012,-3.141373,-4.765085,4.156306,-1.307313,4.783546,3.488392,-6.628096,-8.856159,3.794032,-0.449625,-5.865057,-8.079478,-3.222613,-1.163507,-3.346362,-1.006100,9.846883,9.199635,-7.489970,-8.543055,8.024493,7.078787,-2.832271,9.925448,-3.765834,-1.505935,0.030714,9.342760,-8.158174,6.733181,1.251313,5.617250,8.743589,2.488587,-0.477767,3.006397,4.350410,-3.087281,9.127332,-2.074295,0.513925,-7.836960,2.386576,2.120962,1.654879,9.194622,-9.385321,-7.820814,6.023174,6.471998,8.282584,2.451318,3.340647,-3.599495,1.034620,-0.720171,4.026943,3.283217,2.671284,-8.875745,-9.524671,8.072938,-1.507476,-8.002002,-7.644110,-0.023895,-3.537557,-8.916184,1.472265,-7.224168,2.561147,1.971627,-4.780777,-8.706666,3.924919,-0.890232,-6.514648,-1.603358,5.688905,-6.906924,-8.724158,6.656672,-3.469193,-3.560274,-4.159375,-6.848951,-4.005170,-6.795145,4.654707,-7.062050,3.851011,-8.103545,-9.559429,4.064217,2.812785,3.658186,-6.674889,-5.776097,9.236938,-0.299528,-1.092690,5.316300,-9.806953,8.741929,-7.932999,0.932092,-6.763651,2.764618,-8.221065,2.177763,-8.238796,-9.695869,1.885952,4.859744,4.180871,1.938966,0.598325,-4.757890,-4.003577,2.800555,7.228735,3.391193,-5.617026,4.708906,7.131011,-2.155514,3.029238,-2.683197,3.820478,7.046748,0.905677,-4.627366,-1.740414,-5.615077,-1.772641,9.578707,-1.182985,-3.983071,-4.465309,-8.004839,-3.258733,1.085499,8.485039,-9.246978,-8.679732,4.668667,-0.646133,-5.321992,5.703823,-8.298900,-9.616087,9.336500,-5.507338,2.670365,2.827432,-4.867124,-2.895052,-0.390806,7.972012,-6.357962,-7.005028,5.843135,-5.470636,2.354784,-7.114954,1.687083,-1.999031,-0.281644,-9.116734,1.676717,3.652816,4.578208,5.740904,4.576200,9.186904,-2.286962,3.374593,-4.249116,1.345690,7.494254,7.730011,-4.312273,-5.667680,-0.978945,-2.652234,-8.342701,0.742418,9.225219,6.739396,2.020798,0.230607,7.690412,7.467875,-9.931286,7.726060,8.438762,-3.279883,-8.946728,-1.375327,-0.897463,-2.775751,-4.858387,-0.462895,2.930944,-0.756192,-3.933650,-2.651397,-1.243764,-5.385697,9.792166,7.204008,-9.330289,-8.767633,-5.865440,-0.656103,-5.206119,2.056106,-1.300315,-6.892570,-2.302172,3.013017,-9.358701,-3.902703,0.070418,2.490725,-6.855908,9.084491,9.152232,-3.366261,-7.977304,-4.479326,0.629494,9.757835,8.902013,2.055118,-3.133405,2.333848,4.818426,-6.310526,-5.472095,0.261714,-0.103089,0.446863,-5.453365,5.405607,-2.366625,7.011134,9.540451,-5.058090,0.860426,-2.968356,-7.516639,-6.936626,6.988281,-5.445597,7.816135,0.103088,8.125083,6.420436,-7.022148,-4.167479,-5.448457,-2.114888,8.601562,-6.347278,9.382377,-4.294220,-8.698310,2.677436,5.532143,4.424748,2.788292,-8.486728,-7.108239,-5.314207,-7.502526,6.343170,1.922381,7.510370,-5.459048,4.526873,-8.599170,9.996403,-1.499653,1.364191,8.896228,-7.540207,4.427530,7.171004,-7.337506,-2.435072,-1.898231,3.793940,6.371179,-3.246072,3.201097,0.708005,-9.209994,-5.374995,4.624561,-9.391811,2.470969,3.622425,-6.207253,-6.333805,9.474217,8.459594,-6.217828,8.954630,3.893892,-3.151854,2.863127,7.665206,-7.448416,-3.367024,2.007561,-9.000899,-9.013469,5.601565,-1.247984,8.182816,-2.720463,-1.625613,-4.926589,-6.323514,8.550082,-9.307219,2.631420,-1.903200,7.922232,7.218955,-0.790870,6.769432,-8.637292,0.887556,-5.852816,-6.401610,6.214264,-3.350054,-5.119113,-6.410119,9.042605,-4.638263,-4.572351,-1.719453,9.376417,-6.773725,-2.323778,-5.196537,-5.586951,8.170685,6.977984,6.548188,-5.801152,-2.914407,-6.771193,6.059968,2.375245,-5.676369,-7.117101,5.181057,1.283502,1.027514,-9.972404,-2.020225,1.947322,8.756169,1.877310,-7.111890,-9.507434,-2.861414,5.085190,-8.071325,2.538422,-4.161956,-6.033440,2.090269,0.069043,7.693344,6.123523,-3.958913,1.315709,0.473142,-9.449294,2.692718,-2.784808,7.527142,8.232992,-8.735965,7.096924,-7.882261,-4.279638,4.198086,6.605926,4.132068,-0.422056,8.494602,-4.702624,-5.997856,-2.623710,0.627220,9.896489,-5.563017,6.120766,1.755550,5.275223,-5.236746,5.972552,1.909693,-7.437343,5.308131,-4.233891,-8.904454,8.341279,5.975630,-1.186910,-2.299742,-6.047541,-5.908218,1.358434,-0.069183,-0.657867,6.307717,-7.164454,-1.517171,6.827799,5.210556,-5.617432,-1.230985,-9.023649,-2.790061,8.252208,-7.414281,1.812773,7.391780,-7.838523,-3.190184,-0.464956,-6.110504,-2.778256,6.946477,9.999463,-8.997220,-6.995362,0.907288,-3.948214,-2.855653,3.209587,3.791573,9.563216,1.799115,-8.156420,-6.954061,7.392027,3.013604,9.066799,-8.875946,4.742634,6.427255,1.669218,-2.338770,-0.153724,8.363523,8.771650,-6.091034,3.170064,-9.543566,1.629845,-7.411432,-1.089469,9.274970,-0.203902,-7.991675,-3.829454,-5.497520,-5.796972,8.841332,8.132527,-7.374398,-9.648124,8.813969,1.627741,1.498546,8.483694,3.294730,-4.104089,6.270991,-2.779947,-7.377339,3.841047,5.005232,-7.592234,-7.675114,0.767515,-7.120247,-0.053941,-2.980732,-6.760169,-3.481489,0.891414,0.077709,-0.082995,8.109409,-5.694018,8.577809,-4.289140,4.010451,-1.982640,-9.584538,3.094666,5.465878,-5.324649,1.387987,6.654629,-2.904852,5.920653,-5.058194,9.136208,1.641709,-0.008218,9.257784,2.750348,4.094979,5.512637,3.220523,-5.830122,-1.916274,-7.015814,5.579616,3.764534,2.500516,9.647726,9.034371,9.465039,-2.882305,0.215321,-5.530476,7.432771,-5.658457,2.963800,4.305845,-2.760279,-5.810912,0.264951,8.642590,-7.220003,1.890568,-5.403510,-3.372351,8.990500,5.019586,-2.808582,8.577514,4.920718,-3.459519,-2.279652,1.285193,2.966624,8.593177,2.636997,-4.503078,5.698795,-9.735150,-8.026404,8.482012,3.814500,-0.869753,-9.174314,2.961211,-7.991648,-1.763724,4.609717,1.504400,-8.428982,5.128577,7.234646,7.621120,-3.010041,3.692354,-8.868144,-9.191632,0.485999,9.388564,7.465838,-8.846879,4.914155,-4.302342,-6.519163,6.451076,-2.276171,-8.983315,-1.750389,5.824019,9.060922,6.321077,0.230492,-5.897759,3.239752,2.669026,-7.198190,-0.977302,-0.134604,8.675371,-9.227492,0.665843,4.199072,6.301941,3.021325,-5.306549,4.088107,-8.804126,-8.270787,7.880689,3.455414,-8.291611,-3.991229,2.689506,6.801843,1.566675,6.853607,-9.629903,3.749254,8.315166,-7.288394,6.108087,6.153530,5.507148,-0.282487,3.551059,7.564323,-6.644483,-7.168221,-5.812827,-9.072344,-3.607922,9.248285,-7.055349,-4.706904,8.131195,-9.182856,-1.985398,4.068526,4.951720,-3.150765], dtype = "float32")#candidate|8808|(1056,)|const|float32
call_8807 = relay.TupleGetItem(func_2459_call(relay.reshape(const_8808.astype('float32'), [11, 12, 8]), relay.reshape(var_8801.astype('int8'), [2, 200]), ), 1)
call_8809 = relay.TupleGetItem(func_2463_call(relay.reshape(const_8808.astype('float32'), [11, 12, 8]), relay.reshape(var_8801.astype('int8'), [2, 200]), ), 1)
output = relay.Tuple([call_8792,call_8800,var_8801,var_8802,call_8807,const_8808,])
output2 = relay.Tuple([call_8793,call_8803,var_8801,var_8802,call_8809,const_8808,])
func_8813 = relay.Function([var_8801,var_8802,], output)
mod['func_8813'] = func_8813
mod = relay.transform.InferType()(mod)
var_8814 = relay.var("var_8814", dtype = "int8", shape = (400,))#candidate|8814|(400,)|var|int8
var_8815 = relay.var("var_8815", dtype = "int32", shape = ())#candidate|8815|()|var|int32
output = func_8813(var_8814,var_8815,)
func_8816 = relay.Function([var_8814,var_8815,], output)
mutated_mod['func_8816'] = func_8816
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8847 = relay.const([[[-8.233491,-2.486237,1.112564,-9.857190,-4.567036,9.603386,3.362666,5.338457,0.750583,2.197026,9.080410],[-6.816642,7.097412,-4.898788,7.789451,-4.715967,-9.010557,-5.915276,-2.876892,-7.618932,5.883042,3.885346],[6.095210,-6.883541,2.124948,-1.014700,2.708877,-1.007027,7.794723,7.317795,-6.593860,-7.015086,-7.727579],[-3.458764,5.156528,0.408151,8.188019,-2.586442,-3.478000,6.958041,-4.013091,-3.114702,-8.513858,-5.771901],[9.943823,-8.917002,-6.107486,-5.483985,4.811967,7.205410,1.124066,-4.921286,-2.222496,-9.590926,1.165733],[-2.037933,0.316663,5.912417,0.803296,-0.706366,7.765577,-2.551446,2.387579,0.555661,-3.537929,-6.258729],[8.814219,-4.173333,2.675484,-7.748075,-8.961747,-4.263187,5.803604,4.614373,-7.187883,5.400035,9.658631],[6.664551,0.441438,0.515637,0.870535,0.464774,-3.397390,-1.205336,-0.204937,-4.326692,4.454760,1.245298],[-4.859819,7.921825,-3.441533,3.857277,9.764086,-3.546015,3.291233,-6.338157,3.674555,8.926625,5.596964],[2.494624,8.656497,-8.375991,1.479093,7.721818,-6.625639,-8.475153,-5.090149,-5.472209,-2.013548,-3.345019],[7.536506,-6.493254,-9.980621,-4.167971,-8.135716,-5.194165,-1.863060,-2.821816,-3.069622,4.648683,9.069118],[8.788043,8.884111,0.620436,-6.976463,2.345923,-6.066800,4.743890,-7.163771,-6.376373,2.766960,-8.404906],[7.285324,1.286312,-3.068794,-6.422395,-5.231745,6.783644,-3.662547,4.409227,-8.117579,-8.769679,3.313069],[-9.998524,3.492668,-3.496473,4.648888,-4.513380,4.882188,-8.826040,0.772345,9.317780,-1.661574,2.401078]],[[1.583886,1.548346,-4.760584,-7.443905,9.800049,0.217484,9.380537,-7.178632,-7.458031,6.140979,-9.807853],[9.791311,8.886117,-5.722595,-9.381262,-5.649876,-9.126870,7.204159,9.477900,-0.811162,-1.553980,7.860592],[1.160610,-0.376437,7.461635,-6.368673,8.238031,6.998025,-0.378044,-4.939542,9.882146,2.413511,0.953827],[-4.455202,-1.781633,2.878618,-2.529332,0.830135,-7.006619,2.498779,1.093959,-4.420830,-0.399730,8.031527],[0.362052,6.520346,-3.006031,-4.198048,7.268388,-6.146042,-7.626978,5.311684,3.700782,-2.021718,-2.928285],[5.857249,9.941924,4.651976,7.233682,7.647837,-0.191093,7.233046,9.707883,-9.143956,6.035193,-7.542262],[1.354769,-9.716997,-5.363749,-7.371642,1.558241,1.288706,0.224721,-3.232037,3.984214,6.135433,-3.799443],[3.546040,1.787337,-5.148010,-6.869835,-7.193752,-1.080557,-7.556375,4.666611,-0.387225,-9.196426,-4.215224],[-0.859021,-4.235891,-5.344985,1.275605,4.585869,-5.461244,4.389434,9.160030,8.261948,2.827889,-9.954644],[6.645492,-1.829897,-3.609287,2.329554,8.228640,0.541311,4.252984,0.962918,-5.824266,8.578181,6.793815],[-5.211861,3.674429,-2.732354,5.877751,-7.401674,7.166829,-9.979036,-2.296186,-3.942901,4.200008,1.202497],[5.927927,-3.298900,6.131914,-1.576264,-5.922809,1.432859,-5.902076,-9.869891,2.529442,-0.695368,2.105935],[-1.847316,-4.492276,1.341991,3.623573,0.392078,-7.400173,-9.775183,0.511166,-9.598869,6.475224,9.703034],[-8.460859,-3.339704,7.363292,-1.142696,9.647790,-2.692236,7.574256,-4.132657,-9.645805,1.026947,9.375553]],[[6.072005,-3.443707,-9.581742,3.076314,7.864575,8.686394,7.755864,0.020632,1.847298,9.031664,-2.497250],[-7.992968,5.696825,-5.419625,5.729882,-7.864447,2.505739,-6.946623,9.918540,0.368875,2.010525,-4.464246],[9.544346,-8.978257,-4.665205,-4.199195,-9.119782,7.614362,-1.472481,-2.406274,4.828095,-6.575227,8.298856],[-2.422368,-1.677018,-0.871910,-0.539527,6.500523,-7.004992,0.536355,2.469874,1.772757,-4.882200,1.811602],[1.360786,-9.999601,-8.227201,5.921031,5.734120,-3.048759,5.371943,-0.656529,0.223464,-2.027951,7.697327],[8.551996,5.812142,3.875790,1.483524,-0.163637,-0.992034,-1.567348,6.386930,6.650017,5.079117,9.463995],[-2.445764,4.687139,1.828303,8.969090,8.597741,1.272328,6.951974,-3.880552,8.976638,1.683313,2.197202],[-5.060695,9.549215,7.842710,-4.034682,-1.353859,-3.828026,-6.066138,6.499881,8.010734,-3.808407,8.440761],[6.939576,8.879134,6.017977,-1.421980,-1.048445,2.059192,-6.161377,-2.752151,1.811356,1.333014,-9.271412],[0.459947,1.129013,-1.437926,7.880570,-8.003024,6.945847,5.487842,-5.564171,5.025491,8.121731,9.117632],[-9.899110,-2.695828,-9.902611,9.616460,0.169120,-2.670726,6.666415,0.747200,-4.985867,5.503782,8.278519],[-6.018943,8.385770,-5.500413,1.764037,-6.822336,5.071986,5.078638,3.137633,3.878752,-6.327979,1.543929],[-7.624140,-1.733513,-8.168585,6.858873,2.045759,-9.169603,4.870016,5.987767,-9.056346,-1.437225,-3.145169],[8.960043,6.795280,-6.892474,-2.743371,1.291453,-2.309175,4.577880,-3.224024,-8.192822,6.484162,-0.507894]],[[6.015195,3.394382,3.609546,-9.306434,3.789240,3.742470,-3.234809,-3.303926,-5.173163,7.466363,-7.711348],[2.217515,1.693374,-8.637616,-9.552529,-2.257158,-7.484854,9.486397,4.098562,3.913859,6.316649,6.081018],[-9.156637,-8.919840,-4.485461,-9.719541,0.508133,7.206391,8.068135,4.753037,-3.089274,-9.348776,0.345303],[-6.222340,2.805302,5.509640,5.317373,-5.127341,8.602339,-7.038027,-8.515070,-6.506623,-7.661406,9.044515],[1.033479,-8.247731,-6.189240,-1.602071,-4.045103,-0.459272,-7.623834,7.702495,6.980606,1.465914,-3.746010],[-6.008027,-8.788502,-0.470909,-2.508312,8.880463,-8.354703,8.239491,-5.818274,-1.817698,-7.801722,-7.796950],[4.215182,-7.724751,5.463529,5.087236,7.343820,-8.671361,-2.579075,3.947108,-6.640777,-9.966207,-1.849312],[8.999148,9.830807,6.176304,9.786408,-3.043801,5.319474,3.117919,-1.285019,9.913310,-3.549526,-2.673245],[-2.322066,6.108210,-9.245863,-1.666217,9.238761,0.404161,5.319851,-5.046824,-9.901097,1.493444,-0.280851],[-6.260213,0.415954,-6.915142,2.876231,-8.344688,-8.999894,4.919931,2.913285,4.902795,1.559475,3.345885],[-3.255422,0.936259,-9.585195,-7.547459,7.799238,-2.387228,-8.884009,-8.264046,9.334090,-8.346293,-8.834406],[-7.168679,4.000727,-8.658348,-7.670135,7.329708,-3.407228,8.917177,-5.988089,6.179923,-0.619292,-7.140620],[-0.308280,-6.448269,-3.773997,-6.082968,-6.551641,-6.105546,-1.946902,0.485215,0.325069,5.526113,2.936474],[-3.054816,6.963903,-8.017382,0.760842,-5.656071,6.704288,1.811746,7.086047,5.687989,-5.537901,5.559432]],[[-3.918528,0.709967,-0.452229,4.118323,7.706423,3.631076,0.791939,-9.299205,-8.575765,9.753246,-4.621394],[1.779152,-2.256064,4.098960,5.362239,8.907198,3.122060,5.843743,-7.948052,-6.477608,-7.448335,-7.959751],[9.912827,9.550231,9.231594,2.627874,3.160322,-5.229061,0.542216,6.049296,-7.581933,1.302500,2.359391],[2.360525,1.557708,-5.557908,8.963618,-6.972116,9.277167,2.387569,-7.466120,-8.649720,7.642218,0.136553],[8.806555,2.994184,0.238971,9.787854,8.308620,-7.345001,-3.782047,9.662653,8.077135,-7.025291,0.556872],[-7.178413,4.007915,0.153744,8.768381,0.469400,3.207414,-2.239164,2.254220,-5.556271,3.971764,-3.749373],[2.021408,8.128191,6.655173,1.224146,9.703818,-7.652625,3.984064,-6.336613,-8.452225,0.663204,-6.864831],[-6.139583,2.905179,7.669239,-1.056872,6.993323,0.191414,-9.262776,-5.398011,3.226295,2.080934,-5.102337],[5.968592,5.178409,9.164698,-7.904639,1.487460,9.888379,8.875277,5.486231,-1.148829,3.925933,8.665225],[-8.481450,2.209844,-7.866386,8.828450,7.331458,1.537919,-2.316012,3.178744,-2.393045,-9.221493,-9.608493],[-3.284122,9.539734,-5.829506,-6.436292,-7.343290,9.376894,-9.782928,8.548548,4.890057,6.942807,3.126653],[0.958616,-2.808631,0.456446,6.084961,-6.673211,5.024217,2.740872,-9.775012,-9.263568,-7.184401,-3.752362],[8.398336,8.015434,3.365110,3.874579,-7.381858,6.079675,-7.100662,3.555380,-2.495229,-1.778269,4.383899],[1.319097,6.816829,4.372657,-8.131182,5.108980,2.342119,-1.942507,3.205877,2.180959,-7.315246,-0.236059]],[[-6.103205,-8.601990,3.071190,-6.930848,-1.947393,-7.103839,9.814409,-1.677411,4.284751,4.025802,-6.184713],[4.155085,2.788131,1.656433,-5.023402,8.281597,-5.115693,3.026845,-1.279454,-7.908606,-3.015547,-5.228813],[-1.715449,3.148169,-3.624587,-4.769972,-1.993904,-2.474114,5.656770,4.104413,7.803188,-4.629317,-7.739014],[8.901178,7.340852,-6.147424,-4.227685,-8.094404,9.219200,2.342387,-2.437638,-5.754305,4.462767,2.818607],[-8.968505,-0.346374,9.827852,9.760296,7.619509,-3.987098,3.147975,-5.797783,6.927477,-0.880417,-4.436454],[4.406367,-8.671304,4.010979,-3.497129,-2.008109,9.768599,5.623635,5.386269,-1.002130,2.222894,2.029574],[0.149754,5.962268,-1.614914,1.808654,3.761765,-2.337858,-6.368260,7.087770,-3.217772,-9.956532,2.622640],[-2.986397,-5.353415,0.213246,9.112630,-0.750255,-6.273913,4.868230,-3.056813,3.830669,8.451789,1.772488],[2.560789,8.301338,-2.183503,4.553903,4.627657,-8.915434,-4.031022,7.201466,-9.798526,0.193780,8.486106],[-3.228644,9.729538,6.557807,4.978006,6.595444,-4.044654,-3.454544,-7.808794,-6.247133,9.771303,5.507003],[-6.569703,5.089944,1.382277,5.716045,0.907577,-1.659591,8.789528,-1.532317,-0.094931,5.065738,-8.187990],[2.876928,4.971211,-6.480841,-0.364032,-1.249238,-0.383358,1.237636,-5.596686,7.103987,-0.056056,9.071167],[3.489377,-7.919762,7.118381,-6.469019,4.496483,-1.372039,4.022999,2.649854,-2.252108,-4.067321,0.610908],[-0.295787,-3.083916,-7.721110,1.588051,-6.078199,5.394264,-8.369781,-5.442158,-8.722759,-4.106510,-3.456613]]], dtype = "float32")#candidate|8847|(6, 14, 11)|const|float32
uop_8848 = relay.log10(const_8847.astype('float32')) # shape=(6, 14, 11)
func_7395_call = mod.get_global_var('func_7395')
func_7397_call = mutated_mod.get_global_var('func_7397')
const_8863 = relay.const([7,-3,4,6,7,-1,5,3,2,-6,9,6,-5,-10,10,3,9,2,3,7,4,-10,5,-6,1,6,4,-7,4,-6,-3,4,6,-5,3,-8,-1,9,-2,-1,-9,-6,8,-1,-1,7,-7,-5,-8,-3,2,2,-2,7,4,-8,4,-5,9,7,3,3,-6,7,9,-6,3,-4,7,-8,1,3,2,-2,-5,1,2,10,-4,-3,-8,8,5,6,-5,-2,-4,4,4,-7,4,7,-3,5,7,-4,4,-6,-4,-8,1,-5,-4,1,6,7,7,5,4,-1,5,3,7,-6,-6,-2,-4,-9,8,8,-7,2,-10,6,-7,4,2,1,1,-4,4,3,3,-8,-2,-6,3,7,-7,9,9,5,-5,5,-4,2,-3,5,6,8,2,-1,2,-10,10,-2,-5,2,-1,-7,-6,-2,3,-6,3,-9,7,-1,9,-9,-1,9,8,-9,10,6,2,-4,7,5,5,-6,5,3,-7,2,5,-7,3,-6,1,-1,-1,-9,7,10,-8,-6,4,-9,-4,-2,-2,-6,6,-2,-3,9,7,4,-1,-6,3,-4,-1,-7,-5,8,9,-4,3,9,8,1,5,7,-10,-7,-7,9,5,5,-6,-7,4,-7,9,4,-5,3,10,5,5,2,-4,-9,8,9,6,8,-1,-10,2,-10,-9,-6,2,-9,-5,10,2,8,-3,4,7,1,9,-10,5,10,10,-3,9,-3,4,6,3,8,3,7,-3,7,10,-5,-7,9,2,4,-5,-6,10,-5,-5,9,4,-9,-4,1,6,-9,2,10,1,5,-1,-4,-2,4,-3,-7,-6,-6,-5,-4,-4,3,2,-9,-9,10,-3,1,-7,-7,7,-5,-2,-5,7,-7,-2,-6,4,-9,8,-3,6,-10,-8,-1,-1,-9,-9,-10,-2,9,5,-10,3,-10,-9,-3,6,7,-10,-8,-7,4,1,-4,8,9,-9,10,8,-2,-4,3,-10,-3,-1,1,-10,-3,6,-4,-9,8,3,1,-2,10,9,6,-6,-8,-2,2,-4,2,2,-6,8,10,-6,3,-3,-3,-8,2], dtype = "int8")#candidate|8863|(400,)|const|int8
call_8862 = relay.TupleGetItem(func_7395_call(relay.reshape(const_8863.astype('int8'), [400,])), 0)
call_8864 = relay.TupleGetItem(func_7397_call(relay.reshape(const_8863.astype('int8'), [400,])), 0)
func_7986_call = mod.get_global_var('func_7986')
func_7988_call = mutated_mod.get_global_var('func_7988')
var_8871 = relay.var("var_8871", dtype = "float32", shape = (192,))#candidate|8871|(192,)|var|float32
call_8870 = func_7986_call(relay.reshape(var_8871.astype('float32'), [3, 16, 4]))
call_8872 = func_7986_call(relay.reshape(var_8871.astype('float32'), [3, 16, 4]))
output = relay.Tuple([uop_8848,call_8862,const_8863,call_8870,var_8871,])
output2 = relay.Tuple([uop_8848,call_8864,const_8863,call_8872,var_8871,])
func_8880 = relay.Function([var_8871,], output)
mod['func_8880'] = func_8880
mod = relay.transform.InferType()(mod)
mutated_mod['func_8880'] = func_8880
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8881 = relay.var("var_8881", dtype = "float32", shape = (192,))#candidate|8881|(192,)|var|float32
func_8880_call = mutated_mod.get_global_var('func_8880')
call_8882 = func_8880_call(var_8881)
output = call_8882
func_8883 = relay.Function([var_8881], output)
mutated_mod['func_8883'] = func_8883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7681_call = mod.get_global_var('func_7681')
func_7682_call = mutated_mod.get_global_var('func_7682')
call_8889 = relay.TupleGetItem(func_7681_call(), 0)
call_8890 = relay.TupleGetItem(func_7682_call(), 0)
output = call_8889
output2 = call_8890
func_8895 = relay.Function([], output)
mod['func_8895'] = func_8895
mod = relay.transform.InferType()(mod)
output = func_8895()
func_8896 = relay.Function([], output)
mutated_mod['func_8896'] = func_8896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8427_call = mod.get_global_var('func_8427')
func_8429_call = mutated_mod.get_global_var('func_8429')
call_8897 = func_8427_call()
call_8898 = func_8427_call()
func_8249_call = mod.get_global_var('func_8249')
func_8251_call = mutated_mod.get_global_var('func_8251')
const_8912 = relay.const(9, dtype = "int32")#candidate|8912|()|const|int32
call_8911 = relay.TupleGetItem(func_8249_call(relay.reshape(const_8912.astype('int32'), [])), 1)
call_8913 = relay.TupleGetItem(func_8251_call(relay.reshape(const_8912.astype('int32'), [])), 1)
func_8895_call = mod.get_global_var('func_8895')
func_8896_call = mutated_mod.get_global_var('func_8896')
call_8918 = func_8895_call()
call_8919 = func_8895_call()
output = relay.Tuple([call_8897,call_8911,const_8912,call_8918,])
output2 = relay.Tuple([call_8898,call_8913,const_8912,call_8919,])
func_8923 = relay.Function([], output)
mod['func_8923'] = func_8923
mod = relay.transform.InferType()(mod)
output = func_8923()
func_8924 = relay.Function([], output)
mutated_mod['func_8924'] = func_8924
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8941 = relay.var("var_8941", dtype = "float64", shape = (1, 7, 10))#candidate|8941|(1, 7, 10)|var|float64
uop_8942 = relay.tan(var_8941.astype('float64')) # shape=(1, 7, 10)
bop_8945 = relay.subtract(uop_8942.astype('int16'), relay.reshape(var_8941.astype('int16'), relay.shape_of(uop_8942))) # shape=(1, 7, 10)
uop_8953 = relay.asinh(bop_8945.astype('float64')) # shape=(1, 7, 10)
output = relay.Tuple([uop_8953,])
output2 = relay.Tuple([uop_8953,])
func_8962 = relay.Function([var_8941,], output)
mod['func_8962'] = func_8962
mod = relay.transform.InferType()(mod)
var_8963 = relay.var("var_8963", dtype = "float64", shape = (1, 7, 10))#candidate|8963|(1, 7, 10)|var|float64
output = func_8962(var_8963)
func_8964 = relay.Function([var_8963], output)
mutated_mod['func_8964'] = func_8964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8171_call = mod.get_global_var('func_8171')
func_8173_call = mutated_mod.get_global_var('func_8173')
call_9080 = relay.TupleGetItem(func_8171_call(), 0)
call_9081 = relay.TupleGetItem(func_8173_call(), 0)
output = relay.Tuple([call_9080,])
output2 = relay.Tuple([call_9081,])
func_9084 = relay.Function([], output)
mod['func_9084'] = func_9084
mod = relay.transform.InferType()(mod)
mutated_mod['func_9084'] = func_9084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9084_call = mutated_mod.get_global_var('func_9084')
call_9085 = func_9084_call()
output = call_9085
func_9086 = relay.Function([], output)
mutated_mod['func_9086'] = func_9086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8923_call = mod.get_global_var('func_8923')
func_8924_call = mutated_mod.get_global_var('func_8924')
call_9105 = relay.TupleGetItem(func_8923_call(), 1)
call_9106 = relay.TupleGetItem(func_8924_call(), 1)
func_7067_call = mod.get_global_var('func_7067')
func_7068_call = mutated_mod.get_global_var('func_7068')
call_9107 = relay.TupleGetItem(func_7067_call(), 2)
call_9108 = relay.TupleGetItem(func_7068_call(), 2)
func_3462_call = mod.get_global_var('func_3462')
func_3464_call = mutated_mod.get_global_var('func_3464')
const_9118 = relay.const([-8.701923,-7.221235,6.686277,0.892676,-2.854425,-3.027902,7.340215,-2.201818,-4.841258,-6.499368,-3.703178,-9.853600,9.837176,-8.012947,0.965714,-6.272001,6.763764,-1.683240,8.071893,2.204561,4.355004,-7.025608,4.272645,-1.967666,-1.472987,9.184153,-6.793763,-1.181205,-3.394784,-8.246220,2.635147,-9.579791,1.611059,0.783003,-4.312131,-4.418966,-7.507193,-2.671944,-4.461483,-0.192718,5.820807,0.553912,1.006988,4.371513,-4.614341,-4.361727,8.329188,-4.962976,9.901564,6.300725,-4.947700,5.409248,7.903070,-0.754201,-5.742401,-4.474086,-0.623541,4.610155,-4.179424,-5.787333,-8.288199,-4.591981,7.676072,-6.860158,-2.338048,-1.027267,-6.343782,-0.803739,5.102463,6.034907,4.459258,-0.613597,8.962603,3.016915,-8.370965,3.387047,-6.583533,-5.136822,-3.196917,-8.296692,5.734109,-2.212046,3.568442,6.978675,3.828856,-3.586619,-6.479785,4.609984,8.492565,4.041425,-8.129787,-5.483782,-0.402698,-7.521554,-7.860707,-0.220504,4.477437,4.500257,5.783367,9.680148,8.505766,0.361583,-8.318291,3.891603,4.760408,-0.975816,9.418204,2.172621,1.858801,3.530046,-1.676856,8.620231,-8.797294,-5.480428,6.281453,-8.878869,-1.009109,2.331446,-1.817306,-1.085827,6.981930,1.602481,6.082597,3.620985,-1.574024,-7.777704,-3.119648,-7.154760,-0.746486,-2.360628,1.031975,-3.494838,-8.722942,-9.379568,2.782474,-3.192669,5.486677,0.072577,-7.552340,-8.302447,9.144626,-3.286515,-3.301081,-5.584199,6.456346,6.129070,-3.803242,-1.243667,5.326192,7.624923,9.760124,2.618262,-9.548233,-7.964777,9.163321,2.011035,1.619026,-6.708701,8.785543,6.906101,3.157485,5.135109,-7.822383,-2.465178,-0.592551,-7.131653,-6.754004,5.511392,0.060312,8.515278,-9.822396,4.381861,-1.590198,0.659129,0.787176,3.825889,8.863109,-6.096493,-2.214020,0.436698,-1.086913,3.137446,-7.112992,9.986118,-3.695008,-9.502934,-0.074715,-0.043428,-1.575654,-0.826336,-2.930253,-3.515595,-0.080188,-7.340196,-6.254441,5.187331,8.311231,9.765107,1.616980,6.694608,3.659727,-2.780155,-4.823253,1.640091,9.132644,-4.522558,4.165632,9.946080,1.942922,-9.515998,-5.620296,-6.251008,-9.797092,0.475860,1.849666,5.756257,-9.991803,-3.479654,3.217044,3.303293,9.334181,-7.461596,9.938355,-2.899446,4.287460,-4.978857,-0.737106,-8.646770,-0.391811,0.842959,-5.860671,-9.419503,-4.151069,0.348602,-1.513963,-9.862121,-3.912937,-4.216553,6.851332,-1.256338,-0.192083,-6.771345,-3.370434,1.009817,-5.715960,-7.234570,-8.644133,4.667490,5.277406,-9.896156,-0.549537,7.743746,7.283172,-9.941933,-6.713731,-0.139521,2.689558,2.346639,6.870297,-3.011554,1.644004,-8.150331,0.713540,6.462711,2.056427,6.059525,-7.079935,-4.984251,-2.471222,-3.935812,-3.588210,1.517628,8.424468,9.847411,-4.426239,-1.255864,-2.861993,0.028711,9.173698,-7.084781,-9.010752,-0.672142,-3.168570,-1.209404,1.829737,7.617924,4.461485,6.297030,3.696891,7.783720,-1.277448,-6.121882,4.798136,-3.798538,-6.174501,3.736690,-4.610760,6.168781,-1.334863,-5.708259,3.431747,2.823191,-7.923168,4.252204,8.957461,9.439414,8.063995,-0.349183,0.509634,9.875493,0.702835,-2.237591,-2.464550,-4.777807,-7.709002,-5.547261,-2.263007,-5.154674,-1.279347,5.968891,0.345166,2.023332,-9.166788,4.119963,-5.856083,6.016399,0.068933,-1.820448,6.012997,-7.861256,2.537483,2.988471,1.038245,-0.181705,-1.649341,8.059428,6.418527,-1.580051,9.293769,2.882953,-5.649568,1.658638,3.400926,5.242572,4.971020,-8.986731,-0.215537,-0.950919,9.762022,6.143968,-7.053922,4.737463,0.547770,1.868440,5.631841,-4.087739,4.848472,6.470118,3.686999,-6.544181,3.776970,2.015630,-3.556975,4.493311,4.048749,4.743024,3.069972,8.968561,-5.715966,2.664945,8.042642,8.104464,-5.363465,4.932028,0.594051,-6.102773,-9.330926,-1.771680,1.032072,4.790656,-5.856681,9.820506,3.974827,-4.633614,9.040187,-6.913010,-4.700314,-8.005111,-8.465667,-8.578425,3.922003,-3.000908,7.320943,-7.067077,-6.310263,4.705654,7.065018,0.297409,9.877563,-4.566989,9.696421,3.243751,1.483585,-7.555142,-8.257521,0.086892,1.903469,6.876752,8.760515,-3.879622,0.923678,-1.070549,-1.112783,-1.484612,-8.065869,-1.258851,4.607416,6.031183,2.255298,-4.414974,-4.621749,7.279067,-6.964920,-3.219181,2.231870,2.369634,-2.684377,3.548021,2.716024,-6.687963,-1.893315,-4.992057,8.002422,-5.056933,7.080591,-2.696067,0.303464,-6.380562,-1.569015,1.310259,3.748549,1.510675,-5.501297,-8.083388,-9.886450,7.718771,6.147570,-1.387909,3.200895,-9.831256,5.949810,6.201326,-7.181229,-8.686597,-3.779350,-9.887479,9.362961,-3.111143,-4.333845,0.373180,9.878673,-7.843622,-3.283691,8.589105,0.478408,4.336149,-0.461082,3.867317,-5.789857,-6.190318,7.024739,-9.380020,-5.493382,7.714070,1.976482,8.263594,6.294410,4.948424,-2.419019,-2.601508,-5.470884,-1.892630,-3.682486,-4.016093,-8.646335,1.182578,3.211781,-5.663788,-8.287471,6.791965,-6.595162,8.210407,-9.881498,-5.559836,7.464656,-6.535575,-8.346357,4.398955,6.299450,1.461881,-0.926813,9.191776,-3.740020,6.131055,4.157590,-6.291150,4.165083,-3.809078,-7.709187,-5.014669,7.942698,-9.037872,0.149920,-7.407978,2.153283,-6.906684,-8.185270,4.602689,1.977603,-2.626146,8.346768,2.914409,-8.588743,-5.350598,-8.827114,-5.426269,-1.593499,4.220212,-5.474314,-2.075600,6.861650,1.129898,-9.079862,-2.465253,6.400121,4.266682,1.042059,2.776359,-0.217724,-3.093807,-6.438338,-0.504874,8.239929,6.820549,7.708909,8.751244,-6.165388,-6.836297,-2.036816,3.375202,7.049644,-4.248601,9.715388,-5.542111,-2.088389,-3.277136,-1.959169,8.531870,-3.786677,6.513756,-0.049801,-9.769418,-1.712857,1.423599,7.238128,-1.857198,0.898984,6.601078,9.508881,-3.930528,-1.550677,-4.640984,7.770586,4.935304,-3.117512,2.515191,7.466308,-7.915883,9.406403,-6.510963,-7.538758,7.625371,-8.048982,-5.699098,0.329829,5.950490,1.035550,-1.926362,6.572789,-1.769316,-9.667188,-2.991457,1.084395,8.373886,-2.290869,4.304136,4.359856,2.061938,6.630394,2.564505,-5.141541,-2.446388,-1.621147,1.695927,-6.482042,-0.700053,8.582069,1.721886,3.048732,3.322726,-7.989251,-5.732531,-0.947915,2.614500,4.099528,-3.357921,8.101972,0.743967,6.118391,2.012913,-6.211872,-5.661579,-5.854278,-8.993431,7.980854,-2.978866,-4.556449,1.919928,-4.360676,-8.805795,1.269704,4.068003,4.377714,-2.218518,0.697188,4.448602,3.575593,-1.711190,8.573570,1.090051,-7.573268,-3.293900,-7.194883,0.813174,1.940909,-9.203886,-1.205244,7.215215,-1.646969,-8.284545,-7.867508,0.267860,-4.749330,7.906200,-0.124404,-9.336890,-0.140850,6.495425,-0.429196,8.662067,-5.910790,-0.912587,-0.082942,7.291643,7.277611,-3.236485,4.572419,-1.731913,0.229171,4.777932,-9.089943,7.508791,-5.609931,-6.918030,3.942524,-2.625303,0.370882,8.086768,1.986842,8.564650,-9.281791,-9.004783,4.748882,4.364999,-2.269343,6.784774,-2.633785,-9.773853,7.122191,7.017194,-5.024982,8.728642,-9.643112,5.828782,1.204667,5.701212,2.088423,4.480072,-7.504093,5.681559,0.658214,5.115113,0.834077,-3.891368,-1.823694,-6.825020,-5.395769,1.628599,-3.886866,-6.160909,5.758782,0.644312,6.055538,7.211421,-0.444478,-7.411232,7.303435,5.968992,6.288530,-9.046025,-4.392878,7.264907,-2.724931,6.975462,4.697259,-0.612773,6.133449,7.467120,-6.138122,-6.285311,-6.919714,-4.841970,4.520846,-5.670300,5.540337,-1.882658,0.995383,-7.144584,-4.418171,-2.258488,3.761254,-7.060593,3.604514,5.719131,2.272271,-8.839029,9.294226,4.036100,-5.195789,8.843416,-5.182581,5.906749,5.657347,2.655239,-2.772766,-0.218776,-7.314892,-4.424532,-0.206341,1.750244,-0.273738,2.322333,-1.517052,-2.471148,9.010220,6.748301,2.618743,2.636139,-7.654087,0.027793,0.071782,2.585034,-1.853536,3.364127,3.001051,-6.253828,-3.532857,4.615344,8.915996,4.361728,-2.936185,-5.096802,-5.865490,-4.295837,9.528565,4.590482,9.379029,-1.127003,-8.511684,8.419310,9.178947,2.879310,4.442704,-3.122499,-9.642109,9.648279,-6.498500,5.590708,-9.216196,-8.958513,5.924852,-1.149781,-3.140364,-6.361407,-8.350561,-2.411769,-4.673506,8.733955,8.825419,-6.334499,2.966032,-8.150216,1.976169,-4.189918,3.697809,7.687155,-9.486655,-7.637622,6.075270,-6.662175,-3.272773,5.761343,-3.043439,-4.519335,-6.834081,-2.315009,4.956667,-9.876851,-6.915487,-7.370727,0.783354,-3.110673,3.012220,-1.467971,8.268395,-3.266961,8.814159,-1.630890,-2.679377,7.995718,1.455631,-1.423088,-0.481605,-0.143960,-2.659356,8.027717,-4.375081,3.310859,-0.304622,-1.731563,-3.136896,8.143256,-2.566120,-3.998925,-5.193610,-8.987760,3.243447,-9.018599,3.879659,-7.060846,3.713990,5.318188,9.935987,5.328766,-6.470167,6.857185,-1.330758,-4.108614,6.121555,5.462455,0.020532,8.402278,0.682420,-8.248535,-9.334535,-3.967227,-5.518643,-2.506780,-7.468490,9.989001,5.801759,-6.468685,7.874576,5.912711,7.924325,0.654572,-0.820258,0.178855,-7.083379,-1.964152,-8.294633,0.410725,-6.399461,-3.424838,5.888743,2.697915,-0.206623,4.781871,-8.089689,-7.604533,1.095185,-0.883221,4.346564,1.022182,-3.685202,-6.636730,-1.468955,8.350589,7.130313,-2.690554,-1.663930,-2.680935,1.693526,-0.518367,-1.056290,3.929908,-9.493937,2.437580,9.401266,-9.065636,-2.178756,-8.107011,-4.105917,6.964735,2.029298,-7.691210,2.104767,-1.947610,-9.081446,-1.313183,-7.443240,2.095579,-9.687221,-6.896980,2.050902,9.830081,0.675110,5.946192,9.118868,-5.260705,-0.714650,-3.889678,1.387366,-9.406849,-2.653246,-3.030255,-4.907023,7.836371,-4.801639,-5.637694,-7.751649,1.401899,8.749718,6.989706,3.191547,1.460607,8.837575,7.710611,-2.002451,-6.663256,-7.473857,1.997524,-8.310047,1.862196,-5.284295,7.190046,8.646855,3.340196,1.645392,-4.516253,-8.035325,-3.344792,1.502344,-6.936168,5.669384,-1.314697,4.212481,-6.839514,2.509656,-5.383868,5.199669,-8.637698,-8.866426,2.541367,2.715404,-5.757879,3.953078,8.001276,-0.967935,-9.610412,-1.996160,3.183837,0.714672,-8.447621,-8.525147,-7.310325,-4.477986,-1.264336,-7.055530,-5.335933,3.160143,0.199475,7.897660,-0.378591,-6.212851,2.647953,6.202472,-2.814696,-5.757912,0.783646,1.123137,-9.979916,8.274854,-1.324510,-9.783728,6.929693,4.614025,-0.639933,9.689138,-9.133617,8.597584,-5.866204,6.335417,9.643682,1.143091,-7.673457,3.490400,-3.886132,4.956947,-7.207269,4.067393,-7.242244,0.380515,9.302794,7.938079,-1.198331,4.166384,9.413499,-6.251844,-6.581655,-5.478630,-4.416910,1.774412,-3.425893,-8.783000,-6.349388,-0.683871,-0.477027,2.785690,-3.697968,-3.636982,-4.627656,0.585640,-6.751766,-0.288299,-5.490732,2.476673,-3.097699,8.058987,6.442390,-4.264808,-1.245593,-5.160982,-1.101526,-2.695353,-3.626926,7.734970,6.539081,6.417592,-2.693439,-2.955870,-1.658036,-0.146355,7.770034,5.923894,7.326324,-3.270191,-2.196034,-3.477641,2.429768,5.370801,6.670646,-9.425658,0.282018,-8.554850,7.189075,-4.903625,-0.696743,9.318440,4.027939,3.103319,-2.664220,-0.986478,-9.360977,6.506261,4.728727,-8.921956,6.459417,0.685043,-5.610640,9.166058,2.547252,4.304464,-3.102236,4.040524,9.430144,-3.974514,-0.524688,-5.534626,2.634226,-9.805109,-3.352514,-5.880074,4.070489,-5.572934,1.380126,-8.278815,-7.381199,7.858720,-9.115996,-5.962924,8.968111,1.329585,6.808688,-2.315358,0.063370,4.634871,9.158386,8.423937,-3.467927,-8.627463,6.919151,-3.405164,-5.561550,-6.364839,-6.174476,-7.532652,7.790728,0.136421,0.296195,-2.672323,0.376418,-7.168634,0.268178,1.630011,-9.448193,0.451997,-6.512279,1.553077,2.277707,7.284253,-9.685809,2.138837,7.096522,-5.208724,1.139069,4.555670,-8.664095,4.928106,-9.325220,6.556241,9.724463,-6.659249,-5.092378,-9.587237,-1.111652,6.018107,-0.938728,-1.304672,-7.942593,-8.770838,0.478938,-2.114058,-3.971908,8.734583,-5.374841,8.527444,-4.270381,-9.588892,5.279750,-9.842223,-6.749655,-4.089925,6.368674,3.960819,7.032657,4.951600,1.448486,-7.472100,8.760919,-7.538237,6.255371,8.410501,-5.552019,-4.101464,8.462399,6.071307,6.448317,-9.680319,-9.725880,-2.960836,1.553258,1.868245,3.261181,-0.160969,8.542651,-4.323749,-1.316986,-1.094616,9.940818,-0.352636,-9.047537,4.607172,8.322702,-4.153553,5.283162,4.663942,-0.493401,6.480735,7.653190,-6.092761,9.346726,1.821784,8.504574,-9.537903,-1.117065,0.538350,-8.446153,-7.225082,-0.644924,1.599266,6.060346,-0.776513,3.867720,0.131161,-1.805225,-6.634547,9.540291,5.086430,1.098179,1.992193,2.054495,-6.345205,5.611806,1.341147,7.364465,3.055791,-6.286575,-5.659013,-0.873073,-7.693700,-5.630896,-2.398741,-2.036992,-1.863228,4.021117,8.487914,-7.441282,-1.783368,6.465004,6.826497,-3.963888,5.543644,-4.331253,8.579136,-4.151294,5.829681,-6.527252,-4.139554,-1.329060,-1.213111,-8.041117,-8.805232,-2.407564,6.159851,-8.145109,-1.005792,7.554245,5.097267,-4.961436,-3.304994,-5.880272,0.359723,4.177926,8.511150,-9.622407,4.061292,-2.365719,4.991499,-4.405600,-0.698213,3.674027,-0.363194,-2.031898,-2.185861,-4.522697,0.053421,4.578906,0.161478,-8.547069,-6.544869,-1.056999,-0.103314,1.738165,6.317617,-2.752038,-4.595294,2.648854,-3.856747,5.176316,-8.208036,-3.138824,-6.631155,-8.628171,-9.105841,6.070546,5.217554,2.776933,-8.399117,0.978293,-5.771014,5.388681,4.299679,6.334434,-1.914767,-5.235074,-2.390795,4.708071,-5.194447,-7.401660,-5.917670,0.023795,-3.492388,1.421727,5.261405,-5.775543,-9.217191,7.190191,-9.323798,-6.422374,6.242256,2.002178,9.277803,-8.469589,-6.015399,-5.831366,-6.179314,-6.919560,-6.375781,3.721786,-9.517448,-4.318149,5.042366,-0.498374,-7.986119,6.005964,-2.122407,-9.785427,3.107313,1.524344,0.883155,-2.168363,-8.024951,-8.160413,2.991381,-3.164074,-8.651814,-8.349501,-9.814573,7.896875,8.558317,-0.340591,-8.528045,8.461497,-1.014849,8.680258,2.956981,8.758395,4.895782,-4.872874,-5.776354,-1.053215,0.875082,-7.760019,-5.092888,8.031936,-7.230385,8.998907,-2.193321,-9.581968,0.484877,-6.665435,-5.509953,-1.632114,-1.026845,-6.859567,-7.061903,7.283438,8.020007,8.803275,4.418404,-7.468999,6.046732,-5.557759,-9.860087,-1.405900,7.073644,-2.439467,-0.948247,8.828617,-0.383062,9.388378,-7.733368,-0.003886,7.811037,2.978452,-8.932091,-9.814324,5.353344,3.086164,-7.963606,-7.278315,3.001873,6.873128,9.827302,-2.952917,-8.956697,-4.403916,-9.477320,-5.545366,5.224590,-4.570580,3.692801,1.773877,-5.459746,2.782860,-3.110836,-9.290857,-3.406866,6.372014,-7.910555,5.860131,-7.152083,8.375020,6.405065,-4.760270,-1.178840,-8.367867,6.391378,-1.179648,8.382986,-7.772369,6.868934,1.950138,-3.146363,-4.359148,-5.680471,1.373606,4.575748,9.591182,7.873762,8.424565,-9.237731,1.672963,2.196626,8.104350,8.299620,-2.366102,-8.211086,7.446602,6.032447,1.021459,9.159863,-8.019558,-9.275139,3.893359,4.240136,8.576625,1.696308,0.228462,-4.833969,3.391171,3.349551,6.356761,0.594284,-2.566584,-9.848868,-3.826275,5.364262,-9.281572,-3.132249,5.373172,5.690665,0.419727,1.920306,5.378410,-9.015219,-4.214327,7.444729,6.293273,-7.349890,8.894123,-5.081722,-3.919328,-4.423790,5.417508,6.150509,-8.305626,0.883310,4.763650,-9.312717,-0.620360,1.007246,-0.716884,-9.235673,5.992580,-9.994192,3.549558,-6.554795,-0.847667,7.647516,7.244213,-8.293263,0.810502,4.071710,-4.483010,6.485661,-7.938484,6.177284,5.962455,3.967690,-7.216793,7.271644,-1.554677,-9.552964,-5.587324,-8.669050,-6.383147,1.663356,-1.965704,-8.729957,0.746792,3.830846,-9.058796,-3.215925,0.220872,-0.844242,5.930920,1.233966,9.538241,-8.217816,4.456838,2.661122,9.206749,8.207775,9.225400,2.726268,-5.518092,4.122429,0.222758,-3.416979,9.698572,2.082137,1.245884,-1.508726,-9.190729,-3.762164,1.094777,0.876585,8.739989,-5.180362,-1.577658,5.544161,-0.731710,1.152147,-5.854799,-9.189920,-1.709402,5.999335,6.164692,-7.632309,-5.672650,7.688072,-9.658740,9.099705,-7.601409,-3.952733,0.849535,8.264985,-9.430544,2.238489,-1.678810,-2.843269,7.201890,-1.737963,9.063320,-7.082476,-1.617255,4.944863,-4.445691,-3.160819,-5.813843,9.743382,-1.764403,-7.470279,0.104160,0.387966,4.323260,-6.877626,0.807325,2.070402,6.377775,1.966847,-8.102131,-7.076110,6.937210,9.119042,-5.872987,9.009014,0.494123,7.709167,3.105439,-4.720232,0.426190,-8.935952,-2.108367,6.768243,2.960130,4.525602,-5.960522,4.909679,-5.998336,2.753049,5.299210,6.190840,-5.097966,-7.562137,7.537678,0.321466,8.094713,-5.919051,3.095631,-2.547659,-0.163393,-2.128130,3.925467,-4.932767,-6.727852,-2.005733,-1.966624,-0.964405,0.669025,-5.129642,-4.839322,8.201054,0.190100,3.087398,5.338482,-2.562187,7.594784,-8.339127,-7.203713,-9.902999,2.108918,-9.970157,-3.925009,-0.309388,3.807998,-7.296769,-8.579705,-7.409401,3.462684,0.269446,3.312912,-5.759060,-9.253567,1.443015,8.178597,-8.515696,0.763283,-9.159606,3.122927,0.335568,-8.727298,-7.350014,5.788451,-5.330278,-8.945057,7.896129,8.675748,-7.580871,0.074541,-2.220404,0.590911,9.078032,-1.674595,-9.444787,-4.042808,-5.021615,-2.124824,-6.546358,3.396955,-8.068396,-2.200865,8.300738,-1.180945,2.893300,-1.547704,-7.002694,-6.893889,-9.022101,-0.584964,1.432494,-6.206849,5.235178,-9.546544,-8.890955,-8.567278,-9.532929,-7.020474,3.944535,9.821213,-7.999089,-8.236975,-4.479750,-1.190350,3.686069,1.356753,-2.733935,4.351850,-9.816765,2.641856,3.315381,-6.655187,-9.994238,-6.839838,2.128857,-8.017657,6.208174,-1.341631,-5.388743,-8.500670,6.605652,-9.351038,9.272461,0.987764,7.813049,-7.776239,9.070876,-3.082385,7.758119,3.232495,3.272728,7.173945,-3.195664,-5.960178,-7.508065,7.355803,-8.472506,1.243952,4.196887,-9.914303,4.396843,1.402931,8.633966,-2.847713,-7.335175,6.358723,-8.358402,-2.674543,-3.274088,8.206157,3.731453,9.756123,-0.475556,1.812789,7.596699,-1.483452,-9.422781,8.797043,-4.728300,5.069144,6.428714,-1.121420,8.031374,2.970970,3.712429,-7.427806,3.189739,-4.723942,3.661123,9.471180,4.569605,2.907030,7.690060,1.604195,1.287547,1.887481,1.240654,-9.641065,-2.803570,7.572893,-0.621843,6.040739,4.549699,0.977568,6.139712,5.570815,-7.144483,5.324963,-6.569780,3.587469,1.349201,-4.161860,-2.141502,4.445989,-3.171043,-6.377377,-0.993027,-2.363537], dtype = "float64")#candidate|9118|(1820,)|const|float64
call_9117 = relay.TupleGetItem(func_3462_call(relay.reshape(const_9118.astype('float64'), [14, 10, 13])), 1)
call_9119 = relay.TupleGetItem(func_3464_call(relay.reshape(const_9118.astype('float64'), [14, 10, 13])), 1)
func_823_call = mod.get_global_var('func_823')
func_826_call = mutated_mod.get_global_var('func_826')
const_9125 = relay.const([-1.829585,7.172652,-9.133502,-2.429433,-1.609707,3.513488,2.315415,6.556069,-3.546727,-3.033568,8.365218,-5.674067,-8.934054,-8.304724,-8.468179,-8.835210,0.068658,-2.575931,-7.183432,-7.530277,-5.787443,4.446645,4.500082,2.643459,1.334282,-2.619787,6.696919,0.973850,-0.944479,6.629742,-6.623954,8.036209,9.212960,2.805300,-0.615888,-3.524971,1.995677,2.417373,-4.750980,-3.148008,-7.116855,-7.280831,7.356508,4.734537,-1.978280,8.590803,3.981815,-8.863197,-8.460009,-6.989612,4.000470,7.659361,-3.077707,3.321020,-1.838521,-1.559116,-3.205550,-8.411577,-0.140433,8.503932,-1.268914,4.893544,-0.667087,3.845325,-7.915904,8.021097,-8.846229,-7.804992,7.123246,-9.287336,-9.015232,6.784502,1.523164,-4.566476,5.648547,-6.082065,-3.320081,4.269747,8.534363,-2.835707,-4.480479,6.341932,-9.270445,9.141033,3.347179,0.848303,-4.069574,3.461269,-4.860515,-6.243611,1.922867,-5.263168,-1.992062,-4.407684,-7.552758,3.160013,5.252949,4.278563,9.388362,9.031872,-1.157392,-6.616245,1.892412,5.860465,5.562923,-6.463850,-1.862489,0.531701,-7.137772,6.455152,-8.663815,-6.300116,2.779501,1.212072,-8.804908,-0.389217,-0.284399,-1.317683,-1.088494,9.001093,3.734024,-1.334996,-6.971843,-4.393289,-5.052629,2.101413,5.232799,-9.338286,-9.021879,2.442943,-4.103718,2.031131,-8.804817,0.497215,2.068055,-4.051833,-3.859070,9.774374,-4.484007,2.403864,6.279320,3.358053,-1.441106,5.088784,-7.155436,-7.636031,-9.477478,9.937942,7.014620,2.005402,7.901440,0.299644,4.471024,8.171013,-3.572712,-0.372571,0.897427,-2.769871,0.739525,-4.574276,-3.734521,-6.460007,2.851083,5.036452,-4.816100,5.886228,3.780729,9.725319,9.793887,-9.482513,-1.408844,8.570049,5.722423,6.855075,-9.739536,-7.624330,-0.208959,3.834458,-1.497799,-7.018258,-9.226093,-0.980385,-2.708008,-1.457091,-2.689785,-2.127781,8.611517,5.837919,8.175149,0.639543,-6.706390,7.605991,-3.186136,-2.926896,6.014354,-4.963039,5.050311,8.687601,-1.825695,6.743538,1.799376,1.977757,-2.374158,2.794272,-3.474203,2.930468,-0.752384,4.600848,0.320460,6.761719,4.099168,-6.171506,-4.214524,-6.160106,0.721975,-9.052542,2.013002,1.902199,-4.750085,-5.716713,8.726436,4.887294,-4.640353,5.922243,6.719095,-7.725959,-6.809057,9.326562,1.224653,2.681048,9.736080,9.650364,-0.160749,-2.127698,1.725387,6.560807,-9.280150,-9.390103,6.478508,4.513168,-4.168994,8.377782,-4.367358,1.503804,1.740721,0.541096,-2.718146,3.400742,1.994619,7.613361,-1.285056,-8.808143,-1.681174,6.678767,-8.152932,-9.927946,3.564196,3.653516,-3.587926,1.310280,1.326059,-0.215481,2.012163,-6.092289,-2.415944,3.218593,-2.747329,0.625142,-8.625906,8.694190,8.275575,8.706253,3.992639,3.631055,0.837799,1.104087,7.647471,0.660699,-8.871009,6.703405,9.101996,3.505834,-2.022465,-6.614684,-6.986905,7.166948,9.621164,-4.092682,6.486651,-5.280573,-0.071015,-6.468799,-1.698264,-9.216185,7.204735,9.004807,-3.526415,0.892803,5.641872,7.182424,2.554682,-2.184108,3.061801,6.423704,-3.171840,9.615506,-1.089952,-5.177178,0.092819,2.586322,-6.142409,-1.695273], dtype = "float32")#candidate|9125|(312,)|const|float32
call_9124 = relay.TupleGetItem(func_823_call(relay.reshape(const_9125.astype('float32'), [6, 4, 13])), 2)
call_9126 = relay.TupleGetItem(func_826_call(relay.reshape(const_9125.astype('float32'), [6, 4, 13])), 2)
output = relay.Tuple([call_9105,call_9107,call_9117,const_9118,call_9124,const_9125,])
output2 = relay.Tuple([call_9106,call_9108,call_9119,const_9118,call_9126,const_9125,])
func_9139 = relay.Function([], output)
mod['func_9139'] = func_9139
mod = relay.transform.InferType()(mod)
mutated_mod['func_9139'] = func_9139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9139_call = mutated_mod.get_global_var('func_9139')
call_9140 = func_9139_call()
output = call_9140
func_9141 = relay.Function([], output)
mutated_mod['func_9141'] = func_9141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8171_call = mod.get_global_var('func_8171')
func_8173_call = mutated_mod.get_global_var('func_8173')
call_9160 = relay.TupleGetItem(func_8171_call(), 0)
call_9161 = relay.TupleGetItem(func_8173_call(), 0)
func_1723_call = mod.get_global_var('func_1723')
func_1726_call = mutated_mod.get_global_var('func_1726')
var_9169 = relay.var("var_9169", dtype = "uint8", shape = ())#candidate|9169|()|var|uint8
var_9170 = relay.var("var_9170", dtype = "uint8", shape = (810,))#candidate|9170|(810,)|var|uint8
call_9168 = func_1723_call(relay.reshape(var_9169.astype('uint8'), []), relay.reshape(var_9170.astype('uint8'), [9, 9, 10]), )
call_9171 = func_1723_call(relay.reshape(var_9169.astype('uint8'), []), relay.reshape(var_9170.astype('uint8'), [9, 9, 10]), )
output = relay.Tuple([call_9160,call_9168,var_9169,var_9170,])
output2 = relay.Tuple([call_9161,call_9171,var_9169,var_9170,])
func_9173 = relay.Function([var_9169,var_9170,], output)
mod['func_9173'] = func_9173
mod = relay.transform.InferType()(mod)
mutated_mod['func_9173'] = func_9173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9173_call = mutated_mod.get_global_var('func_9173')
var_9175 = relay.var("var_9175", dtype = "uint8", shape = ())#candidate|9175|()|var|uint8
var_9176 = relay.var("var_9176", dtype = "uint8", shape = (810,))#candidate|9176|(810,)|var|uint8
call_9174 = func_9173_call(var_9175,var_9176,)
output = call_9174
func_9177 = relay.Function([var_9175,var_9176,], output)
mutated_mod['func_9177'] = func_9177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7777_call = mod.get_global_var('func_7777')
func_7778_call = mutated_mod.get_global_var('func_7778')
call_9220 = relay.TupleGetItem(func_7777_call(), 0)
call_9221 = relay.TupleGetItem(func_7778_call(), 0)
output = relay.Tuple([call_9220,])
output2 = relay.Tuple([call_9221,])
func_9235 = relay.Function([], output)
mod['func_9235'] = func_9235
mod = relay.transform.InferType()(mod)
mutated_mod['func_9235'] = func_9235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9235_call = mutated_mod.get_global_var('func_9235')
call_9236 = func_9235_call()
output = call_9236
func_9237 = relay.Function([], output)
mutated_mod['func_9237'] = func_9237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8627_call = mod.get_global_var('func_8627')
func_8628_call = mutated_mod.get_global_var('func_8628')
call_9243 = func_8627_call()
call_9244 = func_8627_call()
func_311_call = mod.get_global_var('func_311')
func_313_call = mutated_mod.get_global_var('func_313')
const_9246 = relay.const([-9,8,4,9,-8,2,5,-3,3,7,9,-5,-10,-9,5,-10,4,-8,8,8,8,-7,1,9,7,-1,-7,1,3,4,8,6,-4,2,2,9,7,2,7,-5,-9,-3,3,4,6,7,3,-5,6,8,-5,-9,-2,2,2,6,-4,-10,6,4,-3,5,-2,3,-6,-7,10,5,7,-5,-7,-2,1,9,-5,9,-3,6,-5,-7,-1,-3,-10,-5,10,-8,1,9,2,-9,-2,-7,-5,4,1,10,-6,3,3,-3,-7,9,10,10,-9,-1,9,8,10,-3,-1,-4,-6,-3,6,2,-6,9,-1,10,-10,-1,-8,5,10,2,3,-10,-3,-7,-8,2,2,-2,2,4,-2,5,5,1,-9,7,-6,-10,10,10,10,4,3,6,-9,-1,7,-4,-3,-6,-5,-6,-1,-2,6,9,-3,-10,2,-6,-8,3,-1,6,1,8,-8,-6,1,-10,-1,-4,5,-5,-10,7,5,3,-8,-2,2,6,4,-1,-2,-3,1,9,1,-2,-4,9,10,7,-1,-8,9,-5,5,-2,-6,-2,-2,2,7,-6,-4,2,7,3,-8,-4,-4,-4,4,8,10,-8,4,-8,5,-4,1,2,-5,9,-5,-4,2,8,1,6,7,-4,6,-2,9,10,9,-1,7,2,3,-1,-4,-8,4,-6,2,9,-5,-8,6,6,10,-2,5,8,-9,-10,-7,-8,6,1,-8,-5,3,7,1,-7,-9,1,4,-4,10,8,6,-10,1,-10,4,-2,-9,8,-4,-3,3,-9,-5,2,8,-3,-5,7,-4,7,-2,-9,-9,3,2,-8,-1,-4,1,2,-5,4,-5,5,7,9,10,2,-5,-5,-4,3,-10,-2,2,-8,8,-6,2,4,5,1,-1,7,2,4,4,1,-4,-5,-6,5,7,-7,-5,10,-4,5,8,3,5,5,-5,-3,9,5,-5,9,2,-10,-7,-6,3,-10,3,-10,1,8,-10,-4,3,4,10,9,-9,10,1,-1,-5,-7,6,-9,-3,-2,-9,3,8,9,1,1,-7,8,-6,4,1,2,-9,4], dtype = "int8")#candidate|9246|(400,)|const|int8
call_9245 = relay.TupleGetItem(func_311_call(relay.reshape(const_9246.astype('int8'), [400,])), 5)
call_9247 = relay.TupleGetItem(func_313_call(relay.reshape(const_9246.astype('int8'), [400,])), 5)
output = relay.Tuple([call_9243,call_9245,const_9246,])
output2 = relay.Tuple([call_9244,call_9247,const_9246,])
func_9262 = relay.Function([], output)
mod['func_9262'] = func_9262
mod = relay.transform.InferType()(mod)
output = func_9262()
func_9263 = relay.Function([], output)
mutated_mod['func_9263'] = func_9263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8895_call = mod.get_global_var('func_8895')
func_8896_call = mutated_mod.get_global_var('func_8896')
call_9302 = func_8895_call()
call_9303 = func_8895_call()
output = call_9302
output2 = call_9303
func_9308 = relay.Function([], output)
mod['func_9308'] = func_9308
mod = relay.transform.InferType()(mod)
output = func_9308()
func_9309 = relay.Function([], output)
mutated_mod['func_9309'] = func_9309
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9346 = relay.var("var_9346", dtype = "uint16", shape = ())#candidate|9346|()|var|uint16
const_9347 = relay.const([[[-10,-9,-5,1,-3,-4,4],[3,10,6,9,-4,3,-6],[-7,-6,-2,-7,3,-5,-8],[-9,10,-2,3,4,1,3],[-7,10,5,-2,-10,6,-5],[-2,-9,7,-4,-2,8,-2],[-8,-2,5,-9,-7,9,-10],[-5,-5,-9,-9,-6,7,3],[-5,-6,-10,-8,-2,5,-9],[-1,7,-3,-2,-7,-3,5],[2,-9,2,10,6,5,4],[-9,4,2,-3,-6,-1,9],[7,-4,-1,5,-8,7,2],[2,-2,1,-1,7,-7,-1],[7,2,4,-2,7,-10,2]],[[-1,-9,-10,-3,7,3,-8],[-9,1,-6,10,7,7,-9],[2,-6,4,3,-6,-7,10],[1,10,-6,-7,-4,-4,-9],[6,10,9,-1,1,9,2],[-4,-5,10,-6,8,9,-2],[-2,4,1,8,-9,-3,2],[-10,7,7,-1,-7,1,2],[-5,3,-7,7,-2,-8,-3],[3,-2,-10,-9,8,3,-6],[-1,6,-3,3,-5,-8,7],[-10,-6,8,8,-4,6,-4],[9,3,8,-4,-8,1,-1],[-2,6,9,-7,-1,-4,1],[-8,8,4,-5,-3,-3,10]]], dtype = "uint16")#candidate|9347|(2, 15, 7)|const|uint16
bop_9348 = relay.left_shift(var_9346.astype('uint16'), const_9347.astype('uint16')) # shape=(2, 15, 7)
output = bop_9348
output2 = bop_9348
func_9353 = relay.Function([var_9346,], output)
mod['func_9353'] = func_9353
mod = relay.transform.InferType()(mod)
var_9354 = relay.var("var_9354", dtype = "uint16", shape = ())#candidate|9354|()|var|uint16
output = func_9353(var_9354)
func_9355 = relay.Function([var_9354], output)
mutated_mod['func_9355'] = func_9355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8568_call = mod.get_global_var('func_8568')
func_8570_call = mutated_mod.get_global_var('func_8570')
call_9364 = relay.TupleGetItem(func_8568_call(), 0)
call_9365 = relay.TupleGetItem(func_8570_call(), 0)
func_4788_call = mod.get_global_var('func_4788')
func_4791_call = mutated_mod.get_global_var('func_4791')
const_9373 = relay.const([[8.455864],[-6.790158],[-9.900605],[2.536999],[7.933944],[9.503845],[7.286965],[-7.123598],[-6.101643],[3.345615],[-1.551526],[8.508880],[-8.059562],[-2.233439],[4.956619],[1.823439],[-1.938940],[-8.795098],[7.534658],[1.538875],[0.196606],[4.238223],[7.132775],[-7.907624],[1.496198],[-0.451398],[-8.901828],[0.316436],[-7.635333],[1.348274],[-4.162494],[6.052840],[-9.641199],[2.897088],[6.693461],[-9.065325],[6.512253],[6.264721],[-5.760597],[-4.970711],[0.776112],[5.364537],[-4.618304],[0.672031],[4.303257],[-5.549072],[3.951058],[-4.623217],[-5.361739],[3.644742],[-6.492072],[-7.746099],[2.064970],[1.874513],[-5.991635],[5.820511],[-5.626663],[6.985088],[8.847152],[6.081576],[9.877907],[-2.006510],[0.638060],[-0.673799],[-9.570616],[2.133257],[-4.522616],[6.794440],[8.355686],[8.223035],[-4.512542],[-8.279297],[1.847131],[-0.086614],[-4.021230],[3.091709],[1.527003],[-1.937010],[-1.908279],[-8.087418],[-4.602669],[-0.257216],[-4.183659],[-4.890255],[-7.934269],[5.143062],[7.215046],[3.862104],[1.300954],[8.869155],[0.117427],[7.378519],[2.250015],[-0.126245],[-5.587003],[-2.870899],[-9.540403],[3.033966],[-2.045024],[2.757503],[3.559580],[-9.337943],[-7.109288],[-5.023982],[3.145054],[9.525042],[-9.519420],[7.357766],[-0.887811],[-1.064604],[2.551699],[9.730245],[1.364906],[-7.203930],[-0.255155],[-1.435272],[-3.744476],[-1.590306],[-5.546161],[-5.249743],[8.181452],[-9.832088],[-9.307951],[6.263991],[1.307996],[0.338126],[-6.032885],[7.189262],[-7.977959],[-7.133822],[4.705740],[-7.164758],[0.312339],[-4.352672],[9.717936],[8.145806],[-4.542139],[4.912903],[3.763277],[1.165438],[-0.581957],[2.421235],[9.542875],[-7.900297],[-4.687932],[-2.323355],[0.825929],[2.988305],[-3.968749],[-3.343131],[-7.553141],[-9.518699],[0.161363],[3.037137],[-0.692903],[-0.992677],[-0.646613],[4.726722],[-4.978729],[6.284276],[-1.827010],[-6.272624],[-3.290228],[-4.850352],[5.090752],[8.344103],[-3.819135],[-0.206860],[4.332828],[5.687036],[-2.986906],[-3.645398],[3.016681],[-6.591098],[9.697099],[2.606785],[1.335376],[5.735080],[0.830029],[-9.280382],[-1.956812],[2.166663],[6.377916],[-9.158795],[9.624664],[-4.202294],[2.230826],[-0.670045],[0.284408],[-4.694874],[-6.979586],[-1.338873],[8.551584],[-9.987271],[-8.368607],[8.690066],[-9.467155],[2.255632],[-8.829476],[-4.241071],[2.496727],[3.801222],[7.145358],[-7.047215],[-1.595371],[4.596083],[-6.928768],[1.895682],[8.390371],[-2.040176],[-4.774457],[-8.934566],[-1.528385],[0.103347],[8.859452],[8.726174],[-1.195700],[-6.591896],[-7.491179],[-5.087357],[9.967698],[-9.782186],[-5.087663],[-3.408376],[2.243411],[9.202404],[-3.409261],[-8.534577],[6.488206],[-9.969049],[2.424674],[-0.226043],[-3.183155],[2.428479],[3.578050],[-3.535584],[6.986557],[-8.805864],[-1.653403],[5.856185],[3.707852],[1.410930],[-3.255005],[9.471705],[8.441402],[-1.287496],[7.179369],[2.281348],[2.914581],[-8.960336],[-3.982633],[-4.164436],[0.027915],[0.679423],[1.157517],[7.201795],[5.116604],[-1.311831],[-5.487095],[-8.408734],[7.371457],[-4.165085],[8.572685],[8.475528],[-0.242254],[3.050549],[-6.317664],[-8.578720],[-4.065428],[1.967060],[-1.353186],[-1.916823],[9.386763],[1.617218],[-9.592787],[-6.399846],[4.201169],[-0.775634],[-0.740899],[0.073470],[-7.539913],[8.617228],[-7.554911],[-9.454690],[-6.088025],[-2.043817],[5.073099],[-4.351493],[-5.146642],[-0.207094],[8.575331],[-8.540839],[-0.550541],[1.504411],[-9.329821],[6.348669],[4.795358],[2.608254],[9.386588],[-1.432088],[6.309238],[-5.283194],[-3.825733],[-3.926557],[0.718758],[2.462846],[2.296809],[7.399709],[2.311656],[-0.494776],[3.845082],[-4.128806],[-2.317669],[9.501783],[0.138189],[3.432555],[-3.277262],[8.868154],[7.660354],[6.817136],[6.668275],[6.504234],[6.479427],[-8.303970],[-6.490616],[-8.486190],[-5.455287],[-8.595095],[5.573492],[-2.211647],[-3.582945],[2.752800],[-4.162710],[7.025344],[-9.132555],[-1.416775],[5.312341],[-5.426981],[-9.882385],[1.619976],[0.136003],[-6.600059],[-8.785983],[4.866663],[-7.622340],[8.271408],[2.574476],[-8.924750],[6.180512],[7.070418],[-4.791534],[5.984622],[-6.863659],[-8.316553],[-9.661200],[9.315316],[-6.232416],[-4.487100],[-1.148156],[-3.272014],[4.216631],[1.964022],[-2.741833],[-4.991988],[9.305175],[-6.042510],[3.819223],[-4.537904],[3.021130],[-0.591483],[-6.101904],[-0.235843],[-5.888534],[-3.411944],[-9.970979],[2.164330],[-5.595534],[-9.058553],[-6.394449],[-8.638937],[5.941681],[-0.846581],[0.852535],[-3.941905],[4.334487],[-5.674493],[-5.967062],[-3.392751],[3.085939],[2.728161],[8.215151],[-4.357612],[-6.651520],[0.723255],[8.604582],[-2.874848],[-8.635166],[-0.769895],[5.615704],[-2.489445],[1.513176],[1.224239],[4.262055],[-1.092242],[-8.820188],[-4.687738],[6.551342],[1.734335],[-0.738852],[-8.079206],[-8.810259],[-5.760008],[4.297515],[-9.821811],[3.954514],[-4.940665],[-9.355537],[-9.152591],[0.118480],[-8.667990],[-8.053978],[-8.507043],[4.792029],[6.137219],[-4.219658],[-7.044605],[5.456404],[1.674425],[2.704557],[7.323471],[-1.187195],[1.387567],[5.799803],[9.724858],[0.114897],[-7.813373],[-9.821253],[0.645538],[-9.753825],[4.468093],[-5.695667],[-4.742814],[-7.232832],[7.284107],[0.901776],[-1.990218],[-9.733584],[-4.068379],[6.938458],[-8.212966],[-2.787724],[0.568328],[7.530879],[-5.139636],[4.064895],[-3.605006],[2.589020],[5.805609],[-4.756514],[4.516971],[-2.759565],[-0.361496],[-2.102854],[-5.767886],[-7.516051],[-7.437728],[-9.576589],[1.749094],[-9.636801],[4.940889],[-9.322829],[7.965001],[-9.876791],[4.754725],[1.633324],[1.794342],[2.235887],[-3.849318],[-4.272256],[3.056326],[-7.292904],[8.390698],[6.760840],[-5.567921],[9.629925],[-4.176949],[-0.197686],[3.377219],[-3.340108],[7.137168],[-2.414987],[9.815758],[-8.126607],[8.857986],[0.410166],[5.689443],[-0.184244],[-6.658922],[-3.632927],[2.674232],[-8.108428],[4.471438],[7.336112],[-6.904516],[7.641639],[-8.675413],[-9.425764],[5.192252],[3.753949],[2.759726],[-2.309041],[-5.414536],[-7.010514],[-6.195248],[-8.944789],[-6.101990],[2.761648],[3.345928],[-1.593496],[7.574457],[5.764698],[7.998683],[5.683632],[4.553461],[3.223644],[9.842510],[1.866956],[-7.900680],[-0.401517],[-3.458451],[-3.743263],[-0.591310],[-4.077054],[3.390192],[7.632395],[7.729534],[-8.246388],[-9.177576],[8.754406],[-6.955847],[-7.875802],[-5.588788],[-4.745624],[3.198426],[-9.803170],[3.562629],[-9.154706],[-6.563407],[3.675695],[-7.074660],[-0.574966],[6.828086],[-4.027367],[1.164693],[4.429829],[0.906047],[6.870665],[-4.104322],[-1.885438],[2.880655],[3.828641],[-7.828633],[-3.910729],[4.420890],[-7.039977],[-4.064160],[2.920992],[5.702524],[1.818365],[9.791122],[-4.398380],[-6.981571],[8.344054],[3.075515],[5.760137],[-2.830818],[3.943401],[-3.994458],[3.980070],[9.253645],[4.849177],[1.055946],[-0.544283],[4.257425],[6.398834],[-6.476463],[1.894981],[6.906892],[0.474386],[-8.225420],[8.421936],[-7.638200],[9.135026],[-0.159254],[-8.348221],[-4.092798],[4.438579],[-6.992948],[-6.871256],[2.081786],[-4.870326],[-8.432988],[2.228887],[-3.823572],[-4.350285],[8.391185],[6.300007],[8.794924],[-1.207591],[-7.053061],[8.724351],[6.059019],[-8.566775],[-4.630286],[5.433711],[-6.057045],[-7.142181],[8.828748],[-8.591080],[-6.021970],[-7.792794],[9.328513],[2.020295],[7.876272],[-7.051084],[-7.989937],[-0.895912],[0.005330],[7.325071],[-6.793685],[9.802748],[6.470785],[2.249854],[7.341770],[-1.332544],[-0.774417],[7.397897],[0.406037],[-7.426347],[4.358714],[-0.388789],[7.110428],[3.985870],[8.518740],[-9.259778],[5.788348],[-8.059348],[0.905739],[2.588127],[7.113344],[6.844296],[-1.206468],[3.962191],[4.679967],[-6.370339],[3.210153],[0.573634],[-9.508001],[3.844716],[1.585065],[1.032035],[6.802002],[5.079183],[9.677615],[-2.286872],[8.748811],[-1.053429],[-7.169547],[4.889571],[-7.301477],[-9.302084],[-7.976068],[-7.296092],[-8.606267],[-8.183872],[7.656304],[-9.292436],[4.694843],[-0.466644],[-6.157690],[7.050282],[-5.684412],[-6.857655],[-5.892110],[-9.333280],[3.437316],[-7.237481],[-0.756283],[-5.966088],[-3.427633],[5.378414],[-7.455208],[-1.803814],[0.430523],[-9.852720],[6.376071],[5.615561],[-8.393418],[4.952900],[9.231025],[4.170918],[-1.183487],[-1.447828],[-5.680223],[-8.453496],[5.744377],[-4.215561],[1.306920],[8.482067],[6.408601],[3.503027],[-9.012333],[-9.946862],[-4.719772],[5.312243],[-9.025838],[-6.482864],[-3.484783],[5.068732],[-6.917662],[1.523305],[7.035589],[1.884018],[-8.042850],[-9.241527],[9.960405],[3.790815],[-1.975138],[-2.435307],[8.826089],[4.433811],[-4.346246],[-1.565329],[-7.867585],[1.931431],[3.111743],[0.411715],[-7.008994],[-2.499633],[4.567017],[5.316849],[-7.464560],[-2.470929],[-2.361949],[5.837167],[-3.352870],[8.629279],[-3.298150],[3.822018],[-3.116831],[0.233594],[6.834265],[-0.516383],[-5.769863],[2.640866],[4.729197],[-3.755466],[1.884905],[3.322662],[8.772355],[4.604123],[7.691794],[-3.485903],[-1.139389],[-2.387298],[-6.202150],[6.281602],[-1.101820],[2.451046],[-8.978468],[0.395367],[8.540137],[6.099716],[-8.413412],[1.239507],[2.909418],[-8.991195],[4.118872],[-2.369395],[-5.475680],[-6.838127],[4.493586],[6.961598],[-4.277861],[-3.444892],[5.201295],[-5.950814],[6.438306],[6.339693],[-4.086822],[4.640842],[7.248047],[-7.103529],[-3.394638],[-1.698653],[-6.225751],[4.415523],[-8.355536],[1.474461],[5.778767],[9.168450],[6.654658],[-1.294626],[8.876800],[9.723210],[-3.310007],[6.840627],[-8.928127],[-2.672024],[5.667191],[3.514805],[-0.620518],[9.933828],[6.346118],[4.779146],[-8.133144],[6.473556],[-7.223158],[-7.892669],[9.906691],[-5.654495],[-0.013747],[7.621296],[6.126843],[6.434822],[6.518393],[-6.694608],[4.769428],[-5.644202],[9.455619],[4.399710],[2.436467],[0.737075],[-5.412681],[0.107151],[9.423130],[1.620723],[-8.061548],[-9.684042],[3.862046],[-1.275926],[0.668247],[-7.270494],[-5.643450],[7.955533],[-0.855887],[8.426539],[-6.683983],[1.266680],[-5.282795],[-4.448127],[-1.632819],[8.309367],[4.167626],[8.213176],[0.688898],[3.783419],[-8.386404],[5.709965],[-3.048590],[-7.370803],[8.470064],[-7.846036],[9.958692],[3.300805],[7.881018],[1.111498],[3.563540],[-7.879499],[3.949709],[6.427341],[4.851917],[5.695217],[-4.836430],[-7.017175],[8.190981],[0.034784],[-7.387828],[-3.532433],[-0.773489],[8.555870],[-0.828827],[5.671773],[9.645548],[-4.750485],[8.987656],[9.447554],[-3.123251],[8.261914],[5.836398],[2.549916],[-2.854317],[0.748534],[6.715285],[-0.494908],[8.531781],[9.506703],[3.996358],[-8.671872],[-9.731058],[7.539651],[-9.325402],[-2.830063],[3.841366],[-2.257925],[4.606059],[7.072540],[-5.572374],[-6.171424],[7.019242],[6.380232],[-0.497839],[-4.309781],[-0.590795],[-1.798934],[4.706126],[-5.697406],[-3.630336],[-4.416902],[-3.545949],[-6.226594],[-2.858545],[-6.560101],[-6.958214],[-4.487976],[2.197967],[6.125690],[-6.063851],[9.629771],[-9.676695],[9.213764],[9.022209],[1.595802],[-4.473103],[7.323437],[-7.029462],[-9.764760],[-8.490376],[-4.472658],[4.229526],[-6.898567],[-5.160484],[-2.949151],[5.544543],[6.744203],[7.893106],[2.393104],[9.700363],[-2.392637],[-7.220911],[-2.991567],[9.817162],[3.317389],[5.340072],[1.168411],[6.228708],[-8.152649],[1.921592],[-5.166538],[-6.738073],[-8.993746],[5.888298],[2.853702],[-8.612764],[-2.233786],[0.717699],[-8.559280],[-9.762300],[-6.009210],[2.284057],[-8.668112],[1.342933],[-2.918093],[-7.599985],[6.521985],[2.368498],[-2.931482],[6.331732],[0.966302],[-7.560067],[-3.510956],[-9.644381],[-8.408548],[7.175679],[9.131906],[-0.491653],[7.249017],[-1.774027],[-1.644343],[-2.908857],[2.457491],[3.190185],[-6.312719],[6.658903],[0.806342],[-7.217738],[-4.580549],[-9.706040],[1.738679],[8.642788],[-4.276672],[-6.111350],[-4.222004],[0.511228],[7.699921],[-4.903012],[2.574623],[0.856989],[2.650006],[5.419327],[-0.348518],[-8.736316],[5.901881],[4.842543],[-4.693523],[8.900876],[4.690236],[-5.750063],[-2.072243],[-2.994017],[-4.933625],[-5.573042],[1.225906],[3.528953],[6.651503],[9.304192],[-9.021538],[-7.333619],[-3.134076],[-0.984877],[-7.820754],[9.908520],[-5.499843],[4.332295],[9.121665],[-2.381613],[8.338407],[-5.493780],[-1.249158],[8.986498],[-7.718293],[3.255311],[-4.611492],[-5.182977],[-1.729225],[-7.369650],[-9.877971],[-0.805014],[3.786541],[3.507748],[7.821630],[-9.030368],[4.434143],[1.493751],[6.086889],[6.880881]], dtype = "float32")#candidate|9373|(1056, 1)|const|float32
const_9374 = relay.const(-4, dtype = "int32")#candidate|9374|()|const|int32
call_9372 = relay.TupleGetItem(func_4788_call(relay.reshape(const_9373.astype('float32'), [264, 4]), relay.reshape(const_9374.astype('int32'), []), ), 6)
call_9375 = relay.TupleGetItem(func_4791_call(relay.reshape(const_9373.astype('float32'), [264, 4]), relay.reshape(const_9374.astype('int32'), []), ), 6)
func_7860_call = mod.get_global_var('func_7860')
func_7863_call = mutated_mod.get_global_var('func_7863')
call_9379 = relay.TupleGetItem(func_7860_call(relay.reshape(const_9374.astype('int32'), [])), 1)
call_9380 = relay.TupleGetItem(func_7863_call(relay.reshape(const_9374.astype('int32'), [])), 1)
output = relay.Tuple([call_9364,call_9372,const_9373,const_9374,call_9379,])
output2 = relay.Tuple([call_9365,call_9375,const_9373,const_9374,call_9380,])
func_9386 = relay.Function([], output)
mod['func_9386'] = func_9386
mod = relay.transform.InferType()(mod)
output = func_9386()
func_9387 = relay.Function([], output)
mutated_mod['func_9387'] = func_9387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8923_call = mod.get_global_var('func_8923')
func_8924_call = mutated_mod.get_global_var('func_8924')
call_9481 = relay.TupleGetItem(func_8923_call(), 1)
call_9482 = relay.TupleGetItem(func_8924_call(), 1)
func_9386_call = mod.get_global_var('func_9386')
func_9387_call = mutated_mod.get_global_var('func_9387')
call_9483 = relay.TupleGetItem(func_9386_call(), 2)
call_9484 = relay.TupleGetItem(func_9387_call(), 2)
func_9084_call = mod.get_global_var('func_9084')
func_9086_call = mutated_mod.get_global_var('func_9086')
call_9494 = relay.TupleGetItem(func_9084_call(), 0)
call_9495 = relay.TupleGetItem(func_9086_call(), 0)
func_6934_call = mod.get_global_var('func_6934')
func_6937_call = mutated_mod.get_global_var('func_6937')
const_9519 = relay.const(6, dtype = "uint64")#candidate|9519|()|const|uint64
call_9518 = func_6934_call(relay.reshape(const_9519.astype('uint64'), []))
call_9520 = func_6934_call(relay.reshape(const_9519.astype('uint64'), []))
output = relay.Tuple([call_9481,call_9483,call_9494,call_9518,const_9519,])
output2 = relay.Tuple([call_9482,call_9484,call_9495,call_9520,const_9519,])
func_9526 = relay.Function([], output)
mod['func_9526'] = func_9526
mod = relay.transform.InferType()(mod)
output = func_9526()
func_9527 = relay.Function([], output)
mutated_mod['func_9527'] = func_9527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7184_call = mod.get_global_var('func_7184')
func_7185_call = mutated_mod.get_global_var('func_7185')
call_9528 = relay.TupleGetItem(func_7184_call(), 1)
call_9529 = relay.TupleGetItem(func_7185_call(), 1)
func_2957_call = mod.get_global_var('func_2957')
func_2960_call = mutated_mod.get_global_var('func_2960')
const_9551 = relay.const(7, dtype = "int32")#candidate|9551|()|const|int32
call_9550 = func_2957_call(relay.reshape(const_9551.astype('int32'), []))
call_9552 = func_2957_call(relay.reshape(const_9551.astype('int32'), []))
output = relay.Tuple([call_9528,call_9550,const_9551,])
output2 = relay.Tuple([call_9529,call_9552,const_9551,])
func_9555 = relay.Function([], output)
mod['func_9555'] = func_9555
mod = relay.transform.InferType()(mod)
mutated_mod['func_9555'] = func_9555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9555_call = mutated_mod.get_global_var('func_9555')
call_9556 = func_9555_call()
output = call_9556
func_9557 = relay.Function([], output)
mutated_mod['func_9557'] = func_9557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8419_call = mod.get_global_var('func_8419')
func_8420_call = mutated_mod.get_global_var('func_8420')
call_9584 = relay.TupleGetItem(func_8419_call(), 0)
call_9585 = relay.TupleGetItem(func_8420_call(), 0)
output = relay.Tuple([call_9584,])
output2 = relay.Tuple([call_9585,])
func_9606 = relay.Function([], output)
mod['func_9606'] = func_9606
mod = relay.transform.InferType()(mod)
output = func_9606()
func_9607 = relay.Function([], output)
mutated_mod['func_9607'] = func_9607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9555_call = mod.get_global_var('func_9555')
func_9557_call = mutated_mod.get_global_var('func_9557')
call_9720 = relay.TupleGetItem(func_9555_call(), 2)
call_9721 = relay.TupleGetItem(func_9557_call(), 2)
func_4788_call = mod.get_global_var('func_4788')
func_4791_call = mutated_mod.get_global_var('func_4791')
const_9725 = relay.const([[6.751057,-4.614542,6.623720,-6.434711,-5.588352,8.833571,0.839924,-9.492973,1.003884,-9.488817,7.118384,-5.915759,-5.599086,5.494151,-1.938583,6.538074,3.242173,4.361103,2.027117,8.787969,1.716798,-0.400148,-9.798162,-3.625177,2.077054,-1.010377,0.505387,-9.547801,1.539408,-4.216620,-8.293362,5.919199,5.496289,-8.991088,-3.838304,-7.440518,-8.873947,3.123881,-4.634791,-0.946359,-5.954588,-9.974468,5.850977,0.898273,-5.480249,7.778898,5.795938,5.705013,8.894972,-1.658576,0.229976,1.164366,7.950730,-5.260259,-5.175681,-6.392472,-0.620511,-1.580420,4.789743,-3.838372,-9.744595,-8.031066,-8.381673,-5.970468,9.279367,4.477242,-6.811230,-9.316318,9.612276,9.661909,5.619518,-3.446841,-6.328378,-2.753590,8.548593,-4.279334,-9.407094,5.744096,-1.742585,-1.403446,-7.200733,-0.467759,-9.448277,3.002291,3.735201,-4.800029,-1.837310,-8.333834,5.167576,-7.575103,0.358274,-5.798388,2.483055,-3.177873,-6.111011,4.948128,0.725989,7.051718,-7.774220,9.743770,8.494239,-0.808214,5.544577,-8.485031,5.277648,3.763747,7.334866,-8.557682,0.708483,-2.211221,5.921837,8.881860,2.628160,0.495294,9.036631,-4.907833,-9.665413,-4.022675,4.898360,-2.411675,4.991803,-2.735001,-5.305152,1.672043,1.713281,2.036656,4.754153,0.740313,5.081389,-7.527794,-3.462759,8.290841,4.492211,-5.248369,-2.291302,-9.092903,-4.980152,2.739306,2.216030,-2.848919,-2.527901,-4.989980,-5.014487,2.772745,-5.946393,-5.289835,-2.890879,1.549451,0.953940,-8.534951,-4.990304,6.699258,0.929848,7.141143,0.911254,-9.268595,8.531963,1.103671,-9.048797,1.038530,-8.383365,2.152404,3.693101,5.645014,-7.977829,7.938520,-1.641897,8.606409,2.402224,-0.489219,4.338789,-3.952878,0.096857,-1.372363,-3.823868,-0.736768,-4.864363,3.158731,-4.816504,-5.701397,2.109721,-6.591184,0.238314,2.485695,-5.288811,6.325297,-5.611927,1.047845,-3.764192,-5.820384,4.022279,4.348807,-5.629146,-0.759998,3.015605,-5.812930,-4.933325,-0.153186,-3.464977,-9.222089,-3.036445,-2.618659,4.990015,-1.971779,-9.191423,4.414625,-4.166452,7.663554,6.430876,8.845107,-1.166932,8.914564,-4.697117,-0.036337,-6.315755,-6.981924,5.232446,8.411602,-6.870657,-1.189778,-9.909052,-5.619211,-9.575456,-3.619947,4.498108,7.360757,8.608257,-3.848578,-8.625166,-0.094279,0.797626,1.538686,-9.866543,-4.651826,3.079672,8.301318,-8.613823,-6.456566,8.030776,-6.468646,-4.918721,-1.100404,5.782170,-4.426893,-2.141447,-0.599882,6.908124,-2.775590,-4.240289,-8.409264,5.714860,-0.004440,8.402200,-7.606730,1.625536,-3.047777,-7.148450,4.369982,9.212726,-7.542063,-6.401736,-3.411466,-8.542968,9.115832],[3.956575,-7.816765,6.022426,-0.760699,0.116271,8.218801,0.246174,5.730677,9.864171,3.729483,-6.174425,-8.041054,-7.539883,-1.558880,4.563820,-0.741546,9.100174,7.376685,0.180293,1.522866,-4.264507,6.728604,-0.477445,-8.010289,4.607703,8.321839,8.833564,-9.611532,-3.577917,-2.448239,6.401521,-5.335971,-6.316236,4.958758,1.777345,-0.111539,-2.110443,7.459732,-3.563142,-0.812524,-2.329978,4.805234,6.924289,7.506265,-9.333503,9.768301,-0.105181,-1.001702,7.240937,-4.730906,5.707797,-6.771564,-3.815817,-9.324571,4.190983,-9.975249,-6.505379,8.600611,-3.671895,8.668422,0.806167,-9.972351,-5.596844,-7.412653,-5.919490,-0.093074,9.668726,5.050178,5.282369,0.050358,-8.844536,-3.100318,9.783103,-2.489061,-5.262937,1.234637,-8.296851,-3.314328,-2.857821,-7.121594,1.151708,-4.534333,-2.997742,4.903546,-8.843695,-2.976973,-1.016429,3.327479,1.287193,3.470907,-9.949281,2.635641,-5.052575,9.143752,-8.353231,-0.628784,6.154177,-9.949236,-5.743127,7.859811,-2.993732,-4.750918,-4.607761,1.044668,3.575586,7.614876,4.666042,4.710261,-1.967607,-2.198767,-3.417443,8.494723,-6.416552,0.123475,4.586287,1.782661,4.200344,-3.717969,1.878625,5.247185,3.540599,-8.642746,1.518041,-8.686759,6.455425,-0.874463,1.634347,0.418906,9.626148,4.051955,0.355397,0.744722,-3.474484,-3.048723,3.880749,-7.976660,-7.722176,8.717417,-4.578139,-3.266249,-2.974710,-7.876857,-6.195807,7.743762,-0.804745,-6.414656,9.617251,-5.548011,3.672435,-6.863576,-1.367656,9.662870,5.566030,-7.087579,5.271653,3.396373,3.686879,8.903749,9.948253,-4.470539,8.702065,6.223850,-8.180200,-7.656865,-7.935742,-7.083349,-0.782331,-3.910796,-2.412590,2.207540,9.746097,8.856561,-2.536844,-4.872314,-3.441985,-1.497275,0.431817,-4.810858,2.949603,6.903961,6.479201,0.134878,-2.740839,-8.365573,-8.981952,-0.355571,-7.601544,0.331256,-2.749058,5.097651,-9.538274,8.740303,8.221415,0.239327,-5.522558,0.267643,-9.072851,0.032158,-9.764290,8.965553,-0.454201,-5.427816,7.896247,1.737610,3.721858,-8.972846,-2.917316,2.765781,-9.826073,6.097351,0.555190,-1.065073,6.809745,-5.630009,9.314889,-5.387038,4.983018,2.091096,-0.892532,8.111725,0.137611,3.107311,4.457494,4.195969,2.393727,-4.439524,4.031936,-0.342012,5.448639,-8.087395,-5.823587,-6.159805,3.662483,8.643608,-3.953313,9.452652,-0.694503,-8.548554,2.885262,8.949694,-4.127498,-7.408817,3.534925,-6.199839,5.499895,6.838477,7.749493,-4.660327,7.615568,2.787511,-2.745827,5.954470,9.418559,-2.916667,-8.580355,-5.438997,2.513557,-5.344990,7.854022,4.715272,-7.102541,5.008202,-5.966903,-7.200675],[0.968401,-5.705785,7.583267,-7.930872,5.237629,4.557948,4.777889,-5.744474,-4.184905,6.131611,5.687476,5.027404,4.035339,9.364536,-2.431823,-0.366319,2.499995,8.471598,-2.214163,-6.446500,-7.267914,0.570713,3.580099,-2.514397,3.579227,2.906230,4.814944,-8.687398,2.344284,-4.842424,8.002818,7.171913,0.132218,0.779511,4.500500,0.023532,-4.591091,0.237595,-8.421786,2.305517,1.242335,-7.827958,8.385415,7.888052,2.982181,-4.839780,-1.421301,7.010268,-2.313485,-7.850956,-9.386917,1.089075,-9.824892,-5.701466,2.837894,-4.428321,6.621983,3.106772,3.084484,2.219303,-1.144291,-1.544761,-3.100155,5.827947,-1.160627,-3.667752,2.658083,6.957427,-0.846995,6.513012,-1.526252,-4.000984,-4.216324,-1.635815,-5.674587,-6.016461,-5.811564,-5.065005,7.217523,3.367998,1.077215,-2.426770,-4.402557,-9.253632,-1.341563,-2.922275,-5.665509,-6.471966,-2.184502,-2.244816,-0.961013,9.199754,1.579364,1.329576,8.237017,3.117463,-0.578878,-8.196745,3.237442,2.152580,-9.997273,-5.569930,-8.693368,3.860533,-5.122706,-6.991038,1.476514,4.162235,5.727769,5.037797,3.750020,9.523142,-1.290848,-3.329399,-3.233513,1.446037,8.032573,4.149752,-8.880646,-2.304867,4.328623,-2.626591,9.776843,7.866643,-1.318418,3.094477,3.500589,-0.411565,-0.430850,-6.333906,-1.083896,1.310947,2.596587,-7.493773,-3.616506,-5.575348,1.482591,-6.439322,-6.663857,6.161437,-5.883020,8.976126,8.145838,6.845585,-1.312196,-2.750770,-4.054015,2.848683,7.191428,2.870186,-0.262752,7.302245,-1.347588,-1.620270,4.085552,-7.584647,3.613062,-8.722462,5.557106,-5.896211,5.710941,-9.287625,5.359786,3.545257,0.252947,-2.745589,7.374358,4.964381,1.324239,-9.507446,0.917808,-8.740788,-6.527065,5.687510,-8.389931,-3.756558,6.864707,0.981789,-0.853517,4.636098,-2.858215,6.193833,0.113431,1.788525,1.614999,6.845345,-4.422519,4.252384,-5.401148,-9.965008,-3.475979,-2.520165,-7.004933,-0.143294,2.084706,-7.685270,9.171631,9.716891,7.517668,8.196759,-5.822425,7.083703,-2.228759,-8.360776,-9.976080,-6.986922,8.479914,-0.284876,-3.279092,-4.271803,-7.630654,1.586294,-4.421459,-9.762035,-3.195404,-5.720646,-4.372656,6.156531,-6.258748,-6.186925,3.052202,-6.615086,9.802580,-0.249629,4.091599,9.590056,1.534740,-6.091038,0.708758,6.825639,-6.432632,1.394264,-1.092996,-3.483844,-7.716871,7.073496,0.963034,-9.495073,-4.551991,-5.958887,6.852668,9.163192,1.978348,-7.546647,-1.766561,-4.292661,-1.023256,2.793965,-3.132580,1.589205,-0.695015,-6.732844,-3.232534,2.245241,2.750896,1.403420,7.016515,-6.830961,-0.219012,-5.427288,-8.917807,7.717683,-6.854365,4.589767],[-4.408442,4.274814,4.664302,-9.407282,-8.572427,-8.118981,-4.878814,-9.273837,-2.208195,-0.002079,8.663488,0.534388,8.646459,-9.462134,-4.713097,-1.880283,3.773171,0.257990,-1.573448,-1.481848,8.499109,-3.983547,-9.515717,-7.584101,6.372084,4.308155,2.601791,9.573915,-5.343988,-0.675225,0.729900,8.758492,-2.939505,-6.850968,4.511548,5.324243,5.923838,-6.113186,-6.723522,2.609422,9.603375,-8.514666,3.684809,7.821107,-6.778268,-9.735069,-6.753414,-2.186895,4.180090,6.708341,3.960205,0.288871,1.070630,6.556479,-6.233802,5.068349,4.922842,-5.850356,8.143102,-9.703887,3.965603,-6.566449,8.190632,-4.517860,0.898260,6.713347,-5.823711,1.172425,-0.731154,4.463113,7.810081,-2.815587,4.339824,-1.691714,-2.396453,-0.154660,6.117121,7.841613,9.873503,8.918163,-3.925964,5.016745,-9.588492,-4.434385,9.512390,9.612838,-8.233045,-4.309224,3.443768,4.319748,1.478347,2.851863,-2.969021,7.676642,7.882458,-3.544834,9.504333,-9.951742,-4.254932,-7.179963,8.647185,0.251678,6.312480,4.712637,-4.877856,-0.067089,-4.824501,-7.554428,8.177211,-3.595264,8.953408,-3.579502,-8.624917,-1.383184,3.163380,2.368719,-9.100489,-7.428372,-8.064764,-2.529847,-2.783467,-7.309876,7.335684,3.956531,6.864519,1.885047,-3.555065,1.578889,-3.183452,-6.652212,3.580284,-7.353696,-0.814655,1.522127,-3.392099,1.918476,5.297775,0.647903,-5.089625,6.689106,-6.882106,-7.877327,-0.286028,-6.951809,8.965903,-7.573507,-9.829471,8.090679,8.177122,7.437124,-3.876843,9.299482,-4.430247,-6.947625,0.443850,-9.946698,-2.099803,5.584381,8.713480,-5.346751,-7.860284,8.605601,3.435563,6.033515,0.947868,6.463460,0.704257,8.329020,1.529772,-9.679066,4.206577,9.114194,-4.172859,-7.911946,-4.162270,-2.200495,0.593872,1.495567,-7.282824,-4.832257,8.273872,-8.352067,-8.388879,-9.784056,8.831566,-6.802428,-3.861886,9.925941,-3.100801,-0.784938,-1.482412,1.733980,-5.668392,-9.500794,3.689694,-9.059748,-6.788835,1.679317,1.912137,1.233955,2.088905,0.237194,3.195315,-7.776814,3.559345,-5.967311,1.930643,0.009101,-0.837892,8.228268,-9.633231,-3.191377,-5.765453,0.870723,4.040978,-1.394340,2.435602,-9.940086,-6.020972,-0.432312,9.483549,9.151754,5.269824,-1.549902,4.914097,4.039142,-8.438188,-7.582574,-4.500797,-1.475614,-9.431097,-6.426903,-1.420395,-4.123293,7.239989,-5.661629,8.476595,8.450126,5.673507,-1.154154,1.872785,-3.723256,0.400140,-5.454177,6.753003,-1.597686,-6.390944,6.417428,6.653867,1.031368,-7.693260,-8.846176,-9.708107,-1.239004,1.362468,-9.201315,5.547469,-8.868280,4.999633,-0.082163,4.014899,6.744078,3.345024,5.855689]], dtype = "float32")#candidate|9725|(4, 264)|const|float32
call_9724 = relay.TupleGetItem(func_4788_call(relay.reshape(const_9725.astype('float32'), [264, 4]), relay.reshape(call_9720.astype('int32'), []), ), 4)
call_9726 = relay.TupleGetItem(func_4791_call(relay.reshape(const_9725.astype('float32'), [264, 4]), relay.reshape(call_9720.astype('int32'), []), ), 4)
bop_9730 = relay.bitwise_or(call_9720.astype('uint32'), const_9725.astype('uint32')) # shape=(4, 264)
bop_9733 = relay.bitwise_or(call_9721.astype('uint32'), const_9725.astype('uint32')) # shape=(4, 264)
bop_9735 = relay.less_equal(const_9725.astype('bool'), relay.reshape(bop_9730.astype('bool'), relay.shape_of(const_9725))) # shape=(4, 264)
bop_9738 = relay.less_equal(const_9725.astype('bool'), relay.reshape(bop_9733.astype('bool'), relay.shape_of(const_9725))) # shape=(4, 264)
uop_9750 = relay.cos(bop_9730.astype('float64')) # shape=(4, 264)
uop_9752 = relay.cos(bop_9733.astype('float64')) # shape=(4, 264)
bop_9756 = relay.left_shift(bop_9730.astype('uint16'), relay.reshape(uop_9750.astype('uint16'), relay.shape_of(bop_9730))) # shape=(4, 264)
bop_9759 = relay.left_shift(bop_9733.astype('uint16'), relay.reshape(uop_9752.astype('uint16'), relay.shape_of(bop_9733))) # shape=(4, 264)
bop_9765 = relay.floor_mod(bop_9756.astype('float32'), relay.reshape(bop_9735.astype('float32'), relay.shape_of(bop_9756))) # shape=(4, 264)
bop_9768 = relay.floor_mod(bop_9759.astype('float32'), relay.reshape(bop_9738.astype('float32'), relay.shape_of(bop_9759))) # shape=(4, 264)
uop_9773 = relay.acos(const_9725.astype('float64')) # shape=(4, 264)
func_4883_call = mod.get_global_var('func_4883')
func_4889_call = mutated_mod.get_global_var('func_4889')
var_9778 = relay.var("var_9778", dtype = "float32", shape = (35, 9))#candidate|9778|(35, 9)|var|float32
var_9779 = relay.var("var_9779", dtype = "int32", shape = (1, 300))#candidate|9779|(1, 300)|var|int32
call_9777 = relay.TupleGetItem(func_4883_call(relay.reshape(var_9778.astype('float32'), [7, 9, 5]), relay.reshape(var_9778.astype('float32'), [7, 9, 5]), relay.reshape(call_9720.astype('int32'), []), relay.reshape(var_9779.astype('int32'), [2, 15, 10]), ), 1)
call_9780 = relay.TupleGetItem(func_4889_call(relay.reshape(var_9778.astype('float32'), [7, 9, 5]), relay.reshape(var_9778.astype('float32'), [7, 9, 5]), relay.reshape(call_9720.astype('int32'), []), relay.reshape(var_9779.astype('int32'), [2, 15, 10]), ), 1)
func_7617_call = mod.get_global_var('func_7617')
func_7619_call = mutated_mod.get_global_var('func_7619')
call_9785 = func_7617_call()
call_9786 = func_7617_call()
output = relay.Tuple([call_9724,bop_9765,uop_9773,call_9777,var_9778,var_9779,call_9785,])
output2 = relay.Tuple([call_9726,bop_9768,uop_9773,call_9780,var_9778,var_9779,call_9786,])
func_9787 = relay.Function([var_9778,var_9779,], output)
mod['func_9787'] = func_9787
mod = relay.transform.InferType()(mod)
var_9788 = relay.var("var_9788", dtype = "float32", shape = (35, 9))#candidate|9788|(35, 9)|var|float32
var_9789 = relay.var("var_9789", dtype = "int32", shape = (1, 300))#candidate|9789|(1, 300)|var|int32
output = func_9787(var_9788,var_9789,)
func_9790 = relay.Function([var_9788,var_9789,], output)
mutated_mod['func_9790'] = func_9790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7067_call = mod.get_global_var('func_7067')
func_7068_call = mutated_mod.get_global_var('func_7068')
call_9802 = relay.TupleGetItem(func_7067_call(), 0)
call_9803 = relay.TupleGetItem(func_7068_call(), 0)
func_4995_call = mod.get_global_var('func_4995')
func_4998_call = mutated_mod.get_global_var('func_4998')
const_9808 = relay.const([-5.030026,-0.147384,1.956564,-5.949954,9.721566,-5.119692,-9.412713,5.066906,7.807559,-8.902122,-2.153393,-1.790599,6.428864,-6.633611,5.013412,-3.919790,-0.001032,-4.599766,4.481191,2.239457,1.824755,-1.913300,6.694374,-2.138412,-1.430202,3.146620,4.876299,-8.000312,-3.669573,1.150919,-8.524238,-1.079247,4.771473,-9.503644,8.584274,4.809931,6.688208,-5.687597,-7.103911,2.300460,-9.165267,4.581205,9.945576,-4.022091,8.778929,8.911816,-0.068165,-4.155963,-3.637912,-0.930192,-0.082607,-9.713715,5.792202,-7.392740,8.187382,-1.638700,7.628778,5.990279,7.757852,-7.378845,5.051621,-6.315834,8.597514,9.463248,4.823352,-2.448087,-4.380036,-1.319554,4.457242,7.199562,-6.810583,-1.584684,9.062125,-7.343968,-9.961984,8.615166,-3.224178,8.444944,-0.225676,0.446876,-3.086973,-9.484993,-9.158829,-4.369987,1.603977,-6.108223,7.702414,1.026514,-8.042781,6.492367,0.325433,2.408502,-7.703056,9.917961,4.982209,-0.384620,-4.400587,-5.146810,4.265510,7.820274,-4.468869,0.482761,-8.416837,2.379143,-6.512918,0.793351,2.519576,-6.242810,7.088738,9.342988,-2.217911,-2.629247,-5.929124,-9.780268,8.234898,-0.828206,0.374787,5.578977,6.822581,6.062608,5.920679,6.907457,3.566669,-7.920990,2.054753,3.941582,-8.671240,6.347969,9.178032,-2.233076,2.892549,-6.807947,-9.758155,-8.114291,-4.640217,-7.699861,2.782810,3.856323,3.501130,7.793993,9.490639,-0.252024,4.954501,-4.472939,9.077851,2.742101,4.640378,-5.798169,-5.333984,8.775786,-8.118846,-7.174825,1.497046,-0.273777,-9.322788,-5.342723,-0.518780,0.773774,-9.049074,-8.829367,-2.762994,-2.944944,-8.776959,-2.601322,9.832261,3.486560,3.818849,7.585009,9.365577,4.440539,-9.021285,6.907395,-1.783119,-4.866318,-2.626912,2.135565,-6.451743,7.102735,-2.024922,7.487922,9.869618,6.988522,2.980063,-0.378558,-7.945744,-2.604892,4.327898,1.915730,-1.523802,-0.922964,6.840101,0.245693,4.549675,-0.643764,-7.149136,6.924879,-8.850499,-2.004351,-6.146409,1.801278,-9.923125,5.548739,4.896475,-0.120508,-8.254498,1.331460,-7.811993,6.580664,3.170783,7.476569,-7.657976,5.445713,8.401281,-2.402459,-6.636902,-3.358717,0.632385,-6.584949,-9.977779,-9.613258,0.882585,-7.127186,-6.623948,2.365215,5.689289,-5.592481,-6.649477,1.021875,2.668041,8.655041,8.335984,9.731448,7.201331,6.758003,-4.633762,-1.692115,3.704902,1.564539,-0.876020,5.530445,0.284751,5.479818,-3.839004,7.169622,-3.231326,2.764696,-6.443052,-0.057604,6.409370,2.682708,6.641126,7.821166,5.339333,5.901646,-3.105455,9.145157,-8.155330,6.422218,1.262070,-3.010649,4.087106,6.698460,-0.477520,6.981329,-6.544721,8.939367,-3.179160,-5.905832,7.039584,8.836412,5.863857,9.481952,-0.877451,-7.753411,9.872961,5.342007,-8.662252,-7.918463,8.697355,-4.971637,1.181871,4.139064,8.140632,3.132260,0.129421,-6.904579,9.618217,-6.874903,-4.840879,-6.031987,-1.017050,-6.149539,-6.820417,2.986745,-2.348254,5.995556,-1.127263,0.650751,6.982812,-2.612328,4.591847,3.359083,7.684905,-5.289842,-3.119077,6.563468,2.260063,3.158916,8.566147,4.047257,8.348973,7.798563,0.838072,3.515051,0.543102,-8.356413,-4.109395,4.041659,5.053100,8.002178,-2.847085,-9.450953,-5.692293,-0.222694,0.314542,7.462016,-5.727887,-0.536447,4.952111,-1.617256,4.793166,0.681027,-0.403929,3.588577,9.778716,3.248085,-9.293819,0.705582,-9.763826,-1.673211,6.696158,-3.046585,-1.832073,7.979998,-7.746428,-3.886926,-7.592253,4.983109,-8.176243,7.332493,6.270536,-8.878118,-3.820959,-0.763641,4.116950,-1.790517,-3.542027,-6.762329,5.973799,-7.581083,-8.054158,-3.871395,-3.770003,7.623753,-2.891325,-5.467213,-8.122247,1.110290,-6.291690,3.254390,-2.526849,-8.751579,-9.687009,9.642615,0.254302,3.031495,-9.925980,-0.524711,2.232859,-4.984674,-4.871154,2.831309,8.546938,-5.634044,-8.873954,3.623877,8.733590,4.367983,-3.231133,-1.858837,-9.108862,8.624917,3.685962,0.276495,-1.240087,-0.111818,6.520855,9.999338,3.381099,-5.349635,0.209425,-6.259546,-8.338798,-5.830467,9.003712,-4.372668,-9.565615,-0.097210,2.259402,-4.758631,3.712957,2.071115,-3.944911,7.009174,-7.764801,9.067207,2.417486,-2.164715,4.400691,6.882396,1.224006,-4.156147,3.079682,5.691405,-3.935633,-3.686983,6.857539,-2.928980,-9.987549,9.879972,-6.245424,-3.742704,-3.855275,8.089278,4.165809,-6.495514,-5.456940,-3.949252,-3.378540,-1.658453,7.273533,-1.027984,-3.147326,-4.554725,1.812266,2.210472,-3.178283,2.567220,5.325959,-1.032695,6.450437,4.684983,4.372846,-0.889391,-2.013715,5.142636,5.343696,-6.701691,-8.495175,4.865243,-2.428114,8.205151,-7.000128,6.791880,4.057376,4.793975,0.195100,-7.256448,-1.686641,-9.868350,-1.594468,6.198612,1.992481,8.150440,-1.829982,6.111907,-0.700980,-0.680609,-0.138353,-1.369281,3.019986,-0.612358,-5.355251,-6.739509,3.944495,0.283308,-4.150590,-8.799152,-0.049554,4.950218,-6.088021,2.458777,-5.749282,8.742289,-8.007198,-6.936909,0.826568,-3.342098,-2.342268,3.593462,4.443764,7.635372,0.760544,9.256126,7.409333,-2.183440,-6.927580,-8.210649,0.152943,5.153765,5.474826,-9.225903,-7.358816,2.240820,6.268397,5.004933,1.578792,-2.997782,-1.789538,9.320857,-0.722064,1.106307,2.189026,7.323808,1.079300,-7.281915,2.529432,-5.785820,1.277898,-3.297688,-0.729271,2.524010,-0.754607,-4.917138,-6.346575,-4.179728,9.295851,5.716748,-4.058670,-0.610101,8.215529,-6.874909,5.484203,-4.722182,-0.783418,3.160320,-0.271690,4.726011,-3.497242,6.669020,6.021553,8.087711,8.536922,1.569996,-6.274685,-4.647299,4.089816,-0.313384,1.888803,9.731253,6.513917,-2.889074,-3.859903,-5.977226,2.976553,2.020579,8.645364,7.678711,1.988545,-0.408814,-6.514191,0.576105,-9.686564,-3.074160,-6.664603,2.424507,-5.225144,-4.510922,1.143058,9.347144,-0.684544,6.175765,-1.476417,2.498596,-1.376463,9.202291,-7.562715,-9.541579,-8.094090,-0.158954,-2.010035,-8.853577,9.624095,0.133955,5.790925,1.405819,0.221082,4.059301,9.202767,6.367092,8.289975,5.395176,3.411816,-4.562319,-0.147074,6.653931,-2.199941,-4.233999,-2.428303,5.630198,-8.615211,9.001328,6.421243,7.920625,0.623929,-7.350318,7.936803,-8.594347,9.054037,-7.240340,6.988925,8.892035,6.471764,3.083913,2.212609,3.309419,1.546327,-7.122446,-8.143642,-2.280165,-1.667358,-9.391394,-5.207399,3.353514,2.938893,3.567238,5.224325,-1.677509,-6.254566,-9.150386,-7.488469,-5.096076,-3.884211,4.794568,-6.201878,8.657345,-5.400227,0.770178,-9.056375,5.787952,-1.117220,4.238994,1.886032,9.066185,1.320398,5.344480,9.557038,-6.536735,-9.304450,-9.216968,3.108929,-7.915401,7.788077,-0.828253,-1.040953,7.540718,-6.098922,-9.201674,9.534940,-7.454807,8.667739,-5.009726,8.828435,-8.324333,-3.826070,-4.613226,-9.700082,-4.356443,-4.087113,-0.953207,-6.733952,-6.730759,-1.897433,-3.274730,-1.334412,-8.481412,-9.475093,-4.576285,4.874537,-5.604338,-2.116163,6.936880,0.289343,-2.706403,-8.115930,-2.429691,1.649492,-9.834857,1.346292,1.085063,1.853184,4.347018,-1.268663,0.676796,-7.759348,-7.944629,-9.389931,-5.952011,5.559547,-8.123820,7.765023,-0.574038,7.369733,-1.799395,0.425123,-7.836316,1.099261,-8.187394,2.041923,-1.099756,2.722056,-9.605287,-9.202790,7.308261,-8.769492,-6.834542,-0.689212,-7.460340,9.513215,-1.735700,-5.131036,2.402556,-5.077998,9.532451,8.607580,-1.348285,-7.568428,-0.107606,4.708159,-5.211968,3.210333,7.765431,9.135201,2.088805,-2.457910,0.650987,-1.931082,-1.792513,7.447472,4.500666,6.858191,3.647502,-0.626519,4.799771,-0.707388,1.071509,-9.732333,1.286075,-4.852757,-0.427871,0.713593,7.678066,-8.999876,-6.468820,-5.546657,-1.478669,4.549074,8.569728,4.512890,3.825371,6.171630,-5.719262,7.250953,3.598387,-9.995807,-6.369385,-3.433437,-4.321513,-5.508512,-6.745277,-5.292165,-2.050239,-0.315599,6.119140,-6.834185,6.776154,-6.993214,1.909182,-8.590658,3.080213,-9.367041,-8.965900,-9.616578,0.650399,8.849130,5.970636,-9.395392,-4.339388,9.627382,1.157131,-7.801962,0.780656,-1.928887,5.406003,-3.123961,9.296618,-2.861210,4.057500,-3.388186,2.980535,-8.367751,4.518738,8.606012,1.066260,-5.226293,-0.589172,-1.724324,1.349653,5.361820,4.907142,5.818642,-2.344724,-6.273365,-1.848465,4.121149,-5.482194,-4.502330,-7.007109,5.690353,4.619473,-1.040187,5.242898,8.031422,6.909547,6.705205,-5.837271,-2.850968,-3.068773,-0.827507,8.359766,9.957380,0.219208,-4.641576,3.815390,-0.492312,0.262142,-7.935668,2.641548,9.684633,-1.975346,3.113198,2.655566,-8.009491,-7.545303,5.954337,-6.411640,3.251306,-0.018921,8.540125,-0.552342,-3.282709,8.286631,-9.219472,3.499130,0.472858,-5.298207,-4.369974,-7.502409,6.220992,-4.226940,7.931608,1.021237,-0.916653,-0.417254,9.689635,8.239169,-7.201001,6.227882,0.220391,-3.244802,-1.368874,0.105145,-2.610151,0.982540,-9.130743,-9.053209,-9.479451,4.867327,-6.052813,0.244356,-1.975021,0.171352,3.369345,1.997723,7.506539,5.533539,-4.891314,5.286956,2.259855,-1.335605,-7.500148,0.985612,8.847693,1.230576,-3.648394,9.933567,-9.348176,0.067175,8.519497,-1.772480,-6.141036,8.017824,9.950985,3.710190,6.783287,-5.456414,3.227565,2.637898,-9.652272,-5.752967,2.786213,3.898127,-0.218015,4.987573,5.498486,2.643659,7.400971,-7.439480,0.376737,1.147986,-4.939015,-1.820151,6.984449,-2.044269,-5.520724,-4.189152,-6.042799,3.365067,-2.269708,2.317684,4.363926,0.303173,5.835558,5.133419,-0.214841,3.830410,-6.804806,-6.208090,0.161090,-6.173918,3.968366,3.738161,-7.736627,-5.171244,5.342267,7.140313,-3.791502,-2.725565,-9.026120,-4.187069,-6.169958,9.869516,5.823125,7.480320,-0.566602,3.937978,-9.108472,-2.686155,9.239791,-6.738264,-4.056968,5.793650,-5.589675,-9.918418,3.998008,3.272162,-1.086681,4.434464,-9.976885,4.913561,-3.056269,-0.380020,2.442786,7.547983,-3.880067,-5.082948,8.303359,9.205271,1.156046,3.202419,7.505351,-6.351684,0.975984,6.325367,-2.579320,7.716368,4.113587,-2.659002,-5.727473,-2.091811,3.457495,6.318797,-4.353783,-1.673072,-2.228850,4.060752,2.047426,5.041356,1.547731,-4.468593,3.717619,-4.463096,-6.887729,-3.633093,-0.403175,0.868357,3.495686,9.516392,7.327001,0.541412,3.962409,0.888841,-2.233085,0.978731,-7.288460,-3.850209,6.253152,-6.318902,4.285394,-7.652772,5.185753,0.002804,-7.141575,5.854478,-5.687623,2.256797,6.597817,-8.371057,-4.112143,7.172932,-9.744539,-5.655245,-5.404175,1.981084,8.825016,9.936149,8.577114,6.302153,2.966927,8.283350,5.728065,4.458136,-8.622744,9.686419,-0.729714,5.083792], dtype = "float32")#candidate|9808|(1056,)|const|float32
var_9809 = relay.var("var_9809", dtype = "int8", shape = (200, 2))#candidate|9809|(200, 2)|var|int8
call_9807 = relay.TupleGetItem(func_4995_call(relay.reshape(const_9808.astype('float32'), [1056,]), relay.reshape(var_9809.astype('int8'), [200, 2]), ), 1)
call_9810 = relay.TupleGetItem(func_4998_call(relay.reshape(const_9808.astype('float32'), [1056,]), relay.reshape(var_9809.astype('int8'), [200, 2]), ), 1)
func_8813_call = mod.get_global_var('func_8813')
func_8816_call = mutated_mod.get_global_var('func_8816')
var_9828 = relay.var("var_9828", dtype = "int32", shape = ())#candidate|9828|()|var|int32
call_9827 = relay.TupleGetItem(func_8813_call(relay.reshape(var_9809.astype('int8'), [400,]), relay.reshape(var_9828.astype('int32'), []), ), 4)
call_9829 = relay.TupleGetItem(func_8816_call(relay.reshape(var_9809.astype('int8'), [400,]), relay.reshape(var_9828.astype('int32'), []), ), 4)
func_7093_call = mod.get_global_var('func_7093')
func_7095_call = mutated_mod.get_global_var('func_7095')
call_9836 = relay.TupleGetItem(func_7093_call(), 0)
call_9837 = relay.TupleGetItem(func_7095_call(), 0)
func_8548_call = mod.get_global_var('func_8548')
func_8549_call = mutated_mod.get_global_var('func_8549')
call_9840 = relay.TupleGetItem(func_8548_call(), 0)
call_9841 = relay.TupleGetItem(func_8549_call(), 0)
output = relay.Tuple([call_9802,call_9807,const_9808,var_9809,call_9827,var_9828,call_9836,call_9840,])
output2 = relay.Tuple([call_9803,call_9810,const_9808,var_9809,call_9829,var_9828,call_9837,call_9841,])
func_9850 = relay.Function([var_9809,var_9828,], output)
mod['func_9850'] = func_9850
mod = relay.transform.InferType()(mod)
mutated_mod['func_9850'] = func_9850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9850_call = mutated_mod.get_global_var('func_9850')
var_9852 = relay.var("var_9852", dtype = "int8", shape = (200, 2))#candidate|9852|(200, 2)|var|int8
var_9853 = relay.var("var_9853", dtype = "int32", shape = ())#candidate|9853|()|var|int32
call_9851 = func_9850_call(var_9852,var_9853,)
output = call_9851
func_9854 = relay.Function([var_9852,var_9853,], output)
mutated_mod['func_9854'] = func_9854
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9873 = relay.var("var_9873", dtype = "float64", shape = (7, 7, 11))#candidate|9873|(7, 7, 11)|var|float64
uop_9874 = relay.exp(var_9873.astype('float64')) # shape=(7, 7, 11)
output = uop_9874
output2 = uop_9874
func_9880 = relay.Function([var_9873,], output)
mod['func_9880'] = func_9880
mod = relay.transform.InferType()(mod)
mutated_mod['func_9880'] = func_9880
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9881 = relay.var("var_9881", dtype = "float64", shape = (7, 7, 11))#candidate|9881|(7, 7, 11)|var|float64
func_9880_call = mutated_mod.get_global_var('func_9880')
call_9882 = func_9880_call(var_9881)
output = call_9882
func_9883 = relay.Function([var_9881], output)
mutated_mod['func_9883'] = func_9883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9139_call = mod.get_global_var('func_9139')
func_9141_call = mutated_mod.get_global_var('func_9141')
call_9898 = relay.TupleGetItem(func_9139_call(), 0)
call_9899 = relay.TupleGetItem(func_9141_call(), 0)
output = call_9898
output2 = call_9899
func_9900 = relay.Function([], output)
mod['func_9900'] = func_9900
mod = relay.transform.InferType()(mod)
mutated_mod['func_9900'] = func_9900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9900_call = mutated_mod.get_global_var('func_9900')
call_9901 = func_9900_call()
output = call_9901
func_9902 = relay.Function([], output)
mutated_mod['func_9902'] = func_9902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9262_call = mod.get_global_var('func_9262')
func_9263_call = mutated_mod.get_global_var('func_9263')
call_9975 = relay.TupleGetItem(func_9262_call(), 1)
call_9976 = relay.TupleGetItem(func_9263_call(), 1)
func_8280_call = mod.get_global_var('func_8280')
func_8283_call = mutated_mod.get_global_var('func_8283')
var_9994 = relay.var("var_9994", dtype = "int8", shape = (400,))#candidate|9994|(400,)|var|int8
const_9995 = relay.const(9, dtype = "int32")#candidate|9995|()|const|int32
call_9993 = relay.TupleGetItem(func_8280_call(relay.reshape(var_9994.astype('int8'), [400,]), relay.reshape(const_9995.astype('int32'), []), ), 1)
call_9996 = relay.TupleGetItem(func_8283_call(relay.reshape(var_9994.astype('int8'), [400,]), relay.reshape(const_9995.astype('int32'), []), ), 1)
func_1723_call = mod.get_global_var('func_1723')
func_1726_call = mutated_mod.get_global_var('func_1726')
var_10012 = relay.var("var_10012", dtype = "uint8", shape = (810,))#candidate|10012|(810,)|var|uint8
call_10011 = func_1723_call(relay.reshape(const_9995.astype('uint8'), []), relay.reshape(var_10012.astype('uint8'), [9, 9, 10]), )
call_10013 = func_1723_call(relay.reshape(const_9995.astype('uint8'), []), relay.reshape(var_10012.astype('uint8'), [9, 9, 10]), )
func_8548_call = mod.get_global_var('func_8548')
func_8549_call = mutated_mod.get_global_var('func_8549')
call_10015 = relay.TupleGetItem(func_8548_call(), 0)
call_10016 = relay.TupleGetItem(func_8549_call(), 0)
func_3462_call = mod.get_global_var('func_3462')
func_3464_call = mutated_mod.get_global_var('func_3464')
var_10021 = relay.var("var_10021", dtype = "float64", shape = (1820,))#candidate|10021|(1820,)|var|float64
call_10020 = relay.TupleGetItem(func_3462_call(relay.reshape(var_10021.astype('float64'), [14, 10, 13])), 1)
call_10022 = relay.TupleGetItem(func_3464_call(relay.reshape(var_10021.astype('float64'), [14, 10, 13])), 1)
func_823_call = mod.get_global_var('func_823')
func_826_call = mutated_mod.get_global_var('func_826')
var_10024 = relay.var("var_10024", dtype = "float32", shape = (312,))#candidate|10024|(312,)|var|float32
call_10023 = relay.TupleGetItem(func_823_call(relay.reshape(var_10024.astype('float32'), [6, 4, 13])), 4)
call_10025 = relay.TupleGetItem(func_826_call(relay.reshape(var_10024.astype('float32'), [6, 4, 13])), 4)
func_7714_call = mod.get_global_var('func_7714')
func_7717_call = mutated_mod.get_global_var('func_7717')
call_10026 = relay.TupleGetItem(func_7714_call(relay.reshape(call_10015.astype('float32'), [3, 16, 4])), 0)
call_10027 = relay.TupleGetItem(func_7717_call(relay.reshape(call_10015.astype('float32'), [3, 16, 4])), 0)
bop_10028 = relay.add(var_10012.astype('uint32'), const_9995.astype('uint32')) # shape=(810,)
output = relay.Tuple([call_9975,call_9993,var_9994,call_10011,call_10015,call_10020,var_10021,call_10023,var_10024,call_10026,bop_10028,])
output2 = relay.Tuple([call_9976,call_9996,var_9994,call_10013,call_10016,call_10022,var_10021,call_10025,var_10024,call_10027,bop_10028,])
func_10041 = relay.Function([var_9994,var_10012,var_10021,var_10024,], output)
mod['func_10041'] = func_10041
mod = relay.transform.InferType()(mod)
mutated_mod['func_10041'] = func_10041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10041_call = mutated_mod.get_global_var('func_10041')
var_10043 = relay.var("var_10043", dtype = "int8", shape = (400,))#candidate|10043|(400,)|var|int8
var_10044 = relay.var("var_10044", dtype = "uint8", shape = (810,))#candidate|10044|(810,)|var|uint8
var_10045 = relay.var("var_10045", dtype = "float64", shape = (1820,))#candidate|10045|(1820,)|var|float64
var_10046 = relay.var("var_10046", dtype = "float32", shape = (312,))#candidate|10046|(312,)|var|float32
call_10042 = func_10041_call(var_10043,var_10044,var_10045,var_10046,)
output = call_10042
func_10047 = relay.Function([var_10043,var_10044,var_10045,var_10046,], output)
mutated_mod['func_10047'] = func_10047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8171_call = mod.get_global_var('func_8171')
func_8173_call = mutated_mod.get_global_var('func_8173')
call_10066 = relay.TupleGetItem(func_8171_call(), 0)
call_10067 = relay.TupleGetItem(func_8173_call(), 0)
output = call_10066
output2 = call_10067
func_10079 = relay.Function([], output)
mod['func_10079'] = func_10079
mod = relay.transform.InferType()(mod)
output = func_10079()
func_10080 = relay.Function([], output)
mutated_mod['func_10080'] = func_10080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9235_call = mod.get_global_var('func_9235')
func_9237_call = mutated_mod.get_global_var('func_9237')
call_10081 = relay.TupleGetItem(func_9235_call(), 0)
call_10082 = relay.TupleGetItem(func_9237_call(), 0)
output = call_10081
output2 = call_10082
func_10089 = relay.Function([], output)
mod['func_10089'] = func_10089
mod = relay.transform.InferType()(mod)
output = func_10089()
func_10090 = relay.Function([], output)
mutated_mod['func_10090'] = func_10090
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10103 = relay.var("var_10103", dtype = "uint8", shape = (1, 14, 4))#candidate|10103|(1, 14, 4)|var|uint8
var_10104 = relay.var("var_10104", dtype = "uint8", shape = (4, 14, 4))#candidate|10104|(4, 14, 4)|var|uint8
bop_10105 = relay.less_equal(var_10103.astype('bool'), var_10104.astype('bool')) # shape=(4, 14, 4)
func_3609_call = mod.get_global_var('func_3609')
func_3613_call = mutated_mod.get_global_var('func_3613')
var_10113 = relay.var("var_10113", dtype = "float32", shape = (28,))#candidate|10113|(28,)|var|float32
var_10114 = relay.var("var_10114", dtype = "int8", shape = (8, 50))#candidate|10114|(8, 50)|var|int8
const_10115 = relay.const([-8.279207,5.664346,-5.933563,3.677536,6.858239,0.897847,1.629850,-7.522252,-6.729997,-6.091019,-0.623977,-0.094833,-1.303705,9.270981,8.834643,9.948921,-1.671816,-8.315231,0.549038,5.700235,-4.632693,-2.185047,2.110794,-0.215907,-9.610759,6.575042,4.558664,3.646558,0.692717,-7.758301,3.396766,-2.727049,-0.340937,-1.630749,-8.192188,-7.560825,-5.809687,1.914376,-3.126194,-4.809486,-9.482977,4.420368,8.905172,8.560750,1.943436,6.694300,2.462726,-5.314228,-8.676837,2.220274,-8.473757,5.114848,0.583547,-7.237090,-2.202892,-4.129674,-2.781348,3.881559,-2.177385,-7.418445,-3.731983,-4.373822,9.113737,7.034585,5.789682,7.645256,-5.194651,-6.384507,1.915820,2.972245,1.167153,-9.934088,9.390831,-4.221058,-2.353490,7.138819,-9.213755,-8.716169,8.755230,-5.811123,2.540955,-4.302782,-9.436805,4.973654,-1.296102,-0.907587,-2.540385,7.453015,-8.042143,6.303519,4.782464,0.143782,-0.431810,6.159935,4.224795,-3.089503,7.529404,-1.016060,6.959611,2.213252,8.046677,-3.568412,-9.265916,9.400858,8.588447,4.524651,-6.657165,-3.203133,9.584643,-2.509035,4.374041,1.320911,5.328940,7.306913,3.706099,-9.121620,-8.874341,-5.582534,7.291972,4.765574,-5.967217,1.786132,5.037708,4.203230,2.833848,0.963594,-3.766887,-3.992107,-7.901453,-0.414048,-4.140407,-6.143924,7.793479,-0.240283,3.611222,2.393832,-5.179858,-1.573551,0.396330,-9.354072,5.637109,3.222289,-5.323449,1.879542,3.049548,-1.288234,2.893174,-5.762590,4.225915,0.102345,-0.695926,-7.884987,6.211584,-2.985699,-8.554053,0.316775,-6.666842,2.401422,-2.081105,-3.075755,6.508499,-6.990126,1.060033,7.246410,5.776857,1.043893,-1.999984,-5.061242,-0.040513,-0.879007,-9.105212,-9.974570,-2.094753,0.664815,7.879660,0.448905,9.894083,9.729260,-3.275500,3.114149,1.847474,-0.596984,3.089990,5.530949,6.678546,-4.273170,1.699672,9.076238,3.347299,2.534271,-2.402140,5.606815,-1.496433,-0.669640,5.834382,-3.055887,6.054528,-2.009401,2.753821,-7.550287,7.704516,-7.030638,-1.535622,4.145074,3.551370,-1.741015,2.707937,4.456627,-2.920889,-9.098043,5.761143,-4.972578,8.139035,2.676498,-0.705543,-0.905375,3.325369,-8.112403,-1.839914,6.903983,-4.428509,1.054164,6.834918,0.028364,-4.717998,7.745944,-4.163807,-9.176660,7.177925,3.597601,-6.056808,5.653339,-8.780527,6.753229,6.024322,-7.870861,-9.002554,0.106995,-4.462112,2.560900,6.886984,5.934787,-2.027414,9.736020,5.350374,1.997179,-0.723011,3.377336,-8.104382,9.702103,7.867375,-9.925366,2.846167,3.198845,-3.935128,0.524007,-0.200034,-2.869324,-1.228566,-9.961274,-7.296647,3.644156,-4.984155,5.557985,6.510684,9.773497,7.007761,-9.382992,3.438248,-5.624741,-0.794982,3.905917,-0.449886,1.345598,-2.651286,4.590265,3.512063,9.146276,6.302253,8.075321,-8.568040,-8.933397,-1.564433,-8.884686,-1.033067,1.684364,-2.136847,9.767903,-2.344500,-2.388787,-4.259834,9.523352,-3.867366,-0.920403,-8.628408,0.577603,-1.678066,-0.522773,-8.318942,-7.119653,7.875569,-6.525739,8.034369,1.684780,-6.971210,-9.463985,1.685579,2.922598,-2.140783,3.760691,0.500616,2.576655,-0.126404,-9.276774,4.739263,-7.011218,-3.884336,-4.093913,-3.669908,-2.663262,4.076759,-0.650233,-1.903241,9.454133,4.596997,1.230586,9.101745,-5.712093,-4.535850,-5.707558,9.496247,1.839314,0.974148,6.154395,7.448761,6.942985,-7.175251,3.453511,3.355746,-4.690439,9.258159,0.604791,-9.800384,8.387205,-8.503303,-2.964273,-1.711392,7.972495,-8.264396,7.536077,-3.601558,-5.211206,-6.440417,-3.544971,-1.722185,-9.672461,-8.821267,-3.386866,2.288218,-1.979834], dtype = "float64")#candidate|10115|(360,)|const|float64
call_10112 = relay.TupleGetItem(func_3609_call(relay.reshape(var_10113.astype('float32'), [4, 7, 1]), relay.reshape(var_10114.astype('int8'), [400,]), relay.reshape(const_10115.astype('float64'), [360,]), ), 3)
call_10116 = relay.TupleGetItem(func_3613_call(relay.reshape(var_10113.astype('float32'), [4, 7, 1]), relay.reshape(var_10114.astype('int8'), [400,]), relay.reshape(const_10115.astype('float64'), [360,]), ), 3)
func_5480_call = mod.get_global_var('func_5480')
func_5483_call = mutated_mod.get_global_var('func_5483')
var_10120 = relay.var("var_10120", dtype = "float64", shape = (88,))#candidate|10120|(88,)|var|float64
call_10119 = relay.TupleGetItem(func_5480_call(relay.reshape(var_10120.astype('float64'), [11, 1, 8])), 0)
call_10121 = relay.TupleGetItem(func_5483_call(relay.reshape(var_10120.astype('float64'), [11, 1, 8])), 0)
func_8627_call = mod.get_global_var('func_8627')
func_8628_call = mutated_mod.get_global_var('func_8628')
call_10137 = func_8627_call()
call_10138 = func_8627_call()
func_8895_call = mod.get_global_var('func_8895')
func_8896_call = mutated_mod.get_global_var('func_8896')
call_10140 = func_8895_call()
call_10141 = func_8895_call()
bop_10154 = relay.bitwise_or(call_10119.astype('uint32'), relay.reshape(var_10120.astype('uint32'), relay.shape_of(call_10119))) # shape=(11, 1, 8)
bop_10157 = relay.bitwise_or(call_10121.astype('uint32'), relay.reshape(var_10120.astype('uint32'), relay.shape_of(call_10121))) # shape=(11, 1, 8)
func_7093_call = mod.get_global_var('func_7093')
func_7095_call = mutated_mod.get_global_var('func_7095')
call_10160 = relay.TupleGetItem(func_7093_call(), 0)
call_10161 = relay.TupleGetItem(func_7095_call(), 0)
uop_10169 = relay.acosh(bop_10154.astype('float64')) # shape=(11, 1, 8)
uop_10171 = relay.acosh(bop_10157.astype('float64')) # shape=(11, 1, 8)
output = relay.Tuple([bop_10105,call_10112,var_10113,var_10114,const_10115,call_10137,call_10140,call_10160,uop_10169,])
output2 = relay.Tuple([bop_10105,call_10116,var_10113,var_10114,const_10115,call_10138,call_10141,call_10161,uop_10171,])
func_10182 = relay.Function([var_10103,var_10104,var_10113,var_10114,var_10120,], output)
mod['func_10182'] = func_10182
mod = relay.transform.InferType()(mod)
mutated_mod['func_10182'] = func_10182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10182_call = mutated_mod.get_global_var('func_10182')
var_10184 = relay.var("var_10184", dtype = "uint8", shape = (1, 14, 4))#candidate|10184|(1, 14, 4)|var|uint8
var_10185 = relay.var("var_10185", dtype = "uint8", shape = (4, 14, 4))#candidate|10185|(4, 14, 4)|var|uint8
var_10186 = relay.var("var_10186", dtype = "float32", shape = (28,))#candidate|10186|(28,)|var|float32
var_10187 = relay.var("var_10187", dtype = "int8", shape = (8, 50))#candidate|10187|(8, 50)|var|int8
var_10188 = relay.var("var_10188", dtype = "float64", shape = (88,))#candidate|10188|(88,)|var|float64
call_10183 = func_10182_call(var_10184,var_10185,var_10186,var_10187,var_10188,)
output = call_10183
func_10189 = relay.Function([var_10184,var_10185,var_10186,var_10187,var_10188,], output)
mutated_mod['func_10189'] = func_10189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8171_call = mod.get_global_var('func_8171')
func_8173_call = mutated_mod.get_global_var('func_8173')
call_10228 = relay.TupleGetItem(func_8171_call(), 0)
call_10229 = relay.TupleGetItem(func_8173_call(), 0)
func_7860_call = mod.get_global_var('func_7860')
func_7863_call = mutated_mod.get_global_var('func_7863')
const_10291 = relay.const(-4, dtype = "int32")#candidate|10291|()|const|int32
call_10290 = relay.TupleGetItem(func_7860_call(relay.reshape(const_10291.astype('int32'), [])), 3)
call_10292 = relay.TupleGetItem(func_7863_call(relay.reshape(const_10291.astype('int32'), [])), 3)
func_3370_call = mod.get_global_var('func_3370')
func_3373_call = mutated_mod.get_global_var('func_3373')
var_10321 = relay.var("var_10321", dtype = "int32", shape = (300,))#candidate|10321|(300,)|var|int32
call_10320 = relay.TupleGetItem(func_3370_call(relay.reshape(const_10291.astype('int32'), []), relay.reshape(var_10321.astype('int32'), [2, 15, 10]), ), 0)
call_10322 = relay.TupleGetItem(func_3373_call(relay.reshape(const_10291.astype('int32'), []), relay.reshape(var_10321.astype('int32'), [2, 15, 10]), ), 0)
func_3462_call = mod.get_global_var('func_3462')
func_3464_call = mutated_mod.get_global_var('func_3464')
call_10327 = relay.TupleGetItem(func_3462_call(relay.reshape(call_10290.astype('float64'), [14, 10, 13])), 1)
call_10328 = relay.TupleGetItem(func_3464_call(relay.reshape(call_10290.astype('float64'), [14, 10, 13])), 1)
func_9139_call = mod.get_global_var('func_9139')
func_9141_call = mutated_mod.get_global_var('func_9141')
call_10332 = relay.TupleGetItem(func_9139_call(), 1)
call_10333 = relay.TupleGetItem(func_9141_call(), 1)
output = relay.Tuple([call_10228,call_10290,const_10291,call_10320,var_10321,call_10327,call_10332,])
output2 = relay.Tuple([call_10229,call_10292,const_10291,call_10322,var_10321,call_10328,call_10333,])
func_10334 = relay.Function([var_10321,], output)
mod['func_10334'] = func_10334
mod = relay.transform.InferType()(mod)
mutated_mod['func_10334'] = func_10334
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10335 = relay.var("var_10335", dtype = "int32", shape = (300,))#candidate|10335|(300,)|var|int32
func_10334_call = mutated_mod.get_global_var('func_10334')
call_10336 = func_10334_call(var_10335)
output = call_10336
func_10337 = relay.Function([var_10335], output)
mutated_mod['func_10337'] = func_10337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7784_call = mod.get_global_var('func_7784')
func_7785_call = mutated_mod.get_global_var('func_7785')
call_10357 = func_7784_call()
call_10358 = func_7784_call()
output = relay.Tuple([call_10357,])
output2 = relay.Tuple([call_10358,])
func_10362 = relay.Function([], output)
mod['func_10362'] = func_10362
mod = relay.transform.InferType()(mod)
mutated_mod['func_10362'] = func_10362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10362_call = mutated_mod.get_global_var('func_10362')
call_10363 = func_10362_call()
output = call_10363
func_10364 = relay.Function([], output)
mutated_mod['func_10364'] = func_10364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8895_call = mod.get_global_var('func_8895')
func_8896_call = mutated_mod.get_global_var('func_8896')
call_10395 = func_8895_call()
call_10396 = func_8895_call()
func_9900_call = mod.get_global_var('func_9900')
func_9902_call = mutated_mod.get_global_var('func_9902')
call_10405 = func_9900_call()
call_10406 = func_9900_call()
func_7986_call = mod.get_global_var('func_7986')
func_7988_call = mutated_mod.get_global_var('func_7988')
call_10409 = func_7986_call(relay.reshape(call_10395.astype('float32'), [3, 16, 4]))
call_10410 = func_7986_call(relay.reshape(call_10395.astype('float32'), [3, 16, 4]))
uop_10422 = relay.log(call_10395.astype('float64')) # shape=(3, 16, 4)
uop_10424 = relay.log(call_10396.astype('float64')) # shape=(3, 16, 4)
func_8962_call = mod.get_global_var('func_8962')
func_8964_call = mutated_mod.get_global_var('func_8964')
var_10432 = relay.var("var_10432", dtype = "float64", shape = (70,))#candidate|10432|(70,)|var|float64
call_10431 = relay.TupleGetItem(func_8962_call(relay.reshape(var_10432.astype('float64'), [1, 7, 10])), 0)
call_10433 = relay.TupleGetItem(func_8964_call(relay.reshape(var_10432.astype('float64'), [1, 7, 10])), 0)
output = relay.Tuple([call_10405,call_10409,uop_10422,call_10431,var_10432,])
output2 = relay.Tuple([call_10406,call_10410,uop_10424,call_10433,var_10432,])
func_10450 = relay.Function([var_10432,], output)
mod['func_10450'] = func_10450
mod = relay.transform.InferType()(mod)
var_10451 = relay.var("var_10451", dtype = "float64", shape = (70,))#candidate|10451|(70,)|var|float64
output = func_10450(var_10451)
func_10452 = relay.Function([var_10451], output)
mutated_mod['func_10452'] = func_10452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7617_call = mod.get_global_var('func_7617')
func_7619_call = mutated_mod.get_global_var('func_7619')
call_10454 = func_7617_call()
call_10455 = func_7617_call()
func_8492_call = mod.get_global_var('func_8492')
func_8493_call = mutated_mod.get_global_var('func_8493')
call_10456 = relay.TupleGetItem(func_8492_call(), 1)
call_10457 = relay.TupleGetItem(func_8493_call(), 1)
output = relay.Tuple([call_10454,call_10456,])
output2 = relay.Tuple([call_10455,call_10457,])
func_10463 = relay.Function([], output)
mod['func_10463'] = func_10463
mod = relay.transform.InferType()(mod)
mutated_mod['func_10463'] = func_10463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10463_call = mutated_mod.get_global_var('func_10463')
call_10464 = func_10463_call()
output = call_10464
func_10465 = relay.Function([], output)
mutated_mod['func_10465'] = func_10465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10089_call = mod.get_global_var('func_10089')
func_10090_call = mutated_mod.get_global_var('func_10090')
call_10525 = func_10089_call()
call_10526 = func_10089_call()
output = call_10525
output2 = call_10526
func_10538 = relay.Function([], output)
mod['func_10538'] = func_10538
mod = relay.transform.InferType()(mod)
output = func_10538()
func_10539 = relay.Function([], output)
mutated_mod['func_10539'] = func_10539
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10540 = relay.var("var_10540", dtype = "bool", shape = ())#candidate|10540|()|var|bool
const_10541 = relay.const([[[True,True],[True,False],[False,True],[True,False],[True,False],[True,True]]], dtype = "bool")#candidate|10541|(1, 6, 2)|const|bool
bop_10542 = relay.logical_and(var_10540.astype('bool'), const_10541.astype('bool')) # shape=(1, 6, 2)
output = relay.Tuple([bop_10542,])
output2 = relay.Tuple([bop_10542,])
func_10551 = relay.Function([var_10540,], output)
mod['func_10551'] = func_10551
mod = relay.transform.InferType()(mod)
var_10552 = relay.var("var_10552", dtype = "bool", shape = ())#candidate|10552|()|var|bool
output = func_10551(var_10552)
func_10553 = relay.Function([var_10552], output)
mutated_mod['func_10553'] = func_10553
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10582 = relay.var("var_10582", dtype = "bool", shape = (12, 8, 6))#candidate|10582|(12, 8, 6)|var|bool
var_10583 = relay.var("var_10583", dtype = "bool", shape = (12, 8, 6))#candidate|10583|(12, 8, 6)|var|bool
bop_10584 = relay.logical_or(var_10582.astype('bool'), relay.reshape(var_10583.astype('bool'), relay.shape_of(var_10582))) # shape=(12, 8, 6)
output = bop_10584
output2 = bop_10584
func_10588 = relay.Function([var_10582,var_10583,], output)
mod['func_10588'] = func_10588
mod = relay.transform.InferType()(mod)
var_10589 = relay.var("var_10589", dtype = "bool", shape = (12, 8, 6))#candidate|10589|(12, 8, 6)|var|bool
var_10590 = relay.var("var_10590", dtype = "bool", shape = (12, 8, 6))#candidate|10590|(12, 8, 6)|var|bool
output = func_10588(var_10589,var_10590,)
func_10591 = relay.Function([var_10589,var_10590,], output)
mutated_mod['func_10591'] = func_10591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9235_call = mod.get_global_var('func_9235')
func_9237_call = mutated_mod.get_global_var('func_9237')
call_10593 = relay.TupleGetItem(func_9235_call(), 0)
call_10594 = relay.TupleGetItem(func_9237_call(), 0)
func_8568_call = mod.get_global_var('func_8568')
func_8570_call = mutated_mod.get_global_var('func_8570')
call_10596 = relay.TupleGetItem(func_8568_call(), 0)
call_10597 = relay.TupleGetItem(func_8570_call(), 0)
func_9880_call = mod.get_global_var('func_9880')
func_9883_call = mutated_mod.get_global_var('func_9883')
var_10605 = relay.var("var_10605", dtype = "float64", shape = (539,))#candidate|10605|(539,)|var|float64
call_10604 = func_9880_call(relay.reshape(var_10605.astype('float64'), [7, 7, 11]))
call_10606 = func_9880_call(relay.reshape(var_10605.astype('float64'), [7, 7, 11]))
output = relay.Tuple([call_10593,call_10596,call_10604,var_10605,])
output2 = relay.Tuple([call_10594,call_10597,call_10606,var_10605,])
func_10621 = relay.Function([var_10605,], output)
mod['func_10621'] = func_10621
mod = relay.transform.InferType()(mod)
mutated_mod['func_10621'] = func_10621
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10622 = relay.var("var_10622", dtype = "float64", shape = (539,))#candidate|10622|(539,)|var|float64
func_10621_call = mutated_mod.get_global_var('func_10621')
call_10623 = func_10621_call(var_10622)
output = call_10623
func_10624 = relay.Function([var_10622], output)
mutated_mod['func_10624'] = func_10624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9900_call = mod.get_global_var('func_9900')
func_9902_call = mutated_mod.get_global_var('func_9902')
call_10688 = func_9900_call()
call_10689 = func_9900_call()
uop_10700 = relay.sqrt(call_10688.astype('float32')) # shape=(1, 9, 2)
uop_10702 = relay.sqrt(call_10689.astype('float32')) # shape=(1, 9, 2)
uop_10705 = relay.acosh(uop_10700.astype('float64')) # shape=(1, 9, 2)
uop_10707 = relay.acosh(uop_10702.astype('float64')) # shape=(1, 9, 2)
output = relay.Tuple([uop_10705,])
output2 = relay.Tuple([uop_10707,])
func_10708 = relay.Function([], output)
mod['func_10708'] = func_10708
mod = relay.transform.InferType()(mod)
mutated_mod['func_10708'] = func_10708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10708_call = mutated_mod.get_global_var('func_10708')
call_10709 = func_10708_call()
output = call_10709
func_10710 = relay.Function([], output)
mutated_mod['func_10710'] = func_10710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7118_call = mod.get_global_var('func_7118')
func_7119_call = mutated_mod.get_global_var('func_7119')
call_10736 = relay.TupleGetItem(func_7118_call(), 0)
call_10737 = relay.TupleGetItem(func_7119_call(), 0)
func_10463_call = mod.get_global_var('func_10463')
func_10465_call = mutated_mod.get_global_var('func_10465')
call_10763 = relay.TupleGetItem(func_10463_call(), 1)
call_10764 = relay.TupleGetItem(func_10465_call(), 1)
func_9308_call = mod.get_global_var('func_9308')
func_9309_call = mutated_mod.get_global_var('func_9309')
call_10765 = func_9308_call()
call_10766 = func_9308_call()
func_2973_call = mod.get_global_var('func_2973')
func_2977_call = mutated_mod.get_global_var('func_2977')
var_10768 = relay.var("var_10768", dtype = "bool", shape = (12, 4))#candidate|10768|(12, 4)|var|bool
call_10767 = func_2973_call(relay.reshape(var_10768.astype('bool'), [6, 2, 4]), relay.reshape(var_10768.astype('bool'), [6, 2, 4]), )
call_10769 = func_2973_call(relay.reshape(var_10768.astype('bool'), [6, 2, 4]), relay.reshape(var_10768.astype('bool'), [6, 2, 4]), )
uop_10772 = relay.acosh(call_10736.astype('float64')) # shape=(3, 16, 4)
uop_10774 = relay.acosh(call_10737.astype('float64')) # shape=(3, 16, 4)
func_2973_call = mod.get_global_var('func_2973')
func_2977_call = mutated_mod.get_global_var('func_2977')
call_10783 = func_2973_call(relay.reshape(call_10767.astype('bool'), [6, 2, 4]), relay.reshape(var_10768.astype('bool'), [6, 2, 4]), )
call_10784 = func_2973_call(relay.reshape(call_10767.astype('bool'), [6, 2, 4]), relay.reshape(var_10768.astype('bool'), [6, 2, 4]), )
func_9526_call = mod.get_global_var('func_9526')
func_9527_call = mutated_mod.get_global_var('func_9527')
call_10794 = relay.TupleGetItem(func_9526_call(), 4)
call_10795 = relay.TupleGetItem(func_9527_call(), 4)
output = relay.Tuple([call_10763,call_10765,call_10767,var_10768,uop_10772,call_10783,call_10794,])
output2 = relay.Tuple([call_10764,call_10766,call_10769,var_10768,uop_10774,call_10784,call_10795,])
func_10800 = relay.Function([var_10768,], output)
mod['func_10800'] = func_10800
mod = relay.transform.InferType()(mod)
mutated_mod['func_10800'] = func_10800
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10801 = relay.var("var_10801", dtype = "bool", shape = (12, 4))#candidate|10801|(12, 4)|var|bool
func_10800_call = mutated_mod.get_global_var('func_10800')
call_10802 = func_10800_call(var_10801)
output = call_10802
func_10803 = relay.Function([var_10801], output)
mutated_mod['func_10803'] = func_10803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9235_call = mod.get_global_var('func_9235')
func_9237_call = mutated_mod.get_global_var('func_9237')
call_10882 = relay.TupleGetItem(func_9235_call(), 0)
call_10883 = relay.TupleGetItem(func_9237_call(), 0)
func_7067_call = mod.get_global_var('func_7067')
func_7068_call = mutated_mod.get_global_var('func_7068')
call_10887 = relay.TupleGetItem(func_7067_call(), 1)
call_10888 = relay.TupleGetItem(func_7068_call(), 1)
output = relay.Tuple([call_10882,call_10887,])
output2 = relay.Tuple([call_10883,call_10888,])
func_10907 = relay.Function([], output)
mod['func_10907'] = func_10907
mod = relay.transform.InferType()(mod)
mutated_mod['func_10907'] = func_10907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10907_call = mutated_mod.get_global_var('func_10907')
call_10908 = func_10907_call()
output = call_10908
func_10909 = relay.Function([], output)
mutated_mod['func_10909'] = func_10909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7184_call = mod.get_global_var('func_7184')
func_7185_call = mutated_mod.get_global_var('func_7185')
call_10943 = relay.TupleGetItem(func_7184_call(), 1)
call_10944 = relay.TupleGetItem(func_7185_call(), 1)
output = relay.Tuple([call_10943,])
output2 = relay.Tuple([call_10944,])
func_10971 = relay.Function([], output)
mod['func_10971'] = func_10971
mod = relay.transform.InferType()(mod)
mutated_mod['func_10971'] = func_10971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10971_call = mutated_mod.get_global_var('func_10971')
call_10972 = func_10971_call()
output = call_10972
func_10973 = relay.Function([], output)
mutated_mod['func_10973'] = func_10973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8923_call = mod.get_global_var('func_8923')
func_8924_call = mutated_mod.get_global_var('func_8924')
call_10999 = relay.TupleGetItem(func_8923_call(), 2)
call_11000 = relay.TupleGetItem(func_8924_call(), 2)
func_9787_call = mod.get_global_var('func_9787')
func_9790_call = mutated_mod.get_global_var('func_9790')
var_11005 = relay.var("var_11005", dtype = "float32", shape = (315,))#candidate|11005|(315,)|var|float32
var_11006 = relay.var("var_11006", dtype = "int32", shape = (300,))#candidate|11006|(300,)|var|int32
call_11004 = relay.TupleGetItem(func_9787_call(relay.reshape(var_11005.astype('float32'), [35, 9]), relay.reshape(var_11006.astype('int32'), [1, 300]), ), 4)
call_11007 = relay.TupleGetItem(func_9790_call(relay.reshape(var_11005.astype('float32'), [35, 9]), relay.reshape(var_11006.astype('int32'), [1, 300]), ), 4)
func_1723_call = mod.get_global_var('func_1723')
func_1726_call = mutated_mod.get_global_var('func_1726')
const_11011 = relay.const([-8,7,-10,-5,4,-3,-6,-1,-7,-8,-6,-9,-7,-1,4,6,-3,-5,1,3,-2,4,-1,-6,9,5,-10,8,-3,-10,7,1,3,4,8,1,-6,-9,-9,-7,-2,4,5,9,2,-8,-7,8,-5,-6,-2,4,-4,-4,9,-3,-2,-2,10,-8,3,3,5,2,6,4,6,5,-10,-5,10,9,-5,-2,4,-1,-6,-7,-8,10,8,3,1,-6,-6,-1,8,-10,-2,-10,-10,3,5,-6,10,8,-7,4,10,-8,-10,5,-10,-1,-5,1,1,-3,6,9,3,-4,10,-10,-7,-9,9,4,-8,4,-7,-1,10,3,1,-4,3,7,-7,6,-5,-10,8,6,3,1,6,6,-6,-4,5,3,5,1,-7,5,-3,-10,2,-9,7,-3,-2,1,-2,-4,2,-4,7,8,-4,10,1,-2,-8,-8,-1,-8,-1,-10,3,-9,1,-1,-9,-4,5,4,-6,8,7,8,6,2,6,-10,4,-3,3,5,6,-6,-5,-6,-7,4,-10,-2,10,-2,6,5,-3,4,4,-7,1,1,6,-7,-2,6,7,8,2,4,-4,-7,-7,1,2,-2,-3,-9,10,1,10,6,5,-3,-4,6,-5,-4,-8,2,5,5,6,-9,1,-10,7,-8,-8,1,9,-1,-2,5,-4,-2,-2,8,-2,-4,-7,5,8,8,6,1,7,-10,-9,-3,-3,-3,-3,-2,-10,-9,9,-2,-9,5,10,-3,-8,-9,1,1,6,-10,6,3,6,-4,-6,-2,-7,-2,-2,5,9,8,-4,5,-4,-7,5,-6,-2,6,7,4,-8,10,-5,-2,6,6,1,-10,-4,-5,6,2,2,-7,9,-2,2,-6,8,1,2,-6,9,-7,-2,4,4,8,-5,4,8,8,1,-7,4,2,7,10,-5,-1,-1,-5,-2,-2,7,8,3,5,1,-2,-10,-2,4,3,9,6,-10,5,-3,-8,5,8,-1,2,3,-9,-8,-9,1,2,9,-9,1,10,3,6,5,5,-5,8,-1,-2,-5,1,-5,7,-3,3,-2,-7,3,2,7,4,4,-1,-8,-4,-4,-3,10,-4,-6,-6,-2,-3,6,2,3,-5,-9,-4,9,-4,-2,5,4,-6,6,7,7,-2,-5,8,2,7,-10,-10,8,6,-10,-4,10,-5,4,-6,-3,-5,5,-6,-7,-2,-5,-9,-8,-5,-6,3,10,6,-1,6,1,2,-7,6,-3,-2,-1,-3,6,7,6,-9,7,2,-10,-4,4,-8,4,4,2,-10,-4,4,-1,-1,-1,5,10,8,8,10,7,2,3,3,-1,-10,5,5,5,3,8,5,-5,-7,-6,6,6,9,5,5,-4,-3,1,5,5,1,3,-3,-1,-3,7,2,-9,-1,2,2,-2,-5,10,8,-7,9,7,10,2,6,-5,1,9,10,-1,-9,5,6,5,3,7,4,5,3,-9,7,7,-10,1,10,-2,4,3,7,6,-2,1,6,-1,-3,7,-6,9,5,-8,1,3,9,5,-6,3,5,-3,2,-1,-4,-9,5,8,6,-4,-6,-2,5,-9,10,8,-10,6,4,-10,-8,-1,-5,-2,5,-9,2,-7,9,-7,-10,4,-5,1,-10,10,-10,-10,1,7,7,-8,7,8,-1,-5,-10,-10,-1,-6,4,8,8,10,-9,5,2,5,-9,7,7,-3,-3,6,6,7,-8,5,-5,5,-3,-8,-6,-6,5,6,-7,1,-2,8,-8,1,1,4,-2,-10,1,-1,2,-1,1,10,-8,10,9,9,2,-5,-7,-1,-10,-3,-10,6,-2,-8,8,-2,1,6,1,-9,-7,-10,-3,-3,-1,-4,9,-2,10,-5,-7,3,-1,10,-8,9,-1,-10,-9,1,-7,10,6,-8,-1,5,2,-8,8,-8,-6,2,3,6,-2,3,-10,9,6,-2,-2,7,-4,-8,-4,9,-3,-9,-2,10,10,7,-6,-5,4,7,4,-10,10,1,6,6,-2,6,8,9,-7,5,3,-4,-9,2,9,-2,-4,5,-6,7,-3,-3,9,8,-8,-9,-5,7,8,-9,-5,-5,5,-9,10,10,-1,6,-3,-5,-7,2,-9,-8,-2,1,-8,-6,-8,-6,3,4,7,1,2,2,2,1,-5,-8,6,6,-8], dtype = "uint8")#candidate|11011|(810,)|const|uint8
call_11010 = func_1723_call(relay.reshape(call_10999.astype('uint8'), []), relay.reshape(const_11011.astype('uint8'), [9, 9, 10]), )
call_11012 = func_1723_call(relay.reshape(call_10999.astype('uint8'), []), relay.reshape(const_11011.astype('uint8'), [9, 9, 10]), )
bop_11023 = relay.floor_divide(const_11011.astype('float32'), call_10999.astype('float32')) # shape=(810,)
bop_11026 = relay.floor_divide(const_11011.astype('float32'), call_11000.astype('float32')) # shape=(810,)
output = relay.Tuple([call_11004,var_11005,var_11006,call_11010,bop_11023,])
output2 = relay.Tuple([call_11007,var_11005,var_11006,call_11012,bop_11026,])
func_11032 = relay.Function([var_11005,var_11006,], output)
mod['func_11032'] = func_11032
mod = relay.transform.InferType()(mod)
var_11033 = relay.var("var_11033", dtype = "float32", shape = (315,))#candidate|11033|(315,)|var|float32
var_11034 = relay.var("var_11034", dtype = "int32", shape = (300,))#candidate|11034|(300,)|var|int32
output = func_11032(var_11033,var_11034,)
func_11035 = relay.Function([var_11033,var_11034,], output)
mutated_mod['func_11035'] = func_11035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8171_call = mod.get_global_var('func_8171')
func_8173_call = mutated_mod.get_global_var('func_8173')
call_11091 = relay.TupleGetItem(func_8171_call(), 0)
call_11092 = relay.TupleGetItem(func_8173_call(), 0)
output = relay.Tuple([call_11091,])
output2 = relay.Tuple([call_11092,])
func_11105 = relay.Function([], output)
mod['func_11105'] = func_11105
mod = relay.transform.InferType()(mod)
output = func_11105()
func_11106 = relay.Function([], output)
mutated_mod['func_11106'] = func_11106
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11172 = relay.var("var_11172", dtype = "float64", shape = (13, 7, 16))#candidate|11172|(13, 7, 16)|var|float64
uop_11173 = relay.acos(var_11172.astype('float64')) # shape=(13, 7, 16)
uop_11178 = relay.cosh(uop_11173.astype('float32')) # shape=(13, 7, 16)
func_823_call = mod.get_global_var('func_823')
func_826_call = mutated_mod.get_global_var('func_826')
const_11198 = relay.const([-8.882818,-1.626476,-4.643889,-7.384312,4.742852,-6.039932,-4.312943,5.539074,6.556320,4.072383,8.218385,7.677211,6.760108,-2.718095,7.894022,3.874085,-1.705655,-9.010461,-4.604882,2.680741,8.708016,6.149151,9.352665,1.370448,9.364068,-5.256364,5.404005,8.564836,6.799434,3.485411,5.954060,-1.088116,-1.050604,-0.618130,7.619549,-5.359793,1.380651,1.770702,-7.772419,8.737829,3.227842,-0.556566,-9.037123,0.128549,-8.042774,-6.765778,7.413369,4.305960,7.474394,4.588439,1.934899,3.659415,5.632199,5.107183,-8.642098,9.526679,-9.411980,-8.182776,6.114109,-8.266457,-7.119907,-4.377432,-2.751473,6.531579,4.401415,-2.825026,-0.270281,-5.816948,-8.378129,0.622878,-2.074914,-3.748689,-3.415693,0.836672,4.367223,5.698188,3.636035,9.743132,-9.923501,4.824848,2.370635,-3.979092,-1.324025,3.646271,7.043335,0.535197,9.769650,-8.076660,-5.011154,-2.172316,-1.377836,9.498178,9.204594,2.471013,1.248168,4.067910,-3.174269,-5.485359,-8.551950,-4.469706,-6.477944,-9.645516,4.233860,4.837084,-7.326854,5.029958,-8.443752,-3.225774,-1.800720,7.841527,2.810217,-3.810420,-9.048382,-7.864148,6.095205,-0.299275,-6.433563,4.204229,-2.247821,0.249703,-1.254656,7.889167,1.693826,-9.692502,3.535309,2.844572,0.408585,-4.321106,-4.174921,-8.366466,7.409924,6.859256,7.055766,-2.117192,7.189355,2.639106,-6.706992,-6.600282,-4.862184,7.251312,-9.893371,-6.520826,8.569110,-5.120316,3.525464,3.010180,4.186615,-9.225635,9.372216,-7.410353,-2.800667,9.829146,-4.135782,-3.423794,-6.312677,-9.607961,-4.007647,-5.668830,-9.879724,4.836720,-5.857772,-5.898093,3.297616,-1.801686,7.879430,-4.750479,-0.355040,1.328988,3.111992,-3.172259,1.480265,0.507481,3.903069,1.339279,-0.273905,-4.577565,7.490880,-8.307589,7.958508,-5.873105,-3.178693,0.574576,-7.072049,0.646070,-3.152950,0.298380,1.513467,-9.404367,9.541504,-4.933184,-2.271415,-9.472570,6.241194,5.683629,4.937175,-2.432796,-4.838722,7.447485,-0.193775,-3.121461,-7.640770,-8.338245,-3.868310,-8.742642,8.872971,8.507430,0.335088,2.726274,4.426192,-2.139166,-0.986782,-8.176744,-8.681142,6.841446,-4.110958,1.215235,-7.699817,-0.740377,-8.567162,-9.257695,5.325551,-5.443637,4.547974,-7.005602,-7.634630,3.509708,5.032860,5.845728,9.249365,-9.610356,-1.034435,-7.123039,3.508144,-8.492895,-1.148034,4.808429,-3.534684,-8.031395,-0.938765,-6.774717,7.420400,3.549067,5.151751,-0.427718,-0.385762,1.386960,0.101643,3.747871,-0.746956,-2.714200,-7.758057,6.227174,5.970564,-5.176657,-2.404844,-4.671200,-8.847360,-9.172513,-3.002600,7.194047,6.266861,-8.785053,-8.668715,6.574818,1.397300,2.591017,-6.132815,-4.519823,9.724654,2.596625,-6.813423,5.759242,6.049509,-9.209856,1.576114,-8.856145,-1.940873,1.152986,-5.562566,-7.860413,-9.417904,7.816326,-7.381832,2.834704,-2.559570,0.340331,-0.470441,-9.429100,-8.939325,-3.243395,-9.466030,-5.747822,3.117012,9.636021,-3.210902,1.828342,-6.438040,8.604802,-6.278492,-7.718641,8.904960,5.067956,-2.304853,-0.713254,7.103784,-2.682468,2.297697,-6.556712,-0.411702,6.675952,7.075169,-6.777339], dtype = "float32")#candidate|11198|(312,)|const|float32
call_11197 = relay.TupleGetItem(func_823_call(relay.reshape(const_11198.astype('float32'), [6, 4, 13])), 4)
call_11199 = relay.TupleGetItem(func_826_call(relay.reshape(const_11198.astype('float32'), [6, 4, 13])), 4)
output = relay.Tuple([uop_11178,call_11197,const_11198,])
output2 = relay.Tuple([uop_11178,call_11199,const_11198,])
func_11202 = relay.Function([var_11172,], output)
mod['func_11202'] = func_11202
mod = relay.transform.InferType()(mod)
var_11203 = relay.var("var_11203", dtype = "float64", shape = (13, 7, 16))#candidate|11203|(13, 7, 16)|var|float64
output = func_11202(var_11203)
func_11204 = relay.Function([var_11203], output)
mutated_mod['func_11204'] = func_11204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8627_call = mod.get_global_var('func_8627')
func_8628_call = mutated_mod.get_global_var('func_8628')
call_11208 = func_8627_call()
call_11209 = func_8627_call()
output = relay.Tuple([call_11208,])
output2 = relay.Tuple([call_11209,])
func_11210 = relay.Function([], output)
mod['func_11210'] = func_11210
mod = relay.transform.InferType()(mod)
mutated_mod['func_11210'] = func_11210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11210_call = mutated_mod.get_global_var('func_11210')
call_11211 = func_11210_call()
output = call_11211
func_11212 = relay.Function([], output)
mutated_mod['func_11212'] = func_11212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8427_call = mod.get_global_var('func_8427')
func_8429_call = mutated_mod.get_global_var('func_8429')
call_11263 = func_8427_call()
call_11264 = func_8427_call()
func_7617_call = mod.get_global_var('func_7617')
func_7619_call = mutated_mod.get_global_var('func_7619')
call_11275 = func_7617_call()
call_11276 = func_7617_call()
output = relay.Tuple([call_11263,call_11275,])
output2 = relay.Tuple([call_11264,call_11276,])
func_11278 = relay.Function([], output)
mod['func_11278'] = func_11278
mod = relay.transform.InferType()(mod)
output = func_11278()
func_11279 = relay.Function([], output)
mutated_mod['func_11279'] = func_11279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8492_call = mod.get_global_var('func_8492')
func_8493_call = mutated_mod.get_global_var('func_8493')
call_11335 = relay.TupleGetItem(func_8492_call(), 0)
call_11336 = relay.TupleGetItem(func_8493_call(), 0)
func_10588_call = mod.get_global_var('func_10588')
func_10591_call = mutated_mod.get_global_var('func_10591')
const_11357 = relay.const([False,True,True,False,True,True,True,True,False,True,True,True,False,True,True,True,True,False,False,False,True,False,True,False,False,True,False,False,False,False,True,False,True,False,False,True,False,False,False,False,True,False,False,True,True,True,False,False,False,False,False,True,True,True,True,True,False,True,True,False,False,False,True,True,True,True,False,True,True,True,True,True,True,True,False,False,True,True,False,True,True,False,False,False,True,True,True,True,True,False,True,True,True,False,False,False,False,True,True,True,False,False,False,True,False,True,True,True,False,True,False,True,True,False,False,False,True,True,True,False,False,False,True,True,True,False,True,True,True,False,False,True,False,True,False,False,False,True,True,False,False,True,True,True,True,True,True,True,True,False,True,True,False,True,False,True,True,True,False,False,True,True,True,True,False,True,False,False,False,True,False,False,True,True,True,False,True,False,True,False,False,True,True,False,False,True,False,True,False,False,True,True,True,False,False,True,True,False,True,True,False,True,True,True,True,False,True,False,False,True,False,False,False,True,False,False,False,False,True,False,True,False,True,False,False,True,False,True,False,True,False,False,True,True,True,False,True,False,False,True,True,False,True,True,True,True,True,True,False,False,True,True,False,False,True,False,True,True,True,True,True,True,True,False,False,False,False,True,True,False,False,False,False,True,False,True,True,True,False,True,False,True,False,False,True,True,True,False,True,False,False,False,False,True,False,False,False,False,False,True,False,False,True,False,False,True,True,True,True,True,False,True,False,False,True,True,True,False,True,False,True,True,False,True,True,False,True,True,False,True,False,False,False,True,False,False,True,True,True,False,False,True,True,False,True,False,True,False,True,True,True,False,False,True,True,True,False,False,False,False,False,False,True,False,False,True,False,True,True,True,True,True,False,False,False,True,False,True,True,True,False,False,True,True,False,False,False,False,True,True,False,True,True,True,True,True,True,True,False,False,False,True,True,False,True,True,True,False,True,False,True,True,True,True,False,True,True,True,True,False,False,True,True,True,True,False,True,False,True,True,False,True,True,True,True,False,True,False,False,False,True,False,True,False,True,False,True,False,True,False,True,True,True,False,False,False,True,True,False,False,True,False,False,False,False,True,False,True,False,True,True,True,True,False,True,False,False,False,False,True,False,True,False,True,False,True,False,True,False,False,True,True,True,True,True,True,True,False,False,True,True,True,False,False,True,True,False,False,True,False,True,True,False,False,False,False,True,False,True,True,True,False,True,False,False,False,True,True,False,True,False,True,False,False,True,True,True,True,True,False,False,True,True,False,True,True,False,False,False,True,True,True,True,False,True,True,True,False,False,True,True,False,True,True,False,False,False,True,False,False,True,False,True,False,False,False], dtype = "bool")#candidate|11357|(576,)|const|bool
call_11356 = func_10588_call(relay.reshape(const_11357.astype('bool'), [12, 8, 6]), relay.reshape(const_11357.astype('bool'), [12, 8, 6]), )
call_11358 = func_10588_call(relay.reshape(const_11357.astype('bool'), [12, 8, 6]), relay.reshape(const_11357.astype('bool'), [12, 8, 6]), )
output = relay.Tuple([call_11335,call_11356,const_11357,])
output2 = relay.Tuple([call_11336,call_11358,const_11357,])
func_11359 = relay.Function([], output)
mod['func_11359'] = func_11359
mod = relay.transform.InferType()(mod)
mutated_mod['func_11359'] = func_11359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11359_call = mutated_mod.get_global_var('func_11359')
call_11360 = func_11359_call()
output = call_11360
func_11361 = relay.Function([], output)
mutated_mod['func_11361'] = func_11361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11105_call = mod.get_global_var('func_11105')
func_11106_call = mutated_mod.get_global_var('func_11106')
call_11364 = relay.TupleGetItem(func_11105_call(), 0)
call_11365 = relay.TupleGetItem(func_11106_call(), 0)
output = call_11364
output2 = call_11365
func_11381 = relay.Function([], output)
mod['func_11381'] = func_11381
mod = relay.transform.InferType()(mod)
mutated_mod['func_11381'] = func_11381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11381_call = mutated_mod.get_global_var('func_11381')
call_11382 = func_11381_call()
output = call_11382
func_11383 = relay.Function([], output)
mutated_mod['func_11383'] = func_11383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8419_call = mod.get_global_var('func_8419')
func_8420_call = mutated_mod.get_global_var('func_8420')
call_11390 = relay.TupleGetItem(func_8419_call(), 1)
call_11391 = relay.TupleGetItem(func_8420_call(), 1)
output = relay.Tuple([call_11390,])
output2 = relay.Tuple([call_11391,])
func_11393 = relay.Function([], output)
mod['func_11393'] = func_11393
mod = relay.transform.InferType()(mod)
mutated_mod['func_11393'] = func_11393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11393_call = mutated_mod.get_global_var('func_11393')
call_11394 = func_11393_call()
output = call_11394
func_11395 = relay.Function([], output)
mutated_mod['func_11395'] = func_11395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10971_call = mod.get_global_var('func_10971')
func_10973_call = mutated_mod.get_global_var('func_10973')
call_11440 = relay.TupleGetItem(func_10971_call(), 0)
call_11441 = relay.TupleGetItem(func_10973_call(), 0)
output = relay.Tuple([call_11440,])
output2 = relay.Tuple([call_11441,])
func_11455 = relay.Function([], output)
mod['func_11455'] = func_11455
mod = relay.transform.InferType()(mod)
mutated_mod['func_11455'] = func_11455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11455_call = mutated_mod.get_global_var('func_11455')
call_11456 = func_11455_call()
output = call_11456
func_11457 = relay.Function([], output)
mutated_mod['func_11457'] = func_11457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9606_call = mod.get_global_var('func_9606')
func_9607_call = mutated_mod.get_global_var('func_9607')
call_11492 = relay.TupleGetItem(func_9606_call(), 0)
call_11493 = relay.TupleGetItem(func_9607_call(), 0)
func_2973_call = mod.get_global_var('func_2973')
func_2977_call = mutated_mod.get_global_var('func_2977')
const_11496 = relay.const([False,True,False,True,False,False,False,True,False,True,False,False,False,False,False,True,True,True,True,False,False,False,True,False,True,True,True,False,True,True,True,True,True,True,True,True,True,True,True,True,False,True,True,False,True,True,True,True], dtype = "bool")#candidate|11496|(48,)|const|bool
call_11495 = func_2973_call(relay.reshape(const_11496.astype('bool'), [6, 2, 4]), relay.reshape(const_11496.astype('bool'), [6, 2, 4]), )
call_11497 = func_2973_call(relay.reshape(const_11496.astype('bool'), [6, 2, 4]), relay.reshape(const_11496.astype('bool'), [6, 2, 4]), )
output = relay.Tuple([call_11492,call_11495,const_11496,])
output2 = relay.Tuple([call_11493,call_11497,const_11496,])
func_11500 = relay.Function([], output)
mod['func_11500'] = func_11500
mod = relay.transform.InferType()(mod)
mutated_mod['func_11500'] = func_11500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11500_call = mutated_mod.get_global_var('func_11500')
call_11501 = func_11500_call()
output = call_11501
func_11502 = relay.Function([], output)
mutated_mod['func_11502'] = func_11502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7777_call = mod.get_global_var('func_7777')
func_7778_call = mutated_mod.get_global_var('func_7778')
call_11564 = relay.TupleGetItem(func_7777_call(), 0)
call_11565 = relay.TupleGetItem(func_7778_call(), 0)
output = relay.Tuple([call_11564,])
output2 = relay.Tuple([call_11565,])
func_11581 = relay.Function([], output)
mod['func_11581'] = func_11581
mod = relay.transform.InferType()(mod)
mutated_mod['func_11581'] = func_11581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11581_call = mutated_mod.get_global_var('func_11581')
call_11582 = func_11581_call()
output = call_11582
func_11583 = relay.Function([], output)
mutated_mod['func_11583'] = func_11583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7617_call = mod.get_global_var('func_7617')
func_7619_call = mutated_mod.get_global_var('func_7619')
call_11615 = func_7617_call()
call_11616 = func_7617_call()
uop_11617 = relay.rsqrt(call_11615.astype('float64')) # shape=(3, 16, 4)
uop_11619 = relay.rsqrt(call_11616.astype('float64')) # shape=(3, 16, 4)
output = relay.Tuple([uop_11617,])
output2 = relay.Tuple([uop_11619,])
func_11620 = relay.Function([], output)
mod['func_11620'] = func_11620
mod = relay.transform.InferType()(mod)
output = func_11620()
func_11621 = relay.Function([], output)
mutated_mod['func_11621'] = func_11621
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11622 = relay.const([[[8.446334,4.243110,2.210753,6.749990,1.707818,-7.828897,0.846138,-7.076138,-5.561441,-3.049196],[-5.924807,-6.131471,-6.202355,3.613386,-2.735590,-0.273599,9.517115,-0.514847,-9.857970,-9.662144],[-4.365577,5.055824,4.729744,9.427150,7.985760,-1.801691,-3.862579,-7.542452,-7.721970,-1.933252],[-9.996627,-8.396078,-8.774391,-8.935779,-0.751335,-8.766147,-5.982383,-3.295700,3.786375,9.055762]],[[-8.389518,-4.268661,-0.572935,8.034594,8.829604,7.160326,-2.079355,2.381299,6.136488,4.676456],[-0.363571,-6.276562,3.681997,-7.812117,-1.687951,-9.746181,5.645592,-5.266548,4.930235,-8.583318],[9.396891,5.715868,5.956732,-5.757688,-6.589278,-3.711366,9.579471,9.487448,-5.744140,8.237886],[-5.778522,2.077474,-1.895000,8.802824,4.109936,-8.768479,-9.322825,0.694862,-1.988709,-7.564204]],[[4.048104,8.150214,0.816268,-4.231413,-8.048330,-9.177157,7.868365,8.584953,0.793202,6.330219],[-6.982560,2.033673,9.948444,1.260077,-7.150420,3.887080,-2.962919,-6.186633,9.062529,1.686058],[-5.302730,-7.198624,1.341758,-5.730093,1.576913,-3.388275,1.910155,-3.983978,-0.106651,0.446191],[7.141293,-3.246140,1.068813,2.057387,8.199696,0.321306,-4.837776,3.345334,5.668012,0.799522]],[[-9.597287,-3.034274,9.263577,-2.985650,-1.018995,6.107912,-0.398921,-8.547439,-4.402358,1.661192],[-7.337184,-9.057997,-2.787264,5.256118,1.077678,-7.647449,-5.677071,5.865760,2.512329,0.103751],[5.608182,1.684390,-5.418447,-1.896743,6.691636,7.196922,-4.560411,5.958114,5.668799,-0.484549],[1.875088,-1.496623,9.998339,0.452841,-2.538108,3.325212,8.275609,0.374635,-6.415285,1.091248]],[[1.007884,1.695203,-4.610155,5.689922,8.525227,-9.787868,-2.065175,-5.388433,-8.321827,4.738306],[-7.889008,5.098865,7.735721,-5.646322,-9.316629,-6.665296,-3.175532,2.741866,-6.821935,-2.519355],[-0.962751,-4.841554,-3.584593,-7.976770,-7.856736,2.164154,-9.526018,6.486941,9.726438,8.570669],[0.222640,-0.128110,-5.224151,-0.995054,-6.027006,-6.407779,9.582556,6.519137,-7.512791,-2.132528]],[[7.826370,3.818081,-8.279595,-1.756962,-6.273214,4.175440,8.558630,4.303440,1.619055,-9.600470],[4.538699,-0.589049,8.604088,-0.900067,-4.147137,-3.616072,-2.154298,5.392075,-4.241061,-6.885260],[-7.152248,-0.957985,6.740677,9.058392,8.070602,-1.459855,-6.977566,8.348635,0.090346,3.142247],[1.058574,1.393258,-0.360296,-4.797549,-8.333478,7.653966,2.918637,-8.857075,-3.489172,6.016202]],[[1.713768,-8.420287,4.309777,5.225137,6.648172,-6.790972,3.709701,-1.309543,-5.311644,-1.263734],[1.293998,1.099526,-0.914046,-9.449698,7.113682,-5.146328,4.026523,5.983400,3.786356,1.405756],[9.160157,5.987460,-1.942013,-6.459754,-3.469036,6.844086,2.729786,-5.357239,7.991250,-6.142063],[6.042065,0.415426,9.609336,4.190499,-8.805737,7.567166,-2.159716,-4.280697,-2.960777,6.772215]],[[7.003790,-4.013670,-7.973227,-6.639720,1.565090,-4.497369,-4.753938,-2.563104,-9.418710,-2.681708],[-0.968629,5.188689,-0.834815,5.925966,-7.766904,9.138952,-1.725494,-5.486584,3.700148,-5.731556],[3.458217,9.817269,-8.898956,9.132741,8.986682,9.522828,5.054062,-6.235887,-3.174009,-3.213788],[-8.320161,6.705012,-7.162739,4.978487,-9.639987,-1.290529,8.986824,0.301477,9.897768,-0.569075]],[[-5.780790,0.690908,-3.185966,5.823295,5.053643,-0.440381,-6.345750,-3.214965,3.493452,-6.084973],[6.383929,-7.400948,-8.878901,7.192108,-6.425301,-3.668399,1.645418,1.621117,0.250238,5.579739],[-0.082924,-0.350536,1.043123,0.619717,9.353237,-1.965845,6.227928,7.807684,3.441109,0.899817],[-8.111284,-8.718019,4.121266,-8.618011,2.999743,-6.245524,3.254132,-5.333057,2.596186,8.200577]],[[2.824294,-8.107612,-0.279139,-9.067581,-9.540254,-5.866516,1.084830,-4.481637,-4.966841,0.883862],[-8.095709,7.878053,-8.951012,-0.680441,-7.645792,-3.736008,-1.313856,-8.933004,-9.821396,-2.682827],[-5.167923,-4.419899,7.852552,1.218362,8.459319,9.124184,-1.052862,2.184981,-6.626124,-6.957035],[4.143884,-1.858010,4.327836,8.120405,1.457346,-7.126573,-3.856335,4.928025,-2.327750,2.892087]],[[8.769025,5.084886,7.360843,5.049899,1.842486,-4.209653,-2.988425,-9.892717,2.431941,-2.982847],[8.946251,3.387319,6.357960,0.346341,7.626428,6.784258,-0.452843,-3.914573,3.414766,3.437425],[1.079131,8.623663,0.863722,-5.102642,3.097253,7.290519,2.735434,-5.361479,-5.414161,-5.442644],[-7.119844,-1.301190,7.835674,7.245385,-9.308645,8.373883,-3.443126,-5.219205,-4.835994,6.755044]],[[5.340481,-3.164624,9.744307,3.559907,-2.926178,8.677723,2.830660,7.147422,-5.959447,9.555793],[-5.757598,-0.561079,6.174438,-1.647097,8.268451,-1.267538,-7.409773,-0.830391,6.779711,7.570634],[5.529005,1.212077,4.320028,5.154486,0.524724,-4.457827,3.710679,-8.951026,0.676614,-7.144543],[-2.435273,0.037173,2.548879,-1.596295,2.856168,8.731502,-7.269528,3.245139,8.898039,7.951249]],[[8.528753,-7.965910,0.574096,-2.978377,0.182155,5.009236,5.158160,1.534486,-8.260009,7.630623],[1.556002,9.095167,7.064216,2.099123,7.152588,9.055854,5.221534,-0.839090,2.101254,8.846093],[1.082194,-9.746605,-6.379408,-7.651783,-8.569243,-3.966496,-2.008581,9.727092,0.085649,-8.133713],[-1.104971,8.032863,-4.234574,-6.281421,-3.511990,-5.660743,-9.531041,-7.171218,-0.019138,-4.053046]],[[5.417587,9.436713,-9.491668,0.140455,7.741916,-8.279968,-1.426865,2.410920,8.726210,-3.690090],[-4.881783,-0.709460,8.129809,7.935782,1.296541,-1.536447,-9.521181,-0.172997,0.101223,-4.736863],[0.720127,-8.183841,0.663942,-1.345088,3.095593,-7.781152,-5.841761,-1.335056,-7.349236,0.953524],[0.895621,-8.333221,9.129134,-1.420465,-8.133459,-0.593241,-4.401306,7.297409,-7.449884,-8.563629]]], dtype = "float32")#candidate|11622|(14, 4, 10)|const|float32
var_11623 = relay.var("var_11623", dtype = "float32", shape = (14, 4, 10))#candidate|11623|(14, 4, 10)|var|float32
bop_11624 = relay.floor_divide(const_11622.astype('float32'), relay.reshape(var_11623.astype('float32'), relay.shape_of(const_11622))) # shape=(14, 4, 10)
func_8548_call = mod.get_global_var('func_8548')
func_8549_call = mutated_mod.get_global_var('func_8549')
call_11642 = relay.TupleGetItem(func_8548_call(), 0)
call_11643 = relay.TupleGetItem(func_8549_call(), 0)
output = relay.Tuple([bop_11624,call_11642,])
output2 = relay.Tuple([bop_11624,call_11643,])
func_11644 = relay.Function([var_11623,], output)
mod['func_11644'] = func_11644
mod = relay.transform.InferType()(mod)
var_11645 = relay.var("var_11645", dtype = "float32", shape = (14, 4, 10))#candidate|11645|(14, 4, 10)|var|float32
output = func_11644(var_11645)
func_11646 = relay.Function([var_11645], output)
mutated_mod['func_11646'] = func_11646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7930_call = mod.get_global_var('func_7930')
func_7931_call = mutated_mod.get_global_var('func_7931')
call_11672 = func_7930_call()
call_11673 = func_7930_call()
output = relay.Tuple([call_11672,])
output2 = relay.Tuple([call_11673,])
func_11681 = relay.Function([], output)
mod['func_11681'] = func_11681
mod = relay.transform.InferType()(mod)
mutated_mod['func_11681'] = func_11681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11681_call = mutated_mod.get_global_var('func_11681')
call_11682 = func_11681_call()
output = call_11682
func_11683 = relay.Function([], output)
mutated_mod['func_11683'] = func_11683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8038_call = mod.get_global_var('func_8038')
func_8039_call = mutated_mod.get_global_var('func_8039')
call_11750 = relay.TupleGetItem(func_8038_call(), 0)
call_11751 = relay.TupleGetItem(func_8039_call(), 0)
func_3462_call = mod.get_global_var('func_3462')
func_3464_call = mutated_mod.get_global_var('func_3464')
const_11757 = relay.const([7.797132,-7.967109,8.584103,1.540983,2.654313,-0.574977,0.459654,-7.098194,3.043280,7.989377,8.708806,7.993175,4.299402,2.621904,3.656112,1.049471,-2.300379,7.914037,-4.898150,-5.401210,8.814137,-4.397005,4.676401,-1.458273,7.066522,-9.762786,-9.028625,9.011947,8.859736,-5.569845,6.518200,1.708451,2.997002,1.794458,-8.136328,0.556605,8.531883,-9.588950,3.946148,3.490739,-2.951896,1.391169,-1.250271,-4.797390,-0.447693,-0.852483,-8.451046,8.646387,3.242844,9.816646,-1.713140,0.559688,-2.240897,2.018465,-9.914218,1.049172,-1.892518,8.097476,5.374106,5.352752,9.178175,-5.826479,7.694005,7.677929,-5.841369,-0.802165,-2.837741,-0.186564,4.586490,-4.561186,2.592067,-9.604815,-3.462377,-7.014453,-6.687783,5.454837,4.359221,5.368371,-5.069890,9.763822,-1.222278,3.551607,4.900752,2.402075,4.093327,-2.377186,4.696290,9.880826,4.307992,-7.571204,7.152888,2.043471,9.739811,8.689461,8.982443,-1.073067,7.237764,-5.834579,-6.743379,7.014893,2.105413,-3.658963,8.174607,7.025585,4.548803,-3.674683,1.284002,0.957995,-4.201877,-5.298245,-2.392484,8.878811,6.348326,-0.920130,-5.282064,1.301610,-7.800664,-2.959048,5.542467,-5.262583,0.433974,3.988961,-1.691028,5.153382,-5.545885,-3.142513,7.612500,-6.301053,-6.309738,-0.547255,-5.637497,-5.211652,4.213839,-9.850268,-6.513464,3.254865,8.941944,0.218334,6.546581,3.456577,-1.924226,-3.723071,3.137558,-0.169324,-2.667261,-7.581296,0.808030,2.126445,-9.937718,5.724086,-5.506227,-4.265797,-4.420706,4.167260,7.594418,4.725337,-7.140011,0.898566,-6.863967,1.367472,-3.794851,1.292837,7.189320,-3.805117,5.294418,-2.959382,-4.703229,8.546736,-1.720525,-4.738487,7.043893,-2.401479,-2.803135,-2.942820,6.047637,1.364889,0.154921,2.983407,4.274198,-5.079052,-3.229525,-5.945005,-5.669229,0.441230,-8.889076,-4.438581,4.775677,9.427945,-6.114086,-1.215617,-6.452573,8.888140,-8.066165,-8.223266,-9.521023,-4.123837,5.703298,5.244724,5.582193,1.796075,-0.585957,4.401807,-5.901908,4.068759,-6.426519,-7.156808,2.279786,5.825726,9.571245,4.408272,-3.129342,-1.605159,-3.828544,8.898126,-7.678764,0.051791,-8.930860,-2.820593,-0.980231,1.514079,1.700273,1.121009,8.018590,-7.031605,-1.461404,-8.008970,-5.832311,-5.921018,-5.285255,-6.307600,-6.363209,-0.372266,-8.057476,8.814584,-9.702573,-7.323505,7.913452,7.203817,-3.394664,0.476080,2.606192,2.287156,-1.296241,6.465776,-5.387618,3.528306,8.221235,0.543933,-8.939390,-2.668242,-4.099733,-6.010523,-9.439218,-3.723195,4.351718,2.148702,-7.800989,-8.052326,3.019349,5.092124,6.490608,-4.496306,-0.154207,2.578541,0.612438,-5.265830,-0.582177,0.600577,-8.107417,1.270630,1.939618,-6.659284,0.547395,-1.261587,-5.148160,-7.316634,-3.349895,4.274860,1.345409,6.125116,-4.053943,-5.618645,-1.240787,-7.485999,7.647758,-7.174158,-0.880007,-7.236618,-4.228843,-9.665083,1.075162,-8.017648,-5.805775,-3.572298,-4.814016,-0.382771,5.305987,8.075163,-4.528478,-1.602128,1.896296,-9.427090,-9.834162,-9.874046,5.723705,3.188086,7.193399,-1.843225,3.893548,3.348367,-1.416535,8.105538,-0.728382,9.573349,-1.983507,1.333734,-1.176999,6.369367,-6.193903,7.634243,9.567691,-8.582703,1.716035,-4.178260,-4.527477,-2.852866,2.498394,-4.677037,4.510401,-1.802515,-2.558357,8.429141,8.175247,2.714018,-4.737343,5.326384,6.738667,4.784517,-1.782630,-9.658887,9.505640,5.882433,-4.343312,8.392244,1.826266,9.706129,9.121915,-7.095771,5.460224,-1.166068,7.977084,6.378676,-6.505544,0.816574,-1.666441,8.845901,-6.839380,-1.992602,-8.419340,-2.056716,3.233136,4.892676,9.376708,1.372877,4.040257,-8.443114,2.731337,-2.101291,-9.127507,-5.587702,9.693779,2.990967,-0.479414,-3.890378,1.943198,-3.968929,-3.815083,7.606413,-5.976487,-9.744151,-4.842427,-6.726834,0.763261,3.750767,-1.216073,-9.152767,7.234800,5.612393,-5.036804,3.861216,8.341606,-8.223847,1.309656,4.336134,5.125115,-1.833632,-0.312343,9.111711,5.827206,-7.435228,7.421311,9.385134,-2.791288,-2.758369,-4.777819,-2.584207,-3.499158,7.822514,-2.827576,9.862203,-6.190754,8.147011,-5.199599,-6.986652,-8.646349,1.171153,-0.661921,-7.635119,8.972227,8.342919,-4.784423,8.339918,-0.817591,0.199981,0.909634,-8.709743,-6.848902,0.072540,5.641283,-9.897245,-7.223510,0.590590,-3.633431,1.540054,-9.710886,1.361088,-5.927010,7.511390,3.838113,2.311034,6.490641,-3.073427,9.201257,-1.125763,-5.410172,-4.953579,-9.303622,3.145343,-8.685872,3.563941,8.281742,8.174556,8.525377,-3.443712,6.611136,-1.806548,-8.137707,-6.930587,-6.728800,-9.068942,4.722005,9.124844,-9.437341,-8.307636,4.371128,3.292012,-0.191239,-3.858045,-2.645845,-4.702350,-7.151033,-8.365189,-5.624955,-4.292636,-9.501167,7.690095,-9.358246,9.875916,1.433260,4.191178,4.301251,2.176006,7.566668,-3.600889,-6.937057,-7.829817,7.330835,1.653935,9.069022,-2.981655,-4.155489,-0.961305,-9.041754,2.613242,7.794982,-8.927250,-7.985683,3.809983,8.355700,6.380292,-7.207319,-9.488841,-8.165383,8.662143,2.043417,6.148074,0.780962,-7.831755,-5.909555,8.060442,-9.683098,-1.868105,7.399468,3.413052,6.625394,5.903629,-1.338106,1.853888,0.002677,-3.943847,-3.228832,0.032308,3.989415,3.079867,1.927042,-6.034594,-5.040126,-7.151935,-9.842672,-4.209554,-3.631804,8.694800,8.310840,-2.180410,-5.413414,-2.462609,-5.614136,-7.724162,3.031098,6.419161,2.491903,6.659059,9.965858,6.725691,8.526873,9.225325,7.097501,-7.676283,-7.935036,-0.785813,0.220708,2.059770,-6.958389,-6.248056,-0.416202,-4.121521,0.809108,4.840965,-3.811437,-8.586701,5.049548,5.100485,-4.671759,0.143914,-0.136747,8.607834,-6.760880,-8.616207,3.099961,8.118111,-0.598883,2.348278,5.730777,-9.538428,0.295864,0.319104,9.383115,-8.360326,-4.618525,-6.729931,9.074839,-5.321329,-7.125952,-6.852374,8.646861,6.142288,1.339945,2.346672,-4.641884,-5.445610,-6.535682,-0.103957,9.767628,-1.221471,-5.436395,-4.425599,-0.829789,-8.904748,6.941154,-8.169355,-1.389444,0.763443,-0.889418,-5.666236,-2.805037,6.413566,-4.650332,-8.492233,-4.858548,6.873173,7.456083,-1.083439,-0.543163,6.194557,5.501901,9.077847,6.271712,4.568402,9.875945,-9.885354,7.854496,3.712268,9.816566,6.488459,-3.987412,5.928380,-6.931123,6.461179,-4.191229,2.408806,2.178268,1.146992,5.317294,-4.549766,-2.654761,-7.683421,-5.261033,5.488129,-4.237510,0.452819,3.420048,-5.083351,-2.377674,-8.867817,-2.755712,-8.638976,-3.395506,6.519739,8.635585,5.133887,-2.693908,4.319144,9.254801,6.038078,4.909174,-7.204405,8.637835,-7.225065,-1.037915,-4.098094,-9.119416,-0.777419,-4.585744,-8.937923,-9.823240,0.737994,-0.750654,7.429862,4.534012,2.554998,-4.334840,7.800372,-4.726648,7.713752,-4.866978,-2.738294,3.620100,-1.135424,-5.953770,8.301299,-6.612611,7.426326,9.278325,-6.625242,9.760431,8.585525,5.571944,3.747633,-1.356810,-9.744656,-8.057716,-8.047310,-3.276739,5.472718,2.644708,4.148613,8.936777,-0.277259,0.696083,3.365013,-1.568164,-5.548134,3.071340,-1.718257,4.242373,7.156166,4.932450,8.393409,-0.953301,-5.396873,4.681761,6.367416,-2.661671,8.135191,-3.288732,0.364016,5.625118,-8.600551,2.923969,-5.765387,0.483434,3.439879,2.297654,-7.215651,1.013470,-0.825573,-7.040421,-4.651867,3.443509,3.336066,-6.200124,7.409812,-1.517008,5.648128,-9.552476,-7.895641,3.344851,-6.577819,-4.374852,-0.603245,6.352759,-8.556218,-0.149994,-5.465003,-8.462083,6.211918,-8.351407,-8.705623,-1.483241,9.386723,-0.139534,-0.376032,1.687277,-1.920879,-7.278805,7.175627,1.027098,4.158884,-8.535960,-4.983562,1.239115,-8.761545,-3.385527,7.035352,-4.052758,9.742080,-8.900631,-2.162851,-7.974232,-7.835947,4.495687,-1.830500,0.385332,-8.652690,9.308666,9.851025,-2.092062,7.367102,-0.791136,6.057781,9.794467,6.622797,-6.033567,4.104563,0.715457,7.879615,9.765337,9.960791,-2.591185,0.143643,-9.016830,-5.890655,-6.590605,7.484211,-5.677574,8.665646,2.391627,-1.072440,-4.152378,-9.584872,3.239234,-3.275322,3.391975,8.922918,2.307818,-1.742341,1.897783,-2.515220,-4.372053,1.072138,-8.216936,-6.440778,9.499501,1.826722,-6.043858,8.943722,-3.083075,-4.750054,-3.348894,5.223605,-3.266315,7.946293,-3.514931,4.993193,-9.636839,-4.222393,7.131935,-9.213816,8.336009,-5.732902,-4.022230,0.105796,1.827776,-9.220363,1.950870,7.878089,0.759198,-8.089279,-8.592725,-8.035525,-4.861296,1.315392,9.980318,-8.756506,-9.300196,-5.198418,6.940991,1.880004,-6.106360,-6.939142,4.074880,8.319019,-5.927840,-6.431564,-5.800852,3.627935,2.465545,-7.431337,0.440844,9.813450,-7.510989,-0.986146,2.384840,-9.975760,1.872888,-0.746254,0.919953,-8.517210,5.974801,-7.460467,9.728839,-3.509880,2.812599,-0.153380,1.197784,-6.424631,9.435911,7.795129,-0.340610,-5.629787,-8.473881,-7.210331,0.694697,-1.005386,1.574944,-5.521169,-5.218176,-0.882800,4.773039,-0.490523,-2.777383,-5.972858,4.333340,0.182433,-6.850924,-5.772822,-7.207838,-5.961746,6.774550,-3.529616,5.817633,3.122758,0.379568,9.006879,-4.579463,2.178019,-7.239724,7.336373,-4.274680,7.424956,-7.012897,5.850686,-0.616222,-7.735837,-7.230656,0.423794,2.854590,-8.160525,-6.035900,-9.243278,2.498690,9.139373,4.869419,-9.113650,0.080379,-5.909821,1.455477,-9.493251,4.741058,1.458368,1.529205,-9.022698,3.601581,7.182813,-1.532964,4.879503,-5.334005,-4.856383,2.126830,3.099567,-7.367091,-1.598661,6.951528,-6.414835,-2.843944,6.712748,-1.805370,-0.002976,-6.065217,9.686432,1.183841,-7.826823,6.244738,-1.007598,7.287260,-6.453828,3.688001,9.683785,8.988619,-1.260763,9.427037,-0.815211,3.803733,-8.643528,-0.861724,-7.754702,-6.828194,2.254312,3.073489,-9.719797,6.446374,7.322202,8.847865,-8.533932,-9.966723,-8.026597,-8.625424,5.572953,-1.302192,7.574099,0.672412,-0.657991,-7.985563,7.231761,6.329036,5.740662,-2.368717,-3.314757,7.540304,5.706192,3.967369,-0.792429,-6.309156,4.311034,6.221414,3.112494,-5.014800,-7.310816,-3.105939,8.255732,4.423754,-7.467513,6.194964,3.359655,8.328481,-8.834249,1.058338,-1.927386,-5.907944,-4.215412,-1.409481,-1.832870,7.402042,-7.772382,-1.241877,-9.275165,-6.446803,-7.804469,7.126331,-8.760572,-4.356548,6.214034,2.683595,0.827182,1.425993,4.913535,3.461859,-8.693977,-8.238662,-5.191350,-3.854542,-2.058567,-3.916057,-9.737394,6.713691,-8.580391,3.004265,0.340227,-9.311198,-5.908283,-4.623352,4.050860,7.501851,-6.000306,-2.050941,3.325741,3.560669,2.472016,-6.509366,5.941949,2.132821,8.599481,6.862948,4.831203,1.174395,9.501994,-7.926983,3.362995,5.594883,2.617995,7.390664,-2.042151,2.370033,-8.776698,-5.216614,5.243133,3.370944,-1.685996,7.108097,-4.278752,-2.447054,-8.489506,9.442470,-6.074455,4.648631,-1.053506,-0.454667,-6.589730,7.206136,7.478248,-8.390644,6.289104,2.254732,9.254243,6.477274,9.042277,3.067675,-4.240003,-4.249231,2.710777,1.757599,-6.236289,2.938632,4.270634,8.412217,-3.510638,7.005485,2.276226,4.081489,6.665976,5.663654,-5.418905,-5.831832,6.655429,-6.175617,-9.886170,-9.761790,4.001593,7.387608,-9.421043,-1.566956,9.045972,-2.191811,-3.664788,9.675095,5.540970,0.557085,8.161097,-0.927014,-8.787612,-1.069497,-5.582680,1.570872,-5.133895,-5.745691,6.109728,9.873163,-4.465785,6.573765,7.205221,-7.313788,4.197703,0.590091,2.525664,9.993960,-0.375932,6.383611,0.046715,-2.422210,2.297843,-7.092517,1.418182,9.423552,-9.650828,9.490026,9.015453,-7.428034,6.629837,-3.986825,0.537876,-1.763102,1.034841,8.253742,-5.681827,-7.823984,-7.839689,-1.827078,-7.876101,-8.423049,-3.890963,-6.071590,5.699892,8.246383,-4.629964,-1.261103,1.984022,1.880004,-9.093577,0.911169,0.446037,-5.131857,4.487079,6.701185,2.305204,-0.816318,7.099650,3.611791,0.886013,8.103041,-3.429253,1.859259,-3.674148,-2.916882,0.892800,0.433240,7.930198,7.218927,-0.338139,-0.319535,-5.004022,-0.554674,-9.837468,-4.310141,-0.984907,1.737358,6.067011,-5.989456,-4.748120,-9.117170,2.221276,-9.431201,-0.994132,7.444657,-4.134461,-7.264582,-2.011573,1.066760,-1.392692,-9.973102,7.201972,-5.654418,-8.003758,5.836283,2.542686,4.395394,7.763121,-2.824070,9.294567,9.793616,3.539703,-2.938600,-6.574932,-6.984246,0.090649,3.487885,3.610439,-2.264560,-5.932748,-8.855682,9.073326,-5.442243,2.248328,-0.150367,-2.264077,-5.653888,5.103119,2.639955,-8.001693,6.791899,-6.887431,0.881946,-4.842516,-8.676881,0.230981,-2.477248,-9.614447,8.580983,5.873749,-2.199103,5.811279,-7.483204,3.789277,-9.845719,1.734369,7.063591,-2.153482,4.674619,-9.191286,-5.480291,-1.461456,3.605898,8.535623,-3.223689,-8.582319,5.197403,-9.584205,7.881761,9.854146,3.473628,3.630796,8.198074,8.748413,-5.415117,-0.404440,3.145643,9.811722,0.270972,-8.593262,-0.266553,-2.173968,-0.136759,1.367916,-0.875503,-9.952137,7.534117,-9.188245,2.507506,-9.264525,-1.492713,-2.103371,2.487339,-7.168965,2.299520,3.325018,3.525459,9.488647,-3.271676,4.579870,4.679720,-8.106654,9.472425,3.369098,2.166334,-5.007399,-5.269897,0.775161,8.488327,-1.288306,-3.000952,-5.252721,4.205364,-5.195778,-2.281153,-9.025375,5.698597,-6.753709,-2.861564,6.093639,9.576289,7.669923,4.638788,-6.946811,-9.912238,9.285610,-4.483057,-9.161594,4.079865,1.806137,0.917472,2.164464,-4.039538,7.968113,-0.045726,-3.180487,7.443165,2.044175,2.211880,2.748910,5.127353,-9.141387,-6.609309,8.529861,6.248078,5.961215,6.823677,5.547131,-9.006423,-9.218043,-2.205356,3.980330,-8.305874,-9.831281,-4.380968,3.171626,-0.093714,7.169896,-9.729016,-4.178157,1.702859,-2.594064,-9.301879,-5.482773,7.515555,0.861024,-1.795358,1.799035,-3.052645,-9.909965,4.762945,-9.467201,4.204639,-3.243845,-3.469421,-1.392525,-0.379335,-1.712118,-5.794203,5.428827,8.408205,8.026612,0.629433,-8.442626,-5.281389,-1.176678,-7.854248,3.854231,-1.472527,-0.831842,-2.907413,-7.752389,0.020326,-8.974040,-7.386123,2.928710,-2.438902,9.648439,9.387555,5.016587,-4.131477,4.239216,-3.601598,-1.527050,-8.448344,-7.476500,8.231072,2.446764,7.081366,4.792679,-7.539367,-7.281652,7.495245,-0.780038,7.173013,8.230554,-1.878629,5.155817,4.598480,6.491355,-4.003900,1.949143,6.053740,-2.866747,-3.083206,-0.064638,1.536330,5.931981,-3.219356,8.505267,-2.091473,5.928831,-8.874973,6.839146,-7.145875,1.025949,-2.599374,4.584497,-5.538392,8.397232,9.879577,4.210024,-2.226388,9.913739,-5.163816,-6.018800,8.901632,8.766606,-0.317706,-6.536752,-1.542899,7.991450,-1.603404,-1.289014,4.397035,6.448629,0.331710,6.787530,3.988484,-4.641524,6.734872,-0.430644,-8.099096,-6.485523,6.322875,1.525514,2.223824,-7.069246,3.175450,-4.529885,-7.666504,2.963401,-5.663643,2.879982,-5.635940,0.198477,3.367226,-0.966391,-2.686152,-5.647273,8.219088,3.611725,4.580188,-4.133666,-9.201763,1.455522,-7.178516,-4.920146,7.428410,1.726671,0.213807,1.879610,-4.072329,-2.579225,9.053952,-9.276751,-9.810509,9.362793,-7.250530,4.503448,-3.592736,0.732915,2.800436,8.639506,-8.966420,-6.858133,8.670874,-5.778815,-2.371613,-6.790348,4.795023,-4.835565,-4.516375,1.884936,-6.347431,9.091638,6.293104,1.658613,-6.025320,3.763170,4.305847,-6.852799,-3.025529,1.754522,5.994099,-7.828862,-3.225459,8.319208,-7.819716,6.372911,5.173541,5.733901,-2.245813,6.954387,4.322392,4.271517,6.726541,0.642273,-3.564170,-7.135732,7.281159,-4.151039,3.785340,-8.021309,6.812630,-8.712542,9.009039,9.125676,4.584223,-1.936001,-3.020440,5.333622,-4.719435,7.333167,4.166533,-3.522051,-1.397748,3.508217,-6.220009,3.448130,5.786305,-7.899500,6.188024,-6.503839,8.062076,7.965618,-6.938644,8.319854,0.323008,6.566957,-4.733992,2.420747,7.002211,-3.017701,1.892741,8.321175,-7.591136,8.405541,2.891647,-7.746424,-3.300880,-1.292733,-5.876973,4.760995,-9.514551,3.078453,9.995031,0.599435,5.534979,-7.238977,7.641978,0.249448,-7.329865,3.622882,2.271773,-6.526358,2.563491,-6.839961,-7.652616,-8.592668,5.457775,2.017209,-7.365724,9.185598,-9.287928,-0.190823,3.746947,4.836309,-1.924827,4.358200,-7.514295,-5.567393,8.745531,-9.166255,-6.228019,-6.552341,-0.006256,-5.727088,1.124694,-4.833371,-2.883230,7.533758,-7.997102,7.054003,-1.354573,-9.986939,-4.441506,-5.855797,-2.040323,3.684020,1.436189,-8.968475,0.206194,5.421664,-5.869755,-3.939880,-2.734081,-8.277233,4.009684,-6.928178,-0.974907,-7.483070,2.926682,-0.225087,6.625798,-5.014305,-5.209515,-9.166929,-8.347945,-9.355059,3.583355,0.940802,-7.615586,7.559844,8.373125,9.296161,-2.069133,-1.372116,4.266111,4.380330,-7.324946,4.802024,-7.057580,-4.958961,8.184190,9.684289,1.459771,2.989389,-0.548917,8.701930,-6.864373,-1.439266,8.338328,-7.372121,8.139085,7.725414,1.789046,-4.847169,6.636346,-6.883267,0.636690,9.631854,-4.591341,1.992187,8.680624,-3.732043,9.262198,7.849427,5.200367,4.095023,9.873819,-4.357184,-2.694181,9.811618,6.064359,-4.575511,8.055430,-0.716471,-1.353987,8.317642,-2.436263,4.079528,-0.369324,-5.318730,-2.245457,-6.853784,6.244060,9.263389,-1.228277,9.286828,-8.376687,-8.968243,2.741938,-0.350203,-4.233015,-6.383781,3.049522,4.030950,-9.911790,-9.277797,4.577535,-6.474194,9.384313,-1.442058,-4.926042,-6.704357,-0.406708,0.520527,6.216333,6.317519,0.202826,-8.787129,-1.157353,-3.954221,-4.930670,3.594344,1.692773,-7.649087,2.444688,-5.931702,-5.929881,1.107310,-7.553692,-9.381736,-5.761983,2.533828,8.444657,-0.384754,5.406734,-2.298431,8.315329,-5.051744,-9.679455,-7.535895,4.911393,7.956199,3.202786,-2.014404,0.453511,6.151600,0.785455,6.505945,-1.094513,-1.427438,-9.907645,2.541243,-1.920016,2.359210,-8.918615,6.316454,-0.887603,4.673753,4.405922,8.587336,0.724995,-8.819866,-6.796327,2.272900,2.942779,-4.689562,6.339635,-5.536014,2.553072,-1.592300,6.814141,-9.144053,-0.426130,4.001156,1.159715,4.318135,0.759758,1.772898,8.614628,-3.783933,-0.659467,7.647948,7.785733,-4.708172,4.927211,-3.839733,-9.404721,-4.785347,3.733196,-1.302464,1.756187,4.087982,4.062511,-0.617861,8.104529,8.279151,6.511733,9.260229,-3.874041,-4.791020,-9.529270,-6.206324,0.937592,-7.992829,-7.645501,4.665906,-0.291897,-7.171976], dtype = "float64")#candidate|11757|(1820,)|const|float64
call_11756 = relay.TupleGetItem(func_3462_call(relay.reshape(const_11757.astype('float64'), [14, 10, 13])), 1)
call_11758 = relay.TupleGetItem(func_3464_call(relay.reshape(const_11757.astype('float64'), [14, 10, 13])), 1)
output = relay.Tuple([call_11750,call_11756,const_11757,])
output2 = relay.Tuple([call_11751,call_11758,const_11757,])
func_11767 = relay.Function([], output)
mod['func_11767'] = func_11767
mod = relay.transform.InferType()(mod)
output = func_11767()
func_11768 = relay.Function([], output)
mutated_mod['func_11768'] = func_11768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11381_call = mod.get_global_var('func_11381')
func_11383_call = mutated_mod.get_global_var('func_11383')
call_11820 = func_11381_call()
call_11821 = func_11381_call()
output = relay.Tuple([call_11820,])
output2 = relay.Tuple([call_11821,])
func_11855 = relay.Function([], output)
mod['func_11855'] = func_11855
mod = relay.transform.InferType()(mod)
output = func_11855()
func_11856 = relay.Function([], output)
mutated_mod['func_11856'] = func_11856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7067_call = mod.get_global_var('func_7067')
func_7068_call = mutated_mod.get_global_var('func_7068')
call_11993 = relay.TupleGetItem(func_7067_call(), 2)
call_11994 = relay.TupleGetItem(func_7068_call(), 2)
output = relay.Tuple([call_11993,])
output2 = relay.Tuple([call_11994,])
func_12000 = relay.Function([], output)
mod['func_12000'] = func_12000
mod = relay.transform.InferType()(mod)
mutated_mod['func_12000'] = func_12000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12000_call = mutated_mod.get_global_var('func_12000')
call_12001 = func_12000_call()
output = call_12001
func_12002 = relay.Function([], output)
mutated_mod['func_12002'] = func_12002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11359_call = mod.get_global_var('func_11359')
func_11361_call = mutated_mod.get_global_var('func_11361')
call_12075 = relay.TupleGetItem(func_11359_call(), 1)
call_12076 = relay.TupleGetItem(func_11361_call(), 1)
output = relay.Tuple([call_12075,])
output2 = relay.Tuple([call_12076,])
func_12084 = relay.Function([], output)
mod['func_12084'] = func_12084
mod = relay.transform.InferType()(mod)
mutated_mod['func_12084'] = func_12084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12084_call = mutated_mod.get_global_var('func_12084')
call_12085 = func_12084_call()
output = call_12085
func_12086 = relay.Function([], output)
mutated_mod['func_12086'] = func_12086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7513_call = mod.get_global_var('func_7513')
func_7515_call = mutated_mod.get_global_var('func_7515')
call_12116 = relay.TupleGetItem(func_7513_call(), 0)
call_12117 = relay.TupleGetItem(func_7515_call(), 0)
func_7093_call = mod.get_global_var('func_7093')
func_7095_call = mutated_mod.get_global_var('func_7095')
call_12118 = relay.TupleGetItem(func_7093_call(), 0)
call_12119 = relay.TupleGetItem(func_7095_call(), 0)
output = relay.Tuple([call_12116,call_12118,])
output2 = relay.Tuple([call_12117,call_12119,])
func_12127 = relay.Function([], output)
mod['func_12127'] = func_12127
mod = relay.transform.InferType()(mod)
mutated_mod['func_12127'] = func_12127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12127_call = mutated_mod.get_global_var('func_12127')
call_12128 = func_12127_call()
output = call_12128
func_12129 = relay.Function([], output)
mutated_mod['func_12129'] = func_12129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11681_call = mod.get_global_var('func_11681')
func_11683_call = mutated_mod.get_global_var('func_11683')
call_12187 = relay.TupleGetItem(func_11681_call(), 0)
call_12188 = relay.TupleGetItem(func_11683_call(), 0)
output = relay.Tuple([call_12187,])
output2 = relay.Tuple([call_12188,])
func_12206 = relay.Function([], output)
mod['func_12206'] = func_12206
mod = relay.transform.InferType()(mod)
output = func_12206()
func_12207 = relay.Function([], output)
mutated_mod['func_12207'] = func_12207
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12238 = relay.var("var_12238", dtype = "uint16", shape = (2, 1, 11))#candidate|12238|(2, 1, 11)|var|uint16
var_12239 = relay.var("var_12239", dtype = "uint16", shape = (2, 1, 11))#candidate|12239|(2, 1, 11)|var|uint16
bop_12240 = relay.less_equal(var_12238.astype('bool'), relay.reshape(var_12239.astype('bool'), relay.shape_of(var_12238))) # shape=(2, 1, 11)
bop_12243 = relay.logical_or(var_12239.astype('bool'), relay.reshape(var_12238.astype('bool'), relay.shape_of(var_12239))) # shape=(2, 1, 11)
func_11210_call = mod.get_global_var('func_11210')
func_11212_call = mutated_mod.get_global_var('func_11212')
call_12247 = relay.TupleGetItem(func_11210_call(), 0)
call_12248 = relay.TupleGetItem(func_11212_call(), 0)
func_9880_call = mod.get_global_var('func_9880')
func_9883_call = mutated_mod.get_global_var('func_9883')
const_12278 = relay.const([0.635933,0.884412,0.356102,3.794408,-4.879392,-7.209512,-5.246329,6.425110,9.919196,6.623688,-0.236237,-8.935729,7.519828,-7.174733,8.565403,-2.595064,3.561642,-9.603614,9.843208,-5.142005,1.154708,4.675847,-4.799633,8.994387,4.396284,5.837676,-0.764130,0.279161,-2.414151,-8.108332,-0.168268,-8.524525,-7.111171,-8.970534,-1.338793,-5.567882,0.162766,4.693320,-8.394880,1.688898,1.622827,3.586965,-0.425389,-5.880592,0.605823,6.543339,1.376447,3.929750,-9.180622,3.710969,3.693202,-5.331135,4.304609,-6.749196,7.920018,-6.312204,-0.817803,-5.071624,-0.916317,4.301173,6.050527,6.307150,9.098184,4.031750,-9.616122,-5.484640,-9.479752,1.790182,8.008220,9.375960,9.613909,9.155203,-8.274469,0.984725,-8.097083,-1.376691,0.715651,3.265778,-9.175410,-3.153519,8.040003,-4.944186,6.237208,-6.303651,-8.875041,3.821446,7.791995,8.732056,-2.210817,-3.848925,-6.960429,5.050515,-7.089007,-2.532777,3.704717,6.903999,6.620118,-4.836421,5.099543,8.780046,-0.794646,-2.285246,-3.862646,4.930617,-6.197161,3.173884,-5.213410,-2.631845,7.410920,-8.291477,0.815306,-6.459006,6.356841,0.698251,1.748346,-2.628484,-2.797815,0.601683,9.175585,0.790365,-5.670294,-1.920507,2.523832,3.438179,2.498338,5.496678,5.871847,2.791199,-7.854871,-1.151415,-6.156284,-8.561373,5.997369,2.643618,-7.617449,-7.888319,9.753030,-4.103735,9.328279,-3.950864,8.651640,2.332846,6.528152,2.959687,4.644053,8.381053,3.609850,-2.298211,5.079197,0.236175,2.510968,-4.007277,-4.797371,3.900272,-0.154015,-8.267878,-9.954496,-6.042395,-0.833637,0.146806,8.034077,3.915425,-8.175106,4.244044,2.911907,-2.375192,-1.487906,-6.119348,5.558682,-5.382859,2.175577,6.330694,-0.432953,0.223052,6.345946,0.206793,4.927662,6.188805,-4.201934,6.100760,3.060323,-1.553890,-5.941337,-2.807829,5.437248,6.920184,4.455126,-4.616576,-6.302431,1.633037,-1.521237,9.363541,1.545786,-5.330690,4.093227,-5.946708,1.807102,2.563229,7.062269,1.477290,-9.101993,3.207759,7.826288,-6.967477,3.836875,5.034758,-9.731914,6.479838,-1.421028,8.693385,7.788394,-7.552683,9.794427,-0.164119,-2.112858,1.050065,-7.338047,-2.357163,-4.030717,8.400468,-6.394813,5.955863,0.939436,3.749431,-4.443171,-1.612451,-2.746658,-4.286323,-2.121970,-0.507660,-6.446035,0.604046,-4.219839,-0.386006,-1.521298,-0.029926,6.635498,7.914401,-7.532205,-4.377037,-5.368716,-5.706872,0.069263,-1.123785,2.041484,-0.860370,-5.064213,-0.432676,-0.347393,2.050315,-8.377280,7.369636,4.911869,9.516612,0.093335,2.552133,-4.674565,-8.927472,-2.182875,2.751246,1.348341,-8.841355,9.104304,-4.241204,9.048355,3.652536,0.570915,2.093324,7.883107,-0.604202,-5.127021,-0.931310,3.732640,9.280986,8.542960,6.555522,-8.621842,-0.024856,-6.091977,6.813744,-3.715663,-5.442865,-9.921937,4.995302,-6.663587,-8.430878,4.900874,4.663038,-0.419820,-1.563395,7.125995,-5.238610,9.063093,9.585416,-0.840819,-1.283186,1.528664,-0.127656,-2.393804,-1.019325,-9.744762,-4.444808,4.280814,-6.473048,-5.690820,-0.265872,1.146156,8.205574,9.683429,-7.473869,-3.725435,0.128608,0.315479,6.131586,7.680679,-6.024001,-2.796542,6.134372,-3.400119,0.323169,-7.730435,-3.961154,5.131529,9.368959,1.732211,-8.921076,-0.348122,3.775047,7.872885,6.721204,-7.769226,-9.446141,-6.335368,7.527492,-0.383944,7.407528,-7.427892,-1.699583,-2.921513,-7.844750,7.568326,5.241193,-4.843922,-2.051275,5.931124,-3.087407,6.465666,-4.429581,-6.537611,4.618389,7.767152,-0.331175,-8.679935,2.019177,-4.004222,-4.024604,-0.817903,2.341900,8.781677,-1.020479,3.756518,-3.210623,-1.121273,2.632195,-1.580791,8.900077,7.551057,5.467751,-5.718569,-0.868609,3.838603,-1.863139,-3.983630,-7.774079,1.804367,-5.565025,-5.679426,-2.402707,-5.705890,4.029179,-2.669205,-6.775848,-7.433420,7.797917,-1.392755,4.043457,6.229786,8.140635,8.104939,6.728935,-6.522274,-6.261323,-9.293449,4.371290,-0.761345,-6.611076,0.673401,-3.925209,-6.779004,-3.668168,-1.508578,-2.050631,-7.797776,5.218860,-2.565704,-0.870606,8.088192,8.994652,0.533543,-0.004944,8.335978,-4.245818,8.945539,7.092989,7.019543,-2.704702,6.636461,4.285346,-8.434434,-2.214377,5.672188,2.262850,1.088190,-3.306088,-7.841091,-2.874691,7.115041,-3.037225,2.786026,4.820325,-3.238750,-5.681360,-3.550851,0.272474,5.319531,0.216451,-7.258289,8.023482,0.129741,0.559346,-5.839490,-2.507363,-2.284644,-0.486810,-9.966111,-4.790295,6.493378,-8.018343,-2.904167,-1.647276,1.329892,-0.551933,-5.542608,6.125611,-5.687888,2.799826,-7.237800,-9.805307,3.744509,2.179088,-8.076884,-1.698153,-3.183297,-4.285177,-6.541623,-1.446243,-0.931200,5.578418,-0.993075,5.309044,0.571859,0.712225,-3.949166,4.650915,-9.498138,2.844589,-9.927966,-2.363951,-6.244409,-3.827872,6.202152,3.415832,7.637576,9.206601,4.475533,-2.757638,4.215780,0.194971,-2.031157,3.761205,9.429219,0.063115,-1.247840,-5.997223,-2.017068,4.350196,-3.298034,-6.638586,-0.705936,7.185141,-9.094151,-8.870181,-1.167282,7.824411,-7.367021,5.237462,3.887670,-0.996549,4.291946,-7.188352,1.921728,2.134524,-1.223951,6.983472,4.604277,8.210899,0.527810,-8.167206,4.260581,-9.140481,-8.834614,3.825538,-2.273871,-1.360732,-0.129693,-1.238111,-7.631840,5.052693,2.556996,9.660483,-6.215149,-5.050694,2.210940,9.833096,-5.511152,-5.896872,8.596713,-9.727938,5.616685], dtype = "float64")#candidate|12278|(539,)|const|float64
call_12277 = func_9880_call(relay.reshape(const_12278.astype('float64'), [7, 7, 11]))
call_12279 = func_9880_call(relay.reshape(const_12278.astype('float64'), [7, 7, 11]))
output = relay.Tuple([bop_12240,bop_12243,call_12247,call_12277,const_12278,])
output2 = relay.Tuple([bop_12240,bop_12243,call_12248,call_12279,const_12278,])
func_12291 = relay.Function([var_12238,var_12239,], output)
mod['func_12291'] = func_12291
mod = relay.transform.InferType()(mod)
var_12292 = relay.var("var_12292", dtype = "uint16", shape = (2, 1, 11))#candidate|12292|(2, 1, 11)|var|uint16
var_12293 = relay.var("var_12293", dtype = "uint16", shape = (2, 1, 11))#candidate|12293|(2, 1, 11)|var|uint16
output = func_12291(var_12292,var_12293,)
func_12294 = relay.Function([var_12292,var_12293,], output)
mutated_mod['func_12294'] = func_12294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9555_call = mod.get_global_var('func_9555')
func_9557_call = mutated_mod.get_global_var('func_9557')
call_12298 = relay.TupleGetItem(func_9555_call(), 2)
call_12299 = relay.TupleGetItem(func_9557_call(), 2)
func_5365_call = mod.get_global_var('func_5365')
func_5369_call = mutated_mod.get_global_var('func_5369')
const_12307 = relay.const([[-8.214899,1.108623,8.976122,3.202453],[1.494906,-4.631246,-8.221169,-2.397073],[6.886971,2.549417,-0.238132,9.816925],[7.553976,2.094528,6.537585,-6.735969],[-9.254580,1.434728,-0.240979,9.920496],[8.252422,6.667692,1.736446,-3.579965],[-7.731595,6.816555,3.602614,-0.085710],[8.926909,-1.589067,-7.961537,2.421351],[-4.399111,-4.266091,8.690481,-8.601648],[4.291788,-5.236982,5.948683,-0.728425],[7.324371,0.284716,-7.182695,2.907406],[1.299020,-9.666973,-8.187283,1.924318],[-8.084883,9.328480,2.442264,7.604961],[3.802203,2.950549,-8.878029,1.339487],[8.200652,-3.200188,-0.793484,-4.295564],[7.820321,6.831691,-8.191875,-0.533484],[6.186759,-4.772498,1.017476,6.494586],[-0.383338,-8.161436,-2.675656,-2.917813],[-5.545664,0.007420,-0.905054,-4.211576],[-7.111043,0.922815,-7.189908,-8.268705]], dtype = "float32")#candidate|12307|(20, 4)|const|float32
var_12308 = relay.var("var_12308", dtype = "float32", shape = (1040, 1))#candidate|12308|(1040, 1)|var|float32
call_12306 = relay.TupleGetItem(func_5365_call(relay.reshape(const_12307.astype('float32'), [5, 1, 16]), relay.reshape(var_12308.astype('float32'), [5, 13, 16]), ), 0)
call_12309 = relay.TupleGetItem(func_5369_call(relay.reshape(const_12307.astype('float32'), [5, 1, 16]), relay.reshape(var_12308.astype('float32'), [5, 13, 16]), ), 0)
output = relay.Tuple([call_12298,call_12306,const_12307,var_12308,])
output2 = relay.Tuple([call_12299,call_12309,const_12307,var_12308,])
func_12310 = relay.Function([var_12308,], output)
mod['func_12310'] = func_12310
mod = relay.transform.InferType()(mod)
mutated_mod['func_12310'] = func_12310
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12311 = relay.var("var_12311", dtype = "float32", shape = (1040, 1))#candidate|12311|(1040, 1)|var|float32
func_12310_call = mutated_mod.get_global_var('func_12310')
call_12312 = func_12310_call(var_12311)
output = call_12312
func_12313 = relay.Function([var_12311], output)
mutated_mod['func_12313'] = func_12313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11105_call = mod.get_global_var('func_11105')
func_11106_call = mutated_mod.get_global_var('func_11106')
call_12335 = relay.TupleGetItem(func_11105_call(), 0)
call_12336 = relay.TupleGetItem(func_11106_call(), 0)
func_7860_call = mod.get_global_var('func_7860')
func_7863_call = mutated_mod.get_global_var('func_7863')
var_12347 = relay.var("var_12347", dtype = "int32", shape = ())#candidate|12347|()|var|int32
call_12346 = relay.TupleGetItem(func_7860_call(relay.reshape(var_12347.astype('int32'), [])), 0)
call_12348 = relay.TupleGetItem(func_7863_call(relay.reshape(var_12347.astype('int32'), [])), 0)
output = relay.Tuple([call_12335,call_12346,var_12347,])
output2 = relay.Tuple([call_12336,call_12348,var_12347,])
func_12351 = relay.Function([var_12347,], output)
mod['func_12351'] = func_12351
mod = relay.transform.InferType()(mod)
var_12352 = relay.var("var_12352", dtype = "int32", shape = ())#candidate|12352|()|var|int32
output = func_12351(var_12352)
func_12353 = relay.Function([var_12352], output)
mutated_mod['func_12353'] = func_12353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11620_call = mod.get_global_var('func_11620')
func_11621_call = mutated_mod.get_global_var('func_11621')
call_12374 = relay.TupleGetItem(func_11620_call(), 0)
call_12375 = relay.TupleGetItem(func_11621_call(), 0)
func_9606_call = mod.get_global_var('func_9606')
func_9607_call = mutated_mod.get_global_var('func_9607')
call_12376 = relay.TupleGetItem(func_9606_call(), 0)
call_12377 = relay.TupleGetItem(func_9607_call(), 0)
func_7357_call = mod.get_global_var('func_7357')
func_7366_call = mutated_mod.get_global_var('func_7366')
var_12381 = relay.var("var_12381", dtype = "bool", shape = (572,))#candidate|12381|(572,)|var|bool
var_12382 = relay.var("var_12382", dtype = "float64", shape = (360,))#candidate|12382|(360,)|var|float64
const_12383 = relay.const([9,-4,3,-6,-3,-5,4,5,-5,1,-2,-5,10,-8,9,10,-3,2,4,7,4,2,-6,-2,-4,1,3,4,7,-2,1,6,-6,-10,-8,-10,10,4,8,7,1,7,-3,-5,-3,7,-1,-8,3,7,-6,8,10,-4,-10,-8,8,-4,8,-3,8,-5,-5,6,-2,3,-2,5,-5,-8,-9,-5,-6,10,-2,-5,3,9,-4,7,-10,5,1,3,9,2,-10,7,-8,9,9,10,3,-1,-6,6,-9,7,-3,10,2,9,9,-7,2,8,-10,-3,-8,4,3,10,-1,5,-7,-3,5,10,-10,2,5,-1,-8,7,-9,10,1,3,6,3,3,2,-1,-1,-1,1,2,-10,8,-6,8,-8,-7,8,-1,9,-8,1,5,-10,-6,2,-5,-8,-10,2,2,9,-3,7,10,5,8,9,7,-2,10,-10,-8,10,5,-8,-1,8,-5,-5,10,-5,7,2,3,8,-9,10,7,5,-3,-10,-1,-6,3,3,3,-10,2,-4,-5,2,-1,1,-4,1,-1,-10,9,-9,9,-4,10,3,-7,10,-1,7,-5,-1,5,6,3,8,-4,-4,9,-5,3,2,9,3,-4,-2,-7,8,3,7,2,9,2,-8,1,-3,-5,6,9,-2,10,-2,6,-10,-5,-6,2,-10,-7,9,-6,-4,-9,3,-10,1,-10,8,2,-7,-4,-2,8,-3,4,5,-6,1,7,-1,10,8,4,7,1,5,-7,-4,-2,-10,-10,-6,-1,-10,-2,7,7,-3,-1,-9,4,-10,10,4,10,8,-8,-6,3,9,-1,7,-2,-6,-3,-7,-8,10,10,2,9,-2,6,3,-6,-7,9,-2,6,-5,-5,-8,7,5,-1,9,-8,-6,-9,-6,-3,9,-8,-4,10,-5,-10,-10,-2,-6,1,-4,6,-5,-9,1,5,4,2,-8,-5,-7,-8,6,3,5,-9,5,7,2,1,7,-3,7,-7,10,-8,9,-6,-5,6,5,9,3,-7,1,8,4,-7,9,-8,7,5,-3,2,-2,-10,-6,-4,-4,-1,1,-10,-3,9,-10], dtype = "int8")#candidate|12383|(400,)|const|int8
var_12384 = relay.var("var_12384", dtype = "int32", shape = ())#candidate|12384|()|var|int32
const_12385 = relay.const([4,-8,7,-7,-8,1,-7,-2,10,-10,6,-2,-6,5,3,9,-8,-6,-6,9,7,1,-6,4,-8,-5,-2,9,4,-2,-6,8,7,6,-8,-7,-4,2,-3,7,1,-6,-3,-1,-8,3,1,7,-5,1,-1,-2,-7,6,9,1,-7,2,-5,4,3,7,-1,4,-1,-1,3,9,6,-2,-9,6,2,-6,1,10,9,2,6,-6,-10,1,-10,5,-6,-2,10,2,8,-10,-10,-4,2,9,-1,6,3,9,8,1,1,-8,3,-6,10,9,10,6,-1,-9,1,-8,-5,-8,-10,-6,2,3,-5,-4,7,-4,-1,1,7,-6,7,3,-10,-4,7,1,-5,-3,-5,7,4,-1,2,-5,-1,-7,5,-2,-8,5,-6,5,3,4,-8,-2,-2,5,6,-5,3,7,2,4,6,9,6,-3,-3,8,10,4,-4,6,-3,7,4,7,-3,-10,-2,1,3,8,-3,-1,-4,-4,6,-8,-4,-6,-1,4,3,3,3,3,9,5,-6,6,-1,-10,-4,-7,-3,7,-3,-10,-7,2,-8,-7,6,3,-10,6,1,8,4,6,-8,3,-3,10,5,-1,8,-2,-2,10,5,-3,2,4,9,-5,-2,-2,3,-7,5,3,-8,10,1,-3,-4,5,-2,-3,-10,9,7,8,-3,-8,5,-2,8,4,-1,-8,-5,-2,3,-9,-4,-4,10,-2,-9,1,-4,6,6,3,-10,2,-5,4,10,10,2,4,6,-4,8,8,8,-6,-7,-2,2,-2,-10,7,-10,3,-1,-1,-5,-3], dtype = "int32")#candidate|12385|(300,)|const|int32
var_12386 = relay.var("var_12386", dtype = "float64", shape = (24, 120))#candidate|12386|(24, 120)|var|float64
call_12380 = relay.TupleGetItem(func_7357_call(relay.reshape(var_12381.astype('bool'), [13, 11, 4]), relay.reshape(var_12382.astype('float64'), [1, 360]), relay.reshape(const_12383.astype('int8'), [4, 100]), relay.reshape(var_12384.astype('int32'), []), relay.reshape(const_12385.astype('int32'), [300, 1]), relay.reshape(var_12386.astype('float64'), [8, 360]), relay.reshape(var_12386.astype('float32'), [8, 360]), ), 7)
call_12387 = relay.TupleGetItem(func_7366_call(relay.reshape(var_12381.astype('bool'), [13, 11, 4]), relay.reshape(var_12382.astype('float64'), [1, 360]), relay.reshape(const_12383.astype('int8'), [4, 100]), relay.reshape(var_12384.astype('int32'), []), relay.reshape(const_12385.astype('int32'), [300, 1]), relay.reshape(var_12386.astype('float64'), [8, 360]), relay.reshape(var_12386.astype('float32'), [8, 360]), ), 7)
var_12404 = relay.var("var_12404", dtype = "bool", shape = (572,))#candidate|12404|(572,)|var|bool
bop_12405 = relay.power(var_12381.astype('float32'), relay.reshape(var_12404.astype('float32'), relay.shape_of(var_12381))) # shape=(572,)
func_12127_call = mod.get_global_var('func_12127')
func_12129_call = mutated_mod.get_global_var('func_12129')
call_12408 = relay.TupleGetItem(func_12127_call(), 0)
call_12409 = relay.TupleGetItem(func_12129_call(), 0)
uop_12419 = relay.exp(var_12386.astype('float32')) # shape=(24, 120)
output = relay.Tuple([call_12374,call_12376,call_12380,var_12382,const_12383,var_12384,const_12385,bop_12405,call_12408,uop_12419,])
output2 = relay.Tuple([call_12375,call_12377,call_12387,var_12382,const_12383,var_12384,const_12385,bop_12405,call_12409,uop_12419,])
func_12421 = relay.Function([var_12381,var_12382,var_12384,var_12386,var_12404,], output)
mod['func_12421'] = func_12421
mod = relay.transform.InferType()(mod)
var_12422 = relay.var("var_12422", dtype = "bool", shape = (572,))#candidate|12422|(572,)|var|bool
var_12423 = relay.var("var_12423", dtype = "float64", shape = (360,))#candidate|12423|(360,)|var|float64
var_12424 = relay.var("var_12424", dtype = "int32", shape = ())#candidate|12424|()|var|int32
var_12425 = relay.var("var_12425", dtype = "float64", shape = (24, 120))#candidate|12425|(24, 120)|var|float64
var_12426 = relay.var("var_12426", dtype = "bool", shape = (572,))#candidate|12426|(572,)|var|bool
output = func_12421(var_12422,var_12423,var_12424,var_12425,var_12426,)
func_12427 = relay.Function([var_12422,var_12423,var_12424,var_12425,var_12426,], output)
mutated_mod['func_12427'] = func_12427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10708_call = mod.get_global_var('func_10708')
func_10710_call = mutated_mod.get_global_var('func_10710')
call_12488 = relay.TupleGetItem(func_10708_call(), 0)
call_12489 = relay.TupleGetItem(func_10710_call(), 0)
uop_12496 = relay.sin(call_12488.astype('float32')) # shape=(1, 9, 2)
uop_12498 = relay.sin(call_12489.astype('float32')) # shape=(1, 9, 2)
var_12504 = relay.var("var_12504", dtype = "float64", shape = (5, 9, 2))#candidate|12504|(5, 9, 2)|var|float64
bop_12505 = relay.maximum(call_12488.astype('int16'), var_12504.astype('int16')) # shape=(5, 9, 2)
bop_12508 = relay.maximum(call_12489.astype('int16'), var_12504.astype('int16')) # shape=(5, 9, 2)
bop_12518 = relay.add(bop_12505.astype('int8'), uop_12496.astype('int8')) # shape=(5, 9, 2)
bop_12521 = relay.add(bop_12508.astype('int8'), uop_12498.astype('int8')) # shape=(5, 9, 2)
output = relay.Tuple([bop_12518,])
output2 = relay.Tuple([bop_12521,])
func_12523 = relay.Function([var_12504,], output)
mod['func_12523'] = func_12523
mod = relay.transform.InferType()(mod)
var_12524 = relay.var("var_12524", dtype = "float64", shape = (5, 9, 2))#candidate|12524|(5, 9, 2)|var|float64
output = func_12523(var_12524)
func_12525 = relay.Function([var_12524], output)
mutated_mod['func_12525'] = func_12525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9606_call = mod.get_global_var('func_9606')
func_9607_call = mutated_mod.get_global_var('func_9607')
call_12573 = relay.TupleGetItem(func_9606_call(), 0)
call_12574 = relay.TupleGetItem(func_9607_call(), 0)
output = call_12573
output2 = call_12574
func_12596 = relay.Function([], output)
mod['func_12596'] = func_12596
mod = relay.transform.InferType()(mod)
output = func_12596()
func_12597 = relay.Function([], output)
mutated_mod['func_12597'] = func_12597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10708_call = mod.get_global_var('func_10708')
func_10710_call = mutated_mod.get_global_var('func_10710')
call_12603 = relay.TupleGetItem(func_10708_call(), 0)
call_12604 = relay.TupleGetItem(func_10710_call(), 0)
func_1532_call = mod.get_global_var('func_1532')
func_1534_call = mutated_mod.get_global_var('func_1534')
const_12606 = relay.const([7.959140,1.392350,-0.955714,8.121847,9.113552,-0.633238,-1.450834,1.696655,-5.948439,-2.692115,3.849618,8.335274,5.706540,-5.147462,4.663452,4.043821,9.696254,-8.373409,7.651072,-2.847118,-5.497160,6.500798,-7.014939,5.330702,9.170303,5.662650,-8.326230,8.593469,-1.211714,8.109493,-5.409354,-1.555085,3.822181,4.762505,-6.061982,-7.066272,-6.451897,9.904606,-2.175402,-2.847570,-4.126417,-3.942257,-0.574361,4.324161,3.438448,-8.637196,7.506684,-2.448257,0.309476,-3.157746,4.811254,6.340270,-6.886122,-7.638317,7.754360,6.566577,-9.938165,-1.394816,0.225892,1.716369,-0.554333,-2.226434,-2.937752,9.878687,-8.746866,-6.426382,-2.098293,-2.345746,-6.572340,1.619102,7.562923,-6.181488,2.538711,-6.583116,-7.560837,0.850524,1.717366,-2.885639,-3.919619,-9.479810,9.651924,-5.099307,-9.867992,2.708907,-9.029416,-1.313455,3.585971,4.971842,9.932407,1.849562,-6.276299,6.323100,4.359915,7.938223,6.241429,-6.161140,-9.385188,-0.165146,7.779004,-4.517905,-8.782406,1.244325,0.750799,-4.121738,-0.451414,-2.147134,9.733257,7.287150,7.003214,-6.885971,-8.619687,-9.519779,-5.705029,5.139552,-6.885751,6.246511,-1.362473,-6.260854,0.951955,-1.494186,-0.558995,-0.039421,-1.771680,-1.783822,2.052346,-0.178007,-8.535094,-7.700160,8.160160,-6.330545,9.629386,9.900555,4.508396,7.022555,-3.988559,-8.996413,-3.789282,-0.936405,-0.102414,4.738340,-6.964952,6.875206,-8.321605,9.977614,2.186876,0.803478,8.195964,-9.989212,-9.508754,0.021288,-4.920721,8.285202,0.842832,1.234250,5.530573,1.850535,6.919524,-0.936174,-4.880512,0.413746,6.009542,8.358559,4.632922,7.726174,7.759992,5.958321,8.018580,0.737498,-8.799997,-2.376182,5.551748,9.943454,7.281114,-4.214932,6.028830,9.877593,-3.168444,2.586761,0.374171,6.607725,-8.307094,-4.338982,2.443295,-8.485292,-9.588899,2.664263,-3.184554,-7.345550,-3.092328,4.619346,6.973949,7.143433,1.773816,4.083583,7.070993,-7.804447,7.241443,7.784520,-5.682684,1.001105,6.826488,-6.250118,9.266324,5.492995,4.693684,-3.277785,5.235490,-4.568195,-9.053456,9.641334,-5.488222,9.371896,-7.894448,-6.956185,-4.517429,-2.408473,7.181958,0.460562,2.954398,-2.533967,-3.757290,0.953018,-7.493462,-1.900976,-6.739852,8.328764,1.315659,-2.466382,3.204037,-9.767021,-9.837510,9.038349,5.591613,0.248487,0.042598,4.909174,-2.329048,-9.586532,-9.622972,0.609900,-6.834251,1.881580,-9.019517,-5.810114,7.866320,3.364673,4.906663,3.775605,-5.409654,1.705250,-7.576193,3.346770,-1.480351,-9.833786,-2.104415,0.585809,-4.454739,3.421833,-0.939298,-6.776605,-8.060885,-3.755730,3.961297,2.067395,-6.491559,8.145934,9.225320,4.666297,-4.262756,1.714312,4.482519,-1.379350,5.745188,-5.357663,8.872223,5.482599,4.799943,9.195075,7.972433,-7.789903,2.635354,3.396560,-9.304939,-6.678842,-3.129870,0.965492,-2.049198,0.199284,7.960299,-1.009291,-1.075423,7.173220,3.543771,-5.026475,3.677332,-5.765719,8.913838,8.939925,-2.607991,-2.245992,8.145243,-1.924788,9.265829,-6.921467,-4.917352,3.139777,-0.889482,-9.493264,1.830745,7.029526,4.511626,-5.375304,2.648751,-1.244833,1.141236,-9.892447,-9.626150,6.104124,-8.829546,0.305779,-1.824857,7.908932,4.970712,-6.601492,9.017681,5.280929,2.161846,8.342354,1.530773,-1.359766,-5.036577,-1.743164,8.868846,8.992481,3.888244,-3.690301,7.343568,-2.368030,6.615948,-5.709535,-0.715997,0.343271,0.994842,-4.123229,-0.159130,4.251142,6.670999,-7.551049,0.753523,-4.561141,-1.471841,-7.616236,1.884700,-3.771907,6.084796,4.746745,-4.115412,6.845712,0.664635,-1.913944,-1.025482,-5.713882,3.878838,6.468193,-1.778731,5.009712,-5.523889,0.522736,9.851636,3.346065,-1.911317,-8.938364,6.051724,-1.516510,-4.977576,2.453121,-9.276672,-4.986640,-8.715842,8.703640,-7.619016,7.817757,-0.940583,-8.641459,-5.922704,2.719137,-6.386317,2.538744,3.105418,-3.680596,-3.677817,9.388445,3.575264,6.455059,4.137992,3.130873,7.894761,-6.612599,2.021080,2.947671,-0.912255,-2.136394,9.657159,6.094738,8.078733,-9.930553,4.561559,-3.566787,8.338169,-1.482838,-9.123675,-4.591763,-2.018544,-9.938423,3.233996,1.822164,-9.320924,-5.292220,6.857823,-1.837184,7.237364,-9.397314,-5.046682,-9.377217,-6.752989,-2.214713,-3.723863,0.878115,-8.465093,-8.856683,1.182297,6.527727,9.329791,2.467774,5.110912,8.503766,-5.234414,7.071207,-0.842867,9.815640,-6.626149,-0.375659,-8.873972,7.290307,6.440442,1.495363,8.940239,-8.847143,-9.145065,9.909519,0.119032,4.903718,3.276681,1.250735,-2.623390,-9.705791,-5.603576,3.228171,-8.179063,6.957967,-2.800316,1.210458,-9.824365,-2.474040,7.198143,-8.329187,-0.834836,2.670488,6.056668,1.056501,0.930674,-5.209779,-8.441649,-2.569042,3.215431,-9.482185,-0.966778,6.088455,2.318899,-5.861991,-2.328618,-8.726123,-0.264868,-2.882374,-1.470554,8.866167,9.416207,6.845013,3.377240,5.728133,-8.980807,-7.351542,4.761215,5.660631,4.575986,7.415552,-2.907893,-2.012003,2.167557,-4.310358,-1.175775,5.668805,-4.788066,-2.853542,7.475760,-9.266052,9.789244,-4.082125,-9.467096,-1.624394,2.952515,2.945492,3.354623,-8.444166,-5.743931,-7.618751,-3.056954,3.381725,-8.722391,-7.570444,7.834345,8.567742,6.639797,8.576728,3.155098,7.169697,0.986492,6.906081,-0.036053,-9.046364,-6.826839,-3.370072,-9.089424,3.183347,4.478118,-9.338181,-2.989469,4.418759,-5.873352,-9.371345,-1.437130,-6.428942,-3.844875,-2.205935,-7.362659,-7.137764,7.836315,9.817807,-8.915662,7.181591,3.375164,-7.503802,8.924440,4.694667,-9.720672,-8.205947,-3.999013,-6.487692,-3.392058,9.615308,9.432122,4.521031,-8.986830,8.488857,-9.094420,-0.114547,-0.648016,8.312300,9.899936,9.317217,-6.262162,-7.148771,1.133102,-4.956129,-3.513071,-8.411464,0.869973,-3.789162,-4.882232,-5.005271,-7.016940,-7.948250,8.813548,5.215490,7.906716,-9.389362,-9.574012,-0.112066,5.766464,4.456233,-9.506214,-7.488295,3.253988,-0.954882,-4.516267,-2.277578,5.621104,8.386482,0.843629,0.317002,-0.874459,-2.434775,5.945214,-7.664126,3.402763,-7.894792,9.922301,6.799136,6.509078,-3.764726,-8.961657,7.369446,-5.947960,-1.921783,0.556284,-3.909508,4.386491,-3.070154,3.311332,-9.776994,-8.614597,-6.132472,0.573127,-1.494526,8.137098,-3.822695,-7.743653,-0.590543,-0.123299,-9.408992,-3.021493,4.253328,7.979449,-9.530192,-2.291909,-3.779361,1.371222,-8.155890,-6.598029,-1.352876,-2.443483,-5.326477,-4.194896,8.853583,4.371620,-7.769147,-9.589509,-6.099696,1.057085,-5.378975,8.664509,-6.560365,2.627620,4.284337,0.780682,-7.564562,-5.698713,-2.735020,6.938145,8.284166,0.628988,-7.065374,-9.753142,-2.660367,-9.736558,9.268829,4.058756,-2.127393,6.928326,-3.823733,9.852821,-3.024265,5.262624,-7.930986,-5.090711,-8.225020,7.381801,0.170902,9.265111,4.491069,-8.161113,0.727127,-6.155151,-7.786576,6.239238,7.698278,1.356507,-9.780504,-6.885908,5.351021,-6.761715,1.065004,6.900800,2.650476,-5.865631,-9.340953,-5.540116,-6.800364,2.988911,-9.495692,2.170771,-1.450310,2.746483,-0.895265,6.120406,-9.502781,7.649855,-8.521859,-8.399082,7.876892,-1.672261,4.064440,4.612881,-7.319416,-5.623278,9.638737,-8.999920,3.795907,-2.710320,2.851498,2.293664,5.478115,8.849130,5.671629,-3.362981,-4.728946,-2.856486,7.769809,8.513049,9.732420,-9.893074,-7.398728,-8.728303,-7.092460,5.061514,-2.904682,0.644652,8.562019,8.670503,-7.605428,1.387021,3.870730,-9.285737,9.797061,-8.433738,9.944579,3.131017,4.255187,1.367661,-8.734394,4.385438,-3.641816,-2.127224,-3.993722,-8.410313,5.722030,5.479133,-0.085924,2.149010,-3.671785,-1.303787,-9.027253,9.388047,9.580749,4.310214,5.576173,-4.135391,0.160737,8.797629,9.846378,-5.137605,2.433095,8.180692,1.237881,4.365807,-2.706832,-1.252980,5.908127,-3.053813,-2.189603,-5.527423,-2.470911,9.884724,4.722413,7.834469,6.153183,-7.735968,-8.929474,-1.448064,-3.254792,2.700950,3.477177,-7.933385,9.676046,3.618396,-6.063468,7.322580,-1.579528,4.628468,7.910406,-7.101541,-5.710558,8.190937,-5.697843,5.718559,4.616542,3.789598,-7.343358,8.366060,-5.987805,8.074532,-3.606076,-4.254733,-5.167263,-9.369698,-1.962671,-2.582401,1.017954,5.503515,0.263559,5.572769,6.642204,3.705374,-7.718030,5.702176,7.111341,3.730161,3.313603,-7.180656,6.941295,9.413168,-3.532845,5.404607,8.831012,4.760001,2.818154,6.950607,-9.451795,-2.642847,2.615831,6.991806,-7.941355,-0.120130,-5.313661,0.038146,-2.452668,-7.867018,-7.420438,-6.953691,-6.638674,-2.417731,-3.192434,1.660888,-6.963540,4.246621,4.615244,-0.600639,-1.954822,-0.193744,-6.308861,-5.360795,-7.728976,8.506463,-3.715556,0.374677,8.032294,-3.926633,5.953336,-1.000958,6.262635,-0.958769,7.412840,9.416057,7.511126,-6.642428,7.780510,-7.237912,3.879290,9.951028,-4.159951,3.463588,-8.808045,9.290439,6.935968,-8.214431,-8.286295,9.643113,0.730730,7.356221,-7.492723,-5.518781,-4.882653,-5.513070,-0.340375,-7.641640,-2.139478,2.017678,0.248199,-7.370344,-4.444895,-4.538685,4.139282,-1.289148,-2.659998,-5.672131,-9.886287,-6.973720,0.193713,-9.697729,-7.702974,-9.483647,-5.561064,-6.892477,4.730766,-4.070774,5.184975,-5.031341,1.444846,4.175462,-6.542376,-4.114035,1.984195,2.055191,2.251648,-4.701899,-9.954477,-3.562051,-9.946848,1.866818,-5.835413,-4.045187,-8.597944,-2.834064,1.551970,4.613401,3.179884,-5.657717,-6.358993,-6.152650,-6.621500,-0.029743,9.345719,9.836705,5.595585,8.041120,7.590609,0.539290,-0.060059,5.161611,4.384674,3.495829,-4.906058,5.639032,-8.207978,4.904249,1.583204,7.936156,-9.759377,-1.303486,7.153051,2.494364,9.523361,-0.300785,4.396198,-5.214101,-4.106721,2.340175,3.356647,-4.026629,-7.024758,-8.691136,5.982912,7.526353,9.626662,0.858004,4.523351,2.825078,0.605101,1.736058,3.853529,6.337878,4.253684,-7.839133,-6.679013,-7.933187,-3.712097,-1.530066,7.667256,-5.534375,6.716999,9.653887,-9.658427,-2.590808,1.977430,-8.103305,3.838418,-2.334301,0.212282,4.820189,7.759939,-3.978783,1.607655,8.813768,-0.674682,3.189846,8.796083,3.359040,6.625705,3.996863,3.294692,6.340831,-3.388363,6.881052,-1.027676,6.115775,1.798206,-8.148762,-0.934271,4.384322,9.345131,-4.591004,1.082178,-7.188352,5.985607,2.899588,-0.153803,2.419551,1.026972,-4.131862,-0.282456,9.367590,2.735245,-0.126443,-1.216784,4.329987,-5.082872,-9.271086,5.539552,-2.323473,4.009166,9.348176,-7.428816,-4.958812,2.843945,5.785919,-4.626512,0.383297,-8.388401,2.031407,0.920287,-6.062063,-7.136012,-2.523773,-9.666241,7.494368,-8.518588,4.939412,8.472999,-9.691906,-4.439079,-7.295607,3.451906,-5.916531,2.509777,-1.558236,-1.507038,-1.300380,1.117715,-4.664549,9.191309,1.495038,-0.145189,-9.600548,-5.934268,7.542737,0.083222,5.323153,8.700397,-0.804991,1.831345,-5.365678,-0.267876,9.606887,4.545617,3.007786,9.614967,-1.370467,5.898491,8.585144,-9.258552,-8.219863,2.750424,-6.204099,1.360700,0.759086,8.377405,3.325966,2.944650,6.976593,-4.838227,4.371843,-5.000541,-5.173889,0.828451,2.846375,-3.659535,0.061583,-5.434594,-7.041572,-4.976445,-0.738220,4.146614,9.167867,-9.697173,1.530136,1.543915,-5.232768,4.423178,6.036470,1.732985,-6.701220,-4.960126,2.126102,5.317011,8.539244,5.846843,5.254090,8.501845,2.193976,9.043624,-5.896073,-6.668893,-0.279150,0.403814,-0.141616,7.549329,-0.707629,-1.768006,-4.994876,-6.423303,4.970795,1.344274,-1.574099,-4.930854,2.656159,6.997141,-4.041433,-5.474541,1.905492,2.380719,-3.141404,-3.660961,-0.251204,-5.302638,-4.565655,-4.628345,0.752230,-7.694451,-6.066005,4.556308,-4.902232,-8.545064,-2.854887,-4.238068,-4.320443,8.529831,-0.078613,-8.702461,-0.517651,6.538875,7.823108,2.087852,7.249780,-1.950507,-9.982351,9.213143,-1.242938,6.360452,3.164342,-8.379600,6.578867,-6.001967,7.814848,1.392853,-6.150614,-6.363700,-5.233493,-3.404452,6.263900,-9.186874,-4.633835,2.951859,2.215400,-6.259963,-6.464756,-4.189158,-5.353086,7.151926,2.065704,-0.710078,8.256942,6.892751,-7.041391,6.104320,6.266779,6.749211,-6.782734,-9.404171,3.620622,-6.873839,-6.711408,-2.891464,1.204861,-9.688754,-5.030493,-4.767121,-7.394914,7.679615,2.653385,-3.346701,-0.752942,8.812331,-6.511550,-1.174455,-3.574932,2.897825,-4.770832,4.242248,8.035767,-8.572843,-8.888868,2.831375,6.560596,5.260273,-3.465855,6.559705,7.123222,6.116313,-9.749153,-4.376933,-1.434165,7.372453,4.784094,-3.835540,4.959285,-7.837788,-8.579113,-5.808904,-1.123262,-8.688422,5.377672,-2.115224,-4.651204,0.822535,0.921494,0.126802,6.311975,-1.569185,-8.287552,-1.513765,-3.851968,8.600240,-5.499069,-7.828844,-0.436873,5.399070,-6.572266,-6.719253,2.086999,8.716217,9.129055,-7.753100,-8.503537,1.946527,-2.549058,-9.636007,-9.250309,0.180546,7.457074,-1.229576,-8.730528,6.895168,1.809588,-3.797829,2.397806,4.877608,-1.723409,-8.733261,7.475950,9.237341,6.469402,-6.397700,-3.143218,-5.175378,9.870427,5.185546,1.126488,-6.731328,-6.112300,6.115944,-5.277144,7.723546,8.173365,1.898640,2.117074,-7.507268,-5.668399,6.343862,-0.342891,-7.511275,-1.267187,9.774535,8.278892,-1.090453,-9.710852,1.890371,-7.194754,-1.760482,-4.745711,-4.658506,-6.893153,-2.118969,6.605091,7.559013,-6.094478,8.019974,8.007910,-2.545489,-1.739327,4.644454,-3.729001,-0.243027,1.058071,-3.331162,-4.895361,9.170475,4.744886,-0.687223,5.046587,-9.552491,2.460882,-0.890268,5.491862,4.289979,7.844977,-1.177373,-6.444954,6.927030,3.672583,5.564895,-4.529503,6.445511,1.984571,2.945345,2.010989,-9.462057,0.639592,-6.913259,1.541779,5.660223,-0.434207,-4.113452,-4.103337,-3.683059,-3.983126,1.818827,-5.979030,-0.262236,-3.202341,7.273922,-3.271233,8.214809,-2.389656,-9.710441,0.345284,6.917139,4.625133,-2.599475,6.792007,-3.940455,8.222502,-0.582179,-7.039912,7.421172,-5.909277,-1.145251,-0.911267,6.625052,8.900555,-6.023527,5.801192,-3.336955,9.111456,-1.334975,4.423621,-6.634939,-3.995707,1.351233,-0.022591,-4.795510,3.391479,1.640895,-9.076279,-4.408056,-4.025085,-2.423370,-4.704699,-9.268967,-6.455248,-3.476152,1.407970,-4.750306,-8.513094,-0.248411,-6.682490,2.053858,-4.979725,5.057455,9.929635,-8.052867,-3.348234,9.570241,-2.859033,-3.571524,-2.305292,-6.830870,-8.276371,-9.780267,-5.699476,4.397172,6.498343,-1.586988,2.792663,-6.041480,-8.132827,-6.847522,6.201806,6.387384,6.354898,-3.904452,2.179682,-4.298022,9.750084,-6.754458,8.649758,-3.963480,-8.942754,-7.452541,-4.735631,1.251062,-5.478314,4.506496,9.107729,6.842429,0.614037,7.353652,-4.430397,-4.006959,-2.185160,-0.839978,-2.914013,-4.182135,1.707253,-3.454132,2.934279,-5.523445,1.764537,5.554870,5.000490,3.719399,3.713699,8.593232,-7.279780,1.854673,-9.371575,0.920495,4.039103,5.600100,-1.424379,-2.124354,6.176275,8.173574,5.396374,-1.175926,5.060155,1.326437,-5.376116,0.172348,-6.188611,2.174984,-8.347707,6.238525,-9.221001,-2.005833,-7.509847,-1.542456,-5.378339,-0.639303,-2.445473,-8.867563,-5.351023,-8.006379,-0.028021,-6.540499,9.529932,5.250356,-7.619148,2.839852,9.917630,5.988182,-2.837237,-8.213472,-1.411620,-3.823693,1.347583,-7.047386,-7.536375,-7.645351,-9.324626,5.854069,-1.356598,3.422553,0.950555,0.818904,3.253654,-0.294187,-4.856295,-1.399578,4.613487,2.830294,9.409484,0.943514,9.857253,-3.383981,-0.701082,2.146156,-8.789726,8.035063,4.345648,-9.059262,5.971059,-8.603387,6.606602,-0.274041,-8.340654,8.088971,-6.248546,4.981100,-1.084771,5.346744,-2.336780,0.786647,-0.885705,-0.369390,0.921346,-9.703211,-6.017529,-8.973103,9.241485,-7.447106,5.845873,7.553136,-5.625133,2.575231,-6.009656,2.332509,6.958622,0.645510,5.363329,4.231374,-9.479378,-8.093378,-9.245535,5.637284,8.303790,0.765000,8.253667,-3.160868,-6.483123,4.183832,1.064567,5.698593,8.620809,-7.781763], dtype = "float32")#candidate|12606|(1584,)|const|float32
call_12605 = relay.TupleGetItem(func_1532_call(relay.reshape(const_12606.astype('float32'), [16, 9, 11])), 1)
call_12607 = relay.TupleGetItem(func_1534_call(relay.reshape(const_12606.astype('float32'), [16, 9, 11])), 1)
bop_12611 = relay.power(call_12605.astype('float32'), relay.reshape(const_12606.astype('float32'), relay.shape_of(call_12605))) # shape=(16, 9, 11)
bop_12614 = relay.power(call_12607.astype('float32'), relay.reshape(const_12606.astype('float32'), relay.shape_of(call_12607))) # shape=(16, 9, 11)
output = relay.Tuple([call_12603,bop_12611,])
output2 = relay.Tuple([call_12604,bop_12614,])
func_12634 = relay.Function([], output)
mod['func_12634'] = func_12634
mod = relay.transform.InferType()(mod)
output = func_12634()
func_12635 = relay.Function([], output)
mutated_mod['func_12635'] = func_12635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10463_call = mod.get_global_var('func_10463')
func_10465_call = mutated_mod.get_global_var('func_10465')
call_12641 = relay.TupleGetItem(func_10463_call(), 0)
call_12642 = relay.TupleGetItem(func_10465_call(), 0)
var_12660 = relay.var("var_12660", dtype = "float32", shape = (3, 16, 4))#candidate|12660|(3, 16, 4)|var|float32
bop_12661 = relay.less(call_12641.astype('bool'), relay.reshape(var_12660.astype('bool'), relay.shape_of(call_12641))) # shape=(3, 16, 4)
bop_12664 = relay.less(call_12642.astype('bool'), relay.reshape(var_12660.astype('bool'), relay.shape_of(call_12642))) # shape=(3, 16, 4)
output = bop_12661
output2 = bop_12664
func_12666 = relay.Function([var_12660,], output)
mod['func_12666'] = func_12666
mod = relay.transform.InferType()(mod)
var_12667 = relay.var("var_12667", dtype = "float32", shape = (3, 16, 4))#candidate|12667|(3, 16, 4)|var|float32
output = func_12666(var_12667)
func_12668 = relay.Function([var_12667], output)
mutated_mod['func_12668'] = func_12668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8427_call = mod.get_global_var('func_8427')
func_8429_call = mutated_mod.get_global_var('func_8429')
call_12757 = func_8427_call()
call_12758 = func_8427_call()
output = call_12757
output2 = call_12758
func_12760 = relay.Function([], output)
mod['func_12760'] = func_12760
mod = relay.transform.InferType()(mod)
output = func_12760()
func_12761 = relay.Function([], output)
mutated_mod['func_12761'] = func_12761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12206_call = mod.get_global_var('func_12206')
func_12207_call = mutated_mod.get_global_var('func_12207')
call_12765 = relay.TupleGetItem(func_12206_call(), 0)
call_12766 = relay.TupleGetItem(func_12207_call(), 0)
func_8146_call = mod.get_global_var('func_8146')
func_8149_call = mutated_mod.get_global_var('func_8149')
call_12767 = relay.TupleGetItem(func_8146_call(relay.reshape(call_12765.astype('float32'), [3, 16, 4])), 1)
call_12768 = relay.TupleGetItem(func_8149_call(relay.reshape(call_12765.astype('float32'), [3, 16, 4])), 1)
func_11644_call = mod.get_global_var('func_11644')
func_11646_call = mutated_mod.get_global_var('func_11646')
const_12786 = relay.const([[0.399963,-7.073867],[4.916272,5.371066],[-1.305697,-7.479916],[3.595748,-2.932626],[2.044799,1.745748],[-7.757265,-0.507163],[-6.574905,-8.326603],[2.715297,-3.804723],[8.718896,-8.690711],[3.237697,9.599977],[-8.979946,-3.438516],[1.985481,-7.962715],[-5.627348,7.889930],[-5.872828,3.259234],[4.947033,6.040372],[9.777986,7.135782],[2.752847,-2.094563],[8.703696,-9.576720],[6.996100,-7.254926],[-4.339637,8.992901],[-7.751191,6.208295],[9.981394,8.155912],[-7.686610,9.691572],[-9.035948,6.377798],[-9.337248,-9.620636],[8.422999,-6.274006],[-9.789982,1.840903],[1.501858,6.221024],[6.038122,-9.417289],[2.621438,5.680812],[5.796763,1.142765],[-2.352293,2.533282],[-6.160407,-3.511462],[-5.614775,6.518911],[9.145170,5.042960],[8.733913,-4.729303],[-3.582693,9.092692],[0.709629,9.006095],[5.112873,-9.223372],[7.491300,0.741697],[-3.732021,7.547602],[-0.601902,9.054782],[8.896918,-3.990309],[4.323177,8.497509],[-3.236262,6.429672],[-0.075856,-4.482588],[6.141893,0.055105],[-0.892166,9.124211],[-1.401517,9.401181],[9.361021,5.125260],[-5.542813,7.441782],[-1.317172,9.641164],[-9.533613,-5.804774],[4.425831,-2.418843],[-2.881450,-6.606158],[-5.137996,2.041122],[-7.191836,7.234335],[1.977267,5.087511],[1.394837,8.784832],[4.066883,-6.782760],[8.226949,-7.911480],[5.893276,0.698729],[-9.308453,-7.093744],[0.926170,-7.170944],[-7.780742,9.522988],[-3.445998,5.371051],[-1.191552,2.009013],[6.388752,7.357385],[4.224558,-3.166362],[-5.413201,-8.600915],[9.096253,-2.383746],[-6.323463,-5.951121],[-4.077352,-3.065917],[-5.142904,-2.997598],[-0.896881,4.539592],[6.647604,-7.676288],[-6.337704,3.023174],[-8.979595,-2.699497],[-5.280742,8.432026],[5.362055,-8.537796],[9.350042,-5.286615],[-3.349396,-9.313166],[-0.323702,2.207698],[-8.890810,-9.224415],[-1.893993,-2.387202],[7.798721,-1.044801],[0.051544,-7.950721],[1.195244,-3.489476],[7.161039,7.729805],[-7.569386,-7.611098],[5.867900,-5.940102],[9.881708,-3.388855],[4.777336,3.116056],[7.419081,-0.521358],[7.005483,9.104769],[4.326209,1.438113],[-6.463408,7.745983],[1.439962,-9.965691],[2.425273,-4.369553],[8.441433,-1.540545],[0.417062,-7.610635],[8.318469,1.497250],[3.470244,8.321465],[2.590418,-8.219990],[6.029473,-3.908080],[4.505801,6.983615],[6.077340,-2.166568],[2.290688,7.865561],[-5.566389,5.878729],[7.532435,-7.054659],[-5.722698,2.594403],[-1.306790,1.894600],[1.472595,-5.819722],[-9.087876,9.445028],[-2.817032,4.525544],[-1.351200,-4.072475],[-3.244237,-8.630114],[3.599661,-2.227511],[8.215116,0.126779],[8.219562,1.358875],[-3.545992,-2.017924],[-9.956931,-9.663397],[7.243418,-5.223348],[2.868918,-8.638647],[-1.433683,4.297911],[6.774887,7.408884],[8.872420,-1.766413],[-9.514806,-1.327456],[-5.541473,5.740845],[-1.482990,5.716044],[9.255770,-8.691649],[-2.300380,-5.845558],[0.623338,-6.214625],[-0.577059,0.205069],[-2.655372,-5.092995],[-5.121212,4.270905],[7.056594,8.599816],[6.102069,1.709793],[-7.357607,2.720491],[-8.874441,3.670666],[3.432178,-3.361095],[-1.483538,0.331141],[-1.514151,0.193580],[-4.173328,8.449739],[7.826510,-1.831670],[9.187127,-2.638760],[2.418497,-3.434201],[3.269161,7.860747],[-8.447439,-5.443381],[-5.896546,8.860196],[-1.116151,1.033135],[-6.300386,-6.210832],[6.517548,-0.507575],[5.295606,-0.813903],[-5.209296,-7.200023],[-2.897835,-9.864059],[-5.720982,7.273953],[-2.278389,3.878067],[2.988101,-3.648299],[6.027103,-6.097876],[3.711429,7.619443],[1.538308,8.587857],[-9.553661,0.974819],[3.835929,4.902845],[0.075561,-6.972845],[-5.063302,-9.347155],[-9.634910,8.496584],[4.002591,-5.453763],[-0.323528,3.733256],[7.635454,6.905425],[6.900022,1.936713],[-4.065955,-2.037010],[1.272064,3.782823],[-1.202934,-2.267504],[-6.253345,-8.364827],[2.065920,-1.653585],[-9.079077,1.362214],[-3.950746,2.571698],[0.754995,7.718154],[-7.078637,9.776733],[-9.735098,5.687163],[-6.735069,-4.553000],[9.733450,6.688092],[3.134315,-9.576394],[1.935964,-3.442170],[-6.164804,4.362245],[-0.472032,8.625783],[-8.702223,-6.617469],[9.705509,4.387755],[9.334059,2.430813],[-7.422405,9.551530],[-8.585293,6.952423],[4.256191,-1.586206],[-1.280033,-1.110731],[-0.146021,1.968955],[-7.054940,4.545168],[2.192241,-8.812369],[-0.581451,8.486027],[-6.870258,8.185674],[-0.577218,-2.792712],[-6.521108,1.061416],[2.204341,9.368551],[4.692722,-1.264373],[-5.809602,6.377464],[3.447496,2.506413],[1.087530,-6.430825],[4.473778,7.355358],[7.609683,-2.055733],[-7.586727,-3.861172],[5.540927,8.925792],[-0.348500,-6.497371],[8.454966,-2.479783],[6.762309,3.440901],[-1.391515,-0.563981],[0.277329,5.511217],[-6.257586,-4.069677],[4.416066,-6.727253],[-4.742538,6.708815],[1.553427,0.352030],[2.004567,2.080470],[9.372351,-2.579481],[5.978084,-9.362643],[-6.884767,4.083179],[4.755474,9.493983],[-6.701283,0.735512],[8.954149,9.580055],[-3.983111,2.301564],[-8.018966,3.528762],[2.011526,6.544997],[-7.045367,6.438389],[2.580306,0.337616],[-8.292811,8.970526],[-4.136688,2.026304],[9.373742,7.236425],[-5.429582,4.586471],[1.545927,-0.232741],[-9.897051,0.517293],[4.149734,5.488484],[7.441054,6.892491],[5.334168,-0.848557],[3.824162,5.370772],[-7.185161,3.368115],[-7.336750,6.798047],[6.749805,-5.262212],[9.030476,-0.240756],[2.544992,7.543095],[8.677133,-1.671467],[5.677633,-7.715454],[8.891079,2.761005],[-9.497058,-6.417476],[-5.636624,1.701701],[4.391013,7.439474],[5.129978,-4.213050],[-9.073884,-8.210931],[-4.017445,-2.596313],[3.709279,6.179514],[8.161196,4.477875],[3.823742,-7.224175],[1.828136,8.203416],[3.391555,-8.465148],[-2.782254,8.592851],[-1.723672,-7.717281],[4.745528,9.440229],[-9.863178,6.952909],[3.403168,0.801027],[-8.514646,-0.040082],[5.454825,-5.872386],[2.032397,-9.038351],[1.936099,-9.105586],[2.247128,5.190059],[5.794485,8.583214],[0.158390,5.013359],[7.241976,2.038252],[-2.401704,-7.552148],[8.141167,5.471378],[2.891903,-1.410317],[5.900540,-6.363599],[-2.780966,1.232954],[-1.095548,5.550290],[7.272098,3.854356]], dtype = "float32")#candidate|12786|(280, 2)|const|float32
call_12785 = relay.TupleGetItem(func_11644_call(relay.reshape(const_12786.astype('float32'), [14, 4, 10])), 1)
call_12787 = relay.TupleGetItem(func_11646_call(relay.reshape(const_12786.astype('float32'), [14, 4, 10])), 1)
func_12760_call = mod.get_global_var('func_12760')
func_12761_call = mutated_mod.get_global_var('func_12761')
call_12789 = func_12760_call()
call_12790 = func_12760_call()
output = relay.Tuple([call_12765,call_12767,call_12785,const_12786,call_12789,])
output2 = relay.Tuple([call_12766,call_12768,call_12787,const_12786,call_12790,])
func_12799 = relay.Function([], output)
mod['func_12799'] = func_12799
mod = relay.transform.InferType()(mod)
output = func_12799()
func_12800 = relay.Function([], output)
mutated_mod['func_12800'] = func_12800
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12826 = relay.var("var_12826", dtype = "float32", shape = (10, 1, 4))#candidate|12826|(10, 1, 4)|var|float32
uop_12827 = relay.erf(var_12826.astype('float32')) # shape=(10, 1, 4)
output = uop_12827
output2 = uop_12827
func_12829 = relay.Function([var_12826,], output)
mod['func_12829'] = func_12829
mod = relay.transform.InferType()(mod)
mutated_mod['func_12829'] = func_12829
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12830 = relay.var("var_12830", dtype = "float32", shape = (10, 1, 4))#candidate|12830|(10, 1, 4)|var|float32
func_12829_call = mutated_mod.get_global_var('func_12829')
call_12831 = func_12829_call(var_12830)
output = call_12831
func_12832 = relay.Function([var_12830], output)
mutated_mod['func_12832'] = func_12832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10708_call = mod.get_global_var('func_10708')
func_10710_call = mutated_mod.get_global_var('func_10710')
call_12868 = relay.TupleGetItem(func_10708_call(), 0)
call_12869 = relay.TupleGetItem(func_10710_call(), 0)
output = relay.Tuple([call_12868,])
output2 = relay.Tuple([call_12869,])
func_12886 = relay.Function([], output)
mod['func_12886'] = func_12886
mod = relay.transform.InferType()(mod)
mutated_mod['func_12886'] = func_12886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12886_call = mutated_mod.get_global_var('func_12886')
call_12887 = func_12886_call()
output = call_12887
func_12888 = relay.Function([], output)
mutated_mod['func_12888'] = func_12888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10971_call = mod.get_global_var('func_10971')
func_10973_call = mutated_mod.get_global_var('func_10973')
call_12897 = relay.TupleGetItem(func_10971_call(), 0)
call_12898 = relay.TupleGetItem(func_10973_call(), 0)
func_8895_call = mod.get_global_var('func_8895')
func_8896_call = mutated_mod.get_global_var('func_8896')
call_12904 = func_8895_call()
call_12905 = func_8895_call()
func_11359_call = mod.get_global_var('func_11359')
func_11361_call = mutated_mod.get_global_var('func_11361')
call_12911 = relay.TupleGetItem(func_11359_call(), 0)
call_12912 = relay.TupleGetItem(func_11361_call(), 0)
output = relay.Tuple([call_12897,call_12904,call_12911,])
output2 = relay.Tuple([call_12898,call_12905,call_12912,])
func_12932 = relay.Function([], output)
mod['func_12932'] = func_12932
mod = relay.transform.InferType()(mod)
mutated_mod['func_12932'] = func_12932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12932_call = mutated_mod.get_global_var('func_12932')
call_12933 = func_12932_call()
output = call_12933
func_12934 = relay.Function([], output)
mutated_mod['func_12934'] = func_12934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8627_call = mod.get_global_var('func_8627')
func_8628_call = mutated_mod.get_global_var('func_8628')
call_12938 = func_8627_call()
call_12939 = func_8627_call()
output = relay.Tuple([call_12938,])
output2 = relay.Tuple([call_12939,])
func_12940 = relay.Function([], output)
mod['func_12940'] = func_12940
mod = relay.transform.InferType()(mod)
mutated_mod['func_12940'] = func_12940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12940_call = mutated_mod.get_global_var('func_12940')
call_12941 = func_12940_call()
output = call_12941
func_12942 = relay.Function([], output)
mutated_mod['func_12942'] = func_12942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8171_call = mod.get_global_var('func_8171')
func_8173_call = mutated_mod.get_global_var('func_8173')
call_12958 = relay.TupleGetItem(func_8171_call(), 0)
call_12959 = relay.TupleGetItem(func_8173_call(), 0)
output = relay.Tuple([call_12958,])
output2 = relay.Tuple([call_12959,])
func_12960 = relay.Function([], output)
mod['func_12960'] = func_12960
mod = relay.transform.InferType()(mod)
output = func_12960()
func_12961 = relay.Function([], output)
mutated_mod['func_12961'] = func_12961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11455_call = mod.get_global_var('func_11455')
func_11457_call = mutated_mod.get_global_var('func_11457')
call_12981 = relay.TupleGetItem(func_11455_call(), 0)
call_12982 = relay.TupleGetItem(func_11457_call(), 0)
output = relay.Tuple([call_12981,])
output2 = relay.Tuple([call_12982,])
func_12990 = relay.Function([], output)
mod['func_12990'] = func_12990
mod = relay.transform.InferType()(mod)
output = func_12990()
func_12991 = relay.Function([], output)
mutated_mod['func_12991'] = func_12991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8427_call = mod.get_global_var('func_8427')
func_8429_call = mutated_mod.get_global_var('func_8429')
call_13001 = func_8427_call()
call_13002 = func_8427_call()
func_9900_call = mod.get_global_var('func_9900')
func_9902_call = mutated_mod.get_global_var('func_9902')
call_13032 = func_9900_call()
call_13033 = func_9900_call()
output = relay.Tuple([call_13001,call_13032,])
output2 = relay.Tuple([call_13002,call_13033,])
func_13034 = relay.Function([], output)
mod['func_13034'] = func_13034
mod = relay.transform.InferType()(mod)
output = func_13034()
func_13035 = relay.Function([], output)
mutated_mod['func_13035'] = func_13035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8492_call = mod.get_global_var('func_8492')
func_8493_call = mutated_mod.get_global_var('func_8493')
call_13065 = relay.TupleGetItem(func_8492_call(), 0)
call_13066 = relay.TupleGetItem(func_8493_call(), 0)
func_7357_call = mod.get_global_var('func_7357')
func_7366_call = mutated_mod.get_global_var('func_7366')
var_13087 = relay.var("var_13087", dtype = "bool", shape = (572,))#candidate|13087|(572,)|var|bool
const_13088 = relay.const([8.171239,1.417159,-4.275061,9.474700,3.799682,-8.987493,-9.028455,-6.732478,5.628466,-4.715755,8.661382,-0.843060,-7.435189,-1.429212,6.005354,0.903884,-5.139733,-4.423636,8.615377,-6.839040,5.923982,7.451137,8.111058,-0.106937,9.853544,5.294371,-3.294667,-4.886134,7.637441,7.312473,3.171061,6.818435,7.225948,-2.601027,-3.159883,4.516898,1.083527,0.470756,-3.424767,5.795035,4.268685,8.326897,8.009263,-8.847755,-0.716869,9.697277,-1.891050,5.491186,-1.496207,3.977965,-9.310705,1.604771,2.722947,-5.346032,-4.589469,6.333994,7.191231,-5.461132,4.551935,4.866755,-5.929380,0.964496,-3.683738,-4.372618,-1.517548,6.600981,-5.887788,8.410166,5.324611,1.442748,5.729864,8.011518,3.217119,9.911051,5.813087,-7.234005,9.502733,-8.729724,-0.778763,1.356918,-3.289181,-4.228367,7.209054,-8.384622,8.588494,-4.314954,2.385470,0.437175,6.824618,8.688044,-7.379838,-0.881961,8.681497,3.851283,5.634601,-7.201465,4.708642,-8.206905,-9.673847,3.926951,6.931511,8.366813,-1.864540,0.207501,8.157501,-4.006114,9.273315,-0.234600,3.482826,-7.717836,-9.563863,0.565903,9.936543,-9.690877,-5.328835,-2.185986,1.482048,-7.796421,-0.138167,-4.325150,-7.711679,1.966085,9.064235,-2.401231,1.232309,-1.981695,-9.427718,1.908742,1.041156,9.311854,-4.556735,5.910898,2.492173,1.143144,-6.382643,-2.569707,-5.271255,-6.225425,6.393060,-0.543078,9.609788,-8.515072,-3.286537,-9.841873,2.722104,-4.520070,5.910388,6.333160,3.278559,-9.906832,-0.705585,1.910208,0.747958,1.012792,-9.813192,8.287421,-1.389969,6.547943,-0.058174,-4.265748,-3.087435,4.270605,2.979899,-3.097008,1.847105,-2.016373,6.421428,-8.635397,5.688496,5.578418,9.725083,0.187579,-2.718464,8.943306,-1.110800,-0.700594,-1.076358,-0.216618,9.741458,-3.082053,-2.612247,-6.367330,-7.043682,-1.861145,-3.556247,-1.430149,-5.386042,3.595778,-6.441274,0.471729,7.948263,6.859359,7.134247,8.104697,8.442166,5.138434,-8.582675,4.275953,-1.968885,-5.477505,-8.837999,3.796318,-8.058154,5.731488,6.131744,-1.717858,0.937482,-7.652747,8.516893,1.411220,4.421339,-4.059130,-2.840959,3.616397,6.938778,-8.965992,-8.455944,4.899852,-7.023472,0.875772,4.308688,-9.784169,-6.999554,-9.873992,-6.495821,-6.306364,-8.879032,1.993100,-6.931054,-7.323914,-7.100463,3.225295,-6.334749,-4.778639,-4.252633,-4.514917,6.149043,-9.010736,5.339714,3.002812,-2.267703,3.023793,8.099502,6.754272,7.821035,0.866811,-4.417391,-1.877180,2.621564,-1.999732,2.061942,-8.200674,5.327238,-1.064584,8.230635,4.853748,4.381075,-7.702576,7.887978,-4.013075,5.597693,7.369359,2.293355,-9.872613,-2.674774,-3.502615,8.662952,-6.074015,7.826484,4.766831,-7.482993,-4.145597,-9.766734,-1.188902,-6.059482,-3.783111,0.881930,-6.873395,-2.513377,6.210413,8.667453,-8.009530,-8.909380,7.558831,0.476753,-6.702951,6.673698,3.778077,-2.642611,-5.074265,-3.554835,-3.831517,-5.492796,-8.356988,-3.977155,1.514249,3.314366,-9.951710,-7.792504,0.156979,8.966814,5.818940,-7.531554,-8.984440,7.966768,-7.870316,5.121865,1.194332,2.658854,-0.647122,1.680767,3.964170,8.631194,7.288786,2.923683,7.132478,-4.427659,-2.289927,9.281643,6.738577,6.331302,1.299220,3.549815,-6.852303,-0.581961,-7.194641,-8.676397,2.026436,3.387510,5.471636,2.573941,6.151926,2.590397,1.470237,-9.029342,7.362176,-7.469237,7.883457,5.315825,-4.158809,-1.019935,-3.011646,-5.109403,9.965615,-3.705462,-5.346111,7.206527,0.376189,4.413503,-0.555715,-4.197045,7.327507,-0.001244,-3.647057,-5.327870,9.697386,7.565965,3.953570,9.420435,4.244046], dtype = "float64")#candidate|13088|(360,)|const|float64
const_13089 = relay.const([[-2,-5,7,-3,-9,3,-5,9,-7,4,5,-9,5,-4,10,7,4,-10,-10,-3,1,2,-9,6,4,-3,6,-3,8,5,1,9,-6,10,4,-8,9,3,-2,5,-8,3,2,3,5,-7,4,4,7,-7,-7,-5,4,4,6,-10,-10,6,-8,2,-1,-10,7,4,-7,-4,-3,-1,-7,-10,4,7,10,-8,6,-2,10,-1,-5,2,3,6,-3,2,-2,2,2,-4,5,-3,-3,-10,-6,-4,6,-4,-10,-7,-9,-4],[3,9,-5,10,-4,-5,-9,-3,-3,-5,-1,-10,-1,-5,-7,-1,2,8,2,1,2,-4,10,5,2,-4,10,5,2,2,-6,-10,3,-10,-7,-3,-9,-1,6,-2,-5,-3,-10,-6,8,-2,1,7,-1,10,-9,8,-4,7,-4,-8,7,5,10,10,7,4,-3,3,7,-3,-10,6,-1,-2,4,-7,3,-8,1,-3,-9,8,8,-7,9,-3,4,-1,-2,1,4,7,-8,-10,-3,1,10,6,-3,2,5,-10,-5,-4],[-5,7,3,-7,-10,-1,-2,7,-2,-9,-5,6,8,-9,-7,4,-5,3,4,8,9,-9,2,2,-8,-8,1,3,1,4,4,-10,-6,7,-5,6,-6,6,10,3,-8,-2,-8,10,-8,7,-10,-1,2,-8,4,-2,10,2,5,-7,8,-3,6,-6,-8,6,-10,8,-4,-8,2,-3,-7,2,10,-4,-1,-7,-2,3,5,-10,6,-6,4,-3,5,9,-10,-3,-2,-3,6,10,-2,-10,2,-2,7,1,6,-10,-9,-3],[1,3,7,-6,3,-10,1,-2,9,-3,3,-8,9,10,-8,-1,10,-10,-8,-9,2,-8,9,-8,-5,7,-5,7,-2,4,-9,-8,-6,6,-5,-7,-6,2,6,-6,-8,-8,-7,-9,-1,8,9,-3,-4,-1,5,8,2,7,-7,-8,5,8,-1,2,1,6,-7,6,-7,10,4,1,7,3,-2,-7,-7,2,5,3,-3,-7,-7,4,10,8,-4,-10,-9,-3,6,-2,6,-2,-6,-8,-6,-3,-7,-9,-1,-1,-5,3]], dtype = "int8")#candidate|13089|(4, 100)|const|int8
const_13090 = relay.const(7, dtype = "int32")#candidate|13090|()|const|int32
var_13091 = relay.var("var_13091", dtype = "int32", shape = (300,))#candidate|13091|(300,)|var|int32
var_13092 = relay.var("var_13092", dtype = "float64", shape = (2880,))#candidate|13092|(2880,)|var|float64
call_13086 = relay.TupleGetItem(func_7357_call(relay.reshape(var_13087.astype('bool'), [13, 11, 4]), relay.reshape(const_13088.astype('float64'), [1, 360]), relay.reshape(const_13089.astype('int8'), [4, 100]), relay.reshape(const_13090.astype('int32'), []), relay.reshape(var_13091.astype('int32'), [300, 1]), relay.reshape(var_13092.astype('float64'), [8, 360]), relay.reshape(var_13092.astype('float32'), [8, 360]), ), 7)
call_13093 = relay.TupleGetItem(func_7366_call(relay.reshape(var_13087.astype('bool'), [13, 11, 4]), relay.reshape(const_13088.astype('float64'), [1, 360]), relay.reshape(const_13089.astype('int8'), [4, 100]), relay.reshape(const_13090.astype('int32'), []), relay.reshape(var_13091.astype('int32'), [300, 1]), relay.reshape(var_13092.astype('float64'), [8, 360]), relay.reshape(var_13092.astype('float32'), [8, 360]), ), 7)
output = relay.Tuple([call_13065,call_13086,var_13087,const_13088,const_13089,const_13090,var_13091,var_13092,])
output2 = relay.Tuple([call_13066,call_13093,var_13087,const_13088,const_13089,const_13090,var_13091,var_13092,])
func_13104 = relay.Function([var_13087,var_13091,var_13092,], output)
mod['func_13104'] = func_13104
mod = relay.transform.InferType()(mod)
mutated_mod['func_13104'] = func_13104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13104_call = mutated_mod.get_global_var('func_13104')
var_13106 = relay.var("var_13106", dtype = "bool", shape = (572,))#candidate|13106|(572,)|var|bool
var_13107 = relay.var("var_13107", dtype = "int32", shape = (300,))#candidate|13107|(300,)|var|int32
var_13108 = relay.var("var_13108", dtype = "float64", shape = (2880,))#candidate|13108|(2880,)|var|float64
call_13105 = func_13104_call(var_13106,var_13107,var_13108,)
output = call_13105
func_13109 = relay.Function([var_13106,var_13107,var_13108,], output)
mutated_mod['func_13109'] = func_13109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11393_call = mod.get_global_var('func_11393')
func_11395_call = mutated_mod.get_global_var('func_11395')
call_13139 = relay.TupleGetItem(func_11393_call(), 0)
call_13140 = relay.TupleGetItem(func_11395_call(), 0)
output = relay.Tuple([call_13139,])
output2 = relay.Tuple([call_13140,])
func_13145 = relay.Function([], output)
mod['func_13145'] = func_13145
mod = relay.transform.InferType()(mod)
output = func_13145()
func_13146 = relay.Function([], output)
mutated_mod['func_13146'] = func_13146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12990_call = mod.get_global_var('func_12990')
func_12991_call = mutated_mod.get_global_var('func_12991')
call_13239 = relay.TupleGetItem(func_12990_call(), 0)
call_13240 = relay.TupleGetItem(func_12991_call(), 0)
output = relay.Tuple([call_13239,])
output2 = relay.Tuple([call_13240,])
func_13244 = relay.Function([], output)
mod['func_13244'] = func_13244
mod = relay.transform.InferType()(mod)
output = func_13244()
func_13245 = relay.Function([], output)
mutated_mod['func_13245'] = func_13245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10463_call = mod.get_global_var('func_10463')
func_10465_call = mutated_mod.get_global_var('func_10465')
call_13258 = relay.TupleGetItem(func_10463_call(), 1)
call_13259 = relay.TupleGetItem(func_10465_call(), 1)
uop_13273 = relay.cos(call_13258.astype('float64')) # shape=(3, 16, 4)
uop_13275 = relay.cos(call_13259.astype('float64')) # shape=(3, 16, 4)
output = uop_13273
output2 = uop_13275
func_13278 = relay.Function([], output)
mod['func_13278'] = func_13278
mod = relay.transform.InferType()(mod)
mutated_mod['func_13278'] = func_13278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13278_call = mutated_mod.get_global_var('func_13278')
call_13279 = func_13278_call()
output = call_13279
func_13280 = relay.Function([], output)
mutated_mod['func_13280'] = func_13280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11620_call = mod.get_global_var('func_11620')
func_11621_call = mutated_mod.get_global_var('func_11621')
call_13325 = relay.TupleGetItem(func_11620_call(), 0)
call_13326 = relay.TupleGetItem(func_11621_call(), 0)
func_12523_call = mod.get_global_var('func_12523')
func_12525_call = mutated_mod.get_global_var('func_12525')
var_13346 = relay.var("var_13346", dtype = "float64", shape = (15, 6))#candidate|13346|(15, 6)|var|float64
call_13345 = relay.TupleGetItem(func_12523_call(relay.reshape(var_13346.astype('float64'), [5, 9, 2])), 0)
call_13347 = relay.TupleGetItem(func_12525_call(relay.reshape(var_13346.astype('float64'), [5, 9, 2])), 0)
output = relay.Tuple([call_13325,call_13345,var_13346,])
output2 = relay.Tuple([call_13326,call_13347,var_13346,])
func_13351 = relay.Function([var_13346,], output)
mod['func_13351'] = func_13351
mod = relay.transform.InferType()(mod)
mutated_mod['func_13351'] = func_13351
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13352 = relay.var("var_13352", dtype = "float64", shape = (15, 6))#candidate|13352|(15, 6)|var|float64
func_13351_call = mutated_mod.get_global_var('func_13351')
call_13353 = func_13351_call(var_13352)
output = call_13353
func_13354 = relay.Function([var_13352], output)
mutated_mod['func_13354'] = func_13354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9900_call = mod.get_global_var('func_9900')
func_9902_call = mutated_mod.get_global_var('func_9902')
call_13373 = func_9900_call()
call_13374 = func_9900_call()
uop_13383 = relay.cos(call_13373.astype('float32')) # shape=(1, 9, 2)
uop_13385 = relay.cos(call_13374.astype('float32')) # shape=(1, 9, 2)
output = relay.Tuple([uop_13383,])
output2 = relay.Tuple([uop_13385,])
func_13395 = relay.Function([], output)
mod['func_13395'] = func_13395
mod = relay.transform.InferType()(mod)
output = func_13395()
func_13396 = relay.Function([], output)
mutated_mod['func_13396'] = func_13396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11681_call = mod.get_global_var('func_11681')
func_11683_call = mutated_mod.get_global_var('func_11683')
call_13415 = relay.TupleGetItem(func_11681_call(), 0)
call_13416 = relay.TupleGetItem(func_11683_call(), 0)
func_8548_call = mod.get_global_var('func_8548')
func_8549_call = mutated_mod.get_global_var('func_8549')
call_13430 = relay.TupleGetItem(func_8548_call(), 1)
call_13431 = relay.TupleGetItem(func_8549_call(), 1)
func_9084_call = mod.get_global_var('func_9084')
func_9086_call = mutated_mod.get_global_var('func_9086')
call_13432 = relay.TupleGetItem(func_9084_call(), 0)
call_13433 = relay.TupleGetItem(func_9086_call(), 0)
func_10551_call = mod.get_global_var('func_10551')
func_10553_call = mutated_mod.get_global_var('func_10553')
var_13437 = relay.var("var_13437", dtype = "bool", shape = ())#candidate|13437|()|var|bool
call_13436 = relay.TupleGetItem(func_10551_call(relay.reshape(var_13437.astype('bool'), [])), 0)
call_13438 = relay.TupleGetItem(func_10553_call(relay.reshape(var_13437.astype('bool'), [])), 0)
output = relay.Tuple([call_13415,call_13430,call_13432,call_13436,var_13437,])
output2 = relay.Tuple([call_13416,call_13431,call_13433,call_13438,var_13437,])
func_13451 = relay.Function([var_13437,], output)
mod['func_13451'] = func_13451
mod = relay.transform.InferType()(mod)
var_13452 = relay.var("var_13452", dtype = "bool", shape = ())#candidate|13452|()|var|bool
output = func_13451(var_13452)
func_13453 = relay.Function([var_13452], output)
mutated_mod['func_13453'] = func_13453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11767_call = mod.get_global_var('func_11767')
func_11768_call = mutated_mod.get_global_var('func_11768')
call_13476 = relay.TupleGetItem(func_11767_call(), 0)
call_13477 = relay.TupleGetItem(func_11768_call(), 0)
func_8171_call = mod.get_global_var('func_8171')
func_8173_call = mutated_mod.get_global_var('func_8173')
call_13484 = relay.TupleGetItem(func_8171_call(), 0)
call_13485 = relay.TupleGetItem(func_8173_call(), 0)
func_10907_call = mod.get_global_var('func_10907')
func_10909_call = mutated_mod.get_global_var('func_10909')
call_13489 = relay.TupleGetItem(func_10907_call(), 0)
call_13490 = relay.TupleGetItem(func_10909_call(), 0)
output = relay.Tuple([call_13476,call_13484,call_13489,])
output2 = relay.Tuple([call_13477,call_13485,call_13490,])
func_13494 = relay.Function([], output)
mod['func_13494'] = func_13494
mod = relay.transform.InferType()(mod)
mutated_mod['func_13494'] = func_13494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13494_call = mutated_mod.get_global_var('func_13494')
call_13495 = func_13494_call()
output = call_13495
func_13496 = relay.Function([], output)
mutated_mod['func_13496'] = func_13496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10463_call = mod.get_global_var('func_10463')
func_10465_call = mutated_mod.get_global_var('func_10465')
call_13520 = relay.TupleGetItem(func_10463_call(), 1)
call_13521 = relay.TupleGetItem(func_10465_call(), 1)
output = call_13520
output2 = call_13521
func_13528 = relay.Function([], output)
mod['func_13528'] = func_13528
mod = relay.transform.InferType()(mod)
output = func_13528()
func_13529 = relay.Function([], output)
mutated_mod['func_13529'] = func_13529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7067_call = mod.get_global_var('func_7067')
func_7068_call = mutated_mod.get_global_var('func_7068')
call_13530 = relay.TupleGetItem(func_7067_call(), 1)
call_13531 = relay.TupleGetItem(func_7068_call(), 1)
func_11359_call = mod.get_global_var('func_11359')
func_11361_call = mutated_mod.get_global_var('func_11361')
call_13538 = relay.TupleGetItem(func_11359_call(), 2)
call_13539 = relay.TupleGetItem(func_11361_call(), 2)
output = relay.Tuple([call_13530,call_13538,])
output2 = relay.Tuple([call_13531,call_13539,])
func_13590 = relay.Function([], output)
mod['func_13590'] = func_13590
mod = relay.transform.InferType()(mod)
output = func_13590()
func_13591 = relay.Function([], output)
mutated_mod['func_13591'] = func_13591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7118_call = mod.get_global_var('func_7118')
func_7119_call = mutated_mod.get_global_var('func_7119')
call_13607 = relay.TupleGetItem(func_7118_call(), 0)
call_13608 = relay.TupleGetItem(func_7119_call(), 0)
func_2875_call = mod.get_global_var('func_2875')
func_2880_call = mutated_mod.get_global_var('func_2880')
var_13612 = relay.var("var_13612", dtype = "float32", shape = (5, 1))#candidate|13612|(5, 1)|var|float32
const_13613 = relay.const([-8,2,4,10,-10,-10,-9,7,1,1,-5,1,-9,-10,-5,-4,10,2,-8,9,-1,8,-3,-6,-6,6,9,7,-4,-6,10,4,8,3,-8,3,-5,-7,-5,-1,-9,6,-6,7,-10,1,-3,-9,10,-8,-6,6,-1,10,-6,-8,-9,5,5,-7,3,6,-4,-8,9,-1,-6,-6,1,-2,6,4,-2,1,10,-6,-8,10,9,4,-5,-3,-5,-7,-7,-3,-9,-10,-7,8,-1,-10,-9,8,-10,6,-1,-8,9,3,6,-9,-5,4,2,-1,8,-9,-4,5,-3,-1,9,1,7,-4,-9,6,1,-8,-5,5,10,2,-5,10,-5,2,-10,-4,8,10,10,-3,-7,6,-10,7,7,6,4,7,6,-5,-4,-3,-6,10,-8,-7,-4,9,5,5,-3,1,-8,-9,8,9,5,-4,7,-7,7,-2,-8,-6,-4,5,4,7,4,6,-1,6,9,9,6,-10,1,-3,-2,-3,1,-6,-2,7,-8,-8,10,-5,5,-4,9,3,8,10,-6,6,9,-2,-4,6,6,1,9,-4,1,7,-3,-9,-8,-1,-9,4,9,-10,-9,-5,2,10,1,10,-3,1,9,9,8,-4,6,-7,-5,8,-5,8,8,-1,-1,2,-9,-2,-4,6,10,10,-9,3,-6,-10,5,-8,-6,-5,-1,-3,-1,-9,-7,-6,4,-4,-3,-8,9,9,8,8,-8,2,-9,10,-1,4,3,-8,-6,-1,-1,-9,9,-6,-7,2,7,-5,-1,6,-5,2,8,4,-2,4,-5,6,3,2,6,5,8,-10,8,-2,4,-8,6,8,-6,3,-7,9,1,-10,-5,-10,9,-5,6,8,3,-4,-8,9,9,9,-5,8,10,-4,-4,-10,-4,10,4,2,1,-8,-2,-5,1,7,-2,1,-2,7,-9,1,-3,7,-6,-5,-7,-10,-10,-2,-10,-8,-5,-2,-5,-4,-7,-2,-5,-10,-8,-2,7,-5,-6,1,-7,8,-1,-8,-3,-3,-9,-3,-5,-7,-7,9,-10,5,3,-4,5,2,-6,2,-3,2,-3,-6,7,1,-2,-1], dtype = "int8")#candidate|13613|(400,)|const|int8
const_13614 = relay.const([-7.212621,3.492089,-1.829638,0.836231,-4.611536,-5.351544,-5.521254,-8.931234,-1.702439,7.605098,6.281368,-8.140347,7.622210,9.791733,7.880666,-3.125451,5.943493,-6.865994,1.104903,6.439420,1.117838,9.543453,5.443079,4.845105,9.311010,-0.636026,-1.938756,-7.859570,0.596382,-6.608507,-0.110729,6.975938,7.734702,4.984270,4.480078,-2.041030,-4.269808,-6.766297,1.893750,-2.638932,3.355548,1.459396,5.971479,8.756465,5.928854,8.018874,6.151459,-0.670356,-9.507664,9.385368,-8.046686,-9.255508,-0.970560,-3.048236,6.126599,-1.202548,3.498673,-0.915194,9.233488,-5.539857,-8.608954,3.716549,-6.565051,-8.910640,2.788180,-3.790562,6.629563,1.691698,-5.171224,-2.532511,-5.242228,-4.619400,-2.014660,-3.075713,-6.404481,7.189442,-9.169194,-0.602846,-3.762900,-2.254357,3.632773,6.659710,7.967302,-5.877960,-5.506865,9.580560,7.815304,-4.952087,7.429565,-3.504082,8.251317,-9.044663,-7.843641,-0.081099,3.678326,-2.249557,-0.050540,1.536050,-9.779588,1.835726,-9.509927,0.661619,-1.111815,-7.987104,-9.856899,4.819302,-5.707039,-1.838229,4.499571,0.067569,0.557543,3.684187,0.886080,1.161716,-6.099291,-9.058449,-0.980250,-0.952959,6.112779,-5.634283,5.130724,-1.194441,7.880301,-1.463813,9.396300,9.376554,-1.889724,-4.779308,1.585918,3.768492,-9.514204,0.064967,-4.818118,5.930764,-9.455249,1.896857,-1.311854,5.773135,-1.559711,-9.382798,8.677070,-2.000001,-2.498733,0.454549,4.877239,3.733478,-5.093875,-7.125948,-7.260274,-2.673760,9.024374,7.792854,7.673735,0.340356,-1.264546,-0.116382,5.028356,1.225570,9.291738,8.183054,-1.710979,8.259176,1.353064,6.339543,7.660970,-1.125062,6.283290,-4.561336,-8.061607,3.544036,4.425702,-7.727777,-0.452824,-0.408365,-1.573077,-7.429817,-4.925685,4.493285,2.141789,-2.307652,9.422895,6.653222,-2.877105,7.442669,0.413721,8.418548,-2.273797,7.922077,-3.877484,3.174873,-9.296665,3.556268,9.771858,-7.932291,9.890031,8.307760,-4.028212,4.583934,2.108358,8.945370,0.483240,3.964953,5.024055,6.566620,2.981885,-3.422474,-0.387219,-3.180408,1.220649,7.192719,9.883699,6.041677,8.426607,-3.222701,5.643280,-5.764546,8.089111,0.719519,-9.760559,-4.560495,1.858059,7.528508,-7.074355,8.927626,6.851989,-6.112819,4.527483,-8.270326,-5.239510,7.778036,-7.975286,3.246107,-6.181305,-7.410779,4.002264,-5.982254,-4.529038,-7.141788,7.897962,-7.858559,-1.183661,-8.408209,-6.458304,6.273471,2.090603,-8.514401,-5.028167,1.766351,-5.179431,8.615189,-0.001833,-9.324930,-2.778264,8.857591,-0.646337,-8.740423,-9.206337,8.791815,8.230117,-4.186987,6.435835,-6.676602,-4.251633,-7.838428,-8.453852,-9.198756,4.370944,0.256635,3.915952,-9.067895,-7.474553,0.386462,1.839901,7.959893,0.064820,6.816144,-3.296605,-2.909929,-3.705483,-3.310196,-6.749496,9.713639,5.682660,1.888177,-1.855454,6.275413,-1.182986,0.608492,1.230755,-9.526220,-7.931183,4.043486,-8.415767,9.189861,8.706615,7.194393,-6.290709,5.882443,1.862502,5.674383,-0.305955,-5.535841,8.132030,-7.235298,-3.569000,5.423243,2.658946,4.863553,-5.486355,-8.399548,-9.557830,1.508616,-5.624481,2.896519,-3.725716,4.314264,0.314155,9.600290,-0.639215,9.104100,0.687509,6.370654,9.365453,-4.399795,-1.904125,7.750679,-6.079785,5.736426,-0.881058,-5.922113,5.332918,9.669765,4.187225,7.735157,6.280419,-0.996433,8.895206,9.691070,-9.553048,-3.745265,-4.343538,-7.406798,2.009703,2.783412,-2.603251,-2.675176,-7.756675,-9.470398,-5.562407,8.118574,-8.710157,-5.016256,9.540000,-2.797100,2.102785,-7.388390,5.152070,-0.893718,8.280306,-5.445543,6.544779,0.223876,-3.961232,9.709496,-5.684482,-8.185132,-6.889758,-4.383280,-1.223977,-5.886823,-5.105619,8.267139,5.283928,-5.666327,-4.720599,-6.603060,3.058273,7.258624,8.214227,-7.833084,7.079593,-0.455763,-9.771030,8.502868,8.104508,-6.557167,6.442647,4.384536,-9.366346,6.477293,-3.864733,-3.723081,8.393240,-1.242304,7.482491,-1.822324,6.394316,-2.310000,-0.775616,8.931782,0.161615,8.088563,1.960593,7.141118,-5.864922,-6.699382,-9.789550,-3.645207,-1.271279,-2.691245,1.561265,-1.946945,1.682400,-0.560519,7.825767,-4.493816,-1.591309,1.593246,-7.641336,5.565677,8.949803,-0.703316,-2.921202,4.003831,9.209030,-7.051535,8.315227,1.368663,-8.360131,-2.987685,0.623555,-1.661301,-6.627827,-8.805773,7.066118,6.457860,4.265147,-6.692281,-8.637749,2.899976,-6.982074,-5.109331,-2.524009,-8.792316,-7.632906,-1.506473,1.881382,1.946275,-5.958841,4.377115,8.983819,-2.628966,-7.750523,-0.336246,3.752961,-5.328728,-7.129070,0.675656,-0.795634,1.503430,-9.825310,4.363198], dtype = "float32")#candidate|13614|(462,)|const|float32
call_13611 = relay.TupleGetItem(func_2875_call(relay.reshape(var_13612.astype('float32'), [1, 1, 5]), relay.reshape(const_13613.astype('int8'), [400,]), relay.reshape(const_13614.astype('float32'), [462,]), ), 0)
call_13615 = relay.TupleGetItem(func_2880_call(relay.reshape(var_13612.astype('float32'), [1, 1, 5]), relay.reshape(const_13613.astype('int8'), [400,]), relay.reshape(const_13614.astype('float32'), [462,]), ), 0)
func_12291_call = mod.get_global_var('func_12291')
func_12294_call = mutated_mod.get_global_var('func_12294')
const_13632 = relay.const([2,-4,10,-3,-7,6,2,-3,7,-2,-9,-6,-10,7,2,7,-3,-8,6,8,8,3], dtype = "uint16")#candidate|13632|(22,)|const|uint16
call_13631 = relay.TupleGetItem(func_12291_call(relay.reshape(const_13632.astype('uint16'), [2, 1, 11]), relay.reshape(const_13632.astype('uint16'), [2, 1, 11]), ), 1)
call_13633 = relay.TupleGetItem(func_12294_call(relay.reshape(const_13632.astype('uint16'), [2, 1, 11]), relay.reshape(const_13632.astype('uint16'), [2, 1, 11]), ), 1)
bop_13677 = relay.multiply(const_13614.astype('uint64'), var_13612.astype('uint64')) # shape=(5, 462)
bop_13703 = relay.power(call_13631.astype('float32'), relay.reshape(const_13632.astype('float32'), relay.shape_of(call_13631))) # shape=(2, 1, 11)
bop_13706 = relay.power(call_13633.astype('float32'), relay.reshape(const_13632.astype('float32'), relay.shape_of(call_13633))) # shape=(2, 1, 11)
func_13034_call = mod.get_global_var('func_13034')
func_13035_call = mutated_mod.get_global_var('func_13035')
call_13711 = relay.TupleGetItem(func_13034_call(), 1)
call_13712 = relay.TupleGetItem(func_13035_call(), 1)
bop_13727 = relay.minimum(bop_13677.astype('uint64'), const_13614.astype('uint64')) # shape=(5, 462)
func_11393_call = mod.get_global_var('func_11393')
func_11395_call = mutated_mod.get_global_var('func_11395')
call_13730 = relay.TupleGetItem(func_11393_call(), 0)
call_13731 = relay.TupleGetItem(func_11395_call(), 0)
func_10089_call = mod.get_global_var('func_10089')
func_10090_call = mutated_mod.get_global_var('func_10090')
call_13737 = func_10089_call()
call_13738 = func_10089_call()
func_13351_call = mod.get_global_var('func_13351')
func_13354_call = mutated_mod.get_global_var('func_13354')
var_13740 = relay.var("var_13740", dtype = "float64", shape = (3, 30))#candidate|13740|(3, 30)|var|float64
call_13739 = relay.TupleGetItem(func_13351_call(relay.reshape(var_13740.astype('float64'), [15, 6])), 2)
call_13741 = relay.TupleGetItem(func_13354_call(relay.reshape(var_13740.astype('float64'), [15, 6])), 2)
output = relay.Tuple([call_13607,call_13611,const_13613,bop_13703,call_13711,bop_13727,call_13730,call_13737,call_13739,var_13740,])
output2 = relay.Tuple([call_13608,call_13615,const_13613,bop_13706,call_13712,bop_13727,call_13731,call_13738,call_13741,var_13740,])
func_13746 = relay.Function([var_13612,var_13740,], output)
mod['func_13746'] = func_13746
mod = relay.transform.InferType()(mod)
mutated_mod['func_13746'] = func_13746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13746_call = mutated_mod.get_global_var('func_13746')
var_13748 = relay.var("var_13748", dtype = "float32", shape = (5, 1))#candidate|13748|(5, 1)|var|float32
var_13749 = relay.var("var_13749", dtype = "float64", shape = (3, 30))#candidate|13749|(3, 30)|var|float64
call_13747 = func_13746_call(var_13748,var_13749,)
output = call_13747
func_13750 = relay.Function([var_13748,var_13749,], output)
mutated_mod['func_13750'] = func_13750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9308_call = mod.get_global_var('func_9308')
func_9309_call = mutated_mod.get_global_var('func_9309')
call_13760 = func_9308_call()
call_13761 = func_9308_call()
output = relay.Tuple([call_13760,])
output2 = relay.Tuple([call_13761,])
func_13768 = relay.Function([], output)
mod['func_13768'] = func_13768
mod = relay.transform.InferType()(mod)
output = func_13768()
func_13769 = relay.Function([], output)
mutated_mod['func_13769'] = func_13769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10089_call = mod.get_global_var('func_10089')
func_10090_call = mutated_mod.get_global_var('func_10090')
call_13797 = func_10089_call()
call_13798 = func_10089_call()
func_10041_call = mod.get_global_var('func_10041')
func_10047_call = mutated_mod.get_global_var('func_10047')
const_13819 = relay.const([-6,7,-8,1,1,4,8,9,6,-9,-6,-10,-1,10,-8,-7,1,4,-2,-5,-4,10,2,3,-5,-8,-5,9,-3,-5,5,-9,-5,-10,-7,9,6,1,-9,8,9,4,6,-9,-4,2,-4,8,4,-8,2,2,7,8,10,-1,-9,10,-8,-4,1,2,9,-9,-9,-3,4,-1,-1,-6,-2,-9,-2,8,-9,-2,10,-8,-5,1,-3,5,2,-6,-4,5,1,-6,-2,-3,-9,-3,-9,10,-7,-8,-7,-8,8,3,10,7,-9,-4,-9,4,-2,-9,-8,-4,1,-9,-4,9,-3,-5,8,6,-5,2,7,-2,-5,-1,3,1,-9,2,7,7,-4,5,-4,-3,9,-3,-3,9,-9,2,8,-3,4,-2,9,-3,4,6,6,7,5,4,-6,-8,3,-6,-5,-8,8,-2,-1,-1,10,3,7,3,-9,-1,-10,-1,-1,4,7,7,-1,-4,3,-5,3,10,7,3,10,2,-5,1,-1,-3,6,-6,10,-7,-5,7,2,9,1,-5,8,-9,2,2,-4,4,5,-6,9,-10,-8,4,4,-9,-5,-4,-6,7,-4,1,-4,-7,-6,7,-6,2,2,6,-7,-1,-3,-7,-9,-5,5,-10,-5,-1,-9,8,3,-1,-6,-1,4,-7,-6,-6,-1,7,-8,-7,5,4,4,1,-2,2,-1,-2,6,4,4,-6,-10,10,-1,3,-3,-2,-8,4,-5,-9,1,3,-9,-9,6,7,-2,6,-2,-1,-3,-3,4,-3,6,-9,-1,6,1,4,-5,-3,-8,10,5,6,-4,3,6,9,7,-1,-10,10,-6,-9,5,-6,1,2,7,8,-7,-9,6,-5,8,3,6,-1,8,-3,-4,-6,5,2,8,-5,-8,5,4,7,9,2,-3,-8,-5,-6,10,-3,-3,-10,7,-3,-2,9,2,2,7,-7,-6,-3,-7,-9,4,3,9,6,1,-10,-10,10,8,3,5,6,-6,4,8,2,7,9,1,3,7,-6,4,-10,8,-8,5,8,-10,7,-8,-10,-6,-3,4,-2,9,9,4,6,3,8,-7,-9], dtype = "int8")#candidate|13819|(400,)|const|int8
const_13820 = relay.const([-5,-7,-1,5,4,10,-10,4,4,9,3,-5,9,-5,7,6,-10,8,-10,5,-4,-9,-4,6,-2,-8,-6,-4,-5,5,7,-5,-4,8,7,7,-8,6,1,2,8,8,4,-8,3,8,-5,-6,-7,-3,10,6,8,2,5,-3,-3,-8,5,4,1,9,-7,5,9,-10,9,7,-9,9,2,-10,4,-1,-4,-6,-1,9,10,-3,3,10,-9,-3,5,-6,-5,3,2,8,-3,1,9,-1,5,10,7,-1,-6,-7,-6,9,9,9,-5,9,3,-1,9,3,-6,-1,-2,1,7,-8,-3,4,-8,7,-2,-3,-6,7,-4,1,-3,5,5,3,6,-6,-10,-4,3,-2,-8,8,-7,1,-5,-5,5,4,-6,5,-8,-2,1,-7,-7,-9,-3,-1,2,-4,-6,-5,-9,-4,-4,8,10,-2,-7,-3,-7,-1,9,-1,-6,10,-3,7,-2,8,10,1,9,-8,2,1,6,-8,-4,8,3,3,10,10,1,-9,-8,-10,4,1,1,-5,-2,4,9,7,7,-10,2,-1,7,-5,-2,2,-4,4,-5,-4,10,-4,-7,5,-2,3,2,-10,-5,6,1,5,-10,-1,-8,5,-3,8,-1,8,-7,-9,6,-10,4,10,5,-1,6,2,-8,-1,6,-5,-4,2,5,-10,1,-3,5,10,-1,-7,-2,-1,5,-3,5,10,10,-9,-3,5,-9,9,-2,-6,-10,1,3,4,8,-1,-3,10,-4,8,10,-3,2,4,1,-8,-4,-4,-5,-5,6,-5,8,4,-6,1,-6,6,-6,-1,-10,-1,1,9,6,8,1,-2,-1,-3,3,-7,-10,-8,-1,5,-9,8,-4,6,3,1,-9,5,3,1,3,4,8,10,-10,-5,-3,-1,-1,6,-2,8,-4,-3,10,-3,-1,6,9,-3,3,2,-10,-3,-1,-5,-8,4,7,-8,-1,-9,10,-4,-3,9,-4,2,-5,6,-5,-7,-3,6,-8,6,5,-4,3,3,-4,2,5,-3,-10,-6,-8,-8,6,3,-8,3,-4,-10,4,3,-8,-5,8,5,7,-2,6,7,4,6,-9,-7,6,2,-3,-10,-1,-5,-5,6,4,6,-8,2,5,5,-8,8,2,-6,6,-5,10,-7,-10,6,1,-6,7,2,-7,-7,-9,-1,-7,-3,2,2,-8,9,-2,-4,7,3,-9,7,9,-2,-8,-9,-9,-10,2,5,2,10,6,-8,-3,8,-3,-1,-8,-3,6,-1,-6,-6,-4,-10,4,10,-3,5,-9,-9,8,5,3,-10,9,3,-4,-6,1,-7,-8,-5,5,-7,2,7,8,-4,7,9,9,3,-3,2,-7,-9,5,-5,3,-7,10,5,-5,8,-4,9,-8,-7,-3,5,9,4,7,6,-3,-4,-8,-10,7,4,6,-7,4,-5,2,-7,-3,6,-2,7,7,10,-10,8,-10,-1,6,3,1,-8,-10,-5,-8,3,5,-9,3,10,10,3,10,8,-3,7,1,-8,-10,5,3,-2,-10,-1,-10,8,-8,-2,6,-6,1,4,9,-4,-6,9,-7,-8,-3,9,9,-5,-8,-7,7,5,5,1,-3,2,-3,9,-5,-4,7,4,-1,-4,6,-5,-5,2,-2,-5,-9,6,-10,-2,3,7,-1,7,2,1,3,10,6,9,4,-7,-2,4,8,-9,4,-9,9,-5,7,8,1,1,9,-7,5,7,-7,-9,9,-3,6,-5,10,-5,-5,-9,10,-4,-10,-5,7,2,2,-6,-1,-1,-3,-1,8,1,8,10,10,8,-6,-6,-2,-6,2,-7,-1,10,-7,-8,-7,-8,9,-3,-3,10,4,4,-6,2,2,-1,-10,-8,1,1,5,3,7,-2,8,4,9,8,8,-3,1,-3,4,7,-5,3,8,-3,-1,9,-6,1,-1,-1,3,7,-8,5,10,-7,-10,7,6,7,5,-9,7,8,-3,6,3,-7,2,4,6,8,-4,8,-7,7,8,-4,-8,-4,-1,4,-2,6,-7,-9,-6,10,4,-7,-10,-2,2,5,8,10,10,3,7,9,4,6,4,7,2,8,10,-2,8,2,-7,-7,-8,-10,-2,10,4,5,2,6,9,5,6,4,5,3,-10,-10,3,-5,10,2,-1,-3,-10,-6,5,-10], dtype = "uint8")#candidate|13820|(810,)|const|uint8
const_13821 = relay.const([-9.560249,0.492343,-8.171033,-7.886042,5.410050,5.584273,4.385482,-8.781776,-4.568632,2.800575,-2.004945,6.513300,-1.762326,2.697526,0.924217,0.428540,7.797376,7.667063,-2.331418,9.933908,5.139983,9.193221,7.871632,-6.912965,2.006689,6.954931,-2.056831,-3.111359,-5.502679,-5.383552,7.210691,2.224697,-7.298332,-9.059049,-5.698185,-3.105994,-4.946468,2.706750,4.975097,-4.124352,4.668363,-6.429898,-8.283696,7.409546,-6.834309,-7.057713,1.637831,-0.647005,-0.158025,8.707864,1.191410,-0.615405,9.871644,3.310117,-2.538990,8.391683,2.446422,4.704102,6.665038,-1.539312,3.561676,6.082745,-6.076365,-8.804813,-4.831651,8.225931,-8.874652,4.329051,5.293607,-8.209353,-1.881386,-3.106680,-1.533482,0.869818,-0.843116,3.718733,-8.728445,-7.395622,6.654497,-8.343333,-9.695920,6.837081,1.375222,3.143008,7.327866,-8.404370,9.470445,2.318441,7.081881,2.788277,-7.833807,5.725092,0.732615,6.525395,-3.503076,-0.561134,2.088728,4.784672,9.376608,-6.183015,2.600756,-5.827333,0.266362,-0.879812,7.403037,-5.810219,-7.926782,-4.470285,1.022723,-1.925735,0.455828,9.072691,-2.771577,-0.322773,7.309646,-1.102724,0.549353,0.996543,-3.439229,2.302071,-4.670673,6.327553,6.699933,-5.783771,5.098351,7.949330,-8.507890,-7.847204,7.428976,-7.764575,7.414594,6.097468,9.729631,6.742348,-7.146287,6.873258,-9.823863,-1.194873,1.094299,-1.611455,4.961243,5.371064,-0.890257,2.645913,-3.979290,-9.714632,-6.555570,4.897878,5.804138,-9.575039,3.189429,-6.953227,-3.751070,-2.759674,1.040757,9.687739,-5.001433,-8.659258,-2.084555,-4.687815,4.378820,-6.447602,7.423621,-6.070610,-4.316660,-6.693354,-2.545724,7.100848,6.804770,-3.504047,-2.714195,-9.729450,9.083820,-1.609669,-1.954920,-9.706751,2.309068,9.690838,-4.913377,6.477206,-8.744593,1.197339,-9.143380,-5.890966,-2.163893,8.041076,-8.509468,6.596982,-2.110329,9.725514,-6.146064,8.420642,-3.211128,-4.291732,-0.357083,4.785370,-0.343035,2.753981,1.996960,-8.513048,7.077146,-4.085262,8.882062,1.092861,5.385734,-9.413929,-3.194384,-6.174231,6.399037,-4.299989,-3.948181,-6.233244,-4.565860,-5.721971,8.384803,2.256090,-4.103890,-8.584779,7.614772,7.050399,-3.791758,-9.940880,2.022547,6.925992,-4.992727,-5.223488,2.750943,1.286430,5.945259,0.481643,-9.250865,8.400570,3.576501,3.901774,9.011525,3.671250,-4.118037,-3.368805,-7.707595,-0.148442,8.876722,-0.846463,-6.215337,-1.647107,3.665208,-1.451162,-0.914061,-7.017985,-2.899499,-7.925589,-0.935265,3.733758,-9.993223,1.597655,-7.859910,7.162682,-3.688157,-8.052089,6.632043,-7.763657,6.653693,-6.259925,-8.340273,7.769636,-4.775229,-4.732313,5.500830,-6.152349,-8.189211,5.190267,9.053964,-4.912351,-8.682519,-3.369664,-6.927626,-9.631753,-5.260638,8.153528,9.046500,9.769915,5.000416,-1.632672,2.419052,-0.160198,-5.234553,-5.869797,-4.970677,-3.804051,-5.691259,-0.792757,2.446064,-1.740963,5.103882,6.903652,-3.518425,5.696940,-0.503064,-0.686932,-6.621400,0.537833,-2.159856,-9.644012,6.691658,3.268150,-1.819722,-5.672695,-8.086056,4.992725,-1.589688,-6.663493,5.414314,-2.249546,-3.754948,0.826715,6.645712,4.801725,0.132174,-2.056860,-0.909185,-0.154188,8.274520,1.484360,6.158562,-7.384540,0.008919,-9.107386,-8.742614,-2.228271,1.356432,0.100037,8.564614,4.512720,-6.354135,1.310506,6.970250,8.307709,-3.417505,0.494523,1.690902,4.606081,-4.204380,6.696167,9.483982,6.082009,-3.339786,6.474733,-5.775464,-5.976043,0.333268,7.796642,2.339951,7.224142,3.106442,5.195415,-1.850234,6.927128,-0.070435,3.963024,2.483478,-8.712851,2.324612,9.162953,-5.463252,8.506666,6.465604,0.827889,2.004687,-0.987671,0.817002,-6.636250,-2.617013,-6.891793,-3.534520,-3.574604,8.099717,5.938571,7.772710,-8.519278,-4.575737,8.171386,-6.514817,-5.814186,0.170783,3.475584,-9.277790,5.556509,8.544782,5.245997,2.854987,7.759698,5.659764,-8.539930,5.650180,-4.890376,-9.964430,8.426713,-7.944245,-5.982096,-8.087728,-3.495553,2.222685,-8.615832,-3.176261,7.044346,8.770408,-9.989982,7.471058,7.428947,1.946289,7.474523,6.169385,-1.622774,-3.562589,-3.832729,-4.789820,-2.458172,-3.227810,6.645160,-1.462032,-3.568926,5.628584,-6.502187,8.322198,-3.610630,-1.421150,-1.223487,-8.905185,2.432855,-0.813632,-5.284561,8.920069,-7.555902,1.015819,-7.935847,-8.938807,1.721515,6.428919,3.647771,-4.244123,4.313567,0.754297,-9.861977,-6.699695,-7.745456,6.517681,-0.017934,3.134352,-9.126532,-6.974896,1.096754,-9.619320,-3.048142,-9.072527,-7.767687,5.241442,8.181279,-0.212178,5.932467,-7.508421,5.986835,-8.861960,-2.603133,-3.491600,-5.258565,4.971644,-5.588623,-3.776661,0.209918,-3.977525,6.858567,6.695380,-3.258207,9.910621,-9.513872,0.094632,9.272365,6.136665,-1.151458,5.542573,-6.516457,-2.465634,-0.442169,-3.165406,1.287494,7.592214,-8.674004,-1.371991,-3.231366,-9.337442,7.771949,-1.410116,6.294897,-9.707073,-1.383425,-9.761235,-8.842473,6.920581,-5.921261,-9.404291,-8.162076,-9.285283,-8.393367,6.974200,-5.779461,0.171622,7.986795,2.106217,-7.963566,-8.984198,4.948172,6.578327,9.835550,-2.243011,-7.004548,-1.745865,-0.305040,-7.155710,5.719105,-0.881747,5.200408,7.885272,1.630665,-1.992003,-1.845622,-6.398622,7.356929,2.145909,-8.777779,-7.755272,-2.641237,5.117298,-2.690924,8.838540,6.688892,3.789561,9.961954,-5.518091,3.192912,-1.577908,2.198313,9.256370,1.423276,-8.990750,-1.533921,-3.182694,9.478224,-9.275695,6.718335,2.448632,6.835997,-1.893118,3.533593,8.735855,2.017096,-2.519813,4.247793,8.528424,-2.825742,-4.346450,8.633416,3.941193,9.715169,-1.648595,7.064239,4.974873,-0.377534,7.798616,-3.996066,6.345674,1.990074,5.592916,5.912359,9.184209,-9.528891,2.763290,-6.770200,-4.439640,-5.737243,4.367055,-5.212589,-9.516347,-8.545473,-8.376407,-6.569645,-7.620805,4.993101,-4.965875,-3.936055,-3.847213,-5.961863,-5.838567,-2.281295,-9.550503,7.703620,-7.170139,-2.961779,4.941950,-8.977103,-2.622676,6.953554,-0.787466,-2.107202,1.707617,-4.230124,4.029689,8.648963,-2.224566,-3.350454,-8.468901,-6.888885,8.186383,4.229603,1.487754,-8.069048,8.541573,-5.132098,-6.622006,-3.290777,8.956999,3.646383,5.420456,2.399538,-5.735416,-6.861357,2.462867,9.380672,-1.219786,2.292658,-8.278989,9.799421,7.167909,-6.396572,-9.526184,-6.879517,2.544366,-5.794769,-7.550019,-4.986252,6.696897,-4.657637,4.680250,8.973993,-8.326100,1.237572,-3.887585,-0.155489,-7.935503,9.536580,-3.701955,1.122092,7.580562,-3.082200,8.888831,-6.035962,-2.324718,6.074666,-9.010481,7.027031,-3.360275,0.603002,3.355561,-2.000012,-8.746481,-2.970876,5.233810,7.935401,1.389197,1.721643,-1.844265,3.632625,-2.320663,2.361073,6.977963,2.723155,8.475644,-1.477832,2.819091,5.820295,-6.507179,-8.708312,4.887095,-8.737517,1.477698,6.493060,4.214156,-7.161049,6.704483,-2.156691,-8.648403,-3.002137,-1.485687,-7.521793,-4.943872,-0.399545,0.674335,-2.032053,-3.519305,6.486246,-8.108211,3.255490,1.567500,6.690472,8.585091,2.181953,-0.410671,-8.977090,-4.396866,-9.619549,-2.940380,8.749247,2.976879,-6.692808,-6.302619,2.715716,-6.121919,-7.798843,7.644700,-8.263757,3.814143,-1.805912,-9.771549,5.819293,-8.790640,1.489717,-7.553082,-6.533242,-5.804463,9.030334,7.794704,-9.462854,9.255086,5.730741,-0.897483,-2.556393,-7.542244,7.624676,1.789253,0.360486,-3.907276,-3.363646,-9.074467,-6.194240,4.168537,4.874072,2.006315,-7.949847,4.669473,5.287042,6.101300,8.449085,-0.936581,-3.056036,4.831617,2.824558,-4.809135,-1.054986,4.595003,-5.029570,-4.599484,3.381939,2.065082,1.810221,1.421661,-8.481592,-6.711928,-4.307527,1.022699,-7.123348,6.005074,-6.049305,8.918423,-9.089696,-2.463318,4.223488,-8.064290,-5.674351,-8.841708,-5.027957,-3.278904,-8.479795,5.781201,8.559129,-1.166308,9.139531,-4.798136,4.939559,4.936388,-3.891969,-4.417270,-1.007651,-0.259776,-9.286410,-8.597983,-8.867140,-5.352875,0.281315,-4.831938,-0.928640,-6.733226,-6.540946,6.301997,-0.628908,1.466683,-4.869108,-6.372147,-6.770875,1.594383,2.535352,-7.150350,-2.246828,0.800116,-1.106465,3.592181,-6.647868,-1.932842,-0.233791,-0.434797,-5.658575,3.018002,-3.958373,-9.204196,-1.111954,7.910815,2.333611,1.000883,-0.173746,-5.338002,-2.425772,5.756788,8.203071,3.879949,-7.841587,8.708392,2.627816,4.649697,-6.994038,8.326249,-8.694592,0.386597,-1.893179,7.311133,8.121890,5.692893,8.415635,-2.196015,-5.440771,-4.420287,3.973283,-9.696883,-6.201976,-6.318655,3.625511,6.774018,1.957077,6.985884,-0.555376,-8.201232,-0.544133,4.381864,3.038306,5.755447,-4.401151,-8.632294,8.519650,-3.938616,-7.962282,-5.622947,-8.322166,8.458455,-8.565707,1.776533,-5.984228,-8.352536,9.415590,-1.231857,5.949125,1.413471,-8.116547,-7.934860,-7.090904,4.603001,4.923799,-7.788717,-5.396715,1.896807,-6.840588,4.317226,8.981056,-2.842436,5.204049,8.756392,-0.785920,-2.020653,-7.799580,-3.821081,-1.373180,7.271412,7.666183,6.647170,-9.227361,7.519870,-9.172948,0.047047,-4.068517,-3.332548,-0.483222,2.696340,-0.293107,3.288551,-1.282117,3.419579,-0.763565,-0.108500,-3.763582,6.864957,6.509114,-1.224449,1.593631,8.118253,4.282748,7.716109,1.351137,-9.107753,0.250174,-0.280279,1.738627,-9.336083,-0.890017,5.714619,-2.067381,4.460035,5.413178,8.647413,9.918031,0.084403,7.084189,3.018078,4.507100,-1.534914,1.234555,-5.606906,4.793144,-8.271603,9.806476,-9.823945,-1.426044,0.813429,7.617046,-3.130642,8.628597,0.184828,0.076397,4.663388,-3.997768,8.933406,-6.127869,-9.693884,-7.225374,-4.872050,6.409879,1.160949,-7.070045,4.459351,-6.819442,8.841770,2.323849,-3.468025,1.482143,6.908912,0.816831,4.474697,-5.662654,6.850816,3.295086,4.099351,4.581251,-6.048070,5.236235,7.557536,-8.079983,-3.398326,-5.684420,-9.115389,-4.670839,5.381075,-5.873487,-6.963009,5.111154,8.333098,7.254308,5.009048,7.932146,-5.059134,8.111634,-3.287271,-5.212829,-5.275966,9.618868,-2.864746,-8.687598,-3.969704,4.655315,-5.818474,-0.143444,3.442747,-0.558616,-6.275810,-0.608028,-5.444325,0.295678,9.808983,7.368758,-9.452998,-7.935677,3.215827,-2.756518,9.624404,-7.597046,-4.220146,1.671383,-4.946811,-5.639797,-1.293866,8.743485,6.237966,7.915716,4.691693,-8.524609,-3.835961,-5.159955,0.905915,2.599340,-6.723118,-8.149797,-4.801755,-5.132052,4.804325,-3.298652,-6.325150,4.375393,-2.569474,-7.262197,6.889267,2.562456,-2.634049,5.232869,-4.596279,-1.506572,-1.600938,-9.221641,9.718149,1.109744,5.302680,-5.723055,-4.829550,7.926529,-4.020639,-0.485987,-4.566377,1.228374,4.903205,2.887426,1.442497,7.927361,-6.916213,2.109599,-4.777732,3.193371,-8.898119,8.970430,6.695609,2.313744,9.598940,1.905004,2.417608,-0.034885,-8.616885,-4.251506,1.678490,1.024024,6.700463,2.874678,-3.022775,-4.420872,-1.319960,5.181590,-0.333958,-8.749038,-5.821227,-7.866823,-5.946254,-9.067876,-5.704217,2.085535,-5.549644,2.706645,7.566655,-9.155023,8.572820,-5.895284,-5.352264,0.278960,-4.224549,-8.071685,-2.465798,-5.838923,6.694201,6.918228,2.461633,-3.284334,3.755438,-0.668669,-5.981968,-6.925858,4.607420,-1.478586,-8.719598,-5.116322,4.844309,1.920256,5.488846,-7.195627,7.407760,-7.907299,-7.892080,-8.767556,5.526748,-9.703223,5.746633,2.782271,3.885649,4.648937,-5.964227,-5.477952,-5.710727,6.905715,7.602984,6.929142,8.467517,-6.247136,-5.176068,9.214203,2.539562,5.563346,6.577097,9.250960,-5.507921,-4.770237,-4.355656,-1.308816,2.253610,6.736526,-3.296855,3.032570,-2.843286,9.118168,-2.504683,-4.647695,0.588652,3.830586,7.324529,3.693056,3.807393,-9.387151,4.702284,-0.566984,-8.843300,6.070637,-1.672598,-0.522585,-2.133071,5.713148,-7.133280,-8.410431,-7.603652,-9.055157,-2.993680,2.815336,-3.245963,-4.045276,9.041087,-1.773820,-6.136328,-4.533791,-4.718963,1.947377,-5.290069,1.694221,0.986300,-6.869580,1.185976,4.979773,3.207089,9.165037,-2.540574,2.706905,2.806633,1.902510,0.980459,-8.557193,-9.844302,9.973521,6.342858,6.765477,-1.118301,-2.544539,9.336138,-2.674931,-5.292839,-3.945275,8.610904,-9.146911,8.757448,-1.954345,0.283832,-0.609778,-3.803540,3.315307,-5.180487,-0.379879,-5.300584,5.285305,-9.380600,-9.521808,9.133487,5.411489,-1.416713,9.020600,7.600835,8.433479,0.094281,-8.015956,3.528345,4.752739,2.248511,-8.609916,-7.634618,0.700313,3.273746,4.526484,-1.369581,7.987945,4.081227,-2.796191,-9.084946,8.245532,6.955445,-1.828547,6.577370,-9.188494,9.111389,5.146438,-3.023728,6.810340,-0.970019,3.033729,3.842284,-5.409498,9.043890,-2.199441,-5.917466,0.692423,3.700972,-5.120560,9.968691,7.403099,7.698643,-0.422959,7.063839,-7.490499,2.677467,-2.867485,-0.484468,2.702344,1.365175,-7.516180,1.071431,9.654846,7.750919,-3.991107,1.951230,5.709336,-7.136718,-1.860792,0.395218,4.693380,-0.328957,-5.060097,-6.761832,5.362970,9.354732,3.713506,5.316346,4.307398,-0.696249,-4.610458,-0.513384,8.351779,1.878543,-7.289762,-8.265099,6.899490,-7.865244,8.512299,6.810002,-9.870963,-6.731031,-2.515192,9.353279,-5.765934,0.729736,2.326900,2.467880,-8.389128,-1.881766,8.136821,-1.183970,-9.930744,-7.476842,-3.357587,-3.219219,-1.926550,-4.694340,-8.848915,7.293932,-6.462078,9.117645,-5.059541,-1.953551,-0.633378,5.061183,5.331896,-8.681911,-9.197105,8.633731,4.614205,-8.949947,0.796743,-9.456278,-6.782402,-7.584348,-0.436355,-9.197064,-1.190591,8.776373,2.448345,1.043660,-5.615720,-7.950508,-5.988510,8.555998,9.119524,-4.353831,0.219620,0.850029,-3.390225,-2.008124,9.196188,7.060222,1.063859,-7.497620,1.153226,5.302079,-7.747526,1.074871,3.623678,-0.782524,-3.104695,1.964115,8.159440,9.109471,4.382501,-3.866416,-5.309120,-4.514121,-6.209394,-1.323065,-8.372386,6.448001,-2.773381,-5.972737,-1.722637,-5.354235,2.668432,-3.580580,-0.161705,-2.686934,1.043821,8.176188,-7.918902,9.739691,-8.095573,-7.977642,7.752153,8.307577,-5.717253,3.328284,-3.667225,1.931204,-5.850082,-7.797494,1.955369,-9.424827,2.620589,-7.931949,6.563700,-3.125378,-5.453142,4.768423,1.666102,1.535428,-2.577063,-9.944989,-6.808858,-1.812781,6.432154,-5.454120,3.687024,3.882415,-5.536222,-4.915278,7.739332,3.986543,7.918859,9.039124,-8.534167,1.487070,2.023017,9.532462,2.159374,-5.476954,9.219473,-0.229547,0.250061,4.474516,7.172566,-7.777083,9.356842,-2.632717,-3.765774,3.777442,-1.835814,3.784458,-3.135460,-7.590200,-4.461237,-7.624041,5.823908,-7.505810,-3.122791,-3.881484,4.650832,-7.358303,-4.977162,6.000598,-3.088903,3.373735,8.832676,-1.595394,-4.221118,-5.030511,-0.270159,-9.125668,6.251706,-0.786840,-9.215080,6.146240,9.847043,-5.449958,5.556087,-6.373205,-9.663972,-8.393317,-0.624682,3.861275,2.675533,4.452584,-7.300695,4.179190,-5.556254,5.078979,-2.708554,-9.774850,-5.118483,-3.554715,9.636438,0.523620,-2.612971,3.756589,6.253235,2.916140,-6.582209,-1.643009,-2.063670,-0.234988,1.815999,-2.798301,6.772105,-9.289752,3.252581,2.268064,1.223182,1.220405,-3.496681,1.468341,3.399948,3.454828,8.272279,8.215883,0.293266,7.770179,5.120056,1.621231,-2.718160,0.582694,-3.228680,-3.464571,3.008780,8.141266,6.485206,8.548717,-7.865413,-5.579992,-7.873223,4.288565,-0.881656,3.132901,-5.387299,-0.966970,-5.132681,4.853542,-9.296241,-0.498665,7.766818,4.689771,-5.231463,3.215303,2.772204,0.401445,7.480854,-6.336457,0.377222,-5.980162,-6.736812,-1.746444,-6.669855,1.189735,-8.040435,-3.091811,5.175814,-8.738048,7.459430,-6.090875,5.543143,-3.342710,7.624894,-8.108874,-1.130932,-8.588458,5.729031,7.415822,-4.413251,-4.642899,8.273417,-7.244174,6.429433,-9.991760,4.061326,0.669217,-3.096188,4.503936,-5.835525,-2.415377,-3.875919,1.006106,-7.741911,4.803313,4.737321,2.295299,6.191792,-4.870160,-9.273476,3.804999,9.304552,-9.457188,-2.693674,2.508501,-9.493081,-8.276270,7.455379,-8.644820,-7.481042,-4.406920,-2.863053,-4.733417,-1.899038,-5.928248,-5.491262,-3.793832,-9.797758,1.217210,-5.375652,-5.780696,9.390937,-0.245820,-3.284984,-6.296220,-7.137808,2.763828,-4.051620,-8.112230,-4.226137,5.674926,-5.713283,-7.933338,-1.365882,-9.027606,0.716179,4.481104,0.753513,9.025721,0.174411,-2.332609,-4.602822,-6.956458,-4.455356,0.856584,1.286755,3.860142,-7.101506,-7.002271,4.657072,-1.590492,4.464914,7.154102,9.714084,5.581240,-5.865969,-1.320803,6.251392,3.874704,-5.271038,-8.347534,2.140422,0.769425,4.275358,9.411464,-7.594014,6.797270,2.433696,-5.709187,7.479767,3.282645,-5.062848,4.224448,-6.503801,9.528376,5.794257,-1.669868,1.493715,4.851520,-8.540113,6.241870,-7.821600,-0.094043,-6.504866,-5.552658,-1.058253,1.912237,9.283815,-5.932113,-2.956415,-8.289722,7.543460,-7.537445,3.209770,-0.345237,-4.929704,-8.162970,-0.454442,5.313726,-0.020368,4.480047,1.436142,6.916234,0.609208,3.005905,3.848885,5.500784,-2.002016,5.439631,8.279053,6.484931,6.564915,-9.113777,9.431300,-2.505137,2.567885,-3.051071,8.594264,-1.720951,-7.441416,-6.087145,2.243600,-1.841844,9.595905,5.773021,6.751945,6.678275,4.729382,9.712265,2.644576,-9.986062,1.534560,7.057315,-3.126502,1.371840,6.291216,-5.904918,6.544891,1.168989,-1.541709,-6.208997,4.753782,-7.442819,6.456598,0.778164,-0.364089,-1.939209,7.449914,-7.314108,0.830761,-9.367900,6.068490,2.607872,6.014545,5.683094,-1.019181,-2.835916,5.464740,-0.165058,-8.922502,7.809614,3.652936,-5.275175,-5.300045,-5.608985,-2.213413,-8.831015,3.915309,-6.585134,-0.749530,-5.962474,2.447123,4.960324,4.842009,-9.281794,8.196021,-2.435081,9.302476,2.325193,1.685334,8.511047,-5.256227,6.096400,4.489398,8.579639,-7.451872,-5.824603,-7.834843,-7.985241,0.348730,3.478479,8.736861,8.980310,-3.590319,-4.050132,-1.252533,3.837309,3.333405,-6.350365,-5.394988,8.318954,7.356610,0.981529,6.702425,-6.443195,-5.163532,4.612436,2.223848,-8.250559,-8.974277,-9.793196,-2.369112,9.500546,-2.616029,-0.054105,8.100174,8.848886,-0.361752,-0.548741,5.259184,-8.136942,-5.686072,2.163083,8.208009,7.072600,-3.405010,-0.753089,1.332576,-4.472457,-7.889424,3.293674,-1.990974,-6.540983,0.776965,-4.607428,0.404525,-0.905470,6.101052], dtype = "float64")#candidate|13821|(1820,)|const|float64
var_13822 = relay.var("var_13822", dtype = "float32", shape = (312,))#candidate|13822|(312,)|var|float32
call_13818 = relay.TupleGetItem(func_10041_call(relay.reshape(const_13819.astype('int8'), [400,]), relay.reshape(const_13820.astype('uint8'), [810,]), relay.reshape(const_13821.astype('float64'), [1820,]), relay.reshape(var_13822.astype('float32'), [312,]), ), 2)
call_13823 = relay.TupleGetItem(func_10047_call(relay.reshape(const_13819.astype('int8'), [400,]), relay.reshape(const_13820.astype('uint8'), [810,]), relay.reshape(const_13821.astype('float64'), [1820,]), relay.reshape(var_13822.astype('float32'), [312,]), ), 2)
output = relay.Tuple([call_13797,call_13818,const_13819,const_13820,const_13821,var_13822,])
output2 = relay.Tuple([call_13798,call_13823,const_13819,const_13820,const_13821,var_13822,])
func_13837 = relay.Function([var_13822,], output)
mod['func_13837'] = func_13837
mod = relay.transform.InferType()(mod)
var_13838 = relay.var("var_13838", dtype = "float32", shape = (312,))#candidate|13838|(312,)|var|float32
output = func_13837(var_13838)
func_13839 = relay.Function([var_13838], output)
mutated_mod['func_13839'] = func_13839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10538_call = mod.get_global_var('func_10538')
func_10539_call = mutated_mod.get_global_var('func_10539')
call_13898 = func_10538_call()
call_13899 = func_10538_call()
func_13278_call = mod.get_global_var('func_13278')
func_13280_call = mutated_mod.get_global_var('func_13280')
call_13904 = func_13278_call()
call_13905 = func_13278_call()
func_11359_call = mod.get_global_var('func_11359')
func_11361_call = mutated_mod.get_global_var('func_11361')
call_13926 = relay.TupleGetItem(func_11359_call(), 1)
call_13927 = relay.TupleGetItem(func_11361_call(), 1)
func_12932_call = mod.get_global_var('func_12932')
func_12934_call = mutated_mod.get_global_var('func_12934')
call_13938 = relay.TupleGetItem(func_12932_call(), 2)
call_13939 = relay.TupleGetItem(func_12934_call(), 2)
output = relay.Tuple([call_13898,call_13904,call_13926,call_13938,])
output2 = relay.Tuple([call_13899,call_13905,call_13927,call_13939,])
func_13944 = relay.Function([], output)
mod['func_13944'] = func_13944
mod = relay.transform.InferType()(mod)
output = func_13944()
func_13945 = relay.Function([], output)
mutated_mod['func_13945'] = func_13945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9606_call = mod.get_global_var('func_9606')
func_9607_call = mutated_mod.get_global_var('func_9607')
call_13953 = relay.TupleGetItem(func_9606_call(), 0)
call_13954 = relay.TupleGetItem(func_9607_call(), 0)
output = call_13953
output2 = call_13954
func_13966 = relay.Function([], output)
mod['func_13966'] = func_13966
mod = relay.transform.InferType()(mod)
output = func_13966()
func_13967 = relay.Function([], output)
mutated_mod['func_13967'] = func_13967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8419_call = mod.get_global_var('func_8419')
func_8420_call = mutated_mod.get_global_var('func_8420')
call_14015 = relay.TupleGetItem(func_8419_call(), 3)
call_14016 = relay.TupleGetItem(func_8420_call(), 3)
output = relay.Tuple([call_14015,])
output2 = relay.Tuple([call_14016,])
func_14055 = relay.Function([], output)
mod['func_14055'] = func_14055
mod = relay.transform.InferType()(mod)
mutated_mod['func_14055'] = func_14055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14055_call = mutated_mod.get_global_var('func_14055')
call_14056 = func_14055_call()
output = call_14056
func_14057 = relay.Function([], output)
mutated_mod['func_14057'] = func_14057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11767_call = mod.get_global_var('func_11767')
func_11768_call = mutated_mod.get_global_var('func_11768')
call_14157 = relay.TupleGetItem(func_11767_call(), 1)
call_14158 = relay.TupleGetItem(func_11768_call(), 1)
func_11381_call = mod.get_global_var('func_11381')
func_11383_call = mutated_mod.get_global_var('func_11383')
call_14164 = func_11381_call()
call_14165 = func_11381_call()
output = relay.Tuple([call_14157,call_14164,])
output2 = relay.Tuple([call_14158,call_14165,])
func_14172 = relay.Function([], output)
mod['func_14172'] = func_14172
mod = relay.transform.InferType()(mod)
mutated_mod['func_14172'] = func_14172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14172_call = mutated_mod.get_global_var('func_14172')
call_14173 = func_14172_call()
output = call_14173
func_14174 = relay.Function([], output)
mutated_mod['func_14174'] = func_14174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12596_call = mod.get_global_var('func_12596')
func_12597_call = mutated_mod.get_global_var('func_12597')
call_14182 = func_12596_call()
call_14183 = func_12596_call()
output = call_14182
output2 = call_14183
func_14219 = relay.Function([], output)
mod['func_14219'] = func_14219
mod = relay.transform.InferType()(mod)
mutated_mod['func_14219'] = func_14219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14219_call = mutated_mod.get_global_var('func_14219')
call_14220 = func_14219_call()
output = call_14220
func_14221 = relay.Function([], output)
mutated_mod['func_14221'] = func_14221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12960_call = mod.get_global_var('func_12960')
func_12961_call = mutated_mod.get_global_var('func_12961')
call_14227 = relay.TupleGetItem(func_12960_call(), 0)
call_14228 = relay.TupleGetItem(func_12961_call(), 0)
output = call_14227
output2 = call_14228
func_14248 = relay.Function([], output)
mod['func_14248'] = func_14248
mod = relay.transform.InferType()(mod)
mutated_mod['func_14248'] = func_14248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14248_call = mutated_mod.get_global_var('func_14248')
call_14249 = func_14248_call()
output = call_14249
func_14250 = relay.Function([], output)
mutated_mod['func_14250'] = func_14250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12634_call = mod.get_global_var('func_12634')
func_12635_call = mutated_mod.get_global_var('func_12635')
call_14257 = relay.TupleGetItem(func_12634_call(), 0)
call_14258 = relay.TupleGetItem(func_12635_call(), 0)
output = call_14257
output2 = call_14258
func_14268 = relay.Function([], output)
mod['func_14268'] = func_14268
mod = relay.transform.InferType()(mod)
mutated_mod['func_14268'] = func_14268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14268_call = mutated_mod.get_global_var('func_14268')
call_14269 = func_14268_call()
output = call_14269
func_14270 = relay.Function([], output)
mutated_mod['func_14270'] = func_14270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7617_call = mod.get_global_var('func_7617')
func_7619_call = mutated_mod.get_global_var('func_7619')
call_14283 = func_7617_call()
call_14284 = func_7617_call()
func_12829_call = mod.get_global_var('func_12829')
func_12832_call = mutated_mod.get_global_var('func_12832')
const_14297 = relay.const([5.903688,-0.359370,-7.655093,-6.443406,-5.044228,3.948169,-4.727976,9.306706,-0.701589,2.939590,-8.079856,-1.525434,-7.952925,6.051870,6.332422,2.996941,-2.915103,-6.443870,-0.467252,-9.823540,-5.696941,-7.102644,2.674516,-0.400080,8.197683,9.798883,8.789984,-8.188373,-7.320417,1.133580,-4.524294,-5.130393,3.274393,2.627671,-4.101050,-1.744698,-5.607783,4.956084,-2.706227,0.529212], dtype = "float32")#candidate|14297|(40,)|const|float32
call_14296 = func_12829_call(relay.reshape(const_14297.astype('float32'), [10, 1, 4]))
call_14298 = func_12829_call(relay.reshape(const_14297.astype('float32'), [10, 1, 4]))
func_10588_call = mod.get_global_var('func_10588')
func_10591_call = mutated_mod.get_global_var('func_10591')
var_14300 = relay.var("var_14300", dtype = "bool", shape = (576,))#candidate|14300|(576,)|var|bool
call_14299 = func_10588_call(relay.reshape(var_14300.astype('bool'), [12, 8, 6]), relay.reshape(var_14300.astype('bool'), [12, 8, 6]), )
call_14301 = func_10588_call(relay.reshape(var_14300.astype('bool'), [12, 8, 6]), relay.reshape(var_14300.astype('bool'), [12, 8, 6]), )
output = relay.Tuple([call_14283,call_14296,const_14297,call_14299,var_14300,])
output2 = relay.Tuple([call_14284,call_14298,const_14297,call_14301,var_14300,])
func_14305 = relay.Function([var_14300,], output)
mod['func_14305'] = func_14305
mod = relay.transform.InferType()(mod)
var_14306 = relay.var("var_14306", dtype = "bool", shape = (576,))#candidate|14306|(576,)|var|bool
output = func_14305(var_14306)
func_14307 = relay.Function([var_14306], output)
mutated_mod['func_14307'] = func_14307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14172_call = mod.get_global_var('func_14172')
func_14174_call = mutated_mod.get_global_var('func_14174')
call_14328 = relay.TupleGetItem(func_14172_call(), 0)
call_14329 = relay.TupleGetItem(func_14174_call(), 0)
output = call_14328
output2 = call_14329
func_14331 = relay.Function([], output)
mod['func_14331'] = func_14331
mod = relay.transform.InferType()(mod)
output = func_14331()
func_14332 = relay.Function([], output)
mutated_mod['func_14332'] = func_14332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12960_call = mod.get_global_var('func_12960')
func_12961_call = mutated_mod.get_global_var('func_12961')
call_14338 = relay.TupleGetItem(func_12960_call(), 0)
call_14339 = relay.TupleGetItem(func_12961_call(), 0)
output = call_14338
output2 = call_14339
func_14354 = relay.Function([], output)
mod['func_14354'] = func_14354
mod = relay.transform.InferType()(mod)
mutated_mod['func_14354'] = func_14354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14354_call = mutated_mod.get_global_var('func_14354')
call_14355 = func_14354_call()
output = call_14355
func_14356 = relay.Function([], output)
mutated_mod['func_14356'] = func_14356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12596_call = mod.get_global_var('func_12596')
func_12597_call = mutated_mod.get_global_var('func_12597')
call_14364 = func_12596_call()
call_14365 = func_12596_call()
output = relay.Tuple([call_14364,])
output2 = relay.Tuple([call_14365,])
func_14369 = relay.Function([], output)
mod['func_14369'] = func_14369
mod = relay.transform.InferType()(mod)
mutated_mod['func_14369'] = func_14369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14369_call = mutated_mod.get_global_var('func_14369')
call_14370 = func_14369_call()
output = call_14370
func_14371 = relay.Function([], output)
mutated_mod['func_14371'] = func_14371
mutated_mod = relay.transform.InferType()(mutated_mod)
const_14411 = relay.const([[[-4,-6,5,5,-6,-2,-7,-8,-8,-2,-5,-8,3,7,-1,5],[-2,-8,-4,4,2,-9,-5,-9,9,9,-8,-6,-6,2,-10,3],[-10,8,5,-4,-8,-6,-9,7,4,-4,2,-3,5,-6,-4,6],[1,10,5,-1,-6,-7,1,4,9,8,-8,-10,6,-9,-6,-4],[10,-2,-7,-10,-1,-9,9,10,1,-9,-6,-5,8,3,-8,10],[-3,3,-7,-5,9,3,-9,-6,-8,3,-8,8,-10,-10,2,-6],[-2,6,-1,-8,-7,8,3,-6,3,-6,-8,6,9,-8,-6,5],[5,-5,-4,-7,-3,5,-1,8,-2,6,1,10,10,1,2,1],[-9,4,-1,-2,-5,2,-10,1,-5,4,1,-5,1,4,-2,-1]],[[-3,-4,-5,1,-5,-10,-3,9,-10,-3,-6,-1,-2,10,-1,-7],[-7,9,9,-4,4,9,6,5,-10,6,-5,-5,-1,-5,8,-7],[4,7,-5,-8,-6,6,5,-6,10,-3,9,5,10,2,-3,3],[2,-1,-10,8,3,5,-7,-3,7,5,-3,-5,10,3,4,-1],[3,-7,-8,-10,-1,9,10,-7,9,10,-2,-4,-2,-6,-2,-5],[6,1,-7,4,-6,7,8,-10,6,8,-6,-2,1,7,4,10],[3,5,2,9,-4,-3,-2,1,4,-8,4,-1,8,10,-1,2],[-4,8,-6,-4,-3,5,10,3,-5,-4,-1,-4,6,-8,8,5],[-7,-8,9,-5,8,8,-6,-2,4,-10,3,-3,-1,8,-3,1]],[[-5,4,10,-6,1,-6,7,-10,4,-7,5,7,-2,-5,-7,6],[-5,6,2,-2,6,-2,6,5,3,6,-3,-5,-10,-10,7,1],[-8,5,-8,5,-7,-8,-10,-2,6,-10,-2,2,5,9,1,2],[-6,1,6,-10,4,7,-3,-6,6,8,1,10,-3,8,10,3],[-6,9,-2,-6,-7,8,-1,-8,2,-7,-7,9,-9,-6,-6,4],[-5,8,2,-2,9,10,6,-9,6,-1,6,-3,-8,1,-7,-10],[7,-10,1,7,-3,10,-5,-8,-6,1,3,-6,-2,7,-1,2],[4,-5,3,5,-9,5,-5,-6,-6,-4,3,-9,6,-4,2,4],[-9,1,3,8,-4,-7,-10,1,-1,2,-4,7,-9,-4,1,9]],[[9,4,9,-3,6,1,4,-9,-8,9,6,-9,-8,-9,2,-1],[-9,2,-6,10,-8,8,-2,7,2,1,1,-2,-4,-10,-1,9],[5,-8,8,-2,9,-8,-9,-3,10,-8,4,4,2,-6,6,-1],[-9,-1,-8,-1,3,10,-6,-2,4,9,-9,-6,8,4,-9,6],[-5,-5,10,-10,7,6,10,2,-7,4,4,8,3,-8,4,-2],[-1,-2,7,5,-1,-9,-8,-6,2,10,9,-9,-10,7,-3,5],[-10,-6,-10,-10,1,-3,-8,3,-1,7,-2,4,-5,6,-4,3],[-9,-8,9,1,9,6,-4,-9,-1,5,-3,5,-10,6,-3,7],[-8,-10,-4,5,-4,-1,10,-1,6,-6,5,-5,-2,10,-1,-7]],[[1,-4,-8,-8,-1,-9,1,-6,6,-6,-3,5,-3,3,1,3],[-9,8,-7,8,-9,1,-6,7,-8,2,-3,1,3,9,5,-7],[8,-2,4,-3,6,3,10,4,10,-1,7,10,-7,-8,-3,-7],[-10,8,-8,7,6,7,-9,-5,-9,5,-10,9,-5,10,-10,9],[-9,-8,-7,-2,-6,-10,-10,-5,3,8,-2,-1,-2,5,1,5],[-2,-6,9,-3,-4,9,7,-6,1,-4,-9,-2,-7,4,-2,5],[-4,-2,-8,6,-7,8,9,4,8,-5,-2,-9,-7,-6,-3,-2],[1,-10,8,-3,-2,-10,-6,1,4,-2,-6,-5,5,-9,-2,7],[-6,4,-4,-8,9,5,4,-1,3,-5,4,9,3,8,-10,1]],[[-2,9,-4,-10,7,-10,3,-7,5,-5,-2,-6,4,-10,-1,-2],[8,8,-10,-6,-8,-8,-8,-7,-7,-1,7,-3,3,7,6,6],[-1,-7,7,-8,2,3,-10,-2,-5,5,-2,4,4,9,1,6],[-4,-2,8,3,5,9,-10,-2,4,6,-8,3,-2,-5,-2,6],[6,6,-10,-4,-8,-10,-4,1,2,5,-6,5,3,-2,1,-8],[5,-10,4,2,5,-8,6,6,-7,-1,9,4,4,-6,3,1],[-9,-5,-7,5,-8,-10,4,-4,8,7,-1,-1,4,-1,1,-5],[5,5,6,3,-5,-10,-10,2,-2,-7,-10,8,-6,-1,1,9],[-7,-7,4,-6,-4,8,3,-3,-8,5,-1,-2,-2,-5,-10,-10]],[[-1,-9,-6,4,3,5,9,-10,8,-5,-10,5,-9,-6,7,5],[2,2,10,9,7,1,2,5,9,-1,4,-3,-8,-1,5,-2],[-1,-5,10,6,10,3,9,1,7,-8,-8,5,2,-1,-3,3],[9,7,-6,7,8,-5,10,-4,-8,10,-3,-1,1,1,-7,2],[-4,7,1,3,6,8,-6,4,5,7,7,3,10,-5,-10,-2],[3,-6,5,-6,9,-8,-6,-6,-4,-1,1,-10,9,9,-10,6],[2,10,1,-8,-1,3,7,-10,-4,-4,8,7,1,9,-1,-7],[-6,10,-6,-8,-5,4,-4,-6,9,3,-6,-5,10,-8,-8,4],[3,-1,-4,-6,4,4,-8,6,10,3,2,3,-1,-3,-8,-2]],[[2,-2,4,7,9,6,4,5,1,-2,-9,7,5,-8,8,4],[1,8,3,3,-1,-1,1,8,7,7,4,5,-5,-2,1,4],[-3,9,-2,-10,-3,5,-1,4,-3,-4,-4,-8,-2,-3,-8,6],[1,-7,-10,-5,10,-5,-5,8,3,-6,-3,-7,5,-9,-6,6],[2,10,2,7,7,4,-2,-1,6,-1,4,-3,7,-3,9,-10],[-5,-5,8,-1,-3,-9,7,1,9,-2,1,1,-9,8,-6,-1],[3,-7,9,7,3,8,-8,-3,2,-2,-3,8,9,-2,-8,-7],[-2,-1,-2,-2,6,5,8,3,-3,2,7,-10,7,3,-6,6],[5,-6,6,2,-7,-6,-6,6,1,5,-9,6,6,1,10,-9]],[[-5,-3,-4,-2,5,9,-6,-1,4,-7,-1,-9,4,3,9,2],[9,-6,-2,6,-6,-7,2,9,3,9,1,-5,1,-1,-9,6],[-8,-3,-1,-8,-5,-9,-2,-5,4,-3,5,2,-5,8,-5,2],[-9,4,7,6,6,1,4,6,-1,7,-4,-1,3,3,-4,-3],[-3,4,8,1,7,-5,7,1,10,-1,-6,-5,10,6,4,-10],[6,-6,3,-2,7,-3,1,-2,1,-5,-6,5,10,-1,-1,-3],[4,-3,5,9,-3,8,-6,4,6,6,2,7,5,6,10,4],[9,2,1,7,6,9,-8,3,2,5,3,8,1,-5,-3,6],[4,-7,-1,-2,-4,3,4,7,3,2,3,5,3,-6,7,-10]],[[1,-8,6,1,1,-1,8,-2,7,1,3,-5,-4,-5,-2,-3],[-4,7,-3,7,4,10,5,7,6,-3,1,-7,8,9,-7,-7],[5,1,2,-3,-8,-10,-5,-9,2,1,-2,2,8,-4,-2,-8],[-2,-7,8,3,-3,3,10,10,-5,-7,7,7,-1,-2,1,-1],[10,-9,8,-6,-7,-8,10,8,6,2,-9,3,-9,2,-7,-3],[1,-5,6,-9,-2,-7,-2,10,4,-3,1,2,1,2,-7,4],[8,8,-3,-6,-1,-7,-10,10,9,9,-9,9,-5,9,7,1],[-5,9,7,2,8,10,6,-6,-5,-4,5,6,6,1,1,1],[2,-3,-5,6,4,-5,-10,-5,3,-1,5,-8,5,6,-3,1]],[[9,4,-8,-9,-10,3,3,-5,9,7,-5,7,-4,5,2,-3],[-1,4,9,2,-8,-1,2,9,2,-7,1,-7,9,-2,-2,-9],[-2,-2,6,4,6,-5,9,-2,-10,-10,-5,7,10,2,-4,5],[-5,9,-9,-3,6,5,-2,8,8,-6,-4,-6,2,-6,-2,-2],[-8,-6,4,3,-9,-5,7,-6,3,9,-5,-2,4,1,1,-1],[-6,7,8,8,-8,10,-10,2,8,-9,-8,-8,-10,-8,-4,-1],[8,10,8,5,3,-5,4,6,-1,-5,-7,9,3,10,6,10],[1,-2,-8,-9,4,5,3,2,-6,1,9,3,-7,1,-8,9],[-1,-10,-10,9,5,4,5,10,-4,-7,2,6,6,-7,10,-4]],[[7,-9,7,2,4,-9,-5,-4,-3,1,2,-5,7,-3,-7,8],[-4,-2,-7,-2,2,1,4,6,6,-3,7,9,1,10,10,4],[7,5,-4,-4,-2,-6,8,-6,-1,5,8,-1,5,-8,1,6],[-10,9,-10,2,8,8,10,-2,-4,7,8,-10,-3,-7,2,2],[6,8,6,10,6,10,4,6,-9,-10,3,2,-8,-10,-4,-4],[6,8,10,6,8,3,-7,9,-4,-5,-7,-4,-5,7,9,-2],[3,-8,2,2,-1,-1,6,6,-7,10,7,-2,10,-4,3,5],[7,-1,-7,-8,-8,7,-7,5,-4,-9,-8,-3,-10,-7,-2,9],[8,-10,-2,5,7,5,7,-7,4,-9,-5,-3,7,8,-4,1]],[[-4,9,1,-6,-6,-2,3,-3,5,1,4,7,-4,3,1,-2],[-6,2,4,6,1,4,-7,-10,9,-4,-5,-6,-7,1,-6,-4],[-5,-10,6,-3,-3,-10,-6,-3,-4,-9,10,-2,-8,-7,-7,7],[-9,2,-4,-2,-4,7,5,-4,-9,-9,-2,-7,3,5,7,1],[2,1,8,4,8,-1,-3,1,10,4,9,2,-5,2,-10,10],[-8,-9,6,8,7,8,-4,6,9,6,9,-1,-7,-10,8,1],[1,-2,-3,3,-10,2,10,-8,5,-8,-1,3,-2,7,1,5],[9,-10,-10,4,6,1,-5,-4,2,7,10,5,2,-3,-1,-8],[-10,3,-3,-7,5,4,9,-10,-1,6,10,-5,-3,-7,1,-5]]], dtype = "int16")#candidate|14411|(13, 9, 16)|const|int16
var_14412 = relay.var("var_14412", dtype = "int16", shape = (13, 9, 16))#candidate|14412|(13, 9, 16)|var|int16
bop_14413 = relay.right_shift(const_14411.astype('int16'), relay.reshape(var_14412.astype('int16'), relay.shape_of(const_14411))) # shape=(13, 9, 16)
func_4995_call = mod.get_global_var('func_4995')
func_4998_call = mutated_mod.get_global_var('func_4998')
var_14418 = relay.var("var_14418", dtype = "float32", shape = (1056,))#candidate|14418|(1056,)|var|float32
var_14419 = relay.var("var_14419", dtype = "int8", shape = (400,))#candidate|14419|(400,)|var|int8
call_14417 = relay.TupleGetItem(func_4995_call(relay.reshape(var_14418.astype('float32'), [1056,]), relay.reshape(var_14419.astype('int8'), [200, 2]), ), 2)
call_14420 = relay.TupleGetItem(func_4998_call(relay.reshape(var_14418.astype('float32'), [1056,]), relay.reshape(var_14419.astype('int8'), [200, 2]), ), 2)
func_7184_call = mod.get_global_var('func_7184')
func_7185_call = mutated_mod.get_global_var('func_7185')
call_14426 = relay.TupleGetItem(func_7184_call(), 1)
call_14427 = relay.TupleGetItem(func_7185_call(), 1)
output = relay.Tuple([bop_14413,call_14417,var_14418,var_14419,call_14426,])
output2 = relay.Tuple([bop_14413,call_14420,var_14418,var_14419,call_14427,])
func_14433 = relay.Function([var_14412,var_14418,var_14419,], output)
mod['func_14433'] = func_14433
mod = relay.transform.InferType()(mod)
mutated_mod['func_14433'] = func_14433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14433_call = mutated_mod.get_global_var('func_14433')
var_14435 = relay.var("var_14435", dtype = "int16", shape = (13, 9, 16))#candidate|14435|(13, 9, 16)|var|int16
var_14436 = relay.var("var_14436", dtype = "float32", shape = (1056,))#candidate|14436|(1056,)|var|float32
var_14437 = relay.var("var_14437", dtype = "int8", shape = (400,))#candidate|14437|(400,)|var|int8
call_14434 = func_14433_call(var_14435,var_14436,var_14437,)
output = call_14434
func_14438 = relay.Function([var_14435,var_14436,var_14437,], output)
mutated_mod['func_14438'] = func_14438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7681_call = mod.get_global_var('func_7681')
func_7682_call = mutated_mod.get_global_var('func_7682')
call_14449 = relay.TupleGetItem(func_7681_call(), 0)
call_14450 = relay.TupleGetItem(func_7682_call(), 0)
output = relay.Tuple([call_14449,])
output2 = relay.Tuple([call_14450,])
func_14453 = relay.Function([], output)
mod['func_14453'] = func_14453
mod = relay.transform.InferType()(mod)
mutated_mod['func_14453'] = func_14453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14453_call = mutated_mod.get_global_var('func_14453')
call_14454 = func_14453_call()
output = call_14454
func_14455 = relay.Function([], output)
mutated_mod['func_14455'] = func_14455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9555_call = mod.get_global_var('func_9555')
func_9557_call = mutated_mod.get_global_var('func_9557')
call_14458 = relay.TupleGetItem(func_9555_call(), 0)
call_14459 = relay.TupleGetItem(func_9557_call(), 0)
func_13590_call = mod.get_global_var('func_13590')
func_13591_call = mutated_mod.get_global_var('func_13591')
call_14466 = relay.TupleGetItem(func_13590_call(), 1)
call_14467 = relay.TupleGetItem(func_13591_call(), 1)
func_13837_call = mod.get_global_var('func_13837')
func_13839_call = mutated_mod.get_global_var('func_13839')
var_14472 = relay.var("var_14472", dtype = "float32", shape = (312,))#candidate|14472|(312,)|var|float32
call_14471 = relay.TupleGetItem(func_13837_call(relay.reshape(var_14472.astype('float32'), [312,])), 4)
call_14473 = relay.TupleGetItem(func_13839_call(relay.reshape(var_14472.astype('float32'), [312,])), 4)
output = relay.Tuple([call_14458,call_14466,call_14471,var_14472,])
output2 = relay.Tuple([call_14459,call_14467,call_14473,var_14472,])
func_14476 = relay.Function([var_14472,], output)
mod['func_14476'] = func_14476
mod = relay.transform.InferType()(mod)
var_14477 = relay.var("var_14477", dtype = "float32", shape = (312,))#candidate|14477|(312,)|var|float32
output = func_14476(var_14477)
func_14478 = relay.Function([var_14477], output)
mutated_mod['func_14478'] = func_14478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11381_call = mod.get_global_var('func_11381')
func_11383_call = mutated_mod.get_global_var('func_11383')
call_14482 = func_11381_call()
call_14483 = func_11381_call()
func_10450_call = mod.get_global_var('func_10450')
func_10452_call = mutated_mod.get_global_var('func_10452')
var_14488 = relay.var("var_14488", dtype = "float64", shape = (70,))#candidate|14488|(70,)|var|float64
call_14487 = relay.TupleGetItem(func_10450_call(relay.reshape(var_14488.astype('float64'), [70,])), 0)
call_14489 = relay.TupleGetItem(func_10452_call(relay.reshape(var_14488.astype('float64'), [70,])), 0)
uop_14506 = relay.tan(call_14487.astype('float64')) # shape=(1, 9, 2)
uop_14508 = relay.tan(call_14489.astype('float64')) # shape=(1, 9, 2)
output = relay.Tuple([call_14482,var_14488,uop_14506,])
output2 = relay.Tuple([call_14483,var_14488,uop_14508,])
func_14511 = relay.Function([var_14488,], output)
mod['func_14511'] = func_14511
mod = relay.transform.InferType()(mod)
var_14512 = relay.var("var_14512", dtype = "float64", shape = (70,))#candidate|14512|(70,)|var|float64
output = func_14511(var_14512)
func_14513 = relay.Function([var_14512], output)
mutated_mod['func_14513'] = func_14513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11500_call = mod.get_global_var('func_11500')
func_11502_call = mutated_mod.get_global_var('func_11502')
call_14559 = relay.TupleGetItem(func_11500_call(), 0)
call_14560 = relay.TupleGetItem(func_11502_call(), 0)
output = relay.Tuple([call_14559,])
output2 = relay.Tuple([call_14560,])
func_14589 = relay.Function([], output)
mod['func_14589'] = func_14589
mod = relay.transform.InferType()(mod)
output = func_14589()
func_14590 = relay.Function([], output)
mutated_mod['func_14590'] = func_14590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9386_call = mod.get_global_var('func_9386')
func_9387_call = mutated_mod.get_global_var('func_9387')
call_14632 = relay.TupleGetItem(func_9386_call(), 1)
call_14633 = relay.TupleGetItem(func_9387_call(), 1)
uop_14643 = relay.log10(call_14632.astype('float32')) # shape=(1584,)
uop_14645 = relay.log10(call_14633.astype('float32')) # shape=(1584,)
bop_14654 = relay.left_shift(call_14632.astype('uint64'), relay.reshape(uop_14643.astype('uint64'), relay.shape_of(call_14632))) # shape=(1584,)
bop_14657 = relay.left_shift(call_14633.astype('uint64'), relay.reshape(uop_14645.astype('uint64'), relay.shape_of(call_14633))) # shape=(1584,)
output = bop_14654
output2 = bop_14657
func_14662 = relay.Function([], output)
mod['func_14662'] = func_14662
mod = relay.transform.InferType()(mod)
output = func_14662()
func_14663 = relay.Function([], output)
mutated_mod['func_14663'] = func_14663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14248_call = mod.get_global_var('func_14248')
func_14250_call = mutated_mod.get_global_var('func_14250')
call_14709 = func_14248_call()
call_14710 = func_14248_call()
output = call_14709
output2 = call_14710
func_14736 = relay.Function([], output)
mod['func_14736'] = func_14736
mod = relay.transform.InferType()(mod)
output = func_14736()
func_14737 = relay.Function([], output)
mutated_mod['func_14737'] = func_14737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14219_call = mod.get_global_var('func_14219')
func_14221_call = mutated_mod.get_global_var('func_14221')
call_14752 = func_14219_call()
call_14753 = func_14219_call()
output = relay.Tuple([call_14752,])
output2 = relay.Tuple([call_14753,])
func_14759 = relay.Function([], output)
mod['func_14759'] = func_14759
mod = relay.transform.InferType()(mod)
mutated_mod['func_14759'] = func_14759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14759_call = mutated_mod.get_global_var('func_14759')
call_14760 = func_14759_call()
output = call_14760
func_14761 = relay.Function([], output)
mutated_mod['func_14761'] = func_14761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12127_call = mod.get_global_var('func_12127')
func_12129_call = mutated_mod.get_global_var('func_12129')
call_14805 = relay.TupleGetItem(func_12127_call(), 1)
call_14806 = relay.TupleGetItem(func_12129_call(), 1)
output = call_14805
output2 = call_14806
func_14834 = relay.Function([], output)
mod['func_14834'] = func_14834
mod = relay.transform.InferType()(mod)
mutated_mod['func_14834'] = func_14834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14834_call = mutated_mod.get_global_var('func_14834')
call_14835 = func_14834_call()
output = call_14835
func_14836 = relay.Function([], output)
mutated_mod['func_14836'] = func_14836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10971_call = mod.get_global_var('func_10971')
func_10973_call = mutated_mod.get_global_var('func_10973')
call_14842 = relay.TupleGetItem(func_10971_call(), 0)
call_14843 = relay.TupleGetItem(func_10973_call(), 0)
output = call_14842
output2 = call_14843
func_14850 = relay.Function([], output)
mod['func_14850'] = func_14850
mod = relay.transform.InferType()(mod)
mutated_mod['func_14850'] = func_14850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14850_call = mutated_mod.get_global_var('func_14850')
call_14851 = func_14850_call()
output = call_14851
func_14852 = relay.Function([], output)
mutated_mod['func_14852'] = func_14852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14453_call = mod.get_global_var('func_14453')
func_14455_call = mutated_mod.get_global_var('func_14455')
call_14975 = relay.TupleGetItem(func_14453_call(), 0)
call_14976 = relay.TupleGetItem(func_14455_call(), 0)
func_14589_call = mod.get_global_var('func_14589')
func_14590_call = mutated_mod.get_global_var('func_14590')
call_14984 = relay.TupleGetItem(func_14589_call(), 0)
call_14985 = relay.TupleGetItem(func_14590_call(), 0)
output = relay.Tuple([call_14975,call_14984,])
output2 = relay.Tuple([call_14976,call_14985,])
func_14990 = relay.Function([], output)
mod['func_14990'] = func_14990
mod = relay.transform.InferType()(mod)
mutated_mod['func_14990'] = func_14990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14990_call = mutated_mod.get_global_var('func_14990')
call_14991 = func_14990_call()
output = call_14991
func_14992 = relay.Function([], output)
mutated_mod['func_14992'] = func_14992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13395_call = mod.get_global_var('func_13395')
func_13396_call = mutated_mod.get_global_var('func_13396')
call_15028 = relay.TupleGetItem(func_13395_call(), 0)
call_15029 = relay.TupleGetItem(func_13396_call(), 0)
output = relay.Tuple([call_15028,])
output2 = relay.Tuple([call_15029,])
func_15030 = relay.Function([], output)
mod['func_15030'] = func_15030
mod = relay.transform.InferType()(mod)
mutated_mod['func_15030'] = func_15030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15030_call = mutated_mod.get_global_var('func_15030')
call_15031 = func_15030_call()
output = call_15031
func_15032 = relay.Function([], output)
mutated_mod['func_15032'] = func_15032
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15076 = relay.var("var_15076", dtype = "float64", shape = (4, 2, 7))#candidate|15076|(4, 2, 7)|var|float64
uop_15077 = relay.sqrt(var_15076.astype('float64')) # shape=(4, 2, 7)
func_9084_call = mod.get_global_var('func_9084')
func_9086_call = mutated_mod.get_global_var('func_9086')
call_15094 = relay.TupleGetItem(func_9084_call(), 0)
call_15095 = relay.TupleGetItem(func_9086_call(), 0)
func_8880_call = mod.get_global_var('func_8880')
func_8883_call = mutated_mod.get_global_var('func_8883')
call_15129 = relay.TupleGetItem(func_8880_call(relay.reshape(call_15094.astype('float32'), [192,])), 2)
call_15130 = relay.TupleGetItem(func_8883_call(relay.reshape(call_15094.astype('float32'), [192,])), 2)
output = relay.Tuple([uop_15077,call_15094,call_15129,])
output2 = relay.Tuple([uop_15077,call_15095,call_15130,])
func_15131 = relay.Function([var_15076,], output)
mod['func_15131'] = func_15131
mod = relay.transform.InferType()(mod)
var_15132 = relay.var("var_15132", dtype = "float64", shape = (4, 2, 7))#candidate|15132|(4, 2, 7)|var|float64
output = func_15131(var_15132)
func_15133 = relay.Function([var_15132], output)
mutated_mod['func_15133'] = func_15133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11855_call = mod.get_global_var('func_11855')
func_11856_call = mutated_mod.get_global_var('func_11856')
call_15140 = relay.TupleGetItem(func_11855_call(), 0)
call_15141 = relay.TupleGetItem(func_11856_call(), 0)
func_11620_call = mod.get_global_var('func_11620')
func_11621_call = mutated_mod.get_global_var('func_11621')
call_15146 = relay.TupleGetItem(func_11620_call(), 0)
call_15147 = relay.TupleGetItem(func_11621_call(), 0)
func_8146_call = mod.get_global_var('func_8146')
func_8149_call = mutated_mod.get_global_var('func_8149')
call_15157 = relay.TupleGetItem(func_8146_call(relay.reshape(call_15140.astype('float32'), [3, 16, 4])), 0)
call_15158 = relay.TupleGetItem(func_8149_call(relay.reshape(call_15140.astype('float32'), [3, 16, 4])), 0)
func_12634_call = mod.get_global_var('func_12634')
func_12635_call = mutated_mod.get_global_var('func_12635')
call_15165 = relay.TupleGetItem(func_12634_call(), 0)
call_15166 = relay.TupleGetItem(func_12635_call(), 0)
func_11210_call = mod.get_global_var('func_11210')
func_11212_call = mutated_mod.get_global_var('func_11212')
call_15184 = relay.TupleGetItem(func_11210_call(), 0)
call_15185 = relay.TupleGetItem(func_11212_call(), 0)
func_12310_call = mod.get_global_var('func_12310')
func_12313_call = mutated_mod.get_global_var('func_12313')
var_15212 = relay.var("var_15212", dtype = "float32", shape = (1040,))#candidate|15212|(1040,)|var|float32
call_15211 = relay.TupleGetItem(func_12310_call(relay.reshape(var_15212.astype('float32'), [1040, 1])), 1)
call_15213 = relay.TupleGetItem(func_12313_call(relay.reshape(var_15212.astype('float32'), [1040, 1])), 1)
func_5714_call = mod.get_global_var('func_5714')
func_5718_call = mutated_mod.get_global_var('func_5718')
const_15223 = relay.const([[1,9,3,4,-3,-6,-9,-8,6,1,8,9,10,3,-8,-9,-10,-6,4,4,2,4,-7,-2,6,-3,1,2,-3,-7,7,1,-6,-10,-9,-10,8,-2,-8,-6,-8,-1,-2,-8,-2,-6,-3,-6,-6,-1,-3,-7,7,-4,4,3,10,8,-9,-6,5,9,9,-9,2,-1,3,5,-7,-8,2,2,-3,5,9,2,3,2,-7,-6,-2,-5,5,6,-1,-1,-4,-7,5,1,-3,-8,8,-8,-2,5,3,7,-10,-8,-7,-5,5,-2,-4,-4,9,3,3,-10,8,-7,5,-7,-8,7,-7,10,6,2,-4,9,8,9,-3,-6,-6,10,-8,-6,5,6,8,3,8,6,-2,5,6,1,5,-8,2,-2,-6,-1,-6,2,2,9,-3,-2,-9,2,1,5,-3,-4,-1,-7,7,-8,4,-6,-7,8,10,-2,-7,6,-2,-1,-4,-1,-3,3,-6,-4,3,9,-5,-10,7,5,10,9,2,6,6,10,6,1,4,-4,-5,9,-10,-6,4,-8,-5,-6,-8,3,-2,5,-4,-1,2,-7,6,9,-4,-2,10,-3,-6,2,-3,-10,-5,4,1,-10,-1,-2,-3,-5,-7,5,7,-2,7,9,-8,9,-1,-5,-10,-5,-3,10,-9,-3,1,4,6,-1,2,4,-6,-5,6,1,-8,7,-3,-7,3,1,-6,10,-2,4,8,6,-1,-4,5,-2,-2,-4,7,9,9,-2,4,-8,2,2,10,-7,-3,7,-4,10,-10,-3,6,-7,-2,2,2,4,-2,5,6,-2,-10,-8,-9,-2,-3,-8,-7,-3,-5,-4,-3,-4,-5,-8,10,4,10,-8,-10,-8,3,1,-10,-8,-9,5,-1,8,9,-8,5,-10,-4,4,7,7,7,-2,4,5,10,-7,8,-6,-3,-5,-6,3,-3,6,-8,-2,2,-3,1,4,-7,-4,-8,1,7,-2,-3,5,-2,8,3,-5,3,5,-4,-7,2,6,-2,-3,-5,1,8,3,-6,-9,10,-8,-2,9]], dtype = "uint64")#candidate|15223|(1, 384)|const|uint64
call_15222 = relay.TupleGetItem(func_5714_call(relay.reshape(const_15223.astype('uint64'), [16, 12, 2]), relay.reshape(const_15223.astype('uint64'), [16, 12, 2]), ), 0)
call_15224 = relay.TupleGetItem(func_5718_call(relay.reshape(const_15223.astype('uint64'), [16, 12, 2]), relay.reshape(const_15223.astype('uint64'), [16, 12, 2]), ), 0)
output = relay.Tuple([call_15140,call_15146,call_15157,call_15165,call_15184,call_15211,var_15212,call_15222,const_15223,])
output2 = relay.Tuple([call_15141,call_15147,call_15158,call_15166,call_15185,call_15213,var_15212,call_15224,const_15223,])
func_15225 = relay.Function([var_15212,], output)
mod['func_15225'] = func_15225
mod = relay.transform.InferType()(mod)
var_15226 = relay.var("var_15226", dtype = "float32", shape = (1040,))#candidate|15226|(1040,)|var|float32
output = func_15225(var_15226)
func_15227 = relay.Function([var_15226], output)
mutated_mod['func_15227'] = func_15227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13590_call = mod.get_global_var('func_13590')
func_13591_call = mutated_mod.get_global_var('func_13591')
call_15252 = relay.TupleGetItem(func_13590_call(), 0)
call_15253 = relay.TupleGetItem(func_13591_call(), 0)
output = call_15252
output2 = call_15253
func_15271 = relay.Function([], output)
mod['func_15271'] = func_15271
mod = relay.transform.InferType()(mod)
mutated_mod['func_15271'] = func_15271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15271_call = mutated_mod.get_global_var('func_15271')
call_15272 = func_15271_call()
output = call_15272
func_15273 = relay.Function([], output)
mutated_mod['func_15273'] = func_15273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10708_call = mod.get_global_var('func_10708')
func_10710_call = mutated_mod.get_global_var('func_10710')
call_15280 = relay.TupleGetItem(func_10708_call(), 0)
call_15281 = relay.TupleGetItem(func_10710_call(), 0)
output = relay.Tuple([call_15280,])
output2 = relay.Tuple([call_15281,])
func_15289 = relay.Function([], output)
mod['func_15289'] = func_15289
mod = relay.transform.InferType()(mod)
mutated_mod['func_15289'] = func_15289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15289_call = mutated_mod.get_global_var('func_15289')
call_15290 = func_15289_call()
output = call_15290
func_15291 = relay.Function([], output)
mutated_mod['func_15291'] = func_15291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13590_call = mod.get_global_var('func_13590')
func_13591_call = mutated_mod.get_global_var('func_13591')
call_15434 = relay.TupleGetItem(func_13590_call(), 0)
call_15435 = relay.TupleGetItem(func_13591_call(), 0)
output = relay.Tuple([call_15434,])
output2 = relay.Tuple([call_15435,])
func_15456 = relay.Function([], output)
mod['func_15456'] = func_15456
mod = relay.transform.InferType()(mod)
output = func_15456()
func_15457 = relay.Function([], output)
mutated_mod['func_15457'] = func_15457
mutated_mod = relay.transform.InferType()(mutated_mod)
const_15532 = relay.const([[[-1.952425,-3.518767,4.853707,-2.139025,-2.739216,-0.175313,-8.531082,-4.308693,4.847579,3.910725,4.196858,8.452436],[4.598900,7.305262,1.150443,-6.218962,-4.045124,6.078356,5.868188,-3.533607,3.765073,3.010172,-2.707745,-9.733419],[-8.408504,-2.979016,4.728642,-9.578126,-6.720213,-0.094475,7.072420,9.873514,9.949071,3.185897,-1.144030,-2.206300]]], dtype = "float64")#candidate|15532|(1, 3, 12)|const|float64
uop_15533 = relay.rsqrt(const_15532.astype('float64')) # shape=(1, 3, 12)
output = uop_15533
output2 = uop_15533
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')
module1.set_input(**params)
module1.run()
res2 = intrp2.evaluate()()
res3 = intrp3.evaluate()()
res4 = intrp4.evaluate()()
res2 = vmobj_to_list(res2)
res3 = vmobj_to_list(res3)
res4 = vmobj_to_list(res4)
res1_0 = module1.get_output(0).asnumpy()
res2_0 = res2[0].asnumpy()
res3_0 = res3[0].asnumpy()
res4_0 = res4[0].asnumpy()
np.testing.assert_allclose(res1_0 ,res2_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_0 ,res3_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_0 ,res4_0, atol=1e-3, rtol=1e-3)
(res1_0 == res2_0).all()
(res1_0 == res3_0).all()
(res1_0 == res4_0).all()
module5.set_input(**params)
module5.run()
res6 = intrp6.evaluate()()
res7 = intrp7.evaluate()()
res8 = intrp8.evaluate()()
res6 = vmobj_to_list(res6)
res7 = vmobj_to_list(res7)
res8 = vmobj_to_list(res8)
res5_0 = module5.get_output(0).asnumpy()
res6_0 = res6[0].asnumpy()
res7_0 = res7[0].asnumpy()
res8_0 = res8[0].asnumpy()
np.testing.assert_allclose(res5_0 ,res6_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_0 ,res7_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_0 ,res8_0, atol=1e-3, rtol=1e-3)
(res5_0 == res6_0).all()
(res5_0 == res7_0).all()
(res5_0 == res8_0).all()
module9.set_input(**params)
module9.run()
res10 = intrp10.evaluate()()
res11 = intrp11.evaluate()()
res12 = intrp12.evaluate()()
res10 = vmobj_to_list(res10)
res11 = vmobj_to_list(res11)
res12 = vmobj_to_list(res12)
res9_0 = module9.get_output(0).asnumpy()
res10_0 = res10[0].asnumpy()
res11_0 = res11[0].asnumpy()
res12_0 = res12[0].asnumpy()
np.testing.assert_allclose(res9_0 ,res10_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_0 ,res11_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_0 ,res12_0, atol=1e-3, rtol=1e-3)
(res9_0 == res10_0).all()
(res9_0 == res11_0).all()
(res9_0 == res12_0).all()
module13.set_input(**params)
module13.run()
res14 = intrp14.evaluate()()
res15 = intrp15.evaluate()()
res16 = intrp16.evaluate()()
res14 = vmobj_to_list(res14)
res15 = vmobj_to_list(res15)
res16 = vmobj_to_list(res16)
res13_0 = module13.get_output(0).asnumpy()
res14_0 = res14[0].asnumpy()
res15_0 = res15[0].asnumpy()
res16_0 = res16[0].asnumpy()
np.testing.assert_allclose(res13_0 ,res14_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_0 ,res15_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_0 ,res16_0, atol=1e-3, rtol=1e-3)
(res13_0 == res14_0).all()
(res13_0 == res15_0).all()
(res13_0 == res16_0).all()
module17.set_input(**params)
module17.run()
res18 = intrp18.evaluate()()
res19 = intrp19.evaluate()()
res20 = intrp20.evaluate()()
res18 = vmobj_to_list(res18)
res19 = vmobj_to_list(res19)
res20 = vmobj_to_list(res20)
res17_0 = module17.get_output(0).asnumpy()
res18_0 = res18[0].asnumpy()
res19_0 = res19[0].asnumpy()
res20_0 = res20[0].asnumpy()
np.testing.assert_allclose(res17_0 ,res18_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_0 ,res19_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_0 ,res20_0, atol=1e-3, rtol=1e-3)
(res17_0 == res18_0).all()
(res17_0 == res19_0).all()
(res17_0 == res20_0).all()
module21.set_input(**params)
module21.run()
res22 = intrp22.evaluate()()
res23 = intrp23.evaluate()()
res24 = intrp24.evaluate()()
res22 = vmobj_to_list(res22)
res23 = vmobj_to_list(res23)
res24 = vmobj_to_list(res24)
res21_0 = module21.get_output(0).asnumpy()
res22_0 = res22[0].asnumpy()
res23_0 = res23[0].asnumpy()
res24_0 = res24[0].asnumpy()
np.testing.assert_allclose(res21_0 ,res22_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_0 ,res23_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_0 ,res24_0, atol=1e-3, rtol=1e-3)
(res21_0 == res22_0).all()
(res21_0 == res23_0).all()
(res21_0 == res24_0).all()

'''45: TVMFuncCall
44: _ZNSt17_Function_handlerIFvN3tvm7runtime7TVM
43: tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}::operator()(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*) const
42: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, tvm::runtime::String const&)
41: tvm::IRModule::FromExpr(tvm::RelayExpr const&, tvm::runtime::Map<tvm::GlobalVar, tvm::BaseFunc, void, void> const&, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void> const&)
40: tvm::IRModule::FromExprInContext(tvm::RelayExpr const&, tvm::runtime::Map<tvm::GlobalVar, tvm::BaseFunc, void, void> const&, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void> const&, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >)
39: tvm::IRModuleNode::Add(tvm::GlobalVar const&, tvm::BaseFunc const&, bool)
38: tvm::WarnIfMalformed(tvm::IRModule const&, tvm::relay::Function)
37: tvm::relay::FreeTypeVars(tvm::RelayExpr const&, tvm::IRModule const&)
36: tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)
35: void tvm::relay::ExpandDataflow<tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#2}, tvm::relay::ExpandDataflow<{lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1}>(tvm::RelayExpr, {lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1})::{lambda(tvm::RelayExpr const&)#1}>(tvm::RelayExpr, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#2}, tvm::relay::ExpandDataflow, tvm::relay::ExpandDataflow<{lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1}>(tvm::RelayExpr, {lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1})::{lambda(tvm::RelayExpr const&)#1}) [clone .isra.533]
34: tvm::relay::MixedModeVisitor::VisitLeaf(tvm::RelayExpr const&)
33: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
32: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
31: tvm::relay::TypeVarEVisitor::VisitExpr_(tvm::relay::FunctionNode const*)
30: tvm::relay::ExprVisitor::VisitExpr_(tvm::relay::FunctionNode const*)
29: tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)
28: void tvm::relay::ExpandDataflow<tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#2}, tvm::relay::ExpandDataflow<{lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1}>(tvm::RelayExpr, {lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1})::{lambda(tvm::RelayExpr const&)#1}>(tvm::RelayExpr, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#2}, tvm::relay::ExpandDataflow, tvm::relay::ExpandDataflow<{lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1}>(tvm::RelayExpr, {lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1})::{lambda(tvm::RelayExpr const&)#1}) [clone .isra.533]
27: tvm::relay::MixedModeVisitor::VisitLeaf(tvm::RelayExpr const&)
26: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
25: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
24: tvm::relay::TypeVarEVisitor::VisitExpr_(tvm::relay::LetNode const*)
23: tvm::relay::ExpandANormalForm(tvm::relay::LetNode const*, std::function<void (tvm::relay::LetNode const*)>, std::function<void (tvm::relay::LetNode const*)>)
22: _ZNSt17_Function_handlerIFvPKN3tvm5relay7LetNodeEEZNS1_15TypeVarEVis
21: tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)
20: void tvm::relay::ExpandDataflow<tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#2}, tvm::relay::ExpandDataflow<{lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1}>(tvm::RelayExpr, {lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1})::{lambda(tvm::RelayExpr const&)#1}>(tvm::RelayExpr, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#2}, tvm::relay::ExpandDataflow, tvm::relay::ExpandDataflow<{lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1}>(tvm::RelayExpr, {lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1})::{lambda(tvm::RelayExpr const&)#1}) [clone .isra.533]
19: tvm::relay::MixedModeVisitor::VisitLeaf(tvm::RelayExpr const&)
18: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
17: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
16: tvm::relay::TypeVarEVisitor::VisitExpr_(tvm::relay::FunctionNode const*)
15: tvm::relay::ExprVisitor::VisitExpr_(tvm::relay::FunctionNode const*)
14: tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)
13: void tvm::relay::ExpandDataflow<tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#2}, tvm::relay::ExpandDataflow<{lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1}>(tvm::RelayExpr, {lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1})::{lambda(tvm::RelayExpr const&)#1}>(tvm::RelayExpr, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#2}, tvm::relay::ExpandDataflow, tvm::relay::ExpandDataflow<{lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1}>(tvm::RelayExpr, {lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1})::{lambda(tvm::RelayExpr const&)#1}) [clone .isra.533]
12: tvm::relay::MixedModeVisitor::VisitLeaf(tvm::RelayExpr const&)
11: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
10: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9Rela
9: tvm::relay::TypeVarEVisitor::VisitExpr_(tvm::relay::LetNode const*)
8: tvm::relay::ExpandANormalForm(tvm::relay::LetNode const*, std::function<void (tvm::relay::LetNode const*)>, std::function<void (tvm::relay::LetNode const*)>)
7: _ZNSt17_Function_handlerIFvPKN3tvm5relay7LetNodeEEZNS1_15TypeVarEVis
6: tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)
5: void tvm::relay::ExpandDataflow<tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#2}, tvm::relay::ExpandDataflow<{lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1}>(tvm::RelayExpr, {lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1})::{lambda(tvm::RelayExpr const&)#1}>(tvm::RelayExpr, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#2}, tvm::relay::ExpandDataflow, tvm::relay::ExpandDataflow<{lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1}>(tvm::RelayExpr, {lambda(tvm::RelayExpr const&)#1}, tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)::{lambda(tvm::RelayExpr const&)#1})::{lambda(tvm::RelayExpr const&)#1}) [clone .isra.533]
4: tvm::relay::MixedModeVisitor::VisitLeaf(tvm::RelayExpr const&)
3: tvm::relay::ExprFunctor<void (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
2: _ZZN3tvm5relay11ExprFunctorIFvRKNS_9RelayEx
1: tvm::relay::TypeVarEVisitor::VisitExpr_(tvm::ConstructorNode const*)
0: tvm::IRModuleNode::LookupTypeDef(tvm::GlobalTypeVar const&) const

'''