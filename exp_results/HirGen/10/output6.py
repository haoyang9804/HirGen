import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
def vmobj_to_list(o, dtype="float32"):
    if isinstance(o, tvm.nd.NDArray):
        return [o]
    elif isinstance(o, tvm.runtime.container.ADT):
        result = []
        for f in o:
            result.extend(vmobj_to_list(f, dtype))
        return result
    else:
        return o


mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_185 = relay.var("var_185", dtype = "float32", shape = (5, 9, 4))#candidate|185|(5, 9, 4)|var|float32
uop_186 = relay.erf(var_185.astype('float32')) # shape=(5, 9, 4)
output = relay.Tuple([uop_186,])
output2 = relay.Tuple([uop_186,])
func_190 = relay.Function([var_185,], output)
mod['func_190'] = func_190
mod = relay.transform.InferType()(mod)
mutated_mod['func_190'] = func_190
mutated_mod = relay.transform.InferType()(mutated_mod)
var_191 = relay.var("var_191", dtype = "float32", shape = (5, 9, 4))#candidate|191|(5, 9, 4)|var|float32
func_190_call = mutated_mod.get_global_var('func_190')
call_192 = func_190_call(var_191)
output = call_192
func_193 = relay.Function([var_191], output)
mutated_mod['func_193'] = func_193
mutated_mod = relay.transform.InferType()(mutated_mod)
var_930 = relay.var("var_930", dtype = "float32", shape = (5, 6, 16))#candidate|930|(5, 6, 16)|var|float32
uop_931 = relay.asin(var_930.astype('float32')) # shape=(5, 6, 16)
func_190_call = mod.get_global_var('func_190')
func_193_call = mutated_mod.get_global_var('func_193')
const_935 = relay.const([-9.614269,3.859118,1.860780,-2.667846,-9.910303,-5.790479,1.078637,1.709265,-5.355600,5.093623,-7.753782,-3.511097,1.561053,0.910478,7.067157,-3.790258,0.368557,6.710833,3.821037,-1.523245,8.539857,-1.881924,-7.278080,3.188137,7.425652,-8.783334,-8.720392,6.092966,0.408190,-9.931896,5.089692,-7.266219,-2.926184,-5.050699,-6.736699,6.663931,3.417319,-6.362690,-7.107752,-7.789285,-7.262704,5.405215,-1.866257,-2.986942,2.277320,-9.833279,4.323246,9.236711,5.769613,6.483676,-7.305669,8.539538,1.945505,-0.220046,3.811843,7.928740,9.872221,1.211605,-6.781040,2.173427,-7.902909,-2.843661,6.384121,-3.334298,7.744328,-7.460208,-4.857656,8.092466,9.252065,7.378284,9.183910,0.333550,2.010461,-9.983479,-1.514729,-7.857623,3.761094,8.674261,-1.726268,1.471681,2.592280,-1.436628,0.822341,3.100427,8.614326,-8.791500,-8.571064,0.561299,-5.661273,2.160430,-5.922159,8.494608,-5.910706,-3.480920,-1.990855,8.279002,9.230736,-3.023603,1.339890,9.114361,-6.543492,9.067008,5.006425,0.798504,-5.632572,8.624245,-8.314467,1.693304,3.445257,8.057607,9.041680,0.365359,-8.266105,-3.757800,-7.640233,-4.722258,3.619507,5.135715,9.579757,-7.908971,2.732018,-2.447489,-6.569417,-2.730206,7.800379,-1.630514,-3.984814,0.636853,2.772886,0.744418,7.347190,-0.791777,2.585543,-0.476844,-1.096918,7.514325,-8.110832,0.381987,7.018742,-3.988683,-4.838327,3.325327,-9.046825,9.046137,-8.788604,4.718014,2.215170,-0.648393,6.976302,7.460011,7.304026,3.361931,-2.014167,4.739731,1.441653,-7.530441,-6.606646,-0.739019,-8.373317,-9.695560,-9.137804,-1.746721,5.416606,4.595552,1.466152,1.682261,3.910514,-5.335568,3.738979,3.268218,2.976924,-6.933425,3.050558,7.667397,0.495404,8.230749,7.418130,2.567674,-5.528155,-3.262604], dtype = "float32")#candidate|935|(180,)|const|float32
call_934 = relay.TupleGetItem(func_190_call(relay.reshape(const_935.astype('float32'), [5, 9, 4])), 0)
call_936 = relay.TupleGetItem(func_193_call(relay.reshape(const_935.astype('float32'), [5, 9, 4])), 0)
func_190_call = mod.get_global_var('func_190')
func_193_call = mutated_mod.get_global_var('func_193')
call_941 = relay.TupleGetItem(func_190_call(relay.reshape(const_935.astype('float32'), [5, 9, 4])), 0)
call_942 = relay.TupleGetItem(func_193_call(relay.reshape(const_935.astype('float32'), [5, 9, 4])), 0)
output = relay.Tuple([uop_931,call_934,const_935,call_941,])
output2 = relay.Tuple([uop_931,call_936,const_935,call_942,])
func_944 = relay.Function([var_930,], output)
mod['func_944'] = func_944
mod = relay.transform.InferType()(mod)
mutated_mod['func_944'] = func_944
mutated_mod = relay.transform.InferType()(mutated_mod)
var_945 = relay.var("var_945", dtype = "float32", shape = (5, 6, 16))#candidate|945|(5, 6, 16)|var|float32
func_944_call = mutated_mod.get_global_var('func_944')
call_946 = func_944_call(var_945)
output = call_946
func_947 = relay.Function([var_945], output)
mutated_mod['func_947'] = func_947
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1469 = relay.var("var_1469", dtype = "float32", shape = (12, 13, 9))#candidate|1469|(12, 13, 9)|var|float32
uop_1470 = relay.asinh(var_1469.astype('float32')) # shape=(12, 13, 9)
func_944_call = mod.get_global_var('func_944')
func_947_call = mutated_mod.get_global_var('func_947')
const_1477 = relay.const([7.667209,-8.313749,3.567721,-9.080860,3.390028,2.080410,-9.758018,3.180952,0.282664,7.390704,9.232378,-9.414647,-2.706333,4.970041,-9.312430,-7.545073,4.401785,-6.099309,8.711923,-0.204204,4.564558,9.586207,-2.381166,1.523954,-9.749736,2.237328,5.422600,7.175206,-7.201997,8.409824,4.005385,-3.590017,-5.465904,6.790460,-2.021659,-3.610595,-6.855094,5.058466,4.401199,-4.476926,-7.193907,3.891993,3.602709,7.948435,-6.166600,-4.834561,9.750506,-2.969362,8.667799,8.585056,-9.342273,9.424213,9.842968,6.468945,-9.264865,-0.483128,7.570570,-2.784872,-7.673932,-8.919342,-9.881669,4.267959,-7.379725,-0.631866,4.190979,7.879382,9.142204,-7.357621,6.661139,5.272816,3.571505,-5.141106,-7.145898,1.282147,6.401303,8.991678,-4.989825,1.160584,-1.177172,-8.620185,2.642645,5.218279,3.403726,7.358136,3.735445,-9.759774,7.665471,-3.225527,1.968816,-1.741345,8.223078,-9.363432,-6.115480,-8.136578,3.462133,8.322771,-5.839802,-4.730306,-5.132514,0.241856,-5.993151,1.708069,-2.233619,9.828625,4.300410,-2.421185,9.138085,3.877282,-4.829808,8.078895,-0.525514,-4.081611,2.695782,-1.730446,6.617979,-7.952455,3.925731,6.813110,6.073590,3.542876,-3.003455,5.439432,7.138093,-3.995330,3.917906,6.779368,-3.706465,-4.600137,-8.886829,0.901036,-7.855774,-8.855592,5.190413,-4.754063,-3.741509,-7.686649,8.657819,2.738211,-7.865998,2.445214,2.143472,8.055379,-3.210839,5.425180,1.395003,-1.055620,-2.893477,7.318429,-7.627319,-7.920589,-4.241072,-2.451576,3.315424,-1.073242,3.190620,2.586278,-2.349876,-2.098287,-2.425091,-1.263445,-5.746462,-9.009089,8.536071,9.620219,0.855771,-3.040061,-0.935485,4.904723,-8.986974,0.641074,2.323239,-1.115012,5.392072,2.039751,2.160460,8.850970,-6.926929,-3.641529,-2.347961,-1.153873,-0.012165,5.292599,6.391072,-5.962807,-6.679145,3.597721,-0.951336,3.457800,-0.832874,8.951609,-2.684688,6.958872,-8.470947,-3.472736,4.120724,-8.065050,-6.796289,-9.418898,6.738583,6.632833,-0.213128,7.458794,6.124610,7.057050,1.160848,1.555469,9.731454,7.997129,-6.209298,-0.666115,-4.169094,8.618919,-1.021388,-1.568775,-1.496134,4.093377,-5.286887,0.313929,-6.721235,7.775483,-9.371270,0.623220,5.424807,4.513766,9.139831,-7.984465,0.250416,-4.589629,0.139797,5.221294,-5.396546,0.194888,1.804030,-0.219318,9.885895,-7.953596,-6.738250,6.325044,-3.078369,-5.695179,0.750288,3.670662,-7.093233,-0.131516,-7.729758,-1.428362,5.785353,8.480763,-1.705101,-8.372959,8.428311,9.994741,-0.833958,1.823175,-8.378305,-6.562853,-5.242013,-1.606019,6.628504,5.361969,-5.879149,8.688086,1.898756,-6.527857,-1.803608,4.888359,0.540764,-5.167219,8.315925,-1.896356,4.290587,4.516432,-8.314918,-9.183132,9.308602,6.356089,4.684006,8.269689,9.828671,4.469034,-4.985810,4.031881,2.769734,5.538621,-8.944168,-8.439608,6.348689,6.229408,3.756375,1.705476,0.130197,-7.380501,7.720845,2.838261,-0.843724,9.849893,9.982655,-7.114159,-1.903943,-0.934180,-1.080959,-9.853206,-9.109937,8.145857,2.850261,-6.248205,-7.953452,-2.038232,-9.988156,-6.829801,-2.690565,2.173099,1.527665,-0.253756,-4.150879,-0.375413,-9.099020,-8.309803,-3.228553,-4.851812,-1.651957,5.923658,-2.336440,0.331298,7.162633,3.574923,5.956833,-4.836592,-0.264226,-2.399974,7.133599,7.187255,9.332524,-1.330899,-2.283814,0.191412,-1.940436,0.495321,-9.774285,5.442834,-4.024059,7.576251,-6.422084,-3.884719,3.886909,1.349013,0.307654,-3.291275,-3.918947,8.532621,2.476594,3.653703,9.341606,-5.040846,4.499645,2.561453,-7.369063,7.696662,-9.866541,-2.558484,-7.831522,-3.856776,-4.485149,-6.520561,-5.387451,0.389566,3.736740,7.834381,5.932043,-6.525470,2.248715,4.796785,6.900661,-6.315434,-7.502018,8.295151,-7.514671,9.296162,-5.876826,0.578041,0.682233,-2.331479,-5.306406,7.377566,-1.248758,-5.440852,6.132017,4.024298,5.756186,9.892919,-1.836698,-2.124544,-7.963312,-1.051526,-9.184672,4.142271,-1.856673,-5.052438,2.772970,7.452584,1.477567,-1.708242,9.087585,2.342636,6.461560,-6.956949,9.353243,5.266796,-3.621959,-6.793236,4.063129,-3.185739,-1.445592,-9.206102,-3.069259,0.545062,-7.003807,6.184334,4.742923,-3.025518,1.791891,9.311582,4.238197,-9.025891,-2.040555,-7.160180,2.132119,4.166053,0.801427,6.424183,7.349748,-4.663397,-2.464965,1.979601,-6.458402,0.022271,3.459246,7.121076,3.841105,-5.442309,-8.696654,5.933760,-9.904399,6.063237,8.685676,4.550358,1.513689,-4.451439,2.369138,-9.164062,9.194277,7.768644,-0.621553,9.259927,4.873350,4.031997,8.691516,6.346335,2.659694,8.226525,9.775165,-4.478628,-6.493540,0.587288,-6.306627,-8.401538,5.234558,-6.873253,-5.613424,3.012864,-6.912180,3.387135,6.798078,9.020369,-6.778291,8.434470,6.883198,-4.988167,-7.438169,-6.129981], dtype = "float32")#candidate|1477|(480,)|const|float32
call_1476 = relay.TupleGetItem(func_944_call(relay.reshape(const_1477.astype('float32'), [5, 6, 16])), 2)
call_1478 = relay.TupleGetItem(func_947_call(relay.reshape(const_1477.astype('float32'), [5, 6, 16])), 2)
func_190_call = mod.get_global_var('func_190')
func_193_call = mutated_mod.get_global_var('func_193')
call_1484 = relay.TupleGetItem(func_190_call(relay.reshape(call_1476.astype('float32'), [5, 9, 4])), 0)
call_1485 = relay.TupleGetItem(func_193_call(relay.reshape(call_1476.astype('float32'), [5, 9, 4])), 0)
func_190_call = mod.get_global_var('func_190')
func_193_call = mutated_mod.get_global_var('func_193')
call_1490 = relay.TupleGetItem(func_190_call(relay.reshape(call_1484.astype('float32'), [5, 9, 4])), 0)
call_1491 = relay.TupleGetItem(func_193_call(relay.reshape(call_1484.astype('float32'), [5, 9, 4])), 0)
func_944_call = mod.get_global_var('func_944')
func_947_call = mutated_mod.get_global_var('func_947')
call_1496 = relay.TupleGetItem(func_944_call(relay.reshape(const_1477.astype('float32'), [5, 6, 16])), 1)
call_1497 = relay.TupleGetItem(func_947_call(relay.reshape(const_1477.astype('float32'), [5, 6, 16])), 1)
output = relay.Tuple([uop_1470,call_1476,const_1477,call_1484,call_1490,call_1496,])
output2 = relay.Tuple([uop_1470,call_1478,const_1477,call_1485,call_1491,call_1497,])
func_1500 = relay.Function([var_1469,], output)
mod['func_1500'] = func_1500
mod = relay.transform.InferType()(mod)
var_1501 = relay.var("var_1501", dtype = "float32", shape = (12, 13, 9))#candidate|1501|(12, 13, 9)|var|float32
output = func_1500(var_1501)
func_1502 = relay.Function([var_1501], output)
mutated_mod['func_1502'] = func_1502
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1668 = relay.var("var_1668", dtype = "float64", shape = (7, 9, 15))#candidate|1668|(7, 9, 15)|var|float64
uop_1669 = relay.log10(var_1668.astype('float64')) # shape=(7, 9, 15)
output = relay.Tuple([uop_1669,])
output2 = relay.Tuple([uop_1669,])
func_1673 = relay.Function([var_1668,], output)
mod['func_1673'] = func_1673
mod = relay.transform.InferType()(mod)
mutated_mod['func_1673'] = func_1673
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1674 = relay.var("var_1674", dtype = "float64", shape = (7, 9, 15))#candidate|1674|(7, 9, 15)|var|float64
func_1673_call = mutated_mod.get_global_var('func_1673')
call_1675 = func_1673_call(var_1674)
output = call_1675
func_1676 = relay.Function([var_1674], output)
mutated_mod['func_1676'] = func_1676
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1733 = relay.var("var_1733", dtype = "float32", shape = ())#candidate|1733|()|var|float32
const_1734 = relay.const([[[3.879042,-7.219219,-1.512752,-9.564201,8.568646,3.888753,7.533210]],[[0.934237,-7.594474,4.820083,-2.827819,-8.125548,1.678553,8.899667]],[[6.768873,-0.995268,9.522954,-4.361536,-5.934313,-7.561842,0.820422]],[[-3.224668,7.948906,-0.666368,-7.329209,0.931213,3.755918,6.487225]],[[3.733600,-1.398214,1.872821,3.773891,6.642329,2.310854,-2.144195]],[[6.113904,0.777401,-2.796355,-4.427092,-4.380956,-1.503089,7.318536]],[[1.174384,-7.336841,1.099008,9.936479,5.863679,8.459015,-6.029888]],[[4.987059,-4.747182,-2.520794,-6.258504,5.510714,7.781556,1.318526]],[[2.684126,5.067242,2.381649,8.442416,-5.452620,-3.059315,6.696878]],[[3.339808,-4.096987,8.060097,3.106260,-1.683768,-1.414357,-4.643909]],[[2.436529,-7.640258,5.273223,0.285522,6.576053,7.171956,3.877964]]], dtype = "float32")#candidate|1734|(11, 1, 7)|const|float32
bop_1735 = relay.minimum(var_1733.astype('float32'), const_1734.astype('float32')) # shape=(11, 1, 7)
bop_1738 = relay.greater_equal(bop_1735.astype('bool'), var_1733.astype('bool')) # shape=(11, 1, 7)
func_190_call = mod.get_global_var('func_190')
func_193_call = mutated_mod.get_global_var('func_193')
const_1745 = relay.const([2.372882,5.266906,0.305215,-3.174247,-9.778334,-1.441615,2.009288,3.391066,-1.145097,9.264605,2.634223,-9.992000,2.670300,-7.336007,-4.397081,-2.779242,-4.289695,-8.347456,-8.795237,6.171685,-9.787120,0.812265,-3.519951,4.630959,4.674602,0.691387,3.087846,4.971601,-9.751542,2.380045,8.598055,-5.527931,0.559898,4.179835,0.946073,6.080927,-4.972977,2.187877,4.561077,8.858135,3.212733,1.009478,-7.711757,-8.013171,-1.246852,-8.824880,2.311578,-7.557727,2.583223,0.806473,-6.143256,1.648925,8.160851,-8.729889,2.321434,-7.901730,-4.959936,9.538690,-1.859690,8.843451,9.622019,9.842005,4.763213,1.688524,3.462114,7.918952,5.120116,0.866599,-2.738027,9.436804,1.888415,-3.862060,-9.589370,8.667826,0.063643,5.225660,-5.811339,-2.246131,-6.542095,-1.010219,-5.705498,-5.595582,-9.724049,-6.406571,7.118909,-3.037705,7.873362,-4.087956,-3.510623,8.972609,-9.109727,-4.162976,3.758253,-9.684116,8.928589,5.063354,2.346300,6.732607,8.801700,-6.918956,-3.137744,-9.670680,9.975600,7.436990,-9.490463,-5.575281,5.802272,9.700767,9.777375,2.000096,-2.808857,-0.602210,-7.306190,-3.163565,0.545204,-3.624556,2.110591,-9.324001,8.760074,7.155186,-7.576764,-8.882559,-9.592200,-2.012308,-9.551066,-5.984396,-9.489005,-4.337211,9.888675,7.659266,4.460435,-7.396376,-6.429406,8.192170,-0.965513,4.332359,-5.968250,-0.757161,5.650627,-3.048972,-2.034773,-7.095356,7.627808,7.423904,7.624499,-9.611888,-4.425788,-8.190389,4.166494,-7.908367,-1.193912,-2.248415,-6.527113,5.835564,3.063949,0.152095,3.988538,-9.860290,-5.828606,4.949457,-1.575393,-0.965941,-7.350938,1.488833,-7.695471,6.263953,8.203369,-2.285668,-8.688978,1.490457,2.689871,-5.932580,8.214622,-4.624195,-2.006146,8.517896,6.170415,-6.802875,-7.851268,2.702722], dtype = "float32")#candidate|1745|(180,)|const|float32
call_1744 = relay.TupleGetItem(func_190_call(relay.reshape(const_1745.astype('float32'), [5, 9, 4])), 0)
call_1746 = relay.TupleGetItem(func_193_call(relay.reshape(const_1745.astype('float32'), [5, 9, 4])), 0)
uop_1750 = relay.atanh(bop_1735.astype('float64')) # shape=(11, 1, 7)
output = relay.Tuple([bop_1738,call_1744,const_1745,uop_1750,])
output2 = relay.Tuple([bop_1738,call_1746,const_1745,uop_1750,])
func_1752 = relay.Function([var_1733,], output)
mod['func_1752'] = func_1752
mod = relay.transform.InferType()(mod)
var_1753 = relay.var("var_1753", dtype = "float32", shape = ())#candidate|1753|()|var|float32
output = func_1752(var_1753)
func_1754 = relay.Function([var_1753], output)
mutated_mod['func_1754'] = func_1754
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2255 = relay.var("var_2255", dtype = "int64", shape = ())#candidate|2255|()|var|int64
const_2256 = relay.const([[[-10,2,-10,-1],[-7,-5,-8,-10],[-10,-7,5,9],[-10,-6,8,2],[3,-5,3,7],[4,9,-4,-1],[3,5,4,7],[-10,6,6,-5]],[[3,4,-7,-6],[-3,-5,5,1],[5,-5,1,4],[4,9,-7,-1],[-6,8,7,6],[-8,-9,8,8],[-8,-4,-4,2],[8,10,-6,8]],[[7,5,10,4],[-4,-9,-2,8],[4,1,-2,-6],[4,8,8,-2],[-3,-6,8,-9],[4,-7,-8,10],[-8,-10,4,3],[-3,-10,8,-3]],[[-8,-2,-3,-1],[2,5,2,2],[6,2,-7,10],[7,-8,-1,-6],[3,5,2,3],[3,-3,-3,7],[-4,-9,-6,-10],[8,-10,10,8]],[[-7,-9,1,2],[-2,-9,8,4],[4,5,-4,-5],[-3,-3,-4,-8],[6,-7,-3,-2],[-3,-10,6,-5],[9,4,-4,-8],[-5,-2,2,7]],[[9,-6,4,7],[-1,-10,-5,1],[6,-9,-4,9],[-6,8,1,7],[-3,4,2,-7],[-10,-2,-4,1],[8,-10,7,-4],[10,-2,-1,-3]],[[-3,-4,-8,-10],[7,-5,6,-1],[-6,-9,-2,-5],[-8,5,5,4],[5,-4,6,-3],[-9,6,-4,4],[-1,2,-7,-6],[-3,4,9,7]],[[3,-8,7,-4],[10,6,10,-4],[2,-4,3,3],[3,4,-5,-7],[-4,9,-4,10],[4,8,3,-5],[-9,3,9,8],[3,-3,4,-7]],[[2,-10,1,-10],[5,9,3,-2],[-2,-4,2,10],[-5,6,-10,-8],[8,-1,-9,4],[-1,1,-8,6],[-9,-9,-4,8],[2,3,-6,-6]],[[-10,-5,-8,-10],[-3,-4,-5,3],[1,-4,-2,8],[-6,-8,1,-9],[1,-7,-3,7],[-9,9,1,9],[5,-9,-8,1],[-8,-8,-2,-8]],[[-1,1,6,-9],[9,1,1,2],[-5,-1,9,-9],[-2,6,4,-9],[10,8,-8,-1],[7,8,3,-2],[-2,1,8,10],[5,-5,9,5]],[[-6,5,9,2],[9,-4,2,1],[10,7,10,-7],[5,-5,8,4],[-4,-9,-7,9],[-10,8,-8,6],[-9,-5,2,5],[5,-2,1,-8]],[[-6,-7,7,9],[-8,9,-6,-5],[10,5,3,-1],[-1,3,10,-6],[-8,9,9,-3],[7,-5,9,-9],[10,-4,5,1],[-8,-7,-6,5]]], dtype = "int64")#candidate|2256|(13, 8, 4)|const|int64
bop_2257 = relay.left_shift(var_2255.astype('int64'), const_2256.astype('int64')) # shape=(13, 8, 4)
bop_2264 = relay.minimum(var_2255.astype('uint32'), const_2256.astype('uint32')) # shape=(13, 8, 4)
output = relay.Tuple([bop_2257,bop_2264,])
output2 = relay.Tuple([bop_2257,bop_2264,])
func_2279 = relay.Function([var_2255,], output)
mod['func_2279'] = func_2279
mod = relay.transform.InferType()(mod)
var_2280 = relay.var("var_2280", dtype = "int64", shape = ())#candidate|2280|()|var|int64
output = func_2279(var_2280)
func_2281 = relay.Function([var_2280], output)
mutated_mod['func_2281'] = func_2281
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2675 = relay.var("var_2675", dtype = "uint8", shape = ())#candidate|2675|()|var|uint8
var_2676 = relay.var("var_2676", dtype = "uint8", shape = (16, 14, 1))#candidate|2676|(16, 14, 1)|var|uint8
bop_2677 = relay.add(var_2675.astype('uint8'), var_2676.astype('uint8')) # shape=(16, 14, 1)
output = bop_2677
output2 = bop_2677
func_2717 = relay.Function([var_2675,var_2676,], output)
mod['func_2717'] = func_2717
mod = relay.transform.InferType()(mod)
var_2718 = relay.var("var_2718", dtype = "uint8", shape = ())#candidate|2718|()|var|uint8
var_2719 = relay.var("var_2719", dtype = "uint8", shape = (16, 14, 1))#candidate|2719|(16, 14, 1)|var|uint8
output = func_2717(var_2718,var_2719,)
func_2720 = relay.Function([var_2718,var_2719,], output)
mutated_mod['func_2720'] = func_2720
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3094 = relay.var("var_3094", dtype = "float64", shape = (9, 11, 9))#candidate|3094|(9, 11, 9)|var|float64
uop_3095 = relay.tan(var_3094.astype('float64')) # shape=(9, 11, 9)
func_190_call = mod.get_global_var('func_190')
func_193_call = mutated_mod.get_global_var('func_193')
var_3102 = relay.var("var_3102", dtype = "float32", shape = (180,))#candidate|3102|(180,)|var|float32
call_3101 = relay.TupleGetItem(func_190_call(relay.reshape(var_3102.astype('float32'), [5, 9, 4])), 0)
call_3103 = relay.TupleGetItem(func_193_call(relay.reshape(var_3102.astype('float32'), [5, 9, 4])), 0)
func_2717_call = mod.get_global_var('func_2717')
func_2720_call = mutated_mod.get_global_var('func_2720')
var_3131 = relay.var("var_3131", dtype = "uint8", shape = ())#candidate|3131|()|var|uint8
var_3132 = relay.var("var_3132", dtype = "uint8", shape = (224,))#candidate|3132|(224,)|var|uint8
call_3130 = func_2717_call(relay.reshape(var_3131.astype('uint8'), []), relay.reshape(var_3132.astype('uint8'), [16, 14, 1]), )
call_3133 = func_2717_call(relay.reshape(var_3131.astype('uint8'), []), relay.reshape(var_3132.astype('uint8'), [16, 14, 1]), )
uop_3134 = relay.sin(uop_3095.astype('float64')) # shape=(9, 11, 9)
func_1673_call = mod.get_global_var('func_1673')
func_1676_call = mutated_mod.get_global_var('func_1676')
var_3144 = relay.var("var_3144", dtype = "float64", shape = (945,))#candidate|3144|(945,)|var|float64
call_3143 = relay.TupleGetItem(func_1673_call(relay.reshape(var_3144.astype('float64'), [7, 9, 15])), 0)
call_3145 = relay.TupleGetItem(func_1676_call(relay.reshape(var_3144.astype('float64'), [7, 9, 15])), 0)
uop_3157 = relay.sinh(uop_3134.astype('float32')) # shape=(9, 11, 9)
func_1500_call = mod.get_global_var('func_1500')
func_1502_call = mutated_mod.get_global_var('func_1502')
var_3164 = relay.var("var_3164", dtype = "float32", shape = (1404,))#candidate|3164|(1404,)|var|float32
call_3163 = relay.TupleGetItem(func_1500_call(relay.reshape(var_3164.astype('float32'), [12, 13, 9])), 4)
call_3165 = relay.TupleGetItem(func_1502_call(relay.reshape(var_3164.astype('float32'), [12, 13, 9])), 4)
uop_3167 = relay.log10(uop_3157.astype('float64')) # shape=(9, 11, 9)
bop_3175 = relay.bitwise_or(uop_3167.astype('uint16'), relay.reshape(uop_3095.astype('uint16'), relay.shape_of(uop_3167))) # shape=(9, 11, 9)
var_3179 = relay.var("var_3179", dtype = "float64", shape = (9, 11, 9))#candidate|3179|(9, 11, 9)|var|float64
bop_3180 = relay.floor_mod(uop_3167.astype('float64'), relay.reshape(var_3179.astype('float64'), relay.shape_of(uop_3167))) # shape=(9, 11, 9)
output = relay.Tuple([call_3101,var_3102,call_3130,var_3131,var_3132,call_3143,var_3144,call_3163,var_3164,bop_3175,bop_3180,])
output2 = relay.Tuple([call_3103,var_3102,call_3133,var_3131,var_3132,call_3145,var_3144,call_3165,var_3164,bop_3175,bop_3180,])
func_3184 = relay.Function([var_3094,var_3102,var_3131,var_3132,var_3144,var_3164,var_3179,], output)
mod['func_3184'] = func_3184
mod = relay.transform.InferType()(mod)
mutated_mod['func_3184'] = func_3184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3184_call = mutated_mod.get_global_var('func_3184')
var_3186 = relay.var("var_3186", dtype = "float64", shape = (9, 11, 9))#candidate|3186|(9, 11, 9)|var|float64
var_3187 = relay.var("var_3187", dtype = "float32", shape = (180,))#candidate|3187|(180,)|var|float32
var_3188 = relay.var("var_3188", dtype = "uint8", shape = ())#candidate|3188|()|var|uint8
var_3189 = relay.var("var_3189", dtype = "uint8", shape = (224,))#candidate|3189|(224,)|var|uint8
var_3190 = relay.var("var_3190", dtype = "float64", shape = (945,))#candidate|3190|(945,)|var|float64
var_3191 = relay.var("var_3191", dtype = "float32", shape = (1404,))#candidate|3191|(1404,)|var|float32
var_3192 = relay.var("var_3192", dtype = "float64", shape = (9, 11, 9))#candidate|3192|(9, 11, 9)|var|float64
call_3185 = func_3184_call(var_3186,var_3187,var_3188,var_3189,var_3190,var_3191,var_3192,)
output = call_3185
func_3193 = relay.Function([var_3186,var_3187,var_3188,var_3189,var_3190,var_3191,var_3192,], output)
mutated_mod['func_3193'] = func_3193
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3677 = relay.var("var_3677", dtype = "float64", shape = (14, 13, 12))#candidate|3677|(14, 13, 12)|var|float64
const_3678 = relay.const([[[7.265638,6.649047,8.619497,7.976999,0.246486,-2.696415,-1.147277,2.007967,-5.862916,3.775528,-6.110379,3.088505],[0.351542,-5.125565,0.652215,9.037132,-5.648298,-0.119795,-3.791874,0.370588,-0.540323,1.730988,1.654213,-8.084245],[6.645526,-2.303750,3.430620,8.739389,-6.148370,-6.178432,-3.842670,-1.864263,-5.696053,-8.042466,-4.513393,3.617791],[7.553096,3.719609,7.671069,-7.945808,-9.085434,-7.654368,-9.034061,-2.501235,7.947381,-3.480175,-0.891063,-2.474761],[0.004658,2.134831,-8.411382,0.341175,5.033534,0.770042,-5.483211,9.403963,-2.134244,1.580292,-3.156746,6.557975],[-9.947053,4.252259,-7.419910,-5.894011,-1.497452,-6.486183,-9.069265,-8.916623,-7.013857,-5.073726,9.965274,3.925860],[4.762823,-1.787829,-1.312892,4.954309,-5.448410,1.074256,-1.354519,-1.478092,-6.965312,-6.836048,-1.109101,-1.456085],[-4.146608,-5.872559,8.932283,9.434328,-8.505613,-9.285855,-5.158589,2.898031,-8.629993,5.719305,-5.143140,4.687293],[-5.133548,8.635295,-6.523817,-5.001323,-4.602632,-1.084101,-3.028277,-1.400776,7.068357,-5.802272,-3.533379,-0.145060],[-9.956808,-2.115815,-2.235551,4.554164,6.860000,8.246391,1.156881,-9.635885,-6.897412,5.983674,-8.586078,9.178856],[-8.681506,3.659028,-7.217969,4.762892,-5.467538,5.644863,7.429058,3.641681,-0.497161,-1.220030,-5.394937,1.898745],[4.051765,-1.130252,6.989513,5.549700,7.678512,-6.682239,9.241013,-3.780635,9.692995,-7.059014,6.390735,9.443192],[-0.193011,1.980230,-4.674561,-0.466787,9.288194,-1.206474,-1.646843,-3.856620,-9.936720,4.850374,-0.777828,5.926993]],[[-9.532294,-0.802886,-5.930476,6.133664,6.002905,9.686638,0.543417,4.517802,-5.016532,1.682189,3.623261,-4.758333],[7.245380,6.706976,-7.585761,4.075110,-3.746577,-8.527101,-8.458272,-0.682104,-0.732660,3.136016,0.592923,-5.373187],[-3.381616,-3.281695,2.948569,-4.621531,4.478323,-7.810487,-9.171294,-6.515974,3.729180,3.135428,-4.701656,3.493045],[-9.324276,-6.551420,7.079995,3.095619,1.094744,7.358037,2.881864,2.782740,-8.795617,-1.019407,9.053946,6.123144],[8.643838,-7.438939,-0.864171,-9.760361,7.689818,-8.407047,8.614887,-8.747026,-0.543064,7.354245,9.762978,-8.808758],[-7.983692,8.571983,5.162092,-4.803454,5.909099,-8.841927,-1.401709,-9.388270,9.862818,-8.105259,4.232146,9.130700],[-3.597663,1.681870,2.469792,8.209189,-5.158911,-5.476070,-1.084977,-3.592464,3.475969,9.517675,4.776714,5.744136],[7.058228,7.226612,4.815643,-4.744242,1.639237,9.374930,7.002844,-8.549037,2.540510,2.004723,6.076189,-8.550808],[-8.602320,-1.648808,6.546137,-9.461086,5.178529,2.922060,7.265162,-4.631583,8.674898,4.879084,3.180307,-1.620058],[-1.551877,-8.679458,2.319039,8.372584,-3.444670,9.236334,7.225538,-9.216364,2.249579,4.897670,9.819238,0.192328],[-6.919662,7.696876,-8.815512,-5.711214,0.406810,-0.527503,6.313388,-1.152730,0.592534,-2.878199,-3.900483,7.524142],[-2.861978,-0.081448,4.332764,4.166715,-7.919171,5.839830,-1.240890,-0.143475,-1.400996,3.627526,-2.688096,5.320326],[0.236829,-5.285913,4.514022,-7.354123,6.624550,6.003910,-5.089846,-9.496843,-3.050974,-7.811235,1.146916,-9.434558]],[[7.700210,-4.772918,-3.429341,-1.927827,2.551641,0.391975,-6.636135,-5.354841,-6.927927,-8.052565,-4.158424,4.581832],[-0.098444,-9.571515,-0.217991,2.825018,-9.785477,7.358822,-9.046017,-4.821437,3.485328,-8.648597,6.744856,3.145161],[-0.306657,2.115447,-0.778010,8.582968,-3.730406,-8.341088,4.152614,-9.009287,1.869395,-8.709883,6.450276,2.715535],[-0.220780,4.964240,7.781590,5.655032,-2.980850,-7.181980,4.824487,-7.238266,5.324628,6.505018,-5.004538,-7.578867],[8.392790,0.760694,-1.563617,7.688677,-4.885414,-9.062439,1.867258,-6.737665,-3.975679,-4.898414,-0.379394,8.659198],[-4.229810,-6.615043,0.544320,-0.010477,8.091652,4.934915,5.226297,-1.373180,8.547151,4.342152,-8.360895,7.050390],[-6.313826,9.571583,-8.635673,9.998996,2.539703,0.620515,-1.252254,9.968568,-3.722316,1.945686,-6.287670,7.598351],[9.788070,-8.287443,-9.588366,-5.985368,-3.523397,-7.647948,7.423275,9.454149,5.971964,1.827064,-5.293244,-0.861713],[1.504304,-6.486255,3.492195,-0.941413,-4.408646,2.223880,-7.753884,-0.345792,5.730673,0.335374,-3.537830,4.352955],[2.832564,3.644088,9.009399,-8.105800,-4.802098,-8.688637,2.207437,-2.242120,-2.816250,-2.961407,2.854056,4.843674],[8.447491,7.011756,0.553652,-8.245683,5.542448,-1.817056,3.444630,-8.656871,-4.114823,5.238847,9.458053,1.924259],[5.476888,-1.230225,-4.493310,4.858091,-0.657979,8.196158,3.843491,-5.176524,-3.130191,-3.237394,-9.305348,3.753864],[2.234283,-4.267329,-7.775544,-4.113900,9.030568,-0.140638,-1.783809,-9.269239,5.846440,-5.553162,1.438108,9.137635]],[[-8.620401,7.102629,-1.421338,3.941112,5.603025,-1.777862,1.668207,-4.169687,6.265940,7.914328,-2.386735,-4.987592],[1.833704,3.124349,-3.101118,-7.737092,-9.320896,2.653798,-0.381960,-4.851181,-0.861232,9.666777,-1.278839,-4.642313],[5.034065,4.182011,5.145865,5.521432,8.350972,0.127466,6.572493,-6.774741,5.494255,5.106069,-8.423790,-7.023550],[-2.803442,-8.906829,3.716316,4.547179,-4.662646,-0.966418,-5.673101,3.391673,-8.983684,5.887002,-7.028840,8.113271],[6.425959,-2.075083,0.716956,-2.102624,-8.761453,-1.502199,-9.191337,-4.222440,-3.222452,-4.817718,-9.633437,-3.549049],[5.353628,5.464590,1.282057,3.989911,5.331512,-9.212992,-3.448196,-9.999612,-3.323537,-9.522804,-1.806718,0.019187],[-1.791622,-4.761545,5.295745,3.623065,-2.094773,1.328663,-4.212507,6.078607,-8.393252,-4.777985,-7.824176,6.886078],[0.741280,3.520495,9.268194,-2.200912,7.281547,-1.291729,-0.021680,3.272946,-5.848457,-0.763106,6.468665,-4.238228],[-7.729037,0.883623,-4.875423,2.096633,-5.074868,0.737714,3.030500,5.049197,-3.731641,-0.924924,-4.265424,-7.467080],[-8.429109,9.003448,-0.729154,1.435941,-8.637305,6.511638,4.258792,-6.207870,-7.475774,7.628769,9.329753,-2.885784],[3.904662,-0.438099,-1.070917,-3.014619,-7.350631,-5.813516,-0.047747,1.099676,-4.190549,3.458953,7.398827,-9.059971],[3.445318,8.435746,-1.423693,1.604750,-4.175718,6.156909,-4.899672,1.716894,0.986050,3.160305,2.394172,-7.846060],[4.469725,-2.802907,9.444198,-7.252911,-2.967724,-7.106193,0.976910,-9.572205,4.837904,-2.834399,-7.044665,-4.163272]],[[-5.390032,7.178301,-6.932154,1.444022,9.709087,-8.399005,-1.722309,9.778949,0.416611,-6.232900,0.692781,-2.316189],[-5.316660,-1.191189,4.244440,6.338003,-3.695260,1.366616,-4.137701,6.472272,-3.353696,1.434801,-8.183453,-5.782327],[-2.071375,9.817709,7.818835,-5.983428,-3.996045,-5.105083,-4.833469,3.205346,-8.564058,8.497703,-1.576054,-3.391318],[6.198260,1.346750,1.215938,4.437437,-9.484591,9.209186,-7.877329,-0.526218,2.358670,-6.891555,-8.455899,-2.842050],[8.914723,2.093201,-3.001606,-8.324336,3.608937,-5.203027,2.990056,-0.509114,-5.838186,-5.414436,-5.204528,3.719480],[0.720116,9.964213,-9.914771,6.187924,1.502806,7.390080,-7.321996,3.406374,1.112402,-5.316208,3.286595,9.325481],[3.740258,7.090481,-4.838333,5.500535,-3.000451,3.890543,-1.145802,-8.685027,7.392681,-5.623435,-6.982126,-3.247173],[2.413070,-4.031623,4.825919,-6.562434,6.040530,-5.832964,-0.034302,-7.111123,-1.069140,6.010630,-0.504519,8.831472],[2.392683,0.163788,2.782817,-6.212950,0.592579,-5.580101,-0.151117,0.252463,-1.429197,5.742482,5.809879,5.072562],[7.723677,-7.486540,0.286713,2.021867,2.572122,-5.028151,-7.646461,9.076947,7.970161,4.192960,-6.387914,-3.943879],[-4.665614,-5.705947,4.814954,-0.957696,-3.573695,-2.107134,-7.491881,9.148128,-0.995960,-9.421620,-0.983329,-2.165836],[3.297984,0.983299,-6.119160,-9.574908,2.397547,-6.678869,9.569005,6.147099,-5.902229,8.563004,3.157188,-4.348403],[-2.622916,2.944757,0.917001,-2.284845,6.983000,-2.970938,0.549037,-0.723794,5.787100,2.065735,7.798261,1.111137]],[[-8.822569,-1.399802,1.086811,-4.037026,-9.998241,-9.278984,5.128213,-1.843109,-6.507371,6.193937,-2.834312,-8.121268],[-6.380148,-9.491372,-5.689958,5.824362,-7.871477,-1.683843,5.824866,9.512572,-9.127726,4.064316,-4.837632,-4.202935],[-8.311693,4.190093,-5.154443,2.883314,4.855421,-2.511083,5.488277,4.891674,-2.439525,5.832211,-0.928398,0.860678],[-2.672351,-2.675833,-2.677912,3.669367,-6.651940,3.249500,-9.556542,-1.145776,-1.649123,0.640111,-1.740093,9.519760],[-7.387300,-6.515020,0.141178,-8.813248,-5.651168,4.357813,5.560525,-6.488661,9.103499,-4.801170,-7.708127,6.597523],[-7.128608,-7.185829,3.484530,4.397679,-6.686690,-0.168788,5.234012,3.543382,-0.581509,-9.110322,9.360085,3.483349],[1.267063,-6.168776,-9.076906,-1.725303,-0.301706,-9.769821,0.096388,3.459228,5.608640,5.794586,-0.288491,2.309140],[6.752112,2.153597,-9.612803,9.158037,-0.930638,4.575780,-1.161398,7.342491,-6.735629,-0.272174,2.548954,4.820830],[-1.133107,5.166228,0.009281,1.056925,4.030792,8.910726,3.723483,3.199462,-1.459867,0.666602,-2.272867,7.182179],[-9.693888,-0.240456,7.621963,-4.976840,5.080315,6.599123,-8.590624,2.548325,5.154065,2.513431,-5.624842,-2.920835],[3.878289,9.364816,0.164853,-6.720935,-5.801381,4.646579,-0.505032,4.632365,-1.554516,-7.938694,1.480941,-0.846353],[-5.051715,-5.717259,-4.754203,6.978390,-7.893507,1.143202,4.046586,6.737985,7.792746,-5.032456,-5.780089,9.262445],[-2.571338,-7.543993,8.797866,-9.200634,-8.190409,-6.114181,1.747833,9.402939,-1.536270,1.877102,-9.349767,-5.876068]],[[-5.411384,-6.627789,-8.336024,0.075578,5.339959,2.409551,-9.004407,6.536475,-7.960081,8.016349,1.777690,7.517820],[4.191068,-5.805729,5.017053,2.858641,9.465569,-3.143462,1.480695,-8.469210,1.874220,-1.839313,0.499214,3.328784],[5.130806,5.413392,9.283011,0.766364,-2.964914,-8.913581,-3.034934,7.160414,0.736464,8.945869,6.489939,-5.305012],[7.131821,-6.843679,-9.781610,-8.778374,-6.681167,-4.873351,-7.545057,-5.233377,4.739583,-1.313238,1.226156,5.313320],[-2.885697,8.577766,-5.277873,-8.872796,-0.171121,-3.255359,-9.027072,2.997407,2.587336,-1.375465,3.327469,-0.516324],[-3.132653,-7.680429,-4.201676,-0.197274,-0.923478,-6.916872,6.225113,5.581080,8.324996,-6.980517,-4.320439,-7.223694],[-0.587049,-8.457425,8.274544,-8.127262,9.763835,2.753145,4.536512,-9.197497,-9.138128,-6.082319,-3.149286,5.675289],[-0.746401,2.490691,2.468257,-6.188865,8.957316,9.823308,2.559524,-7.289231,-6.010383,-0.078047,5.137862,-0.756389],[8.938540,-9.316432,-5.455578,8.927217,6.440788,1.541446,-1.217569,-5.762040,-7.901506,-3.593817,-7.688424,0.081954],[1.426390,-7.939286,-6.584101,-0.896783,5.820599,3.728894,-0.134252,-0.439628,-1.726143,4.900237,8.984881,-4.685044],[8.747310,4.403606,3.844675,4.305190,-8.498638,7.968821,-3.750989,-8.264786,-8.861376,4.923238,-0.607829,1.933085],[3.219275,0.234727,-3.884922,4.478449,2.004953,8.843319,8.352006,9.215676,-1.749796,-9.304381,-2.942821,9.392999],[1.957511,9.286072,-8.401769,-9.329772,2.116637,9.687019,5.241610,-9.842383,3.714694,2.572375,-4.812046,1.825072]],[[7.426754,9.083714,-4.084099,5.166979,2.082814,-2.022844,7.738022,5.340400,-5.754508,-9.883024,4.904001,-1.860827],[7.408866,3.487903,-2.530149,-5.748535,9.979970,3.019790,-2.099182,1.228424,-3.649905,-7.758430,-1.350404,-6.709503],[-7.898532,-4.081618,9.757009,-4.304495,-4.629193,-6.059646,-2.147485,-9.310360,-4.584290,-4.398948,-3.121312,-8.890208],[2.470422,-5.469552,9.921628,-9.047690,-1.788113,6.878073,-7.420887,-0.354643,-4.637811,0.892288,1.635016,-0.317915],[-9.346462,0.029559,-8.490262,6.586215,-9.707808,1.748841,-6.218380,7.515394,-8.330783,1.630328,-8.400413,6.499469],[-1.832766,-1.186014,-1.520812,-0.208878,3.658918,-5.025070,6.915592,4.240702,6.515937,0.453395,-4.370003,-3.901729],[-6.878758,4.936575,7.315764,4.711193,-7.325210,-7.440765,-7.475303,2.248438,-5.117744,6.974293,6.971876,1.427069],[3.381268,-6.801601,6.110698,-6.303724,-3.591592,-6.539238,-2.344944,-0.032675,0.478913,5.759545,8.369034,4.257017],[-3.044400,3.463568,3.370248,5.402096,-5.350889,8.014027,-0.280700,7.614306,4.580612,2.562754,8.003454,-0.460445],[-2.473272,-8.389616,-3.610921,9.311339,-7.273633,-7.586308,0.491271,-3.751636,-6.919521,8.764542,7.500389,7.611764],[-7.780603,-9.456119,-3.135860,3.640764,-2.388152,-6.312388,4.822702,-3.657666,9.924083,-3.974634,-5.289555,-8.469736],[-7.107973,3.992634,-7.012106,-0.385530,0.533248,-3.541459,-1.667001,-3.061624,9.295045,9.260280,-9.871345,-2.201453],[9.668397,-1.927209,2.028867,-0.746991,-2.577219,1.868403,-5.973798,-2.254165,-2.261105,-0.460366,-9.132322,8.499492]],[[1.402589,-7.452623,-4.231113,5.281196,5.765548,1.327357,-3.888899,-9.201164,-0.131967,3.384389,-0.250461,-3.192149],[-9.550895,5.774762,-8.535725,-9.294871,2.589164,7.558921,2.820708,7.842364,3.765505,8.578655,-1.275207,-1.276441],[3.371481,-3.713066,8.166730,-2.544402,8.375286,-3.591367,0.128344,8.312863,-5.567769,-5.576372,-8.796176,-6.972074],[7.959288,2.590167,-5.395266,-6.459812,-0.472817,9.125340,0.725580,8.009486,4.052776,-3.093561,8.462265,4.524641],[9.577262,4.592233,-4.272291,8.797160,-8.402791,0.348191,-4.250908,-1.203712,-1.080809,0.130984,-2.924154,-9.577103],[-8.585333,-9.408929,7.686139,0.206385,9.396814,-8.589650,6.148771,6.720387,-1.748922,-3.806061,-2.438684,9.537372],[-9.794192,7.456003,-1.528116,-9.825674,-3.002852,-1.251547,-1.715464,-5.995979,-6.210492,9.788022,-1.667516,4.783080],[-7.791857,-5.878078,7.633701,7.445164,-7.956356,-7.800574,8.851696,2.555804,2.414441,4.593411,-9.921972,4.563304],[-2.179390,-8.446568,-2.600878,8.894709,6.389706,5.164289,-7.920268,-4.029276,0.022005,3.652041,3.061589,5.444150],[-0.325171,-5.251367,-8.910920,0.958138,5.665055,-7.222224,-7.091393,-5.531015,0.536138,-0.931097,-9.413644,-1.503976],[3.116913,-3.762591,-2.315104,2.183623,-2.377954,2.646580,9.731703,3.761947,-7.032996,-2.692321,-1.536476,-4.907312],[4.417600,4.466265,3.710779,6.005977,6.210817,7.181010,7.116746,-2.280034,1.343965,1.033535,-7.047385,0.449560],[-8.777531,4.903810,-5.436272,-3.979212,-4.638293,0.078552,9.970879,-0.926598,3.755175,-9.480029,-3.887396,-9.253583]],[[9.229434,0.548607,9.740389,-7.597050,-3.804449,-2.894248,-6.845131,-4.615526,-1.665443,-5.419438,9.461602,-3.862091],[3.960519,4.191721,0.903522,9.546391,4.786679,-8.727866,3.211498,-2.593202,6.873041,-2.650851,9.070899,-8.264129],[-7.667642,5.542190,-5.723030,-2.454613,4.938573,9.652972,-8.399599,5.758474,8.261855,-3.950692,-3.729090,4.357016],[2.921792,0.299043,-0.313985,-0.825755,5.727070,-8.433551,9.924396,0.505500,5.360569,0.251358,7.195384,7.390083],[-6.089374,8.287379,5.058962,-6.394154,-9.533392,8.747420,-4.666863,3.654426,-6.969925,3.092133,9.745493,-4.233382],[3.321338,-8.532433,-8.043185,-0.346427,8.780073,5.987618,-9.489760,1.095347,-7.181974,0.131829,-0.664812,-9.062475],[4.275058,-5.287244,-2.532526,3.873243,-2.045758,-1.831410,7.801058,0.917140,-9.647119,9.970662,3.915741,7.045123],[-1.945590,-6.837764,6.550900,6.286194,-5.596369,3.428757,-3.252409,-4.738389,-0.286526,0.475503,1.048290,-3.462044],[4.500553,-3.850442,-6.984028,-3.777896,3.601488,4.255762,5.057205,8.552671,-8.357424,-3.593742,6.057481,0.371371],[5.802328,6.507151,-3.148534,-9.783211,-8.163320,-0.838507,-7.673277,3.649260,8.792356,9.963459,8.518588,-2.208344],[3.579499,-0.970139,2.168522,3.452911,-1.923496,-1.039352,-5.175297,-1.018869,2.628481,-6.943474,-7.168456,3.563338],[-3.413027,-3.415756,5.456054,-2.532549,-0.117377,4.753763,-3.459541,-0.718491,-0.891339,6.760187,-6.745235,8.838730],[-5.773989,1.145052,7.533261,-9.953417,5.331063,7.574326,4.832223,-1.657352,-2.235479,-8.911748,-5.094547,5.002977]],[[9.491098,3.004834,-8.058594,8.466531,-6.904779,2.261724,-6.090835,-2.304912,4.354494,-2.352756,8.413332,-4.838831],[8.893892,-4.988969,2.202560,-0.620699,8.881595,-9.825862,-5.378417,-6.136707,0.848489,-1.666663,-0.329467,0.456884],[-1.870610,-7.529883,-1.076772,0.838745,2.725701,4.844079,4.011779,3.392087,-0.166542,-9.077622,-5.703162,3.121663],[6.450805,5.082816,-8.195852,8.276407,-8.498641,-3.427101,-2.703864,-2.140624,-8.531730,-6.818755,4.711611,-3.567332],[-4.926120,-9.645162,3.160314,-6.171683,8.582565,-2.358317,-1.681872,-8.813074,-8.669645,-9.285592,-8.787494,-7.065309],[-8.987875,-6.774319,4.680113,6.705888,-6.411220,-3.796950,-8.930455,-4.377075,-0.366281,6.660907,-5.443510,8.255969],[6.479062,9.351180,8.678034,-1.132546,-3.072183,7.666319,4.702563,9.842279,4.909105,1.730082,-1.048334,6.219175],[9.283939,-0.070380,8.386531,-5.749703,5.982276,-7.767492,7.480593,-6.054959,-7.549725,7.247810,8.052040,3.116126],[-2.911940,-7.096253,-5.477036,3.759501,-0.722251,8.900467,-3.524973,-3.613157,7.632644,-1.448718,8.999789,-5.800967],[-0.099455,0.138753,7.876889,-5.113938,-6.444637,-7.724104,9.976041,-4.380955,8.644769,6.464504,9.498845,0.151150],[-5.534845,2.689902,7.870980,1.153007,-1.907451,4.834420,7.802472,3.338014,-9.267482,-2.973614,-2.262158,5.273204],[-3.969580,9.215228,4.378492,-1.357520,-9.483393,5.615376,-3.987905,7.224447,-0.981834,-3.287572,1.124568,0.457039],[6.872923,4.647197,-0.985336,-1.215088,6.364299,-3.344817,-7.594940,-2.551793,-7.781601,-2.734284,5.932704,3.462828]],[[-3.472472,2.078634,-0.553357,8.197087,5.140992,6.330801,-8.012048,-9.684351,2.160757,-5.504512,-7.113144,-6.320036],[-5.487233,9.173699,-2.337305,9.328033,-6.606545,-2.969989,5.528040,-1.364182,-5.364085,-6.046205,7.900647,-2.809738],[5.855808,4.773800,-8.404965,2.329907,-3.054883,-6.317899,7.091055,-3.874688,-5.427430,-1.240293,-9.942896,-2.618691],[-9.073937,7.573244,-2.745889,-5.159833,-4.403777,1.520060,7.839760,-3.042223,4.785321,2.010774,-8.908609,-7.044019],[-2.046042,8.950422,2.915935,-1.972653,-9.232269,-1.127437,1.788705,5.218495,-0.607292,-6.305597,8.991305,4.091172],[8.119366,8.415049,-4.019189,3.300235,6.999527,-9.009629,-7.894504,-0.788037,-7.669157,0.665615,-8.183684,-6.191682],[3.900917,-0.652642,3.188959,2.500155,-3.920394,-7.688432,-8.498500,-0.788419,-4.277185,2.480808,8.426829,-8.825769],[-6.148142,4.419441,-1.162674,6.041821,5.456731,-3.290783,2.933030,7.608257,-3.159756,5.656941,2.079176,-6.743526],[-6.269339,4.954180,-1.559874,6.456088,8.890459,7.079328,-3.066209,-1.738517,-2.277309,-3.784634,-2.227917,-8.730061],[-4.671384,-3.062215,9.052409,3.882616,-1.532898,8.533161,-5.558871,1.253274,2.766785,8.893971,0.751927,9.001978],[-1.192184,5.965018,-4.394589,-8.991822,0.048891,-7.497283,6.854270,-8.872585,-4.999132,-4.307848,3.435807,0.397714],[-0.077490,-4.585460,-5.754061,-8.932581,-5.688182,1.473288,0.558704,7.812201,-8.766478,6.258780,7.807624,0.486740],[7.234361,3.873766,4.515868,3.794743,8.787693,4.568892,-1.994461,1.438857,-0.223780,8.529164,-5.299065,-6.972604]],[[-4.867260,-9.258914,-8.245292,-4.290502,-6.987808,-4.718552,-1.192664,3.345151,9.092039,5.591394,-6.730085,-0.144245],[8.410832,-8.928325,-2.542226,9.921418,-1.847100,8.136316,6.029403,-3.630827,4.918485,-1.164025,2.533620,0.062291],[-2.328257,-1.933567,1.239987,0.335302,-1.814561,-5.119233,8.023645,9.347162,-2.703393,-1.745739,-1.505070,3.244014],[0.253261,8.461053,1.089547,2.855467,3.569579,0.272104,9.362762,-4.718697,-0.711525,-8.408609,-6.465299,-6.829496],[-4.680062,-6.073997,8.394364,-3.044354,5.234473,5.748965,5.449393,8.613188,-8.327779,6.279036,6.616790,9.794072],[7.267436,0.788368,-5.854963,-0.712756,-7.427122,2.277696,-1.351445,-0.874412,-9.842345,-4.844642,5.034802,-7.003706],[-5.761017,1.557066,3.494731,-0.785674,-3.949061,-0.137112,6.267949,-8.953333,-4.673234,6.197368,6.295628,-1.860217],[-6.252548,1.278308,-5.872384,3.755059,-2.411767,6.591923,-5.624177,-8.064812,4.163770,6.476003,4.573968,1.110175],[3.058176,-2.909106,-4.082621,-8.198621,6.691896,-7.193423,-8.717787,8.408974,-4.415899,-0.548458,-6.254439,-7.942693],[-9.977926,-5.331743,8.192355,5.920216,-6.173504,7.658565,-0.159155,7.241452,-5.714948,-8.703606,-7.890286,4.918984],[-0.541048,3.246568,-0.878298,-4.702805,5.006386,-2.460357,-5.102929,1.631432,5.496918,-0.735736,2.124010,6.122706],[5.534787,-5.078200,1.783325,0.320711,6.522802,-2.621260,-9.063892,-1.252650,1.720635,-0.375810,-7.826506,0.217666],[-8.300996,-9.661317,8.014401,8.921551,3.817678,-6.962111,5.644515,-5.610883,-8.210654,-9.407210,3.176862,-0.049632]],[[2.460615,1.082900,5.234118,3.413105,-4.065259,6.601534,-6.956181,-5.864782,-9.012809,-8.903712,-1.636369,-0.989504],[-0.778467,5.195946,-8.361168,-7.939939,-4.245413,6.450255,-2.976622,-8.613949,-6.349592,1.834902,-0.198111,-9.788342],[-3.571411,7.410861,8.044311,-7.996824,-4.850341,-4.164644,3.778631,2.876455,-6.303615,5.385951,0.993333,0.190972],[1.276818,-8.497525,-0.837355,-7.111678,-3.927380,-0.648736,-0.685641,5.865182,-5.308235,9.524376,-5.072910,-6.018862],[3.566734,-0.040570,8.017677,5.801760,-7.276893,-1.896320,-6.597602,6.391748,-5.795151,8.162809,-6.142568,-1.649130],[-3.458825,7.017374,-5.477549,3.533036,1.177150,-8.043051,2.326644,-7.903570,-6.442647,-5.640647,3.595488,9.444436],[4.221458,-0.056773,1.728136,1.629954,-5.220991,-7.661248,-9.978325,6.987223,3.133462,-7.397916,5.893783,-4.933442],[3.906528,-0.102448,1.165100,2.976002,-4.146504,-6.102273,-6.551370,0.133165,-9.676588,6.107784,6.153791,6.629925],[-1.433468,8.147534,-5.624702,4.890470,6.311149,-6.038647,5.421621,9.027691,-6.549557,4.669214,0.436840,7.679420],[8.694458,-6.558511,4.320198,7.747346,7.995954,6.104094,0.067567,-4.865237,3.411760,8.454599,-5.597900,-0.247280],[-5.904894,7.416672,6.198005,-7.589023,2.069412,3.352554,-5.266143,-4.144501,-2.703094,7.408177,5.197550,-7.399983],[-6.113092,4.920890,-8.461501,4.167078,-5.524614,8.708406,-1.240950,-5.364588,-4.700796,-1.015226,-1.147088,6.669320],[5.675554,-5.942195,-2.095676,8.858489,-5.067378,0.071708,-6.434058,-0.798687,3.732513,-7.583799,3.599561,3.962666]]], dtype = "float64")#candidate|3678|(14, 13, 12)|const|float64
bop_3679 = relay.mod(var_3677.astype('float64'), relay.reshape(const_3678.astype('float64'), relay.shape_of(var_3677))) # shape=(14, 13, 12)
func_1500_call = mod.get_global_var('func_1500')
func_1502_call = mutated_mod.get_global_var('func_1502')
const_3684 = relay.const([[-6.798390,-5.001486],[5.922365,1.157455],[-3.766718,-6.166271],[-6.106679,-4.301237],[-0.091919,-0.315985],[1.755002,-1.348512],[8.012181,2.707229],[-0.007922,-1.010477],[9.981414,4.757921],[-5.533485,9.313130],[8.504123,7.365919],[-7.343961,-7.463343],[-1.372675,-0.978002],[-2.157156,0.617267],[-6.471733,-5.190570],[-0.657161,8.355233],[7.914030,-7.553863],[3.995730,-4.271166],[8.593876,-5.974529],[2.793740,5.544353],[1.116440,7.204075],[-0.127600,-7.938860],[4.063108,5.477788],[4.915376,9.509390],[-6.317872,4.380336],[0.984477,-9.295261],[3.303524,4.063484],[-9.903529,2.157567],[-4.247995,1.681192],[6.918686,3.108668],[-0.362562,-8.472217],[5.721336,3.347779],[1.036301,2.019372],[-4.882613,4.139049],[-3.315056,9.904028],[8.268560,6.392134],[3.411126,7.957425],[-8.822121,-7.724092],[8.496363,-8.746980],[-1.252757,-9.692093],[-5.325844,6.440438],[-0.637237,6.004410],[8.585124,0.069251],[0.041623,-4.003635],[4.561494,3.320610],[-9.498336,9.671702],[-2.599314,-3.370767],[9.826255,-5.854212],[-3.600017,-7.155618],[-0.851565,2.075099],[-6.112847,9.316468],[2.585301,8.983144],[3.789491,-3.184840],[-4.921371,9.112420],[-0.632870,5.142260],[8.642362,3.497958],[3.163830,-8.447647],[4.623416,6.967726],[-2.757840,4.402342],[-7.697601,-6.107200],[9.778659,5.316754],[-6.120769,-5.648297],[-1.646859,-3.773574],[8.786977,0.913655],[-8.672684,1.092630],[-7.135471,7.150516],[7.259178,-1.185813],[1.292549,7.694984],[-2.568979,-4.915158],[0.367282,4.035177],[0.807883,7.336379],[6.007382,8.342578],[-4.817196,-9.002654],[-4.015501,9.558200],[-1.292321,7.593255],[3.310773,4.137705],[-5.157575,-7.870005],[-9.453672,5.068268],[-4.301642,9.445549],[-0.194399,1.342157],[7.605058,2.759082],[3.561497,0.289621],[-2.458314,-2.708960],[3.494798,5.242101],[1.977070,5.916380],[5.097897,2.347139],[-1.617283,-8.243033],[-1.991539,8.637137],[3.895217,5.847985],[-0.234509,-9.637035],[5.172550,-2.963695],[-1.978984,-0.085926],[4.392294,-6.410339],[9.158287,-5.748543],[-7.612463,-9.034404],[-0.095073,-1.292648],[-3.667730,5.848994],[-6.247428,0.948642],[-1.500604,-1.767056],[-7.833853,-7.277648],[-0.443756,-0.087967],[4.444373,7.136870],[4.295335,-1.897656],[-4.185453,3.627017],[-6.197563,3.256691],[6.233107,-5.376879],[-0.259757,-6.749821],[-2.529551,-2.504157],[1.806030,-3.035925],[-5.565619,-4.087050],[5.943926,5.499106],[4.591759,-7.132229],[7.533145,-9.119295],[-9.418291,-7.355933],[3.166720,1.652127],[-5.945966,1.730054],[5.930488,-9.383303],[7.599740,3.243050],[3.656698,-0.672698],[-2.644669,-8.914391],[-6.114990,-2.380492],[3.769842,2.029214],[7.488951,-4.588923],[0.363183,-5.593231],[1.218460,-0.162615],[7.498665,9.620966],[-1.088850,-6.684284],[-9.840280,7.341309],[4.445628,-3.909101],[-9.016635,-9.619795],[-3.554341,2.340038],[-4.645122,-2.050756],[-7.022399,-0.368550],[2.972229,-0.575184],[-6.220817,-2.088567],[3.287297,6.251996],[0.946182,-6.456099],[-9.184076,2.012942],[9.128987,-7.084829],[-9.013452,-9.788791],[4.563640,9.798093],[-9.383799,-5.729244],[-5.709018,-4.065254],[-2.280275,-4.611226],[3.281048,-0.216034],[9.247404,-3.803126],[-4.282896,-5.331663],[-3.779404,-3.187776],[-9.850538,-4.946766],[2.525403,8.052117],[8.108181,-9.964649],[9.091781,6.854855],[7.325628,-1.666655],[1.447807,2.852632],[5.290667,5.607064],[-6.032983,9.437770],[5.530030,-4.216998],[7.007601,-0.366343],[6.579015,-5.041493],[9.301326,4.523680],[7.434802,-8.496811],[-1.763938,2.295403],[2.903235,5.697711],[-0.293888,-3.143794],[-0.208962,-6.126784],[-1.724967,-2.137084],[8.923086,5.729656],[-7.877646,3.719273],[-7.378352,9.884591],[-4.380436,1.031732],[4.206456,1.211496],[3.799721,4.570911],[-2.497108,6.294857],[-8.305332,-6.108305],[8.830489,-8.108833],[-5.700296,6.103010],[1.143217,-7.261614],[7.048914,-3.369620],[-7.031535,-7.715204],[6.900743,-6.617672],[-5.636998,2.652449],[4.315154,-7.277115],[3.620453,4.474275],[6.670638,-5.150398],[5.766991,-9.654029],[-9.669991,7.455960],[-7.754810,8.614234],[0.015568,-0.157312],[9.593632,-7.045588],[7.971500,1.651304],[5.427846,1.376000],[-8.713033,-6.466878],[-5.742617,-2.015854],[6.688322,1.935190],[-7.617462,8.585622],[-0.829595,9.149737],[0.736490,1.978084],[-3.563481,8.669753],[1.538069,-8.395085],[2.441308,2.085512],[1.648130,-6.630871],[8.089897,4.693063],[-4.967621,2.151174],[-8.430844,3.472237],[-0.550449,-2.595574],[4.365855,-8.756223],[-5.812383,-7.916680],[7.499217,0.186963],[-4.235416,0.141624],[-3.006770,2.207863],[-6.416323,2.100482],[4.879160,-8.697804],[5.577329,-4.738640],[2.645108,3.025093],[-4.125049,8.586093],[2.951157,-9.029907],[-4.113712,3.538433],[-7.869287,-2.336508],[9.268655,2.136407],[-4.625827,-1.129690],[2.543102,-3.345585],[-0.058229,-9.739098],[-4.030001,-0.113175],[0.944853,5.440972],[5.104787,-4.467877],[1.786306,-2.567911],[-6.649093,3.561646],[0.670575,5.589365],[-5.791676,2.637118],[2.649274,5.426527],[0.796492,-0.762236],[3.462718,9.969766],[-8.709550,-2.627360],[-2.714913,6.180923],[2.834373,9.145367],[-1.353063,2.426099],[-6.994800,1.989874],[-6.698006,7.997991],[7.907446,-7.557663],[8.992836,6.681934],[1.344279,9.388380],[-2.594660,8.556598],[5.851777,-4.709151],[8.227365,7.546183],[2.422433,1.816541],[5.190268,8.266508],[-2.106505,4.441807],[6.813300,-3.026110],[7.526512,-7.180417],[-8.929290,8.882050],[-0.743912,5.158089],[5.978898,-2.209634],[-7.613031,-1.204717],[-9.343978,-7.778431],[-1.232689,4.949413],[-1.335623,-0.634908],[4.590515,0.885105],[-1.421182,-2.336161],[-1.690767,-3.028759],[-5.764989,-7.786949],[6.574498,-6.647918],[1.953773,-3.871997],[2.910324,5.685404],[1.602008,6.428324],[1.453991,-4.490264],[5.731726,-0.189093],[9.295830,1.222520],[2.369617,-7.895877],[-4.638651,3.158259],[0.956149,6.381734],[6.008648,-4.609042],[4.616636,7.013527],[-2.814458,-4.550706],[-7.110457,7.534692],[-2.482398,6.707227],[2.991761,-9.484731],[3.269650,7.265373],[3.595234,1.815272],[5.551536,-6.630390],[4.953188,5.793354],[0.079047,5.271084],[8.805615,8.133147],[5.375166,2.749852],[-1.750964,-5.102966],[0.849201,-9.007385],[9.562451,0.296047],[9.370788,1.536625],[-2.023311,-4.450151],[-7.143224,1.047423],[6.678543,7.163537],[-1.560345,0.738647],[-2.857258,-6.742443],[4.654184,0.786809],[-8.085442,7.415759],[-2.708822,-4.824594],[-6.179341,-2.085953],[-5.432325,-3.394174],[9.008028,-0.443297],[-3.433625,-4.069976],[8.703945,7.086139],[-3.476328,6.454268],[9.748806,-1.504931],[3.788704,-2.471345],[-4.628054,9.394353],[6.497436,-2.736646],[0.327762,-1.437353],[-7.952119,1.264023],[6.947036,-5.269370],[4.610198,-6.622337],[-2.998711,-0.078228],[4.875822,6.419205],[7.794276,-4.633926],[-8.897536,9.661279],[0.117928,-7.314372],[9.639942,3.376438],[-5.714791,-3.857589],[-2.412183,-5.454855],[7.999377,-0.168258],[-8.060955,-8.082063],[-8.055228,-0.415645],[9.610955,6.185747],[1.277555,-9.825511],[7.201117,0.201534],[9.518058,5.224623],[-4.747419,5.589931],[-7.496945,-0.596301],[4.757947,-4.757733],[2.480167,1.052794],[3.502128,3.996656],[-7.594444,5.537452],[4.263110,5.060749],[-5.480873,-2.131186],[-0.042078,-8.105286],[-8.192606,2.068616],[-0.926854,6.697427],[-6.063439,-0.715734],[2.367521,-6.394303],[-6.279507,2.444698],[-9.092715,-5.389860],[6.350358,5.093120],[-8.452493,-6.593602],[-6.879716,4.115193],[-5.282181,-1.301549],[8.858331,-1.464312],[-0.263848,-9.278395],[-8.352376,2.388516],[-8.832931,9.509153],[-4.352100,3.596491],[-7.078690,9.971923],[-7.286966,7.999290],[-0.742977,7.772779],[3.185984,-9.080060],[9.923955,-3.409627],[1.036389,-0.592085],[3.455370,9.492015],[4.982652,1.282416],[4.557737,-0.599244],[4.009639,-0.746921],[-3.592379,5.233129],[9.151209,3.058645],[-5.760876,-0.324778],[2.544285,0.857076],[-7.624819,5.459709],[6.275144,1.256037],[3.972839,-5.925442],[-3.936764,-6.327094],[8.291383,-9.889075],[-9.486008,4.198952],[9.098364,-0.529046],[-6.400306,4.296030],[-4.614965,-4.441124],[1.313714,-6.503694],[-9.458750,5.262742],[7.426140,9.119480],[1.663981,0.785755],[0.159314,-6.451991],[-7.173531,-9.034906],[-6.029604,4.076470],[-9.905218,2.380615],[-2.525713,-5.722878],[-0.881458,0.057935],[-9.919159,-9.853897],[-0.601158,8.199941],[-8.551062,-3.414851],[-1.449058,-5.184544],[-9.094877,2.949972],[0.122759,2.697728],[1.325322,-4.676018],[3.242180,8.437819],[-5.645712,-1.528963],[-9.913536,3.501805],[0.002833,4.096461],[-7.020810,3.925354],[-7.525240,9.536186],[4.154858,4.305413],[-9.299492,-2.709512],[1.222105,9.994556],[-9.686958,-0.332909],[7.079595,9.055341],[5.663337,-6.283435],[-0.494581,-7.308091],[0.342268,7.441392],[-1.979232,9.352383],[-9.796377,6.850587],[2.922183,-8.687480],[-0.421977,-6.752914],[-1.157409,-4.951492],[4.410072,7.520943],[-2.553333,-5.609571],[3.155591,-0.945110],[-8.050953,-9.492807],[-0.562089,-3.036137],[8.359211,6.666882],[0.078858,0.403141],[6.018242,8.207193],[5.772164,7.051880],[-1.552901,3.507922],[7.308349,-7.930858],[4.167015,-0.427588],[-4.247582,2.973633],[0.869665,2.809480],[7.690508,-9.799080],[-1.372194,5.685805],[-6.475682,-6.193748],[-9.901580,-8.771476],[1.162916,0.222842],[-0.926721,-9.736836],[-2.147104,-4.963801],[-3.758897,-7.419005],[-3.551935,1.629314],[-1.747321,-0.229176],[8.751523,0.902429],[-3.710216,4.411985],[-6.297905,-8.069985],[-8.603668,9.020848],[1.700930,0.109972],[0.613112,8.926237],[-7.011783,9.758924],[1.540468,-2.683872],[-1.495111,-5.300342],[4.178228,-4.912245],[-8.081950,-5.688725],[-7.831862,7.236408],[9.335656,9.261422],[-0.906451,0.020813],[6.158102,0.359189],[-5.117459,9.614788],[6.629178,-4.543109],[0.387656,6.729493],[7.268120,8.282744],[5.997431,4.654526],[8.684243,-3.091345],[8.844469,-7.214614],[-5.242552,7.062981],[9.580568,8.160867],[-9.857428,-4.968028],[-6.251063,9.763761],[8.522231,2.907223],[4.034428,-8.140965],[-0.939295,-2.013251],[-1.836167,-4.764855],[-0.227140,9.632216],[7.786078,3.712124],[-2.925471,9.583813],[7.195122,0.965064],[9.156246,3.290446],[0.414096,1.934941],[-9.775928,-2.330365],[3.278039,1.343246],[-9.157766,3.389514],[2.909439,-9.583896],[-1.710081,5.474864],[-1.183628,5.253400],[0.935992,3.920037],[-2.015238,-8.006298],[-3.140516,3.424229],[-0.905016,-7.030452],[9.206611,-1.772178],[-5.394616,8.362376],[-4.281024,-8.115787],[9.156481,2.006743],[-0.523808,2.365330],[7.461212,-8.309182],[-9.476136,9.192858],[-8.896759,-0.698204],[-7.049377,6.688823],[5.459506,3.269889],[7.161748,-0.996392],[5.415465,3.489598],[-4.475253,-7.859184],[4.501104,-1.240518],[-2.035522,-5.935016],[7.047214,7.334708],[6.596124,-2.673433],[4.684810,-2.313662],[5.775347,7.396186],[-3.236398,-6.179576],[7.688453,0.071406],[5.265281,7.572870],[2.570070,6.975473],[-6.995740,-0.504551],[3.753621,-9.974432],[6.570304,7.173549],[9.621920,1.316651],[4.689259,4.039533],[2.006445,3.851920],[-4.663666,-2.795785],[-0.726729,-8.300663],[-5.491280,-3.840120],[4.818437,-3.414617],[-2.003489,4.492242],[-4.975191,7.536394],[-7.108470,2.392391],[1.869814,5.474598],[4.715042,-5.780008],[3.325071,-6.051884],[2.209178,9.246831],[4.495157,4.529248],[3.526480,5.912512],[-9.480940,4.352579],[2.555022,-3.103070],[-9.355749,-7.970009],[6.177590,2.478385],[9.516022,8.947177],[7.263984,0.348574],[-0.484767,-5.690040],[4.308156,-1.816554],[-8.126409,6.186907],[-2.167162,7.610180],[3.297742,-6.574420],[-5.864429,1.994922],[8.038143,-4.150863],[8.133684,2.289706],[1.487219,6.266124],[9.192586,-4.695945],[7.247764,-2.899624],[5.316158,-6.238711],[2.001096,2.641218],[9.040007,-9.658953],[3.751517,5.122306],[-7.896298,1.780638],[-4.108023,9.532259],[-3.788945,4.160073],[3.792914,9.929822],[8.777883,7.377974],[-7.775935,-8.181295],[4.225601,-2.687262],[-1.021614,3.098343],[-8.987873,-7.320852],[5.694189,-6.093393],[6.218867,1.826759],[1.050886,6.099170],[3.938561,-6.308826],[7.654723,6.537340],[7.078720,-7.027702],[3.868429,-4.443970],[-5.137048,-1.398333],[-9.753868,9.082404],[-2.313320,-3.172799],[1.790778,4.630162],[-6.145807,-5.237554],[-7.203248,-2.225570],[8.331329,1.186477],[-2.506261,-8.880548],[-1.378868,-8.122455],[7.250813,-4.272812],[8.702556,-6.484354],[-9.647468,4.524259],[1.999966,7.045135],[8.516770,3.978556],[-6.481000,4.670390],[-4.868003,6.623224],[-9.869328,-8.729888],[8.193668,1.854868],[4.011452,0.262734],[2.376075,8.447985],[-9.451724,0.259058],[-2.317260,-3.693084],[2.086075,-6.883595],[3.936302,3.498105],[4.294524,1.044620],[-6.120372,0.135016],[-8.441636,-4.867286],[0.640798,-6.577289],[-0.307698,2.646528],[-8.737804,0.671642],[9.871217,-6.245439],[7.908138,-2.970669],[3.477559,7.105205],[7.875259,0.037974],[9.120188,0.384363],[4.107179,-8.791172],[2.370839,6.168208],[7.197018,-0.432579],[-7.282814,2.760302],[-7.490388,-8.982736],[9.566816,6.778078],[7.282756,4.773431],[-4.139428,3.643102],[-2.282746,1.110494],[-8.498222,-0.787502],[6.547713,-6.688698],[0.913531,7.219461],[-4.070192,1.009600],[4.124565,-3.204335],[4.650045,0.218029],[-7.271258,-2.454257],[-2.889759,3.733264],[-4.170200,-4.581607],[-0.241918,0.270674],[-2.885466,8.576794],[-1.375073,8.109400],[1.196127,-7.332202],[5.191506,7.640222],[6.939263,-3.244608],[0.069785,-9.884938],[7.395158,-3.070513],[5.634238,7.496587],[-5.265456,-6.948572],[2.562633,4.419584],[7.661155,-8.436865],[8.559617,0.253697],[2.942947,1.895575],[7.899288,-7.526129],[-2.755407,-4.650211],[-9.382061,-1.138703],[-1.226635,2.583586],[-7.234065,-9.761935],[0.298432,-5.060602],[-0.904980,3.669943],[7.950032,2.089551],[-5.907882,-9.097157],[-9.764460,-3.260128],[-7.113301,4.348155],[-5.837253,9.925965],[6.629558,-0.363068],[-8.305451,-0.407206],[-0.581092,-0.659919],[-3.920007,-5.896347],[3.713247,9.074003],[1.346842,-6.261898],[-5.977284,-5.652955],[-2.489722,7.658370],[-1.175683,-9.192287],[-8.613294,9.051644],[-6.516142,3.221524],[8.087997,5.002998],[-7.638886,-8.873798],[5.012413,4.141853],[6.272119,-0.001961],[0.946576,6.584707],[6.595193,-0.974272],[-1.485944,7.832443],[0.615547,1.206627],[-4.170489,8.387281],[-0.118065,9.040123],[-2.408293,2.198726],[-5.098116,-7.593269],[-4.935489,2.935197],[2.438071,7.237709],[-9.702621,1.046921],[6.559023,-0.692808],[2.026957,-4.231095],[-0.777809,5.408284],[3.584987,-8.842901],[-3.732719,2.478678],[-4.489527,8.722216],[1.788105,-3.679564],[0.423941,7.714653],[-1.439726,-3.321264],[-4.010168,2.071282],[-0.190346,8.636209],[-9.269987,-3.259367],[-2.974070,2.679222],[-7.094628,8.730999],[4.265353,6.224814],[2.179627,-7.787577],[9.234608,0.741553],[9.802425,-4.797808],[-1.714604,1.235909],[2.645068,6.957704],[-3.872100,-9.225781],[1.186079,-7.416388],[3.299147,6.704946],[-9.917082,6.641256],[3.817652,6.745653],[5.097394,-2.104387],[-5.552023,-7.214270],[4.405494,4.788207],[-5.000241,5.589363],[2.346488,3.839143],[6.214477,6.973162],[-0.377021,0.765858],[-5.233839,-6.363384],[-3.264355,0.429499],[5.515237,-6.311904],[6.795481,-0.805957],[-4.206391,-9.728395],[7.527247,-1.766516],[-5.366267,-8.418928],[-9.561509,-8.020838],[5.475047,8.874893]], dtype = "float32")#candidate|3684|(702, 2)|const|float32
call_3683 = relay.TupleGetItem(func_1500_call(relay.reshape(const_3684.astype('float32'), [12, 13, 9])), 0)
call_3685 = relay.TupleGetItem(func_1502_call(relay.reshape(const_3684.astype('float32'), [12, 13, 9])), 0)
func_944_call = mod.get_global_var('func_944')
func_947_call = mutated_mod.get_global_var('func_947')
var_3687 = relay.var("var_3687", dtype = "float32", shape = (480,))#candidate|3687|(480,)|var|float32
call_3686 = relay.TupleGetItem(func_944_call(relay.reshape(var_3687.astype('float32'), [5, 6, 16])), 3)
call_3688 = relay.TupleGetItem(func_947_call(relay.reshape(var_3687.astype('float32'), [5, 6, 16])), 3)
func_1500_call = mod.get_global_var('func_1500')
func_1502_call = mutated_mod.get_global_var('func_1502')
call_3696 = relay.TupleGetItem(func_1500_call(relay.reshape(call_3683.astype('float32'), [12, 13, 9])), 0)
call_3697 = relay.TupleGetItem(func_1502_call(relay.reshape(call_3683.astype('float32'), [12, 13, 9])), 0)
output = relay.Tuple([bop_3679,call_3683,const_3684,call_3686,var_3687,call_3696,])
output2 = relay.Tuple([bop_3679,call_3685,const_3684,call_3688,var_3687,call_3697,])
func_3721 = relay.Function([var_3677,var_3687,], output)
mod['func_3721'] = func_3721
mod = relay.transform.InferType()(mod)
mutated_mod['func_3721'] = func_3721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3721_call = mutated_mod.get_global_var('func_3721')
var_3723 = relay.var("var_3723", dtype = "float64", shape = (14, 13, 12))#candidate|3723|(14, 13, 12)|var|float64
var_3724 = relay.var("var_3724", dtype = "float32", shape = (480,))#candidate|3724|(480,)|var|float32
call_3722 = func_3721_call(var_3723,var_3724,)
output = call_3722
func_3725 = relay.Function([var_3723,var_3724,], output)
mutated_mod['func_3725'] = func_3725
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4057 = relay.var("var_4057", dtype = "int64", shape = (8, 9, 10))#candidate|4057|(8, 9, 10)|var|int64
var_4058 = relay.var("var_4058", dtype = "int64", shape = (8, 9, 10))#candidate|4058|(8, 9, 10)|var|int64
bop_4059 = relay.less(var_4057.astype('bool'), relay.reshape(var_4058.astype('bool'), relay.shape_of(var_4057))) # shape=(8, 9, 10)
func_1673_call = mod.get_global_var('func_1673')
func_1676_call = mutated_mod.get_global_var('func_1676')
var_4097 = relay.var("var_4097", dtype = "float64", shape = (945,))#candidate|4097|(945,)|var|float64
call_4096 = relay.TupleGetItem(func_1673_call(relay.reshape(var_4097.astype('float64'), [7, 9, 15])), 0)
call_4098 = relay.TupleGetItem(func_1676_call(relay.reshape(var_4097.astype('float64'), [7, 9, 15])), 0)
output = relay.Tuple([bop_4059,call_4096,var_4097,])
output2 = relay.Tuple([bop_4059,call_4098,var_4097,])
func_4100 = relay.Function([var_4057,var_4058,var_4097,], output)
mod['func_4100'] = func_4100
mod = relay.transform.InferType()(mod)
mutated_mod['func_4100'] = func_4100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4100_call = mutated_mod.get_global_var('func_4100')
var_4102 = relay.var("var_4102", dtype = "int64", shape = (8, 9, 10))#candidate|4102|(8, 9, 10)|var|int64
var_4103 = relay.var("var_4103", dtype = "int64", shape = (8, 9, 10))#candidate|4103|(8, 9, 10)|var|int64
var_4104 = relay.var("var_4104", dtype = "float64", shape = (945,))#candidate|4104|(945,)|var|float64
call_4101 = func_4100_call(var_4102,var_4103,var_4104,)
output = call_4101
func_4105 = relay.Function([var_4102,var_4103,var_4104,], output)
mutated_mod['func_4105'] = func_4105
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4297 = relay.const([[[6.086257,-9.421976,4.000046,-1.690443,6.189944,-1.724532,-4.220273,-5.379103,4.780863,-2.570637,4.436736,-1.533777,-1.973263,8.984222,-8.005395,2.166601],[-8.753474,4.270452,-0.751965,-4.838497,9.980292,2.246746,4.628765,-3.785809,-8.058175,4.317964,-0.252488,-4.872577,-8.701510,0.588964,7.411361,-2.368729]],[[-5.048679,9.650476,3.971614,-8.157482,-7.424653,2.181140,-5.761568,-2.455316,-8.104522,-5.914786,-8.687007,3.704852,-0.841892,2.066356,0.589448,-1.346562],[2.229837,-9.918253,6.094761,7.952449,2.985088,1.810900,4.512561,-1.317518,5.214192,-0.093657,0.590713,-8.720520,-0.174864,6.105922,-4.778406,6.904981]],[[6.173021,-3.082867,-4.740532,-5.624272,-6.699275,0.555405,-8.647133,-4.085509,0.857492,0.226916,-7.164807,-5.990351,3.166705,3.880096,2.344215,-7.593713],[-7.078304,-3.294292,-5.740275,-9.228734,-2.444117,-0.309008,5.896411,7.600947,2.476280,-8.074986,-5.755700,-0.471114,-2.700473,8.637499,-4.223454,1.902823]],[[0.252017,-5.373461,-9.961692,-4.297709,-9.465763,2.613168,4.232276,-6.978484,5.580031,2.581003,-6.615989,-4.201620,4.603498,-6.293923,5.601538,-6.261715],[7.030989,-7.236373,-4.433918,1.226737,-5.741008,-6.658577,4.435581,-9.051629,7.539724,-0.046409,-4.133456,5.481468,0.747922,6.366757,0.088887,0.605154]],[[-7.520229,-4.223905,-8.305448,-6.226391,8.292341,5.902158,6.834706,0.971766,2.584802,-8.735580,-3.289502,4.962437,-8.531805,-1.438015,-7.369358,-7.183121],[-9.227134,6.703929,-9.964661,0.432330,2.865060,-0.394953,-6.353227,6.853479,-5.731934,0.651669,5.486319,-9.191502,-4.230210,0.007009,-8.589468,4.021152]],[[2.037324,7.961191,-7.980846,0.654889,3.914895,7.689532,9.720770,6.199101,-6.907083,8.002322,2.615711,7.845860,-7.673011,1.348407,7.876572,5.084412],[1.731645,-6.568224,4.989298,4.575412,-0.938432,3.053860,-4.348344,8.619515,4.941871,-1.061659,-5.164090,-7.198848,6.001088,5.136278,2.559124,0.133386]],[[2.672004,-9.361524,7.648000,-7.296820,-0.407284,6.083941,-9.700129,-7.526005,0.355180,1.052738,-4.169916,8.037166,0.007404,-8.862031,0.048758,7.823316],[-3.124591,-5.233268,-8.821930,4.068166,-2.633748,5.414225,6.539492,-7.047294,-3.664132,-2.429846,-0.496584,-2.540969,-8.721753,-2.799579,-1.538903,-6.711581]],[[1.383409,-0.137574,9.363091,2.878275,2.821412,9.182931,-4.023881,7.923186,9.363882,1.522777,1.727210,4.516927,6.240902,-5.350170,6.244570,-4.563115],[4.690826,-9.639319,-8.768083,-9.639603,-1.250482,-6.893147,8.197145,-8.324844,4.806950,-6.717528,8.557087,-4.284147,7.794181,9.915461,7.247187,-6.511469]],[[-3.549291,-3.863600,-2.307247,-0.491112,-2.742811,2.344138,1.580367,-4.535941,0.115666,7.897757,-8.153506,9.992347,-4.125568,-5.879341,-2.255396,-2.628447],[-3.790213,9.746480,7.272734,8.777999,-4.000955,-9.023878,-1.314631,-3.757706,3.006810,4.532721,2.011754,-1.677378,3.915685,-1.715242,3.024482,-4.589984]],[[6.261520,-3.927088,-1.460239,-5.458117,-5.790912,-9.306107,5.663846,-4.127800,-1.973209,-4.827391,8.761661,-9.005978,4.194839,-0.952444,4.061687,-3.046030],[5.107055,-1.943362,8.146308,-8.440957,2.515305,-1.693185,-4.858723,2.841736,-2.424840,-5.433747,-0.433548,-8.753111,0.556349,-6.220778,-1.433163,7.716809]],[[5.373730,5.894164,-8.623041,-3.064063,-6.553450,-4.117185,-7.048081,1.290497,7.978077,-0.767159,-0.757322,-0.843066,4.644750,8.150790,8.382181,1.071726],[-5.518241,4.478778,0.250007,-1.037579,7.820666,-7.265537,-2.296056,-1.229607,6.976712,-9.169090,-8.772351,-1.319489,1.143016,2.375381,-2.751114,-6.325077]]], dtype = "float64")#candidate|4297|(11, 2, 16)|const|float64
uop_4298 = relay.log2(const_4297.astype('float64')) # shape=(11, 2, 16)
func_1673_call = mod.get_global_var('func_1673')
func_1676_call = mutated_mod.get_global_var('func_1676')
const_4310 = relay.const([5.020414,4.883252,1.209506,-6.056747,-5.283312,-3.904346,0.961327,9.132881,-6.544942,-6.857824,-9.441554,-8.465858,8.540784,-2.863581,-9.106463,1.593049,7.935623,7.118634,-8.978685,-6.186928,-6.402668,1.706428,8.215987,0.339557,1.781728,7.472252,6.351706,-9.309395,2.374637,0.488222,-8.497441,0.836448,2.699118,-7.280116,2.061630,2.141274,3.701857,6.534633,3.420907,-2.860062,-2.158426,-3.037905,9.530573,3.287652,0.177844,-2.604087,9.878872,9.823233,-7.966386,-2.213252,-2.711388,-8.018087,-8.575886,-0.018304,-5.881404,-4.841991,-3.526246,-7.873153,4.641078,-7.691555,3.561888,-5.304361,1.508846,9.854906,4.045358,8.882633,5.764527,4.212785,4.109189,4.699573,2.473860,7.674390,-9.021876,2.812092,4.955494,-8.576189,0.354713,2.622638,6.334276,-7.373512,-7.389738,-4.674149,9.678510,-9.433814,-0.514986,8.159157,6.675984,8.793089,-5.505440,-5.669344,4.799184,-5.464318,9.285088,8.713949,3.184108,-8.069364,0.206752,9.155587,-7.406455,9.828133,-0.474389,-7.019680,0.428311,4.436131,6.176411,7.888769,2.386446,5.215402,1.161806,4.959433,-8.212963,8.900933,-7.336144,4.036631,-6.255459,1.498653,2.087489,-1.294520,-6.785542,-0.047825,4.873974,-2.259097,-9.192685,-9.360522,-9.938835,-4.916161,7.200893,-4.281751,-5.627076,-3.564145,-6.519451,6.679071,-8.130874,4.322615,-8.153077,-0.764375,6.169687,-3.783092,-0.084788,-7.969909,-0.927125,4.532525,-0.913883,3.463891,2.477013,8.009933,-7.380260,0.449619,-5.775006,8.603835,8.698179,9.398064,-8.545168,-7.097813,-8.088694,5.921496,2.193896,-6.425145,-8.936912,-4.319907,7.100788,6.056463,1.823629,-7.143498,8.487225,-8.100082,1.909821,-4.535509,2.455975,-6.487383,2.522266,-8.847268,8.409825,-6.937104,-2.260392,5.312034,-2.456123,8.600565,-9.761441,0.672197,9.859088,-6.686914,7.641757,-5.826311,0.143567,-7.565812,-7.473999,5.505737,1.924641,2.319692,-5.490518,-3.043751,-6.482506,-6.238734,7.544745,-1.602566,2.965337,-7.964063,0.698256,5.375376,4.825159,9.978974,-8.842382,4.761515,-3.913066,-4.291090,-0.224588,1.307931,-8.128467,9.030375,-7.200229,4.754487,-9.684900,-9.512353,-0.471211,-0.293451,-0.749679,-8.431485,-0.723977,-0.831587,-9.229833,0.059344,1.543088,9.392489,4.424293,-7.024554,8.403477,1.567059,4.059979,4.956679,-9.230680,5.824026,-3.111085,9.643385,-6.472346,0.155248,-1.383031,1.656435,-6.879690,-4.333848,4.121939,6.670974,-2.127885,-0.041177,-4.286880,2.021039,1.787985,0.487588,-3.982498,-5.580377,4.511819,-5.916370,-3.625328,1.731055,-2.434631,-2.463949,-0.916498,-5.465890,6.172249,-4.406638,9.597534,-5.791420,6.603335,-0.711064,-9.080725,-3.666648,-3.339135,-8.934003,-1.846283,1.849045,7.622425,-7.891895,1.124607,-3.922706,3.590729,2.597857,-5.342322,9.507197,7.665327,-2.877093,-1.878421,2.351184,4.176251,3.317701,-5.915819,-7.798583,9.589364,9.850594,-7.702910,9.684613,5.434974,-4.541932,-3.357615,0.169875,9.574542,1.514852,-4.743016,-3.887662,-3.649234,7.579613,8.926160,-9.616763,-3.731988,9.294743,7.290400,-1.720760,6.673520,9.714807,-1.023812,-9.455340,-2.388732,3.449816,-2.299551,-0.309791,4.419124,1.436004,5.271675,5.375768,-7.497730,-5.435563,2.894511,-9.876584,2.349061,-9.241899,-9.705725,9.074721,5.991496,8.688862,3.170316,-2.897386,7.975788,4.149956,-6.855010,-5.921871,5.028220,-6.323265,9.828074,-2.265384,-3.949866,-8.942387,6.648946,7.979553,-3.803667,-7.773910,-5.916613,-1.164404,0.053205,8.147092,4.829624,-1.499236,-5.450017,4.400320,8.598957,0.313169,7.703644,-6.662506,2.545154,8.553100,-9.840562,2.507261,-2.609264,-5.361056,3.896065,5.748617,1.236455,-0.098516,2.824772,1.512870,3.211693,-7.263809,-7.597576,2.467603,2.013438,5.918735,-7.155006,-2.328486,-7.000954,-5.264996,-2.644501,-2.438914,1.168112,-9.477271,2.963700,3.311011,-9.500703,7.426999,-0.464901,-3.389200,9.648519,9.660555,8.647037,-4.971880,-3.083291,2.537347,2.252020,-7.099324,-2.161801,9.789511,-0.934804,-0.335200,-4.167861,6.228206,-8.868584,-4.820909,2.314836,-4.035291,-3.693291,9.459543,6.343946,4.923908,-9.343386,-1.376140,-2.770558,-6.946479,-8.996244,8.297079,-2.003935,-6.447363,0.112255,-5.244185,-1.428071,0.547176,-0.653124,-6.367734,2.997273,-8.808102,3.258474,8.171134,-3.193899,0.796442,-1.875796,4.319128,7.777166,-0.887868,1.810909,-9.352938,4.001122,-6.234711,-7.859476,2.375537,-0.447407,7.696100,-0.662742,-3.026536,9.647074,-4.624748,-1.187011,-2.695769,4.061434,-8.516493,-6.299141,-6.798631,-8.861939,4.013586,6.964635,0.902221,-3.077622,-2.944016,7.544966,7.848730,-8.290910,-8.048909,4.462562,-3.982847,2.340482,3.686465,4.420333,3.803012,-5.943691,-9.694990,-9.416677,-6.245197,5.257035,1.245605,6.391972,0.738945,-8.093578,-4.807642,-5.750156,-1.925947,-9.729391,5.405116,-6.739097,9.421538,2.510392,-3.953247,8.966162,-9.817836,0.141951,0.913454,-7.002911,-8.145139,6.922924,4.812950,-8.306863,0.536243,1.020389,-9.272161,-7.762099,5.017504,-3.378312,5.068177,-0.871868,-2.594055,6.205306,-1.140380,-1.518638,9.446674,3.345979,3.273811,-9.757569,-2.535560,-6.691369,2.124271,9.322261,-1.214567,7.725046,2.397194,-1.017456,8.679630,-7.020076,1.069186,4.216277,-4.771592,9.401876,-5.854023,-0.054835,-7.331377,9.507278,6.927611,-3.586656,-4.870709,5.379857,1.158959,2.388646,-7.204501,-3.527430,-0.428180,-3.059768,-2.393976,7.084626,9.664592,-2.540012,-7.734943,-4.105211,-4.923637,3.424645,-2.599414,-8.972493,-0.134458,-9.409433,8.126718,0.138221,-8.701678,-0.099721,0.897198,6.931957,-7.428439,-6.137892,-3.625234,-7.401967,3.832361,4.372478,7.814160,6.200560,-5.889791,-2.804572,-4.457431,4.682482,6.811706,-5.594687,9.144351,7.937063,8.110681,-4.565073,-3.773557,-1.077259,4.649913,1.289774,3.220144,-5.595803,8.907122,-3.036835,-3.856262,-2.210999,5.446117,8.263357,0.955403,-5.613472,-1.267385,-6.724064,-7.842334,9.397505,-9.088684,-4.037248,6.823521,6.913093,3.789771,6.254827,-7.665218,5.870490,-5.318773,-9.415273,3.540085,-6.034735,-0.664099,4.531067,6.959522,-4.264779,0.158218,0.843955,7.714159,4.941449,-2.488602,5.338238,5.460131,6.614122,9.996239,1.014482,-1.318163,-4.645757,-0.752588,5.376055,-2.909547,3.314649,-9.107254,0.428994,-5.805286,-8.054480,6.439932,6.976253,-7.334334,-5.050244,-0.632606,2.474730,3.954525,3.019497,0.481036,9.069798,-6.332593,9.723455,8.253068,7.192618,-5.170491,1.957234,6.514829,-5.887382,3.039272,3.826943,-0.889369,-9.211689,-5.154766,7.128012,2.334232,-2.119965,3.571084,-9.687942,-6.190147,-8.117344,-8.433905,-1.419156,-5.108992,3.227338,6.759038,-6.261617,5.512462,9.516984,-0.303020,8.670486,2.043468,-8.318221,-6.591719,3.820325,-9.273623,6.647879,2.923411,-8.237647,-6.552277,4.558786,-2.546849,8.562568,7.582769,0.347321,2.015273,4.764614,-9.409930,6.103375,-5.080519,4.458080,1.892903,1.306727,-8.612362,-1.709015,-4.685237,-1.137771,8.414141,-3.779419,-0.547774,4.078663,7.863718,-2.560295,-6.734335,-3.340416,1.240004,9.774094,-7.822226,8.381066,-6.373188,5.486408,-4.598212,4.267179,8.900224,-7.503980,8.142695,8.677406,-6.551374,6.652655,7.330251,9.851874,7.317225,5.912147,-6.140525,5.320185,9.743449,1.570370,-6.017412,3.027459,-5.910520,-4.201023,5.821325,-4.576620,6.480389,-3.923670,3.967709,3.402078,-9.182841,-9.294639,-2.355249,4.273765,-2.836257,0.593047,9.086887,-7.127340,-4.555470,-0.453690,-2.111077,1.023638,-1.455765,3.034886,3.398527,-8.149446,4.763709,-5.077738,-8.052018,2.371342,-1.481871,-3.756613,-2.491451,-9.918452,9.543498,-0.731454,0.731316,3.791576,-4.072347,-4.300908,-8.556853,2.893602,3.324010,2.055710,-2.301408,3.068379,0.435110,-7.963395,-6.128189,-3.695185,2.624939,-4.137058,-3.003323,-6.938157,-7.190481,-8.373681,-6.553121,-7.340722,-2.535079,4.399458,5.782284,2.332055,-4.013644,-1.242444,-4.525041,-5.039746,0.090043,8.538259,7.765449,-2.169032,-3.828256,-6.561688,3.225685,-7.774618,-8.029752,-3.767063,-5.711964,-1.003358,6.103937,-1.612463,6.421693,-3.565255,4.826720,-9.336005,9.343272,-0.185908,3.741150,-3.784905,4.136158,-4.690752,6.873968,3.119306,3.017497,-8.831470,-7.312912,-7.335565,-8.106968,2.618444,-9.146967,-6.201086,-4.832342,7.327973,2.703993,-4.145201,5.237011,-9.390689,4.620794,-6.866860,6.661445,-4.133114,6.058544,9.657444,9.097634,4.441738,-4.938851,2.202075,-6.931567,-9.647108,8.082055,1.240176,-3.700925,9.147721,8.683923,-0.715355,-2.795978,6.485126,9.422865,0.971009,9.120284,3.329145,-6.329030,-8.965580,7.254392,-5.133627,-2.867781,6.582795,7.210737,-0.621997,3.649366,9.625572,4.141913,7.283712,6.893357,7.209242,-4.969016,-1.752766,-7.213112,4.746917,-3.009549,-4.762929,8.468794,1.107127,-4.082839,-1.001788,-1.217783,8.563941,-5.298670,-9.048334,-2.473214,-9.418396,-8.568287,6.702152,8.541934,7.171785,7.599406,-7.663908,8.121714,5.106103,-1.839938,7.154742,-9.321259,-1.396463,-3.954679,-5.119767,8.335108,9.571366,-4.582755,-1.889734,8.781279,1.523713,8.437021,-2.732384,6.303090,-2.380312,5.384100,-9.992085,-5.721805,-0.922054,6.843199,5.147891,5.464457,4.136390,-1.680951,2.290527,1.415303,-4.666260,3.883913,4.713006,-3.441147,-8.084096,-4.282367,6.490414,7.042616,0.151246,5.984283,2.017808,0.272320,-3.000651,-5.092626,8.524368,-4.925964,-9.822298,-1.612776,-3.801479,5.869859,-9.446549,4.603545,0.372144,5.648575,7.375574], dtype = "float64")#candidate|4310|(945,)|const|float64
call_4309 = relay.TupleGetItem(func_1673_call(relay.reshape(const_4310.astype('float64'), [7, 9, 15])), 0)
call_4311 = relay.TupleGetItem(func_1676_call(relay.reshape(const_4310.astype('float64'), [7, 9, 15])), 0)
output = relay.Tuple([uop_4298,call_4309,const_4310,])
output2 = relay.Tuple([uop_4298,call_4311,const_4310,])
func_4313 = relay.Function([], output)
mod['func_4313'] = func_4313
mod = relay.transform.InferType()(mod)
mutated_mod['func_4313'] = func_4313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4313_call = mutated_mod.get_global_var('func_4313')
call_4314 = func_4313_call()
output = call_4314
func_4315 = relay.Function([], output)
mutated_mod['func_4315'] = func_4315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4313_call = mod.get_global_var('func_4313')
func_4315_call = mutated_mod.get_global_var('func_4315')
call_4327 = relay.TupleGetItem(func_4313_call(), 0)
call_4328 = relay.TupleGetItem(func_4315_call(), 0)
func_4100_call = mod.get_global_var('func_4100')
func_4105_call = mutated_mod.get_global_var('func_4105')
var_4341 = relay.var("var_4341", dtype = "int64", shape = (4, 180))#candidate|4341|(4, 180)|var|int64
var_4342 = relay.var("var_4342", dtype = "float64", shape = (945,))#candidate|4342|(945,)|var|float64
call_4340 = relay.TupleGetItem(func_4100_call(relay.reshape(var_4341.astype('int64'), [8, 9, 10]), relay.reshape(var_4341.astype('int64'), [8, 9, 10]), relay.reshape(var_4342.astype('float64'), [945,]), ), 0)
call_4343 = relay.TupleGetItem(func_4105_call(relay.reshape(var_4341.astype('int64'), [8, 9, 10]), relay.reshape(var_4341.astype('int64'), [8, 9, 10]), relay.reshape(var_4342.astype('float64'), [945,]), ), 0)
output = relay.Tuple([call_4327,call_4340,var_4341,var_4342,])
output2 = relay.Tuple([call_4328,call_4343,var_4341,var_4342,])
func_4351 = relay.Function([var_4341,var_4342,], output)
mod['func_4351'] = func_4351
mod = relay.transform.InferType()(mod)
mutated_mod['func_4351'] = func_4351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4351_call = mutated_mod.get_global_var('func_4351')
var_4353 = relay.var("var_4353", dtype = "int64", shape = (4, 180))#candidate|4353|(4, 180)|var|int64
var_4354 = relay.var("var_4354", dtype = "float64", shape = (945,))#candidate|4354|(945,)|var|float64
call_4352 = func_4351_call(var_4353,var_4354,)
output = call_4352
func_4355 = relay.Function([var_4353,var_4354,], output)
mutated_mod['func_4355'] = func_4355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4313_call = mod.get_global_var('func_4313')
func_4315_call = mutated_mod.get_global_var('func_4315')
call_4415 = relay.TupleGetItem(func_4313_call(), 2)
call_4416 = relay.TupleGetItem(func_4315_call(), 2)
output = call_4415
output2 = call_4416
func_4435 = relay.Function([], output)
mod['func_4435'] = func_4435
mod = relay.transform.InferType()(mod)
mutated_mod['func_4435'] = func_4435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4435_call = mutated_mod.get_global_var('func_4435')
call_4436 = func_4435_call()
output = call_4436
func_4437 = relay.Function([], output)
mutated_mod['func_4437'] = func_4437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4435_call = mod.get_global_var('func_4435')
func_4437_call = mutated_mod.get_global_var('func_4437')
call_4456 = func_4435_call()
call_4457 = func_4435_call()
func_1673_call = mod.get_global_var('func_1673')
func_1676_call = mutated_mod.get_global_var('func_1676')
call_4483 = relay.TupleGetItem(func_1673_call(relay.reshape(call_4456.astype('float64'), [7, 9, 15])), 0)
call_4484 = relay.TupleGetItem(func_1676_call(relay.reshape(call_4456.astype('float64'), [7, 9, 15])), 0)
output = relay.Tuple([call_4456,call_4483,])
output2 = relay.Tuple([call_4457,call_4484,])
func_4528 = relay.Function([], output)
mod['func_4528'] = func_4528
mod = relay.transform.InferType()(mod)
mutated_mod['func_4528'] = func_4528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4528_call = mutated_mod.get_global_var('func_4528')
call_4529 = func_4528_call()
output = call_4529
func_4530 = relay.Function([], output)
mutated_mod['func_4530'] = func_4530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4435_call = mod.get_global_var('func_4435')
func_4437_call = mutated_mod.get_global_var('func_4437')
call_4534 = func_4435_call()
call_4535 = func_4435_call()
output = relay.Tuple([call_4534,])
output2 = relay.Tuple([call_4535,])
func_4538 = relay.Function([], output)
mod['func_4538'] = func_4538
mod = relay.transform.InferType()(mod)
output = func_4538()
func_4539 = relay.Function([], output)
mutated_mod['func_4539'] = func_4539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4528_call = mod.get_global_var('func_4528')
func_4530_call = mutated_mod.get_global_var('func_4530')
call_4540 = relay.TupleGetItem(func_4528_call(), 1)
call_4541 = relay.TupleGetItem(func_4530_call(), 1)
output = relay.Tuple([call_4540,])
output2 = relay.Tuple([call_4541,])
func_4561 = relay.Function([], output)
mod['func_4561'] = func_4561
mod = relay.transform.InferType()(mod)
output = func_4561()
func_4562 = relay.Function([], output)
mutated_mod['func_4562'] = func_4562
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4435_call = mod.get_global_var('func_4435')
func_4437_call = mutated_mod.get_global_var('func_4437')
call_4575 = func_4435_call()
call_4576 = func_4435_call()
func_1752_call = mod.get_global_var('func_1752')
func_1754_call = mutated_mod.get_global_var('func_1754')
var_4586 = relay.var("var_4586", dtype = "float32", shape = ())#candidate|4586|()|var|float32
call_4585 = relay.TupleGetItem(func_1752_call(relay.reshape(var_4586.astype('float32'), [])), 0)
call_4587 = relay.TupleGetItem(func_1754_call(relay.reshape(var_4586.astype('float32'), [])), 0)
output = relay.Tuple([call_4575,call_4585,var_4586,])
output2 = relay.Tuple([call_4576,call_4587,var_4586,])
func_4589 = relay.Function([var_4586,], output)
mod['func_4589'] = func_4589
mod = relay.transform.InferType()(mod)
var_4590 = relay.var("var_4590", dtype = "float32", shape = ())#candidate|4590|()|var|float32
output = func_4589(var_4590)
func_4591 = relay.Function([var_4590], output)
mutated_mod['func_4591'] = func_4591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4435_call = mod.get_global_var('func_4435')
func_4437_call = mutated_mod.get_global_var('func_4437')
call_4647 = func_4435_call()
call_4648 = func_4435_call()
func_3184_call = mod.get_global_var('func_3184')
func_3193_call = mutated_mod.get_global_var('func_3193')
const_4651 = relay.const([1.729275,-4.619449,-9.482613,5.749717,-8.826022,6.606440,7.060582,-9.015904,-3.373531,-9.630239,4.146339,-9.866847,4.148283,3.993998,7.628783,5.111254,-4.796252,-5.290712,-7.415872,-3.986305,-4.657505,0.384719,0.340246,-2.693208,8.531500,4.312225,4.573432,-7.278047,-0.266675,7.855035,-3.192875,-2.274356,-6.879422,4.079878,2.895772,8.788681,-6.040848,9.657470,0.800939,6.034798,-8.398419,1.242328,-0.291213,-7.832892,8.612935,-7.870379,-7.356773,-1.698244,6.474309,0.089996,-8.131831,-3.924577,2.558271,-6.204980,2.178309,1.492696,-1.107807,0.366007,-7.425058,9.128455,0.670183,2.293115,0.503529,4.651576,-7.025420,6.813226,2.901569,7.651073,2.389002,7.209679,4.126942,-4.259354,-1.095182,-4.788561,0.849511,-3.863318,7.024480,-6.454461,-4.533482,4.520262,-7.770008,7.815713,-4.317442,-8.902298,-7.501245,-7.856833,4.892329,4.199449,6.106817,-8.042848,9.411756,1.985683,5.356240,3.013159,0.359080,-3.085260,1.183909,-5.099416,-4.650992,1.706810,-0.597987,-4.782606,-8.748400,4.983983,6.847502,-4.464826,1.441687,4.986095,3.387190,-7.591014,3.678546,-1.602739,-0.563421,-3.665340,-9.267536,9.310923,6.759777,-9.682348,8.708617,6.236097,0.873386,9.642643,-7.471854,6.005462,-3.443866,-1.881151,-2.998039,-5.898874,3.894845,5.169889,1.486700,9.741928,-3.554769,-3.346377,4.204500,-0.709156,-1.718694,5.819940,-6.297602,-0.925774,-6.622893,-0.008059,-0.990989,0.505591,3.742693,1.837464,7.600040,-0.840190,-2.180093,3.676273,-7.130670,-5.315949,-5.601737,1.682385,7.083778,1.753430,8.734180,-1.753081,-9.434462,7.246673,2.233006,-0.915730,2.793922,-1.045428,-8.982440,-1.958369,-4.256484,6.800871,-3.052490,7.020186,-5.268452,-3.484698,0.253880,3.069274,-6.351981,0.375957,4.299432,1.621584,-1.287142,-8.816622,2.668966,-9.743849,-8.694587,-6.836078,-4.558115,-7.389732,-9.477637,-1.481294,4.206600,-3.111470,0.772548,3.553074,6.541921,6.124533,8.388985,-7.998532,-0.823248,-0.144626,-7.499839,-1.672663,-6.018775,-6.869119,8.602772,-7.815782,-1.651773,-2.816187,8.428223,3.792002,-5.811173,-8.235315,-8.951591,1.965088,8.970300,8.493718,-0.010336,2.053956,-3.780925,-6.731813,-9.617477,9.254329,6.705015,-3.960639,6.663436,6.767760,2.998876,7.322538,5.824616,-9.739105,-6.005069,-7.014744,5.923487,-9.742092,8.838861,7.475982,6.842228,2.332117,7.488445,9.804779,0.214229,-6.039287,9.504800,-7.014249,-5.605809,2.483693,2.075199,-6.029522,1.732546,-8.076406,1.998976,5.364161,-0.379379,2.556138,-0.374485,7.760637,7.028442,-0.601708,2.951650,5.458114,-9.187201,1.787413,6.750188,-1.994849,-1.689366,4.971678,5.858647,-4.483265,2.145909,9.939236,3.616352,6.606590,-0.158420,5.577391,0.282136,-4.692101,3.593267,6.984779,2.844387,-7.452910,-1.220273,1.515201,-6.233649,-9.176511,0.716785,7.121582,-2.876467,0.613820,1.547009,-4.332477,-6.911548,-0.789763,-2.539103,-0.414676,2.815928,2.382124,-5.356252,3.240210,3.838439,4.301965,7.190066,7.799788,5.872106,1.959519,2.164490,8.050128,-3.266383,0.446049,3.417358,-4.400765,-3.534197,8.028526,-4.357326,6.350421,-5.983507,-0.473370,-0.870856,5.392692,-8.927056,-1.418757,-1.736428,6.699778,6.690528,-1.560473,-2.946208,5.235630,-6.712444,-3.585023,-8.496923,-2.981564,-3.921118,-0.676228,-8.685647,-6.842332,-8.388102,-1.959090,1.485726,8.774074,6.489922,3.571270,-4.874459,-4.687968,6.341602,0.066438,4.302722,-4.629365,-4.669538,-8.217718,-5.745461,-4.040780,9.376938,-5.236999,-8.475884,6.300498,2.653809,-4.854280,6.945921,-5.331101,3.091804,-3.885594,-9.607104,-4.785675,-1.915899,1.225158,3.458679,1.306594,8.094607,7.843664,-3.378914,8.544815,-3.614087,0.417455,-1.023193,-8.194382,-9.092404,-4.960996,-7.388917,3.631227,0.803722,1.060833,-7.455148,4.897419,-4.587578,-6.838814,7.313566,-9.429185,8.511084,-5.883819,-2.109649,5.698438,1.519201,2.324426,-8.542992,-4.908012,6.747727,-8.972811,8.626471,7.263751,7.833578,-4.553505,9.368072,-7.761128,-2.389096,5.431484,7.463206,9.820609,-6.158493,-7.268178,-0.919156,8.528934,6.825728,8.246662,4.259622,-3.555164,-7.771850,-6.071313,-3.594560,-7.336211,9.333084,8.025558,-4.514025,9.370258,2.490957,2.027544,4.857403,4.983784,7.947137,9.809002,-2.064463,5.181653,-5.673137,-4.599484,-2.258833,2.698656,-0.903423,-1.615679,-9.008162,-2.458822,-8.083824,4.644939,-8.162791,-4.547256,1.957146,-2.441190,0.606146,0.063435,0.379419,-7.455787,-3.464800,7.218278,-7.901918,-5.850523,-9.581798,-9.158924,-2.639907,-3.690959,3.097873,-9.509340,-1.836950,-3.944334,-2.782775,4.824003,0.866273,3.062631,8.826004,9.154097,8.667012,-5.695332,-0.785221,-7.552960,-8.378911,2.356675,1.776775,2.782800,-0.968859,8.827368,4.675483,7.645467,0.919358,-5.340272,4.040251,-2.957473,3.136323,-3.224887,-4.054491,4.477457,4.057064,-9.208982,-5.129219,-7.603449,7.278658,-4.994589,-0.563727,2.766013,-5.899068,7.760581,0.869220,-1.528426,-3.951291,-6.112530,3.334164,-8.304802,-7.375729,6.576199,-6.386361,-4.116486,-2.859738,-8.981196,-2.952843,-2.161270,9.874985,-4.177988,5.217719,-2.184974,-7.273552,-2.126644,-3.592063,-5.518081,0.016495,7.235105,-6.124030,2.540811,-4.308440,8.425356,-7.443596,-0.133468,7.869190,-9.912601,7.947484,8.474071,-5.495121,-3.916910,-5.046334,8.151283,-5.730978,4.995669,-4.049279,9.507005,-0.863522,2.863715,-8.702725,-0.791174,9.257363,8.791706,1.309622,-3.598215,-6.616210,-1.406178,2.494813,8.446543,1.138949,-3.472822,7.717848,-5.507255,1.896619,-8.276314,8.708293,9.691474,-8.881523,-2.068586,1.247580,7.570843,6.516778,-6.341389,3.777797,-7.474858,-0.647250,7.307688,5.068450,9.020823,4.628381,-3.597597,2.462954,2.977500,-5.667555,9.916798,-7.835813,-6.554096,6.364458,4.492536,-0.882058,1.953047,-2.970033,-4.809150,-9.438822,-8.119505,-9.166385,7.559972,1.007679,5.778822,-4.371945,1.965985,6.380133,-6.381470,4.138982,0.493280,1.421504,-2.144481,2.989041,7.313450,0.649587,-1.670991,0.175436,6.094571,-4.327593,-6.263658,6.200213,-0.427253,3.388936,2.811660,-4.729905,-8.980357,0.579224,8.229882,-0.071652,5.999614,8.768386,6.778615,9.381085,2.470182,1.036594,-9.177350,2.479370,4.605354,3.069623,5.068418,6.538297,4.262696,2.994960,-6.663705,-6.242491,1.691236,9.064338,-8.316987,1.127495,-0.269138,7.731258,2.374838,1.827955,-3.983343,-6.375196,-9.027702,9.816897,-2.447474,1.785421,-8.687756,-9.807148,1.318751,-2.109000,-5.803648,0.994655,-9.775489,6.759164,1.955940,-1.221975,6.890544,-0.157979,5.342295,-7.738978,-9.535260,-1.653816,2.520723,-3.208687,-4.623735,-8.195126,-8.366917,8.017818,-0.476722,-5.057359,-0.777309,8.970679,4.357349,1.423186,-5.862989,8.381389,7.980863,3.124371,-0.624036,1.724786,0.408807,-2.271019,2.119934,-2.457367,-7.358614,-8.467727,-3.551162,5.543787,9.815780,-4.478928,-3.979462,-2.287138,2.401504,-8.931381,9.350235,-4.179257,1.270165,-1.669487,-2.483131,-5.062185,6.239213,0.839551,5.047864,-2.732507,-7.196853,-9.069103,-7.539183,-6.615046,-5.706221,7.948424,4.636602,-8.029398,-6.029860,2.572049,-7.040155,-3.192497,-5.061172,0.852557,-7.127820,-2.038885,-2.089660,2.612756,3.453955,-0.332536,-2.373427,3.223026,8.916617,-7.256981,-0.468547,-6.035814,3.925340,5.506460,8.722012,3.592736,-6.345887,-6.576021,-1.728606,0.051108,0.270213,-7.562302,1.884010,1.872729,5.209494,3.687341,-3.931365,-1.935598,-7.053790,1.283002,-6.929890,4.834314,4.936551,2.620260,8.340310,1.272262,-2.005416,-3.410912,-6.737618,-0.180831,3.911502,9.255541,-6.513532,9.164966,5.446742,-7.459824,-9.836189,-0.155616,0.365128,2.866001,-3.034466,4.572350,-7.290720,0.403551,-4.852632,2.155660,8.149210,9.276910,-7.203001,-8.528596,3.673827,-6.841093,-3.937326,2.867627,-1.731966,-2.328296,-2.629030,-4.214885,2.690667,1.418899,7.762068,6.771202,5.179498,-0.370098,3.893370,-1.480660,3.498981,-3.972435,8.763715,1.441146,7.471578,1.251643,-2.153083,-8.313023,6.668753,3.427990,-1.994377,8.612551,8.925943,-7.323953,-3.185241,2.850060,2.813820,7.853935,-4.834673,-0.132174,-0.310091,5.307920,5.598544,-3.551755,8.148601,-5.390599,-8.059560,1.943742,8.841786,-4.875256,-6.971040,-5.675760,-2.755011,4.865532,-3.931050,-1.718736,5.543239,3.268364,1.968857,3.753718,2.072714,0.314543,4.552041,2.572160,-7.075254,-6.766924,-6.593936,-3.544708,-6.154542,7.208430,9.602812,5.476064,2.877748,-0.114837,-9.848041,1.353409,4.764043,8.436070,1.693217,8.857079,-3.063318,2.264275,-0.402902,8.660359,4.107751,-6.125037,-5.414317,3.722011,-0.223948,4.841831,2.819842,5.959167,2.455202,1.567632,9.287417,-0.774881,-6.010153,-3.744328,4.548645,5.774749,-8.331938,8.400916,5.651072,-5.686757,-9.798622,-4.584107,-5.272626,-7.023448,-4.730745,0.492023,5.446065,5.791340,4.835105,-9.595190,-2.430475,4.972594,5.909084,5.167638,7.616774,0.875390], dtype = "float64")#candidate|4651|(891,)|const|float64
const_4652 = relay.const([1.969881,4.693112,7.691395,0.263404,-3.893297,-6.057440,6.660266,-4.311072,-7.936702,-0.442691,6.644173,-3.670141,-0.748656,-0.229628,2.955341,7.209041,-4.118004,-3.830627,4.951330,-0.532425,-5.582681,3.453532,1.539056,6.467102,7.490169,-1.938703,-1.371263,7.341046,-3.530069,-7.862269,7.583182,-7.527312,5.570252,2.468444,-4.784842,-7.078733,-0.850824,-1.535708,-7.413584,8.684565,-8.103669,-5.343643,-8.412326,9.430170,7.391485,-7.496352,4.418433,-8.442530,2.755211,-8.872463,2.294129,2.843328,-7.598884,-3.504753,4.308706,6.408089,3.177771,-2.217418,3.785573,-5.409894,-8.136702,-0.550819,4.386869,-8.170761,-5.824603,-9.597711,1.877016,-1.759704,-4.867077,-4.002423,-8.243607,9.590630,3.406015,-6.850380,7.596828,-2.835262,8.849310,9.332509,7.459521,-3.605074,-0.972888,-9.078335,-2.016837,-3.571718,8.391874,-7.560125,-9.784142,1.573211,-9.862809,-6.953426,-1.172651,1.371876,0.249403,-4.738182,-0.728824,0.079966,0.109776,-8.740379,-8.052514,-2.822812,-0.432282,9.218727,-7.026812,-4.397280,-3.502254,-1.377919,0.172730,2.415747,8.639253,-7.255498,-6.548789,-7.773055,8.168016,0.006264,8.238402,5.082937,-1.902641,-3.591254,3.027493,2.963276,-4.057766,-0.887132,8.235068,-4.020321,1.583300,-2.757566,-3.576579,8.615952,-2.043788,4.105299,2.752581,2.330497,-9.049796,-2.799072,-0.973947,1.504671,-1.653320,0.077379,6.155368,-8.653521,-7.796495,-7.000738,1.764487,-1.720426,-6.387821,-2.212973,-1.069790,-8.466694,1.967800,-1.872469,-2.192432,-7.983649,7.701504,5.976961,-5.083283,8.433721,-9.630427,7.897604,6.381197,1.113219,-7.898744,0.410658,5.674689,2.236602,4.870620,6.542494,1.014533,-6.233334,5.531171,-5.682483,9.031737,-2.374204,9.630480,6.641289,4.166951,4.706466,-6.608061,-4.324765,-7.973615,6.016078], dtype = "float32")#candidate|4652|(180,)|const|float32
const_4653 = relay.const(-3, dtype = "uint8")#candidate|4653|()|const|uint8
const_4654 = relay.const([9,-1,5,-1,4,-8,3,-10,7,5,9,-3,2,-8,-4,3,8,-6,-5,-7,-10,-9,-10,-2,-4,-9,10,5,-1,-6,-1,-8,2,4,-8,8,8,3,-8,-9,3,-7,-1,2,7,-8,-7,-9,-8,-8,-4,6,-6,1,7,4,7,10,4,-1,2,-9,-6,9,1,-2,-6,8,1,-3,9,-8,-1,-8,2,7,-9,-4,7,8,-3,-3,-3,8,-2,2,-10,-2,9,-9,-7,7,-3,10,-4,-7,3,5,-3,-9,6,10,4,-1,10,-5,4,-5,-3,-8,7,6,-7,5,-6,7,-10,1,9,-6,-10,7,5,5,-1,6,8,10,-7,-5,1,-6,-1,4,9,-8,-3,4,-9,7,-10,7,-7,3,-4,-6,2,-6,8,-10,2,-5,5,4,-8,3,3,8,-9,-3,-9,7,-8,-2,-5,-3,-2,-3,-8,10,-9,6,5,2,-4,8,-4,3,-8,-10,9,9,4,10,-10,-9,-3,2,8,-5,-9,-6,-8,6,-3,-8,-2,6,10,9,6,10,3,-1,-6,-5,-9,-1,-9,-10,5,-7,-6,2,-8,-7,-1,6,-1,-6,3,-3,2,7], dtype = "uint8")#candidate|4654|(224,)|const|uint8
const_4655 = relay.const([[0.159322,-0.594069,-6.748765,6.362937,8.693405,-6.693325,1.300808,-4.176513,2.979241,-0.828340,5.910949,1.163438,4.180930,-8.265150,4.990963,6.654312,-4.950716,8.876155,-7.340370,-8.239822,5.160990,-7.931824,4.405693,-7.973336,-2.348123,-9.138841,-1.200923,-8.959815,-3.436260,2.343308,-9.065215,-2.060317,-0.029958,5.237144,-7.758420,-4.505115,-1.279835,2.112189,-2.384064,1.282740,-3.387159,-1.501587,1.054142,-4.060653,-0.245658,-6.825078,1.328582,0.780754,-6.139812,-6.717425,-9.986643,-5.356072,-6.750138,8.421684,0.712673,6.213520,-1.667565,4.486647,-1.872495,3.636841,3.334836,2.015207,-3.316564,6.767365,-3.932298,-4.672576,-0.862671,8.455830,-0.522577,5.625389,2.199679,7.910021,0.668655,-3.983542,-2.101155,-6.421588,9.652394,-5.244278,-0.587706,-0.586016,-2.763732,4.586341,9.703641,5.892835,8.146366,9.641634,5.938649,-4.954757,7.165481,7.548833,-4.833775,-3.960603,8.528302,-4.144555,-4.533433,-5.830101,5.009219,3.668116,6.767154,-0.676276,-7.958859,1.113981,-8.864080,-4.581612,-2.420256,0.156959,5.771702,-8.363544,2.501842,-8.418646,5.627627,-0.906305,-8.105267,9.734877,-1.505996,6.139665,-5.960645,-8.784871,-8.028318,-7.610373,-9.072758,-3.577444,8.347526,1.652623,2.954116,-5.528684,-9.742242,0.865859,4.973306,-6.748487,-9.246861,-9.746218,4.363876,1.762350,6.365272,-9.123124,8.004050,8.149511,-7.213027,5.211242,-3.364754,-0.575503,-4.752984,1.412787,3.703892,3.993994,7.344535,-8.063813,4.938703,1.345743,6.835068,-8.751525,-3.911552,-3.576789,-3.846714,-8.703172],[5.022190,-3.339722,-8.038992,1.375165,1.533645,2.255601,-3.424732,5.509121,6.374900,-5.055682,3.617963,4.372236,-0.345968,-6.133107,-9.446346,1.078404,5.647826,3.517013,-0.619894,1.844129,-1.434467,-0.592004,-1.638480,-8.717079,-6.857407,9.635640,6.484460,3.517098,-8.296706,2.319973,-4.199370,-2.526778,-8.648730,2.729564,3.996460,-1.804402,0.947333,-6.064352,1.298004,9.684802,-6.682023,9.569831,-2.711236,5.247836,-0.459076,7.240352,-5.596010,-3.702515,2.011284,1.913294,0.509232,-6.423518,-4.230547,-9.373762,4.364962,-8.255870,-3.288086,-8.904195,-2.707788,2.341606,-2.453670,-4.634649,0.928779,3.003614,-5.565969,3.797055,-2.215640,1.596485,-4.981719,-9.013050,7.182759,9.419034,-1.412598,-1.618841,-7.299794,1.436642,-6.714501,4.813771,9.764532,0.154726,0.501581,1.185252,-0.115536,-9.552681,-4.367112,3.908856,4.846180,-1.563351,-2.670901,2.812678,-3.014214,2.044093,-4.702386,-9.151315,6.835921,6.496067,-7.200979,-0.849387,2.534896,-8.861729,-4.850731,-1.154200,-9.188643,1.635707,6.581004,3.657732,-3.609273,3.360136,2.994842,-1.526275,9.990565,9.084528,-8.863288,-8.147230,9.816921,4.732986,-5.912802,9.534982,-3.168290,7.863606,7.986696,-3.223122,7.740109,-9.405638,6.626848,4.103283,2.439922,6.846588,9.994889,8.304097,-0.926069,-7.236198,-2.860376,8.338594,-4.808979,8.258548,-5.245759,1.442274,4.364981,-1.605600,-9.829052,9.192188,5.689282,2.912907,-1.977592,0.205899,-9.134780,-9.517654,3.950077,7.567314,-9.616973,-4.819635,-2.308397,6.653163,8.614729,6.494118],[4.552849,1.948399,7.455666,7.653346,-2.728507,-1.244164,-3.801872,0.210164,-7.819565,-6.133623,1.739897,0.528102,-6.143888,4.431044,3.369670,-3.397181,8.341678,9.273573,-2.114724,2.229904,8.115492,7.225748,-4.379373,6.744511,-3.527843,2.400237,-5.197030,7.739995,2.119769,6.829885,7.331248,-7.184991,2.750063,3.222360,-0.987141,-1.747622,-1.230654,-2.136869,1.757691,-9.363661,0.397745,0.343185,-7.620779,-5.949788,-0.063304,-2.513171,4.432312,-3.185122,-6.309311,2.321042,-0.968899,-7.676805,5.387092,6.230386,6.728223,-4.159705,-7.752807,-5.151829,0.556506,-9.614515,-4.711970,2.897579,4.939460,5.476753,-4.940228,2.463967,-5.287700,8.737459,-3.830789,-9.749352,-2.240788,-8.904302,4.008820,-0.410800,6.370733,-5.946949,2.473460,-1.015219,7.726571,4.030819,-2.765037,7.531437,-5.725408,-0.524353,7.286278,-3.029403,-2.110310,-5.936470,-8.045469,-6.888876,-7.764768,0.899121,-0.166545,-9.310894,1.643085,2.018323,-6.551329,4.878296,-1.446768,3.899192,-3.522202,2.490095,-7.753502,-6.071597,-3.995950,7.257953,7.592389,0.869489,-7.608736,-8.883795,7.696778,9.750781,-1.842459,-1.402545,-0.057294,-1.588420,-7.566365,6.361909,-4.030095,0.464044,-0.490925,4.070243,3.088726,-6.645860,-5.019818,-0.022182,-2.056550,-8.389904,-7.321340,4.963386,-4.712650,9.447210,-7.110248,-5.873108,5.198175,3.374440,-0.779163,3.914808,5.915738,5.791960,-2.937500,0.086755,8.308394,6.274084,2.799454,-4.841335,5.523805,-1.169107,3.416108,-2.142394,-9.723578,-0.163756,-7.599054,-1.407856,0.683378,4.909547],[9.613801,2.837725,-4.183162,-5.601724,1.340362,-8.361207,1.006239,-6.084915,1.992486,1.093780,7.420732,-9.014437,1.683495,8.920819,-4.574810,1.016278,-6.918924,-9.633223,0.815485,-6.771894,6.097566,3.254272,3.727534,3.731157,-6.405389,-3.736575,2.556832,4.032616,8.880560,1.637184,-7.768990,-1.274057,4.879854,0.063136,7.109437,-0.720534,-2.381135,0.533096,5.111346,-4.891646,2.347515,2.483311,5.693310,-0.080143,-4.846214,-9.106157,-6.361007,8.111547,1.725536,-6.356478,-7.368259,-5.358773,8.304319,-5.283803,-3.622329,-5.153651,7.119247,-5.555379,5.981529,2.505081,2.075141,-7.089217,-2.675196,6.099068,-0.353623,5.887862,-4.931727,-2.909011,0.196889,0.212826,6.182943,-3.014827,9.032443,-4.240233,9.791825,-6.368874,1.085427,-0.062290,-6.509859,-4.555960,7.485796,1.268921,0.089454,6.870613,-8.694784,-3.415974,6.634764,-5.119339,-1.772722,4.918379,4.030402,-7.032109,-8.691252,-5.865513,-3.352436,3.238593,-5.602616,-2.677371,-7.880025,2.921037,-9.839018,4.581026,-9.603584,-5.031197,-9.721149,-1.236416,-3.017111,-7.373526,7.331165,9.552748,7.622075,0.203692,-5.297466,1.141501,-8.953652,3.930661,6.475822,-1.709551,1.995087,-5.448426,-3.686378,4.828084,8.723050,1.500150,-9.323437,-5.945386,2.018080,-4.109475,1.623583,3.952105,-7.879528,-9.022575,9.422946,9.036541,-4.254492,-0.066945,-9.191896,4.771359,9.153249,-3.600329,0.407198,-4.682694,-3.661140,-3.039334,-3.079791,9.500537,5.301308,-2.540272,-8.847804,4.287602,0.989790,8.660164,5.737388,2.015959,2.863755,-7.408301],[9.770429,-7.503302,3.019294,3.407924,-6.809833,-4.860757,2.022889,-0.042773,-8.526491,-1.949167,9.116567,3.457628,-9.202720,4.197208,-3.858247,-8.345132,-1.794950,-4.430834,-7.942648,-7.721953,-7.572137,-8.259216,7.957827,-8.546076,-3.717329,-1.701596,-6.780982,-5.302148,-8.657959,4.170730,2.488899,-1.795306,-4.879170,-3.987170,7.894848,9.895878,4.528943,4.459150,-8.544615,4.735598,-0.535455,-3.787322,6.762891,4.564739,-6.924601,6.910101,-8.349862,-6.563434,-6.373886,8.332367,6.312857,3.499856,-4.506451,9.550622,-3.657587,7.345420,-8.353438,-1.161416,-8.575185,-4.747364,-5.007557,8.240961,6.992028,6.973361,-8.240583,9.467924,7.889677,-8.795946,2.712344,-8.969279,-7.909622,-0.503111,3.655267,6.030578,-0.825750,-9.731146,2.713719,-1.410103,9.704397,-1.467759,-2.467913,4.210447,-8.010959,-0.727044,-8.529232,-3.551388,-5.603308,2.028359,1.026650,-3.971218,-1.114123,-3.789359,-2.689483,4.157160,-2.303762,7.839931,2.359883,-6.967681,-4.042572,-3.782666,4.559184,-2.524564,1.897980,1.349007,-9.004315,9.472691,-4.761064,-7.040302,-1.608749,7.856185,7.469446,7.844344,6.443721,-1.946096,-6.883174,-9.053806,1.548007,-3.258983,1.442798,7.272573,5.082523,-1.346566,-8.267221,-6.238994,-2.277117,4.828993,-3.346711,7.104268,-7.853783,9.472251,-0.136751,-6.347049,-0.940814,-2.143665,-2.460560,8.196048,-3.897841,-4.571927,-3.445690,7.582363,-0.652946,-7.247168,-9.454905,-3.711825,-0.465024,8.847018,-0.694903,-6.192063,-6.167744,-9.663295,4.053653,-4.164411,9.237783,-6.893923,0.459898,1.020595],[3.104193,-2.149239,4.525808,-5.189302,3.685414,-0.979506,-5.478358,-3.749852,2.702780,4.378458,2.920969,2.014311,-4.011607,-5.824274,9.844628,7.714198,-7.414324,-4.959710,2.399413,2.358158,4.460336,-6.950389,-3.073347,-9.345096,5.756900,-6.560780,-9.444954,8.051452,-5.088330,-9.940260,3.220191,-1.682796,-2.346869,3.786880,0.122484,-5.683502,-6.218878,-8.552236,3.605733,5.146722,7.075558,9.333231,5.130992,-9.363350,4.557854,5.956684,2.758895,-2.213891,9.476895,5.779411,-9.897430,6.324853,-0.172145,2.686594,-6.582233,-0.007850,5.101966,8.082542,-2.886418,-8.788620,8.301550,5.912948,0.959189,-8.349456,7.765695,8.166779,6.514968,7.357525,5.664924,8.536462,3.567950,5.777633,-7.888223,3.477441,-3.764072,-3.843604,6.798089,-3.814704,9.849828,7.638192,-6.081921,-5.573875,7.347932,1.642275,-9.218166,1.421254,-6.541675,-5.207393,6.991887,-8.985963,3.137582,3.538304,-6.612901,5.411724,-1.418260,-2.010611,-3.504100,-3.501563,-9.448308,-8.227807,5.845092,-2.486226,-9.074836,-7.064289,-6.436821,9.580448,9.351885,5.012876,9.358588,1.953777,6.730684,-3.083369,-7.816960,-6.853834,7.710364,3.811304,-8.648671,-5.635150,2.311993,-4.982163,2.383142,0.768068,4.195976,-1.726870,-8.354575,-8.151937,-5.920608,6.084256,-1.135306,1.658091,-7.544674,-2.934196,4.134615,1.865337,3.056021,-9.884822,2.568455,4.682689,-5.120775,9.147477,0.120388,3.334171,4.984781,-9.675839,-2.041283,4.775549,-7.766527,4.110649,-4.701353,-6.177223,-3.285363,4.467981,6.358145,-8.381628,-7.327903,-6.442747],[-1.491901,0.912870,-0.003504,8.994686,-6.756720,6.680172,-7.764690,-7.218763,2.042401,-2.298894,3.566649,0.508514,-0.076751,9.316247,-0.737680,-2.086480,0.968296,-3.411226,5.403744,-1.938904,-2.678606,-9.549634,-8.141046,8.713322,-0.504005,5.710728,4.992412,-9.907554,8.472292,5.014217,9.240560,-1.567285,0.356357,-8.736282,-4.880828,-9.190274,-5.527931,9.690029,8.669419,-9.042340,-3.460391,-8.564841,-1.446055,1.843097,-5.662075,3.588834,-2.162279,-2.890979,-6.593000,-9.589755,5.580886,2.782375,6.049097,-3.958448,-8.500995,-2.335552,-6.550621,-3.532008,8.757558,-4.484513,-6.583087,6.428676,5.428806,8.784230,-6.002548,-9.341343,-9.278467,4.465079,-3.410362,9.740980,-2.741045,9.336576,-0.574073,-3.538319,0.792667,4.272546,-8.553382,-5.391643,-4.467984,-7.729695,7.411229,-0.254444,-9.613296,-3.975686,4.383139,7.758021,9.441464,-3.689861,2.523923,-5.188583,-7.395039,-5.165490,-8.702680,-7.944388,-1.861182,-1.019013,-5.001319,-1.041013,-1.962747,0.225614,-9.920860,-4.649071,-6.965301,2.606487,9.249936,-5.766846,6.601531,-7.181458,-5.126206,-3.368185,1.008099,-2.991673,7.034823,6.330710,0.073598,0.501491,6.767198,-7.253092,-7.680891,7.215749,7.441804,9.925955,9.789172,-4.840055,6.006436,-9.661610,1.375962,-2.271238,3.495805,6.681877,-5.294027,-5.458105,-8.020664,9.422211,-8.860168,-7.492305,5.219241,-0.079238,1.228867,-6.806670,6.576985,-6.860229,0.630241,5.073635,-2.805950,-0.157457,6.049719,-2.583623,1.922328,8.919591,1.611669,4.637208,7.512626,9.024906,-1.978926,8.069968],[-9.293096,3.869341,-5.509565,3.697464,9.763796,-4.402530,-1.206881,-5.819303,-1.367965,-3.591580,6.195141,-4.862690,6.958312,2.960553,0.216767,-9.756343,-5.694965,-6.941132,-3.549024,5.814801,1.590207,9.536639,6.233050,0.653118,4.181721,3.133041,7.608235,2.044111,3.225873,-2.771209,-0.583943,-2.654620,-4.519635,5.123526,-3.310001,-0.762379,-1.779106,-0.048734,0.860797,-4.766233,3.101833,8.117292,4.206928,2.379535,-6.081683,-9.182705,-6.019649,5.919212,0.337848,-1.085762,-2.715321,3.744375,-1.619419,-0.448329,0.189328,-4.888763,-7.598786,1.227793,-4.367653,-0.939571,-7.145289,6.266992,2.377384,-6.811067,-1.755863,9.691339,4.312588,9.267522,-5.287965,-5.775630,-8.897769,-9.893655,-0.818247,9.167933,-9.222608,1.965763,-4.596165,-7.365875,-1.830878,-5.227502,7.210231,1.802329,-5.350064,-4.611366,-8.137790,-1.749846,0.427085,2.374303,-1.764338,-1.506895,-9.452625,6.584918,1.675258,-1.387883,-6.960941,-7.664941,-1.318594,4.378269,-6.255483,1.036243,-5.711119,-5.095315,-7.205734,2.599933,-0.505533,-8.666727,-8.770924,6.167444,4.962825,9.769309,-1.926710,2.591111,4.631076,3.594802,-0.615226,-8.073146,-5.142989,-5.014350,-1.301302,1.440216,6.845021,2.204706,7.900799,1.746054,-9.424718,7.630393,-9.322746,-6.964993,3.960645,-8.354368,-7.111440,-0.233162,6.583490,-6.414868,-1.720990,-9.970165,4.947120,9.223798,-2.466141,0.483823,2.229764,6.924925,4.553761,2.514643,9.795896,-5.415433,-2.147382,-3.582669,2.477542,9.033456,-3.231613,5.415258,1.414386,-0.876537,-2.119960,0.778418],[-3.335126,8.219203,-1.922914,-3.228770,-5.251358,9.045338,0.524470,-0.482699,-4.690197,7.769299,5.680787,-9.950259,1.047070,-1.384341,-9.302325,-2.286004,-2.170833,-3.446397,-9.521141,-1.316065,3.236929,-9.575733,6.102522,7.368195,-0.493678,-4.471398,-9.092453,4.205617,-7.694792,3.625499,0.747521,4.083040,2.072730,-5.928788,8.263211,3.854736,-3.813594,5.461521,-4.998755,-1.659245,7.751745,1.930042,7.039413,-2.034716,-3.230150,6.342968,5.473865,-6.090790,-8.090516,-7.563684,4.657500,7.225114,9.595079,-4.230811,6.091494,6.989337,8.501586,-3.646422,9.990090,-7.037251,-5.662809,1.259762,3.156117,0.686497,-0.406804,7.110360,5.752020,5.344605,4.074256,-2.529275,-5.143411,-3.313875,-9.877500,7.722705,9.371932,-2.842947,5.745346,0.418796,1.918497,-5.072726,-0.680660,0.193892,-9.096738,2.497656,-3.344123,9.074555,4.493282,0.164668,-7.961965,7.800581,-8.293748,-0.376508,6.728113,-4.717717,-6.726913,-3.819969,-9.057778,-7.167036,-7.160049,8.327689,6.110083,-8.314232,-4.347031,6.859553,-6.932376,-6.921263,-9.968813,-3.594536,-1.617984,-8.415547,5.291557,9.271201,-1.979593,5.386404,9.736151,-9.135208,7.903902,3.046332,-6.316549,-5.046292,1.361556,4.234723,9.672741,2.414414,1.524249,-4.535436,-8.551044,-9.133648,1.547282,-7.583072,-3.004315,-9.777640,8.924556,9.156911,-9.655129,-9.444649,-4.392493,1.760025,4.550663,6.534904,-2.429734,3.981640,-4.214157,6.612165,5.815265,-2.329472,-1.059127,3.556696,2.732158,5.743732,1.291196,1.605151,-8.398835,2.564165,-1.704242,-1.936959]], dtype = "float32")#candidate|4655|(9, 156)|const|float32
call_4650 = relay.TupleGetItem(func_3184_call(relay.reshape(const_4651.astype('float64'), [9, 11, 9]), relay.reshape(const_4652.astype('float32'), [180,]), relay.reshape(const_4653.astype('uint8'), []), relay.reshape(const_4654.astype('uint8'), [224,]), relay.reshape(call_4647.astype('float64'), [945,]), relay.reshape(const_4655.astype('float32'), [1404,]), relay.reshape(const_4651.astype('float64'), [9, 11, 9]), ), 3)
call_4656 = relay.TupleGetItem(func_3193_call(relay.reshape(const_4651.astype('float64'), [9, 11, 9]), relay.reshape(const_4652.astype('float32'), [180,]), relay.reshape(const_4653.astype('uint8'), []), relay.reshape(const_4654.astype('uint8'), [224,]), relay.reshape(call_4647.astype('float64'), [945,]), relay.reshape(const_4655.astype('float32'), [1404,]), relay.reshape(const_4651.astype('float64'), [9, 11, 9]), ), 3)
output = relay.Tuple([call_4647,call_4650,const_4651,const_4652,const_4653,const_4654,const_4655,])
output2 = relay.Tuple([call_4648,call_4656,const_4651,const_4652,const_4653,const_4654,const_4655,])
func_4661 = relay.Function([], output)
mod['func_4661'] = func_4661
mod = relay.transform.InferType()(mod)
mutated_mod['func_4661'] = func_4661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4661_call = mutated_mod.get_global_var('func_4661')
call_4662 = func_4661_call()
output = call_4662
func_4663 = relay.Function([], output)
mutated_mod['func_4663'] = func_4663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4435_call = mod.get_global_var('func_4435')
func_4437_call = mutated_mod.get_global_var('func_4437')
call_4692 = func_4435_call()
call_4693 = func_4435_call()
output = relay.Tuple([call_4692,])
output2 = relay.Tuple([call_4693,])
func_4694 = relay.Function([], output)
mod['func_4694'] = func_4694
mod = relay.transform.InferType()(mod)
mutated_mod['func_4694'] = func_4694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4694_call = mutated_mod.get_global_var('func_4694')
call_4695 = func_4694_call()
output = call_4695
func_4696 = relay.Function([], output)
mutated_mod['func_4696'] = func_4696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4694_call = mod.get_global_var('func_4694')
func_4696_call = mutated_mod.get_global_var('func_4696')
call_4783 = relay.TupleGetItem(func_4694_call(), 0)
call_4784 = relay.TupleGetItem(func_4696_call(), 0)
output = call_4783
output2 = call_4784
func_4793 = relay.Function([], output)
mod['func_4793'] = func_4793
mod = relay.transform.InferType()(mod)
output = func_4793()
func_4794 = relay.Function([], output)
mutated_mod['func_4794'] = func_4794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4528_call = mod.get_global_var('func_4528')
func_4530_call = mutated_mod.get_global_var('func_4530')
call_4803 = relay.TupleGetItem(func_4528_call(), 0)
call_4804 = relay.TupleGetItem(func_4530_call(), 0)
func_4435_call = mod.get_global_var('func_4435')
func_4437_call = mutated_mod.get_global_var('func_4437')
call_4805 = func_4435_call()
call_4806 = func_4435_call()
uop_4813 = relay.exp(call_4803.astype('float64')) # shape=(945,)
uop_4815 = relay.exp(call_4804.astype('float64')) # shape=(945,)
output = relay.Tuple([call_4805,uop_4813,])
output2 = relay.Tuple([call_4806,uop_4815,])
func_4821 = relay.Function([], output)
mod['func_4821'] = func_4821
mod = relay.transform.InferType()(mod)
output = func_4821()
func_4822 = relay.Function([], output)
mutated_mod['func_4822'] = func_4822
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4835 = relay.var("var_4835", dtype = "float32", shape = (3, 8, 12))#candidate|4835|(3, 8, 12)|var|float32
uop_4836 = relay.sin(var_4835.astype('float32')) # shape=(3, 8, 12)
output = relay.Tuple([uop_4836,])
output2 = relay.Tuple([uop_4836,])
func_4853 = relay.Function([var_4835,], output)
mod['func_4853'] = func_4853
mod = relay.transform.InferType()(mod)
var_4854 = relay.var("var_4854", dtype = "float32", shape = (3, 8, 12))#candidate|4854|(3, 8, 12)|var|float32
output = func_4853(var_4854)
func_4855 = relay.Function([var_4854], output)
mutated_mod['func_4855'] = func_4855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4313_call = mod.get_global_var('func_4313')
func_4315_call = mutated_mod.get_global_var('func_4315')
call_4863 = relay.TupleGetItem(func_4313_call(), 0)
call_4864 = relay.TupleGetItem(func_4315_call(), 0)
var_4867 = relay.var("var_4867", dtype = "float64", shape = (11, 2, 16))#candidate|4867|(11, 2, 16)|var|float64
bop_4868 = relay.maximum(call_4863.astype('int64'), relay.reshape(var_4867.astype('int64'), relay.shape_of(call_4863))) # shape=(11, 2, 16)
bop_4871 = relay.maximum(call_4864.astype('int64'), relay.reshape(var_4867.astype('int64'), relay.shape_of(call_4864))) # shape=(11, 2, 16)
func_1673_call = mod.get_global_var('func_1673')
func_1676_call = mutated_mod.get_global_var('func_1676')
const_4874 = relay.const([-1.554858,-8.991286,-7.206015,-1.953729,1.683146,0.734434,-8.629324,-8.104512,1.019646,5.047215,-7.843599,1.009376,-8.149906,-1.176375,-9.754577,-0.975047,-9.148445,-1.389817,-7.669349,-8.422486,0.927269,6.680336,-0.185898,-9.671032,-0.777866,-8.677832,9.808542,7.314155,3.796515,-6.022873,-8.717719,-7.256723,6.187686,5.081919,-0.198294,6.021036,1.382141,8.432835,-3.751262,4.327918,1.002051,5.337421,2.589286,-1.025399,9.009422,-1.516613,8.117614,-1.904648,3.196453,-9.115897,2.446413,8.753756,-8.458105,-4.499092,-4.006868,9.876769,0.667152,0.067457,8.896310,-5.058692,-5.189125,-6.575384,1.663073,-8.109754,-2.609266,-1.356525,-5.620023,-4.386298,-6.718399,9.107710,-6.014919,-3.346743,-8.018212,-6.649782,1.427241,-4.047897,4.101170,2.284760,5.034533,3.551292,-4.427940,5.254910,1.066307,1.603570,-9.944065,-5.169029,7.518157,5.501221,-9.184462,7.463374,-0.663427,9.050838,-5.141641,-2.202365,-4.757624,1.226234,-9.011659,7.300337,-5.714860,3.298411,-4.016646,9.381693,7.714408,6.801279,-7.319559,7.428917,-1.509776,-5.636151,-0.862918,-8.139619,-0.396323,4.572037,-4.111001,-7.102210,-5.179279,7.849977,-6.448685,-6.352807,7.206759,3.401139,8.713080,-9.404928,-8.872625,-0.799606,-3.833342,1.048884,0.791451,4.310969,-8.728138,-5.425201,8.684846,1.554297,0.193682,0.906024,2.136645,-1.367372,-5.708722,-6.827679,-5.300950,4.005877,1.595502,4.033255,8.221677,-1.425154,7.217471,-8.514558,-7.962502,-7.346416,-5.259180,1.937872,-0.127600,-5.927788,-6.093950,9.987905,7.972997,2.248710,-3.060044,4.899950,9.545975,3.719747,6.637578,-4.605755,5.908133,4.215371,-0.114362,4.691541,-5.552836,7.183058,-8.625306,5.479689,5.291111,-8.268870,-2.937462,-2.577363,8.550480,-9.931162,8.680049,-1.242381,2.108820,-1.521671,-5.162674,-4.611394,9.002823,-3.129288,9.599916,-7.934635,-4.299812,-1.683177,-7.505495,6.389931,-3.839699,-7.921689,-6.992509,-8.263817,-6.535929,1.509157,-7.598590,-0.949361,-1.734569,3.585794,-3.287532,-5.656033,-0.611447,3.865564,7.673344,-2.447528,-3.509140,-8.724371,1.724807,-1.873871,2.829980,8.614518,-2.211373,-5.777553,-8.951780,-5.386129,6.334856,8.799584,9.493053,-9.907431,7.005458,-3.121663,-7.776149,-6.828534,4.751143,8.237063,6.088533,-4.455467,-0.734109,-5.369632,-0.745939,-4.908070,7.164108,3.713169,-5.659576,-8.973740,-6.995572,-5.782072,0.123922,-5.682737,5.166348,8.385415,-0.441697,-1.180831,-0.147835,2.481060,9.231825,-3.040021,-6.595110,4.802136,-8.328883,-7.192014,-4.669287,1.614175,-3.426346,-6.452135,6.178920,-0.599898,6.970617,7.567113,9.083519,-1.814943,-8.914332,5.330582,-6.317484,3.474947,-8.083322,4.349348,-8.226071,-7.281448,9.139367,3.030331,8.316786,-8.498088,-5.236394,-1.086818,9.852902,4.120970,-6.604022,-8.723103,5.950885,4.285534,8.453678,5.276925,0.463701,-8.971392,-2.000398,6.206964,1.528062,1.820888,3.716629,8.672721,-7.933511,-0.049530,-6.911690,-3.202016,3.573760,5.000275,-6.448286,-4.062558,4.206005,-9.528964,-9.620975,9.549937,-1.587922,-7.509508,-3.190551,-3.926431,-2.317468,8.382015,5.151341,-5.764829,5.149232,0.221714,-0.213513,3.770356,4.304591,-8.282161,-7.849943,4.862547,-5.638489,-6.694782,-1.007203,2.568211,-6.040659,1.038061,-0.459074,-7.845972,4.692842,-0.909273,0.082332,6.498156,6.231526,2.206572,1.831365,-8.775262,-8.315669,0.523653,2.340510,2.039558,4.356520,6.650409,-4.822861,-2.934656,-2.925758,-2.225005,-5.937516,-8.174337,3.561839,1.093797,-8.218322,-9.182455,1.529101,8.955008,-5.891749,-7.008931,9.215328,-1.481003,8.981381,-0.914895,0.343099,8.948201,-4.017001,2.071366,0.729228,3.302698,3.912017,-3.391127,9.606045,5.039643,-2.875928,8.850297,-0.186475,-4.702703,-4.158652,6.862529,6.052704,-2.952846,-3.287664,4.524241,-7.209230,0.094138,-5.089176,-7.143475,-9.773439,4.339055,6.886726,-7.226014,-5.457329,7.343466,4.427710,-6.915711,-2.800588,2.741025,2.987373,-1.818368,7.243418,4.248280,-4.614573,1.425341,9.792137,4.090061,0.339862,-3.585022,-2.564528,7.726730,-5.860067,-8.365798,-0.968439,8.738916,-9.525044,0.677250,-4.601224,1.008733,7.853005,6.269522,-5.635629,9.754923,-8.667779,7.979572,-4.940726,9.971714,7.014652,2.077080,4.131237,2.682442,-1.575021,2.869533,1.324365,1.651941,4.607816,1.628343,-5.288843,1.334514,8.124673,6.350755,3.678626,-9.901544,1.623680,-5.301590,4.031748,-1.220632,9.647773,-4.671265,4.336153,5.920531,-8.705108,-0.850797,8.510598,6.448746,-4.346505,-0.053066,6.795982,-9.168970,-7.196095,2.184717,-1.440709,-8.934857,7.083378,-8.768540,-4.085471,0.569471,2.640592,2.290894,-1.196066,7.882843,-8.129831,-6.897721,-6.221931,-0.638372,-2.837575,-7.862664,1.652006,-4.666791,1.262994,5.385813,-3.276357,-1.449383,-2.202259,-6.788696,8.437515,-4.113622,-4.954055,3.215017,7.956037,2.021484,-4.882480,9.632167,-6.633975,-2.700733,-5.165060,-8.447855,8.950877,-9.006574,-5.205558,-8.037215,-7.671022,3.030171,7.819287,-2.565179,-5.089361,-9.258684,9.264955,4.584451,4.046541,-8.560412,5.636049,-6.114398,1.056878,1.165916,-1.350718,7.739053,-1.747630,2.879298,-1.424898,-1.647646,4.974213,1.800724,-2.379232,1.451043,-5.123163,-4.568993,-0.566604,-2.050364,6.070000,5.947858,9.766004,8.921515,-2.141825,-1.978028,-8.772715,3.011386,5.193062,-1.025520,5.679228,-7.571196,4.361744,-4.463960,0.823095,-8.814553,-0.553595,-9.073873,-3.699865,3.661852,-5.929882,4.911402,-6.897981,1.660450,2.663641,-4.786385,3.549579,8.796408,2.944577,-3.329825,-3.780405,7.059198,-7.627233,7.042034,6.135800,9.264316,-5.938821,-6.961272,-7.770252,-3.551434,-1.756419,-1.336030,9.583170,-0.467022,6.115724,-0.951236,0.282049,-6.717939,7.139696,9.965165,-6.681902,6.893754,1.309964,-3.233116,1.140989,-7.210729,9.524835,9.474088,-8.282007,1.817987,-7.613886,6.478404,1.124130,0.497461,0.965176,-2.248714,-9.479808,-5.666553,4.765239,7.768869,-7.083098,-2.502132,-5.301570,-8.271280,-6.008895,7.795187,0.374364,-3.440884,-5.472670,-7.586433,-2.615389,-8.190820,-2.423787,1.458107,5.254820,-6.849466,-7.869201,1.785079,-7.995402,5.043565,5.511072,8.498903,9.400920,3.097817,5.951697,-7.437342,-4.071064,-7.582118,7.206316,3.987548,-0.594639,-5.582666,-5.839800,-5.630331,-3.921976,9.014567,-6.734151,-6.784956,1.038057,3.734981,6.881679,-3.349793,-2.340823,-5.995358,-2.225334,-7.426976,0.855547,9.541116,-9.277632,-8.097732,0.863854,-5.245098,-6.261894,-0.349681,3.654067,6.230975,1.296294,-5.319731,-7.175990,2.162074,-4.370938,-7.785243,7.606363,-9.701486,4.499404,-5.003327,-8.474139,-6.301777,2.241904,-5.570708,-6.642009,-5.508116,-8.021904,-2.988368,5.620767,3.875255,7.040093,-3.659071,-4.992024,9.856762,9.513462,-5.651407,-1.822804,1.444035,5.761576,-9.808008,7.030845,8.990258,-2.645345,-4.727393,-5.630835,0.643583,6.587507,-1.549517,-3.303572,9.743642,0.061475,-8.296020,-8.555147,7.633203,3.092833,-6.138232,-9.649331,-1.770633,1.028662,6.599379,6.352853,8.480950,-1.576871,-3.186628,9.326501,-0.376928,7.513768,0.329848,-9.759590,-2.931950,-6.745373,-6.610673,-5.660974,2.745532,-0.485451,6.415981,-5.427863,-5.115704,-8.116163,3.421035,0.695848,-0.442385,-2.327664,-4.327203,3.798516,7.491267,4.102530,-0.139921,-5.719951,4.907536,-4.832960,-6.903885,-3.479251,5.722546,7.578606,-8.846004,4.770798,-1.116490,-5.775980,-8.213697,5.590046,-6.192713,-5.835177,-7.465716,-2.623453,8.235857,8.352045,5.145313,-7.184669,-4.372710,-4.218887,-7.303635,-8.798370,8.238895,-7.088398,-9.948553,1.287913,-4.737749,5.512778,2.275586,2.205478,6.616841,-3.173184,-4.500951,2.789706,0.097372,3.806333,1.193536,-0.908998,8.269150,5.012010,-0.475788,-9.046955,-4.343554,8.641259,3.218481,-9.641736,0.055924,-1.081719,7.468904,7.467385,1.376522,7.400283,-7.099949,6.944626,-5.920091,6.252570,-4.775008,6.132776,0.883766,-7.289231,8.693294,0.776236,4.352241,-4.271615,-3.670098,8.435781,2.511304,-2.799526,-4.048494,8.512388,-4.746296,8.470270,-9.010183,5.041173,-2.020305,-5.816588,-1.368944,-3.495705,6.155380,2.136857,-3.741621,4.417750,4.557292,1.109913,-2.002466,-6.116582,5.089017,1.588276,-6.832217,-8.644431,-1.526967,7.843687,-7.806273,-6.869168,-5.681237,1.282012,5.713269,-1.480210,0.383750,-5.161092,-4.676504,-4.021234,7.022994,6.566179,5.089582,-7.948552,5.857573,-1.411469,9.295145,5.999908,-5.113132,9.638501,-5.025614,-8.893785,1.878528,3.257365,9.739871,-1.681046,5.535782,0.933873,7.547305,-8.562498,8.945557,-6.405581,4.169443,-6.121725,0.312651,2.329638,-9.857773,7.172425,6.780954,6.682338,-9.350362,9.467089,-9.411927,-1.234274,-7.109521,-1.705805,-8.738276,-8.248535,-4.709036,9.459360,-3.273815,2.222152,8.577561,3.434968,2.433270,0.152578,-6.725799,2.281543,6.803198,-9.468829,-1.326068,7.403696,7.814724,4.187391,6.483485,0.607629,6.532303,-3.401352,7.688575,3.754402,-8.837713,5.988590,0.380301,6.483375,-4.738514,-5.017097,-7.911514,2.248643,-2.461054,-5.139099,-7.115201,8.837642,-6.164799,-7.073954,2.344304,9.545050,-3.542699,-2.446638,8.747280,5.288686,6.032823,9.142358,7.994272,-3.869916,1.780098,3.959835,-1.862413,7.190808,-5.802449,2.210413,-5.916083,-1.400868,0.820719,-1.791777,-8.655784,-0.920811,-5.214815,-0.439139,3.021550,0.715194,8.425434,-1.775597,3.944923,-1.979234,4.276521,-6.327587,-3.918281,-6.740531,8.803932,8.217080,-4.574824,-7.856648], dtype = "float64")#candidate|4874|(945,)|const|float64
call_4873 = relay.TupleGetItem(func_1673_call(relay.reshape(const_4874.astype('float64'), [7, 9, 15])), 0)
call_4875 = relay.TupleGetItem(func_1676_call(relay.reshape(const_4874.astype('float64'), [7, 9, 15])), 0)
uop_4876 = relay.asinh(bop_4868.astype('float64')) # shape=(11, 2, 16)
uop_4878 = relay.asinh(bop_4871.astype('float64')) # shape=(11, 2, 16)
const_4896 = relay.const([[[-2.190623,8.667813,-5.780110,6.961963,6.098685,1.699508,-7.951276,2.344277,8.548309,-0.364996,3.982746,5.421411,-1.413143,-3.731505,0.112908,-5.673096],[-4.725136,1.903627,-2.157002,-0.554383,-1.429127,-3.815667,5.134105,2.733274,5.219132,1.016154,8.135112,0.699098,4.875616,4.704381,-7.923841,-8.156623]],[[-3.943530,1.010863,5.401985,-9.392327,2.458791,-8.688152,-5.656238,4.511732,8.504375,-7.416112,4.315665,-8.885531,7.936356,-3.089727,8.092473,6.874766],[-0.355492,-8.218932,-9.799383,9.344247,2.842545,-2.174478,9.833349,1.807880,-3.213035,3.357709,-1.060699,-3.288177,-1.224788,7.205034,-3.252004,3.563674]],[[2.927341,-1.093519,-0.357673,1.506364,0.845041,3.880172,5.472052,9.553032,-7.454928,7.194493,-0.345063,-1.297571,-7.969986,0.289293,-2.347938,7.240144],[-7.453566,0.395612,4.207682,1.780624,-1.833022,9.881960,9.912690,-9.894729,-3.149541,-6.450576,8.771686,6.798041,-4.998581,-8.208212,9.744352,-8.748374]],[[2.859488,-4.715915,-4.998980,2.485613,-0.658194,-0.740498,2.083993,8.918460,1.230221,6.807677,-7.092956,-9.299193,5.159507,-1.647598,2.951953,-7.986979],[-4.337303,1.362492,-5.370754,-0.430051,-1.180584,4.829300,4.258190,5.544280,-7.680612,5.963085,8.464047,-2.589415,1.641955,5.276714,5.199478,0.804671]],[[-0.997378,2.450527,-1.317566,0.556762,-9.617467,-4.322816,3.257123,-9.457632,-4.443296,-2.345076,-4.059814,-4.061635,3.475864,-7.925209,-5.660356,2.908958],[-3.197721,2.729882,-4.584253,9.153328,9.585280,-1.377864,8.680194,9.820729,-8.960922,6.011472,-6.797423,-3.385313,1.358325,-2.183087,6.781950,-2.208237]],[[-3.994556,-7.131982,-9.238354,-6.225292,8.270022,-7.020761,1.988093,6.548709,-4.705079,-2.534501,-9.643256,-1.641840,5.615061,7.353129,-1.753071,7.803287],[-7.021779,3.152226,4.317948,-6.450562,-7.365659,-3.483743,-5.473369,-4.313458,-4.130339,7.466451,4.728872,1.683162,6.936559,4.541452,-1.091954,-1.166489]],[[-0.374339,-6.748069,3.269749,6.476004,2.540261,-9.541735,6.895067,-9.509937,2.617484,-6.162721,-5.135688,-9.105972,1.352014,7.934519,-7.417532,-6.448057],[-7.266244,-4.191920,4.709608,4.212044,8.775686,0.405219,-5.401057,0.896918,8.756426,1.020922,6.232725,4.930004,2.250694,-5.081447,5.820373,2.651212]],[[5.411698,8.904836,0.642372,-7.815473,-7.267868,9.750296,3.007017,4.140733,-4.074880,-7.366931,-1.747392,-2.205534,1.424555,3.432563,1.673502,-0.372084],[-0.696962,-8.954045,-6.486102,7.622822,-3.869350,-6.748967,2.692629,-8.777428,-8.427132,8.320636,3.693418,-5.219455,-4.776687,2.211214,-5.282503,8.872335]],[[4.096657,-3.646401,-5.074221,5.974556,-0.937549,-4.589352,0.960028,-7.695241,-3.110419,-2.046720,3.330558,-6.235604,-6.699411,-9.893382,2.937045,9.990986],[7.678619,-2.343914,4.508632,-2.512361,9.275740,5.258449,8.505857,-8.189085,0.265502,8.674365,-1.462872,3.753494,6.682646,4.124225,5.053506,-3.663234]],[[2.084765,-0.755317,-9.818101,-9.466765,4.761366,-6.627211,5.968166,-0.624911,0.084508,-9.230889,4.207671,-7.531523,2.560636,1.839863,-5.226827,4.962673],[4.319565,2.740045,-2.676202,4.718677,5.235027,-1.296924,3.237327,-2.919346,2.204879,-5.265313,-3.302314,3.134818,-9.679940,-8.940255,-8.152897,-4.964268]],[[5.182487,1.493234,-9.718418,9.182967,-6.232239,-0.770710,1.690857,-3.547139,7.451546,4.614059,4.980897,3.337404,-9.893744,3.426404,5.933177,-1.043980],[8.465168,-0.620828,-5.984666,9.138448,-6.774545,-7.289592,-2.420428,-9.499588,2.235944,2.932112,-1.779617,5.449858,-9.325938,-4.963953,-9.348600,-3.412592]]], dtype = "float64")#candidate|4896|(11, 2, 16)|const|float64
bop_4897 = relay.floor_mod(uop_4876.astype('float64'), relay.reshape(const_4896.astype('float64'), relay.shape_of(uop_4876))) # shape=(11, 2, 16)
bop_4900 = relay.floor_mod(uop_4878.astype('float64'), relay.reshape(const_4896.astype('float64'), relay.shape_of(uop_4878))) # shape=(11, 2, 16)
output = relay.Tuple([call_4873,const_4874,bop_4897,])
output2 = relay.Tuple([call_4875,const_4874,bop_4900,])
func_4901 = relay.Function([var_4867,], output)
mod['func_4901'] = func_4901
mod = relay.transform.InferType()(mod)
mutated_mod['func_4901'] = func_4901
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4902 = relay.var("var_4902", dtype = "float64", shape = (11, 2, 16))#candidate|4902|(11, 2, 16)|var|float64
func_4901_call = mutated_mod.get_global_var('func_4901')
call_4903 = func_4901_call(var_4902)
output = call_4903
func_4904 = relay.Function([var_4902], output)
mutated_mod['func_4904'] = func_4904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4313_call = mod.get_global_var('func_4313')
func_4315_call = mutated_mod.get_global_var('func_4315')
call_4948 = relay.TupleGetItem(func_4313_call(), 1)
call_4949 = relay.TupleGetItem(func_4315_call(), 1)
output = relay.Tuple([call_4948,])
output2 = relay.Tuple([call_4949,])
func_4960 = relay.Function([], output)
mod['func_4960'] = func_4960
mod = relay.transform.InferType()(mod)
output = func_4960()
func_4961 = relay.Function([], output)
mutated_mod['func_4961'] = func_4961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4694_call = mod.get_global_var('func_4694')
func_4696_call = mutated_mod.get_global_var('func_4696')
call_5002 = relay.TupleGetItem(func_4694_call(), 0)
call_5003 = relay.TupleGetItem(func_4696_call(), 0)
func_1752_call = mod.get_global_var('func_1752')
func_1754_call = mutated_mod.get_global_var('func_1754')
var_5011 = relay.var("var_5011", dtype = "float32", shape = ())#candidate|5011|()|var|float32
call_5010 = relay.TupleGetItem(func_1752_call(relay.reshape(var_5011.astype('float32'), [])), 1)
call_5012 = relay.TupleGetItem(func_1754_call(relay.reshape(var_5011.astype('float32'), [])), 1)
func_190_call = mod.get_global_var('func_190')
func_193_call = mutated_mod.get_global_var('func_193')
call_5020 = relay.TupleGetItem(func_190_call(relay.reshape(call_5010.astype('float32'), [5, 9, 4])), 0)
call_5021 = relay.TupleGetItem(func_193_call(relay.reshape(call_5010.astype('float32'), [5, 9, 4])), 0)
uop_5034 = relay.rsqrt(call_5020.astype('float64')) # shape=(5, 9, 4)
uop_5036 = relay.rsqrt(call_5021.astype('float64')) # shape=(5, 9, 4)
func_2717_call = mod.get_global_var('func_2717')
func_2720_call = mutated_mod.get_global_var('func_2720')
var_5039 = relay.var("var_5039", dtype = "uint8", shape = (1, 224))#candidate|5039|(1, 224)|var|uint8
call_5038 = func_2717_call(relay.reshape(var_5011.astype('uint8'), []), relay.reshape(var_5039.astype('uint8'), [16, 14, 1]), )
call_5040 = func_2717_call(relay.reshape(var_5011.astype('uint8'), []), relay.reshape(var_5039.astype('uint8'), [16, 14, 1]), )
uop_5049 = relay.sqrt(uop_5034.astype('float64')) # shape=(5, 9, 4)
uop_5051 = relay.sqrt(uop_5036.astype('float64')) # shape=(5, 9, 4)
func_4589_call = mod.get_global_var('func_4589')
func_4591_call = mutated_mod.get_global_var('func_4591')
call_5057 = relay.TupleGetItem(func_4589_call(relay.reshape(var_5011.astype('float32'), [])), 0)
call_5058 = relay.TupleGetItem(func_4591_call(relay.reshape(var_5011.astype('float32'), [])), 0)
bop_5060 = relay.add(call_5038.astype('int8'), call_5057.astype('int8')) # shape=(16, 14, 945)
bop_5063 = relay.add(call_5040.astype('int8'), call_5058.astype('int8')) # shape=(16, 14, 945)
output = relay.Tuple([call_5002,call_5010,var_5011,var_5039,uop_5049,bop_5060,])
output2 = relay.Tuple([call_5003,call_5012,var_5011,var_5039,uop_5051,bop_5063,])
func_5066 = relay.Function([var_5011,var_5039,], output)
mod['func_5066'] = func_5066
mod = relay.transform.InferType()(mod)
var_5067 = relay.var("var_5067", dtype = "float32", shape = ())#candidate|5067|()|var|float32
var_5068 = relay.var("var_5068", dtype = "uint8", shape = (1, 224))#candidate|5068|(1, 224)|var|uint8
output = func_5066(var_5067,var_5068,)
func_5069 = relay.Function([var_5067,var_5068,], output)
mutated_mod['func_5069'] = func_5069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4561_call = mod.get_global_var('func_4561')
func_4562_call = mutated_mod.get_global_var('func_4562')
call_5081 = relay.TupleGetItem(func_4561_call(), 0)
call_5082 = relay.TupleGetItem(func_4562_call(), 0)
output = call_5081
output2 = call_5082
func_5092 = relay.Function([], output)
mod['func_5092'] = func_5092
mod = relay.transform.InferType()(mod)
output = func_5092()
func_5093 = relay.Function([], output)
mutated_mod['func_5093'] = func_5093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4793_call = mod.get_global_var('func_4793')
func_4794_call = mutated_mod.get_global_var('func_4794')
call_5132 = func_4793_call()
call_5133 = func_4793_call()
uop_5152 = relay.asinh(call_5132.astype('float32')) # shape=(945,)
uop_5154 = relay.asinh(call_5133.astype('float32')) # shape=(945,)
func_4694_call = mod.get_global_var('func_4694')
func_4696_call = mutated_mod.get_global_var('func_4696')
call_5156 = relay.TupleGetItem(func_4694_call(), 0)
call_5157 = relay.TupleGetItem(func_4696_call(), 0)
uop_5162 = relay.tan(uop_5152.astype('float32')) # shape=(945,)
uop_5164 = relay.tan(uop_5154.astype('float32')) # shape=(945,)
func_4313_call = mod.get_global_var('func_4313')
func_4315_call = mutated_mod.get_global_var('func_4315')
call_5172 = relay.TupleGetItem(func_4313_call(), 2)
call_5173 = relay.TupleGetItem(func_4315_call(), 2)
output = relay.Tuple([call_5156,uop_5162,call_5172,])
output2 = relay.Tuple([call_5157,uop_5164,call_5173,])
func_5174 = relay.Function([], output)
mod['func_5174'] = func_5174
mod = relay.transform.InferType()(mod)
output = func_5174()
func_5175 = relay.Function([], output)
mutated_mod['func_5175'] = func_5175
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5190 = relay.var("var_5190", dtype = "float64", shape = (1, 13, 13))#candidate|5190|(1, 13, 13)|var|float64
uop_5191 = relay.asinh(var_5190.astype('float64')) # shape=(1, 13, 13)
bop_5218 = relay.logical_or(var_5190.astype('bool'), relay.reshape(uop_5191.astype('bool'), relay.shape_of(var_5190))) # shape=(1, 13, 13)
output = bop_5218
output2 = bop_5218
func_5222 = relay.Function([var_5190,], output)
mod['func_5222'] = func_5222
mod = relay.transform.InferType()(mod)
var_5223 = relay.var("var_5223", dtype = "float64", shape = (1, 13, 13))#candidate|5223|(1, 13, 13)|var|float64
output = func_5222(var_5223)
func_5224 = relay.Function([var_5223], output)
mutated_mod['func_5224'] = func_5224
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5231 = relay.var("var_5231", dtype = "int8", shape = (6, 8, 4))#candidate|5231|(6, 8, 4)|var|int8
var_5232 = relay.var("var_5232", dtype = "int8", shape = (6, 8, 4))#candidate|5232|(6, 8, 4)|var|int8
bop_5233 = relay.subtract(var_5231.astype('int8'), relay.reshape(var_5232.astype('int8'), relay.shape_of(var_5231))) # shape=(6, 8, 4)
uop_5263 = relay.sin(var_5231.astype('float32')) # shape=(6, 8, 4)
func_5174_call = mod.get_global_var('func_5174')
func_5175_call = mutated_mod.get_global_var('func_5175')
call_5291 = relay.TupleGetItem(func_5174_call(), 2)
call_5292 = relay.TupleGetItem(func_5175_call(), 2)
bop_5299 = relay.bitwise_or(uop_5263.astype('int64'), relay.reshape(var_5231.astype('int64'), relay.shape_of(uop_5263))) # shape=(6, 8, 4)
output = relay.Tuple([bop_5233,call_5291,bop_5299,])
output2 = relay.Tuple([bop_5233,call_5292,bop_5299,])
func_5304 = relay.Function([var_5231,var_5232,], output)
mod['func_5304'] = func_5304
mod = relay.transform.InferType()(mod)
var_5305 = relay.var("var_5305", dtype = "int8", shape = (6, 8, 4))#candidate|5305|(6, 8, 4)|var|int8
var_5306 = relay.var("var_5306", dtype = "int8", shape = (6, 8, 4))#candidate|5306|(6, 8, 4)|var|int8
output = func_5304(var_5305,var_5306,)
func_5307 = relay.Function([var_5305,var_5306,], output)
mutated_mod['func_5307'] = func_5307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4538_call = mod.get_global_var('func_4538')
func_4539_call = mutated_mod.get_global_var('func_4539')
call_5385 = relay.TupleGetItem(func_4538_call(), 0)
call_5386 = relay.TupleGetItem(func_4539_call(), 0)
output = relay.Tuple([call_5385,])
output2 = relay.Tuple([call_5386,])
func_5398 = relay.Function([], output)
mod['func_5398'] = func_5398
mod = relay.transform.InferType()(mod)
mutated_mod['func_5398'] = func_5398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5398_call = mutated_mod.get_global_var('func_5398')
call_5399 = func_5398_call()
output = call_5399
func_5400 = relay.Function([], output)
mutated_mod['func_5400'] = func_5400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5398_call = mod.get_global_var('func_5398')
func_5400_call = mutated_mod.get_global_var('func_5400')
call_5434 = relay.TupleGetItem(func_5398_call(), 0)
call_5435 = relay.TupleGetItem(func_5400_call(), 0)
var_5436 = relay.var("var_5436", dtype = "float64", shape = (945,))#candidate|5436|(945,)|var|float64
bop_5437 = relay.less(call_5434.astype('bool'), relay.reshape(var_5436.astype('bool'), relay.shape_of(call_5434))) # shape=(945,)
bop_5440 = relay.less(call_5435.astype('bool'), relay.reshape(var_5436.astype('bool'), relay.shape_of(call_5435))) # shape=(945,)
bop_5457 = relay.bitwise_or(call_5434.astype('uint64'), relay.reshape(var_5436.astype('uint64'), relay.shape_of(call_5434))) # shape=(945,)
bop_5460 = relay.bitwise_or(call_5435.astype('uint64'), relay.reshape(var_5436.astype('uint64'), relay.shape_of(call_5435))) # shape=(945,)
func_1500_call = mod.get_global_var('func_1500')
func_1502_call = mutated_mod.get_global_var('func_1502')
const_5474 = relay.const([-2.927525,1.617662,4.019988,-5.882790,-4.732946,2.975374,2.095056,3.582583,-3.268779,9.755111,2.892214,6.183708,6.876569,-3.254794,9.751475,7.251671,9.412566,-3.690393,7.990989,-6.157558,-6.613362,1.717433,6.872507,-4.623749,0.191405,4.751794,1.291347,1.125052,-8.369030,0.253966,1.303104,8.195310,9.592448,-0.017488,-7.341168,6.520193,-6.734336,-8.360393,7.361352,2.544205,2.344720,0.067359,0.707269,0.633610,-6.675910,7.879229,7.729803,3.502998,-1.491744,-1.245954,-2.501439,9.159370,-9.990508,-7.189746,0.870705,6.815746,0.115973,0.810586,4.307331,-9.049932,7.174719,-0.566053,-0.421660,-7.114541,9.122853,6.954169,-8.591761,-0.626354,-6.190292,-9.411016,-7.148326,-2.108863,-6.300998,-9.358384,-1.522207,9.258869,3.613912,4.047067,7.973417,-7.312175,-1.748292,5.903480,3.228014,3.965993,-0.320190,0.942627,2.897357,-0.095776,2.985294,-9.824053,2.224710,5.062743,9.243308,-9.656231,-3.606445,7.711649,-5.672853,9.140252,-4.481778,-8.793135,-6.954533,7.934133,8.126703,8.344706,-9.296508,2.611876,-0.995752,-4.934580,1.443859,-9.631811,-4.627088,-5.766419,-0.700121,-7.195107,-1.841175,-5.079463,-1.142883,8.083383,1.308663,-5.686248,-0.293480,-5.276199,-8.814324,-4.530705,0.233518,-6.344232,-2.879021,0.658059,-7.875623,6.771472,-6.596442,-3.330327,0.178767,-6.723960,-4.988945,-4.045879,-2.638254,6.433540,-6.066545,-1.953379,6.882383,6.764550,5.580839,-3.563196,-7.635393,6.626858,4.944032,4.484699,3.223189,-9.674373,-5.302457,-3.498896,1.040208,0.818361,7.782431,3.590839,-6.285549,-4.239482,7.001980,-2.675255,-6.402316,-0.654723,1.849533,-9.687745,-4.998403,-8.164795,2.533109,6.996979,2.190034,-2.462921,9.840288,9.050660,-3.179197,5.854412,-9.803301,5.140048,1.318897,4.461832,9.760388,4.645139,-7.345502,-9.746287,-5.285188,-3.984762,6.441219,-4.162948,-7.654662,-0.546473,2.134946,7.647290,8.505334,-8.733216,-0.617958,3.668400,0.196075,1.120776,1.243475,-6.453592,-4.283146,4.488979,1.850860,-1.475791,7.205951,4.973208,-2.209345,-3.055412,8.416525,4.068560,-9.319204,-7.420700,6.877468,8.087179,6.588880,6.222089,-6.749246,4.434067,-0.832888,-3.972498,9.791390,0.044604,-4.301391,3.062330,-2.062383,5.107227,-7.570395,1.628039,-4.191382,-1.369260,-7.680933,4.187000,-4.720418,-5.823478,-6.764421,-6.015363,-5.652470,6.430874,8.976733,8.109661,1.293362,7.995993,-1.404801,-0.803497,3.425140,-3.071754,-0.556095,2.767043,4.264821,6.493993,-3.348824,1.595829,8.104404,1.211852,9.402299,2.865818,6.467365,-6.758857,1.506553,-4.980905,2.899278,-6.749171,-3.778087,-5.066348,6.860851,4.119012,3.415745,6.588359,-0.631267,-8.927534,1.867278,-7.931404,-9.922097,-8.325276,8.764771,-8.696286,7.814250,-2.451621,-3.223563,1.494425,8.127031,2.156148,2.085517,5.904966,9.447389,-1.389865,4.012258,-5.125917,6.208876,3.680665,2.409779,-2.028031,-5.064949,9.851503,5.536893,7.390065,8.597572,-7.692124,9.021226,-5.180351,2.009953,5.184871,-8.477239,-8.652523,-8.022079,-0.536956,8.426237,-9.386852,-8.736319,9.977883,3.797598,-2.088504,9.072625,0.199857,-8.143730,-3.780799,-9.859568,5.488631,9.708929,3.103826,0.114042,5.923151,-2.830581,7.724860,8.782278,-8.997482,5.934335,-0.985646,3.854362,1.084748,5.668071,9.481257,9.397403,-3.452508,-8.026976,-7.115649,-9.568845,8.842897,2.350822,6.570302,3.484518,6.119388,-9.755099,8.875340,-3.069887,2.031915,-3.772486,4.300696,5.292019,-7.901344,9.910921,-6.663397,1.053765,-9.500787,-8.357340,0.764443,-1.135659,-0.349560,-3.836194,-7.625171,-8.264378,2.528963,2.414584,-7.794335,-9.048488,-1.213937,8.195961,6.659201,-2.967536,6.454418,0.585491,-0.310637,-7.136882,-4.691063,3.927721,8.125535,8.445602,-4.196046,8.008932,1.755874,-6.214321,-4.246912,-1.033303,-0.305319,2.856506,7.014876,-7.837197,-5.106566,-8.517204,-5.668747,-3.225169,7.324695,-1.410525,-6.365066,-9.757360,2.235293,3.000922,-9.380004,-7.780125,5.410050,7.696535,-5.689291,-9.192589,-6.928432,-2.911193,-1.265493,-6.481066,-2.727478,-2.236291,-7.126573,-5.764062,0.622979,6.247975,-9.118800,-2.362558,-9.914385,-9.760115,8.171466,0.272060,-5.172263,-1.443553,-1.001203,-3.499536,9.202092,3.080893,-2.122985,-3.671054,-5.887555,1.650699,3.420224,-4.530875,2.182210,-8.321698,7.610078,-5.867805,0.976827,7.056455,7.338244,-1.891396,-3.284485,5.191435,-9.576478,-9.837133,2.672343,0.157127,1.211796,-9.200446,-8.404281,2.518804,4.038195,8.810097,0.690099,-2.657301,2.585899,8.365312,5.413430,-3.462219,-4.198345,-2.646633,-1.196823,-6.328995,0.786634,3.146081,-1.306013,4.730872,-0.962668,-4.097558,6.297044,1.561811,-9.107088,-5.335400,2.921845,1.746387,4.546546,1.177878,8.658398,1.987199,9.221820,-5.183988,-0.449198,5.507612,3.416230,-7.738454,-7.058653,0.830321,-6.312534,-4.123336,-8.382524,-2.199881,5.563065,2.782262,5.094955,2.081721,4.034950,-3.422188,-8.836610,8.958644,-1.289267,-3.399948,5.802606,4.437129,-0.960326,7.641168,9.453218,-8.848750,6.359115,8.693014,8.127107,2.882799,-2.027821,-0.681668,1.909452,-2.106546,3.845302,3.002848,-9.121480,-3.909298,-2.687466,8.052228,7.982065,5.542293,-7.939019,-5.588540,9.718461,-9.873924,5.036553,-6.608647,-0.870497,-4.924319,-2.162698,-3.536974,-4.109644,0.076008,-3.546559,-3.276653,-4.385232,5.151752,-7.176283,-2.452481,5.002083,-0.052889,5.393367,-0.254206,7.952597,6.287246,-8.438124,4.486268,0.303374,7.469622,8.997756,1.779173,3.193493,-1.156310,-3.299964,-3.154818,-7.231186,8.397963,6.326859,9.194216,-6.807200,-9.034792,2.648786,-1.372734,-8.620736,-0.876924,1.755378,-7.891754,-8.097176,2.755569,2.684549,6.465800,-6.144736,-7.115890,-2.397053,-7.554354,-2.610850,2.048478,-1.230850,-4.484637,1.277683,7.876786,9.563282,-8.450360,-3.443063,-8.931344,7.983987,0.736693,-8.373324,8.185691,-1.031452,-8.654592,4.955910,-1.842542,1.120713,-6.659617,6.027249,0.516064,8.494389,4.212433,9.878457,-1.714704,0.595064,-2.431215,1.402427,-9.966913,-0.935147,-6.968186,-8.872779,6.067533,-3.261984,-4.976943,4.021143,-0.081368,2.270657,5.670921,6.679986,8.268127,7.098089,9.539824,-3.596032,-3.925156,-9.573379,-9.415453,6.182711,-9.267591,3.289552,-6.818384,-9.555430,-5.197765,-7.182372,5.056665,5.946164,-2.387740,-7.445483,9.696085,7.211540,2.848299,-3.369924,-1.627071,-4.074524,0.201384,7.154070,-0.975604,-5.540898,-4.162325,-7.040221,7.073245,-1.249343,8.601957,2.824418,2.871414,-2.442974,-1.374767,-3.584906,5.117978,8.092676,4.848485,-9.261733,-2.195231,-8.517486,1.295739,-4.787993,-5.420062,-6.484939,-2.910968,-0.750937,-4.925875,-2.484639,5.243343,1.215780,5.610346,-6.654553,0.020741,1.947164,8.612393,-9.000719,-8.513761,6.665751,-3.535413,-2.490983,9.087547,-9.883569,-8.671346,-6.282511,-1.560104,-7.844802,-7.215204,-5.883072,6.157567,-1.184463,9.209437,3.923620,1.124382,-5.579693,-1.413647,-3.474139,7.415865,7.283747,-1.702775,3.403955,5.185339,-6.467356,-9.830396,7.065634,-8.634607,4.030378,4.157040,-5.087603,4.153233,-4.898713,5.855786,-8.221544,5.407350,-7.147113,1.770486,-2.165971,1.140346,3.302826,0.763243,2.971759,-0.933765,2.912006,7.670992,-0.410583,-0.562028,-0.931447,-7.058912,-1.286644,-7.111609,9.283486,3.995043,-6.110720,-4.158648,-1.433498,8.056000,-0.244334,-6.228257,8.116855,3.010153,0.698458,-5.350332,9.130835,-7.911961,-9.507981,4.986983,-3.818377,-0.092833,2.348018,-2.372834,-5.485218,-8.183273,7.886511,7.408884,-8.096993,9.248554,-3.141661,-3.670354,-5.989434,-0.850394,8.825691,-6.785095,-9.378743,0.084046,1.967513,9.396479,5.767310,-2.191063,8.691324,4.596769,-4.151908,5.775290,-6.607625,4.194059,-2.500062,8.477224,4.201497,7.056735,-2.931003,4.777941,0.039576,-1.978641,-6.238819,6.031447,-3.559554,-6.144179,0.041901,9.188484,9.733086,-2.981540,-8.714174,0.117609,1.969662,1.395253,5.582623,-9.315298,-5.991467,3.955109,4.402526,-3.405845,0.861727,8.547847,-3.592537,-8.457092,6.377236,6.867677,6.561333,4.398721,5.606371,-0.218056,0.988317,9.149917,7.644930,9.934424,-7.152758,-6.665138,-0.465382,-5.153322,1.380637,-4.035441,-4.565279,-1.478178,-5.796021,-8.984976,0.977469,4.661443,1.239660,-1.008779,6.433398,-1.551054,9.869864,-2.372250,-1.712573,-5.456719,3.720432,-8.066564,-1.116978,8.425062,-3.549885,-6.594790,8.670676,-2.498548,8.161661,9.349417,-5.539926,-8.032319,4.728954,0.127588,8.973014,3.954250,-9.821291,-2.073573,-9.312489,-9.561583,-8.892075,-8.117483,-2.025301,-1.883271,4.886861,-2.086226,1.317171,9.692799,4.736316,-2.421545,-1.083675,-1.136845,3.099582,9.154379,-4.872699,-1.460755,9.564826,-4.767612,-7.383887,1.141279,5.843599,9.077261,-2.602986,5.541102,-1.991454,-2.435250,2.154576,1.294660,-7.302496,-1.786595,-3.950396,7.845452,-4.375039,4.927920,-7.629003,-7.067234,7.701005,5.921260,8.670321,8.479630,-1.748475,-5.246309,-8.710580,3.452464,1.395816,-3.948643,-4.925767,2.527988,7.013344,9.673182,9.876207,3.707878,-1.678298,-1.128420,7.578036,0.778906,8.940251,8.061320,4.800959,-7.009515,1.627709,2.427659,-9.925041,-5.071701,0.500534,-1.342844,3.303026,7.208926,-9.941839,5.720056,-8.364536,4.656133,5.197279,3.013639,2.266252,9.877444,-1.371438,1.594891,3.358783,8.363180,0.633690,4.678309,4.846701,-1.017849,-1.508766,-2.692475,-9.053658,-7.799656,-2.222657,9.502568,-5.355779,-0.916148,7.246594,0.092877,6.835083,9.672139,-4.740546,-9.342671,-3.264213,4.204165,-1.892080,9.555363,-4.060876,-3.414245,8.920382,-6.650892,-1.722507,8.794079,-9.872350,-6.793146,3.686961,6.113727,-9.864416,7.841287,-4.390954,9.092879,-9.640027,-5.985787,8.242915,-7.268402,-2.015386,-8.263099,9.289437,-0.511548,-3.529338,-4.076069,-9.628463,-5.909290,0.845671,9.928968,-8.604391,-1.458825,1.536529,4.071037,-8.445395,-9.566794,4.213376,9.321897,-2.379466,-9.172871,6.063347,-7.304789,-3.455173,-3.782630,-8.739797,-9.128455,3.161613,-5.399927,7.450661,1.008156,2.478213,-6.671533,-7.207847,5.388877,4.502160,8.408924,-8.708169,-4.977901,-5.648378,-5.145396,4.302822,-8.047645,-0.899223,1.697329,-6.324179,0.006486,-5.422850,-3.316157,6.448695,3.633913,-8.576955,7.090761,-8.482400,6.225450,3.394301,-6.765869,-8.835436,3.663244,8.115449,-7.296826,1.998837,9.224494,6.804454,-0.327066,0.371335,2.126190,-0.126407,3.873606,9.501180,-2.650841,-2.981742,7.184571,3.472370,3.155491,6.478735,-6.396911,7.974645,7.500691,-9.032585,-9.216236,9.945142,4.493383,-6.783145,1.074342,5.979670,-5.194501,-2.667340,5.753183,-6.289623,-7.898703,-1.664553,-8.546543,-9.914229,5.763885,8.311223,-7.804173,2.793787,6.831227,-5.686511,3.364735,-7.304221,-7.025679,7.290454,-4.157530,-2.799445,-7.172309,8.222401,0.954195,-8.708507,-2.827798,-0.074856,-1.376280,-2.651089,5.721629,-4.220650,2.182577,1.080894,4.485729,2.615285,-5.041335,-6.911689,-5.483223,-2.210628,4.281929,-2.380965,-4.656374,6.284436,8.499235,-6.173382,-5.589201,7.688571,7.592992,9.575561,-9.041077,-1.578710,5.062843,2.037962,6.646280,2.617359,-6.979388,-5.878680,-1.470055,6.822543,-2.946585,-0.735778,3.375346,-3.617715,-7.151114,9.251706,-7.411727,-4.961149,9.075606,2.719778,6.757737,9.519045,4.311425,-0.174841,5.509980,3.238017,-6.970041,7.879674,2.545638,-0.461543,2.190052,-3.003434,-6.344343,6.767819,-2.068476,-9.743538,7.103977,3.092497,9.919091,-2.186734,-4.596950,-5.798842,-4.830877,-5.198929,1.396468,0.565909,-3.801371,-0.860504,-4.185744,-3.286747,0.157055,-6.005613,7.601207,6.189897,-5.145960,3.252150,5.419834,0.299586,0.185315,1.283120,-0.393861,-6.045195,3.533160,1.742880,-1.140866,-7.215303,-7.896550,8.593829,9.389354,8.900576,-2.992065,-2.626243,-1.592641,5.698259,3.174072,4.120601,-3.848306,-0.505659,-8.528233,2.342515,-3.788669,-3.251785,1.163212,-2.972061,-0.307765,-8.949827,-0.561225,-6.638571,-8.942289,9.246371,1.948164,8.346651,-6.448361,8.508424,-7.862726,4.095864,-8.713453,8.074672,0.794173,-1.397850,0.975567,5.538755,0.112843,7.201327,6.485520,9.177218,1.686446,-8.745315,9.273408,-4.790514,5.459850,-5.900007,-1.446366,6.536412,8.605153,9.248341,-0.558757,-7.767324,8.944448,6.595514,-3.488568,4.886431,2.598144,5.357741,2.923144,-3.544783,-0.058457,-1.633368,8.316915,-8.487142,-1.570306,5.703002,-1.417162,-6.654089,2.491931,1.674864,3.718433,0.697954,-4.208774,9.651368,4.457498,-3.365920,-9.850166,-0.493393,-7.094306,-5.126973,-2.878767,0.126527,6.781742,-4.742859,2.003158,4.599808,-4.323310,-7.186673,1.898120,-1.057518,9.512484,-1.658747,-5.341907,2.094705,-7.068240,7.433293,-5.129607,4.568970,-7.803458,-9.300071,3.995646,-0.234891,1.677601,9.717794,-0.060477,1.368978,-8.615259,0.170495,-3.221424,-8.826015,-7.262359,4.066716,-0.853674,9.025114,3.993073,8.259841,3.225272,-8.498736,-3.524335,8.165504,-4.507160,-7.495223,6.137823,3.481553,1.890446,-5.384722,4.538908,-0.547429,-8.084110,-6.311226,3.967588,1.220469,-8.102568,1.500586,8.179137,5.311807,3.764238,-3.032158,-3.658724,-5.481180,5.683935,0.384862,4.778618,9.623903,4.715096,4.885052,2.382433,6.351953,-6.709508,-7.661961,-0.630611,5.434119,1.791902,-3.849680,4.290526,4.880946,5.999436,5.843513,-2.011917,-8.919954,8.690809,4.011262,-5.152276,-6.666269,3.234209,-7.674190,-9.379145,-0.615955,-6.706780,9.694492,8.465517,-1.313920,-8.820902,8.160079,-5.637518,-9.787344,1.160944,-9.082711,0.692535,1.982636,8.039909,-3.673348,4.039177,-8.277089,9.247977,-7.924350,-1.954924,7.658168,-5.169163,-8.218307,-9.353735,-2.582980,-7.692481,-5.060818,2.651918,-5.396669,9.941774,9.559353,0.523644,-3.796409,0.872390,-8.236266,-5.860396,-3.764254,-7.913333,1.499636,-7.293032,5.847302,1.206067,-1.707980,9.979519,8.162758,9.267412,1.136482,-0.638381,9.481117,-3.029075,-6.962012,3.960827,-8.420923,8.864878,-7.758248,4.351834,-8.574474,9.597744,-5.012436,7.034263,-1.975163,-8.313299,-9.886178,4.039362,-3.299426,4.086827,-5.401101], dtype = "float32")#candidate|5474|(1404,)|const|float32
call_5473 = relay.TupleGetItem(func_1500_call(relay.reshape(const_5474.astype('float32'), [12, 13, 9])), 0)
call_5475 = relay.TupleGetItem(func_1502_call(relay.reshape(const_5474.astype('float32'), [12, 13, 9])), 0)
output = relay.Tuple([bop_5437,bop_5457,call_5473,const_5474,])
output2 = relay.Tuple([bop_5440,bop_5460,call_5475,const_5474,])
func_5495 = relay.Function([var_5436,], output)
mod['func_5495'] = func_5495
mod = relay.transform.InferType()(mod)
var_5496 = relay.var("var_5496", dtype = "float64", shape = (945,))#candidate|5496|(945,)|var|float64
output = func_5495(var_5496)
func_5497 = relay.Function([var_5496], output)
mutated_mod['func_5497'] = func_5497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4960_call = mod.get_global_var('func_4960')
func_4961_call = mutated_mod.get_global_var('func_4961')
call_5533 = relay.TupleGetItem(func_4960_call(), 0)
call_5534 = relay.TupleGetItem(func_4961_call(), 0)
func_190_call = mod.get_global_var('func_190')
func_193_call = mutated_mod.get_global_var('func_193')
const_5537 = relay.const([-3.099149,0.790077,5.674368,-2.915566,-4.112812,-7.408789,2.992768,7.186856,2.626465,1.126624,7.113966,2.148237,0.239908,6.149664,-1.841820,6.483457,-5.945555,6.279436,-4.733211,-1.734953,-7.929730,-0.172178,3.402718,-0.815258,-6.173397,-1.577169,2.893576,7.810507,1.749489,4.722257,8.319590,-5.537314,1.260155,4.135795,5.150352,-6.960902,-5.541090,-4.638084,-9.850150,-3.033373,-9.862484,2.360539,8.573504,0.556210,7.662079,-9.013371,5.616710,3.468826,-1.914392,7.684193,-4.258106,6.137878,-3.234646,-6.825749,-0.676650,8.570063,0.111274,-8.973198,7.757373,9.434506,3.123854,7.019851,1.876511,4.872133,3.301661,9.596228,1.167716,-3.422088,-1.971018,-2.137829,-5.685395,-7.526947,-0.690866,-8.482829,-4.634476,4.949526,9.256593,-4.161338,0.404350,5.116395,-9.381086,-3.380797,9.075411,8.884066,3.424990,4.065152,9.264613,1.167354,-4.474846,-4.790772,-4.430313,-4.223843,-3.074994,-2.258452,4.417229,4.478681,-4.533824,2.434778,-3.308499,-1.764545,-7.645246,7.466245,5.177095,-0.807229,-2.105797,-7.233050,-8.686820,8.496122,1.909765,-8.663977,3.423868,0.115662,4.781961,4.907392,8.971152,2.997058,2.188669,-9.884433,7.127862,5.532060,6.402167,-9.869912,-4.733436,-1.247693,5.557822,-8.642289,-6.511879,6.539976,-3.711546,-4.792546,-6.195593,-1.274285,-8.552563,-6.718104,2.989387,-3.126533,4.221729,-8.864219,-4.397109,3.502064,7.554893,-4.850408,7.276137,4.192096,-9.545216,-4.016479,5.418816,9.040468,0.449755,6.035042,5.124478,9.614070,6.533266,-9.030010,-4.972689,2.311720,-0.097329,-4.241005,4.913019,0.554112,0.792245,-8.348869,-8.724244,-4.824013,3.660641,-1.885449,5.430028,5.758734,2.752401,-0.307248,-1.080967,5.363298,1.504328,-3.419586,5.212630,9.510158,0.377313,8.494421,4.937497,3.354865], dtype = "float32")#candidate|5537|(180,)|const|float32
call_5536 = relay.TupleGetItem(func_190_call(relay.reshape(const_5537.astype('float32'), [5, 9, 4])), 0)
call_5538 = relay.TupleGetItem(func_193_call(relay.reshape(const_5537.astype('float32'), [5, 9, 4])), 0)
func_4793_call = mod.get_global_var('func_4793')
func_4794_call = mutated_mod.get_global_var('func_4794')
call_5550 = func_4793_call()
call_5551 = func_4793_call()
uop_5555 = relay.log10(call_5550.astype('float32')) # shape=(945,)
uop_5557 = relay.log10(call_5551.astype('float32')) # shape=(945,)
var_5559 = relay.var("var_5559", dtype = "float32", shape = (945,))#candidate|5559|(945,)|var|float32
bop_5560 = relay.bitwise_xor(uop_5555.astype('int64'), relay.reshape(var_5559.astype('int64'), relay.shape_of(uop_5555))) # shape=(945,)
bop_5563 = relay.bitwise_xor(uop_5557.astype('int64'), relay.reshape(var_5559.astype('int64'), relay.shape_of(uop_5557))) # shape=(945,)
output = relay.Tuple([call_5533,call_5536,const_5537,bop_5560,])
output2 = relay.Tuple([call_5534,call_5538,const_5537,bop_5563,])
func_5575 = relay.Function([var_5559,], output)
mod['func_5575'] = func_5575
mod = relay.transform.InferType()(mod)
mutated_mod['func_5575'] = func_5575
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5576 = relay.var("var_5576", dtype = "float32", shape = (945,))#candidate|5576|(945,)|var|float32
func_5575_call = mutated_mod.get_global_var('func_5575')
call_5577 = func_5575_call(var_5576)
output = call_5577
func_5578 = relay.Function([var_5576], output)
mutated_mod['func_5578'] = func_5578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4561_call = mod.get_global_var('func_4561')
func_4562_call = mutated_mod.get_global_var('func_4562')
call_5580 = relay.TupleGetItem(func_4561_call(), 0)
call_5581 = relay.TupleGetItem(func_4562_call(), 0)
uop_5610 = relay.atan(call_5580.astype('float32')) # shape=(7, 9, 15)
uop_5612 = relay.atan(call_5581.astype('float32')) # shape=(7, 9, 15)
func_4561_call = mod.get_global_var('func_4561')
func_4562_call = mutated_mod.get_global_var('func_4562')
call_5624 = relay.TupleGetItem(func_4561_call(), 0)
call_5625 = relay.TupleGetItem(func_4562_call(), 0)
output = relay.Tuple([uop_5610,call_5624,])
output2 = relay.Tuple([uop_5612,call_5625,])
func_5632 = relay.Function([], output)
mod['func_5632'] = func_5632
mod = relay.transform.InferType()(mod)
mutated_mod['func_5632'] = func_5632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5632_call = mutated_mod.get_global_var('func_5632')
call_5633 = func_5632_call()
output = call_5633
func_5634 = relay.Function([], output)
mutated_mod['func_5634'] = func_5634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4694_call = mod.get_global_var('func_4694')
func_4696_call = mutated_mod.get_global_var('func_4696')
call_5715 = relay.TupleGetItem(func_4694_call(), 0)
call_5716 = relay.TupleGetItem(func_4696_call(), 0)
func_5398_call = mod.get_global_var('func_5398')
func_5400_call = mutated_mod.get_global_var('func_5400')
call_5717 = relay.TupleGetItem(func_5398_call(), 0)
call_5718 = relay.TupleGetItem(func_5400_call(), 0)
output = relay.Tuple([call_5715,call_5717,])
output2 = relay.Tuple([call_5716,call_5718,])
func_5742 = relay.Function([], output)
mod['func_5742'] = func_5742
mod = relay.transform.InferType()(mod)
mutated_mod['func_5742'] = func_5742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5742_call = mutated_mod.get_global_var('func_5742')
call_5743 = func_5742_call()
output = call_5743
func_5744 = relay.Function([], output)
mutated_mod['func_5744'] = func_5744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4821_call = mod.get_global_var('func_4821')
func_4822_call = mutated_mod.get_global_var('func_4822')
call_5764 = relay.TupleGetItem(func_4821_call(), 0)
call_5765 = relay.TupleGetItem(func_4822_call(), 0)
output = call_5764
output2 = call_5765
func_5766 = relay.Function([], output)
mod['func_5766'] = func_5766
mod = relay.transform.InferType()(mod)
output = func_5766()
func_5767 = relay.Function([], output)
mutated_mod['func_5767'] = func_5767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5092_call = mod.get_global_var('func_5092')
func_5093_call = mutated_mod.get_global_var('func_5093')
call_5796 = func_5092_call()
call_5797 = func_5092_call()
func_5092_call = mod.get_global_var('func_5092')
func_5093_call = mutated_mod.get_global_var('func_5093')
call_5810 = func_5092_call()
call_5811 = func_5092_call()
func_5575_call = mod.get_global_var('func_5575')
func_5578_call = mutated_mod.get_global_var('func_5578')
call_5820 = relay.TupleGetItem(func_5575_call(relay.reshape(call_5796.astype('float32'), [945,])), 3)
call_5821 = relay.TupleGetItem(func_5578_call(relay.reshape(call_5796.astype('float32'), [945,])), 3)
uop_5835 = relay.cos(call_5810.astype('float32')) # shape=(7, 9, 15)
uop_5837 = relay.cos(call_5811.astype('float32')) # shape=(7, 9, 15)
output = relay.Tuple([call_5796,call_5820,uop_5835,])
output2 = relay.Tuple([call_5797,call_5821,uop_5837,])
func_5849 = relay.Function([], output)
mod['func_5849'] = func_5849
mod = relay.transform.InferType()(mod)
mutated_mod['func_5849'] = func_5849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5849_call = mutated_mod.get_global_var('func_5849')
call_5850 = func_5849_call()
output = call_5850
func_5851 = relay.Function([], output)
mutated_mod['func_5851'] = func_5851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5742_call = mod.get_global_var('func_5742')
func_5744_call = mutated_mod.get_global_var('func_5744')
call_5872 = relay.TupleGetItem(func_5742_call(), 1)
call_5873 = relay.TupleGetItem(func_5744_call(), 1)
output = call_5872
output2 = call_5873
func_5887 = relay.Function([], output)
mod['func_5887'] = func_5887
mod = relay.transform.InferType()(mod)
mutated_mod['func_5887'] = func_5887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5887_call = mutated_mod.get_global_var('func_5887')
call_5888 = func_5887_call()
output = call_5888
func_5889 = relay.Function([], output)
mutated_mod['func_5889'] = func_5889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4561_call = mod.get_global_var('func_4561')
func_4562_call = mutated_mod.get_global_var('func_4562')
call_5952 = relay.TupleGetItem(func_4561_call(), 0)
call_5953 = relay.TupleGetItem(func_4562_call(), 0)
output = call_5952
output2 = call_5953
func_5961 = relay.Function([], output)
mod['func_5961'] = func_5961
mod = relay.transform.InferType()(mod)
mutated_mod['func_5961'] = func_5961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5961_call = mutated_mod.get_global_var('func_5961')
call_5962 = func_5961_call()
output = call_5962
func_5963 = relay.Function([], output)
mutated_mod['func_5963'] = func_5963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4960_call = mod.get_global_var('func_4960')
func_4961_call = mutated_mod.get_global_var('func_4961')
call_6105 = relay.TupleGetItem(func_4960_call(), 0)
call_6106 = relay.TupleGetItem(func_4961_call(), 0)
output = relay.Tuple([call_6105,])
output2 = relay.Tuple([call_6106,])
func_6132 = relay.Function([], output)
mod['func_6132'] = func_6132
mod = relay.transform.InferType()(mod)
output = func_6132()
func_6133 = relay.Function([], output)
mutated_mod['func_6133'] = func_6133
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6149 = relay.const(5.947730, dtype = "float32")#candidate|6149|()|const|float32
var_6150 = relay.var("var_6150", dtype = "float32", shape = (7, 1, 1))#candidate|6150|(7, 1, 1)|var|float32
bop_6151 = relay.mod(const_6149.astype('float32'), var_6150.astype('float32')) # shape=(7, 1, 1)
bop_6158 = relay.bitwise_xor(var_6150.astype('uint8'), relay.reshape(bop_6151.astype('uint8'), relay.shape_of(var_6150))) # shape=(7, 1, 1)
func_5495_call = mod.get_global_var('func_5495')
func_5497_call = mutated_mod.get_global_var('func_5497')
var_6178 = relay.var("var_6178", dtype = "float64", shape = (945,))#candidate|6178|(945,)|var|float64
call_6177 = relay.TupleGetItem(func_5495_call(relay.reshape(var_6178.astype('float64'), [945,])), 1)
call_6179 = relay.TupleGetItem(func_5497_call(relay.reshape(var_6178.astype('float64'), [945,])), 1)
func_5304_call = mod.get_global_var('func_5304')
func_5307_call = mutated_mod.get_global_var('func_5307')
var_6182 = relay.var("var_6182", dtype = "int8", shape = (192,))#candidate|6182|(192,)|var|int8
call_6181 = relay.TupleGetItem(func_5304_call(relay.reshape(var_6182.astype('int8'), [6, 8, 4]), relay.reshape(var_6182.astype('int8'), [6, 8, 4]), ), 2)
call_6183 = relay.TupleGetItem(func_5307_call(relay.reshape(var_6182.astype('int8'), [6, 8, 4]), relay.reshape(var_6182.astype('int8'), [6, 8, 4]), ), 2)
output = relay.Tuple([bop_6158,call_6177,var_6178,call_6181,var_6182,])
output2 = relay.Tuple([bop_6158,call_6179,var_6178,call_6183,var_6182,])
func_6184 = relay.Function([var_6150,var_6178,var_6182,], output)
mod['func_6184'] = func_6184
mod = relay.transform.InferType()(mod)
var_6185 = relay.var("var_6185", dtype = "float32", shape = (7, 1, 1))#candidate|6185|(7, 1, 1)|var|float32
var_6186 = relay.var("var_6186", dtype = "float64", shape = (945,))#candidate|6186|(945,)|var|float64
var_6187 = relay.var("var_6187", dtype = "int8", shape = (192,))#candidate|6187|(192,)|var|int8
output = func_6184(var_6185,var_6186,var_6187,)
func_6188 = relay.Function([var_6185,var_6186,var_6187,], output)
mutated_mod['func_6188'] = func_6188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4561_call = mod.get_global_var('func_4561')
func_4562_call = mutated_mod.get_global_var('func_4562')
call_6203 = relay.TupleGetItem(func_4561_call(), 0)
call_6204 = relay.TupleGetItem(func_4562_call(), 0)
uop_6209 = relay.acosh(call_6203.astype('float64')) # shape=(7, 9, 15)
uop_6211 = relay.acosh(call_6204.astype('float64')) # shape=(7, 9, 15)
func_6184_call = mod.get_global_var('func_6184')
func_6188_call = mutated_mod.get_global_var('func_6188')
var_6226 = relay.var("var_6226", dtype = "float32", shape = (7,))#candidate|6226|(7,)|var|float32
var_6227 = relay.var("var_6227", dtype = "int8", shape = (2, 96))#candidate|6227|(2, 96)|var|int8
call_6225 = relay.TupleGetItem(func_6184_call(relay.reshape(var_6226.astype('float32'), [7, 1, 1]), relay.reshape(call_6203.astype('float64'), [945,]), relay.reshape(var_6227.astype('int8'), [192,]), ), 0)
call_6228 = relay.TupleGetItem(func_6188_call(relay.reshape(var_6226.astype('float32'), [7, 1, 1]), relay.reshape(call_6203.astype('float64'), [945,]), relay.reshape(var_6227.astype('int8'), [192,]), ), 0)
output = relay.Tuple([uop_6209,call_6225,var_6226,var_6227,])
output2 = relay.Tuple([uop_6211,call_6228,var_6226,var_6227,])
func_6241 = relay.Function([var_6226,var_6227,], output)
mod['func_6241'] = func_6241
mod = relay.transform.InferType()(mod)
mutated_mod['func_6241'] = func_6241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6241_call = mutated_mod.get_global_var('func_6241')
var_6243 = relay.var("var_6243", dtype = "float32", shape = (7,))#candidate|6243|(7,)|var|float32
var_6244 = relay.var("var_6244", dtype = "int8", shape = (2, 96))#candidate|6244|(2, 96)|var|int8
call_6242 = func_6241_call(var_6243,var_6244,)
output = call_6242
func_6245 = relay.Function([var_6243,var_6244,], output)
mutated_mod['func_6245'] = func_6245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4821_call = mod.get_global_var('func_4821')
func_4822_call = mutated_mod.get_global_var('func_4822')
call_6282 = relay.TupleGetItem(func_4821_call(), 0)
call_6283 = relay.TupleGetItem(func_4822_call(), 0)
var_6289 = relay.var("var_6289", dtype = "float64", shape = (945,))#candidate|6289|(945,)|var|float64
bop_6290 = relay.floor_divide(call_6282.astype('float32'), relay.reshape(var_6289.astype('float32'), relay.shape_of(call_6282))) # shape=(945,)
bop_6293 = relay.floor_divide(call_6283.astype('float32'), relay.reshape(var_6289.astype('float32'), relay.shape_of(call_6283))) # shape=(945,)
uop_6295 = relay.acosh(bop_6290.astype('float32')) # shape=(945,)
uop_6297 = relay.acosh(bop_6293.astype('float32')) # shape=(945,)
func_2717_call = mod.get_global_var('func_2717')
func_2720_call = mutated_mod.get_global_var('func_2720')
const_6300 = relay.const(5, dtype = "uint8")#candidate|6300|()|const|uint8
var_6301 = relay.var("var_6301", dtype = "uint8", shape = (16, 14))#candidate|6301|(16, 14)|var|uint8
call_6299 = func_2717_call(relay.reshape(const_6300.astype('uint8'), []), relay.reshape(var_6301.astype('uint8'), [16, 14, 1]), )
call_6302 = func_2717_call(relay.reshape(const_6300.astype('uint8'), []), relay.reshape(var_6301.astype('uint8'), [16, 14, 1]), )
output = relay.Tuple([uop_6295,call_6299,const_6300,var_6301,])
output2 = relay.Tuple([uop_6297,call_6302,const_6300,var_6301,])
func_6306 = relay.Function([var_6289,var_6301,], output)
mod['func_6306'] = func_6306
mod = relay.transform.InferType()(mod)
var_6307 = relay.var("var_6307", dtype = "float64", shape = (945,))#candidate|6307|(945,)|var|float64
var_6308 = relay.var("var_6308", dtype = "uint8", shape = (16, 14))#candidate|6308|(16, 14)|var|uint8
output = func_6306(var_6307,var_6308,)
func_6309 = relay.Function([var_6307,var_6308,], output)
mutated_mod['func_6309'] = func_6309
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6364 = relay.var("var_6364", dtype = "float32", shape = (9, 15, 1))#candidate|6364|(9, 15, 1)|var|float32
uop_6365 = relay.acos(var_6364.astype('float32')) # shape=(9, 15, 1)
bop_6367 = relay.power(var_6364.astype('float32'), relay.reshape(uop_6365.astype('float32'), relay.shape_of(var_6364))) # shape=(9, 15, 1)
func_5222_call = mod.get_global_var('func_5222')
func_5224_call = mutated_mod.get_global_var('func_5224')
var_6374 = relay.var("var_6374", dtype = "float64", shape = (169,))#candidate|6374|(169,)|var|float64
call_6373 = func_5222_call(relay.reshape(var_6374.astype('float64'), [1, 13, 13]))
call_6375 = func_5222_call(relay.reshape(var_6374.astype('float64'), [1, 13, 13]))
output = relay.Tuple([bop_6367,call_6373,var_6374,])
output2 = relay.Tuple([bop_6367,call_6375,var_6374,])
func_6376 = relay.Function([var_6364,var_6374,], output)
mod['func_6376'] = func_6376
mod = relay.transform.InferType()(mod)
mutated_mod['func_6376'] = func_6376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6376_call = mutated_mod.get_global_var('func_6376')
var_6378 = relay.var("var_6378", dtype = "float32", shape = (9, 15, 1))#candidate|6378|(9, 15, 1)|var|float32
var_6379 = relay.var("var_6379", dtype = "float64", shape = (169,))#candidate|6379|(169,)|var|float64
call_6377 = func_6376_call(var_6378,var_6379,)
output = call_6377
func_6380 = relay.Function([var_6378,var_6379,], output)
mutated_mod['func_6380'] = func_6380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5398_call = mod.get_global_var('func_5398')
func_5400_call = mutated_mod.get_global_var('func_5400')
call_6382 = relay.TupleGetItem(func_5398_call(), 0)
call_6383 = relay.TupleGetItem(func_5400_call(), 0)
output = relay.Tuple([call_6382,])
output2 = relay.Tuple([call_6383,])
func_6396 = relay.Function([], output)
mod['func_6396'] = func_6396
mod = relay.transform.InferType()(mod)
output = func_6396()
func_6397 = relay.Function([], output)
mutated_mod['func_6397'] = func_6397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4661_call = mod.get_global_var('func_4661')
func_4663_call = mutated_mod.get_global_var('func_4663')
call_6411 = relay.TupleGetItem(func_4661_call(), 4)
call_6412 = relay.TupleGetItem(func_4663_call(), 4)
output = call_6411
output2 = call_6412
func_6414 = relay.Function([], output)
mod['func_6414'] = func_6414
mod = relay.transform.InferType()(mod)
mutated_mod['func_6414'] = func_6414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6414_call = mutated_mod.get_global_var('func_6414')
call_6415 = func_6414_call()
output = call_6415
func_6416 = relay.Function([], output)
mutated_mod['func_6416'] = func_6416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4960_call = mod.get_global_var('func_4960')
func_4961_call = mutated_mod.get_global_var('func_4961')
call_6450 = relay.TupleGetItem(func_4960_call(), 0)
call_6451 = relay.TupleGetItem(func_4961_call(), 0)
output = call_6450
output2 = call_6451
func_6452 = relay.Function([], output)
mod['func_6452'] = func_6452
mod = relay.transform.InferType()(mod)
mutated_mod['func_6452'] = func_6452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6452_call = mutated_mod.get_global_var('func_6452')
call_6453 = func_6452_call()
output = call_6453
func_6454 = relay.Function([], output)
mutated_mod['func_6454'] = func_6454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4538_call = mod.get_global_var('func_4538')
func_4539_call = mutated_mod.get_global_var('func_4539')
call_6501 = relay.TupleGetItem(func_4538_call(), 0)
call_6502 = relay.TupleGetItem(func_4539_call(), 0)
func_5222_call = mod.get_global_var('func_5222')
func_5224_call = mutated_mod.get_global_var('func_5224')
const_6514 = relay.const([2.216490,-1.956679,3.510753,7.637706,8.666320,9.774897,9.334623,-9.877099,8.808353,3.311185,-3.194366,-0.255146,-4.916422,5.585220,-1.101662,-0.610749,6.386828,0.877687,-1.572912,3.742334,0.161828,-9.000732,8.356796,9.810580,-2.719511,-3.236739,3.028674,-4.305464,-6.241627,1.483792,-7.614877,-0.179290,0.166228,-1.574491,-9.761493,0.611569,-1.405861,9.144385,-4.446484,0.376738,3.669297,5.233050,-5.201829,-6.393585,-8.453261,0.345099,6.101425,-1.070432,7.516928,-2.601889,-6.310790,-6.652377,6.416374,1.280300,-1.154004,8.254305,-4.157290,-6.347553,-7.472218,2.637977,8.916104,-8.938193,6.924087,7.665555,5.297975,-9.413172,8.275607,9.517926,-9.384279,6.129192,9.755578,-6.454574,4.029095,-8.782573,9.046412,-0.855500,-1.034907,7.337099,7.273704,-9.131114,-2.014048,1.873230,4.543711,4.934212,1.622163,-2.149545,2.694654,-9.106155,-5.275711,-8.276207,4.866768,-4.776487,3.034146,6.009409,-1.074480,-5.386031,-2.846118,-7.494063,-2.208523,-7.298329,-1.791321,-9.609260,9.559052,1.482385,9.794471,-5.470885,-3.836147,-8.855820,-8.162380,5.286503,2.150262,-5.174225,3.721590,-5.873691,-6.404139,8.508808,9.208009,-5.018200,-8.077274,-3.444538,3.545531,-2.241081,3.408804,-8.484031,-7.479226,-9.343588,1.228663,-9.887334,-4.893181,-3.976280,4.203294,0.972716,2.699382,9.736082,6.870716,7.562563,-3.833195,3.909628,-4.230192,-6.561727,7.631226,-7.323017,7.027498,0.244068,0.292464,-6.095584,5.739671,-6.720875,5.278368,-1.627686,0.316747,5.978205,-6.912682,-2.374903,-9.399871,8.962867,4.312065,-1.255508,-7.772079,-0.201604,2.647406,-0.504628,9.764225,9.912298,0.825068,0.513198,7.084895,-5.873360,2.535620], dtype = "float64")#candidate|6514|(169,)|const|float64
call_6513 = func_5222_call(relay.reshape(const_6514.astype('float64'), [1, 13, 13]))
call_6515 = func_5222_call(relay.reshape(const_6514.astype('float64'), [1, 13, 13]))
func_5222_call = mod.get_global_var('func_5222')
func_5224_call = mutated_mod.get_global_var('func_5224')
call_6530 = func_5222_call(relay.reshape(const_6514.astype('float64'), [1, 13, 13]))
call_6531 = func_5222_call(relay.reshape(const_6514.astype('float64'), [1, 13, 13]))
output = relay.Tuple([call_6501,call_6513,const_6514,call_6530,])
output2 = relay.Tuple([call_6502,call_6515,const_6514,call_6531,])
func_6542 = relay.Function([], output)
mod['func_6542'] = func_6542
mod = relay.transform.InferType()(mod)
output = func_6542()
func_6543 = relay.Function([], output)
mutated_mod['func_6543'] = func_6543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5849_call = mod.get_global_var('func_5849')
func_5851_call = mutated_mod.get_global_var('func_5851')
call_6544 = relay.TupleGetItem(func_5849_call(), 0)
call_6545 = relay.TupleGetItem(func_5851_call(), 0)
output = call_6544
output2 = call_6545
func_6550 = relay.Function([], output)
mod['func_6550'] = func_6550
mod = relay.transform.InferType()(mod)
mutated_mod['func_6550'] = func_6550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6550_call = mutated_mod.get_global_var('func_6550')
call_6551 = func_6550_call()
output = call_6551
func_6552 = relay.Function([], output)
mutated_mod['func_6552'] = func_6552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4538_call = mod.get_global_var('func_4538')
func_4539_call = mutated_mod.get_global_var('func_4539')
call_6567 = relay.TupleGetItem(func_4538_call(), 0)
call_6568 = relay.TupleGetItem(func_4539_call(), 0)
output = relay.Tuple([call_6567,])
output2 = relay.Tuple([call_6568,])
func_6569 = relay.Function([], output)
mod['func_6569'] = func_6569
mod = relay.transform.InferType()(mod)
mutated_mod['func_6569'] = func_6569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6569_call = mutated_mod.get_global_var('func_6569')
call_6570 = func_6569_call()
output = call_6570
func_6571 = relay.Function([], output)
mutated_mod['func_6571'] = func_6571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5742_call = mod.get_global_var('func_5742')
func_5744_call = mutated_mod.get_global_var('func_5744')
call_6588 = relay.TupleGetItem(func_5742_call(), 1)
call_6589 = relay.TupleGetItem(func_5744_call(), 1)
output = relay.Tuple([call_6588,])
output2 = relay.Tuple([call_6589,])
func_6592 = relay.Function([], output)
mod['func_6592'] = func_6592
mod = relay.transform.InferType()(mod)
output = func_6592()
func_6593 = relay.Function([], output)
mutated_mod['func_6593'] = func_6593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6550_call = mod.get_global_var('func_6550')
func_6552_call = mutated_mod.get_global_var('func_6552')
call_6599 = func_6550_call()
call_6600 = func_6550_call()
output = relay.Tuple([call_6599,])
output2 = relay.Tuple([call_6600,])
func_6608 = relay.Function([], output)
mod['func_6608'] = func_6608
mod = relay.transform.InferType()(mod)
output = func_6608()
func_6609 = relay.Function([], output)
mutated_mod['func_6609'] = func_6609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5849_call = mod.get_global_var('func_5849')
func_5851_call = mutated_mod.get_global_var('func_5851')
call_6628 = relay.TupleGetItem(func_5849_call(), 2)
call_6629 = relay.TupleGetItem(func_5851_call(), 2)
var_6638 = relay.var("var_6638", dtype = "float32", shape = (7, 9, 15))#candidate|6638|(7, 9, 15)|var|float32
bop_6639 = relay.subtract(call_6628.astype('float64'), relay.reshape(var_6638.astype('float64'), relay.shape_of(call_6628))) # shape=(7, 9, 15)
bop_6642 = relay.subtract(call_6629.astype('float64'), relay.reshape(var_6638.astype('float64'), relay.shape_of(call_6629))) # shape=(7, 9, 15)
func_5304_call = mod.get_global_var('func_5304')
func_5307_call = mutated_mod.get_global_var('func_5307')
const_6659 = relay.const([-3,8,-10,10,-8,1,-9,-9,-6,3,-3,-10,-7,-10,2,10,10,1,3,-9,2,-5,6,4,-6,1,-4,-10,-5,10,10,3,10,-1,3,-7,9,8,5,5,-6,1,-7,-3,-3,-10,-2,4,-4,6,4,4,5,-7,1,2,-8,1,3,-10,4,-1,2,10,-2,-7,8,-10,-3,-3,-10,-6,-7,-8,9,-7,7,-9,5,8,6,4,7,6,2,4,4,4,5,2,-9,6,8,6,-7,-1,-10,-6,10,6,-3,5,10,-1,-1,-8,-3,-6,-10,-4,-7,-9,-9,-3,-6,10,9,1,5,4,-6,-6,-7,-1,5,5,10,8,-8,8,-1,-5,6,-10,7,-6,-6,-1,-3,1,8,9,-7,-9,9,9,8,10,2,-4,6,2,-10,-5,5,-10,-2,-3,5,4,-1,-6,10,2,8,9,-6,5,3,-1,-8,3,10,-8,8,-3,-6,-10,4,6,-10,7,-5,-1,4,7,3,-1,6,1,1,4], dtype = "int8")#candidate|6659|(192,)|const|int8
call_6658 = relay.TupleGetItem(func_5304_call(relay.reshape(const_6659.astype('int8'), [6, 8, 4]), relay.reshape(const_6659.astype('int8'), [6, 8, 4]), ), 1)
call_6660 = relay.TupleGetItem(func_5307_call(relay.reshape(const_6659.astype('int8'), [6, 8, 4]), relay.reshape(const_6659.astype('int8'), [6, 8, 4]), ), 1)
output = relay.Tuple([bop_6639,call_6658,const_6659,])
output2 = relay.Tuple([bop_6642,call_6660,const_6659,])
func_6691 = relay.Function([var_6638,], output)
mod['func_6691'] = func_6691
mod = relay.transform.InferType()(mod)
var_6692 = relay.var("var_6692", dtype = "float32", shape = (7, 9, 15))#candidate|6692|(7, 9, 15)|var|float32
output = func_6691(var_6692)
func_6693 = relay.Function([var_6692], output)
mutated_mod['func_6693'] = func_6693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4538_call = mod.get_global_var('func_4538')
func_4539_call = mutated_mod.get_global_var('func_4539')
call_6718 = relay.TupleGetItem(func_4538_call(), 0)
call_6719 = relay.TupleGetItem(func_4539_call(), 0)
var_6752 = relay.var("var_6752", dtype = "float64", shape = (945,))#candidate|6752|(945,)|var|float64
bop_6753 = relay.not_equal(call_6718.astype('bool'), relay.reshape(var_6752.astype('bool'), relay.shape_of(call_6718))) # shape=(945,)
bop_6756 = relay.not_equal(call_6719.astype('bool'), relay.reshape(var_6752.astype('bool'), relay.shape_of(call_6719))) # shape=(945,)
func_6691_call = mod.get_global_var('func_6691')
func_6693_call = mutated_mod.get_global_var('func_6693')
call_6757 = relay.TupleGetItem(func_6691_call(relay.reshape(bop_6753.astype('float32'), [7, 9, 15])), 2)
call_6758 = relay.TupleGetItem(func_6693_call(relay.reshape(bop_6753.astype('float32'), [7, 9, 15])), 2)
output = relay.Tuple([bop_6753,call_6757,])
output2 = relay.Tuple([bop_6756,call_6758,])
func_6759 = relay.Function([var_6752,], output)
mod['func_6759'] = func_6759
mod = relay.transform.InferType()(mod)
var_6760 = relay.var("var_6760", dtype = "float64", shape = (945,))#candidate|6760|(945,)|var|float64
output = func_6759(var_6760)
func_6761 = relay.Function([var_6760], output)
mutated_mod['func_6761'] = func_6761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4528_call = mod.get_global_var('func_4528')
func_4530_call = mutated_mod.get_global_var('func_4530')
call_6889 = relay.TupleGetItem(func_4528_call(), 0)
call_6890 = relay.TupleGetItem(func_4530_call(), 0)
func_3721_call = mod.get_global_var('func_3721')
func_3725_call = mutated_mod.get_global_var('func_3725')
const_6901 = relay.const([-1.024613,4.759149,0.487839,9.459307,6.189312,9.858577,3.930205,-7.244055,2.309679,9.726609,-1.478906,4.091410,-7.673236,5.481634,3.643199,9.358452,-7.199345,4.642682,-1.912179,3.447165,-7.774300,6.343053,7.687504,2.675222,2.273172,4.549939,-7.316640,-1.623945,-1.310034,-1.358701,-4.589829,-5.708766,0.810159,-9.608375,-3.927211,0.386966,-3.634919,-5.811559,-8.996595,-0.363737,3.001460,1.137632,-7.471525,-2.031617,-1.382352,1.256329,-9.341448,3.518146,7.882558,4.692875,7.383439,-9.314976,-7.649649,0.646660,-7.442862,-1.894754,9.263598,8.603770,2.057520,-7.689921,8.592003,3.369932,6.218298,5.262999,-6.411570,8.312668,2.043244,-6.739412,-9.036017,6.300940,2.953462,-3.315035,4.453154,5.111037,4.582480,-8.334095,9.451605,9.670274,-3.807470,4.892920,9.910435,-0.137262,-0.140663,-3.616342,-8.875529,9.124383,8.856330,-8.860830,3.997037,-4.481574,-9.441515,8.202300,-4.454239,-0.087757,8.959019,6.699205,-9.789435,-6.835257,-1.469169,-9.065342,-4.118772,7.179919,4.586607,-7.130182,2.632727,-2.524242,-9.095306,8.420838,-7.894529,0.776461,7.150355,-8.661387,6.192440,-8.483823,-2.050244,-6.790764,-5.360527,-9.114916,-4.220164,-5.401228,9.182481,4.148260,4.037199,-8.797511,-9.527140,8.135795,4.471401,-2.225809,-5.586841,-6.313502,5.403007,4.410401,-2.604058,3.446778,2.737099,-8.693842,-8.052544,-3.118488,-6.830852,0.377232,-7.479713,-9.348766,0.542757,-5.941962,4.445501,-3.284576,-9.511757,-5.534314,1.094145,5.846209,-3.887171,-4.574586,0.175197,-5.248171,0.872189,-2.741167,-9.395830,8.370764,3.745712,-3.722547,5.685266,7.227746,-2.915254,-1.450749,-7.903901,-6.063253,-5.175281,3.048071,1.023303,6.728684,-3.134681,7.937941,4.736649,-0.694240,-6.193405,8.958957,0.747139,5.459319,2.401190,6.756650,2.298695,-6.863594,-0.176972,9.159241,1.694346,4.212272,2.359212,-1.254157,6.364409,5.968322,4.581471,6.011802,-7.206930,7.297357,6.466791,2.478831,-2.915947,-3.818683,6.787510,9.008064,-1.453516,-8.963506,7.405489,-7.577075,8.646598,-9.202458,7.229936,0.053667,1.076752,7.732370,-3.982270,2.644323,-0.089143,5.360778,-3.119893,-4.061329,5.903583,-3.971425,3.988217,-4.505144,-9.866703,-4.176939,-6.575490,7.474191,-0.136513,-8.314629,4.223959,8.551742,1.331424,-0.598131,7.197488,7.663426,8.840646,9.202742,-9.353732,-6.899451,7.172437,-3.980786,-3.925574,1.632967,-4.279201,1.678962,1.289461,9.571300,-0.952044,-8.272856,-2.716224,-8.682711,5.388991,9.143598,3.868506,9.852060,-7.824162,4.533499,0.881943,5.414603,-5.953507,-8.975624,4.368048,6.436109,0.901638,-3.055427,1.089560,1.736305,-5.807434,-1.911683,-9.698824,-3.331658,-0.862120,-3.748924,-3.607083,9.221261,-9.830448,8.400002,-6.517258,9.730093,-8.262307,6.757967,6.165051,2.973073,4.241337,7.712748,3.158757,-4.410564,6.528402,1.693714,-6.674038,8.270887,-2.340100,7.226742,8.482742,-6.126691,-6.598899,2.810559,7.351255,0.494891,-3.766779,-7.606000,3.661718,2.026303,2.156649,-5.459382,-7.433793,2.900214,-5.007639,1.441528,0.012197,-9.428194,7.919086,1.355098,-1.326012,-3.160434,-0.059492,-5.011875,3.058467,-5.807049,-0.364791,7.732437,-8.376855,-8.314646,6.166639,-7.852110,1.748028,-8.583512,-6.792570,2.083142,-1.934306,-9.749078,5.927048,-0.084975,-9.931524,9.110160,-7.809093,2.713083,4.669995,5.639278,9.631799,-4.557891,-4.314567,-7.389595,-2.236444,7.153405,2.985685,2.549700,-5.075915,2.582891,0.149027,-7.387912,9.314812,-2.437404,2.974804,3.748020,-3.343706,7.756158,-4.738001,6.737458,-2.177982,-0.743998,-5.897629,-2.218601,9.380806,-9.799233,-8.727365,-1.984605,-0.427910,8.089410,1.109701,4.417732,-7.582126,-6.194526,-9.590109,3.084104,3.770407,-6.414258,-1.021591,-0.320560,-8.867794,-1.782421,0.475545,8.290831,4.075438,8.711378,5.250166,-5.818659,-0.066480,4.219292,6.747565,4.603775,-8.438134,-7.074556,-1.384750,-7.688439,2.543194,7.222820,-1.420623,1.559591,7.343652,-7.027736,8.832134,-3.418337,2.599376,-3.905783,0.820602,0.250486,7.000221,-9.564372,2.641518,-9.563445,5.904521,5.566382,-6.851559,7.885505,-9.721484,2.102211,6.186889,1.520882,0.889917,9.681364,1.490441,-0.776073,-4.151657,-0.133941,2.093674,4.705732,-2.732440,-8.000123,6.052834,4.139387,2.836870,1.615702,-1.267226,-4.017850,-8.490612,-6.979070,-7.650291,-1.785842,0.418030,-3.980566,7.496876,4.346382,8.364652,0.934010,-1.045910,-8.037284,5.982145,-7.765839,-6.344497,3.406769,-2.258005,-1.018088,-9.391309,7.447854,1.133931,-8.513868,7.118177,-5.490721,-6.977449,8.559306,-3.697991,-7.070798,7.801508,-0.988028,1.274854,-8.747805,7.256036,2.675033,2.667850,-9.230910,-7.400092,-7.586210,-0.059042,-0.339715,-1.136416,5.464739,9.124276,-8.557315,-1.500673,-6.736163,-9.386502,7.373080,9.167113,1.521545,-7.923859,6.536868,-9.296688,-4.248113,4.714541,6.112234,9.297288,-4.328256,9.231547,3.644825,3.512883,6.801418,3.535796,-0.253605,9.849708,9.037319,6.931610,7.114715,-3.710699,-3.871499,-4.438353,3.254669,9.481467,9.459044,-4.591925,-0.556840,-5.979218,6.643063,4.586403,2.071707,2.063537,-5.850955,9.181869,7.767510,4.773401,9.906084,2.041851,9.717154,6.386389,6.237923,-0.979732,3.758977,-9.981483,-6.322851,-4.732753,-9.639735,-1.343094,-5.095368,-6.272640,-4.341337,-3.401497,-5.000885,-3.989447,-8.901305,-4.461929,-1.017923,5.880623,2.922343,-8.719538,1.034003,4.636214,2.057013,-3.167354,-1.291170,4.569777,9.965123,-4.083724,9.087305,4.794916,-2.319268,-5.230522,-4.203062,5.913615,1.052712,7.702071,-9.946474,-3.881178,3.371715,-3.038492,-6.547336,-6.758457,6.628874,3.833012,0.332898,-6.289436,-9.909408,-2.184935,-7.599050,-3.093205,-8.499554,4.841852,7.213679,-5.925527,-6.822599,-2.559337,-3.786925,-8.555076,4.960241,-0.012004,4.381807,1.484255,1.060392,-7.012629,1.416438,5.810969,9.552380,-8.819041,6.123432,1.213012,8.294720,-1.232732,-2.487573,0.594016,-2.989721,-3.355563,-4.370938,7.162478,-3.178500,-0.407257,-9.816124,7.918073,-4.267888,-1.649340,-8.616272,8.832041,5.830831,1.589457,8.758833,-6.694263,-0.121427,9.331447,-3.916523,8.490243,-0.326281,-2.515837,4.851723,-8.341556,8.733686,7.826419,-9.789224,-2.006754,-6.768392,4.534320,-0.261532,4.782941,6.239475,-2.135072,4.553879,-3.799958,1.586553,4.757161,-8.255709,-1.346554,-7.479599,1.537687,-6.066819,1.921728,0.176418,-6.169894,-1.801642,-9.887479,-2.918650,5.699763,-7.965090,-3.559901,-3.427730,0.715512,1.069209,-8.642115,0.672817,8.141905,5.300463,0.215385,2.958981,7.565194,7.057604,1.937222,-1.398031,-8.154329,-7.424425,-5.240584,-2.086193,8.821617,7.121610,4.143684,2.093177,-0.672930,7.275037,1.343060,-6.795194,-4.876392,9.004934,0.380216,-6.901119,-6.739873,-0.923424,4.768298,-6.306357,0.938575,9.658876,4.296930,3.571758,8.165403,0.696720,5.834152,8.826981,9.946191,-6.048825,-1.712125,-4.155958,8.695025,5.281026,0.140300,-9.177847,4.069394,-1.653723,-7.815028,7.713745,-0.903018,0.001639,-0.956563,-6.769670,6.925341,-5.155114,2.998499,-6.664796,-2.919063,-7.783182,-8.500594,-5.703641,-3.207487,-3.174300,-2.502231,-1.058763,-7.160076,-4.314771,3.696610,-1.438690,2.802533,-0.054052,-2.829041,-6.651850,2.712899,-5.278111,6.654260,0.659639,9.941051,-6.785549,4.159540,0.908626,-9.170577,-6.555064,-3.416504,-9.082279,-1.794437,-7.548246,-7.994190,7.956931,9.246577,1.835060,-5.802224,-2.333565,-0.435553,2.969538,-9.937598,2.146175,-4.955341,-4.244032,-0.962921,3.033160,5.137034,9.066118,-2.293414,1.026347,5.599401,-3.299497,-7.589790,2.519213,2.139484,-4.044578,8.958666,4.827694,-8.843644,-3.151881,-2.230267,3.582907,-2.669799,0.283617,4.635291,-4.940157,2.076767,-5.324233,-7.780782,-0.029588,-8.280312,2.649986,-5.274083,4.419158,-7.582268,-0.622603,2.557114,-0.388280,-9.931569,-3.852304,9.604710,-0.542502,0.893064,-6.659935,2.492245,-1.591754,1.928691,3.161749,-5.122381,-0.111985,9.984189,2.162830,-3.781796,-9.124420,-1.354596,-3.202400,1.500801,-7.962640,8.810365,-2.413760,-5.398405,-1.939059,-6.358210,2.455694,2.560039,4.734825,-6.853689,4.397671,5.297319,-1.653188,6.667859,2.133053,9.740230,4.357078,-3.225099,8.425093,-8.567289,-8.970418,-9.821781,3.691741,-7.329935,-5.868034,-8.688828,3.637425,1.557132,2.821932,3.162487,7.668637,-3.616821,0.878953,1.640968,3.198169,0.983992,-2.370181,-6.627797,7.141384,5.485148,3.194390,2.091230,4.478927,-3.106537,0.153730,8.572859,6.783195,-6.741699,-0.172832,7.410931,7.279294,9.805992,-0.731921,-0.061140,-9.140260,3.491088,3.510971,6.724016,3.718455,6.232211,4.047807,-9.588550,-5.187156,9.165444,-9.844856,4.437360,2.732237,8.126081,-4.193506,5.633346,1.401793,-9.349817,-2.738625,4.537026,-3.653971,-0.199469,4.932492,-3.742229,6.873811,-4.569118,-4.187024,-9.825949,4.782341,-9.594267,1.168620,-0.565412,-7.177091,7.191449,-2.427783,9.157178,8.464365,-2.535176,-6.063471,-8.301335,3.343108,9.179241,-6.421052,6.750869,9.999723,7.533524,-2.982140,-7.597849,4.110985,1.053124,-1.239088,-1.392691,-0.795737,2.978972,3.851702,2.788784,-5.178012,-7.343297,-8.961590,-3.842007,4.600727,-7.720466,-8.735651,1.605994,-7.621070,9.948426,8.010665,-4.947790,6.690314,-4.965246,8.659912,2.724518,-1.481320,0.672405,9.942356,-3.027367,3.104966,-2.256052,4.030878,0.305908,-3.073567,8.633475,-7.033728,-5.377071,6.682733,-9.043525,-1.690865,-2.401286,-8.337790,4.514140,-9.981063,-0.400420,-9.975018,0.685192,-0.484265,0.206487,4.061984,-8.338234,-4.037557,4.384068,2.177402,-1.639182,2.911047,-6.151801,-1.966469,-8.528508,-0.013067,5.913536,5.082520,-3.402192,4.258820,5.231179,-5.134750,8.661612,-7.305859,-5.681450,-4.829089,3.906108,-3.784314,1.004132,7.094456,5.221534,6.507154,-9.037767,7.331026,-1.900957,-2.705006,5.259966,-3.556615,1.166131,-1.448093,-4.484253,-2.176883,-4.971376,-3.425601,-0.773656,3.002161,2.676928,-1.497107,-1.992925,-7.889951,-1.606224,-5.623502,-6.765275,-4.888735,5.539746,9.847778,-1.105426,2.729979,-8.988736,-8.058033,1.071949,-6.910778,-9.143751,-0.017177,-9.121842,-6.589764,7.522103,1.175502,3.326108,3.138649,-4.259317,-5.482546,-7.264154,5.435478,0.370151,6.789199,-3.337939,2.228336,-1.956378,7.795962,6.262959,-8.376788,-0.789172,-1.027460,4.826026,-4.739118,-9.909072,-7.582916,-5.654686,-6.434437,-4.249148,-2.360174,1.516678,7.979456,1.674523,3.109222,-4.659754,2.589443,7.786082,-6.819888,7.990781,-3.877404,-8.388520,-2.417532,-7.540464,-7.301737,1.046513,4.607912,9.222491,-8.637500,8.354663,6.332310,4.891473,-7.518151,-1.879309,-1.680754,9.063812,1.597970,2.351407,-6.622574,-6.317793,-8.074039,0.416388,9.318260,9.462446,5.739634,2.058822,-9.801267,6.479783,0.551206,-3.410951,7.388361,-5.159421,3.225688,2.741410,1.743210,-2.912648,9.534107,-6.224314,-4.529557,-6.277147,-9.614131,-4.820390,0.774601,-5.527661,5.207272,-0.537046,-0.930159,-9.712523,-7.087502,-3.983273,3.570890,-9.942120,-6.898843,3.683152,-4.606809,1.492462,1.268194,5.659065,8.014309,8.476629,-6.878941,-5.205590,-1.133157,-6.214284,-1.126591,8.488378,-6.256500,-0.424233,-9.592229,9.370369,2.836111,6.665506,7.232913,6.396347,-3.128747,4.234102,-2.156043,-7.466569,-1.732803,-2.412657,3.164656,6.657062,5.811648,-6.880528,9.575211,-2.251884,-6.545462,-0.576960,-0.383136,1.762325,-6.598403,-5.904622,-2.927990,-0.011743,1.743580,1.526917,-8.592834,-4.649115,-8.383823,9.314039,5.122803,-1.123055,3.398268,7.880527,1.816715,0.232446,8.921018,-9.784552,-1.332286,5.641306,1.618595,-8.236384,9.848152,2.101810,1.488997,7.526522,-1.559891,0.483664,-1.544297,-5.870765,4.610064,-4.653599,4.819088,-2.276872,8.594831,7.055821,-8.076988,-7.574908,6.117250,1.514861,-8.405987,1.553303,-8.932086,-9.837824,2.050065,-1.013200,-4.937056,8.702488,-6.039791,8.444089,4.129074,-9.307887,-7.164562,4.408039,9.151509,1.693573,-5.043650,-5.880755,0.831005,2.792616,0.436590,9.108086,-8.030659,8.108141,-0.152767,-6.871057,-0.263991,0.930115,7.577421,-4.303387,1.428068,-5.730500,-4.830398,-9.879004,-4.346696,-9.101997,-6.848136,5.244879,-5.911465,7.284551,-9.127466,3.123264,-3.282711,2.969344,1.662141,-7.703145,5.231715,-7.309206,-1.184588,7.610956,8.336674,-0.441838,0.173739,-6.983613,8.161713,-9.472101,-3.053857,-0.592704,-0.626411,-8.720067,0.107098,-3.327380,-8.952893,-4.352228,-8.298438,5.197376,9.255554,6.187270,5.516356,-7.418621,9.123750,-8.352334,-8.688006,-0.361952,0.325162,7.113617,-9.074802,7.395521,-7.892982,4.264486,-6.679778,-0.336141,-5.223864,-3.064035,-9.405979,-7.612953,-8.010486,6.983209,7.253434,9.549097,-3.552121,1.297525,0.551083,5.178723,-7.631249,-4.841146,6.873771,-2.572309,-9.610762,-2.572646,-5.649880,-9.687126,2.255679,8.990961,4.658355,2.220802,1.243429,-0.660573,-4.123461,0.230871,-6.432610,9.748586,-5.172953,-4.195860,-4.216881,5.895715,3.568590,8.028423,1.549352,-8.156237,-4.057133,5.241756,-3.612149,-4.529872,5.628725,-9.762092,5.854361,-2.713771,6.058762,-4.936572,4.803862,-0.519217,2.010000,3.768316,7.796931,3.187538,-1.481845,6.172301,6.281081,3.103814,9.789642,-7.247424,0.781432,6.921840,9.302805,-4.533406,0.164617,-4.676724,9.675824,-5.803332,5.274517,-7.017099,-6.275635,-7.876395,9.633217,-8.029195,2.370408,2.678650,7.726053,-2.362748,-9.310454,7.205589,2.354026,-4.956766,-3.991762,7.838271,-3.483730,3.346423,-6.251048,-2.300569,5.887715,-8.288127,-3.711422,6.973767,-1.179644,-7.031531,-7.236655,4.030339,3.482681,-1.572914,-8.580219,0.093080,8.026422,8.875471,8.468070,9.068497,-2.458053,2.828793,1.455683,2.184104,-3.509454,-6.444377,3.137732,1.869829,0.832470,-7.119181,0.661375,8.400468,-0.543373,-8.932564,-7.183971,-3.347087,-1.187317,1.535239,-6.247643,9.956718,1.928413,-2.572718,1.530338,4.932892,9.757660,-3.125171,-6.871118,-2.325418,-5.136418,-2.496343,-3.419383,-4.581611,-5.561431,3.897398,-8.462402,-1.651050,-9.228819,-3.313884,-3.850617,2.901768,-1.846784,-8.716660,9.718618,3.280403,-2.478066,-4.225644,5.494205,7.345457,9.100969,-4.447286,5.730231,8.606219,9.343116,-5.627298,0.871122,-0.205628,2.675716,-3.327061,2.289076,8.235259,8.147046,-1.374983,-6.906759,0.007368,-1.757559,3.298713,-8.390851,-9.288286,-4.227776,2.119085,-1.305063,4.307534,-2.751694,-6.152060,-8.312328,4.785716,4.955562,-8.599469,2.217575,0.153909,0.976922,-5.789890,1.991847,-7.877953,4.687786,-7.978993,6.240651,4.318482,8.377195,6.507066,9.767361,-2.165080,-2.923886,-2.592209,-2.138759,-0.058526,-5.817352,9.972557,0.115157,-7.036489,6.594005,-8.717205,-9.718118,-7.931115,0.102916,7.240829,9.391306,4.443799,-5.966204,0.180495,-3.532640,3.204392,-2.941823,-4.793220,-7.492870,-2.404749,6.965598,-5.785499,3.232786,-6.179759,-0.161523,0.540906,7.876646,6.446618,4.526239,-9.960607,-7.519230,-9.272649,-2.644950,-7.777078,4.629884,-8.457653,0.614680,2.174346,7.791980,5.625189,6.727554,3.374906,-8.321950,4.956890,-8.178436,6.938050,6.847202,5.764664,-6.339483,-5.769052,8.091372,4.539041,1.669777,1.052499,-2.077935,-0.635499,3.848974,-7.829642,-6.457586,1.359422,4.833928,-8.561230,0.347665,-1.929520,3.771516,6.651206,5.991825,-3.503755,8.962964,4.610985,-3.937558,-3.636501,-5.444041,0.414186,-9.030433,8.540167,4.915287,-3.847547,2.577753,0.981753,7.638307,1.035238,6.881162,0.532578,6.135844,-6.219575,-2.972360,-7.145381,1.371612,3.267490,-9.846423,4.143804,-4.987452,-0.581325,-2.468105,9.181086,7.880259,-1.375190,-3.677419,5.747532,-8.987492,5.949729,-9.208298,7.774552,-6.218169,1.502492,3.774578,-4.399592,-4.098867,-5.420201,-4.475125,-9.723139,-4.866345,-0.839283,-8.422647,8.060651,8.478817,1.563419,-7.177292,2.614634,-6.854809,0.144348,8.816726,3.568577,2.807247,-9.875037,8.731098,8.433649,9.012917,-4.850941,8.813206,9.972462,2.554360,8.195136,8.837173,-9.862246,8.450642,-9.021837,1.188201,8.110706,7.379052,5.233863,-0.134211,-0.330459,-7.955764,-6.188822,-5.244487,6.865521,-0.737282,5.048787,9.059723,2.808050,-4.831421,-5.103432,-0.802846,-9.169142,9.591455,-6.041527,-4.137738,-4.416367,-3.300007,-8.733776,-9.604691,-9.162131,-2.596072,-1.642837,8.806041,3.143740,9.682457,1.082080,6.077607,2.093410,2.538686,-7.645970,3.054198,2.765699,0.969051,-8.339058,3.047628,3.668845,5.198176,9.372126,4.081869,-2.285587,-9.678815,-8.452091,6.245235,7.108717,-7.878943,-1.267163,-2.366118,0.425407,3.040775,4.064977,-3.502323,9.560614,-3.276578,-1.491440,2.458714,9.526101,-3.298004,0.919410,3.524828,0.645728,-6.112950,7.941542,4.172871,0.521460,0.234863,7.362512,4.057385,7.215290,5.559345,1.345538,-9.084816,6.935749,8.777373,-0.160920,6.863079,-1.910270,5.163010,-3.370074,-6.526928,1.795991,-9.910437,1.158624,7.470150,6.732590,-6.821148,3.326702,6.049101,2.694231,0.742669,-2.569229,6.586142,8.136065,-9.011189,6.374749,6.679095,-4.913670,4.039053,4.242582,-6.642321,-9.588886,6.318837,6.671869,-7.397734,4.016348,-0.561430,-7.700098,-7.218358,-1.903211,1.543025,6.502719,6.693445,-0.755582,8.633890,2.722967,-5.706003,-5.111118,-1.228908,6.210588,8.386763,-6.481770,-5.320034,9.003636,-9.331609,8.105478,-5.029821,-6.061151,0.841092,-4.784615,-4.362369,-0.222753,2.961517,2.383080,9.059373,-0.780996,3.304826,-8.149767,7.279980,8.542377,-1.454966,3.634284,5.625896,-2.784855,-9.414931,-5.946309,-3.872483,-6.958846,8.851851,5.495819,-7.196870,4.945391,2.661290,9.374633,-6.750824,-8.775753,6.071976,5.014381,-1.698669,8.122440,-0.239172,5.186650,6.988881,9.253771,4.512546,7.677513,-0.792898,-2.683142,-9.157275,6.634353,-4.952353,1.070257,6.244299,-5.844118,-6.130677,6.830121,4.331815,-8.876524,-6.726830,-4.546583,-8.310306,5.224717,-8.840841,-0.437316,4.738656,1.309839,-2.341594,7.286363,0.758998,4.861997,-6.974118,8.609469,6.542909,-5.262148,9.982362,-0.429512,-6.217415,-2.018420,1.880083,1.314107,-3.018593,-4.859961,-5.469373,0.719266,0.969557,9.218230,2.657023,-8.416431,-8.345857,-4.118642,2.835952,-7.537562,-6.799080,-5.979362,9.949472,-7.578899,8.418288,-6.755712,-6.850064,8.224723,-0.919510,4.142381,6.470868,9.313745,-1.240751,6.334011,-1.048026,2.268718,1.572882,-1.956978,-5.060898,-3.292481,4.099159,2.965305,-3.550213,0.103743,3.200247,-7.169968,-0.565002,4.575127,5.126096,-4.339889,-5.029106,-6.349646,-5.185100,-4.836108,1.212640,-0.805911,-9.569894,0.928169,-4.294005,6.644401,9.829826,9.959379,4.388234,5.964508,5.916422,-2.170398,4.662534,7.209439,7.255596,-5.251636,1.900242,4.389387,-9.593818,-7.239643,-6.232256,4.144004,-4.384216,8.895661,3.603945,-6.961378,3.406052,-1.012156,-2.164222,-8.678913,6.648705,-2.080223,9.471502,-3.900387,-4.604978,-2.633322,8.784569,3.693983,-0.319494,2.883521,1.143873,8.504652,0.342966,5.017218,8.387195,8.521444,2.044834,3.172341,-8.177627,-6.528305,5.049590,0.253166,-1.773469,-4.647902,8.944198,-9.735226,6.288363,9.174403,8.444191,-0.431917,-7.560736,-5.788854,-0.734156,-0.118560,6.136443,1.745423,-7.018953,3.462099,2.993293,0.393983,-4.408808,8.613819,6.100743,-3.369965,-6.028513,-9.454280,-6.189279,-0.402479,-2.214605,7.372372,5.655539,-6.640154,9.819872,5.348625,3.515850,-9.330239,-6.284513,-1.216391,-9.790920,0.447711,3.426725,-9.640542,-1.045240,-2.418040,2.385326,-5.206761,6.553622,-5.312827,7.729344,9.282379,5.778970,-5.092738,-5.174794,3.433906,4.714148,6.616803,-2.824668,-3.511391,-1.886908,-1.728153,1.093512,-6.396807,4.584989,2.651083,-5.517145,-6.907173,-9.553298,-7.443880,7.729944,-1.671686,-3.224455,4.960671,1.606101,2.620104,5.464401,1.404510,-6.860837,3.481401,9.297301,-3.557976,1.298575,0.378545,7.879336,-2.045844,2.050508,1.699562,-1.672653,1.308714,6.342523,6.973886,-3.898748,6.333617,5.202912,-4.786270,9.871547,-0.802842,0.253876,8.651184,3.672575,7.055786,-9.414888,-8.020850,-0.422533,-7.574531,-6.216501,-4.955108,-2.120765,-0.231017,-9.828790,-4.220578,8.756932,-7.533221,-6.222735,-7.709847,-6.072911,6.731720,-2.843448,2.641380,2.526034,-6.306612,-1.214264,-8.182450,-1.930147,-9.148956,5.587669,5.641046,2.020162,-4.597958,1.600195,-1.662714,-7.088138,-5.550405,3.254517,6.562661,8.877497,7.065886,-1.644590,-6.156836,-4.290908,5.332907,-3.658468,-1.325757,2.344743,8.012719,3.016368,-0.323276,0.979470,7.058208,-8.431183,7.654778,-7.694838,8.479993,-9.402730,-4.530126,-7.022877,3.930343,-8.247808,2.126199,-3.315062,-8.595278,-2.560037,9.455143,0.225235,-6.573893,-7.327334,0.747048,-2.484241,1.191414,-3.576927,5.118789,-7.294760,9.684492,9.482562,-4.256043,-5.664085,3.935751,8.692607,-9.504909,0.346854,-3.389416,3.911979,6.026380,8.310559,-6.404712,-9.627098,-9.097737,-6.575922,6.691486,-1.504676,5.952532,-0.476469,8.924969,-1.740177,-9.153139,4.191688,4.661440,-2.607363,-3.621039,9.880884,1.777682,9.594349,-5.929758,-1.737721,9.201908,1.029953,4.500076,2.279485,4.886500,-8.010678,-1.918376,6.528913,-7.696786,-1.758834,0.971356,-3.514589,7.137335,-1.330303,5.328574,1.612019,-7.788496,-3.881760,-3.916818,-0.092783,2.917024,3.013984,-4.701508,4.342285,-1.789193,-3.635896,4.783917,-5.713269,-2.934180,9.362985,1.425386,-8.574676,3.116785,6.154180,-7.132845,-5.841203,3.797455,5.139182,-5.655732,-5.371661,-2.641041,-3.783414,8.929102,-7.567916,1.950304,-4.334292,-9.118564,-7.820329,8.107650,0.740914,-6.647591,2.397834,1.728059,8.739774,5.347866,-7.336204,-8.324646,5.307121,-5.145719,3.863107,7.167136,-7.459675,-5.883194,-5.527577,5.458185,-2.610971,1.691906,4.189031,-8.023043,-1.294227,-5.599219,-9.033132,5.218321,0.861125,7.514887,5.649754,-8.864197,9.583339,3.214880,-1.183110,2.875907,-6.734644], dtype = "float64")#candidate|6901|(2184,)|const|float64
var_6902 = relay.var("var_6902", dtype = "float32", shape = (480,))#candidate|6902|(480,)|var|float32
call_6900 = relay.TupleGetItem(func_3721_call(relay.reshape(const_6901.astype('float64'), [14, 13, 12]), relay.reshape(var_6902.astype('float32'), [480,]), ), 3)
call_6903 = relay.TupleGetItem(func_3725_call(relay.reshape(const_6901.astype('float64'), [14, 13, 12]), relay.reshape(var_6902.astype('float32'), [480,]), ), 3)
func_4853_call = mod.get_global_var('func_4853')
func_4855_call = mutated_mod.get_global_var('func_4855')
var_6926 = relay.var("var_6926", dtype = "float32", shape = (288,))#candidate|6926|(288,)|var|float32
call_6925 = relay.TupleGetItem(func_4853_call(relay.reshape(var_6926.astype('float32'), [3, 8, 12])), 0)
call_6927 = relay.TupleGetItem(func_4855_call(relay.reshape(var_6926.astype('float32'), [3, 8, 12])), 0)
output = relay.Tuple([call_6889,call_6900,const_6901,var_6902,call_6925,var_6926,])
output2 = relay.Tuple([call_6890,call_6903,const_6901,var_6902,call_6927,var_6926,])
func_6931 = relay.Function([var_6902,var_6926,], output)
mod['func_6931'] = func_6931
mod = relay.transform.InferType()(mod)
var_6932 = relay.var("var_6932", dtype = "float32", shape = (480,))#candidate|6932|(480,)|var|float32
var_6933 = relay.var("var_6933", dtype = "float32", shape = (288,))#candidate|6933|(288,)|var|float32
output = func_6931(var_6932,var_6933,)
func_6934 = relay.Function([var_6932,var_6933,], output)
mutated_mod['func_6934'] = func_6934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4561_call = mod.get_global_var('func_4561')
func_4562_call = mutated_mod.get_global_var('func_4562')
call_6982 = relay.TupleGetItem(func_4561_call(), 0)
call_6983 = relay.TupleGetItem(func_4562_call(), 0)
var_6984 = relay.var("var_6984", dtype = "float64", shape = (7, 9, 15))#candidate|6984|(7, 9, 15)|var|float64
bop_6985 = relay.power(call_6982.astype('float64'), relay.reshape(var_6984.astype('float64'), relay.shape_of(call_6982))) # shape=(7, 9, 15)
bop_6988 = relay.power(call_6983.astype('float64'), relay.reshape(var_6984.astype('float64'), relay.shape_of(call_6983))) # shape=(7, 9, 15)
bop_6993 = relay.greater(bop_6985.astype('bool'), relay.reshape(call_6982.astype('bool'), relay.shape_of(bop_6985))) # shape=(7, 9, 15)
bop_6996 = relay.greater(bop_6988.astype('bool'), relay.reshape(call_6983.astype('bool'), relay.shape_of(bop_6988))) # shape=(7, 9, 15)
func_3721_call = mod.get_global_var('func_3721')
func_3725_call = mutated_mod.get_global_var('func_3725')
var_7000 = relay.var("var_7000", dtype = "float64", shape = (2184,))#candidate|7000|(2184,)|var|float64
const_7001 = relay.const([-0.964306,-9.713327,-5.924736,2.095499,-6.820212,-3.920785,-2.538146,0.213838,-9.095604,9.407124,-2.073444,-6.281597,-5.458536,1.039031,7.474130,-2.784426,6.599249,-3.339632,3.888308,-3.183523,-7.971942,4.474116,7.138546,0.693448,8.450185,9.189824,-9.159858,-0.471505,-7.693904,-7.931376,5.191925,-4.728484,9.640727,-8.394523,-2.125425,-9.626453,-9.672469,1.471715,-4.969936,2.348128,3.498435,2.128926,-7.758658,-4.941745,3.368658,-4.441903,-5.604261,-4.713912,-8.178128,-0.448750,9.506703,6.044846,-1.210384,-7.012542,-9.025742,7.581586,-0.088791,3.965353,-1.878076,-8.934706,-1.481068,-7.224618,4.605688,-4.565999,-9.555852,-3.136734,9.223253,0.684647,-2.561667,-6.714925,7.145149,-6.633937,-0.167776,-1.482023,-1.432173,7.099717,0.194365,3.457744,-5.268800,-8.812504,-5.428774,-7.936447,2.631272,2.772836,6.364539,-7.936872,7.874451,9.427441,-7.318609,2.162374,-9.092039,6.696382,-0.037205,-7.375169,-8.680034,7.834709,9.442879,-5.855088,5.508729,-8.750343,1.158748,9.901206,6.360095,-3.238982,-0.987030,-8.462552,-6.422052,8.839929,-2.354389,6.142456,-7.473177,0.841528,5.769946,-8.541825,-7.475975,0.823779,2.792590,-3.923478,0.213037,-0.044196,-1.736140,-5.041368,-8.607336,-8.115706,3.488258,1.536974,-5.737702,6.128098,-7.349402,4.655993,-7.536947,-2.607584,9.115714,0.930801,-4.529981,0.684185,-8.993213,1.151128,1.678153,-6.351519,-1.462820,-1.974858,-5.497752,-4.142842,-9.995287,9.721868,-8.971315,-6.546842,5.538886,7.634111,-0.569153,-5.427909,-0.328931,4.768899,0.847708,6.537427,-5.353278,1.704592,4.926515,5.740063,7.411409,6.342752,9.581064,5.286667,3.550659,-6.420212,7.518938,-1.156679,-4.381147,2.357571,4.078294,2.441244,8.165607,0.973548,-2.160086,-2.976379,6.442177,-1.110679,6.203033,1.181452,-0.818544,-7.937201,6.110837,1.940556,4.537653,2.193249,4.810639,-5.537196,4.454450,-9.026514,-1.105086,8.628262,-1.921662,-3.018808,-1.978437,-6.511424,9.927850,-7.404777,9.993213,2.565922,0.210724,-8.504052,6.357445,4.892310,-0.785364,6.953019,-9.401480,-3.909247,-7.302396,-9.155485,4.259686,7.510320,-5.025360,1.613080,4.892783,-7.571047,1.068783,-6.328457,7.350509,-8.198310,7.285073,-4.657838,-7.297559,-5.168170,-6.346430,3.333848,3.251433,-2.394805,9.448024,1.965099,-1.043282,6.298397,-5.330926,8.272417,3.991779,0.004642,7.590543,-1.790630,8.294909,-8.341202,3.376771,6.734650,-1.482532,-2.466329,8.397011,-9.561870,9.268902,9.850481,9.823488,6.028966,-6.727348,1.501040,1.073872,-2.006613,-3.670691,-0.640179,-7.203501,-4.141592,7.985815,-6.724179,1.457048,2.638613,-6.234331,-6.899932,5.645022,-0.765056,3.377227,2.563863,4.362945,2.249237,-2.943739,-9.960549,7.029997,8.201484,4.052147,7.792413,-1.078812,-1.424633,6.599620,5.689915,-2.518458,8.494727,7.402079,-9.831371,-6.527737,8.722417,1.926864,1.625208,-9.378243,-9.052603,5.614066,-5.220776,-4.886590,-6.709373,-3.014450,-3.942130,-3.866110,-9.907166,-3.129635,-8.892955,-4.099977,7.675959,6.658756,-4.612360,9.374427,-8.362111,-7.849718,-1.333315,4.236764,-5.295345,-4.773808,-0.050555,-7.494621,6.477347,-5.964531,7.554543,6.382451,-0.339349,-6.863765,-7.598460,2.529902,-9.055111,-1.380744,-2.168089,9.724971,6.703806,5.058844,-3.471794,-2.016598,-3.446539,-4.898234,0.731920,-8.947974,-2.664713,-0.265386,-7.515067,6.410999,5.033835,-5.102876,4.434822,-8.184146,2.280762,5.472262,-2.508733,2.437203,-4.337021,-8.912341,9.109553,5.798122,9.474067,0.521771,-1.518470,-9.891406,-0.059802,6.924341,7.591813,-9.883481,-1.726395,-7.049597,7.373063,8.935312,4.236855,5.236877,0.293403,1.320648,-3.685516,-8.474483,3.373748,-1.548929,0.124488,-8.854382,4.827553,-3.164157,-4.725217,-9.504357,-6.001357,7.120916,-9.095174,1.276673,6.066991,-4.341419,0.833900,-1.511408,-5.165811,-0.605228,3.647470,-5.324186,6.053514,-3.956667,7.873528,8.160306,-1.303822,-6.645153,6.987608,-5.988884,-4.292377,-1.767924,-3.030999,-7.846420,2.689147,-3.112784,6.665710,8.283480,1.116303,-2.608921,0.637935,8.537461,-1.801519,-2.110745,6.990951,7.032848,6.250534,7.540908,-7.536909,-7.706499,-8.744643,-3.576737,4.319750,-6.590018,6.296889,-3.271158,-0.192193,2.294359,1.410802,-7.087570,-9.193372,-7.372604,9.101113,4.907305,5.418728,7.126446,3.047998,-1.791829,4.588289,6.134850,6.154738,3.946272,2.373983,2.531878,-3.305886,8.371804,0.474002,3.048942,5.516298,-0.551391,-8.871320,-0.530336,-5.857879,3.215752,0.909992,-8.212526,-7.467911,-5.808390,-6.941709,-8.107005,1.305657,-9.863550,2.004974,6.732342,-6.626433,5.388078,4.977626,-8.427000,-4.779571,-3.607389,3.310282,5.349682,-1.326343,0.006651,5.869566,-1.473169,-6.854238,7.286559,-7.689802,-8.317867,-1.651601,8.656070,-9.075302,5.101424,4.473753], dtype = "float32")#candidate|7001|(480,)|const|float32
call_6999 = relay.TupleGetItem(func_3721_call(relay.reshape(var_7000.astype('float64'), [14, 13, 12]), relay.reshape(const_7001.astype('float32'), [480,]), ), 4)
call_7002 = relay.TupleGetItem(func_3725_call(relay.reshape(var_7000.astype('float64'), [14, 13, 12]), relay.reshape(const_7001.astype('float32'), [480,]), ), 4)
bop_7006 = relay.logical_or(bop_6985.astype('bool'), relay.reshape(var_6984.astype('bool'), relay.shape_of(bop_6985))) # shape=(7, 9, 15)
bop_7009 = relay.logical_or(bop_6988.astype('bool'), relay.reshape(var_6984.astype('bool'), relay.shape_of(bop_6988))) # shape=(7, 9, 15)
output = relay.Tuple([bop_6993,call_6999,var_7000,const_7001,bop_7006,])
output2 = relay.Tuple([bop_6996,call_7002,var_7000,const_7001,bop_7009,])
func_7010 = relay.Function([var_6984,var_7000,], output)
mod['func_7010'] = func_7010
mod = relay.transform.InferType()(mod)
mutated_mod['func_7010'] = func_7010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7010_call = mutated_mod.get_global_var('func_7010')
var_7012 = relay.var("var_7012", dtype = "float64", shape = (7, 9, 15))#candidate|7012|(7, 9, 15)|var|float64
var_7013 = relay.var("var_7013", dtype = "float64", shape = (2184,))#candidate|7013|(2184,)|var|float64
call_7011 = func_7010_call(var_7012,var_7013,)
output = call_7011
func_7014 = relay.Function([var_7012,var_7013,], output)
mutated_mod['func_7014'] = func_7014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4694_call = mod.get_global_var('func_4694')
func_4696_call = mutated_mod.get_global_var('func_4696')
call_7016 = relay.TupleGetItem(func_4694_call(), 0)
call_7017 = relay.TupleGetItem(func_4696_call(), 0)
output = relay.Tuple([call_7016,])
output2 = relay.Tuple([call_7017,])
func_7026 = relay.Function([], output)
mod['func_7026'] = func_7026
mod = relay.transform.InferType()(mod)
output = func_7026()
func_7027 = relay.Function([], output)
mutated_mod['func_7027'] = func_7027
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7039 = relay.var("var_7039", dtype = "float64", shape = (10, 12, 7))#candidate|7039|(10, 12, 7)|var|float64
uop_7040 = relay.cosh(var_7039.astype('float64')) # shape=(10, 12, 7)
func_5398_call = mod.get_global_var('func_5398')
func_5400_call = mutated_mod.get_global_var('func_5400')
call_7049 = relay.TupleGetItem(func_5398_call(), 0)
call_7050 = relay.TupleGetItem(func_5400_call(), 0)
uop_7063 = relay.sin(uop_7040.astype('float32')) # shape=(10, 12, 7)
bop_7066 = relay.bitwise_xor(var_7039.astype('int64'), relay.reshape(uop_7040.astype('int64'), relay.shape_of(var_7039))) # shape=(10, 12, 7)
func_4528_call = mod.get_global_var('func_4528')
func_4530_call = mutated_mod.get_global_var('func_4530')
call_7072 = relay.TupleGetItem(func_4528_call(), 0)
call_7073 = relay.TupleGetItem(func_4530_call(), 0)
func_4694_call = mod.get_global_var('func_4694')
func_4696_call = mutated_mod.get_global_var('func_4696')
call_7083 = relay.TupleGetItem(func_4694_call(), 0)
call_7084 = relay.TupleGetItem(func_4696_call(), 0)
func_190_call = mod.get_global_var('func_190')
func_193_call = mutated_mod.get_global_var('func_193')
var_7090 = relay.var("var_7090", dtype = "float32", shape = (180,))#candidate|7090|(180,)|var|float32
call_7089 = relay.TupleGetItem(func_190_call(relay.reshape(var_7090.astype('float32'), [5, 9, 4])), 0)
call_7091 = relay.TupleGetItem(func_193_call(relay.reshape(var_7090.astype('float32'), [5, 9, 4])), 0)
output = relay.Tuple([call_7049,uop_7063,bop_7066,call_7072,call_7083,call_7089,var_7090,])
output2 = relay.Tuple([call_7050,uop_7063,bop_7066,call_7073,call_7084,call_7091,var_7090,])
func_7104 = relay.Function([var_7039,var_7090,], output)
mod['func_7104'] = func_7104
mod = relay.transform.InferType()(mod)
var_7105 = relay.var("var_7105", dtype = "float64", shape = (10, 12, 7))#candidate|7105|(10, 12, 7)|var|float64
var_7106 = relay.var("var_7106", dtype = "float32", shape = (180,))#candidate|7106|(180,)|var|float32
output = func_7104(var_7105,var_7106,)
func_7107 = relay.Function([var_7105,var_7106,], output)
mutated_mod['func_7107'] = func_7107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6569_call = mod.get_global_var('func_6569')
func_6571_call = mutated_mod.get_global_var('func_6571')
call_7169 = relay.TupleGetItem(func_6569_call(), 0)
call_7170 = relay.TupleGetItem(func_6571_call(), 0)
func_5849_call = mod.get_global_var('func_5849')
func_5851_call = mutated_mod.get_global_var('func_5851')
call_7176 = relay.TupleGetItem(func_5849_call(), 1)
call_7177 = relay.TupleGetItem(func_5851_call(), 1)
output = relay.Tuple([call_7169,call_7176,])
output2 = relay.Tuple([call_7170,call_7177,])
func_7178 = relay.Function([], output)
mod['func_7178'] = func_7178
mod = relay.transform.InferType()(mod)
mutated_mod['func_7178'] = func_7178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7178_call = mutated_mod.get_global_var('func_7178')
call_7179 = func_7178_call()
output = call_7179
func_7180 = relay.Function([], output)
mutated_mod['func_7180'] = func_7180
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7275 = relay.var("var_7275", dtype = "int16", shape = ())#candidate|7275|()|var|int16
var_7276 = relay.var("var_7276", dtype = "int16", shape = (5, 11, 9))#candidate|7276|(5, 11, 9)|var|int16
bop_7277 = relay.bitwise_xor(var_7275.astype('int16'), var_7276.astype('int16')) # shape=(5, 11, 9)
output = relay.Tuple([bop_7277,])
output2 = relay.Tuple([bop_7277,])
func_7280 = relay.Function([var_7275,var_7276,], output)
mod['func_7280'] = func_7280
mod = relay.transform.InferType()(mod)
var_7281 = relay.var("var_7281", dtype = "int16", shape = ())#candidate|7281|()|var|int16
var_7282 = relay.var("var_7282", dtype = "int16", shape = (5, 11, 9))#candidate|7282|(5, 11, 9)|var|int16
output = func_7280(var_7281,var_7282,)
func_7283 = relay.Function([var_7281,var_7282,], output)
mutated_mod['func_7283'] = func_7283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5092_call = mod.get_global_var('func_5092')
func_5093_call = mutated_mod.get_global_var('func_5093')
call_7299 = func_5092_call()
call_7300 = func_5092_call()
func_2717_call = mod.get_global_var('func_2717')
func_2720_call = mutated_mod.get_global_var('func_2720')
var_7308 = relay.var("var_7308", dtype = "uint8", shape = ())#candidate|7308|()|var|uint8
const_7309 = relay.const([[-4,-9,-6,-5,-10,-4,9,-9,-3,-3,-5,7,-6,8,3,-4,9,-2,-2,7,-9,-4,8,-7,2,-1,-7,-3,-3,7,-1,5,-4,8,-5,-8,7,1,5,6,7,6,-8,-9,4,-9,6,-6,2,-6,10,-1,6,-4,-9,-2,-10,2,-9,-10,-6,-9,-4,3,-10,5,1,-1,-8,-9,7,-5,10,-6,-8,-2,-5,5,8,7,6,-10,-8,3,-5,-2,4,1,5,-2,4,-5,7,-8,9,2,7,-2,2,8,-8,2,-8,-3,-10,5,-9,3,-2,10,8,7,-4,10,-2,5,-1,-3,10,5,3,6,-2,-7,-1,8,-8,7,-1,10,-7,7,-10,10,-6,-1,-5,-10,-5,-1,-5,8,-3,-7,-1,-10,-10,8,-7,1,3,2,-9,5,1,-10,7,2,-10,6,4,10,3,5,8,3,9,9,10,-10,4,-9,-10,10,-10,1,-2,-9,1,-5,3,10,5,-8,5,-8,-1,-9,8,1,8,3,5,7,7,6,-9,-1,-8,-9,-8,2,-4,10,-2,9,3,10,-3,5,-8,-1,9,-1,-1,-10,7,-8,-2,-2,-9,4,4,-9]], dtype = "uint8")#candidate|7309|(1, 224)|const|uint8
call_7307 = func_2717_call(relay.reshape(var_7308.astype('uint8'), []), relay.reshape(const_7309.astype('uint8'), [16, 14, 1]), )
call_7310 = func_2717_call(relay.reshape(var_7308.astype('uint8'), []), relay.reshape(const_7309.astype('uint8'), [16, 14, 1]), )
bop_7320 = relay.left_shift(var_7308.astype('int8'), call_7307.astype('int8')) # shape=(16, 14, 1)
bop_7323 = relay.left_shift(var_7308.astype('int8'), call_7310.astype('int8')) # shape=(16, 14, 1)
func_3721_call = mod.get_global_var('func_3721')
func_3725_call = mutated_mod.get_global_var('func_3725')
const_7353 = relay.const([-2.513522,-2.711119,-7.002346,7.059804,0.692006,-3.616948,-6.677224,-9.728123,-4.618124,-2.770370,-3.294725,6.777002,-3.502666,-0.571437,6.840270,9.554756,8.359395,-2.827853,2.740308,3.702152,-1.461730,-7.824789,4.863044,0.784905,3.522831,7.544357,-0.334792,-6.392440,-2.238490,5.452231,-3.713885,4.129691,-5.850728,0.104364,0.859818,-9.930791,1.900310,2.309511,-2.873842,-8.526735,-3.674440,0.582485,-0.826186,8.924796,-5.374203,6.263779,9.716213,9.359023,-3.926907,2.401382,2.128506,1.459506,1.302475,8.522996,7.337324,0.386578,1.776507,1.693361,3.836335,3.931627,4.203315,-7.620249,1.425511,-1.368453,9.008383,-6.946645,3.373411,8.255472,-0.521443,-0.886925,-7.501130,4.474814,-1.185003,8.259890,-9.437491,-7.120826,1.564642,-4.349216,-4.692459,-7.982164,5.539299,-1.613169,-5.924438,1.742477,-5.471985,6.104118,3.075315,-6.101226,8.461817,0.501576,-5.684128,4.133749,6.694161,7.692795,-7.671371,2.383730,-3.061142,-2.472850,6.732799,9.921438,-3.502898,-5.263048,0.300396,7.915437,-2.419758,-5.790016,-2.889128,7.331012,-7.049892,4.553558,-0.043490,-2.667721,-5.783817,-0.011288,-9.913209,7.996797,-4.069244,-0.962328,3.754854,-9.732998,6.399098,-3.479598,-6.776355,1.768777,-9.436709,0.310071,6.259016,6.783030,-8.350024,6.249163,6.867708,8.674031,-3.582171,-9.294738,-4.333788,3.880503,3.812376,4.502875,8.282677,-1.720471,-9.204723,2.268455,9.156203,8.056088,-7.817584,-6.832162,-1.623224,7.568367,-1.116810,-2.621942,-7.341617,-7.094289,2.258453,8.551720,-6.305356,1.878078,1.583825,-0.352669,0.408875,-2.960911,-9.328473,-3.061222,9.892267,9.415394,2.055044,-1.300172,5.207358,5.550561,-7.276505,-5.372753,4.993728,0.588246,-0.830603,8.286681,-2.219028,5.232914,8.170324,0.224563,6.843095,-9.453989,-3.557827,-0.296318,3.976093,-3.917895,-1.267280,-8.090941,-5.937308,-0.681785,6.153474,0.767960,9.513107,-6.189687,-2.573488,8.274710,-4.975815,-5.419817,-5.273891,-7.134460,-3.565961,-0.459352,4.074750,-3.279792,-7.574566,-4.902183,5.412234,0.988340,-9.144045,0.418949,4.986222,-3.611922,-1.153180,-0.080658,2.306935,-9.397481,-0.494336,-1.074502,9.320256,0.598659,9.776419,9.452496,8.379646,-8.058904,-8.752333,-2.710983,-3.214928,8.236177,4.936539,-3.598286,-9.575379,2.706889,4.653666,2.740670,-8.024693,-5.454858,-5.888718,-5.540202,7.279447,-9.726455,-2.280776,5.708012,9.514958,1.315917,2.548647,-1.327647,-1.628834,-4.829001,4.479294,-0.245426,-9.310366,-6.248113,-5.994010,6.375886,1.017446,3.559709,-7.608027,-5.421600,7.931293,3.455345,6.167612,6.038721,6.087601,1.838681,2.618357,-8.961313,1.606658,-2.908064,-4.875397,6.080236,7.351934,4.600288,9.050737,-5.959623,-0.487965,9.097523,6.819738,3.022917,-5.314883,0.468630,3.171090,-8.186226,-9.331830,-3.888606,-6.257834,-4.504305,9.072815,4.447573,-1.224786,8.331927,0.115751,-7.564091,7.858142,0.105771,9.054131,6.094219,0.298227,4.923419,4.749230,-0.169253,5.548848,4.374358,-4.339725,7.105495,-7.259923,7.025876,-1.940855,-0.998072,-9.999265,1.073728,6.227746,-1.029617,-2.868334,-9.741368,1.296440,2.993546,-6.120198,6.749974,-3.674429,8.067766,-8.346847,-3.234968,-3.163788,-5.231145,1.425697,-0.883521,9.575582,9.792756,-5.071758,3.245668,-0.187324,-1.158995,3.581380,6.574172,4.717926,4.734309,-6.981387,-6.709753,-2.486221,2.098901,-3.063054,-9.759932,-1.803154,-6.576311,-8.664199,-9.783495,-0.025494,8.918180,6.296087,7.082362,3.745019,-4.901972,7.751344,-8.513590,8.195901,9.741388,-3.378448,9.257939,4.213241,1.360010,4.792953,-4.976987,7.496868,-3.496599,-6.020272,8.306938,-5.892436,6.310043,-5.884884,3.514970,8.567975,1.580067,5.032272,-3.655104,-6.193266,-0.455345,-6.789705,-4.226254,-2.968057,-6.277296,-6.270691,-1.828228,0.436748,-0.472521,8.355186,1.975719,-6.195477,-6.698356,-2.595684,-5.618258,5.915608,-0.703520,7.216873,4.208447,9.264278,9.200058,5.328891,-1.844169,3.515186,-3.818880,7.898238,-2.352809,-7.300187,9.732283,0.386408,-9.658891,-2.559155,-0.197813,7.739114,7.751953,6.262445,-6.355002,-0.328146,5.690384,-7.109261,-5.350106,-4.606238,8.218992,-0.745901,8.978513,1.837790,-4.688470,-3.424936,5.204281,-5.176854,0.005052,4.372673,-6.927524,-6.756016,-4.573956,5.627533,-8.681268,8.500494,-0.723647,-5.790891,9.575074,3.965509,2.840519,2.303714,0.668784,0.980026,5.803757,7.657792,-8.597168,-4.591880,-7.081433,-5.236170,7.958949,-5.564334,8.901098,2.334281,-5.391572,-1.979330,-3.659679,4.192929,9.840362,-5.474633,3.722744,-2.141172,-7.676637,-6.948868,-8.364310,6.186717,-3.723896,8.666004,9.101616,1.527144,-5.845499,6.048324,9.506249,-9.744949,-0.753510,3.651741,-9.527363,6.452858,-7.614734,3.088889,-9.532776,-1.401889,6.913648,-0.494038,-8.162399,-7.220064,6.112003,-2.691889,-1.037405,1.274157,5.265743,9.337615,-8.915663,-1.159991,-9.724545,4.808673,4.997798,-2.929231,-1.754450,1.146400,-3.552626,3.824684,6.735755,-5.675077,-1.741628,-9.175318,-8.840698,-0.544468,9.780405,-2.961780,-3.522402,-4.918720,1.859191,-8.068260,-6.922430,0.288699,-7.596619,-4.022156,-5.395558,5.325932,1.058001,-7.702102,2.885641,-9.824225,-2.953769,6.125360,3.960793,-6.726163,-7.115647,-7.381050,-1.770152,8.472759,-0.205384,-3.686351,-4.207548,4.924227,-7.900616,5.242705,-9.270087,-7.527521,-3.992689,-4.428087,1.708288,7.921190,1.642691,-5.425825,9.592636,-2.685434,-8.640907,-2.332985,7.265624,-1.219968,7.922444,4.228480,1.959188,-4.697773,2.852875,7.370384,6.007515,-6.567538,-0.926160,-4.647423,-7.647387,5.023191,-5.109380,4.665816,-7.537609,4.023950,-1.415565,9.599316,-3.521106,5.290068,-1.816827,-9.692302,3.830525,3.297253,-6.725774,6.873037,-5.071681,8.909728,-9.005884,-3.122780,-6.443889,6.500762,4.359327,-2.764386,-1.858572,4.842861,3.035244,4.380127,2.710472,-4.909421,-1.146228,-6.487777,8.103801,7.669420,4.271994,-4.250294,7.303970,-6.610257,-8.329427,-2.488475,-0.077808,-4.966163,-2.182824,8.082849,-1.976953,3.079909,2.859734,0.466344,8.633894,1.151150,7.844500,-0.864871,7.534089,9.740503,4.090461,-1.215574,5.205987,6.403376,-0.789751,3.979822,9.639109,-2.729409,9.053115,0.420635,-5.486833,7.562973,-3.320844,2.349701,-4.090768,0.563266,-5.169782,8.257463,-9.921327,2.452068,5.156324,4.503343,5.099575,-7.293682,-5.184260,0.054656,-0.646008,-2.483207,-6.775449,-8.751526,-4.232023,6.692797,9.674527,-1.916534,3.446225,7.477688,3.349137,0.378532,-1.019697,5.631883,9.965305,0.349015,2.753928,-9.656764,3.634553,-3.899421,3.912338,8.811845,-9.131669,-5.809782,0.216026,1.805951,4.864749,-3.779703,-8.821209,-5.930285,-6.226787,5.569733,3.873260,-1.175655,-6.479489,-9.321509,-0.446615,-6.053092,0.107712,-1.644541,-3.406927,0.555720,6.279228,0.526413,3.478444,1.513154,-0.307686,2.885657,5.653743,-6.966966,-2.013978,3.334714,-6.704169,-4.337331,-9.740288,9.959920,-9.245844,-6.346917,-4.826342,3.113438,4.971009,1.864174,6.047083,3.797659,-5.194760,-7.139150,-5.949588,7.608887,4.727399,7.668881,6.346446,4.638298,0.905316,7.811397,6.443502,-0.079454,6.609536,-0.776809,-2.935451,0.980351,-9.203973,-2.762308,0.413087,8.162803,6.177743,1.985413,1.160868,-4.768311,-5.533458,-3.705257,-2.387240,5.970613,4.683770,-3.006577,2.806825,-9.797781,5.331634,6.090361,6.689118,1.535122,8.195142,4.729816,5.677183,1.419123,2.607766,-7.781693,-4.842957,4.491665,1.135651,-2.278312,-1.304557,-7.079987,2.312647,-2.083958,1.453594,1.506687,-3.797021,4.579660,-1.259461,-1.914173,5.564396,9.719507,-7.683027,3.480944,-0.594153,-6.488863,-0.191645,-1.261096,-2.996472,-8.045120,-9.482724,-4.467906,-6.670706,6.791497,2.553469,-5.304784,-4.661862,-3.818368,3.794602,-0.980197,0.661461,-7.477200,-0.039078,4.245060,5.473632,-9.232720,7.615399,4.718137,-0.680269,-1.446899,-5.895780,-4.742266,-4.174550,4.431179,-9.163881,9.366098,-1.840027,-1.872628,-7.153421,-6.029758,4.288118,-6.129481,8.368004,6.218654,-3.306063,2.824375,-7.148393,4.202412,9.848711,-4.827299,-5.705193,9.807534,7.204110,0.596608,-0.373564,-5.838066,-5.790413,-1.639938,-4.989737,-4.299160,-4.004385,4.493716,5.199946,9.436400,6.059307,9.235252,-6.842140,-3.524647,-2.479498,6.386985,3.723223,-8.815666,-1.237572,-3.895210,-3.881837,4.539632,-8.840451,-9.989483,8.753240,-9.339283,3.524341,6.955291,6.065101,-5.736481,6.239672,-7.888289,5.394783,8.696445,4.935067,-2.686912,-7.115736,-7.107551,-9.062726,-7.084159,2.615059,-9.483865,-3.713347,-8.427533,0.508739,9.574589,-5.517986,-5.854829,7.605589,-4.467997,7.050581,-2.649979,-2.126285,-5.303243,9.142307,6.456813,-7.735562,-2.184700,5.428505,-1.032924,4.101449,7.964357,5.880406,5.481634,2.441907,7.360682,-3.168107,-4.189983,1.554061,7.735314,-4.022884,3.504155,-1.386380,9.120624,-2.955918,-5.907949,-2.413649,8.413194,6.331100,-9.544907,-5.964434,1.501928,4.694566,-8.709828,2.431026,-1.024455,-7.515581,-3.439841,9.678005,-0.899210,7.703235,5.597760,-4.571476,6.464493,1.560150,8.049875,4.316988,-6.076523,-6.066209,0.861770,-0.066482,4.222446,0.919087,5.616603,-8.709804,-8.728001,-8.923199,3.906508,7.953653,4.628611,-4.532501,-5.263352,3.754900,-0.620129,7.220105,1.017271,9.626371,-5.872594,-7.966343,9.556881,4.161321,-2.277702,4.306394,3.018409,-6.411177,5.102114,7.665307,3.254777,-1.474721,-3.828903,7.070629,5.958143,9.254753,-3.157080,1.824608,-8.997577,6.704733,4.099325,-7.628969,4.931053,2.750589,7.396863,1.539760,6.797615,-4.042631,1.680837,-7.399413,9.348120,8.324615,2.117363,4.749482,8.764379,2.722344,-7.667320,4.964413,-4.010475,-0.558360,2.289941,-0.177826,-1.212215,2.498526,8.295125,-2.961628,2.806769,-9.882817,0.381556,-5.285466,-3.559663,8.914083,4.511913,0.426973,0.049218,9.877918,5.358272,3.845858,-8.069439,5.555081,-3.067467,-2.197223,3.537843,6.062551,0.387544,-3.253504,8.231412,-2.443731,-6.718547,-3.661891,1.048429,7.839315,-1.006043,-2.781720,1.289123,-4.753524,-9.183169,2.220333,3.998449,-8.251824,-8.793081,-4.971432,-3.702023,-7.511759,-1.432417,-1.580164,-2.449774,-0.508333,-9.425076,6.312983,7.622249,-7.761268,8.154391,9.620138,-2.009305,1.352091,-5.699470,-2.499802,-2.868441,-7.113662,5.982047,-3.275130,-3.458260,-5.326989,-0.340738,-4.804907,0.223644,9.341323,-4.936537,5.382524,-7.220896,5.861410,1.272956,2.667092,-1.795253,-7.173880,-2.982843,8.959495,-1.616341,8.363651,2.112248,-4.549582,-8.544621,9.152036,-0.843405,5.131352,2.239241,-1.448483,-1.586285,-1.016292,0.931439,9.685640,-7.433952,-9.326843,-8.298519,2.233022,6.650304,4.944447,8.849157,-9.655215,8.865595,-9.447541,-8.261592,3.279257,-9.311134,5.931070,5.918819,4.593291,3.832462,-7.356790,0.083317,3.587581,2.514034,9.810058,-4.174916,-4.669682,8.970363,-2.251932,0.690394,1.304073,-8.692926,4.411858,5.117901,4.727861,-5.723955,-4.151791,0.395458,-8.902452,-2.517443,4.097630,5.899115,4.662746,-6.182299,-9.411965,8.326833,2.919745,-6.064785,5.454266,4.918998,-3.206612,-7.980659,5.054746,8.737037,-4.848800,9.982301,-4.612970,-2.629356,-3.275200,2.560004,-1.090365,-4.229374,-2.840271,3.186933,-5.020058,-4.203209,-0.633556,1.264387,-6.474864,-6.085084,3.727975,-0.258514,-6.968898,9.329752,9.027076,-6.108717,6.510557,6.627284,4.710219,-9.017008,5.681808,9.630062,3.298777,-5.877738,0.086754,7.403133,-9.444158,-0.641292,-5.101042,2.052637,-7.571847,9.580073,-3.104929,-1.530059,7.174346,2.428026,9.221115,1.009010,-2.492053,9.004580,-9.804940,-7.517223,-0.953066,5.980277,-8.351780,6.194328,-5.484684,-7.506606,0.875704,1.270825,2.121683,-4.403301,3.186439,-3.995634,4.785320,5.308127,-8.226196,-9.434852,-2.424202,2.062850,6.595310,3.811746,9.675871,-5.011571,-1.893289,-8.986780,0.536349,3.934356,-6.397896,-4.573636,5.526577,2.951120,1.168529,-8.450053,6.661224,-1.020504,-0.236191,1.247782,9.304637,0.649049,5.146590,-4.141604,-3.378848,1.462914,8.007222,-4.811829,7.948431,-1.773060,6.038126,-1.717701,-5.631525,2.714796,-0.165751,-1.671329,5.425348,-7.453794,4.934516,3.604588,-6.117980,-9.511777,-0.839547,-3.725244,-7.222170,-7.535552,5.772202,3.285597,7.856739,6.308565,1.510980,7.378210,5.667917,2.289434,-3.539767,-6.981514,7.862237,-6.821176,6.248628,6.880694,1.418242,7.341407,-9.017788,-5.307593,-4.510522,0.717725,-8.300892,-1.139251,-8.251874,-1.826786,-3.815753,3.655322,-5.072252,9.851931,-3.469572,1.581325,-6.050546,7.818750,7.024129,-1.817381,5.190296,4.875920,-5.656034,0.414814,0.333485,-9.362819,-9.673839,6.802351,4.765998,-7.400591,4.920442,-5.235875,-4.484163,-7.260378,2.305384,0.136659,5.145892,-1.636995,-3.550724,-5.113987,-7.400390,1.913891,8.485883,0.778097,8.350047,-3.819425,1.336483,-9.305898,-2.906422,-4.495476,5.373345,-0.207355,-4.571223,5.289749,-6.285606,2.699596,-0.105758,1.337792,9.277800,-3.940537,-8.525017,-8.958261,7.581282,-1.246252,4.963054,-5.853898,-2.284172,9.509345,8.503027,-1.824010,2.184664,-8.518010,-1.077913,6.155559,-6.549519,6.880029,-4.988404,0.783017,-9.072880,-4.073971,-4.520337,2.177406,2.766384,0.619727,8.901736,8.080513,8.886988,-8.063365,0.777393,-1.442775,7.642764,7.441004,7.385941,-9.051393,-6.318294,5.925773,0.136715,7.172583,-4.689353,6.349860,-7.801195,-2.104856,1.113302,-5.038148,-9.789866,-0.733734,-9.245820,0.660394,-6.587514,1.371817,-4.391212,5.877924,8.446317,0.805770,-7.391952,4.494922,0.318482,-4.732937,-2.609694,4.497688,2.955301,1.981686,1.060191,0.502750,-1.590869,-3.188631,-4.951017,-6.741507,4.564915,2.726631,-3.273183,-4.126939,-2.854400,-6.445350,8.938216,0.115080,-9.299687,-7.760438,5.546308,6.921386,4.982398,8.989372,-8.112361,9.516245,5.160662,4.427230,-2.852271,7.664429,-3.541887,1.532664,7.282398,9.069155,2.170757,-5.599695,1.103914,-5.929580,9.534011,-5.862482,1.893028,5.090790,-8.526279,9.490844,8.024068,7.973679,-7.012835,9.402388,4.727147,8.241495,5.420929,-5.547144,-7.510677,6.436920,-2.647742,0.667259,8.312699,-7.454626,7.871746,-6.628573,-1.173806,-9.559625,3.964200,-0.729577,-1.080026,9.695567,4.014942,4.425903,1.668801,-3.691604,-9.058120,0.587858,-9.357060,-9.808928,3.203911,-0.204182,-4.335258,9.798734,9.402197,8.824201,8.930434,3.720698,-1.498770,-3.934901,4.196791,4.251356,-6.559047,1.123010,-7.103284,-6.325500,3.981379,1.329602,-8.603299,5.794307,-7.498456,1.080854,1.076278,8.700132,6.368534,2.365176,-8.527763,7.754441,-1.891718,4.354287,-1.438461,-7.144437,2.205631,4.054006,-3.171853,9.273730,1.971798,8.369189,7.310687,-5.362037,-3.530516,9.307722,-5.687138,-9.541082,0.476883,4.483389,5.953718,5.393510,3.141295,-1.331647,6.116481,0.685084,0.664910,-1.064005,9.154097,2.450897,-3.849210,-1.784715,7.094628,4.103004,-6.953034,-9.985225,6.859569,-8.408677,9.050718,-8.309143,-5.922888,2.219869,-5.064511,-2.818827,0.635630,-2.929108,-9.895771,-4.533632,7.073425,9.765239,8.933781,6.274320,4.953823,8.643468,3.300432,-8.387806,4.337977,9.264907,7.263468,5.316249,9.740174,-6.037732,-8.572725,-5.805502,0.629748,-9.247897,3.545881,5.027501,4.566465,8.368082,-2.008112,3.150369,-3.333603,-1.426229,-9.093507,-1.227380,3.701954,-9.990104,1.317824,0.677605,-2.837370,9.778420,8.950911,-1.872810,-6.885004,7.156666,8.355936,-4.217133,3.372718,3.029482,8.610624,-1.304105,6.843452,-9.845780,8.219679,8.738962,1.526116,1.717887,7.437605,-9.419905,-8.818896,-3.244145,-6.219077,3.238210,7.997733,0.439858,-6.235656,5.213938,-2.328688,-8.758956,4.330003,3.735886,1.331709,-8.382756,3.021557,-9.284988,-5.523514,9.056182,6.384762,5.075552,-6.852517,2.857397,-0.607916,-1.984289,3.040267,-7.294625,-7.425485,8.949742,-2.733831,-7.711426,-1.116674,0.606366,0.890906,8.197110,2.331957,-9.275183,-1.378858,-8.656253,-6.129824,4.879450,-0.263907,7.657209,-9.500738,-9.873175,-3.886659,-3.921467,6.840742,0.647326,-6.637780,8.676805,7.246803,8.434535,-4.774617,-6.315108,-4.031021,-4.075889,8.783651,1.744546,-3.371246,5.604761,-0.098350,-7.146914,5.686469,9.639581,-1.560640,-8.433001,-3.534991,8.638724,6.552115,4.936922,-6.903069,-6.639375,9.175190,8.516625,2.951152,-6.351188,-3.500376,6.427322,9.151375,7.177982,-0.466320,8.054703,-7.996324,3.443547,7.734809,9.889592,-0.423063,3.810407,-3.014449,6.901494,0.922910,7.094121,-4.006852,-7.009764,9.128016,-9.349602,5.479975,-3.403582,-1.146178,0.272724,9.501546,6.217960,7.739105,7.491121,2.379401,0.829460,2.014558,-3.173217,-3.061561,4.773566,5.422772,8.312522,4.289130,-6.762980,2.380742,1.449862,-8.642405,-8.020875,-9.471314,7.961292,-6.266618,-6.543222,-8.496050,-0.826495,0.716559,-4.046106,7.823109,0.970718,-2.564405,-2.146028,-1.515385,-5.194821,5.070794,-0.294071,-6.758144,8.080533,-2.815645,-7.132588,7.973842,4.777845,-3.404757,4.068456,2.137027,4.899923,-1.770481,0.616095,6.551150,8.917916,-0.550501,-9.768646,-8.561828,-7.701417,-3.133256,9.699222,8.438885,-2.339689,-2.754597,2.954426,6.391313,9.539023,-8.931407,-0.178677,-3.943590,-6.164972,4.820086,-3.299585,1.970048,-6.379182,9.801585,7.615530,6.323077,9.398830,5.315083,7.341820,2.966945,-6.836788,-9.100630,5.515765,-4.083499,6.300507,0.760436,2.289749,-7.203481,-2.783290,9.995245,-9.478576,3.428860,7.583954,-2.692763,8.740953,0.576002,-2.243187,-8.372348,0.071183,9.990223,-5.750087,-8.245303,5.882777,-0.265324,-8.907974,3.278969,-4.735524,-4.747733,5.822510,-7.216140,-5.460343,-4.022389,5.242919,2.814424,-5.083911,-0.165314,9.910307,-7.338895,6.934628,-3.673865,5.381377,6.770077,-4.572827,8.732103,-3.518116,2.373912,4.443482,2.549932,-6.129792,8.307633,-2.264095,-5.406085,-6.188357,-9.601436,1.595900,-1.945684,5.527102,-4.631726,0.985775,5.292027,9.066470,1.915702,4.318721,-0.983306,7.345006,-3.573271,5.604002,0.028916,8.401628,4.097577,-0.850151,2.102412,6.207537,9.419234,6.348442,5.417856,4.119400,-2.635828,1.818498,9.046235,-3.138057,-0.871698,-5.114500,-9.589066,-4.339018,-5.227244,3.748481,-7.712687,9.890112,3.688997,-6.645807,3.321999,0.540850,-1.448741,-2.120503,0.418058,7.418909,-4.146019,1.013287,-1.879755,8.090757,-6.457012,-8.628246,1.486143,8.886674,0.194091,9.981485,1.686645,-2.393004,-2.742257,6.754201,3.296297,5.063726,-0.891769,-8.718266,-9.517485,1.457465,-8.927423,2.008116,1.124542,4.896495,6.161394,-3.301893,4.104264,-6.051306,2.670727,-0.046254,8.466161,4.902935,-5.623304,-9.138720,8.311416,-4.872032,1.967336,5.327790,-3.972302,2.445283,-2.533359,-7.666823,-7.915905,7.056469,6.607596,6.920745,8.894077,-5.546083,-5.492934,0.599010,8.561431,-5.989142,0.485406,3.327686,-0.611845,0.293460,-9.543624,-3.832220,3.501993,5.962461,9.977992,7.587182,0.350652,9.440951,-5.602527,1.246436,-7.837964,-6.943069,8.943176,7.458250,1.347939,-3.832948,-6.729928,-2.173987,-0.504116,-0.296839,-9.817764,2.269079,-4.377734,-5.380190,2.199894,-2.524975,9.951981,9.494395,-8.434654,-3.026991,-4.419381,-0.180648,5.780019,-1.158707,-9.856589,-0.487882,-1.540960,-3.707220,-5.921478,8.832237,-9.167755,3.428615,-0.038841,-4.372110,9.434741,-7.185355,-0.415669,-1.261339,-6.210765,4.715076,-5.914511,7.943607,3.814419,1.686414,-4.711094,1.444704,-1.849611,-9.119473,-4.477085,6.891512,2.914496,3.187584,-0.500004,-6.862150,-9.108119,4.842064,1.909077,6.348896,-4.559616,-5.539063,0.469192,4.615935,-9.985004,-5.832559,3.164899,-7.056570,-4.497457,-7.263606,8.520823,9.491410,-2.511346,-7.378107,4.699949,4.793283,-5.685868,1.451648,0.068686,2.387611,-7.612746,-3.101739,-0.378685,5.924695,-9.917700,5.492701,-3.900040,5.588137,-9.915871,-0.452826,6.291219,6.114565,2.607572,1.591570,-1.192683,-8.108039,9.425475,-8.255633,0.454515,-0.224979,0.101684,7.221964,-0.623515,-4.412112,2.415871,-0.624815,-6.371187,-4.823964,-3.919745,4.217822,8.490513,-5.145328,-0.905285,-6.828271,-5.941778,-1.931375,-9.841312,8.134128,-0.399894,1.845459,-1.829084,7.233973,-6.867382,-6.743498,8.610730,9.188330,7.855683,3.507405,-7.691207,1.152692,-0.654390,-6.765604,1.938770,6.098271,2.993246,9.896700,2.459497,2.091003,7.238424,-0.352669,2.117644,8.871011,8.941328,-4.543458,-5.345481,-9.179829,1.594789,5.805918,-3.852156,7.930107,-2.062918,2.634498,0.136804,8.246400,-9.734153,5.704951,5.502970,-4.797390,-9.987196,-2.665731,-1.830039,9.750099,1.318390,9.918263,-7.124398,1.575527,6.855963,-4.219208,9.468633,6.994553,8.510556,4.313731,0.905214,-2.483200,2.474360,-0.680139,7.142671,0.989828,8.301678,9.907593,4.422413,-3.606102,8.717558,5.735547,-2.794217,2.528490,-3.754820,-5.906496,-0.809488,8.731106,7.604175,-8.429356,0.788188,2.527260,-2.429351,-8.620078,8.348779,-0.028062,6.918061,-8.023319,6.365941,-6.607821,-8.321493,1.415606,7.118945,-2.606665,4.447396,1.621152,0.583205,5.836627,9.099196,5.774821,-0.831854,-5.949771,-0.501743,6.177110,-0.982870,9.777523,-3.164414,9.825367,1.423054,-3.569998,-3.738929,4.377410,-4.813241,8.375541,1.964342,-5.961273,3.528618,2.613351,1.859917,7.273815,-1.426320,5.329186,1.976617,-7.783796,-2.282830,9.086865,5.023542,-7.965830,1.197330,5.444280,1.611919,-1.782910,-2.428072,-1.397171,-9.099694,8.774200,-5.990527,2.299184,-2.563096,-5.490556,-5.565744,2.003709,-5.916807,4.079638,-5.002351,-3.066837,4.824347,-9.501426,5.986717,5.370788,-6.594731,-1.365597,0.822806,-8.213520,-2.322216,0.708718,1.486121,-1.279722,-6.707434,3.811349,-5.789679,-0.649009,1.984968,-1.752621,2.167922,-4.620742,-6.516764,-6.908805,0.688101,9.862579,5.760997,-2.120171,-2.545832,8.172622,7.790585,5.701832,-2.725787,3.791273,-5.254868,-0.969498,8.084901,6.474282,-8.615418], dtype = "float64")#candidate|7353|(2184,)|const|float64
var_7354 = relay.var("var_7354", dtype = "float32", shape = (40, 12))#candidate|7354|(40, 12)|var|float32
call_7352 = relay.TupleGetItem(func_3721_call(relay.reshape(const_7353.astype('float64'), [14, 13, 12]), relay.reshape(var_7354.astype('float32'), [480,]), ), 1)
call_7355 = relay.TupleGetItem(func_3725_call(relay.reshape(const_7353.astype('float64'), [14, 13, 12]), relay.reshape(var_7354.astype('float32'), [480,]), ), 1)
func_6691_call = mod.get_global_var('func_6691')
func_6693_call = mutated_mod.get_global_var('func_6693')
call_7358 = relay.TupleGetItem(func_6691_call(relay.reshape(call_7299.astype('float32'), [7, 9, 15])), 0)
call_7359 = relay.TupleGetItem(func_6693_call(relay.reshape(call_7299.astype('float32'), [7, 9, 15])), 0)
var_7372 = relay.var("var_7372", dtype = "float32", shape = (40, 12))#candidate|7372|(40, 12)|var|float32
bop_7373 = relay.bitwise_xor(var_7354.astype('uint64'), relay.reshape(var_7372.astype('uint64'), relay.shape_of(var_7354))) # shape=(40, 12)
func_6569_call = mod.get_global_var('func_6569')
func_6571_call = mutated_mod.get_global_var('func_6571')
call_7382 = relay.TupleGetItem(func_6569_call(), 0)
call_7383 = relay.TupleGetItem(func_6571_call(), 0)
uop_7387 = relay.atan(const_7353.astype('float32')) # shape=(2184,)
output = relay.Tuple([call_7299,const_7309,bop_7320,call_7352,call_7358,bop_7373,call_7382,uop_7387,])
output2 = relay.Tuple([call_7300,const_7309,bop_7323,call_7355,call_7359,bop_7373,call_7383,uop_7387,])
func_7389 = relay.Function([var_7308,var_7354,var_7372,], output)
mod['func_7389'] = func_7389
mod = relay.transform.InferType()(mod)
mutated_mod['func_7389'] = func_7389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7389_call = mutated_mod.get_global_var('func_7389')
var_7391 = relay.var("var_7391", dtype = "uint8", shape = ())#candidate|7391|()|var|uint8
var_7392 = relay.var("var_7392", dtype = "float32", shape = (40, 12))#candidate|7392|(40, 12)|var|float32
var_7393 = relay.var("var_7393", dtype = "float32", shape = (40, 12))#candidate|7393|(40, 12)|var|float32
call_7390 = func_7389_call(var_7391,var_7392,var_7393,)
output = call_7390
func_7394 = relay.Function([var_7391,var_7392,var_7393,], output)
mutated_mod['func_7394'] = func_7394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6592_call = mod.get_global_var('func_6592')
func_6593_call = mutated_mod.get_global_var('func_6593')
call_7398 = relay.TupleGetItem(func_6592_call(), 0)
call_7399 = relay.TupleGetItem(func_6593_call(), 0)
output = call_7398
output2 = call_7399
func_7406 = relay.Function([], output)
mod['func_7406'] = func_7406
mod = relay.transform.InferType()(mod)
mutated_mod['func_7406'] = func_7406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7406_call = mutated_mod.get_global_var('func_7406')
call_7407 = func_7406_call()
output = call_7407
func_7408 = relay.Function([], output)
mutated_mod['func_7408'] = func_7408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4538_call = mod.get_global_var('func_4538')
func_4539_call = mutated_mod.get_global_var('func_4539')
call_7432 = relay.TupleGetItem(func_4538_call(), 0)
call_7433 = relay.TupleGetItem(func_4539_call(), 0)
var_7436 = relay.var("var_7436", dtype = "float64", shape = (945,))#candidate|7436|(945,)|var|float64
bop_7437 = relay.add(call_7432.astype('int8'), relay.reshape(var_7436.astype('int8'), relay.shape_of(call_7432))) # shape=(945,)
bop_7440 = relay.add(call_7433.astype('int8'), relay.reshape(var_7436.astype('int8'), relay.shape_of(call_7433))) # shape=(945,)
func_4528_call = mod.get_global_var('func_4528')
func_4530_call = mutated_mod.get_global_var('func_4530')
call_7444 = relay.TupleGetItem(func_4528_call(), 1)
call_7445 = relay.TupleGetItem(func_4530_call(), 1)
uop_7458 = relay.asin(call_7432.astype('float32')) # shape=(945,)
uop_7460 = relay.asin(call_7433.astype('float32')) # shape=(945,)
output = relay.Tuple([bop_7437,call_7444,uop_7458,])
output2 = relay.Tuple([bop_7440,call_7445,uop_7460,])
func_7464 = relay.Function([var_7436,], output)
mod['func_7464'] = func_7464
mod = relay.transform.InferType()(mod)
mutated_mod['func_7464'] = func_7464
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7465 = relay.var("var_7465", dtype = "float64", shape = (945,))#candidate|7465|(945,)|var|float64
func_7464_call = mutated_mod.get_global_var('func_7464')
call_7466 = func_7464_call(var_7465)
output = call_7466
func_7467 = relay.Function([var_7465], output)
mutated_mod['func_7467'] = func_7467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6132_call = mod.get_global_var('func_6132')
func_6133_call = mutated_mod.get_global_var('func_6133')
call_7493 = relay.TupleGetItem(func_6132_call(), 0)
call_7494 = relay.TupleGetItem(func_6133_call(), 0)
func_4853_call = mod.get_global_var('func_4853')
func_4855_call = mutated_mod.get_global_var('func_4855')
var_7511 = relay.var("var_7511", dtype = "float32", shape = (288, 1))#candidate|7511|(288, 1)|var|float32
call_7510 = relay.TupleGetItem(func_4853_call(relay.reshape(var_7511.astype('float32'), [3, 8, 12])), 0)
call_7512 = relay.TupleGetItem(func_4855_call(relay.reshape(var_7511.astype('float32'), [3, 8, 12])), 0)
func_6759_call = mod.get_global_var('func_6759')
func_6761_call = mutated_mod.get_global_var('func_6761')
call_7514 = relay.TupleGetItem(func_6759_call(relay.reshape(call_7493.astype('float64'), [945,])), 1)
call_7515 = relay.TupleGetItem(func_6761_call(relay.reshape(call_7493.astype('float64'), [945,])), 1)
output = relay.Tuple([call_7493,call_7510,var_7511,call_7514,])
output2 = relay.Tuple([call_7494,call_7512,var_7511,call_7515,])
func_7523 = relay.Function([var_7511,], output)
mod['func_7523'] = func_7523
mod = relay.transform.InferType()(mod)
mutated_mod['func_7523'] = func_7523
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7524 = relay.var("var_7524", dtype = "float32", shape = (288, 1))#candidate|7524|(288, 1)|var|float32
func_7523_call = mutated_mod.get_global_var('func_7523')
call_7525 = func_7523_call(var_7524)
output = call_7525
func_7526 = relay.Function([var_7524], output)
mutated_mod['func_7526'] = func_7526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6132_call = mod.get_global_var('func_6132')
func_6133_call = mutated_mod.get_global_var('func_6133')
call_7658 = relay.TupleGetItem(func_6132_call(), 0)
call_7659 = relay.TupleGetItem(func_6133_call(), 0)
output = call_7658
output2 = call_7659
func_7661 = relay.Function([], output)
mod['func_7661'] = func_7661
mod = relay.transform.InferType()(mod)
mutated_mod['func_7661'] = func_7661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7661_call = mutated_mod.get_global_var('func_7661')
call_7662 = func_7661_call()
output = call_7662
func_7663 = relay.Function([], output)
mutated_mod['func_7663'] = func_7663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4960_call = mod.get_global_var('func_4960')
func_4961_call = mutated_mod.get_global_var('func_4961')
call_7668 = relay.TupleGetItem(func_4960_call(), 0)
call_7669 = relay.TupleGetItem(func_4961_call(), 0)
output = relay.Tuple([call_7668,])
output2 = relay.Tuple([call_7669,])
func_7671 = relay.Function([], output)
mod['func_7671'] = func_7671
mod = relay.transform.InferType()(mod)
mutated_mod['func_7671'] = func_7671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7671_call = mutated_mod.get_global_var('func_7671')
call_7672 = func_7671_call()
output = call_7672
func_7673 = relay.Function([], output)
mutated_mod['func_7673'] = func_7673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4435_call = mod.get_global_var('func_4435')
func_4437_call = mutated_mod.get_global_var('func_4437')
call_7677 = func_4435_call()
call_7678 = func_4435_call()
output = call_7677
output2 = call_7678
func_7691 = relay.Function([], output)
mod['func_7691'] = func_7691
mod = relay.transform.InferType()(mod)
mutated_mod['func_7691'] = func_7691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7691_call = mutated_mod.get_global_var('func_7691')
call_7692 = func_7691_call()
output = call_7692
func_7693 = relay.Function([], output)
mutated_mod['func_7693'] = func_7693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7026_call = mod.get_global_var('func_7026')
func_7027_call = mutated_mod.get_global_var('func_7027')
call_7702 = relay.TupleGetItem(func_7026_call(), 0)
call_7703 = relay.TupleGetItem(func_7027_call(), 0)
func_6550_call = mod.get_global_var('func_6550')
func_6552_call = mutated_mod.get_global_var('func_6552')
call_7710 = func_6550_call()
call_7711 = func_6550_call()
output = relay.Tuple([call_7702,call_7710,])
output2 = relay.Tuple([call_7703,call_7711,])
func_7713 = relay.Function([], output)
mod['func_7713'] = func_7713
mod = relay.transform.InferType()(mod)
mutated_mod['func_7713'] = func_7713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7713_call = mutated_mod.get_global_var('func_7713')
call_7714 = func_7713_call()
output = call_7714
func_7715 = relay.Function([], output)
mutated_mod['func_7715'] = func_7715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4435_call = mod.get_global_var('func_4435')
func_4437_call = mutated_mod.get_global_var('func_4437')
call_7742 = func_4435_call()
call_7743 = func_4435_call()
var_7772 = relay.var("var_7772", dtype = "float64", shape = (945,))#candidate|7772|(945,)|var|float64
bop_7773 = relay.maximum(call_7742.astype('int32'), relay.reshape(var_7772.astype('int32'), relay.shape_of(call_7742))) # shape=(945,)
bop_7776 = relay.maximum(call_7743.astype('int32'), relay.reshape(var_7772.astype('int32'), relay.shape_of(call_7743))) # shape=(945,)
func_7464_call = mod.get_global_var('func_7464')
func_7467_call = mutated_mod.get_global_var('func_7467')
call_7779 = relay.TupleGetItem(func_7464_call(relay.reshape(bop_7773.astype('float64'), [945,])), 1)
call_7780 = relay.TupleGetItem(func_7467_call(relay.reshape(bop_7773.astype('float64'), [945,])), 1)
output = relay.Tuple([bop_7773,call_7779,])
output2 = relay.Tuple([bop_7776,call_7780,])
func_7787 = relay.Function([var_7772,], output)
mod['func_7787'] = func_7787
mod = relay.transform.InferType()(mod)
mutated_mod['func_7787'] = func_7787
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7788 = relay.var("var_7788", dtype = "float64", shape = (945,))#candidate|7788|(945,)|var|float64
func_7787_call = mutated_mod.get_global_var('func_7787')
call_7789 = func_7787_call(var_7788)
output = call_7789
func_7790 = relay.Function([var_7788], output)
mutated_mod['func_7790'] = func_7790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5742_call = mod.get_global_var('func_5742')
func_5744_call = mutated_mod.get_global_var('func_5744')
call_7803 = relay.TupleGetItem(func_5742_call(), 0)
call_7804 = relay.TupleGetItem(func_5744_call(), 0)
var_7807 = relay.var("var_7807", dtype = "float64", shape = (945,))#candidate|7807|(945,)|var|float64
bop_7808 = relay.less_equal(call_7803.astype('bool'), relay.reshape(var_7807.astype('bool'), relay.shape_of(call_7803))) # shape=(945,)
bop_7811 = relay.less_equal(call_7804.astype('bool'), relay.reshape(var_7807.astype('bool'), relay.shape_of(call_7804))) # shape=(945,)
func_7406_call = mod.get_global_var('func_7406')
func_7408_call = mutated_mod.get_global_var('func_7408')
call_7815 = func_7406_call()
call_7816 = func_7406_call()
output = relay.Tuple([bop_7808,call_7815,])
output2 = relay.Tuple([bop_7811,call_7816,])
func_7819 = relay.Function([var_7807,], output)
mod['func_7819'] = func_7819
mod = relay.transform.InferType()(mod)
mutated_mod['func_7819'] = func_7819
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7820 = relay.var("var_7820", dtype = "float64", shape = (945,))#candidate|7820|(945,)|var|float64
func_7819_call = mutated_mod.get_global_var('func_7819')
call_7821 = func_7819_call(var_7820)
output = call_7821
func_7822 = relay.Function([var_7820], output)
mutated_mod['func_7822'] = func_7822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4313_call = mod.get_global_var('func_4313')
func_4315_call = mutated_mod.get_global_var('func_4315')
call_7844 = relay.TupleGetItem(func_4313_call(), 1)
call_7845 = relay.TupleGetItem(func_4315_call(), 1)
func_6542_call = mod.get_global_var('func_6542')
func_6543_call = mutated_mod.get_global_var('func_6543')
call_7854 = relay.TupleGetItem(func_6542_call(), 1)
call_7855 = relay.TupleGetItem(func_6543_call(), 1)
uop_7870 = relay.sinh(call_7844.astype('float32')) # shape=(7, 9, 15)
uop_7872 = relay.sinh(call_7845.astype('float32')) # shape=(7, 9, 15)
func_5742_call = mod.get_global_var('func_5742')
func_5744_call = mutated_mod.get_global_var('func_5744')
call_7877 = relay.TupleGetItem(func_5742_call(), 1)
call_7878 = relay.TupleGetItem(func_5744_call(), 1)
func_5092_call = mod.get_global_var('func_5092')
func_5093_call = mutated_mod.get_global_var('func_5093')
call_7890 = func_5092_call()
call_7891 = func_5092_call()
func_5632_call = mod.get_global_var('func_5632')
func_5634_call = mutated_mod.get_global_var('func_5634')
call_7898 = relay.TupleGetItem(func_5632_call(), 1)
call_7899 = relay.TupleGetItem(func_5634_call(), 1)
uop_7904 = relay.asinh(uop_7870.astype('float64')) # shape=(7, 9, 15)
uop_7906 = relay.asinh(uop_7872.astype('float64')) # shape=(7, 9, 15)
func_6759_call = mod.get_global_var('func_6759')
func_6761_call = mutated_mod.get_global_var('func_6761')
call_7911 = relay.TupleGetItem(func_6759_call(relay.reshape(call_7877.astype('float64'), [945,])), 0)
call_7912 = relay.TupleGetItem(func_6761_call(relay.reshape(call_7877.astype('float64'), [945,])), 0)
output = relay.Tuple([call_7854,call_7877,call_7890,call_7898,uop_7904,call_7911,])
output2 = relay.Tuple([call_7855,call_7878,call_7891,call_7899,uop_7906,call_7912,])
func_7923 = relay.Function([], output)
mod['func_7923'] = func_7923
mod = relay.transform.InferType()(mod)
mutated_mod['func_7923'] = func_7923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7923_call = mutated_mod.get_global_var('func_7923')
call_7924 = func_7923_call()
output = call_7924
func_7925 = relay.Function([], output)
mutated_mod['func_7925'] = func_7925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6592_call = mod.get_global_var('func_6592')
func_6593_call = mutated_mod.get_global_var('func_6593')
call_7971 = relay.TupleGetItem(func_6592_call(), 0)
call_7972 = relay.TupleGetItem(func_6593_call(), 0)
output = call_7971
output2 = call_7972
func_7981 = relay.Function([], output)
mod['func_7981'] = func_7981
mod = relay.transform.InferType()(mod)
mutated_mod['func_7981'] = func_7981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7981_call = mutated_mod.get_global_var('func_7981')
call_7982 = func_7981_call()
output = call_7982
func_7983 = relay.Function([], output)
mutated_mod['func_7983'] = func_7983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7671_call = mod.get_global_var('func_7671')
func_7673_call = mutated_mod.get_global_var('func_7673')
call_7986 = relay.TupleGetItem(func_7671_call(), 0)
call_7987 = relay.TupleGetItem(func_7673_call(), 0)
func_6376_call = mod.get_global_var('func_6376')
func_6380_call = mutated_mod.get_global_var('func_6380')
const_8005 = relay.const([-1.940462,-8.752909,8.201017,-8.227149,-5.496516,-5.056359,6.989038,4.772562,1.690351,5.332334,-4.865752,5.130698,2.715387,-0.229277,-5.695945,8.583176,7.041290,-9.886216,1.358141,-2.485844,-8.815244,-0.065982,6.007571,-0.092564,-5.752703,-9.181472,1.136950,2.729176,2.067256,8.646737,2.158450,-8.344973,2.189524,7.539563,-1.808771,-5.864481,-3.568909,-2.172974,-9.099215,4.655307,-2.542440,5.269471,7.434727,-6.805226,-2.734606,-1.053055,-3.187376,-1.593522,7.514081,-9.937587,-2.645384,-9.464261,-9.082297,-3.801265,8.479423,6.444691,9.783690,-2.794480,0.673661,-0.192793,-1.774982,3.121957,0.422071,-9.948484,-8.991542,-0.808846,1.392969,4.338790,9.692472,-0.996509,8.259202,7.180071,0.890729,2.989243,-9.360354,-7.669193,-6.779955,-8.472104,-5.758440,-9.864077,7.575126,6.163186,-3.824181,-7.908273,-0.814768,-4.697998,-6.532699,-0.412607,6.319777,-4.021382,5.919283,1.207665,2.998027,-0.637588,-2.822106,-3.720869,7.313977,9.178758,-7.293821,-6.909336,-4.192217,1.943736,-7.732716,-1.121895,6.006570,9.584193,-4.058451,5.112679,-1.958287,3.519022,-5.574301,1.825455,2.045586,8.703055,-9.079072,-3.951119,3.748934,-7.627793,4.435223,1.872548,3.582120,-4.584040,4.427910,1.733447,2.925204,0.491469,-8.506267,2.713513,2.343097,-2.425522,-7.405972,-8.929770,-2.037674,7.100066,-2.428377], dtype = "float32")#candidate|8005|(135,)|const|float32
var_8006 = relay.var("var_8006", dtype = "float64", shape = (13, 13))#candidate|8006|(13, 13)|var|float64
call_8004 = relay.TupleGetItem(func_6376_call(relay.reshape(const_8005.astype('float32'), [9, 15, 1]), relay.reshape(var_8006.astype('float64'), [169,]), ), 0)
call_8007 = relay.TupleGetItem(func_6380_call(relay.reshape(const_8005.astype('float32'), [9, 15, 1]), relay.reshape(var_8006.astype('float64'), [169,]), ), 0)
uop_8008 = relay.acosh(call_8004.astype('float64')) # shape=(9, 15, 1)
uop_8010 = relay.acosh(call_8007.astype('float64')) # shape=(9, 15, 1)
func_6542_call = mod.get_global_var('func_6542')
func_6543_call = mutated_mod.get_global_var('func_6543')
call_8012 = relay.TupleGetItem(func_6542_call(), 2)
call_8013 = relay.TupleGetItem(func_6543_call(), 2)
func_4793_call = mod.get_global_var('func_4793')
func_4794_call = mutated_mod.get_global_var('func_4794')
call_8014 = func_4793_call()
call_8015 = func_4793_call()
output = relay.Tuple([call_7986,const_8005,var_8006,uop_8008,call_8012,call_8014,])
output2 = relay.Tuple([call_7987,const_8005,var_8006,uop_8010,call_8013,call_8015,])
func_8017 = relay.Function([var_8006,], output)
mod['func_8017'] = func_8017
mod = relay.transform.InferType()(mod)
mutated_mod['func_8017'] = func_8017
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8018 = relay.var("var_8018", dtype = "float64", shape = (13, 13))#candidate|8018|(13, 13)|var|float64
func_8017_call = mutated_mod.get_global_var('func_8017')
call_8019 = func_8017_call(var_8018)
output = call_8019
func_8020 = relay.Function([var_8018], output)
mutated_mod['func_8020'] = func_8020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4538_call = mod.get_global_var('func_4538')
func_4539_call = mutated_mod.get_global_var('func_4539')
call_8054 = relay.TupleGetItem(func_4538_call(), 0)
call_8055 = relay.TupleGetItem(func_4539_call(), 0)
const_8061 = relay.const([-7.411224,-1.290076,-8.306636,-6.058277,-3.597488,3.465019,2.273327,8.173814,7.698035,4.985432,2.205895,-2.339795,-0.342436,-1.442574,3.254952,6.690508,5.161425,-0.385313,6.663724,-8.233883,-1.698456,-1.317117,-1.083987,-6.806941,5.288904,3.689460,-8.305383,-6.015939,-3.447152,-2.619550,8.188434,2.053336,3.544627,-9.705434,6.884324,-9.305084,1.894723,7.279652,-0.028042,8.249509,9.500233,-2.444402,-4.856985,0.472638,-7.756209,-8.217048,1.636120,-8.288604,-5.567137,2.735036,-0.386995,6.152203,-5.246126,5.920346,-0.683088,-2.222756,6.540850,-1.047070,6.075295,-6.081596,5.140476,4.379551,5.507458,7.703518,0.899192,0.019998,-9.639985,9.447293,6.850068,-7.782196,9.817014,-7.571180,2.600257,9.846697,-1.856324,-5.619237,-5.668173,-3.986268,-4.293133,7.588396,-1.946967,9.117383,-6.908273,0.830320,6.622958,9.977784,-8.036084,0.887002,-9.116344,-3.263393,2.413531,-1.636320,7.629946,2.337115,-1.711432,0.089688,3.768194,-8.273205,1.634634,1.985537,0.352176,9.810590,-2.452677,8.899430,7.813008,4.373907,7.814780,8.960011,-6.504219,-6.843635,4.974696,7.415374,-0.227825,-4.571425,1.338006,-6.830432,7.481937,-6.551285,-9.279452,-9.460959,-7.027220,-5.706562,-9.597546,-6.611849,-1.933315,0.516003,-0.581604,-6.846684,-6.658074,-4.199493,4.306055,-1.939412,-3.999723,-0.140222,3.701705,7.957728,4.258101,4.057261,3.591023,-4.026936,-2.956927,0.189937,7.205922,7.836455,0.395733,5.812284,-2.776910,7.531511,9.335844,1.288302,-6.700308,-1.216056,1.790870,1.354625,5.452263,-8.433880,-0.500340,-0.528338,-2.310058,6.206063,3.781731,-6.935801,3.627932,-4.578541,9.245473,2.636814,-2.791498,5.665178,3.573995,-5.278737,4.314082,-9.668142,7.944993,6.044298,-6.540041,4.826957,5.008694,0.096340,8.225797,0.748646,4.231532,-3.743520,-6.266726,6.733055,6.763021,-3.182188,3.109157,-8.751043,8.888072,-8.817511,-2.084361,9.805253,8.218232,-3.040418,1.976599,9.756816,-4.650307,-7.176605,-3.322955,-6.149136,-9.946971,-9.502374,3.572420,-8.727166,-4.388262,-2.141598,-0.383563,-2.604202,-8.383214,-1.406932,7.314049,8.974457,4.275130,-8.836643,4.113133,9.638708,-4.770672,4.080705,-5.656335,-2.130048,-9.434419,-5.732661,5.721522,-1.177110,3.276136,3.024823,5.235712,9.245555,-5.747616,-7.784885,-4.172758,0.316023,7.092672,7.487957,-2.187674,-5.262595,-3.878963,9.304403,5.536951,-2.741372,-6.637177,5.301084,-0.092812,6.041053,6.849112,-1.604025,4.034490,-9.728153,3.392514,4.940467,1.789679,-3.046570,-5.521420,6.279052,-1.091490,-0.100715,2.016568,-2.161640,-8.297571,9.554608,5.271355,-4.434844,8.849980,4.328660,-2.201692,3.191471,-9.346714,2.928694,6.779206,-2.649446,-5.479956,4.636754,5.907603,3.695469,8.165056,5.880085,0.763702,5.955996,-1.213451,2.143488,9.428381,-3.217831,-6.649383,-0.749441,7.326689,5.435336,-8.380257,0.763844,-4.809198,0.103962,1.989645,-9.540747,-7.995994,-4.191687,-7.979727,1.155136,-2.398354,4.290657,-1.127822,-3.632009,3.701895,7.393618,-9.711698,6.614015,-6.949224,-9.064720,5.794276,-8.661315,7.274647,-8.932435,-8.368770,4.034607,7.916950,2.081002,0.978067,3.340008,-9.861701,-3.339342,-3.363695,9.710270,-2.407843,-9.853759,5.372669,-1.747073,7.141007,-7.749964,-3.927547,-6.510460,8.924460,8.220674,-7.475000,8.001287,-8.921115,9.730966,2.919355,3.345301,5.078128,2.208343,-5.690207,6.896588,-3.275375,5.994742,2.479444,-6.817250,4.271771,5.893981,2.253980,-6.711256,-9.814625,-6.230167,6.467413,-5.930823,2.406634,7.966007,0.982376,-0.594834,-0.955963,-5.555195,7.655109,-5.919811,0.997939,-5.238621,-9.393754,-8.727178,0.645369,-7.651497,-4.782880,0.761031,-4.792785,6.083779,8.503879,1.458140,3.119544,7.405095,7.305832,7.512860,-6.007796,4.395247,1.123972,8.288459,-1.419990,2.063838,-2.714657,-3.516285,4.733370,-1.968114,9.018108,-5.778191,-0.812469,-6.584404,-6.262557,-2.246334,4.663268,2.833761,3.273076,1.776184,9.536742,-9.106649,0.194463,-5.125826,-0.536378,2.314637,8.919008,-5.072055,-2.591449,1.443319,-4.112045,3.679272,3.029051,-0.301042,9.939670,-1.960614,-8.008114,4.554914,4.250576,-1.176881,-4.346336,-8.479501,-8.173301,7.571579,9.577967,6.377548,-1.154131,9.623360,6.514945,-5.604945,-9.721352,5.394074,5.351788,-3.134026,0.084128,-0.944153,5.785232,2.204123,5.155919,-5.207198,9.201794,7.442647,-2.040146,4.201584,-4.711625,-1.939849,-7.132952,-3.502281,-1.312514,-7.871073,0.225524,-6.198950,5.697529,-5.154542,-7.891010,7.469164,-4.655064,-1.159207,-0.391510,3.915369,2.072267,5.066005,0.462025,-6.036184,-7.775772,7.940138,1.482117,-7.747822,3.089524,-0.670510,8.420566,6.914269,-6.965700,-3.614950,8.019517,8.613656,-8.162069,-4.359057,-9.501243,4.799007,-7.696154,9.215020,-1.312557,-4.662327,-2.962789,-6.627119,3.648403,-0.548596,3.027125,-5.174914,-0.672975,7.253633,-6.710864,-3.287134,-1.305034,8.487708,4.034548,4.820993,0.961345,2.916875,-6.986465,9.978885,-7.937993,7.202653,9.013909,-7.930443,2.706816,-0.904081,-1.726021,6.350176,-2.051846,3.895265,8.089959,-4.956139,-7.725620,-4.034505,1.684025,-8.721262,3.337196,1.453119,0.073717,-7.854382,6.826129,-3.733480,-7.513641,6.904446,6.264795,-9.915228,9.136682,2.547567,-6.926132,-6.604265,9.727147,9.031812,-9.624590,9.171729,8.540349,-1.121585,-0.801331,-0.277289,-8.325587,-5.507993,-9.164903,-8.808996,0.745940,4.730876,-5.662188,1.850802,7.549620,-3.707570,5.808572,5.951286,-3.009937,6.697359,6.053102,8.194737,0.494512,5.456388,-2.617125,7.977356,2.933383,9.292357,-7.990585,7.695303,-1.687029,9.066021,-5.014676,-9.180715,1.085679,6.479247,3.908220,-1.365789,-5.670945,-2.494718,-9.097660,-1.210343,-0.848538,5.646582,-4.895976,-4.435274,-8.349471,-5.487676,2.103306,4.263826,5.218694,9.883984,4.533958,1.543676,2.510166,-1.854841,-8.594967,9.607409,4.755961,8.566945,7.860528,-1.697052,-5.243124,-9.002695,8.420370,-0.725261,3.679263,2.056310,4.975792,-4.169710,-5.489591,-8.254664,-6.465195,8.266174,-2.868906,7.314363,2.978008,-8.953963,6.423676,4.162779,-8.632847,5.245307,4.421166,1.515294,5.139740,9.040670,-9.578175,-9.034174,8.646844,-4.533008,0.792670,3.368187,5.850196,-5.632016,9.614813,4.254046,0.360784,4.213582,9.536816,0.970861,-3.669449,-9.889925,9.980733,9.789387,2.790500,-0.227079,-6.769094,9.098958,6.790335,-0.238234,1.464464,0.576547,-1.761924,6.167489,5.320878,-5.405748,8.609773,-7.442606,-4.439703,1.093249,-0.589906,-2.228452,0.970423,-0.671722,9.922112,7.714159,2.640996,5.354212,0.725719,5.534986,4.210266,6.046818,5.271585,8.678254,5.682937,7.763313,1.121656,-0.110102,2.903157,7.888392,5.883740,6.634177,1.780602,-6.898746,8.654425,6.218646,-7.691866,3.739931,2.739696,1.473388,3.907051,-6.092705,-3.997602,2.286607,9.938095,-5.585683,-8.914883,8.256631,-7.202978,-3.921197,-8.260772,-3.961697,-3.600769,-9.781549,2.082139,3.198998,-1.207019,3.052071,-6.406351,-9.088629,1.000010,8.177063,-5.946478,-0.940333,-1.862170,-1.279709,-0.280627,5.028596,-8.589388,-9.915073,5.400388,-6.380520,8.306189,-7.706276,-4.058085,-1.026659,6.038534,3.747156,-5.159286,-9.753716,7.710047,9.167066,-6.415158,-7.333145,-0.447506,-6.548564,-4.720358,7.620627,-2.375717,-8.940404,-9.996008,-7.068515,-9.221563,3.237267,4.612215,1.153823,-4.140785,6.714684,-7.610392,9.977925,-8.678765,-4.188796,-6.527031,8.846621,-7.891019,-6.821635,-7.021986,-4.123858,-6.139605,9.519480,-6.100462,-5.520600,-7.003722,9.281224,-6.512687,9.323522,-0.038576,4.604729,-4.807224,6.537726,-1.017457,5.379287,-7.100247,1.175127,-1.967738,4.867918,-0.053289,7.293166,4.630684,6.696448,-4.135427,-8.118356,-6.880745,3.151614,-0.758045,2.446189,-2.054812,6.521665,6.215965,-5.895145,-0.736816,-2.568180,5.195937,9.054921,-5.362397,-7.442483,2.422738,3.327693,6.037754,-5.765774,3.581676,-8.234450,5.036693,-0.504313,5.799595,-0.886804,-5.464271,-8.638425,-7.461806,-1.794883,-5.428867,3.029195,-6.099052,6.978545,-5.853689,8.013859,-2.390287,4.304203,-8.297306,-2.774460,-9.130476,7.661671,5.427834,3.852344,1.746962,-3.146806,-7.694383,7.734185,-8.913391,-8.515658,3.071187,-9.598625,-0.981441,6.063499,4.571472,-9.932818,-2.751359,6.253145,2.150568,6.276842,-7.127861,-6.181691,-7.095465,1.419679,-7.912255,5.665361,-3.545578,3.623100,2.900920,8.382241,-7.927191,2.724943,5.697988,-1.412234,1.634271,5.312054,7.217074,-6.200624,0.755747,-5.702177,-1.774142,4.908514,4.144634,0.449084,5.639783,-0.047866,-8.512378,-2.609405,-8.536542,-8.861396,3.658745,8.969680,9.490032,-7.394974,-5.229532,-6.248951,-1.826380,1.190258,3.466420,-0.385458,3.004433,-9.239403,-0.081962,0.633859,-4.325434,-8.188944,5.346374,-6.250631,-5.564309,5.075193,-9.875738,1.935686,-6.379196,-4.601044,9.738085,-9.182837,9.175480,-3.703590,-9.529473,-5.919419,4.973450,-7.908319,7.804619,1.979820,5.491378,-7.318836,-1.692467,-0.497295,-6.424522,-8.204950,0.219187,-7.840013,-1.413748,2.818134,-7.578895,7.633141,-4.602396,-8.260607,-7.704010,0.220874,-8.106394,2.695092,7.908643,7.994383,1.257303,7.866432,3.813107,4.312942,-1.003472,-0.442657,0.912439,-6.908719,8.168760,2.222261,-6.662762,4.757237,-5.733874,-8.868064,-1.592915,0.053948,8.951200,-4.212396,-9.338629,-1.548673,-5.790487,0.269346,-6.972162,-4.191088,-3.221392,-0.470630,-6.571327,0.669872,-4.682901,6.704247,-7.642557], dtype = "float64")#candidate|8061|(945,)|const|float64
bop_8062 = relay.subtract(call_8054.astype('int16'), relay.reshape(const_8061.astype('int16'), relay.shape_of(call_8054))) # shape=(945,)
bop_8065 = relay.subtract(call_8055.astype('int16'), relay.reshape(const_8061.astype('int16'), relay.shape_of(call_8055))) # shape=(945,)
func_5398_call = mod.get_global_var('func_5398')
func_5400_call = mutated_mod.get_global_var('func_5400')
call_8083 = relay.TupleGetItem(func_5398_call(), 0)
call_8084 = relay.TupleGetItem(func_5400_call(), 0)
func_5849_call = mod.get_global_var('func_5849')
func_5851_call = mutated_mod.get_global_var('func_5851')
call_8088 = relay.TupleGetItem(func_5849_call(), 0)
call_8089 = relay.TupleGetItem(func_5851_call(), 0)
func_5575_call = mod.get_global_var('func_5575')
func_5578_call = mutated_mod.get_global_var('func_5578')
call_8103 = relay.TupleGetItem(func_5575_call(relay.reshape(const_8061.astype('float32'), [945,])), 0)
call_8104 = relay.TupleGetItem(func_5578_call(relay.reshape(const_8061.astype('float32'), [945,])), 0)
func_6396_call = mod.get_global_var('func_6396')
func_6397_call = mutated_mod.get_global_var('func_6397')
call_8105 = relay.TupleGetItem(func_6396_call(), 0)
call_8106 = relay.TupleGetItem(func_6397_call(), 0)
func_6759_call = mod.get_global_var('func_6759')
func_6761_call = mutated_mod.get_global_var('func_6761')
call_8113 = relay.TupleGetItem(func_6759_call(relay.reshape(const_8061.astype('float64'), [945,])), 0)
call_8114 = relay.TupleGetItem(func_6761_call(relay.reshape(const_8061.astype('float64'), [945,])), 0)
func_5222_call = mod.get_global_var('func_5222')
func_5224_call = mutated_mod.get_global_var('func_5224')
var_8133 = relay.var("var_8133", dtype = "float64", shape = (169,))#candidate|8133|(169,)|var|float64
call_8132 = func_5222_call(relay.reshape(var_8133.astype('float64'), [1, 13, 13]))
call_8134 = func_5222_call(relay.reshape(var_8133.astype('float64'), [1, 13, 13]))
output = relay.Tuple([bop_8062,call_8083,call_8088,call_8103,call_8105,call_8113,call_8132,var_8133,])
output2 = relay.Tuple([bop_8065,call_8084,call_8089,call_8104,call_8106,call_8114,call_8134,var_8133,])
func_8135 = relay.Function([var_8133,], output)
mod['func_8135'] = func_8135
mod = relay.transform.InferType()(mod)
mutated_mod['func_8135'] = func_8135
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8136 = relay.var("var_8136", dtype = "float64", shape = (169,))#candidate|8136|(169,)|var|float64
func_8135_call = mutated_mod.get_global_var('func_8135')
call_8137 = func_8135_call(var_8136)
output = call_8137
func_8138 = relay.Function([var_8136], output)
mutated_mod['func_8138'] = func_8138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5887_call = mod.get_global_var('func_5887')
func_5889_call = mutated_mod.get_global_var('func_5889')
call_8153 = func_5887_call()
call_8154 = func_5887_call()
uop_8155 = relay.cosh(call_8153.astype('float32')) # shape=(945,)
uop_8157 = relay.cosh(call_8154.astype('float32')) # shape=(945,)
output = relay.Tuple([uop_8155,])
output2 = relay.Tuple([uop_8157,])
func_8160 = relay.Function([], output)
mod['func_8160'] = func_8160
mod = relay.transform.InferType()(mod)
output = func_8160()
func_8161 = relay.Function([], output)
mutated_mod['func_8161'] = func_8161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4561_call = mod.get_global_var('func_4561')
func_4562_call = mutated_mod.get_global_var('func_4562')
call_8182 = relay.TupleGetItem(func_4561_call(), 0)
call_8183 = relay.TupleGetItem(func_4562_call(), 0)
func_4661_call = mod.get_global_var('func_4661')
func_4663_call = mutated_mod.get_global_var('func_4663')
call_8207 = relay.TupleGetItem(func_4661_call(), 1)
call_8208 = relay.TupleGetItem(func_4663_call(), 1)
bop_8209 = relay.floor_divide(call_8182.astype('float64'), call_8207.astype('float64')) # shape=(7, 9, 15)
bop_8212 = relay.floor_divide(call_8183.astype('float64'), call_8208.astype('float64')) # shape=(7, 9, 15)
output = relay.Tuple([bop_8209,])
output2 = relay.Tuple([bop_8212,])
func_8220 = relay.Function([], output)
mod['func_8220'] = func_8220
mod = relay.transform.InferType()(mod)
output = func_8220()
func_8221 = relay.Function([], output)
mutated_mod['func_8221'] = func_8221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6452_call = mod.get_global_var('func_6452')
func_6454_call = mutated_mod.get_global_var('func_6454')
call_8277 = func_6452_call()
call_8278 = func_6452_call()
uop_8308 = relay.erf(call_8277.astype('float32')) # shape=(7, 9, 15)
uop_8310 = relay.erf(call_8278.astype('float32')) # shape=(7, 9, 15)
output = uop_8308
output2 = uop_8310
func_8318 = relay.Function([], output)
mod['func_8318'] = func_8318
mod = relay.transform.InferType()(mod)
mutated_mod['func_8318'] = func_8318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8318_call = mutated_mod.get_global_var('func_8318')
call_8319 = func_8318_call()
output = call_8319
func_8320 = relay.Function([], output)
mutated_mod['func_8320'] = func_8320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5887_call = mod.get_global_var('func_5887')
func_5889_call = mutated_mod.get_global_var('func_5889')
call_8360 = func_5887_call()
call_8361 = func_5887_call()
func_8017_call = mod.get_global_var('func_8017')
func_8020_call = mutated_mod.get_global_var('func_8020')
const_8363 = relay.const([6.432475,-5.856731,-4.877505,-9.471436,1.656162,8.407102,-1.605638,6.568246,-7.974797,8.570990,8.011815,-9.098438,-8.388351,-8.259111,-2.888216,1.381359,2.599121,9.342977,3.685767,1.103833,-2.033365,4.740205,-6.368284,-5.673897,-7.205733,1.038936,-2.275544,9.994099,-7.253138,-1.853620,0.669177,-1.564463,1.452573,-3.772755,2.780459,-7.350676,-3.781108,-8.336722,-9.097880,-9.654639,-1.757931,-4.159719,9.767349,0.637816,0.642699,2.932683,4.285029,8.016549,6.422461,9.935666,2.344049,-8.827521,-5.335225,-4.068957,6.681615,0.873878,-1.389690,-3.691936,6.701372,6.553553,2.023724,4.033515,-2.674959,7.205252,-2.302286,-5.869631,-4.000515,-9.964266,-6.312151,5.614161,5.269639,9.582775,-5.728261,9.222739,-9.476976,-1.093785,6.357043,-7.519863,-0.964308,3.276559,7.468278,0.108067,-6.678468,-9.400677,-1.814975,-5.165458,-0.589274,-9.284004,1.650105,-5.785003,-1.995581,1.490818,-0.426930,-5.789746,-6.205579,1.240814,8.512679,5.996266,-6.461208,-1.395055,-2.791317,-9.094921,3.831169,2.379193,6.857075,-8.185271,5.868773,7.185953,8.553757,-2.204599,-8.634537,4.050294,-3.773241,2.347244,-3.311833,-7.366272,3.606088,7.019801,6.302199,9.336686,-1.604427,-8.252074,-4.448150,1.290898,6.750992,4.589733,-2.316443,-9.966201,4.800204,5.155570,9.959792,-7.168359,8.250020,9.431464,8.120287,0.609928,-8.029194,4.662799,3.946651,6.853379,-4.204644,-6.419403,0.807363,-0.487925,5.381071,4.304399,8.761474,9.864166,4.421891,6.078452,8.844734,0.160230,-2.990882,-0.030953,2.919680,1.599572,-3.277697,-6.061154,-2.905280,8.376612,1.662439,-8.891372,-3.446871,5.027342,1.345229,-8.064369,9.416980,-2.309184,-5.141197], dtype = "float64")#candidate|8363|(169,)|const|float64
call_8362 = relay.TupleGetItem(func_8017_call(relay.reshape(const_8363.astype('float64'), [13, 13])), 3)
call_8364 = relay.TupleGetItem(func_8020_call(relay.reshape(const_8363.astype('float64'), [13, 13])), 3)
output = relay.Tuple([call_8360,call_8362,const_8363,])
output2 = relay.Tuple([call_8361,call_8364,const_8363,])
func_8372 = relay.Function([], output)
mod['func_8372'] = func_8372
mod = relay.transform.InferType()(mod)
output = func_8372()
func_8373 = relay.Function([], output)
mutated_mod['func_8373'] = func_8373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7178_call = mod.get_global_var('func_7178')
func_7180_call = mutated_mod.get_global_var('func_7180')
call_8392 = relay.TupleGetItem(func_7178_call(), 0)
call_8393 = relay.TupleGetItem(func_7180_call(), 0)
func_1752_call = mod.get_global_var('func_1752')
func_1754_call = mutated_mod.get_global_var('func_1754')
const_8398 = relay.const(-6.349204, dtype = "float32")#candidate|8398|()|const|float32
call_8397 = relay.TupleGetItem(func_1752_call(relay.reshape(const_8398.astype('float32'), [])), 0)
call_8399 = relay.TupleGetItem(func_1754_call(relay.reshape(const_8398.astype('float32'), [])), 0)
var_8403 = relay.var("var_8403", dtype = "bool", shape = (11, 12, 7))#candidate|8403|(11, 12, 7)|var|bool
bop_8404 = relay.greater(call_8397.astype('bool'), var_8403.astype('bool')) # shape=(11, 12, 7)
bop_8407 = relay.greater(call_8399.astype('bool'), var_8403.astype('bool')) # shape=(11, 12, 7)
uop_8412 = relay.acosh(call_8397.astype('float64')) # shape=(11, 1, 7)
uop_8414 = relay.acosh(call_8399.astype('float64')) # shape=(11, 1, 7)
bop_8416 = relay.logical_or(uop_8412.astype('bool'), const_8398.astype('bool')) # shape=(11, 1, 7)
bop_8419 = relay.logical_or(uop_8414.astype('bool'), const_8398.astype('bool')) # shape=(11, 1, 7)
output = relay.Tuple([call_8392,bop_8404,bop_8416,])
output2 = relay.Tuple([call_8393,bop_8407,bop_8419,])
func_8428 = relay.Function([var_8403,], output)
mod['func_8428'] = func_8428
mod = relay.transform.InferType()(mod)
mutated_mod['func_8428'] = func_8428
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8429 = relay.var("var_8429", dtype = "bool", shape = (11, 12, 7))#candidate|8429|(11, 12, 7)|var|bool
func_8428_call = mutated_mod.get_global_var('func_8428')
call_8430 = func_8428_call(var_8429)
output = call_8430
func_8431 = relay.Function([var_8429], output)
mutated_mod['func_8431'] = func_8431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4960_call = mod.get_global_var('func_4960')
func_4961_call = mutated_mod.get_global_var('func_4961')
call_8450 = relay.TupleGetItem(func_4960_call(), 0)
call_8451 = relay.TupleGetItem(func_4961_call(), 0)
func_5961_call = mod.get_global_var('func_5961')
func_5963_call = mutated_mod.get_global_var('func_5963')
call_8497 = func_5961_call()
call_8498 = func_5961_call()
output = relay.Tuple([call_8450,call_8497,])
output2 = relay.Tuple([call_8451,call_8498,])
func_8504 = relay.Function([], output)
mod['func_8504'] = func_8504
mod = relay.transform.InferType()(mod)
output = func_8504()
func_8505 = relay.Function([], output)
mutated_mod['func_8505'] = func_8505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8220_call = mod.get_global_var('func_8220')
func_8221_call = mutated_mod.get_global_var('func_8221')
call_8520 = relay.TupleGetItem(func_8220_call(), 0)
call_8521 = relay.TupleGetItem(func_8221_call(), 0)
func_7178_call = mod.get_global_var('func_7178')
func_7180_call = mutated_mod.get_global_var('func_7180')
call_8525 = relay.TupleGetItem(func_7178_call(), 0)
call_8526 = relay.TupleGetItem(func_7180_call(), 0)
output = relay.Tuple([call_8520,call_8525,])
output2 = relay.Tuple([call_8521,call_8526,])
func_8535 = relay.Function([], output)
mod['func_8535'] = func_8535
mod = relay.transform.InferType()(mod)
output = func_8535()
func_8536 = relay.Function([], output)
mutated_mod['func_8536'] = func_8536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7661_call = mod.get_global_var('func_7661')
func_7663_call = mutated_mod.get_global_var('func_7663')
call_8537 = func_7661_call()
call_8538 = func_7661_call()
func_7981_call = mod.get_global_var('func_7981')
func_7983_call = mutated_mod.get_global_var('func_7983')
call_8548 = func_7981_call()
call_8549 = func_7981_call()
output = relay.Tuple([call_8537,call_8548,])
output2 = relay.Tuple([call_8538,call_8549,])
func_8558 = relay.Function([], output)
mod['func_8558'] = func_8558
mod = relay.transform.InferType()(mod)
mutated_mod['func_8558'] = func_8558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8558_call = mutated_mod.get_global_var('func_8558')
call_8559 = func_8558_call()
output = call_8559
func_8560 = relay.Function([], output)
mutated_mod['func_8560'] = func_8560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7406_call = mod.get_global_var('func_7406')
func_7408_call = mutated_mod.get_global_var('func_7408')
call_8604 = func_7406_call()
call_8605 = func_7406_call()
output = call_8604
output2 = call_8605
func_8612 = relay.Function([], output)
mod['func_8612'] = func_8612
mod = relay.transform.InferType()(mod)
mutated_mod['func_8612'] = func_8612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8612_call = mutated_mod.get_global_var('func_8612')
call_8613 = func_8612_call()
output = call_8613
func_8614 = relay.Function([], output)
mutated_mod['func_8614'] = func_8614
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8626 = relay.var("var_8626", dtype = "float32", shape = (10, 10, 12))#candidate|8626|(10, 10, 12)|var|float32
uop_8627 = relay.asinh(var_8626.astype('float32')) # shape=(10, 10, 12)
output = relay.Tuple([uop_8627,])
output2 = relay.Tuple([uop_8627,])
func_8642 = relay.Function([var_8626,], output)
mod['func_8642'] = func_8642
mod = relay.transform.InferType()(mod)
mutated_mod['func_8642'] = func_8642
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8643 = relay.var("var_8643", dtype = "float32", shape = (10, 10, 12))#candidate|8643|(10, 10, 12)|var|float32
func_8642_call = mutated_mod.get_global_var('func_8642')
call_8644 = func_8642_call(var_8643)
output = call_8644
func_8645 = relay.Function([var_8643], output)
mutated_mod['func_8645'] = func_8645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8535_call = mod.get_global_var('func_8535')
func_8536_call = mutated_mod.get_global_var('func_8536')
call_8664 = relay.TupleGetItem(func_8535_call(), 1)
call_8665 = relay.TupleGetItem(func_8536_call(), 1)
output = call_8664
output2 = call_8665
func_8691 = relay.Function([], output)
mod['func_8691'] = func_8691
mod = relay.transform.InferType()(mod)
output = func_8691()
func_8692 = relay.Function([], output)
mutated_mod['func_8692'] = func_8692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8535_call = mod.get_global_var('func_8535')
func_8536_call = mutated_mod.get_global_var('func_8536')
call_8703 = relay.TupleGetItem(func_8535_call(), 1)
call_8704 = relay.TupleGetItem(func_8536_call(), 1)
func_6691_call = mod.get_global_var('func_6691')
func_6693_call = mutated_mod.get_global_var('func_6693')
call_8722 = relay.TupleGetItem(func_6691_call(relay.reshape(call_8703.astype('float32'), [7, 9, 15])), 2)
call_8723 = relay.TupleGetItem(func_6693_call(relay.reshape(call_8703.astype('float32'), [7, 9, 15])), 2)
func_6306_call = mod.get_global_var('func_6306')
func_6309_call = mutated_mod.get_global_var('func_6309')
var_8725 = relay.var("var_8725", dtype = "uint8", shape = (224,))#candidate|8725|(224,)|var|uint8
call_8724 = relay.TupleGetItem(func_6306_call(relay.reshape(call_8703.astype('float64'), [945,]), relay.reshape(var_8725.astype('uint8'), [16, 14]), ), 0)
call_8726 = relay.TupleGetItem(func_6309_call(relay.reshape(call_8703.astype('float64'), [945,]), relay.reshape(var_8725.astype('uint8'), [16, 14]), ), 0)
func_8612_call = mod.get_global_var('func_8612')
func_8614_call = mutated_mod.get_global_var('func_8614')
call_8728 = func_8612_call()
call_8729 = func_8612_call()
output = relay.Tuple([call_8703,call_8722,call_8724,var_8725,call_8728,])
output2 = relay.Tuple([call_8704,call_8723,call_8726,var_8725,call_8729,])
func_8733 = relay.Function([var_8725,], output)
mod['func_8733'] = func_8733
mod = relay.transform.InferType()(mod)
mutated_mod['func_8733'] = func_8733
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8734 = relay.var("var_8734", dtype = "uint8", shape = (224,))#candidate|8734|(224,)|var|uint8
func_8733_call = mutated_mod.get_global_var('func_8733')
call_8735 = func_8733_call(var_8734)
output = call_8735
func_8736 = relay.Function([var_8734], output)
mutated_mod['func_8736'] = func_8736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5174_call = mod.get_global_var('func_5174')
func_5175_call = mutated_mod.get_global_var('func_5175')
call_8874 = relay.TupleGetItem(func_5174_call(), 1)
call_8875 = relay.TupleGetItem(func_5175_call(), 1)
func_6592_call = mod.get_global_var('func_6592')
func_6593_call = mutated_mod.get_global_var('func_6593')
call_8882 = relay.TupleGetItem(func_6592_call(), 0)
call_8883 = relay.TupleGetItem(func_6593_call(), 0)
output = relay.Tuple([call_8874,call_8882,])
output2 = relay.Tuple([call_8875,call_8883,])
func_8892 = relay.Function([], output)
mod['func_8892'] = func_8892
mod = relay.transform.InferType()(mod)
output = func_8892()
func_8893 = relay.Function([], output)
mutated_mod['func_8893'] = func_8893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5742_call = mod.get_global_var('func_5742')
func_5744_call = mutated_mod.get_global_var('func_5744')
call_8897 = relay.TupleGetItem(func_5742_call(), 0)
call_8898 = relay.TupleGetItem(func_5744_call(), 0)
func_7280_call = mod.get_global_var('func_7280')
func_7283_call = mutated_mod.get_global_var('func_7283')
const_8900 = relay.const(-8, dtype = "int16")#candidate|8900|()|const|int16
const_8901 = relay.const([7,2,-7,-8,10,1,5,3,7,3,5,4,-10,5,7,1,-5,10,2,3,6,-1,-7,3,8,-2,7,-4,-8,-6,-6,2,2,5,10,5,1,8,-10,-4,6,3,1,-2,-8,-7,-5,-6,-9,-10,-9,6,1,-10,5,-1,-9,8,-4,2,-9,4,5,5,-1,4,2,-1,-4,-3,-4,-3,1,-6,10,-4,-4,6,-10,-5,6,2,1,-10,-6,-5,-9,5,8,4,-7,10,7,-3,9,-8,9,-4,3,5,-8,10,-9,-7,6,6,10,-7,3,1,-9,-8,9,9,5,3,-4,-1,2,9,-9,-3,2,5,-1,-9,5,9,7,-10,-1,6,-8,10,6,7,-6,-4,10,4,-6,-4,-10,9,-2,-2,1,-10,-6,10,10,7,10,4,1,-3,-3,-9,9,-10,4,6,1,-8,-6,1,8,2,1,9,-6,-10,1,-1,5,3,-5,-9,-5,-5,7,-7,-4,-4,4,9,-10,-8,8,1,-3,5,3,4,2,9,5,-4,-4,6,-6,10,3,4,9,5,2,-10,5,-3,5,-4,-9,-1,-1,-2,5,-2,2,-2,-3,-5,-8,-2,-10,7,8,-8,-4,-7,-10,-1,-1,-3,-10,5,1,-8,4,-9,-6,2,10,8,-8,8,-6,-3,1,-1,1,4,-6,9,4,-6,8,2,-7,1,-9,-5,9,1,4,-1,-10,6,-9,5,5,-4,1,-1,10,6,-3,2,9,-2,-9,-5,-9,-4,8,-4,3,5,5,4,10,-5,-1,4,4,2,-2,2,-9,-2,6,-9,-5,4,-10,7,8,-2,-1,-10,6,-8,-8,2,5,-4,1,1,-6,7,-3,8,8,-4,-10,-2,6,-7,-10,-4,6,-5,1,-4,-1,5,-5,7,4,-2,6,1,6,6,8,1,8,-10,4,-6,-4,10,3,-5,-9,-1,1,-6,-1,-2,-4,2,1,-3,-7,1,-1,3,8,-10,2,-3,5,-9,4,5,6,-2,-1,-3,3,2,-7,-7,-10,4,-10,7,8,2,-9,10,4,4,6,-4,1,2,-10,3,-7,5,5,5,-10,-7,-1,6,-10,3,-10,-4,4,9,6,3,2,-3,10,10,6,-2,-4,-4,-1,-10,-3,-1,2,-10,-5,-4,-1,-2,6,4,1,10,-4,-2,1,-5,-8,-1,8,1,-4,-10,3,-9,-6,-2,9,-6,4,10,-2,2,-3,4,-4,-7,-9,7,-9,-10,9,5,4,1,-1,-5,-5,-5,-10,2,-4,-4,3,5,-8,-8,7,-3,5,8,4,-1,10,9,-6,4,1,-3,1], dtype = "int16")#candidate|8901|(495,)|const|int16
call_8899 = relay.TupleGetItem(func_7280_call(relay.reshape(const_8900.astype('int16'), []), relay.reshape(const_8901.astype('int16'), [5, 11, 9]), ), 0)
call_8902 = relay.TupleGetItem(func_7283_call(relay.reshape(const_8900.astype('int16'), []), relay.reshape(const_8901.astype('int16'), [5, 11, 9]), ), 0)
func_2279_call = mod.get_global_var('func_2279')
func_2281_call = mutated_mod.get_global_var('func_2281')
call_8906 = relay.TupleGetItem(func_2279_call(relay.reshape(const_8900.astype('int64'), [])), 1)
call_8907 = relay.TupleGetItem(func_2281_call(relay.reshape(const_8900.astype('int64'), [])), 1)
output = relay.Tuple([call_8897,call_8899,const_8900,const_8901,call_8906,])
output2 = relay.Tuple([call_8898,call_8902,const_8900,const_8901,call_8907,])
func_8908 = relay.Function([], output)
mod['func_8908'] = func_8908
mod = relay.transform.InferType()(mod)
mutated_mod['func_8908'] = func_8908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8908_call = mutated_mod.get_global_var('func_8908')
call_8909 = func_8908_call()
output = call_8909
func_8910 = relay.Function([], output)
mutated_mod['func_8910'] = func_8910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4528_call = mod.get_global_var('func_4528')
func_4530_call = mutated_mod.get_global_var('func_4530')
call_8920 = relay.TupleGetItem(func_4528_call(), 1)
call_8921 = relay.TupleGetItem(func_4530_call(), 1)
func_7523_call = mod.get_global_var('func_7523')
func_7526_call = mutated_mod.get_global_var('func_7526')
var_8930 = relay.var("var_8930", dtype = "float32", shape = (2, 144))#candidate|8930|(2, 144)|var|float32
call_8929 = relay.TupleGetItem(func_7523_call(relay.reshape(var_8930.astype('float32'), [288, 1])), 1)
call_8931 = relay.TupleGetItem(func_7526_call(relay.reshape(var_8930.astype('float32'), [288, 1])), 1)
output = relay.Tuple([call_8920,call_8929,var_8930,])
output2 = relay.Tuple([call_8921,call_8931,var_8930,])
func_8951 = relay.Function([var_8930,], output)
mod['func_8951'] = func_8951
mod = relay.transform.InferType()(mod)
mutated_mod['func_8951'] = func_8951
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8952 = relay.var("var_8952", dtype = "float32", shape = (2, 144))#candidate|8952|(2, 144)|var|float32
func_8951_call = mutated_mod.get_global_var('func_8951')
call_8953 = func_8951_call(var_8952)
output = call_8953
func_8954 = relay.Function([var_8952], output)
mutated_mod['func_8954'] = func_8954
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9045 = relay.const([[[9,-10,-4,-4,-8,10,-8,5,3,6],[8,-5,3,-1,4,-6,-3,-1,-5,-6],[4,5,10,5,7,9,-5,6,10,3],[-3,10,-3,5,-7,-1,8,-4,5,4]],[[-1,7,5,-5,3,2,5,3,2,8],[-10,-10,-6,-7,-4,-2,3,-2,-5,5],[5,5,9,9,-10,3,-7,-8,-7,-3],[5,-7,-7,9,6,-3,3,-10,-7,-6]],[[-8,-7,-1,-8,-10,-9,-6,-5,7,-6],[-10,-3,-8,7,-4,2,-3,-6,4,5],[5,-2,2,6,3,-2,3,-8,-6,6],[-2,-1,7,-1,3,8,-10,1,-8,-1]],[[10,-6,9,-4,2,5,10,9,7,-10],[-6,10,-7,-7,-9,9,-4,-4,10,-7],[10,6,-2,-7,5,-9,4,-4,-2,7],[3,-1,-1,-9,-3,-3,10,2,4,-9]],[[5,-7,-9,1,6,-3,3,6,-8,-7],[3,3,1,5,3,6,6,-6,-6,8],[-4,-1,-4,-5,3,-1,-3,-2,-8,-4],[3,-8,1,3,10,1,2,-2,-10,9]],[[8,2,6,8,10,-6,9,-1,-9,-2],[-8,2,-5,-6,-9,10,7,-9,-5,9],[-10,-8,1,3,-6,9,-8,-3,3,-9],[6,-10,-1,-10,-9,-4,5,9,-3,-6]],[[-9,-4,3,-1,-7,-1,-2,-10,9,3],[-8,-6,-9,9,-9,-5,-1,5,-6,-2],[-9,-8,3,7,-7,-1,-5,9,4,-10],[-4,-1,-1,1,-5,2,8,-6,-9,3]],[[1,-2,3,-2,9,1,-6,2,-1,7],[-8,9,-9,6,-7,-4,5,9,-7,-6],[-5,-4,9,8,-9,-5,4,-4,10,8],[9,10,-8,-3,-9,1,-3,-5,-1,4]]], dtype = "uint8")#candidate|9045|(8, 4, 10)|const|uint8
var_9046 = relay.var("var_9046", dtype = "uint8", shape = (8, 4, 10))#candidate|9046|(8, 4, 10)|var|uint8
bop_9047 = relay.maximum(const_9045.astype('uint8'), relay.reshape(var_9046.astype('uint8'), relay.shape_of(const_9045))) # shape=(8, 4, 10)
output = bop_9047
output2 = bop_9047
func_9050 = relay.Function([var_9046,], output)
mod['func_9050'] = func_9050
mod = relay.transform.InferType()(mod)
mutated_mod['func_9050'] = func_9050
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9051 = relay.var("var_9051", dtype = "uint8", shape = (8, 4, 10))#candidate|9051|(8, 4, 10)|var|uint8
func_9050_call = mutated_mod.get_global_var('func_9050')
call_9052 = func_9050_call(var_9051)
output = call_9052
func_9053 = relay.Function([var_9051], output)
mutated_mod['func_9053'] = func_9053
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9072 = relay.var("var_9072", dtype = "float64", shape = ())#candidate|9072|()|var|float64
var_9073 = relay.var("var_9073", dtype = "float64", shape = (1, 7, 7))#candidate|9073|(1, 7, 7)|var|float64
bop_9074 = relay.less(var_9072.astype('bool'), var_9073.astype('bool')) # shape=(1, 7, 7)
output = bop_9074
output2 = bop_9074
func_9080 = relay.Function([var_9072,var_9073,], output)
mod['func_9080'] = func_9080
mod = relay.transform.InferType()(mod)
var_9081 = relay.var("var_9081", dtype = "float64", shape = ())#candidate|9081|()|var|float64
var_9082 = relay.var("var_9082", dtype = "float64", shape = (1, 7, 7))#candidate|9082|(1, 7, 7)|var|float64
output = func_9080(var_9081,var_9082,)
func_9083 = relay.Function([var_9081,var_9082,], output)
mutated_mod['func_9083'] = func_9083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5849_call = mod.get_global_var('func_5849')
func_5851_call = mutated_mod.get_global_var('func_5851')
call_9102 = relay.TupleGetItem(func_5849_call(), 2)
call_9103 = relay.TupleGetItem(func_5851_call(), 2)
func_6396_call = mod.get_global_var('func_6396')
func_6397_call = mutated_mod.get_global_var('func_6397')
call_9107 = relay.TupleGetItem(func_6396_call(), 0)
call_9108 = relay.TupleGetItem(func_6397_call(), 0)
func_8135_call = mod.get_global_var('func_8135')
func_8138_call = mutated_mod.get_global_var('func_8138')
const_9123 = relay.const([-0.750056,-7.775471,9.790717,7.221277,2.838978,4.344587,9.929186,2.487658,-2.127990,-8.606945,3.007133,-2.746396,8.043794,2.554748,-5.547381,2.634436,2.667962,-2.242102,-2.009600,9.554253,-4.638822,-4.494710,7.160985,8.402569,2.225488,2.270524,8.855258,-8.447850,7.346136,-2.132691,-7.128190,-2.949023,7.821638,-7.643182,0.137043,6.972631,-7.024736,9.911980,6.098510,-5.792616,-3.800975,1.625450,2.319464,-0.978327,8.050996,2.112375,-5.539480,-0.638143,-9.710296,-5.200478,-7.730258,8.485728,6.867748,-3.097359,1.530870,7.270282,-6.701336,-9.180561,-0.626732,-0.714817,3.355290,6.702346,-5.804561,9.380504,-8.261144,-5.271917,7.415636,-3.369881,-0.633262,-8.539926,4.099037,-0.773264,-2.388810,1.183088,2.320551,5.542808,2.394779,9.203029,-4.772271,5.699460,-1.090696,5.006713,5.593385,-3.282323,-0.753971,-7.648537,-0.226972,2.904068,6.477567,-7.078129,-4.124388,0.705280,-4.074571,5.039617,8.244367,-0.125668,-8.774618,8.099054,2.116255,-3.113819,-6.446442,5.253887,2.922507,-1.923097,3.970759,5.897808,-0.930333,-4.485313,6.481879,1.051632,-9.944859,-1.120223,9.366287,-2.816822,4.512328,-4.711728,3.513135,1.797941,-1.882632,2.138571,-3.074602,2.423620,6.267923,4.893900,-7.280287,2.738711,-5.820061,8.446977,-6.451783,-8.297002,-6.006793,3.335660,-0.100344,-0.423188,-2.321313,4.337790,3.318501,8.855195,-1.438978,0.629161,1.901091,6.951262,8.161715,2.948421,-7.739446,9.102266,-5.557853,4.239598,0.279484,6.863439,9.632730,-7.454992,-5.039403,-0.462767,2.898867,6.813273,-1.895373,-0.108753,1.511148,6.313725,-5.085074,2.458865,-1.961328,1.976252,-4.933640,6.844077,0.591852,-3.944328,-5.254469], dtype = "float64")#candidate|9123|(169,)|const|float64
call_9122 = relay.TupleGetItem(func_8135_call(relay.reshape(const_9123.astype('float64'), [169,])), 4)
call_9124 = relay.TupleGetItem(func_8138_call(relay.reshape(const_9123.astype('float64'), [169,])), 4)
func_8220_call = mod.get_global_var('func_8220')
func_8221_call = mutated_mod.get_global_var('func_8221')
call_9138 = relay.TupleGetItem(func_8220_call(), 0)
call_9139 = relay.TupleGetItem(func_8221_call(), 0)
output = relay.Tuple([call_9102,call_9107,call_9122,const_9123,call_9138,])
output2 = relay.Tuple([call_9103,call_9108,call_9124,const_9123,call_9139,])
func_9140 = relay.Function([], output)
mod['func_9140'] = func_9140
mod = relay.transform.InferType()(mod)
mutated_mod['func_9140'] = func_9140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9140_call = mutated_mod.get_global_var('func_9140')
call_9141 = func_9140_call()
output = call_9141
func_9142 = relay.Function([], output)
mutated_mod['func_9142'] = func_9142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8892_call = mod.get_global_var('func_8892')
func_8893_call = mutated_mod.get_global_var('func_8893')
call_9200 = relay.TupleGetItem(func_8892_call(), 1)
call_9201 = relay.TupleGetItem(func_8893_call(), 1)
func_6241_call = mod.get_global_var('func_6241')
func_6245_call = mutated_mod.get_global_var('func_6245')
var_9211 = relay.var("var_9211", dtype = "float32", shape = (7,))#candidate|9211|(7,)|var|float32
var_9212 = relay.var("var_9212", dtype = "int8", shape = (192,))#candidate|9212|(192,)|var|int8
call_9210 = relay.TupleGetItem(func_6241_call(relay.reshape(var_9211.astype('float32'), [7,]), relay.reshape(var_9212.astype('int8'), [2, 96]), ), 1)
call_9213 = relay.TupleGetItem(func_6245_call(relay.reshape(var_9211.astype('float32'), [7,]), relay.reshape(var_9212.astype('int8'), [2, 96]), ), 1)
var_9222 = relay.var("var_9222", dtype = "uint8", shape = (7, 15, 16))#candidate|9222|(7, 15, 16)|var|uint8
bop_9223 = relay.floor_mod(call_9210.astype('float64'), var_9222.astype('float64')) # shape=(7, 15, 16)
bop_9226 = relay.floor_mod(call_9213.astype('float64'), var_9222.astype('float64')) # shape=(7, 15, 16)
output = relay.Tuple([call_9200,var_9211,var_9212,bop_9223,])
output2 = relay.Tuple([call_9201,var_9211,var_9212,bop_9226,])
func_9234 = relay.Function([var_9211,var_9212,var_9222,], output)
mod['func_9234'] = func_9234
mod = relay.transform.InferType()(mod)
mutated_mod['func_9234'] = func_9234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9234_call = mutated_mod.get_global_var('func_9234')
var_9236 = relay.var("var_9236", dtype = "float32", shape = (7,))#candidate|9236|(7,)|var|float32
var_9237 = relay.var("var_9237", dtype = "int8", shape = (192,))#candidate|9237|(192,)|var|int8
var_9238 = relay.var("var_9238", dtype = "uint8", shape = (7, 15, 16))#candidate|9238|(7, 15, 16)|var|uint8
call_9235 = func_9234_call(var_9236,var_9237,var_9238,)
output = call_9235
func_9239 = relay.Function([var_9236,var_9237,var_9238,], output)
mutated_mod['func_9239'] = func_9239
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9257 = relay.const([[[-9.009290,1.476231,0.165565,-9.606567,-1.916303,9.889715,-4.002705,8.392656,-8.659534,-3.278758],[-3.034376,-3.683994,8.002202,-2.201333,5.527086,-0.161539,5.108364,-7.896216,2.225777,6.313340],[7.002869,0.038781,-2.262561,1.255193,5.761972,8.003796,-9.399296,6.637665,9.347397,-9.341198]]], dtype = "float64")#candidate|9257|(1, 3, 10)|const|float64
uop_9258 = relay.sinh(const_9257.astype('float64')) # shape=(1, 3, 10)
func_8691_call = mod.get_global_var('func_8691')
func_8692_call = mutated_mod.get_global_var('func_8692')
call_9261 = func_8691_call()
call_9262 = func_8691_call()
func_5174_call = mod.get_global_var('func_5174')
func_5175_call = mutated_mod.get_global_var('func_5175')
call_9265 = relay.TupleGetItem(func_5174_call(), 1)
call_9266 = relay.TupleGetItem(func_5175_call(), 1)
uop_9267 = relay.sin(uop_9258.astype('float32')) # shape=(1, 3, 10)
output = relay.Tuple([call_9261,call_9265,uop_9267,])
output2 = relay.Tuple([call_9262,call_9266,uop_9267,])
func_9269 = relay.Function([], output)
mod['func_9269'] = func_9269
mod = relay.transform.InferType()(mod)
mutated_mod['func_9269'] = func_9269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9269_call = mutated_mod.get_global_var('func_9269')
call_9270 = func_9269_call()
output = call_9270
func_9271 = relay.Function([], output)
mutated_mod['func_9271'] = func_9271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5887_call = mod.get_global_var('func_5887')
func_5889_call = mutated_mod.get_global_var('func_5889')
call_9321 = func_5887_call()
call_9322 = func_5887_call()
uop_9324 = relay.sinh(call_9321.astype('float64')) # shape=(945,)
uop_9326 = relay.sinh(call_9322.astype('float64')) # shape=(945,)
output = relay.Tuple([uop_9324,])
output2 = relay.Tuple([uop_9326,])
func_9327 = relay.Function([], output)
mod['func_9327'] = func_9327
mod = relay.transform.InferType()(mod)
mutated_mod['func_9327'] = func_9327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9327_call = mutated_mod.get_global_var('func_9327')
call_9328 = func_9327_call()
output = call_9328
func_9329 = relay.Function([], output)
mutated_mod['func_9329'] = func_9329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5174_call = mod.get_global_var('func_5174')
func_5175_call = mutated_mod.get_global_var('func_5175')
call_9385 = relay.TupleGetItem(func_5174_call(), 2)
call_9386 = relay.TupleGetItem(func_5175_call(), 2)
func_4351_call = mod.get_global_var('func_4351')
func_4355_call = mutated_mod.get_global_var('func_4355')
var_9393 = relay.var("var_9393", dtype = "int64", shape = (720,))#candidate|9393|(720,)|var|int64
call_9392 = relay.TupleGetItem(func_4351_call(relay.reshape(var_9393.astype('int64'), [4, 180]), relay.reshape(call_9385.astype('float64'), [945,]), ), 2)
call_9394 = relay.TupleGetItem(func_4355_call(relay.reshape(var_9393.astype('int64'), [4, 180]), relay.reshape(call_9385.astype('float64'), [945,]), ), 2)
output = relay.Tuple([call_9385,call_9392,var_9393,])
output2 = relay.Tuple([call_9386,call_9394,var_9393,])
func_9407 = relay.Function([var_9393,], output)
mod['func_9407'] = func_9407
mod = relay.transform.InferType()(mod)
mutated_mod['func_9407'] = func_9407
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9408 = relay.var("var_9408", dtype = "int64", shape = (720,))#candidate|9408|(720,)|var|int64
func_9407_call = mutated_mod.get_global_var('func_9407')
call_9409 = func_9407_call(var_9408)
output = call_9409
func_9410 = relay.Function([var_9408], output)
mutated_mod['func_9410'] = func_9410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9327_call = mod.get_global_var('func_9327')
func_9329_call = mutated_mod.get_global_var('func_9329')
call_9412 = relay.TupleGetItem(func_9327_call(), 0)
call_9413 = relay.TupleGetItem(func_9329_call(), 0)
func_5092_call = mod.get_global_var('func_5092')
func_5093_call = mutated_mod.get_global_var('func_5093')
call_9435 = func_5092_call()
call_9436 = func_5092_call()
output = relay.Tuple([call_9412,call_9435,])
output2 = relay.Tuple([call_9413,call_9436,])
func_9438 = relay.Function([], output)
mod['func_9438'] = func_9438
mod = relay.transform.InferType()(mod)
output = func_9438()
func_9439 = relay.Function([], output)
mutated_mod['func_9439'] = func_9439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8535_call = mod.get_global_var('func_8535')
func_8536_call = mutated_mod.get_global_var('func_8536')
call_9443 = relay.TupleGetItem(func_8535_call(), 0)
call_9444 = relay.TupleGetItem(func_8536_call(), 0)
output = relay.Tuple([call_9443,])
output2 = relay.Tuple([call_9444,])
func_9445 = relay.Function([], output)
mod['func_9445'] = func_9445
mod = relay.transform.InferType()(mod)
mutated_mod['func_9445'] = func_9445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9445_call = mutated_mod.get_global_var('func_9445')
call_9446 = func_9445_call()
output = call_9446
func_9447 = relay.Function([], output)
mutated_mod['func_9447'] = func_9447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8892_call = mod.get_global_var('func_8892')
func_8893_call = mutated_mod.get_global_var('func_8893')
call_9474 = relay.TupleGetItem(func_8892_call(), 0)
call_9475 = relay.TupleGetItem(func_8893_call(), 0)
func_8951_call = mod.get_global_var('func_8951')
func_8954_call = mutated_mod.get_global_var('func_8954')
var_9489 = relay.var("var_9489", dtype = "float32", shape = (72, 4))#candidate|9489|(72, 4)|var|float32
call_9488 = relay.TupleGetItem(func_8951_call(relay.reshape(var_9489.astype('float32'), [2, 144])), 1)
call_9490 = relay.TupleGetItem(func_8954_call(relay.reshape(var_9489.astype('float32'), [2, 144])), 1)
output = relay.Tuple([call_9474,call_9488,var_9489,])
output2 = relay.Tuple([call_9475,call_9490,var_9489,])
func_9492 = relay.Function([var_9489,], output)
mod['func_9492'] = func_9492
mod = relay.transform.InferType()(mod)
mutated_mod['func_9492'] = func_9492
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9493 = relay.var("var_9493", dtype = "float32", shape = (72, 4))#candidate|9493|(72, 4)|var|float32
func_9492_call = mutated_mod.get_global_var('func_9492')
call_9494 = func_9492_call(var_9493)
output = call_9494
func_9495 = relay.Function([var_9493], output)
mutated_mod['func_9495'] = func_9495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6452_call = mod.get_global_var('func_6452')
func_6454_call = mutated_mod.get_global_var('func_6454')
call_9508 = func_6452_call()
call_9509 = func_6452_call()
output = call_9508
output2 = call_9509
func_9516 = relay.Function([], output)
mod['func_9516'] = func_9516
mod = relay.transform.InferType()(mod)
mutated_mod['func_9516'] = func_9516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9516_call = mutated_mod.get_global_var('func_9516')
call_9517 = func_9516_call()
output = call_9517
func_9518 = relay.Function([], output)
mutated_mod['func_9518'] = func_9518
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9522 = relay.var("var_9522", dtype = "float32", shape = (11, 7, 16))#candidate|9522|(11, 7, 16)|var|float32
uop_9523 = relay.sin(var_9522.astype('float32')) # shape=(11, 7, 16)
func_7010_call = mod.get_global_var('func_7010')
func_7014_call = mutated_mod.get_global_var('func_7014')
var_9548 = relay.var("var_9548", dtype = "float64", shape = (945,))#candidate|9548|(945,)|var|float64
var_9549 = relay.var("var_9549", dtype = "float64", shape = (2, 1092))#candidate|9549|(2, 1092)|var|float64
call_9547 = relay.TupleGetItem(func_7010_call(relay.reshape(var_9548.astype('float64'), [7, 9, 15]), relay.reshape(var_9549.astype('float64'), [2184,]), ), 4)
call_9550 = relay.TupleGetItem(func_7014_call(relay.reshape(var_9548.astype('float64'), [7, 9, 15]), relay.reshape(var_9549.astype('float64'), [2184,]), ), 4)
output = relay.Tuple([uop_9523,call_9547,var_9548,var_9549,])
output2 = relay.Tuple([uop_9523,call_9550,var_9548,var_9549,])
func_9553 = relay.Function([var_9522,var_9548,var_9549,], output)
mod['func_9553'] = func_9553
mod = relay.transform.InferType()(mod)
var_9554 = relay.var("var_9554", dtype = "float32", shape = (11, 7, 16))#candidate|9554|(11, 7, 16)|var|float32
var_9555 = relay.var("var_9555", dtype = "float64", shape = (945,))#candidate|9555|(945,)|var|float64
var_9556 = relay.var("var_9556", dtype = "float64", shape = (2, 1092))#candidate|9556|(2, 1092)|var|float64
output = func_9553(var_9554,var_9555,var_9556,)
func_9557 = relay.Function([var_9554,var_9555,var_9556,], output)
mutated_mod['func_9557'] = func_9557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6542_call = mod.get_global_var('func_6542')
func_6543_call = mutated_mod.get_global_var('func_6543')
call_9589 = relay.TupleGetItem(func_6542_call(), 2)
call_9590 = relay.TupleGetItem(func_6543_call(), 2)
func_8612_call = mod.get_global_var('func_8612')
func_8614_call = mutated_mod.get_global_var('func_8614')
call_9594 = func_8612_call()
call_9595 = func_8612_call()
var_9606 = relay.var("var_9606", dtype = "float64", shape = (169,))#candidate|9606|(169,)|var|float64
bop_9607 = relay.less_equal(call_9589.astype('bool'), relay.reshape(var_9606.astype('bool'), relay.shape_of(call_9589))) # shape=(169,)
bop_9610 = relay.less_equal(call_9590.astype('bool'), relay.reshape(var_9606.astype('bool'), relay.shape_of(call_9590))) # shape=(169,)
func_8504_call = mod.get_global_var('func_8504')
func_8505_call = mutated_mod.get_global_var('func_8505')
call_9611 = relay.TupleGetItem(func_8504_call(), 1)
call_9612 = relay.TupleGetItem(func_8505_call(), 1)
func_7464_call = mod.get_global_var('func_7464')
func_7467_call = mutated_mod.get_global_var('func_7467')
call_9621 = relay.TupleGetItem(func_7464_call(relay.reshape(call_9594.astype('float64'), [945,])), 1)
call_9622 = relay.TupleGetItem(func_7467_call(relay.reshape(call_9594.astype('float64'), [945,])), 1)
func_9140_call = mod.get_global_var('func_9140')
func_9142_call = mutated_mod.get_global_var('func_9142')
call_9643 = relay.TupleGetItem(func_9140_call(), 3)
call_9644 = relay.TupleGetItem(func_9142_call(), 3)
output = relay.Tuple([call_9594,bop_9607,call_9611,call_9621,call_9643,])
output2 = relay.Tuple([call_9595,bop_9610,call_9612,call_9622,call_9644,])
func_9650 = relay.Function([var_9606,], output)
mod['func_9650'] = func_9650
mod = relay.transform.InferType()(mod)
var_9651 = relay.var("var_9651", dtype = "float64", shape = (169,))#candidate|9651|(169,)|var|float64
output = func_9650(var_9651)
func_9652 = relay.Function([var_9651], output)
mutated_mod['func_9652'] = func_9652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8612_call = mod.get_global_var('func_8612')
func_8614_call = mutated_mod.get_global_var('func_8614')
call_9663 = func_8612_call()
call_9664 = func_8612_call()
func_6396_call = mod.get_global_var('func_6396')
func_6397_call = mutated_mod.get_global_var('func_6397')
call_9673 = relay.TupleGetItem(func_6396_call(), 0)
call_9674 = relay.TupleGetItem(func_6397_call(), 0)
output = relay.Tuple([call_9663,call_9673,])
output2 = relay.Tuple([call_9664,call_9674,])
func_9691 = relay.Function([], output)
mod['func_9691'] = func_9691
mod = relay.transform.InferType()(mod)
mutated_mod['func_9691'] = func_9691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9691_call = mutated_mod.get_global_var('func_9691')
call_9692 = func_9691_call()
output = call_9692
func_9693 = relay.Function([], output)
mutated_mod['func_9693'] = func_9693
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9717 = relay.var("var_9717", dtype = "uint32", shape = (4, 9, 15))#candidate|9717|(4, 9, 15)|var|uint32
var_9718 = relay.var("var_9718", dtype = "uint32", shape = (4, 9, 15))#candidate|9718|(4, 9, 15)|var|uint32
bop_9719 = relay.maximum(var_9717.astype('uint32'), relay.reshape(var_9718.astype('uint32'), relay.shape_of(var_9717))) # shape=(4, 9, 15)
output = relay.Tuple([bop_9719,])
output2 = relay.Tuple([bop_9719,])
func_9739 = relay.Function([var_9717,var_9718,], output)
mod['func_9739'] = func_9739
mod = relay.transform.InferType()(mod)
mutated_mod['func_9739'] = func_9739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9739_call = mutated_mod.get_global_var('func_9739')
var_9741 = relay.var("var_9741", dtype = "uint32", shape = (4, 9, 15))#candidate|9741|(4, 9, 15)|var|uint32
var_9742 = relay.var("var_9742", dtype = "uint32", shape = (4, 9, 15))#candidate|9742|(4, 9, 15)|var|uint32
call_9740 = func_9739_call(var_9741,var_9742,)
output = call_9740
func_9743 = relay.Function([var_9741,var_9742,], output)
mutated_mod['func_9743'] = func_9743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5092_call = mod.get_global_var('func_5092')
func_5093_call = mutated_mod.get_global_var('func_5093')
call_9751 = func_5092_call()
call_9752 = func_5092_call()
output = call_9751
output2 = call_9752
func_9766 = relay.Function([], output)
mod['func_9766'] = func_9766
mod = relay.transform.InferType()(mod)
mutated_mod['func_9766'] = func_9766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9766_call = mutated_mod.get_global_var('func_9766')
call_9767 = func_9766_call()
output = call_9767
func_9768 = relay.Function([], output)
mutated_mod['func_9768'] = func_9768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8691_call = mod.get_global_var('func_8691')
func_8692_call = mutated_mod.get_global_var('func_8692')
call_9811 = func_8691_call()
call_9812 = func_8691_call()
output = call_9811
output2 = call_9812
func_9823 = relay.Function([], output)
mod['func_9823'] = func_9823
mod = relay.transform.InferType()(mod)
mutated_mod['func_9823'] = func_9823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9823_call = mutated_mod.get_global_var('func_9823')
call_9824 = func_9823_call()
output = call_9824
func_9825 = relay.Function([], output)
mutated_mod['func_9825'] = func_9825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8691_call = mod.get_global_var('func_8691')
func_8692_call = mutated_mod.get_global_var('func_8692')
call_9839 = func_8691_call()
call_9840 = func_8691_call()
output = relay.Tuple([call_9839,])
output2 = relay.Tuple([call_9840,])
func_9854 = relay.Function([], output)
mod['func_9854'] = func_9854
mod = relay.transform.InferType()(mod)
mutated_mod['func_9854'] = func_9854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9854_call = mutated_mod.get_global_var('func_9854')
call_9855 = func_9854_call()
output = call_9855
func_9856 = relay.Function([], output)
mutated_mod['func_9856'] = func_9856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7026_call = mod.get_global_var('func_7026')
func_7027_call = mutated_mod.get_global_var('func_7027')
call_9866 = relay.TupleGetItem(func_7026_call(), 0)
call_9867 = relay.TupleGetItem(func_7027_call(), 0)
func_6376_call = mod.get_global_var('func_6376')
func_6380_call = mutated_mod.get_global_var('func_6380')
var_9869 = relay.var("var_9869", dtype = "float32", shape = (135,))#candidate|9869|(135,)|var|float32
const_9870 = relay.const([4.261745,-1.648242,5.336256,1.227414,-8.652404,-4.118897,1.976789,7.429159,-7.505633,7.599087,8.134822,-8.303245,-0.815226,-7.217409,-2.968239,-6.527259,-0.359909,-6.331287,5.018598,-4.961306,5.103595,-3.135377,-8.624337,3.644733,8.786110,-5.504925,1.610302,2.190656,-9.120738,1.201906,-8.243178,5.053860,-3.008089,3.053602,3.266522,-2.071363,-0.013870,5.296266,-1.371471,2.810689,3.480405,-8.947177,4.247833,-5.823532,7.508833,-7.652298,6.689098,4.128040,5.727733,-0.222105,-1.739511,7.030804,6.389536,1.126820,-2.858316,2.023516,5.922782,-9.188973,0.822900,-8.730440,-7.454757,0.222892,-3.966924,-0.701349,4.222783,-0.562419,4.229253,-1.807041,3.934256,-0.350077,4.652234,5.533287,-4.590378,4.749845,8.592989,-8.068622,-6.961856,6.058827,-7.015906,-0.098139,-5.384435,7.503915,-3.052562,-7.604145,-6.397011,9.496013,1.673950,-2.921494,-7.040734,6.195538,1.916981,-5.374909,5.299811,4.639247,1.152477,1.648661,-7.286965,9.333797,5.474930,-6.517952,-3.711074,1.078933,4.933204,0.729599,0.867522,7.020558,4.525217,-6.444311,4.962572,-7.682810,1.259923,1.991955,9.699627,-3.233765,-0.544978,-4.188546,8.293494,-7.007425,5.163383,-3.458192,9.972817,8.762479,3.645755,6.281558,2.655460,4.182458,-1.018473,6.483635,9.548847,-7.839255,-2.987863,3.865728,-6.442304,-3.809420,7.377737,-4.520873,-2.055729,0.389400,9.010095,6.687353,5.925096,0.040063,6.119311,1.712388,-8.926421,-7.849892,-4.482886,-6.461751,-9.773903,-9.302129,-4.005135,-1.545065,-2.610198,-4.094312,-7.544913,8.916556,0.245691,1.806822,3.542947,9.705487,-5.773959,-1.242533,0.067374,8.403166,-0.612279,-8.448665,-2.289826,9.310962,-6.343346], dtype = "float64")#candidate|9870|(169,)|const|float64
call_9868 = relay.TupleGetItem(func_6376_call(relay.reshape(var_9869.astype('float32'), [9, 15, 1]), relay.reshape(const_9870.astype('float64'), [169,]), ), 0)
call_9871 = relay.TupleGetItem(func_6380_call(relay.reshape(var_9869.astype('float32'), [9, 15, 1]), relay.reshape(const_9870.astype('float64'), [169,]), ), 0)
output = relay.Tuple([call_9866,call_9868,var_9869,const_9870,])
output2 = relay.Tuple([call_9867,call_9871,var_9869,const_9870,])
func_9883 = relay.Function([var_9869,], output)
mod['func_9883'] = func_9883
mod = relay.transform.InferType()(mod)
var_9884 = relay.var("var_9884", dtype = "float32", shape = (135,))#candidate|9884|(135,)|var|float32
output = func_9883(var_9884)
func_9885 = relay.Function([var_9884], output)
mutated_mod['func_9885'] = func_9885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7406_call = mod.get_global_var('func_7406')
func_7408_call = mutated_mod.get_global_var('func_7408')
call_9940 = func_7406_call()
call_9941 = func_7406_call()
output = relay.Tuple([call_9940,])
output2 = relay.Tuple([call_9941,])
func_9946 = relay.Function([], output)
mod['func_9946'] = func_9946
mod = relay.transform.InferType()(mod)
mutated_mod['func_9946'] = func_9946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9946_call = mutated_mod.get_global_var('func_9946')
call_9947 = func_9946_call()
output = call_9947
func_9948 = relay.Function([], output)
mutated_mod['func_9948'] = func_9948
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9988 = relay.var("var_9988", dtype = "int8", shape = (3, 6, 16))#candidate|9988|(3, 6, 16)|var|int8
const_9989 = relay.const([[[8,6,2,-1,2,-10,-4,-8,-2,-8,-10,-10,6,5,-4,-3],[5,-2,-3,4,9,-8,7,-9,-7,-2,5,-3,5,5,7,2],[7,-10,8,-6,8,-1,8,-3,-9,1,6,3,4,-1,-5,-4],[6,3,-8,1,2,10,-2,-4,-8,4,-1,-3,6,5,-6,6],[-2,6,-7,-7,-10,1,-10,4,-2,-1,-5,5,10,-3,-8,8],[7,2,-2,-6,-8,4,-2,7,7,6,-2,-3,2,1,-4,-1]],[[-5,-6,-4,7,9,-1,2,-6,5,10,4,2,-9,7,-3,4],[-3,-3,3,10,-3,-5,-8,5,5,-3,-1,7,9,5,4,10],[-2,-4,-2,8,-5,4,6,-9,7,1,10,-7,-4,2,2,3],[4,-10,2,-4,3,-2,-7,7,6,1,-6,6,-3,-7,-10,-10],[8,1,-9,8,-4,8,-5,7,-5,-7,9,2,-2,8,9,-6],[-9,8,-5,10,1,1,7,7,-6,-4,8,8,4,1,3,2]],[[-8,10,9,1,9,3,-1,7,-5,-2,-6,-10,-6,6,10,-1],[-8,-2,-10,6,6,-5,-10,-4,-3,5,-9,-10,9,4,3,10],[8,-10,-4,10,-6,8,-5,-10,-1,8,3,6,-5,3,-8,1],[4,4,6,9,9,7,-2,-4,3,4,1,7,-2,4,-3,4],[6,7,-4,-5,6,8,-10,-2,4,8,9,1,-6,-9,-4,8],[5,-4,-2,1,-3,-7,-3,6,8,-5,1,-6,5,-8,10,-8]]], dtype = "int8")#candidate|9989|(3, 6, 16)|const|int8
bop_9990 = relay.multiply(var_9988.astype('int8'), relay.reshape(const_9989.astype('int8'), relay.shape_of(var_9988))) # shape=(3, 6, 16)
bop_10005 = relay.logical_xor(const_9989.astype('uint32'), relay.reshape(bop_9990.astype('uint32'), relay.shape_of(const_9989))) # shape=(3, 6, 16)
output = bop_10005
output2 = bop_10005
func_10012 = relay.Function([var_9988,], output)
mod['func_10012'] = func_10012
mod = relay.transform.InferType()(mod)
var_10013 = relay.var("var_10013", dtype = "int8", shape = (3, 6, 16))#candidate|10013|(3, 6, 16)|var|int8
output = func_10012(var_10013)
func_10014 = relay.Function([var_10013], output)
mutated_mod['func_10014'] = func_10014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8220_call = mod.get_global_var('func_8220')
func_8221_call = mutated_mod.get_global_var('func_8221')
call_10026 = relay.TupleGetItem(func_8220_call(), 0)
call_10027 = relay.TupleGetItem(func_8221_call(), 0)
func_8908_call = mod.get_global_var('func_8908')
func_8910_call = mutated_mod.get_global_var('func_8910')
call_10030 = relay.TupleGetItem(func_8908_call(), 0)
call_10031 = relay.TupleGetItem(func_8910_call(), 0)
func_190_call = mod.get_global_var('func_190')
func_193_call = mutated_mod.get_global_var('func_193')
const_10035 = relay.const([[-9.998977,-7.131268,-1.478557,-0.308757,-4.758406,-3.347945,5.347040,7.172004,9.634306,-9.817303,-7.782094,6.445783,-0.096322,3.918942,8.493498,-3.894514,-7.937087,5.200653,-9.997754,-3.399880,0.783031,-4.497941,9.096137,-1.404781,0.695517,7.293298,-6.305631,-1.955723,5.502525,-3.844283],[-3.079205,-1.592886,5.879755,6.127631,4.114520,7.209217,-1.549408,-5.981706,7.492770,6.980505,5.151774,-0.875431,2.216799,6.236068,-2.352012,3.319411,-0.368407,4.066164,-8.490672,1.394759,-0.921925,-9.526555,-4.843551,-3.506680,6.427938,4.705392,2.425372,-8.285526,-7.381701,9.462592],[9.808610,6.384904,0.841915,-1.900637,7.844381,3.237896,-2.403028,-0.500193,-5.396929,-2.757905,-2.921092,9.029206,1.682739,3.613347,1.129629,-0.602278,8.486200,-0.637251,-2.920180,-1.700433,-9.918791,-5.405647,4.013241,-6.408034,6.408135,4.665474,-1.760901,6.017358,4.623337,7.043698],[-4.208338,0.752573,0.769372,-9.866064,-3.569373,7.259064,-4.633130,1.630465,-2.412775,-4.140460,-4.452183,-7.115187,-9.643910,-1.727124,-0.967287,-2.051284,9.438740,-8.658965,0.701730,7.529053,-0.583471,-1.208793,-4.062194,-5.869422,7.733262,-4.044163,9.433056,-2.825592,5.706274,3.348449],[-2.170358,-0.341443,6.127847,-7.474311,6.967495,2.378407,-2.886100,-4.564843,4.017249,-1.666058,1.830651,6.086676,5.980907,-2.391107,-3.778065,-9.418965,1.810954,0.723062,2.017839,3.324521,2.054994,-5.582196,4.901588,-1.818066,-2.514416,6.345519,6.788413,-5.366193,0.555220,5.310490],[-8.082430,-1.078853,-1.175748,-6.443270,-8.912760,-0.487101,-3.538888,9.533898,-6.137660,6.965434,-6.861346,-1.671260,8.074561,-5.755100,-1.235530,-4.093601,2.538084,-2.488918,-1.350257,-6.835793,5.560639,-4.472692,8.655245,7.799889,0.351583,-5.113795,5.714529,-4.292028,5.387663,9.973804]], dtype = "float32")#candidate|10035|(6, 30)|const|float32
call_10034 = relay.TupleGetItem(func_190_call(relay.reshape(const_10035.astype('float32'), [5, 9, 4])), 0)
call_10036 = relay.TupleGetItem(func_193_call(relay.reshape(const_10035.astype('float32'), [5, 9, 4])), 0)
output = relay.Tuple([call_10026,call_10030,call_10034,const_10035,])
output2 = relay.Tuple([call_10027,call_10031,call_10036,const_10035,])
func_10048 = relay.Function([], output)
mod['func_10048'] = func_10048
mod = relay.transform.InferType()(mod)
mutated_mod['func_10048'] = func_10048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10048_call = mutated_mod.get_global_var('func_10048')
call_10049 = func_10048_call()
output = call_10049
func_10050 = relay.Function([], output)
mutated_mod['func_10050'] = func_10050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6550_call = mod.get_global_var('func_6550')
func_6552_call = mutated_mod.get_global_var('func_6552')
call_10051 = func_6550_call()
call_10052 = func_6550_call()
func_5742_call = mod.get_global_var('func_5742')
func_5744_call = mutated_mod.get_global_var('func_5744')
call_10070 = relay.TupleGetItem(func_5742_call(), 0)
call_10071 = relay.TupleGetItem(func_5744_call(), 0)
func_4100_call = mod.get_global_var('func_4100')
func_4105_call = mutated_mod.get_global_var('func_4105')
var_10084 = relay.var("var_10084", dtype = "int64", shape = (720,))#candidate|10084|(720,)|var|int64
call_10083 = relay.TupleGetItem(func_4100_call(relay.reshape(var_10084.astype('int64'), [8, 9, 10]), relay.reshape(var_10084.astype('int64'), [8, 9, 10]), relay.reshape(call_10070.astype('float64'), [945,]), ), 0)
call_10085 = relay.TupleGetItem(func_4105_call(relay.reshape(var_10084.astype('int64'), [8, 9, 10]), relay.reshape(var_10084.astype('int64'), [8, 9, 10]), relay.reshape(call_10070.astype('float64'), [945,]), ), 0)
output = relay.Tuple([call_10051,call_10070,call_10083,var_10084,])
output2 = relay.Tuple([call_10052,call_10071,call_10085,var_10084,])
func_10104 = relay.Function([var_10084,], output)
mod['func_10104'] = func_10104
mod = relay.transform.InferType()(mod)
mutated_mod['func_10104'] = func_10104
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10105 = relay.var("var_10105", dtype = "int64", shape = (720,))#candidate|10105|(720,)|var|int64
func_10104_call = mutated_mod.get_global_var('func_10104')
call_10106 = func_10104_call(var_10105)
output = call_10106
func_10107 = relay.Function([var_10105], output)
mutated_mod['func_10107'] = func_10107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5742_call = mod.get_global_var('func_5742')
func_5744_call = mutated_mod.get_global_var('func_5744')
call_10109 = relay.TupleGetItem(func_5742_call(), 1)
call_10110 = relay.TupleGetItem(func_5744_call(), 1)
func_1752_call = mod.get_global_var('func_1752')
func_1754_call = mutated_mod.get_global_var('func_1754')
var_10112 = relay.var("var_10112", dtype = "float32", shape = ())#candidate|10112|()|var|float32
call_10111 = relay.TupleGetItem(func_1752_call(relay.reshape(var_10112.astype('float32'), [])), 0)
call_10113 = relay.TupleGetItem(func_1754_call(relay.reshape(var_10112.astype('float32'), [])), 0)
func_4661_call = mod.get_global_var('func_4661')
func_4663_call = mutated_mod.get_global_var('func_4663')
call_10118 = relay.TupleGetItem(func_4661_call(), 4)
call_10119 = relay.TupleGetItem(func_4663_call(), 4)
func_9234_call = mod.get_global_var('func_9234')
func_9239_call = mutated_mod.get_global_var('func_9239')
var_10121 = relay.var("var_10121", dtype = "float32", shape = (7,))#candidate|10121|(7,)|var|float32
var_10122 = relay.var("var_10122", dtype = "int8", shape = (48, 4))#candidate|10122|(48, 4)|var|int8
var_10123 = relay.var("var_10123", dtype = "uint8", shape = (1680,))#candidate|10123|(1680,)|var|uint8
call_10120 = relay.TupleGetItem(func_9234_call(relay.reshape(var_10121.astype('float32'), [7,]), relay.reshape(var_10122.astype('int8'), [192,]), relay.reshape(var_10123.astype('uint8'), [7, 15, 16]), ), 3)
call_10124 = relay.TupleGetItem(func_9239_call(relay.reshape(var_10121.astype('float32'), [7,]), relay.reshape(var_10122.astype('int8'), [192,]), relay.reshape(var_10123.astype('uint8'), [7, 15, 16]), ), 3)
bop_10127 = relay.bitwise_and(var_10122.astype('uint64'), call_10118.astype('uint64')) # shape=(48, 4)
bop_10130 = relay.bitwise_and(var_10122.astype('uint64'), call_10119.astype('uint64')) # shape=(48, 4)
output = relay.Tuple([call_10109,call_10111,var_10112,call_10120,var_10121,var_10123,bop_10127,])
output2 = relay.Tuple([call_10110,call_10113,var_10112,call_10124,var_10121,var_10123,bop_10130,])
func_10141 = relay.Function([var_10112,var_10121,var_10122,var_10123,], output)
mod['func_10141'] = func_10141
mod = relay.transform.InferType()(mod)
mutated_mod['func_10141'] = func_10141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10141_call = mutated_mod.get_global_var('func_10141')
var_10143 = relay.var("var_10143", dtype = "float32", shape = ())#candidate|10143|()|var|float32
var_10144 = relay.var("var_10144", dtype = "float32", shape = (7,))#candidate|10144|(7,)|var|float32
var_10145 = relay.var("var_10145", dtype = "int8", shape = (48, 4))#candidate|10145|(48, 4)|var|int8
var_10146 = relay.var("var_10146", dtype = "uint8", shape = (1680,))#candidate|10146|(1680,)|var|uint8
call_10142 = func_10141_call(var_10143,var_10144,var_10145,var_10146,)
output = call_10142
func_10147 = relay.Function([var_10143,var_10144,var_10145,var_10146,], output)
mutated_mod['func_10147'] = func_10147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6132_call = mod.get_global_var('func_6132')
func_6133_call = mutated_mod.get_global_var('func_6133')
call_10187 = relay.TupleGetItem(func_6132_call(), 0)
call_10188 = relay.TupleGetItem(func_6133_call(), 0)
output = call_10187
output2 = call_10188
func_10218 = relay.Function([], output)
mod['func_10218'] = func_10218
mod = relay.transform.InferType()(mod)
mutated_mod['func_10218'] = func_10218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10218_call = mutated_mod.get_global_var('func_10218')
call_10219 = func_10218_call()
output = call_10219
func_10220 = relay.Function([], output)
mutated_mod['func_10220'] = func_10220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4538_call = mod.get_global_var('func_4538')
func_4539_call = mutated_mod.get_global_var('func_4539')
call_10221 = relay.TupleGetItem(func_4538_call(), 0)
call_10222 = relay.TupleGetItem(func_4539_call(), 0)
output = call_10221
output2 = call_10222
func_10229 = relay.Function([], output)
mod['func_10229'] = func_10229
mod = relay.transform.InferType()(mod)
output = func_10229()
func_10230 = relay.Function([], output)
mutated_mod['func_10230'] = func_10230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7178_call = mod.get_global_var('func_7178')
func_7180_call = mutated_mod.get_global_var('func_7180')
call_10298 = relay.TupleGetItem(func_7178_call(), 0)
call_10299 = relay.TupleGetItem(func_7180_call(), 0)
func_8318_call = mod.get_global_var('func_8318')
func_8320_call = mutated_mod.get_global_var('func_8320')
call_10313 = func_8318_call()
call_10314 = func_8318_call()
func_9269_call = mod.get_global_var('func_9269')
func_9271_call = mutated_mod.get_global_var('func_9271')
call_10338 = relay.TupleGetItem(func_9269_call(), 0)
call_10339 = relay.TupleGetItem(func_9271_call(), 0)
func_4694_call = mod.get_global_var('func_4694')
func_4696_call = mutated_mod.get_global_var('func_4696')
call_10342 = relay.TupleGetItem(func_4694_call(), 0)
call_10343 = relay.TupleGetItem(func_4696_call(), 0)
output = relay.Tuple([call_10298,call_10313,call_10338,call_10342,])
output2 = relay.Tuple([call_10299,call_10314,call_10339,call_10343,])
func_10359 = relay.Function([], output)
mod['func_10359'] = func_10359
mod = relay.transform.InferType()(mod)
output = func_10359()
func_10360 = relay.Function([], output)
mutated_mod['func_10360'] = func_10360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7026_call = mod.get_global_var('func_7026')
func_7027_call = mutated_mod.get_global_var('func_7027')
call_10361 = relay.TupleGetItem(func_7026_call(), 0)
call_10362 = relay.TupleGetItem(func_7027_call(), 0)
func_5222_call = mod.get_global_var('func_5222')
func_5224_call = mutated_mod.get_global_var('func_5224')
const_10364 = relay.const([-1.869250,-2.923967,4.791342,3.572385,7.283658,7.801800,-8.279479,-2.306131,-0.065931,2.830539,5.064966,-8.038618,-9.282418,-8.558082,6.203996,5.985575,4.688165,-7.157162,9.842419,-6.989438,4.517327,-7.083850,4.281818,-3.096800,-4.153857,-1.092116,5.448469,-8.869172,-1.260143,9.874745,7.845350,7.861605,-1.283273,6.740724,0.737535,0.371739,3.663218,-8.878879,-2.350827,5.487263,0.884627,-1.276828,-0.571333,-9.735364,5.509505,-0.812308,-4.976003,-5.614260,6.990096,-6.110883,7.111179,6.481049,5.853744,1.933883,1.051722,1.289046,-1.006297,8.880562,-8.033770,5.572802,6.402110,-8.669899,1.558208,1.695077,-6.724513,0.406388,6.423389,2.904791,4.302115,-8.816535,5.372118,1.133642,3.502917,-2.247733,-6.303652,-9.567107,8.438760,-3.584785,4.569590,-6.805785,5.750021,8.414215,-6.216309,-0.508023,1.773556,-3.960278,-1.886871,4.778997,-5.875427,0.775209,0.588162,2.189765,6.662947,-2.472206,6.286653,-2.305908,-0.567696,3.887280,-9.059174,-0.841307,-0.988061,-0.646131,-6.573873,-9.084598,0.932167,-4.790094,9.822540,-3.842574,7.915483,8.769873,0.577175,5.771831,2.844815,-9.150260,-1.471481,-5.584369,-2.504320,4.106674,-7.341587,8.822271,-9.691750,-7.254529,1.767717,-7.857946,8.853474,9.836066,5.369771,7.104874,7.192638,2.387791,-9.610363,-1.491249,-9.906804,-8.945982,-8.412490,7.593906,6.060338,-9.644194,-5.648866,6.152326,2.652769,-9.465121,4.154580,9.468562,9.790298,6.655828,-2.834689,-5.098250,2.165182,7.837437,4.719167,-6.583821,3.637424,4.560381,5.097020,9.343571,-2.183730,-8.036851,5.979230,-5.860447,-9.925786,6.533308,-7.295708,7.588144,-9.872142,1.168487,8.635118,-5.072658,-1.805579], dtype = "float64")#candidate|10364|(169,)|const|float64
call_10363 = func_5222_call(relay.reshape(const_10364.astype('float64'), [1, 13, 13]))
call_10365 = func_5222_call(relay.reshape(const_10364.astype('float64'), [1, 13, 13]))
output = relay.Tuple([call_10361,call_10363,const_10364,])
output2 = relay.Tuple([call_10362,call_10365,const_10364,])
func_10366 = relay.Function([], output)
mod['func_10366'] = func_10366
mod = relay.transform.InferType()(mod)
output = func_10366()
func_10367 = relay.Function([], output)
mutated_mod['func_10367'] = func_10367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5092_call = mod.get_global_var('func_5092')
func_5093_call = mutated_mod.get_global_var('func_5093')
call_10404 = func_5092_call()
call_10405 = func_5092_call()
output = call_10404
output2 = call_10405
func_10419 = relay.Function([], output)
mod['func_10419'] = func_10419
mod = relay.transform.InferType()(mod)
output = func_10419()
func_10420 = relay.Function([], output)
mutated_mod['func_10420'] = func_10420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4538_call = mod.get_global_var('func_4538')
func_4539_call = mutated_mod.get_global_var('func_4539')
call_10525 = relay.TupleGetItem(func_4538_call(), 0)
call_10526 = relay.TupleGetItem(func_4539_call(), 0)
func_7464_call = mod.get_global_var('func_7464')
func_7467_call = mutated_mod.get_global_var('func_7467')
call_10544 = relay.TupleGetItem(func_7464_call(relay.reshape(call_10525.astype('float64'), [945,])), 1)
call_10545 = relay.TupleGetItem(func_7467_call(relay.reshape(call_10525.astype('float64'), [945,])), 1)
func_6608_call = mod.get_global_var('func_6608')
func_6609_call = mutated_mod.get_global_var('func_6609')
call_10548 = relay.TupleGetItem(func_6608_call(), 0)
call_10549 = relay.TupleGetItem(func_6609_call(), 0)
output = relay.Tuple([call_10525,call_10544,call_10548,])
output2 = relay.Tuple([call_10526,call_10545,call_10549,])
func_10557 = relay.Function([], output)
mod['func_10557'] = func_10557
mod = relay.transform.InferType()(mod)
output = func_10557()
func_10558 = relay.Function([], output)
mutated_mod['func_10558'] = func_10558
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10612 = relay.var("var_10612", dtype = "float64", shape = (10, 11, 10))#candidate|10612|(10, 11, 10)|var|float64
uop_10613 = relay.sqrt(var_10612.astype('float64')) # shape=(10, 11, 10)
output = relay.Tuple([uop_10613,])
output2 = relay.Tuple([uop_10613,])
func_10620 = relay.Function([var_10612,], output)
mod['func_10620'] = func_10620
mod = relay.transform.InferType()(mod)
mutated_mod['func_10620'] = func_10620
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10621 = relay.var("var_10621", dtype = "float64", shape = (10, 11, 10))#candidate|10621|(10, 11, 10)|var|float64
func_10620_call = mutated_mod.get_global_var('func_10620')
call_10622 = func_10620_call(var_10621)
output = call_10622
func_10623 = relay.Function([var_10621], output)
mutated_mod['func_10623'] = func_10623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5742_call = mod.get_global_var('func_5742')
func_5744_call = mutated_mod.get_global_var('func_5744')
call_10645 = relay.TupleGetItem(func_5742_call(), 1)
call_10646 = relay.TupleGetItem(func_5744_call(), 1)
output = call_10645
output2 = call_10646
func_10658 = relay.Function([], output)
mod['func_10658'] = func_10658
mod = relay.transform.InferType()(mod)
mutated_mod['func_10658'] = func_10658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10658_call = mutated_mod.get_global_var('func_10658')
call_10659 = func_10658_call()
output = call_10659
func_10660 = relay.Function([], output)
mutated_mod['func_10660'] = func_10660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8160_call = mod.get_global_var('func_8160')
func_8161_call = mutated_mod.get_global_var('func_8161')
call_10679 = relay.TupleGetItem(func_8160_call(), 0)
call_10680 = relay.TupleGetItem(func_8161_call(), 0)
output = call_10679
output2 = call_10680
func_10681 = relay.Function([], output)
mod['func_10681'] = func_10681
mod = relay.transform.InferType()(mod)
output = func_10681()
func_10682 = relay.Function([], output)
mutated_mod['func_10682'] = func_10682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4821_call = mod.get_global_var('func_4821')
func_4822_call = mutated_mod.get_global_var('func_4822')
call_10711 = relay.TupleGetItem(func_4821_call(), 1)
call_10712 = relay.TupleGetItem(func_4822_call(), 1)
output = relay.Tuple([call_10711,])
output2 = relay.Tuple([call_10712,])
func_10724 = relay.Function([], output)
mod['func_10724'] = func_10724
mod = relay.transform.InferType()(mod)
mutated_mod['func_10724'] = func_10724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10724_call = mutated_mod.get_global_var('func_10724')
call_10725 = func_10724_call()
output = call_10725
func_10726 = relay.Function([], output)
mutated_mod['func_10726'] = func_10726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6396_call = mod.get_global_var('func_6396')
func_6397_call = mutated_mod.get_global_var('func_6397')
call_10784 = relay.TupleGetItem(func_6396_call(), 0)
call_10785 = relay.TupleGetItem(func_6397_call(), 0)
output = relay.Tuple([call_10784,])
output2 = relay.Tuple([call_10785,])
func_10788 = relay.Function([], output)
mod['func_10788'] = func_10788
mod = relay.transform.InferType()(mod)
output = func_10788()
func_10789 = relay.Function([], output)
mutated_mod['func_10789'] = func_10789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5766_call = mod.get_global_var('func_5766')
func_5767_call = mutated_mod.get_global_var('func_5767')
call_10806 = func_5766_call()
call_10807 = func_5766_call()
output = relay.Tuple([call_10806,])
output2 = relay.Tuple([call_10807,])
func_10812 = relay.Function([], output)
mod['func_10812'] = func_10812
mod = relay.transform.InferType()(mod)
output = func_10812()
func_10813 = relay.Function([], output)
mutated_mod['func_10813'] = func_10813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4561_call = mod.get_global_var('func_4561')
func_4562_call = mutated_mod.get_global_var('func_4562')
call_10823 = relay.TupleGetItem(func_4561_call(), 0)
call_10824 = relay.TupleGetItem(func_4562_call(), 0)
output = call_10823
output2 = call_10824
func_10827 = relay.Function([], output)
mod['func_10827'] = func_10827
mod = relay.transform.InferType()(mod)
output = func_10827()
func_10828 = relay.Function([], output)
mutated_mod['func_10828'] = func_10828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7923_call = mod.get_global_var('func_7923')
func_7925_call = mutated_mod.get_global_var('func_7925')
call_10834 = relay.TupleGetItem(func_7923_call(), 1)
call_10835 = relay.TupleGetItem(func_7925_call(), 1)
func_9650_call = mod.get_global_var('func_9650')
func_9652_call = mutated_mod.get_global_var('func_9652')
var_10841 = relay.var("var_10841", dtype = "float64", shape = (169, 1))#candidate|10841|(169, 1)|var|float64
call_10840 = relay.TupleGetItem(func_9650_call(relay.reshape(var_10841.astype('float64'), [169,])), 1)
call_10842 = relay.TupleGetItem(func_9652_call(relay.reshape(var_10841.astype('float64'), [169,])), 1)
var_10845 = relay.var("var_10845", dtype = "float64", shape = (169, 10))#candidate|10845|(169, 10)|var|float64
bop_10846 = relay.mod(var_10841.astype('float64'), var_10845.astype('float64')) # shape=(169, 10)
bop_10851 = relay.multiply(var_10845.astype('uint8'), var_10841.astype('uint8')) # shape=(169, 10)
uop_10855 = relay.sqrt(bop_10846.astype('float64')) # shape=(169, 10)
bop_10861 = relay.floor_mod(uop_10855.astype('float64'), relay.reshape(bop_10846.astype('float64'), relay.shape_of(uop_10855))) # shape=(169, 10)
output = relay.Tuple([call_10834,call_10840,bop_10851,bop_10861,])
output2 = relay.Tuple([call_10835,call_10842,bop_10851,bop_10861,])
func_10869 = relay.Function([var_10841,var_10845,], output)
mod['func_10869'] = func_10869
mod = relay.transform.InferType()(mod)
mutated_mod['func_10869'] = func_10869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10869_call = mutated_mod.get_global_var('func_10869')
var_10871 = relay.var("var_10871", dtype = "float64", shape = (169, 1))#candidate|10871|(169, 1)|var|float64
var_10872 = relay.var("var_10872", dtype = "float64", shape = (169, 10))#candidate|10872|(169, 10)|var|float64
call_10870 = func_10869_call(var_10871,var_10872,)
output = call_10870
func_10873 = relay.Function([var_10871,var_10872,], output)
mutated_mod['func_10873'] = func_10873
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10875 = relay.var("var_10875", dtype = "float64", shape = (8, 13, 10))#candidate|10875|(8, 13, 10)|var|float64
uop_10876 = relay.log10(var_10875.astype('float64')) # shape=(8, 13, 10)
output = relay.Tuple([uop_10876,])
output2 = relay.Tuple([uop_10876,])
func_10879 = relay.Function([var_10875,], output)
mod['func_10879'] = func_10879
mod = relay.transform.InferType()(mod)
var_10880 = relay.var("var_10880", dtype = "float64", shape = (8, 13, 10))#candidate|10880|(8, 13, 10)|var|float64
output = func_10879(var_10880)
func_10881 = relay.Function([var_10880], output)
mutated_mod['func_10881'] = func_10881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7178_call = mod.get_global_var('func_7178')
func_7180_call = mutated_mod.get_global_var('func_7180')
call_10907 = relay.TupleGetItem(func_7178_call(), 1)
call_10908 = relay.TupleGetItem(func_7180_call(), 1)
output = relay.Tuple([call_10907,])
output2 = relay.Tuple([call_10908,])
func_10936 = relay.Function([], output)
mod['func_10936'] = func_10936
mod = relay.transform.InferType()(mod)
output = func_10936()
func_10937 = relay.Function([], output)
mutated_mod['func_10937'] = func_10937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4313_call = mod.get_global_var('func_4313')
func_4315_call = mutated_mod.get_global_var('func_4315')
call_10950 = relay.TupleGetItem(func_4313_call(), 0)
call_10951 = relay.TupleGetItem(func_4315_call(), 0)
func_10724_call = mod.get_global_var('func_10724')
func_10726_call = mutated_mod.get_global_var('func_10726')
call_10959 = relay.TupleGetItem(func_10724_call(), 0)
call_10960 = relay.TupleGetItem(func_10726_call(), 0)
func_7713_call = mod.get_global_var('func_7713')
func_7715_call = mutated_mod.get_global_var('func_7715')
call_10967 = relay.TupleGetItem(func_7713_call(), 0)
call_10968 = relay.TupleGetItem(func_7715_call(), 0)
func_7026_call = mod.get_global_var('func_7026')
func_7027_call = mutated_mod.get_global_var('func_7027')
call_10976 = relay.TupleGetItem(func_7026_call(), 0)
call_10977 = relay.TupleGetItem(func_7027_call(), 0)
output = relay.Tuple([call_10950,call_10959,call_10967,call_10976,])
output2 = relay.Tuple([call_10951,call_10960,call_10968,call_10977,])
func_10980 = relay.Function([], output)
mod['func_10980'] = func_10980
mod = relay.transform.InferType()(mod)
mutated_mod['func_10980'] = func_10980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10980_call = mutated_mod.get_global_var('func_10980')
call_10981 = func_10980_call()
output = call_10981
func_10982 = relay.Function([], output)
mutated_mod['func_10982'] = func_10982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9946_call = mod.get_global_var('func_9946')
func_9948_call = mutated_mod.get_global_var('func_9948')
call_11067 = relay.TupleGetItem(func_9946_call(), 0)
call_11068 = relay.TupleGetItem(func_9948_call(), 0)
output = relay.Tuple([call_11067,])
output2 = relay.Tuple([call_11068,])
func_11070 = relay.Function([], output)
mod['func_11070'] = func_11070
mod = relay.transform.InferType()(mod)
output = func_11070()
func_11071 = relay.Function([], output)
mutated_mod['func_11071'] = func_11071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8220_call = mod.get_global_var('func_8220')
func_8221_call = mutated_mod.get_global_var('func_8221')
call_11082 = relay.TupleGetItem(func_8220_call(), 0)
call_11083 = relay.TupleGetItem(func_8221_call(), 0)
output = call_11082
output2 = call_11083
func_11109 = relay.Function([], output)
mod['func_11109'] = func_11109
mod = relay.transform.InferType()(mod)
output = func_11109()
func_11110 = relay.Function([], output)
mutated_mod['func_11110'] = func_11110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7406_call = mod.get_global_var('func_7406')
func_7408_call = mutated_mod.get_global_var('func_7408')
call_11131 = func_7406_call()
call_11132 = func_7406_call()
output = call_11131
output2 = call_11132
func_11134 = relay.Function([], output)
mod['func_11134'] = func_11134
mod = relay.transform.InferType()(mod)
output = func_11134()
func_11135 = relay.Function([], output)
mutated_mod['func_11135'] = func_11135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8908_call = mod.get_global_var('func_8908')
func_8910_call = mutated_mod.get_global_var('func_8910')
call_11173 = relay.TupleGetItem(func_8908_call(), 4)
call_11174 = relay.TupleGetItem(func_8910_call(), 4)
func_8318_call = mod.get_global_var('func_8318')
func_8320_call = mutated_mod.get_global_var('func_8320')
call_11184 = func_8318_call()
call_11185 = func_8318_call()
func_4960_call = mod.get_global_var('func_4960')
func_4961_call = mutated_mod.get_global_var('func_4961')
call_11200 = relay.TupleGetItem(func_4960_call(), 0)
call_11201 = relay.TupleGetItem(func_4961_call(), 0)
func_9854_call = mod.get_global_var('func_9854')
func_9856_call = mutated_mod.get_global_var('func_9856')
call_11204 = relay.TupleGetItem(func_9854_call(), 0)
call_11205 = relay.TupleGetItem(func_9856_call(), 0)
output = relay.Tuple([call_11173,call_11184,call_11200,call_11204,])
output2 = relay.Tuple([call_11174,call_11185,call_11201,call_11205,])
func_11213 = relay.Function([], output)
mod['func_11213'] = func_11213
mod = relay.transform.InferType()(mod)
mutated_mod['func_11213'] = func_11213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11213_call = mutated_mod.get_global_var('func_11213')
call_11214 = func_11213_call()
output = call_11214
func_11215 = relay.Function([], output)
mutated_mod['func_11215'] = func_11215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6592_call = mod.get_global_var('func_6592')
func_6593_call = mutated_mod.get_global_var('func_6593')
call_11226 = relay.TupleGetItem(func_6592_call(), 0)
call_11227 = relay.TupleGetItem(func_6593_call(), 0)
func_9691_call = mod.get_global_var('func_9691')
func_9693_call = mutated_mod.get_global_var('func_9693')
call_11274 = relay.TupleGetItem(func_9691_call(), 1)
call_11275 = relay.TupleGetItem(func_9693_call(), 1)
func_6452_call = mod.get_global_var('func_6452')
func_6454_call = mutated_mod.get_global_var('func_6454')
call_11280 = func_6452_call()
call_11281 = func_6452_call()
output = relay.Tuple([call_11226,call_11274,call_11280,])
output2 = relay.Tuple([call_11227,call_11275,call_11281,])
func_11299 = relay.Function([], output)
mod['func_11299'] = func_11299
mod = relay.transform.InferType()(mod)
mutated_mod['func_11299'] = func_11299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11299_call = mutated_mod.get_global_var('func_11299')
call_11300 = func_11299_call()
output = call_11300
func_11301 = relay.Function([], output)
mutated_mod['func_11301'] = func_11301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6569_call = mod.get_global_var('func_6569')
func_6571_call = mutated_mod.get_global_var('func_6571')
call_11307 = relay.TupleGetItem(func_6569_call(), 0)
call_11308 = relay.TupleGetItem(func_6571_call(), 0)
func_8642_call = mod.get_global_var('func_8642')
func_8645_call = mutated_mod.get_global_var('func_8645')
var_11314 = relay.var("var_11314", dtype = "float32", shape = (4, 300))#candidate|11314|(4, 300)|var|float32
call_11313 = relay.TupleGetItem(func_8642_call(relay.reshape(var_11314.astype('float32'), [10, 10, 12])), 0)
call_11315 = relay.TupleGetItem(func_8645_call(relay.reshape(var_11314.astype('float32'), [10, 10, 12])), 0)
func_7104_call = mod.get_global_var('func_7104')
func_7107_call = mutated_mod.get_global_var('func_7107')
var_11330 = relay.var("var_11330", dtype = "float64", shape = (840,))#candidate|11330|(840,)|var|float64
var_11331 = relay.var("var_11331", dtype = "float32", shape = (180,))#candidate|11331|(180,)|var|float32
call_11329 = relay.TupleGetItem(func_7104_call(relay.reshape(var_11330.astype('float64'), [10, 12, 7]), relay.reshape(var_11331.astype('float32'), [180,]), ), 0)
call_11332 = relay.TupleGetItem(func_7107_call(relay.reshape(var_11330.astype('float64'), [10, 12, 7]), relay.reshape(var_11331.astype('float32'), [180,]), ), 0)
output = relay.Tuple([call_11307,call_11313,var_11314,call_11329,var_11330,var_11331,])
output2 = relay.Tuple([call_11308,call_11315,var_11314,call_11332,var_11330,var_11331,])
func_11359 = relay.Function([var_11314,var_11330,var_11331,], output)
mod['func_11359'] = func_11359
mod = relay.transform.InferType()(mod)
var_11360 = relay.var("var_11360", dtype = "float32", shape = (4, 300))#candidate|11360|(4, 300)|var|float32
var_11361 = relay.var("var_11361", dtype = "float64", shape = (840,))#candidate|11361|(840,)|var|float64
var_11362 = relay.var("var_11362", dtype = "float32", shape = (180,))#candidate|11362|(180,)|var|float32
output = func_11359(var_11360,var_11361,var_11362,)
func_11363 = relay.Function([var_11360,var_11361,var_11362,], output)
mutated_mod['func_11363'] = func_11363
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11377 = relay.var("var_11377", dtype = "float32", shape = (6, 13, 8))#candidate|11377|(6, 13, 8)|var|float32
uop_11378 = relay.cosh(var_11377.astype('float32')) # shape=(6, 13, 8)
func_5222_call = mod.get_global_var('func_5222')
func_5224_call = mutated_mod.get_global_var('func_5224')
const_11389 = relay.const([6.680327,0.967018,-4.754256,1.652867,-1.815073,-9.539841,-0.028351,0.508150,-6.650183,7.917589,-2.023723,-6.344137,3.296329,-4.606978,4.713268,5.186012,-1.197552,7.093173,-3.974825,7.377126,-9.676463,3.525865,-2.110556,-0.023292,-5.631886,9.701784,-3.106833,-9.083508,6.910620,-5.318500,7.570392,-3.042347,-6.746581,-8.930759,-1.321862,-3.601618,-6.557943,-5.893116,-5.678269,4.712032,-8.202402,4.303639,4.167338,-4.548746,-3.629081,6.548782,2.619603,8.584833,0.871052,-2.076087,1.192085,-8.454989,-0.761850,-9.751800,0.510274,3.447194,-9.763636,-5.693900,-6.573424,2.360494,-0.794950,2.445782,-3.356042,2.962808,-2.334424,5.854130,-0.420643,1.852836,-2.009178,2.187246,-8.075835,3.829233,4.510735,-0.561208,5.388068,-2.794442,-8.271366,5.300635,-5.958954,-0.001226,-4.575295,9.239053,7.780183,0.603530,-8.944333,8.922299,6.782495,-6.178093,-6.031219,-8.076149,-0.096557,9.452022,-0.800969,0.662851,-4.140462,-6.254511,1.818767,4.194171,-4.360090,9.269548,-5.035242,8.229365,2.716468,-5.608442,-1.739949,4.682848,-0.053006,3.184644,4.623028,4.328464,-1.191898,-8.715466,0.401824,-6.352158,-2.210727,9.699720,-8.061916,-7.701369,-9.666463,-3.779383,-0.798275,1.991702,-6.115295,1.695901,7.106483,3.191834,-9.182413,2.982829,-1.674809,-0.943656,7.200385,2.159149,-7.743556,-2.996124,-5.644920,-4.201972,-9.995477,3.736949,-8.666167,9.315217,-9.206086,-0.301712,-2.515322,-1.108925,6.374695,-8.092855,-7.639643,7.650521,3.216270,6.880732,-5.446453,-9.080950,7.924491,9.714343,9.831241,8.185851,-8.205180,-5.449065,-5.080346,9.887111,9.251006,-5.138043,5.673944,0.663493,4.587445,-0.563316,-1.468587,4.346880,2.292492], dtype = "float64")#candidate|11389|(169,)|const|float64
call_11388 = func_5222_call(relay.reshape(const_11389.astype('float64'), [1, 13, 13]))
call_11390 = func_5222_call(relay.reshape(const_11389.astype('float64'), [1, 13, 13]))
output = relay.Tuple([uop_11378,call_11388,const_11389,])
output2 = relay.Tuple([uop_11378,call_11390,const_11389,])
func_11405 = relay.Function([var_11377,], output)
mod['func_11405'] = func_11405
mod = relay.transform.InferType()(mod)
var_11406 = relay.var("var_11406", dtype = "float32", shape = (6, 13, 8))#candidate|11406|(6, 13, 8)|var|float32
output = func_11405(var_11406)
func_11407 = relay.Function([var_11406], output)
mutated_mod['func_11407'] = func_11407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9691_call = mod.get_global_var('func_9691')
func_9693_call = mutated_mod.get_global_var('func_9693')
call_11453 = relay.TupleGetItem(func_9691_call(), 0)
call_11454 = relay.TupleGetItem(func_9693_call(), 0)
output = call_11453
output2 = call_11454
func_11460 = relay.Function([], output)
mod['func_11460'] = func_11460
mod = relay.transform.InferType()(mod)
mutated_mod['func_11460'] = func_11460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11460_call = mutated_mod.get_global_var('func_11460')
call_11461 = func_11460_call()
output = call_11461
func_11462 = relay.Function([], output)
mutated_mod['func_11462'] = func_11462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7406_call = mod.get_global_var('func_7406')
func_7408_call = mutated_mod.get_global_var('func_7408')
call_11499 = func_7406_call()
call_11500 = func_7406_call()
output = relay.Tuple([call_11499,])
output2 = relay.Tuple([call_11500,])
func_11501 = relay.Function([], output)
mod['func_11501'] = func_11501
mod = relay.transform.InferType()(mod)
output = func_11501()
func_11502 = relay.Function([], output)
mutated_mod['func_11502'] = func_11502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10658_call = mod.get_global_var('func_10658')
func_10660_call = mutated_mod.get_global_var('func_10660')
call_11510 = func_10658_call()
call_11511 = func_10658_call()
output = relay.Tuple([call_11510,])
output2 = relay.Tuple([call_11511,])
func_11512 = relay.Function([], output)
mod['func_11512'] = func_11512
mod = relay.transform.InferType()(mod)
mutated_mod['func_11512'] = func_11512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11512_call = mutated_mod.get_global_var('func_11512')
call_11513 = func_11512_call()
output = call_11513
func_11514 = relay.Function([], output)
mutated_mod['func_11514'] = func_11514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10827_call = mod.get_global_var('func_10827')
func_10828_call = mutated_mod.get_global_var('func_10828')
call_11517 = func_10827_call()
call_11518 = func_10827_call()
output = call_11517
output2 = call_11518
func_11524 = relay.Function([], output)
mod['func_11524'] = func_11524
mod = relay.transform.InferType()(mod)
output = func_11524()
func_11525 = relay.Function([], output)
mutated_mod['func_11525'] = func_11525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9140_call = mod.get_global_var('func_9140')
func_9142_call = mutated_mod.get_global_var('func_9142')
call_11532 = relay.TupleGetItem(func_9140_call(), 1)
call_11533 = relay.TupleGetItem(func_9142_call(), 1)
output = call_11532
output2 = call_11533
func_11538 = relay.Function([], output)
mod['func_11538'] = func_11538
mod = relay.transform.InferType()(mod)
mutated_mod['func_11538'] = func_11538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11538_call = mutated_mod.get_global_var('func_11538')
call_11539 = func_11538_call()
output = call_11539
func_11540 = relay.Function([], output)
mutated_mod['func_11540'] = func_11540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10788_call = mod.get_global_var('func_10788')
func_10789_call = mutated_mod.get_global_var('func_10789')
call_11544 = relay.TupleGetItem(func_10788_call(), 0)
call_11545 = relay.TupleGetItem(func_10789_call(), 0)
output = call_11544
output2 = call_11545
func_11548 = relay.Function([], output)
mod['func_11548'] = func_11548
mod = relay.transform.InferType()(mod)
mutated_mod['func_11548'] = func_11548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11548_call = mutated_mod.get_global_var('func_11548')
call_11549 = func_11548_call()
output = call_11549
func_11550 = relay.Function([], output)
mutated_mod['func_11550'] = func_11550
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11598 = relay.var("var_11598", dtype = "uint64", shape = ())#candidate|11598|()|var|uint64
var_11599 = relay.var("var_11599", dtype = "uint64", shape = (8, 1, 7))#candidate|11599|(8, 1, 7)|var|uint64
bop_11600 = relay.right_shift(var_11598.astype('uint64'), var_11599.astype('uint64')) # shape=(8, 1, 7)
func_11538_call = mod.get_global_var('func_11538')
func_11540_call = mutated_mod.get_global_var('func_11540')
call_11603 = func_11538_call()
call_11604 = func_11538_call()
bop_11605 = relay.subtract(var_11599.astype('float64'), relay.reshape(bop_11600.astype('float64'), relay.shape_of(var_11599))) # shape=(8, 1, 7)
output = relay.Tuple([call_11603,bop_11605,])
output2 = relay.Tuple([call_11604,bop_11605,])
func_11609 = relay.Function([var_11598,var_11599,], output)
mod['func_11609'] = func_11609
mod = relay.transform.InferType()(mod)
mutated_mod['func_11609'] = func_11609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11609_call = mutated_mod.get_global_var('func_11609')
var_11611 = relay.var("var_11611", dtype = "uint64", shape = ())#candidate|11611|()|var|uint64
var_11612 = relay.var("var_11612", dtype = "uint64", shape = (8, 1, 7))#candidate|11612|(8, 1, 7)|var|uint64
call_11610 = func_11609_call(var_11611,var_11612,)
output = call_11610
func_11613 = relay.Function([var_11611,var_11612,], output)
mutated_mod['func_11613'] = func_11613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9140_call = mod.get_global_var('func_9140')
func_9142_call = mutated_mod.get_global_var('func_9142')
call_11722 = relay.TupleGetItem(func_9140_call(), 3)
call_11723 = relay.TupleGetItem(func_9142_call(), 3)
uop_11727 = relay.cos(call_11722.astype('float32')) # shape=(169,)
uop_11729 = relay.cos(call_11723.astype('float32')) # shape=(169,)
output = relay.Tuple([uop_11727,])
output2 = relay.Tuple([uop_11729,])
func_11731 = relay.Function([], output)
mod['func_11731'] = func_11731
mod = relay.transform.InferType()(mod)
output = func_11731()
func_11732 = relay.Function([], output)
mutated_mod['func_11732'] = func_11732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9516_call = mod.get_global_var('func_9516')
func_9518_call = mutated_mod.get_global_var('func_9518')
call_11798 = func_9516_call()
call_11799 = func_9516_call()
func_10724_call = mod.get_global_var('func_10724')
func_10726_call = mutated_mod.get_global_var('func_10726')
call_11816 = relay.TupleGetItem(func_10724_call(), 0)
call_11817 = relay.TupleGetItem(func_10726_call(), 0)
output = relay.Tuple([call_11798,call_11816,])
output2 = relay.Tuple([call_11799,call_11817,])
func_11818 = relay.Function([], output)
mod['func_11818'] = func_11818
mod = relay.transform.InferType()(mod)
mutated_mod['func_11818'] = func_11818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11818_call = mutated_mod.get_global_var('func_11818')
call_11819 = func_11818_call()
output = call_11819
func_11820 = relay.Function([], output)
mutated_mod['func_11820'] = func_11820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11109_call = mod.get_global_var('func_11109')
func_11110_call = mutated_mod.get_global_var('func_11110')
call_11865 = func_11109_call()
call_11866 = func_11109_call()
func_5961_call = mod.get_global_var('func_5961')
func_5963_call = mutated_mod.get_global_var('func_5963')
call_11870 = func_5961_call()
call_11871 = func_5961_call()
func_11299_call = mod.get_global_var('func_11299')
func_11301_call = mutated_mod.get_global_var('func_11301')
call_11889 = relay.TupleGetItem(func_11299_call(), 1)
call_11890 = relay.TupleGetItem(func_11301_call(), 1)
func_11524_call = mod.get_global_var('func_11524')
func_11525_call = mutated_mod.get_global_var('func_11525')
call_11915 = func_11524_call()
call_11916 = func_11524_call()
output = relay.Tuple([call_11865,call_11870,call_11889,call_11915,])
output2 = relay.Tuple([call_11866,call_11871,call_11890,call_11916,])
func_11922 = relay.Function([], output)
mod['func_11922'] = func_11922
mod = relay.transform.InferType()(mod)
mutated_mod['func_11922'] = func_11922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11922_call = mutated_mod.get_global_var('func_11922')
call_11923 = func_11922_call()
output = call_11923
func_11924 = relay.Function([], output)
mutated_mod['func_11924'] = func_11924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4661_call = mod.get_global_var('func_4661')
func_4663_call = mutated_mod.get_global_var('func_4663')
call_11925 = relay.TupleGetItem(func_4661_call(), 2)
call_11926 = relay.TupleGetItem(func_4663_call(), 2)
uop_11927 = relay.cos(call_11925.astype('float32')) # shape=(891,)
uop_11929 = relay.cos(call_11926.astype('float32')) # shape=(891,)
func_5222_call = mod.get_global_var('func_5222')
func_5224_call = mutated_mod.get_global_var('func_5224')
const_11933 = relay.const([-7.593184,-4.479679,5.623867,-1.801830,-7.642460,-6.243726,2.884217,0.332091,8.666722,1.191936,-0.042857,7.001395,8.976274,6.690605,-5.721864,-8.584032,-6.635271,4.214525,-2.570210,-9.314261,-1.117474,-6.672079,5.098063,5.768421,6.760352,-6.560818,7.645672,-8.230891,9.238501,8.313593,-2.761559,4.347909,6.132476,6.390720,-4.650531,-2.576281,-0.353171,-6.297402,-9.964211,-7.253819,9.494944,-4.917596,-2.641078,6.969948,-8.622079,-3.006034,-4.497401,8.834463,-6.201014,-5.858566,-9.492820,7.100234,1.947182,-2.170793,4.997310,-5.881126,-9.018141,-4.968148,5.988702,-5.636260,-7.899006,5.420797,-7.527653,-6.687967,3.529545,-8.482022,6.165119,-7.574168,8.237182,9.848977,0.561473,8.016225,-5.036109,-1.975237,-8.889475,0.912517,1.786815,5.421304,1.955647,-0.832911,-0.751766,-2.867558,-4.321046,2.103241,-5.448993,4.609679,-9.127832,7.072991,-0.825252,-9.157453,-8.004741,3.696334,-2.649729,-8.883235,7.337908,-2.803977,7.789040,5.556107,8.682673,0.059435,1.261876,2.460649,-0.400728,-9.041472,3.925387,5.363633,-1.133191,6.881970,8.064397,-4.677503,5.449217,9.961272,-1.633554,-3.154211,2.450510,6.684803,-1.208202,-7.296233,0.165883,9.619558,4.695448,-5.539584,-8.722245,0.931774,4.466816,-6.460682,-7.136867,3.517726,-8.402324,1.605983,-6.693571,0.410994,5.618698,9.998837,-2.124925,5.411425,7.865230,-0.604679,-8.888623,2.084606,4.868973,-5.353525,6.928392,-0.417420,9.263678,6.436661,-2.605794,2.366120,-6.026975,-9.932896,4.728441,5.444930,-6.987052,-5.040487,4.517442,-4.747382,0.776610,-9.775565,5.246103,7.356659,-6.448430,-7.959435,6.207200,6.424150,-5.729576,-1.779512,9.420154,-4.077860,4.853916], dtype = "float64")#candidate|11933|(169,)|const|float64
call_11932 = func_5222_call(relay.reshape(const_11933.astype('float64'), [1, 13, 13]))
call_11934 = func_5222_call(relay.reshape(const_11933.astype('float64'), [1, 13, 13]))
func_10658_call = mod.get_global_var('func_10658')
func_10660_call = mutated_mod.get_global_var('func_10660')
call_11940 = func_10658_call()
call_11941 = func_10658_call()
output = relay.Tuple([uop_11927,call_11932,const_11933,call_11940,])
output2 = relay.Tuple([uop_11929,call_11934,const_11933,call_11941,])
func_11961 = relay.Function([], output)
mod['func_11961'] = func_11961
mod = relay.transform.InferType()(mod)
output = func_11961()
func_11962 = relay.Function([], output)
mutated_mod['func_11962'] = func_11962
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12014 = relay.var("var_12014", dtype = "int64", shape = (4, 15, 10))#candidate|12014|(4, 15, 10)|var|int64
var_12015 = relay.var("var_12015", dtype = "int64", shape = (4, 15, 10))#candidate|12015|(4, 15, 10)|var|int64
bop_12016 = relay.multiply(var_12014.astype('int64'), relay.reshape(var_12015.astype('int64'), relay.shape_of(var_12014))) # shape=(4, 15, 10)
output = relay.Tuple([bop_12016,])
output2 = relay.Tuple([bop_12016,])
func_12029 = relay.Function([var_12014,var_12015,], output)
mod['func_12029'] = func_12029
mod = relay.transform.InferType()(mod)
mutated_mod['func_12029'] = func_12029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12029_call = mutated_mod.get_global_var('func_12029')
var_12031 = relay.var("var_12031", dtype = "int64", shape = (4, 15, 10))#candidate|12031|(4, 15, 10)|var|int64
var_12032 = relay.var("var_12032", dtype = "int64", shape = (4, 15, 10))#candidate|12032|(4, 15, 10)|var|int64
call_12030 = func_12029_call(var_12031,var_12032,)
output = call_12030
func_12033 = relay.Function([var_12031,var_12032,], output)
mutated_mod['func_12033'] = func_12033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5174_call = mod.get_global_var('func_5174')
func_5175_call = mutated_mod.get_global_var('func_5175')
call_12049 = relay.TupleGetItem(func_5174_call(), 2)
call_12050 = relay.TupleGetItem(func_5175_call(), 2)
func_9234_call = mod.get_global_var('func_9234')
func_9239_call = mutated_mod.get_global_var('func_9239')
const_12055 = relay.const([[-1.261625],[-9.868616],[-6.518368],[-0.265003],[-6.694993],[3.649666],[8.587785]], dtype = "float32")#candidate|12055|(7, 1)|const|float32
var_12056 = relay.var("var_12056", dtype = "int8", shape = (192, 1))#candidate|12056|(192, 1)|var|int8
const_12057 = relay.const([4,-3,8,8,-9,-9,2,-5,-1,-3,-2,1,-1,-6,-3,-3,6,-9,-6,-6,-7,-9,-10,9,-5,-10,3,9,-8,-2,-2,7,3,-4,6,5,5,-4,10,8,-8,-10,-2,5,-4,10,-4,-3,4,7,7,5,7,9,-3,-3,-7,-9,2,8,5,-1,4,5,9,-2,-5,10,-4,-1,8,-5,-5,-4,2,-2,-2,3,6,6,3,2,4,-2,-3,-3,-5,5,-5,-8,3,-4,-4,2,7,5,-5,10,3,8,-2,-4,-1,8,10,-5,-9,-9,-7,3,9,6,9,5,-5,-5,-6,-6,9,-5,2,-3,10,-4,-3,1,-6,-7,-2,-6,-5,-5,-9,-8,-7,-9,-4,1,-4,-10,-3,10,9,-4,-10,-7,-1,-6,3,1,8,10,4,-7,-6,7,10,-9,-5,-8,-5,-9,-7,-7,10,4,-1,1,6,6,-5,-3,2,-1,-9,3,-6,-10,-1,5,6,1,-6,5,-10,-5,-5,9,-2,-6,1,-5,-6,-10,-4,8,8,9,2,5,-4,7,9,-7,-6,4,-6,4,5,-9,-3,-9,8,3,2,2,-8,-3,4,-2,5,-10,6,-3,2,-10,-10,-5,6,10,8,4,-2,-5,-9,1,-2,6,-8,10,10,-4,8,-3,-9,-4,7,-3,9,9,4,3,-2,-5,-8,10,-5,-2,-4,-1,8,-10,-7,5,-10,3,4,-9,7,-7,-8,-6,-1,-10,-3,-10,8,7,-4,1,-7,-5,10,-9,9,-1,5,2,6,-3,-4,-10,-6,8,-9,1,3,9,1,10,4,-8,9,-4,-1,3,-3,-10,2,-8,-6,9,6,-3,-5,-8,-4,-7,6,7,-2,5,-7,-4,-2,2,-3,9,10,-10,-5,-6,-7,-2,-6,-2,-9,-6,1,-5,-4,5,1,-9,-6,-8,9,9,-8,-9,-8,-5,-8,-5,-10,-6,-9,-2,-2,3,-3,-8,4,-8,-6,9,8,5,6,8,2,10,2,-4,-6,4,-6,2,10,4,-7,-2,-8,4,6,-10,4,10,4,2,-8,9,-9,-8,1,4,5,-4,2,-9,-9,-7,-10,1,-8,6,-9,4,6,-6,-1,4,8,-3,7,9,10,9,10,4,4,7,-4,1,10,6,10,1,1,6,-5,-4,-10,7,-4,1,-10,1,-9,6,2,3,6,-9,10,-3,-2,-2,-1,-6,9,-2,6,-4,10,6,-4,3,5,-4,-9,9,-5,6,9,10,-9,-8,-10,2,4,1,7,9,7,-4,-2,8,4,-5,3,-3,-10,9,-5,9,7,1,-5,3,-4,8,1,-7,-9,-10,-8,7,5,-7,7,4,-5,7,5,-1,8,-7,5,-6,6,9,10,-3,1,9,-5,1,6,-7,-7,-10,-8,-6,4,-7,9,-6,1,-5,-1,-2,7,-4,3,-6,2,7,-6,2,4,-10,-7,-1,-8,-3,-3,5,10,5,-3,-4,-10,6,4,5,9,-9,4,9,6,-2,8,-1,7,2,8,4,6,5,9,-8,-7,-7,6,-6,-7,-3,4,-3,-9,-8,2,-6,-3,10,3,10,-4,-5,-2,-3,7,-4,-10,-9,-6,8,2,-6,-7,7,-4,-1,6,1,5,7,-1,-3,9,-10,3,-3,-1,2,-7,9,-7,-4,-4,-1,8,-3,10,-10,1,6,-7,1,-9,-8,-3,10,5,5,8,2,-5,-4,2,5,-1,9,9,-8,4,-5,-10,1,10,9,-1,3,-6,10,-9,3,-6,-10,6,-5,3,-9,6,10,-5,3,10,3,-3,5,-10,5,-5,-2,2,-1,-7,10,2,9,-9,-3,-10,-4,-1,-4,9,6,-4,-5,6,-3,-8,-8,5,8,-2,2,9,-5,-8,1,8,-1,6,3,2,8,-9,10,4,7,-3,7,8,4,1,-1,-3,-5,8,4,4,-10,8,6,-10,-9,-5,-4,-10,-6,4,-4,-2,5,-5,-2,8,-1,-1,-8,3,3,6,10,8,9,-5,-6,-1,9,-9,-4,-2,-5,1,6,-3,-1,-8,6,-7,5,-9,-1,1,6,-2,9,3,-10,7,2,7,-8,-4,-3,3,-5,9,3,-7,-2,-9,-6,4,9,-4,-1,4,-7,6,-1,8,-1,1,10,3,8,4,-4,-10,8,-6,4,-10,10,1,-7,7,-7,-4,-8,-9,-8,-10,1,-7,-3,-10,5,-10,-6,-8,1,10,6,2,-10,-8,-4,-3,10,6,7,2,5,-8,-4,-5,2,2,-1,9,7,-2,-8,8,8,-3,9,6,-1,7,9,-2,-7,-8,-9,10,8,9,-8,6,-10,-1,-8,2,-9,5,-1,10,1,4,9,-8,-7,-3,-1,-3,9,9,-8,7,2,-7,8,10,-9,1,-10,5,3,4,-8,-6,-10,-4,-8,8,-4,-2,6,4,-6,-3,6,-6,5,-5,-7,-2,6,7,-9,-5,-2,5,-8,-1,-6,3,-2,10,-8,-2,6,4,-10,-7,6,1,-8,3,-5,-4,-1,-4,-5,2,-9,-10,8,8,-5,-8,6,8,-6,-2,7,4,3,1,-2,5,9,8,-1,5,1,6,3,-3,-5,1,-3,10,-3,-5,-5,-10,-8,-10,-7,5,-10,-7,-7,3,-5,5,-7,3,-5,-9,-3,-3,-7,9,1,2,-7,4,9,-9,2,-2,9,3,8,-4,-10,1,3,-3,-4,-4,6,-8,-7,-1,10,-10,-3,-5,-2,1,8,-3,-1,-5,-3,-9,-1,8,-3,9,-4,-2,-9,-7,6,4,1,-6,4,-1,-10,-10,7,-9,4,-4,4,-5,-3,-5,-4,6,8,2,-3,1,-3,-4,-8,1,-2,2,2,-10,-2,5,-6,1,-3,6,-6,-1,9,-1,10,-8,-8,-10,-8,7,-7,-5,-5,7,-1,-6,-9,8,-2,-4,3,-9,-2,1,-1,-9,-3,1,3,4,10,-3,-6,-6,9,5,2,3,2,4,-4,-2,-9,3,-3,-8,-8,4,3,6,-2,4,-4,-7,-2,-2,4,-5,8,-7,-6,6,7,10,9,-1,-9,-4,3,3,-10,4,-8,-9,7,-9,-2,-9,-4,10,-6,-4,-8,-10,-8,8,8,6,-1,6,10,2,-10,-2,1,8,2,4,8,1,-9,-6,1,4,-6,1,-6,9,-6,-10,4,4,-10,4,-4,-6,3,9,5,-7,2,8,-5,-3,1,-7,3,-8,2,3,-8,9,2,-7,-9,-7,-4,-8,3,9,-9,6,10,7,8,9,8,9,-4,-6,-3,-6,9,8,-9,5,-7,-10,-6,10,6,10,-5,-5,-7,6,5,1,-7,-5,7,-4,10,1,8,10,1,9,10,5,-4,-1,4,-2,-10,7,4,4,-5,2,8,-9,-1,-3,2,-10,2,7,3,4,6,-3,-5,8,3,5,-9,10,-5,-3,-2,5,-4,9,4,1,7,2,-8,-5,-8,2,-7,9,5,8,3,-3,-8,6,-6,-1,8,8,-2,9,-5,9,-5,-3,10,-10,-9,-2,5,-6,-3,-7,-10,9,10,-4,-10,7,3,6,5,6,8,8,6,-8,3,-1,2,5,-9,9,3,-5,-7,-10,6,6,-6,9,10,-4,-5,-6,-7,3,9,5,7,10,8,6,-8,8,-9,-9,-8,-4,7,2,-10,-10,-6,-2,-5,-4,-4,9,-5,7,5,2,8,6,5,-9,-4,3,4,-2,-10,3,1,6,-8,7,-1,-9,-7,6,5,-7,6,1,-7,-10,3,9,-3,9,1,5,7,5,-8,-7,6,-6,-6,-4,-1,-10,-6,-10,5,10,-5,10,-10,-7,-5,3,-10,6,5,-9,-4,5,-7,1,-2,7,-8,9,-1,-8,1,-10,10,5,5,4,-2,-1,3,8,-5,-1,4,-2,-6,-3,-2,8,-8,9,-8,5,3,-8,10,-10,-2,9,-2,-3,1,-5,-9,-5,7,-10,-9,4,1,-6,7,7,8,-5,8,7,6,-4,-7,1,5,9,-6,-3,5,9,7,3,-3,6,-8,3,-8,-8,6,-9,1,-4,-2,-4,-8,1,1,5,-2,-7,7,-6,-5,-10,-6,-3,-8,1,-3,7,8,-9,3,2,6,-8,9,5,-10,6,-5,-2,3,-1,8,10,-9,6,-2,9,-8,-10,-3,-1,-10,-9,-4,-8,-4,-5,-8,-10,-3,-10,5,-4,6,-9,9,-2,-9,-5,-1,1,-1,-8,1,-7,4,-9,5,-3,-7,10,4,-4,10,-5,-10,6,5,2,2,10,7,7,5,4,2,-8,3,-9,-1,6,1,5,-6,1,6,-5,3,6,-2,9,-6,8,9,4,2,-3,4,10,-5,-1,4,-6,8,6,4,-3,4,-2,1,-5,8,7,-6,-3,7,1,-9,-8,-9,-8,10,5,-5,9,3,-6,-1,-4,-9,9,-10,-7,7,10,10,1,1,7,1,9,-9,-4,7,1,-4,2,-9,4,4,4,-4,-7,-8,-9,8,4,3], dtype = "uint8")#candidate|12057|(1680,)|const|uint8
call_12054 = relay.TupleGetItem(func_9234_call(relay.reshape(const_12055.astype('float32'), [7,]), relay.reshape(var_12056.astype('int8'), [192,]), relay.reshape(const_12057.astype('uint8'), [7, 15, 16]), ), 0)
call_12058 = relay.TupleGetItem(func_9239_call(relay.reshape(const_12055.astype('float32'), [7,]), relay.reshape(var_12056.astype('int8'), [192,]), relay.reshape(const_12057.astype('uint8'), [7, 15, 16]), ), 0)
output = relay.Tuple([call_12049,call_12054,const_12055,var_12056,const_12057,])
output2 = relay.Tuple([call_12050,call_12058,const_12055,var_12056,const_12057,])
func_12063 = relay.Function([var_12056,], output)
mod['func_12063'] = func_12063
mod = relay.transform.InferType()(mod)
mutated_mod['func_12063'] = func_12063
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12064 = relay.var("var_12064", dtype = "int8", shape = (192, 1))#candidate|12064|(192, 1)|var|int8
func_12063_call = mutated_mod.get_global_var('func_12063')
call_12065 = func_12063_call(var_12064)
output = call_12065
func_12066 = relay.Function([var_12064], output)
mutated_mod['func_12066'] = func_12066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10936_call = mod.get_global_var('func_10936')
func_10937_call = mutated_mod.get_global_var('func_10937')
call_12100 = relay.TupleGetItem(func_10936_call(), 0)
call_12101 = relay.TupleGetItem(func_10937_call(), 0)
output = relay.Tuple([call_12100,])
output2 = relay.Tuple([call_12101,])
func_12107 = relay.Function([], output)
mod['func_12107'] = func_12107
mod = relay.transform.InferType()(mod)
mutated_mod['func_12107'] = func_12107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12107_call = mutated_mod.get_global_var('func_12107')
call_12108 = func_12107_call()
output = call_12108
func_12109 = relay.Function([], output)
mutated_mod['func_12109'] = func_12109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6414_call = mod.get_global_var('func_6414')
func_6416_call = mutated_mod.get_global_var('func_6416')
call_12180 = func_6414_call()
call_12181 = func_6414_call()
func_7671_call = mod.get_global_var('func_7671')
func_7673_call = mutated_mod.get_global_var('func_7673')
call_12190 = relay.TupleGetItem(func_7671_call(), 0)
call_12191 = relay.TupleGetItem(func_7673_call(), 0)
output = relay.Tuple([call_12180,call_12190,])
output2 = relay.Tuple([call_12181,call_12191,])
func_12195 = relay.Function([], output)
mod['func_12195'] = func_12195
mod = relay.transform.InferType()(mod)
mutated_mod['func_12195'] = func_12195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12195_call = mutated_mod.get_global_var('func_12195')
call_12196 = func_12195_call()
output = call_12196
func_12197 = relay.Function([], output)
mutated_mod['func_12197'] = func_12197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6608_call = mod.get_global_var('func_6608')
func_6609_call = mutated_mod.get_global_var('func_6609')
call_12251 = relay.TupleGetItem(func_6608_call(), 0)
call_12252 = relay.TupleGetItem(func_6609_call(), 0)
func_7464_call = mod.get_global_var('func_7464')
func_7467_call = mutated_mod.get_global_var('func_7467')
call_12260 = relay.TupleGetItem(func_7464_call(relay.reshape(call_12251.astype('float64'), [945,])), 1)
call_12261 = relay.TupleGetItem(func_7467_call(relay.reshape(call_12251.astype('float64'), [945,])), 1)
output = relay.Tuple([call_12251,call_12260,])
output2 = relay.Tuple([call_12252,call_12261,])
func_12262 = relay.Function([], output)
mod['func_12262'] = func_12262
mod = relay.transform.InferType()(mod)
output = func_12262()
func_12263 = relay.Function([], output)
mutated_mod['func_12263'] = func_12263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9823_call = mod.get_global_var('func_9823')
func_9825_call = mutated_mod.get_global_var('func_9825')
call_12279 = func_9823_call()
call_12280 = func_9823_call()
func_4589_call = mod.get_global_var('func_4589')
func_4591_call = mutated_mod.get_global_var('func_4591')
var_12282 = relay.var("var_12282", dtype = "float32", shape = ())#candidate|12282|()|var|float32
call_12281 = relay.TupleGetItem(func_4589_call(relay.reshape(var_12282.astype('float32'), [])), 2)
call_12283 = relay.TupleGetItem(func_4591_call(relay.reshape(var_12282.astype('float32'), [])), 2)
output = relay.Tuple([call_12279,call_12281,var_12282,])
output2 = relay.Tuple([call_12280,call_12283,var_12282,])
func_12284 = relay.Function([var_12282,], output)
mod['func_12284'] = func_12284
mod = relay.transform.InferType()(mod)
mutated_mod['func_12284'] = func_12284
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12285 = relay.var("var_12285", dtype = "float32", shape = ())#candidate|12285|()|var|float32
func_12284_call = mutated_mod.get_global_var('func_12284')
call_12286 = func_12284_call(var_12285)
output = call_12286
func_12287 = relay.Function([var_12285], output)
mutated_mod['func_12287'] = func_12287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9445_call = mod.get_global_var('func_9445')
func_9447_call = mutated_mod.get_global_var('func_9447')
call_12319 = relay.TupleGetItem(func_9445_call(), 0)
call_12320 = relay.TupleGetItem(func_9447_call(), 0)
func_9445_call = mod.get_global_var('func_9445')
func_9447_call = mutated_mod.get_global_var('func_9447')
call_12326 = relay.TupleGetItem(func_9445_call(), 0)
call_12327 = relay.TupleGetItem(func_9447_call(), 0)
func_6569_call = mod.get_global_var('func_6569')
func_6571_call = mutated_mod.get_global_var('func_6571')
call_12340 = relay.TupleGetItem(func_6569_call(), 0)
call_12341 = relay.TupleGetItem(func_6571_call(), 0)
func_10620_call = mod.get_global_var('func_10620')
func_10623_call = mutated_mod.get_global_var('func_10623')
var_12347 = relay.var("var_12347", dtype = "float64", shape = (1100,))#candidate|12347|(1100,)|var|float64
call_12346 = relay.TupleGetItem(func_10620_call(relay.reshape(var_12347.astype('float64'), [10, 11, 10])), 0)
call_12348 = relay.TupleGetItem(func_10623_call(relay.reshape(var_12347.astype('float64'), [10, 11, 10])), 0)
func_4821_call = mod.get_global_var('func_4821')
func_4822_call = mutated_mod.get_global_var('func_4822')
call_12351 = relay.TupleGetItem(func_4821_call(), 1)
call_12352 = relay.TupleGetItem(func_4822_call(), 1)
bop_12376 = relay.less_equal(var_12347.astype('bool'), relay.reshape(call_12346.astype('bool'), relay.shape_of(var_12347))) # shape=(1100,)
bop_12379 = relay.less_equal(var_12347.astype('bool'), relay.reshape(call_12348.astype('bool'), relay.shape_of(var_12347))) # shape=(1100,)
var_12405 = relay.var("var_12405", dtype = "bool", shape = (1100,))#candidate|12405|(1100,)|var|bool
bop_12406 = relay.multiply(bop_12376.astype('float32'), relay.reshape(var_12405.astype('float32'), relay.shape_of(bop_12376))) # shape=(1100,)
bop_12409 = relay.multiply(bop_12379.astype('float32'), relay.reshape(var_12405.astype('float32'), relay.shape_of(bop_12379))) # shape=(1100,)
output = relay.Tuple([call_12319,call_12326,call_12340,call_12351,bop_12406,])
output2 = relay.Tuple([call_12320,call_12327,call_12341,call_12352,bop_12409,])
F = relay.Function([var_12347,var_12405,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_12347,var_12405,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')
input_12347= np.array([-1.631490,-0.697104,6.592808,5.981386,3.437474,-6.848906,-5.836540,2.687782,2.094514,5.855988,6.793953,6.285335,-4.705063,2.265361,4.600493,3.077156,5.602526,9.316118,-8.977925,6.080928,-7.087500,-6.762673,-8.696717,9.048455,6.678487,-8.589478,1.144746,-7.057080,-2.495769,7.024426,-9.644549,3.440014,-6.506829,8.837148,5.371659,0.422712,-8.955362,-6.495522,3.137836,-7.059987,-4.682362,5.475948,-7.708579,-1.547843,3.134277,-1.963570,-4.384706,-4.939012,-1.913713,9.502819,-4.995671,9.713430,-9.520544,5.910549,3.592329,-6.149011,-9.325868,-3.304236,3.129691,6.766621,-3.993960,0.830695,3.991659,8.614305,4.301424,3.290529,2.171920,-6.376932,6.872265,2.413263,-1.443196,-4.955917,7.114977,8.453928,3.481396,-6.021543,1.588280,-6.076988,2.001456,-0.707333,6.368746,-6.440815,6.474918,-6.170633,-4.606319,3.225146,-3.743083,-3.263459,-8.264554,-8.718068,-8.894166,5.357980,-4.288153,1.556368,-5.518060,-9.020060,3.122516,-9.144764,-5.289402,0.233128,5.014565,5.395425,6.141560,5.857063,1.940050,5.739433,-3.746962,0.747594,3.440987,-6.076520,4.621349,0.303335,9.169225,5.199914,-7.245813,4.049887,7.064035,8.582867,-0.632750,6.606878,8.943247,8.893700,5.450730,-9.604986,5.876471,-5.151248,-3.841850,-4.542333,-9.847182,8.377388,-5.726527,-4.841984,2.174634,-5.177382,-7.463603,7.400599,9.397607,-3.072641,-1.260795,7.809228,4.776656,-5.408634,3.122260,-7.286693,-4.542534,-7.260032,-6.724400,-0.956771,1.443093,8.850107,-8.026497,2.096826,1.838314,6.903242,-3.170741,-9.062949,-0.068958,4.771041,9.506668,7.609067,7.580919,-7.043623,-0.617256,8.378046,-7.688752,-2.459666,-6.702572,-0.359602,8.535882,3.464477,-6.124949,1.252327,-3.769914,-1.008823,-6.329026,8.484134,6.623852,2.605881,-2.894201,9.553053,9.364331,-0.918311,9.831678,-7.161721,-1.362244,3.344869,2.011384,4.217580,9.143700,4.916397,-3.075343,-5.523368,-7.433210,8.250754,-9.812363,0.022091,-3.813018,8.023251,-4.884890,-0.975673,5.819480,7.627983,1.047583,-8.867322,-8.997297,-3.177768,-3.448339,4.980349,3.282513,-5.867846,1.994375,8.173349,2.615840,-5.100084,-2.050569,-1.985048,-4.727073,-2.739402,-5.369522,-4.611835,-2.318351,3.840280,7.214831,-6.262456,-2.164542,3.718947,-3.102867,3.099451,3.335886,-8.748338,9.315015,-4.281014,-0.529725,9.544607,3.438690,-5.358150,-7.792100,8.009076,-3.444531,-3.818380,-5.753385,-2.972155,7.109007,-4.999989,9.254120,-0.776362,0.883663,-9.050659,-6.250801,-0.446718,-9.185445,5.710602,4.522309,-9.840739,-0.802155,-2.159421,-1.331700,-7.313031,-3.226954,1.986038,5.845963,-6.315897,-9.023868,-7.760131,-1.331164,-2.652994,7.125894,-1.943276,-4.965157,-1.178416,9.007746,9.959740,-3.791171,7.524706,-5.507835,-1.946403,8.523545,-4.251007,-8.001931,-8.979950,-9.805246,0.836772,-8.537641,-8.466640,-0.918382,-9.516460,9.387900,-2.196707,2.307698,-1.934594,-3.453901,5.441634,-6.953678,9.980834,-3.810454,3.292819,-5.832489,0.464595,-5.381151,-2.078887,-0.115582,9.859361,-6.801082,5.014844,4.697208,-1.296329,5.177179,6.206676,2.569123,-5.087079,-1.047944,-9.029128,-4.224105,-5.935134,2.526273,1.919650,8.659785,3.957660,-1.628540,6.334254,1.778397,9.099244,1.985204,-9.603315,1.202767,-1.673078,-1.968405,6.784499,-2.884612,-8.011182,-4.800390,-7.231678,-6.219958,8.692878,-4.275721,-4.259220,-6.162408,-7.279371,7.314334,2.776116,1.278052,-8.349674,-2.957646,-4.753686,8.617233,5.682264,0.188453,4.106340,9.900015,-0.010831,4.502364,7.236325,9.483735,7.331454,-1.994989,4.630044,1.117190,-2.375661,4.832124,-9.994303,3.139170,-6.174026,8.748777,-2.954429,1.072942,6.475501,8.519395,-8.551953,-2.936274,5.517455,-8.092942,2.957135,1.554148,-9.323290,-1.639288,6.042728,-0.824770,-0.922665,-0.086051,-7.433150,-9.553890,-7.743709,0.531113,-9.006997,6.007686,-0.784888,-1.715110,0.127428,8.092819,0.772273,-7.509074,8.612234,-4.129877,1.685508,-9.008196,-7.222740,4.837529,5.111161,-0.075803,-2.507934,5.425222,4.582571,-5.802957,2.846865,-6.607480,-2.553138,-4.104297,1.305156,5.613534,2.940041,3.652297,-5.342471,-6.346536,1.144935,7.354284,-0.309047,-9.733502,0.180735,-3.381636,9.095036,6.980590,-5.577485,1.807436,-0.528460,-4.883891,5.100175,-9.746108,-5.792029,7.306728,6.884467,3.055994,5.015976,8.128731,4.333216,-1.252293,9.461218,-4.178135,3.285646,6.403071,-8.809143,6.117491,0.749405,-5.134864,-6.429618,0.167146,-8.057346,-0.490540,6.017866,-3.655680,0.383318,5.469462,-9.064736,-6.480565,3.607727,-9.236618,4.835379,4.722635,7.314186,-3.211991,8.446423,2.839640,3.039148,-3.203774,0.507609,1.359115,5.474436,0.858458,-3.408210,8.812255,-6.094615,3.603142,3.447668,-6.326191,-9.646984,-2.989607,8.652431,-2.285145,8.095842,7.830116,0.813956,-5.261510,9.516200,0.895838,0.794340,1.625029,-7.292272,-6.594596,-9.193169,-9.861272,1.423214,-5.750926,-8.196991,7.498516,4.146362,-2.760950,6.046645,3.169934,6.648626,-4.513325,5.733195,-7.754010,1.427590,8.668184,7.330990,-2.076088,8.941339,8.386507,2.145912,4.242098,3.737860,-8.442096,-5.035414,5.078653,-9.652434,1.926673,-6.550444,0.648502,-7.469740,4.602212,-0.886828,-7.691061,-3.076509,9.478520,9.974753,6.860625,-3.128466,6.476913,3.050235,-3.497853,0.418326,-1.558260,4.252088,7.165171,-0.834204,-3.183586,-7.616430,-3.722950,-2.247247,6.365658,6.404625,3.768087,-9.137824,-4.042784,3.407261,6.628625,-1.884601,-9.103690,8.768353,2.818301,-9.300495,-3.632410,4.171560,-0.687184,-8.790979,2.036827,-6.139894,7.441647,3.916723,-3.728955,6.329989,1.842797,5.645115,4.771062,6.567980,0.362177,-6.980431,7.051564,-0.386183,-4.887438,7.547889,-3.809625,-4.776706,-4.678222,-3.881416,-7.560932,-0.183767,8.497723,-8.413166,-1.261338,-1.952124,9.380652,0.914042,-7.990312,-5.991979,-4.873468,-4.573997,3.406105,-3.187861,-2.200433,9.109567,-9.794174,9.509917,1.241944,3.879042,6.802196,5.793235,-9.267606,8.769427,8.295415,4.269232,0.784604,-6.073811,-0.971210,-7.469927,0.881157,-6.446602,4.389538,-6.525604,2.830749,-3.476645,8.763839,7.044752,-4.806982,-3.530539,4.489468,6.456419,0.651498,8.778500,7.754903,-9.051094,6.939687,-8.926906,-4.585300,-6.371116,-0.945398,9.961376,-8.647595,-0.157023,9.154022,-3.875447,-7.754829,-5.469540,-1.718630,-8.119604,8.555872,-2.513931,3.095528,-0.852626,2.894853,6.836404,7.999910,8.300924,0.053304,5.556720,-7.813991,1.621413,1.381850,-7.511615,-2.410193,3.161177,-4.739343,-7.539134,5.820245,3.962217,5.154767,-5.550503,9.287765,0.683298,5.123857,-8.138438,-1.876020,4.119739,2.497357,5.499941,-7.497056,5.994774,6.650508,-6.694606,-3.840682,2.581909,-1.831528,6.778583,-5.777371,-3.090894,8.189268,6.013193,4.087870,6.484453,4.399621,-7.862959,-9.089571,-0.571255,7.922685,-9.785654,-5.579614,-5.326556,3.326448,5.536984,-1.325411,-3.801530,-8.800181,7.817069,-2.879704,-5.718787,-2.470687,6.762605,-8.166226,-6.142314,-0.188394,-6.990332,-7.986087,4.718381,-9.936712,2.689255,-3.802652,-9.120487,-5.739904,-8.641490,-9.678159,-0.110313,1.421923,4.435912,1.407240,-5.253139,-1.772869,-0.708988,9.732594,3.338017,-1.557414,-9.446085,-9.314502,5.243137,-4.377108,2.063570,-4.102180,2.104019,3.896840,-6.345525,-8.358443,-5.310159,9.934929,-7.373217,-1.488663,-4.037256,-6.316743,6.923364,4.256941,0.121496,9.453496,-3.694331,-1.986291,1.485628,8.900980,-5.039058,-8.389314,-5.544662,-0.362246,-1.950676,-3.470673,4.570175,7.810958,4.989050,-6.102533,6.751813,7.859910,6.163447,5.275298,4.528630,-9.715997,3.382119,-1.160720,-0.797786,-3.514904,2.130324,0.198520,5.319745,-8.753848,6.507127,-7.072144,-0.682010,3.967184,8.717143,-9.035759,8.691224,3.790533,-9.653687,-8.470359,-4.808743,5.332392,-6.558723,-6.141494,-1.003532,-2.450075,5.104183,-7.498225,4.204915,-6.202132,-8.396360,9.734225,9.521909,-4.502840,4.289323,4.961609,4.070890,6.501111,9.782429,-2.728088,-8.857325,-4.841099,1.431814,3.693377,-2.923258,3.681854,3.151717,-1.186702,2.439860,-9.104815,6.645081,-8.542082,-0.722977,-5.520668,-6.954319,3.695254,-7.609466,-2.909768,-1.191272,-4.389293,3.056144,-7.399172,-4.560886,-8.248190,7.841362,-2.166472,-9.471566,-4.040050,7.130793,-5.139070,2.418878,-4.462221,2.015258,9.978055,5.973146,-4.333304,5.875502,6.418801,4.713160,-1.346989,-6.452660,-0.096383,1.816206,8.765276,3.825686,-4.799271,-7.094124,-2.930183,-9.659227,6.797295,1.446390,-4.009165,-3.102310,0.779715,1.659549,9.215106,-7.685715,-7.774584,-5.250075,-4.144063,-5.447224,-4.161203,-5.316388,-9.706221,-6.489565,-1.495283,-8.415663,-4.060402,-7.762243,-0.800106,8.113966,8.830516,9.416421,-7.749214,5.073605,-5.505803,2.833309,-0.044200,1.612001,-8.616782,8.882800,-8.390274,-2.710518,-3.338882,-9.759909,-8.232589,-6.251829,7.489442,-3.315010,6.358321,9.894661,1.525779,-3.032301,-0.194328,-1.355782,0.056522,9.883949,9.253987,3.130373,-2.176921,8.745476,8.885661,-5.857949,5.928632,-3.643980,-1.525821,-5.048074,2.297346,-2.018442,8.059317,-2.506861,-1.282219,-3.722056,5.429129,1.359827,1.280350,4.544540,6.526495,0.457369,-5.905627,2.672604,6.607361,-1.357545,5.251109,-0.302782,7.433312,0.446263,-9.985801,-2.704007,9.178496,2.048132,-9.675421,-6.388636,-8.539062,-5.088291,7.896978,-2.154275,-0.433455,4.661819,6.263567,-2.329687,4.583290,-9.047238,7.413778,0.942404,-6.778738,2.638591,5.943700,-1.846921,5.831477,-4.163160,8.048197,-9.674857,8.414188,7.138254,9.538780,-6.682780,5.368127,2.757569,3.092474,-9.389310,2.349285,-3.300479,1.487608,5.717082,9.259226,6.507125,-6.538923,-9.555164,-2.701842,-5.593860,8.833314,-3.602465,3.094923,5.248210,-2.201544,-8.639481,9.836191,0.087952,-7.286915,-1.868546,-5.719056,-6.813266,6.933586,0.727025,-6.135860,6.964297,-6.101073,-5.918369,5.891381,-6.456222,2.768735,-9.252377,0.490094,1.409594,-2.279382,9.760197,-5.488460,9.146169,9.350295,0.887831,-7.309965,4.943700,-8.934229,-4.051012,-0.473109,8.431419,2.541944,-6.006428,3.914942,-2.262021,8.983376,8.108083,7.413559,5.309292,4.512689,-1.644751,-6.112819,-5.824585,-1.066938,-9.987027,8.405493,-2.781235,3.473381,2.567498,1.332809,-5.068243,0.480350,-1.173376,-8.992027,5.382735,-5.744881,2.163369,-1.790430,1.068772,-6.387464,9.497973,0.507156,7.539975,-2.954295,-9.417906,-2.165146,2.730750,-2.561969,8.467519,5.101474,-9.443686,-6.884175,-7.192149,4.412306,4.248458,-5.453315,8.915319,6.715075,-2.946221,9.533364,9.360842,-8.989346,6.705575,-4.686339,0.413361,-0.402124,3.395003,-3.050531,1.079060,5.946660,6.333786,3.421516,1.742642,1.281188,-1.200053,-4.341769,9.493108,-6.198074,5.164136,8.336855,8.864087,-0.261267,-1.884817,-5.964538,-9.929117,5.835019,6.494854,-8.584579,9.216537,6.320922,-5.630938,2.816572,-5.966558,9.294564,-0.993209,-9.439097,-6.118569,-7.135832,0.356836,-6.001936,-1.816929,-2.489360,-8.705069,-8.308168,-2.177875,2.239391,-4.876032], dtype='float64')
module1.set_input('var_12347', input_12347)
input_12405= np.array([True,False,True,True,False,True,True,True,False,True,False,False,True,False,True,True,True,True,False,False,False,True,True,True,False,False,False,True,True,True,False,True,True,False,False,True,True,True,False,True,False,False,True,True,False,True,False,True,False,False,False,True,True,True,False,True,True,True,True,False,False,True,True,True,True,False,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False,True,False,False,False,False,True,True,True,False,True,True,False,True,False,True,True,False,False,False,True,False,False,False,True,False,True,False,False,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,True,True,False,False,True,False,False,False,False,True,False,True,True,False,True,True,False,False,True,False,True,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,True,True,False,False,False,True,False,False,False,False,False,False,False,False,False,False,True,False,False,True,False,False,True,True,True,True,False,False,False,True,True,True,False,False,True,True,True,True,True,False,False,True,False,False,True,False,False,False,False,False,True,False,False,True,False,True,False,False,True,False,False,True,True,False,True,True,True,False,False,False,False,False,False,False,True,True,False,True,False,False,False,True,True,False,False,True,False,False,True,True,False,True,False,False,False,True,True,True,False,True,False,False,False,False,True,True,True,True,False,True,False,False,True,True,True,True,False,True,False,True,False,False,True,True,False,True,False,True,False,False,True,False,True,True,False,False,False,False,True,False,True,True,True,False,False,False,False,False,True,False,False,True,False,True,False,True,False,True,False,False,True,True,True,False,False,True,False,False,True,False,True,True,True,False,True,False,False,True,False,True,True,False,False,False,True,True,True,True,False,True,False,True,True,True,False,True,False,False,False,False,False,True,True,False,True,False,False,True,False,False,False,True,True,False,True,False,True,False,False,True,False,False,True,True,True,True,False,True,True,False,True,False,True,False,False,False,True,False,True,True,False,True,False,True,False,False,False,True,False,False,True,False,False,False,True,True,True,False,False,False,False,False,False,False,False,False,False,True,False,False,False,True,True,True,False,True,True,False,True,True,False,False,False,False,False,True,True,True,True,False,True,False,False,False,False,False,False,False,False,True,False,False,False,False,True,False,True,False,True,False,False,True,False,False,False,False,True,True,True,True,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,False,True,True,False,False,False,False,True,False,False,True,True,False,True,False,True,False,True,False,False,False,True,False,False,False,False,False,False,False,True,False,False,False,False,True,False,False,True,True,False,False,True,True,False,False,False,True,False,True,True,False,False,False,False,False,False,False,False,True,True,True,True,True,True,True,False,True,True,False,True,False,False,False,True,False,False,True,True,False,True,False,True,True,False,True,True,False,False,True,True,True,True,True,False,False,False,True,False,False,True,True,False,True,True,True,True,True,True,False,True,False,False,False,True,False,False,False,False,False,True,False,True,False,True,True,True,True,False,True,True,True,False,True,False,True,True,True,False,False,True,True,False,True,False,True,True,False,True,False,False,False,False,True,True,True,False,False,False,True,True,False,False,True,True,True,False,False,False,False,False,False,True,False,True,True,True,True,True,False,True,True,True,True,False,False,False,True,False,False,False,True,False,False,False,False,True,False,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,False,False,False,False,False,True,False,True,True,True,True,False,True,True,True,True,False,True,True,True,True,True,False,True,False,True,True,False,True,True,False,True,True,True,False,False,False,False,True,False,False,False,False,True,False,True,True,False,True,False,True,False,True,True,True,True,True,True,False,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,True,False,False,True,False,False,True,False,True,False,False,True,True,False,True,False,False,True,True,True,True,False,False,False,False,True,True,True,True,True,False,True,True,False,False,True,False,True,True,False,False,True,True,True,True,True,True,True,False,False,True,True,False,True,False,False,False,True,True,True,False,True,False,True,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,True,False,True,False,False,False,False,False,False,True,False,False,True,True,False,False,True,True,True,False,False,True,False,False,False,False,False,True,True,False,False,False,True,True,True,True,False,True,False,False,True,False,False,False,True,True,True,True,False,False,True,False,True,True,True,True,False,True,True,True,True,True,False,False,False,True,False,False,False,False,True,True,False,True,False,True,False,True,False,True,True,True,True,False,True,False,True,True,True,False,False,True,True,False,True,False,True,True,False,False,True,True,True,True,True,True,True,True,False,True,False,True,True,False,True,False,False,True,True,False,True,True,True,True,False,False,True,True,False,True,True,True,True,True,True,False,False,False,True,True,True,False,False,False,False,False,False,False,True,True,False,False,True,True,True,True,False,False,False,False,False,False,True,True,True,False,True,True,False,False,False,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,False,True,False,True,True,False,True,False,True,False,True,False,True,True,True,False,True,True,True,False,False,False,True,True,False,True,False,False,True,True,False,True,False,True,False,True,True,True], dtype='bool')
module1.set_input('var_12405', input_12405)
module1.set_input(**params)
module1.run()
res2 = intrp2.evaluate()(input_12347, input_12405, )
res3 = intrp3.evaluate()(input_12347, input_12405, )
res4 = intrp4.evaluate()(input_12347, input_12405, )
res2 = vmobj_to_list(res2)
res3 = vmobj_to_list(res3)
res4 = vmobj_to_list(res4)
res1_0 = module1.get_output(0).asnumpy()
res2_0 = res2[0].asnumpy()
res3_0 = res3[0].asnumpy()
res4_0 = res4[0].asnumpy()
np.testing.assert_allclose(res1_0 ,res2_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_0 ,res3_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_0 ,res4_0, atol=1e-3, rtol=1e-3)
(res1_0 == res2_0).all()
(res1_0 == res3_0).all()
(res1_0 == res4_0).all()
res1_1 = module1.get_output(1).asnumpy()
res2_1 = res2[1].asnumpy()
res3_1 = res3[1].asnumpy()
res4_1 = res4[1].asnumpy()
np.testing.assert_allclose(res1_1 ,res2_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_1 ,res3_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_1 ,res4_1, atol=1e-3, rtol=1e-3)
(res1_1 == res2_1).all()
(res1_1 == res3_1).all()
(res1_1 == res4_1).all()
res1_2 = module1.get_output(2).asnumpy()
res2_2 = res2[2].asnumpy()
res3_2 = res3[2].asnumpy()
res4_2 = res4[2].asnumpy()
np.testing.assert_allclose(res1_2 ,res2_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_2 ,res3_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_2 ,res4_2, atol=1e-3, rtol=1e-3)
(res1_2 == res2_2).all()
(res1_2 == res3_2).all()
(res1_2 == res4_2).all()
res1_3 = module1.get_output(3).asnumpy()
res2_3 = res2[3].asnumpy()
res3_3 = res3[3].asnumpy()
res4_3 = res4[3].asnumpy()
np.testing.assert_allclose(res1_3 ,res2_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_3 ,res3_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_3 ,res4_3, atol=1e-3, rtol=1e-3)
(res1_3 == res2_3).all()
(res1_3 == res3_3).all()
(res1_3 == res4_3).all()
res1_4 = module1.get_output(4).asnumpy()
res2_4 = res2[4].asnumpy()
res3_4 = res3[4].asnumpy()
res4_4 = res4[4].asnumpy()
np.testing.assert_allclose(res1_4 ,res2_4, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_4 ,res3_4, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res1_4 ,res4_4, atol=1e-3, rtol=1e-3)
(res1_4 == res2_4).all()
(res1_4 == res3_4).all()
(res1_4 == res4_4).all()
module5.set_input('var_12347', input_12347)
module5.set_input('var_12405', input_12405)
module5.set_input(**params)
module5.run()
res6 = intrp6.evaluate()(input_12347, input_12405, )
res7 = intrp7.evaluate()(input_12347, input_12405, )
res8 = intrp8.evaluate()(input_12347, input_12405, )
res6 = vmobj_to_list(res6)
res7 = vmobj_to_list(res7)
res8 = vmobj_to_list(res8)
res5_0 = module5.get_output(0).asnumpy()
res6_0 = res6[0].asnumpy()
res7_0 = res7[0].asnumpy()
res8_0 = res8[0].asnumpy()
np.testing.assert_allclose(res5_0 ,res6_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_0 ,res7_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_0 ,res8_0, atol=1e-3, rtol=1e-3)
(res5_0 == res6_0).all()
(res5_0 == res7_0).all()
(res5_0 == res8_0).all()
res5_1 = module5.get_output(1).asnumpy()
res6_1 = res6[1].asnumpy()
res7_1 = res7[1].asnumpy()
res8_1 = res8[1].asnumpy()
np.testing.assert_allclose(res5_1 ,res6_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_1 ,res7_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_1 ,res8_1, atol=1e-3, rtol=1e-3)
(res5_1 == res6_1).all()
(res5_1 == res7_1).all()
(res5_1 == res8_1).all()
res5_2 = module5.get_output(2).asnumpy()
res6_2 = res6[2].asnumpy()
res7_2 = res7[2].asnumpy()
res8_2 = res8[2].asnumpy()
np.testing.assert_allclose(res5_2 ,res6_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_2 ,res7_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_2 ,res8_2, atol=1e-3, rtol=1e-3)
(res5_2 == res6_2).all()
(res5_2 == res7_2).all()
(res5_2 == res8_2).all()
res5_3 = module5.get_output(3).asnumpy()
res6_3 = res6[3].asnumpy()
res7_3 = res7[3].asnumpy()
res8_3 = res8[3].asnumpy()
np.testing.assert_allclose(res5_3 ,res6_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_3 ,res7_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_3 ,res8_3, atol=1e-3, rtol=1e-3)
(res5_3 == res6_3).all()
(res5_3 == res7_3).all()
(res5_3 == res8_3).all()
res5_4 = module5.get_output(4).asnumpy()
res6_4 = res6[4].asnumpy()
res7_4 = res7[4].asnumpy()
res8_4 = res8[4].asnumpy()
np.testing.assert_allclose(res5_4 ,res6_4, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_4 ,res7_4, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res5_4 ,res8_4, atol=1e-3, rtol=1e-3)
(res5_4 == res6_4).all()
(res5_4 == res7_4).all()
(res5_4 == res8_4).all()
module9.set_input('var_12347', input_12347)
module9.set_input('var_12405', input_12405)
module9.set_input(**params)
module9.run()
res10 = intrp10.evaluate()(input_12347, input_12405, )
res11 = intrp11.evaluate()(input_12347, input_12405, )
res12 = intrp12.evaluate()(input_12347, input_12405, )
res10 = vmobj_to_list(res10)
res11 = vmobj_to_list(res11)
res12 = vmobj_to_list(res12)
res9_0 = module9.get_output(0).asnumpy()
res10_0 = res10[0].asnumpy()
res11_0 = res11[0].asnumpy()
res12_0 = res12[0].asnumpy()
np.testing.assert_allclose(res9_0 ,res10_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_0 ,res11_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_0 ,res12_0, atol=1e-3, rtol=1e-3)
(res9_0 == res10_0).all()
(res9_0 == res11_0).all()
(res9_0 == res12_0).all()
res9_1 = module9.get_output(1).asnumpy()
res10_1 = res10[1].asnumpy()
res11_1 = res11[1].asnumpy()
res12_1 = res12[1].asnumpy()
np.testing.assert_allclose(res9_1 ,res10_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_1 ,res11_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_1 ,res12_1, atol=1e-3, rtol=1e-3)
(res9_1 == res10_1).all()
(res9_1 == res11_1).all()
(res9_1 == res12_1).all()
res9_2 = module9.get_output(2).asnumpy()
res10_2 = res10[2].asnumpy()
res11_2 = res11[2].asnumpy()
res12_2 = res12[2].asnumpy()
np.testing.assert_allclose(res9_2 ,res10_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_2 ,res11_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_2 ,res12_2, atol=1e-3, rtol=1e-3)
(res9_2 == res10_2).all()
(res9_2 == res11_2).all()
(res9_2 == res12_2).all()
res9_3 = module9.get_output(3).asnumpy()
res10_3 = res10[3].asnumpy()
res11_3 = res11[3].asnumpy()
res12_3 = res12[3].asnumpy()
np.testing.assert_allclose(res9_3 ,res10_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_3 ,res11_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_3 ,res12_3, atol=1e-3, rtol=1e-3)
(res9_3 == res10_3).all()
(res9_3 == res11_3).all()
(res9_3 == res12_3).all()
res9_4 = module9.get_output(4).asnumpy()
res10_4 = res10[4].asnumpy()
res11_4 = res11[4].asnumpy()
res12_4 = res12[4].asnumpy()
np.testing.assert_allclose(res9_4 ,res10_4, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_4 ,res11_4, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res9_4 ,res12_4, atol=1e-3, rtol=1e-3)
(res9_4 == res10_4).all()
(res9_4 == res11_4).all()
(res9_4 == res12_4).all()
module13.set_input('var_12347', input_12347)
module13.set_input('var_12405', input_12405)
module13.set_input(**params)
module13.run()
res14 = intrp14.evaluate()(input_12347, input_12405, )
res15 = intrp15.evaluate()(input_12347, input_12405, )
res16 = intrp16.evaluate()(input_12347, input_12405, )
res14 = vmobj_to_list(res14)
res15 = vmobj_to_list(res15)
res16 = vmobj_to_list(res16)
res13_0 = module13.get_output(0).asnumpy()
res14_0 = res14[0].asnumpy()
res15_0 = res15[0].asnumpy()
res16_0 = res16[0].asnumpy()
np.testing.assert_allclose(res13_0 ,res14_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_0 ,res15_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_0 ,res16_0, atol=1e-3, rtol=1e-3)
(res13_0 == res14_0).all()
(res13_0 == res15_0).all()
(res13_0 == res16_0).all()
res13_1 = module13.get_output(1).asnumpy()
res14_1 = res14[1].asnumpy()
res15_1 = res15[1].asnumpy()
res16_1 = res16[1].asnumpy()
np.testing.assert_allclose(res13_1 ,res14_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_1 ,res15_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_1 ,res16_1, atol=1e-3, rtol=1e-3)
(res13_1 == res14_1).all()
(res13_1 == res15_1).all()
(res13_1 == res16_1).all()
res13_2 = module13.get_output(2).asnumpy()
res14_2 = res14[2].asnumpy()
res15_2 = res15[2].asnumpy()
res16_2 = res16[2].asnumpy()
np.testing.assert_allclose(res13_2 ,res14_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_2 ,res15_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_2 ,res16_2, atol=1e-3, rtol=1e-3)
(res13_2 == res14_2).all()
(res13_2 == res15_2).all()
(res13_2 == res16_2).all()
res13_3 = module13.get_output(3).asnumpy()
res14_3 = res14[3].asnumpy()
res15_3 = res15[3].asnumpy()
res16_3 = res16[3].asnumpy()
np.testing.assert_allclose(res13_3 ,res14_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_3 ,res15_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_3 ,res16_3, atol=1e-3, rtol=1e-3)
(res13_3 == res14_3).all()
(res13_3 == res15_3).all()
(res13_3 == res16_3).all()
res13_4 = module13.get_output(4).asnumpy()
res14_4 = res14[4].asnumpy()
res15_4 = res15[4].asnumpy()
res16_4 = res16[4].asnumpy()
np.testing.assert_allclose(res13_4 ,res14_4, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_4 ,res15_4, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res13_4 ,res16_4, atol=1e-3, rtol=1e-3)
(res13_4 == res14_4).all()
(res13_4 == res15_4).all()
(res13_4 == res16_4).all()
module17.set_input('var_12347', input_12347)
module17.set_input('var_12405', input_12405)
module17.set_input(**params)
module17.run()
res18 = intrp18.evaluate()(input_12347, input_12405, )
res19 = intrp19.evaluate()(input_12347, input_12405, )
res20 = intrp20.evaluate()(input_12347, input_12405, )
res18 = vmobj_to_list(res18)
res19 = vmobj_to_list(res19)
res20 = vmobj_to_list(res20)
res17_0 = module17.get_output(0).asnumpy()
res18_0 = res18[0].asnumpy()
res19_0 = res19[0].asnumpy()
res20_0 = res20[0].asnumpy()
np.testing.assert_allclose(res17_0 ,res18_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_0 ,res19_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_0 ,res20_0, atol=1e-3, rtol=1e-3)
(res17_0 == res18_0).all()
(res17_0 == res19_0).all()
(res17_0 == res20_0).all()
res17_1 = module17.get_output(1).asnumpy()
res18_1 = res18[1].asnumpy()
res19_1 = res19[1].asnumpy()
res20_1 = res20[1].asnumpy()
np.testing.assert_allclose(res17_1 ,res18_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_1 ,res19_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_1 ,res20_1, atol=1e-3, rtol=1e-3)
(res17_1 == res18_1).all()
(res17_1 == res19_1).all()
(res17_1 == res20_1).all()
res17_2 = module17.get_output(2).asnumpy()
res18_2 = res18[2].asnumpy()
res19_2 = res19[2].asnumpy()
res20_2 = res20[2].asnumpy()
np.testing.assert_allclose(res17_2 ,res18_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_2 ,res19_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_2 ,res20_2, atol=1e-3, rtol=1e-3)
(res17_2 == res18_2).all()
(res17_2 == res19_2).all()
(res17_2 == res20_2).all()
res17_3 = module17.get_output(3).asnumpy()
res18_3 = res18[3].asnumpy()
res19_3 = res19[3].asnumpy()
res20_3 = res20[3].asnumpy()
np.testing.assert_allclose(res17_3 ,res18_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_3 ,res19_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_3 ,res20_3, atol=1e-3, rtol=1e-3)
(res17_3 == res18_3).all()
(res17_3 == res19_3).all()
(res17_3 == res20_3).all()
res17_4 = module17.get_output(4).asnumpy()
res18_4 = res18[4].asnumpy()
res19_4 = res19[4].asnumpy()
res20_4 = res20[4].asnumpy()
np.testing.assert_allclose(res17_4 ,res18_4, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_4 ,res19_4, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res17_4 ,res20_4, atol=1e-3, rtol=1e-3)
(res17_4 == res18_4).all()
(res17_4 == res19_4).all()
(res17_4 == res20_4).all()
module21.set_input('var_12347', input_12347)
module21.set_input('var_12405', input_12405)
module21.set_input(**params)
module21.run()
res22 = intrp22.evaluate()(input_12347, input_12405, )
res23 = intrp23.evaluate()(input_12347, input_12405, )
res24 = intrp24.evaluate()(input_12347, input_12405, )
res22 = vmobj_to_list(res22)
res23 = vmobj_to_list(res23)
res24 = vmobj_to_list(res24)
res21_0 = module21.get_output(0).asnumpy()
res22_0 = res22[0].asnumpy()
res23_0 = res23[0].asnumpy()
res24_0 = res24[0].asnumpy()
np.testing.assert_allclose(res21_0 ,res22_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_0 ,res23_0, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_0 ,res24_0, atol=1e-3, rtol=1e-3)
(res21_0 == res22_0).all()
(res21_0 == res23_0).all()
(res21_0 == res24_0).all()
res21_1 = module21.get_output(1).asnumpy()
res22_1 = res22[1].asnumpy()
res23_1 = res23[1].asnumpy()
res24_1 = res24[1].asnumpy()
np.testing.assert_allclose(res21_1 ,res22_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_1 ,res23_1, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_1 ,res24_1, atol=1e-3, rtol=1e-3)
(res21_1 == res22_1).all()
(res21_1 == res23_1).all()
(res21_1 == res24_1).all()
res21_2 = module21.get_output(2).asnumpy()
res22_2 = res22[2].asnumpy()
res23_2 = res23[2].asnumpy()
res24_2 = res24[2].asnumpy()
np.testing.assert_allclose(res21_2 ,res22_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_2 ,res23_2, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_2 ,res24_2, atol=1e-3, rtol=1e-3)
(res21_2 == res22_2).all()
(res21_2 == res23_2).all()
(res21_2 == res24_2).all()
res21_3 = module21.get_output(3).asnumpy()
res22_3 = res22[3].asnumpy()
res23_3 = res23[3].asnumpy()
res24_3 = res24[3].asnumpy()
np.testing.assert_allclose(res21_3 ,res22_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_3 ,res23_3, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_3 ,res24_3, atol=1e-3, rtol=1e-3)
(res21_3 == res22_3).all()
(res21_3 == res23_3).all()
(res21_3 == res24_3).all()
res21_4 = module21.get_output(4).asnumpy()
res22_4 = res22[4].asnumpy()
res23_4 = res23[4].asnumpy()
res24_4 = res24[4].asnumpy()
np.testing.assert_allclose(res21_4 ,res22_4, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_4 ,res23_4, atol=1e-3, rtol=1e-3)
np.testing.assert_allclose(res21_4 ,res24_4, atol=1e-3, rtol=1e-3)
(res21_4 == res22_4).all()
(res21_4 == res23_4).all()
(res21_4 == res24_4).all()

'''21: TVMFuncCall
20: _ZNSt17_Function_handlerIFvN3tvm7runtime7TVM
19: tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}::operator()(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*) const
18: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, tvm::runtime::String const&)
17: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule)
16: tvm::transform::Pass::operator()(tvm::IRModule) const
15: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
14: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
13: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
12: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
11: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
10: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
9: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
8: tvm::transform::Pass::operator()(tvm::IRModule) const
7: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
6: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
5: tvm::transform::Pass::operator()(tvm::IRModule) const
4: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
3: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::InferType()::{lambda(tvm::IRModule, tvm::transform::PassContext const&)#1}>(tvm::relay::transform::InferType()::{lambda(tvm::IRModule, tvm::transform::PassContext const&)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
1: tvm::relay::transform::InferType()::{lambda(tvm::IRModule, tvm::transform::PassContext const&)#1}::operator()(tvm::IRModule, tvm::transform::PassContext const&) const [clone .isra.813]
0: tvm::DiagnosticContext::Render()

'''